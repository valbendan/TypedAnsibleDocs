{
  "arista.eos.eos_acl_interfaces": {
    "doc": {
      "description": "This module manages adding and removing Access Control Lists (ACLs) from interfaces on devices running EOS software.",
      "has_action": true,
      "options": {
        "config": {
          "aliases": [],
          "description": "A dictionary of ACL options for interfaces.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "access_groups": {
              "aliases": [],
              "description": "Specifies ACLs attached to the interfaces.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "acls": {
                  "aliases": [],
                  "description": "Specifies the ACLs for the provided AFI.",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "direction": {
                      "aliases": [],
                      "description": "Specifies the direction of packets that the ACL will be applied on.",
                      "type": "str",
                      "required": true,
                      "choices": [
                        "in",
                        "out"
                      ],
                      "suboptions": {}
                    },
                    "name": {
                      "aliases": [],
                      "description": "Specifies the name of the IPv4/IPv4 ACL for the interface.",
                      "type": "str",
                      "required": true,
                      "suboptions": {}
                    }
                  }
                },
                "afi": {
                  "aliases": [],
                  "description": "Specifies the AFI for the ACL(s) to be configured on this interface.",
                  "type": "str",
                  "required": true,
                  "choices": [
                    "ipv4",
                    "ipv6"
                  ],
                  "suboptions": {}
                }
              }
            },
            "name": {
              "aliases": [],
              "description": "Name/Identifier for the interface.",
              "type": "str",
              "required": true,
              "suboptions": {}
            }
          }
        },
        "running_config": {
          "aliases": [],
          "description": "The module, by default, will connect to the remote device and retrieve the current running-config to use as a base for comparing against the contents of source. There are times when it is not desirable to have the task get the current running-config for every task in a playbook.  The I(running_config) argument allows the implementer to pass in the configuration to use as the base config for comparison. This value of this option should be the output received from device by executing command",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The state the configuration should be left in.",
          "default": "merged",
          "type": "str",
          "required": false,
          "choices": [
            "merged",
            "replaced",
            "overridden",
            "deleted",
            "gathered",
            "parsed",
            "rendered"
          ],
          "suboptions": {}
        }
      },
      "short_description": "ACL interfaces resource module",
      "version_added": "1.0.0"
    },
    "examples": "\n# Using Merged\n\n# Before state:\n# -------------\n#\n# eos#sh running-config | include interface|access-group\n# interface Ethernet1\n# interface Ethernet2\n# interface Ethernet3\n\n- name: Merge module attributes of given access-groups\n  arista.eos.eos_acl_interfaces:\n    config:\n    - name: Ethernet2\n      access_groups:\n      - afi: ipv4\n        acls:\n          name: acl01\n          direction: in\n      - afi: ipv6\n        acls:\n          name: acl03\n          direction: out\n    state: merged\n\n# Commands Fired:\n# ---------------\n#\n# interface Ethernet2\n# ip access-group acl01 in\n# ipv6 access-group acl03 out\n\n# After state:\n# -------------\n#\n# eos#sh running-config | include interface| access-group\n# interface Loopback888\n# interface Ethernet1\n# interface Ethernet2\n#  ip access-group acl01 in\n#  ipv6 access-group acl03 out\n# interface Ethernet3\n\n\n# Using Replaced\n\n# Before state:\n# -------------\n#\n# eos#sh running-config | include interface|access-group\n# interface Ethernet1\n# interface Ethernet2\n#  ip access-group acl01 in\n#  ipv6 access-group acl03 out\n# interface Ethernet3\n#  ip access-group acl01 in\n\n- name: Replace module attributes of given access-groups\n  arista.eos.eos_acl_interfaces:\n    config:\n    - name: Ethernet2\n      access_groups:\n      - afi: ipv4\n        acls:\n          name: acl01\n          direction: out\n    state: replaced\n\n# Commands Fired:\n# ---------------\n#\n# interface Ethernet2\n# no ip access-group acl01 in\n# no ipv6 access-group acl03 out\n# ip access-group acl01 out\n\n# After state:\n# -------------\n#\n# eos#sh running-config | include interface| access-group\n# interface Loopback888\n# interface Ethernet1\n# interface Ethernet2\n#  ip access-group acl01 out\n# interface Ethernet3\n#  ip access-group acl01 in\n\n\n# Using Overridden\n\n# Before state:\n# -------------\n#\n# eos#sh running-config | include interface|access-group\n# interface Ethernet1\n# interface Ethernet2\n#  ip access-group acl01 in\n#  ipv6 access-group acl03 out\n# interface Ethernet3\n#  ip access-group acl01 in\n\n- name: Override module attributes of given access-groups\n  arista.eos.eos_acl_interfaces:\n    config:\n    - name: Ethernet2\n      access_groups:\n      - afi: ipv4\n        acls:\n          name: acl01\n          direction: out\n    state: overridden\n\n# Commands Fired:\n# ---------------\n#\n# interface Ethernet2\n# no ip access-group acl01 in\n# no ipv6 access-group acl03 out\n# ip access-group acl01 out\n# interface Ethernet3\n# no ip access-group acl01 in\n\n# After state:\n# -------------\n#\n# eos#sh running-config | include interface| access-group\n# interface Loopback888\n# interface Ethernet1\n# interface Ethernet2\n#  ip access-group acl01 out\n# interface Ethernet3\n\n\n# Using Deleted\n\n# Before state:\n# -------------\n#\n# eos#sh running-config | include interface|access-group\n# interface Ethernet1\n# interface Ethernet2\n#  ip access-group acl01 in\n#  ipv6 access-group acl03 out\n# interface Ethernet3\n#  ip access-group acl01 out\n\n- name: Delete module attributes of given access-groups\n  arista.eos.eos_acl_interfaces:\n    config:\n    - name: Ethernet2\n      access_groups:\n      - afi: ipv4\n        acls:\n          name: acl01\n          direction: in\n      - afi: ipv6\n        acls:\n          name: acl03\n          direction: out\n    state: deleted\n\n# Commands Fired:\n# ---------------\n#\n# interface Ethernet2\n# no ip access-group acl01 in\n# no ipv6 access-group acl03 out\n\n# After state:\n# -------------\n#\n# eos#sh running-config | include interface| access-group\n# interface Loopback888\n# interface Ethernet1\n# interface Ethernet2\n# interface Ethernet3\n#  ip access-group acl01 out\n\n\n# Before state:\n# -------------\n#\n# eos#sh running-config | include interface| access-group\n# interface Ethernet1\n# interface Ethernet2\n#  ip access-group acl01 in\n#  ipv6 access-group acl03 out\n# interface Ethernet3\n#  ip access-group acl01 out\n\n- name: Delete module attributes of given access-groups from ALL Interfaces\n  arista.eos.eos_acl_interfaces:\n    config:\n    state: deleted\n\n# Commands Fired:\n# ---------------\n#\n# interface Ethernet2\n# no ip access-group acl01 in\n# no ipv6 access-group acl03 out\n# interface Ethernet3\n# no ip access-group acl01 out\n\n# After state:\n# -------------\n#\n# eos#sh running-config | include interface| access-group\n# interface Loopback888\n# interface Ethernet1\n# interface Ethernet2\n# interface Ethernet3\n\n# Before state:\n# -------------\n#\n# eos#sh running-config | include interface| access-group\n# interface Ethernet1\n# interface Ethernet2\n#  ip access-group acl01 in\n#  ipv6 access-group acl03 out\n# interface Ethernet3\n#  ip access-group acl01 out\n\n- name: Delete acls under afi\n  arista.eos.eos_acl_interfaces:\n    config:\n    - name: Ethernet3\n      access_groups:\n      - afi: ipv4\n    - name: Ethernet2\n      access_groups:\n      - afi: ipv6\n    state: deleted\n\n# Commands Fired:\n# ---------------\n#\n# interface Ethernet2\n# no ipv6 access-group acl03 out\n# interface Ethernet3\n# no ip access-group acl01 out\n\n# After state:\n# -------------\n#\n# eos#sh running-config | include interface| access-group\n# interface Loopback888\n# interface Ethernet1\n# interface Ethernet2\n#   ip access-group acl01 in\n# interface Ethernet3\n\n\n"
  },
  "arista.eos.eos_acls": {
    "doc": {
      "description": "This module manages the IP access-list attributes of Arista EOS interfaces.",
      "has_action": true,
      "notes": "Tested against Arista EOS 4.24.6F",
      "options": {
        "config": {
          "aliases": [],
          "description": "A dictionary of IP access-list options",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "acls": {
              "aliases": [],
              "description": "A list of Access Control Lists (ACL).",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "aces": {
                  "aliases": [],
                  "description": "Filtering data",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "destination": {
                      "aliases": [],
                      "description": "The packet's destination address",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "address": {
                          "aliases": [],
                          "description": "dotted decimal notation of IP address",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "any": {
                          "aliases": [],
                          "description": "Rule matches all source addresses",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "host": {
                          "aliases": [],
                          "description": "Host IP address",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "port_protocol": {
                          "aliases": [],
                          "description": "Specify dest port/protocol, along with operator . (comes with tcp/udp).",
                          "type": "dict",
                          "required": false,
                          "suboptions": {}
                        },
                        "subnet_address": {
                          "aliases": [],
                          "description": "A subnet address",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "wildcard_bits": {
                          "aliases": [],
                          "description": "Source wildcard bits",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "fragment_rules": {
                      "aliases": [],
                      "description": "Add fragment rules",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "fragments": {
                      "aliases": [],
                      "description": "Match non-head fragment packets",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "grant": {
                      "aliases": [],
                      "description": "Action to be applied on the rule",
                      "type": "str",
                      "required": false,
                      "choices": [
                        "permit",
                        "deny"
                      ],
                      "suboptions": {}
                    },
                    "hop_limit": {
                      "aliases": [],
                      "description": "Hop limit value.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {}
                    },
                    "line": {
                      "aliases": [
                        "ace"
                      ],
                      "description": "For fact gathering, any ACE that is not fully parsed, while show up as a value of this attribute.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "log": {
                      "aliases": [],
                      "description": "Log matches against this rule",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "protocol": {
                      "aliases": [],
                      "description": "Specify the protocol to match.\nRefer to vendor documentation for valid values.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "protocol_options": {
                      "aliases": [],
                      "description": "All the possible sub options for the protocol chosen.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "icmp": {
                          "aliases": [],
                          "description": "Internet Control Message Protocol settings.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "administratively_prohibited": {
                              "aliases": [],
                              "description": "Administratively prohibited",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "alternate_address": {
                              "aliases": [],
                              "description": "Alternate address",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "conversion_error": {
                              "aliases": [],
                              "description": "Datagram conversion",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "dod_host_prohibited": {
                              "aliases": [],
                              "description": "Host prohibited",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "dod_net_prohibited": {
                              "aliases": [],
                              "description": "Net prohibited",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "echo": {
                              "aliases": [],
                              "description": "Echo (ping)",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "echo_reply": {
                              "aliases": [],
                              "description": "Echo reply",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "general_parameter_problem": {
                              "aliases": [],
                              "description": "Parameter problem",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "host_isolated": {
                              "aliases": [],
                              "description": "Host isolated",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "host_precedence_unreachable": {
                              "aliases": [],
                              "description": "Host unreachable for precedence",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "host_redirect": {
                              "aliases": [],
                              "description": "Host redirect",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "host_tos_redirect": {
                              "aliases": [],
                              "description": "Host redirect for TOS",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "host_tos_unreachable": {
                              "aliases": [],
                              "description": "Host unreachable for TOS",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "host_unknown": {
                              "aliases": [],
                              "description": "Host unknown",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "host_unreachable": {
                              "aliases": [],
                              "description": "Host unreachable",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "information_reply": {
                              "aliases": [],
                              "description": "Information replies",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "information_request": {
                              "aliases": [],
                              "description": "Information requests",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "mask_reply": {
                              "aliases": [],
                              "description": "Mask replies",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "mask_request": {
                              "aliases": [],
                              "description": "Mask requests",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "message_code": {
                              "aliases": [],
                              "description": "ICMP message code",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "message_num": {
                              "aliases": [],
                              "description": "icmp msg type number.",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "message_type": {
                              "aliases": [],
                              "description": "ICMP message type",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "mobile_redirect": {
                              "aliases": [],
                              "description": "Mobile host redirect",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "net_redirect": {
                              "aliases": [],
                              "description": "Network redirect",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "net_tos_redirect": {
                              "aliases": [],
                              "description": "Net redirect for TOS",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "net_tos_unreachable": {
                              "aliases": [],
                              "description": "Network unreachable for TOS",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "net_unreachable": {
                              "aliases": [],
                              "description": "Net unreachable",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "network_unknown": {
                              "aliases": [],
                              "description": "Network unknown",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "no_room_for_option": {
                              "aliases": [],
                              "description": "Parameter required but no room",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "option_missing": {
                              "aliases": [],
                              "description": "Parameter required but not present",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "packet_too_big": {
                              "aliases": [],
                              "description": "Fragmentation needed and DF set",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "parameter_problem": {
                              "aliases": [],
                              "description": "All parameter problems",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "port_unreachable": {
                              "aliases": [],
                              "description": "Port unreachable",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "precedence_unreachable": {
                              "aliases": [],
                              "description": "Precedence cutoff",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "protocol_unreachable": {
                              "aliases": [],
                              "description": "Protocol unreachable",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "reassembly_timeout": {
                              "aliases": [],
                              "description": "Reassembly timeout",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "redirect": {
                              "aliases": [],
                              "description": "All redirects",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "router_advertisement": {
                              "aliases": [],
                              "description": "Router discovery advertisements",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "router_solicitation": {
                              "aliases": [],
                              "description": "Router discovery solicitations",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "source_quench": {
                              "aliases": [],
                              "description": "Source quenches",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "source_route_failed": {
                              "aliases": [],
                              "description": "Source route failed",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "time_exceeded": {
                              "aliases": [],
                              "description": "All time exceededs",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "timestamp_reply": {
                              "aliases": [],
                              "description": "Timestamp replies",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "timestamp_request": {
                              "aliases": [],
                              "description": "Timestamp requests",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "traceroute": {
                              "aliases": [],
                              "description": "Traceroute",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "ttl_exceeded": {
                              "aliases": [],
                              "description": "TTL exceeded",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "unreachable": {
                              "aliases": [],
                              "description": "All unreachables",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "icmpv6": {
                          "aliases": [],
                          "description": "Options for icmpv6.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "address_unreachable": {
                              "aliases": [],
                              "description": "address unreachable",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "beyond_scope": {
                              "aliases": [],
                              "description": "beyond_scope",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "echo_reply": {
                              "aliases": [],
                              "description": "echo_reply",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "echo_request": {
                              "aliases": [],
                              "description": "echo reques",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "erroneous_header": {
                              "aliases": [],
                              "description": "erroneous header",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "fragment_reassembly_exceeded": {
                              "aliases": [],
                              "description": "fragment_reassembly_exceeded",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "hop_limit_exceeded": {
                              "aliases": [],
                              "description": "hop limit exceeded",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "neighbor_advertisement": {
                              "aliases": [],
                              "description": "neighbor advertisement",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "neighbor_solicitation": {
                              "aliases": [],
                              "description": "neighbor_solicitation",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "no_admin": {
                              "aliases": [],
                              "description": "no admin",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "no_route": {
                              "aliases": [],
                              "description": "no route",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "packet_too_big": {
                              "aliases": [],
                              "description": "packet too big",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "parameter_problem": {
                              "aliases": [],
                              "description": "parameter problem",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "port_unreachable": {
                              "aliases": [],
                              "description": "port unreachable",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "redirect_message": {
                              "aliases": [],
                              "description": "redirect message",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "reject_route": {
                              "aliases": [],
                              "description": "reject route",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "router_advertisement": {
                              "aliases": [],
                              "description": "router_advertisement",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "router_solicitation": {
                              "aliases": [],
                              "description": "router_solicitation",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "source_address_failed": {
                              "aliases": [],
                              "description": "source_address_failed",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "source_routing_error": {
                              "aliases": [],
                              "description": "source_routing_error",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "time_exceeded": {
                              "aliases": [],
                              "description": "time_exceeded",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "unreachable": {
                              "aliases": [],
                              "description": "unreachable",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "unrecognized_ipv6_option": {
                              "aliases": [],
                              "description": "unrecognized_ipv6_option",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "unrecognized_next_header": {
                              "aliases": [],
                              "description": "unrecognized_next_header",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "ip": {
                          "aliases": [],
                          "description": "Internet Protocol.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "nexthop_group": {
                              "aliases": [],
                              "description": "Nexthop-group name.",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "ipv6": {
                          "aliases": [],
                          "description": "Internet V6 Protocol.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "nexthop_group": {
                              "aliases": [],
                              "description": "Nexthop-group name.",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "tcp": {
                          "aliases": [],
                          "description": "Options for tcp protocol.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "flags": {
                              "aliases": [],
                              "description": "Match TCP packet flags",
                              "type": "dict",
                              "required": false,
                              "suboptions": {
                                "ack": {
                                  "aliases": [],
                                  "description": "Match on the ACK bit",
                                  "type": "bool",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "established": {
                                  "aliases": [],
                                  "description": "Match established connections",
                                  "type": "bool",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "fin": {
                                  "aliases": [],
                                  "description": "Match on the FIN bit",
                                  "type": "bool",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "psh": {
                                  "aliases": [],
                                  "description": "Match on the PSH bit",
                                  "type": "bool",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "rst": {
                                  "aliases": [],
                                  "description": "Match on the RST bit",
                                  "type": "bool",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "syn": {
                                  "aliases": [],
                                  "description": "Match on the SYN bit",
                                  "type": "bool",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "urg": {
                                  "aliases": [],
                                  "description": "Match on the URG bit",
                                  "type": "bool",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "remark": {
                      "aliases": [],
                      "description": "Specify a comment",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "sequence": {
                      "aliases": [],
                      "description": "sequence number for the ordered list of rules",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "source": {
                      "aliases": [],
                      "description": "The packet's source address",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "address": {
                          "aliases": [],
                          "description": "dotted decimal notation of IP address",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "any": {
                          "aliases": [],
                          "description": "Rule matches all source addresses",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "host": {
                          "aliases": [],
                          "description": "Host IP address",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "port_protocol": {
                          "aliases": [],
                          "description": "Specify source port/protocoli, along with operator. (comes with tcp/udp).",
                          "type": "dict",
                          "required": false,
                          "suboptions": {}
                        },
                        "subnet_address": {
                          "aliases": [],
                          "description": "A subnet address",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "wildcard_bits": {
                          "aliases": [],
                          "description": "Source wildcard bits",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "tracked": {
                      "aliases": [],
                      "description": "Match packets in existing ICMP/UDP/TCP connections",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "ttl": {
                      "aliases": [],
                      "description": "Compares the TTL (time-to-live) value in the packet to a specified value",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "eq": {
                          "aliases": [],
                          "description": "Match a single TTL value",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "gt": {
                          "aliases": [],
                          "description": "Match TTL greater than this number",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "lt": {
                          "aliases": [],
                          "description": "Match TTL lesser than this number",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "neq": {
                          "aliases": [],
                          "description": "Match TTL not equal to this value",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "vlan": {
                      "aliases": [],
                      "description": "Vlan options",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "name": {
                  "aliases": [],
                  "description": "Name of the acl-list",
                  "type": "str",
                  "required": true,
                  "suboptions": {}
                },
                "standard": {
                  "aliases": [],
                  "description": "standard access-list or not",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "afi": {
              "aliases": [],
              "description": "The Address Family Indicator (AFI) for the Access Control Lists (ACL).",
              "type": "str",
              "required": true,
              "choices": [
                "ipv4",
                "ipv6"
              ],
              "suboptions": {}
            }
          }
        },
        "running_config": {
          "aliases": [],
          "description": "This option is used only with state I(parsed).\nThe value of this option should be the output received from the EOS device by executing the command B(show running-config | section access-list).\nThe state I(parsed) reads the configuration from C(running_config) option and transforms it into Ansible structured data as per the resource module's argspec and the value is then returned in the I(parsed) key within the result.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The state the configuration should be left in.",
          "default": "merged",
          "type": "str",
          "required": false,
          "choices": [
            "deleted",
            "merged",
            "overridden",
            "replaced",
            "gathered",
            "rendered",
            "parsed"
          ],
          "suboptions": {}
        }
      },
      "short_description": "ACLs resource module",
      "version_added": "1.0.0"
    },
    "examples": "\n# Using merged\n\n# Before state:\n# -------------\n# show running-config | section access-list\n# ip access-list test1\n#    10 permit ip 10.10.10.0/24 any ttl eq 200\n#    20 permit ip 10.30.10.0/24 host 10.20.10.1\n#    30 deny tcp host 10.10.20.1 eq finger www any syn log\n#    40 permit ip any any\n# ipv6 access-list test2\n#     10 deny icmpv6 any any reject-route hop-limit eq 20\n\n- name: Merge provided configuration with device configuration\n  arista.eos.eos_acls:\n    config:\n    - afi: ipv4\n      acls:\n      - name: test1\n        aces:\n        - sequence: 35\n          grant: deny\n          protocol: ospf\n          source:\n            subnet_address: 20.0.0.0/8\n          destnation:\n            any: true\n    state: merged\n\n# After state:\n# ------------\n#\n# show running-config | section access-list\n# ip access-list test1\n#    10 permit ip 10.10.10.0/24 any ttl eq 200\n#    20 permit ip 10.30.10.0/24 host 10.20.10.1\n#    30 deny tcp host 10.10.20.1 eq finger www any syn log\n#    35 deny ospf 20.0.0.0/8 any\n#    40 permit ip any any\n# ipv6 access-list test2\n#     10 deny icmpv6 any any reject-route hop-limit eq 20\n\n# Using merged\n\n# Before state:\n# -------------\n# show running-config | section access-list\n# ip access-list test1\n#    10 permit ip 10.10.10.0/24 any ttl eq 200\n#    20 permit ip 10.30.10.0/24 host 10.20.10.1\n#    30 deny tcp host 10.10.20.1 eq finger www any syn log\n#    40 permit ip any any\n# ipv6 access-list test2\n#     10 deny icmpv6 any any reject-route hop-limit eq 20\n\n- name: Merge to update the given configuration with an existing ace\n  arista.eos.eos_acls:\n    config:\n    - afi: ipv4\n      acls:\n      - name: test1\n        aces:\n        - sequence: 35\n          log: true\n          ttl:\n            eq: 33\n    state: merged\n\n# After state:\n# ------------\n#\n# show running-config | section access-list\n# ip access-list test1\n#    10 permit ip 10.10.10.0/24 any ttl eq 200\n#    20 permit ip 10.30.10.0/24 host 10.20.10.1\n#    30 deny tcp host 10.10.20.1 eq finger www any syn log\n#    35 deny ospf 20.0.0.0/8 any ttl eq 33 log\n#    40 permit ip any any\n# ipv6 access-list test2\n#     10 deny icmpv6 any any reject-route hop-limit eq 20\n\n# Using replaced\n\n# Before state:\n# -------------\n# show running-config | section access-list\n# ip access-list test1\n#    10 permit ip 10.10.10.0/24 any ttl eq 200\n#    20 permit ip 10.30.10.0/24 host 10.20.10.1\n#    30 deny tcp host 10.10.20.1 eq finger www any syn log\n#    40 permit ip any any\n# !\n# ip access-list test3\n#    10 permit ip 35.33.0.0/16 any log\n# !\n# ipv6 access-list test2\n#     10 deny icmpv6 any any reject-route hop-limit eq 20\n\n\n\n- name: Replace device configuration with provided configuration\n  arista.eos.eos_acls:\n    config:\n    - afi: ipv4\n      acls:\n      - name: test1\n        aces:\n        - sequence: 35\n          grant: permit\n          protocol: ospf\n          source:\n            subnet_address: 20.0.0.0/8\n          destination:\n            any: true\n    state: replaced\n\n# After state:\n# ------------\n#\n# show running-config | section access-list\n# ip access-list test1\n#    35 permit ospf 20.0.0.0/8 any\n# !\n# ip access-list test3\n#    10 permit ip 35.33.0.0/16 any log\n# !\n# ipv6 access-list test2\n#     10 deny icmpv6 any any reject-route hop-limit eq 20\n\n\n# Using overridden\n\n# Before state:\n# -------------\n# show running-config | section access-list\n# ip access-list test1\n#    10 permit ip 10.10.10.0/24 any ttl eq 200\n#    20 permit ip 10.30.10.0/24 host 10.20.10.1\n#    30 deny tcp host 10.10.20.1 eq finger www any syn log\n#    40 permit ip any any\n# !\n# ip access-list test3\n#    10 permit ip 35.33.0.0/16 any log\n# !\n# ipv6 access-list test2\n#     10 deny icmpv6 any any reject-route hop-limit eq 20\n\n\n\n- name: override device configuration with  provided configuration\n  arista.eos.eos_acls:\n    config:\n    - afi: ipv4\n      acls:\n      - name: test1\n        aces:\n        - sequence: 35\n          action: permit\n          protocol: ospf\n          source:\n            subnet_address: 20.0.0.0/8\n          destination:\n            any: true\n    state: overridden\n\n# After state:\n# ------------\n#\n# show running-config | section access-list\n# ip access-list test1\n#    35 permit ospf 20.0.0.0/8 any\n# !\n\n# Using deleted:\n\n# Before state:\n# -------------\n# show running-config | section access-list\n# ip access-list test1\n#    10 permit ip 10.10.10.0/24 any ttl eq 200\n#    20 permit ip 10.30.10.0/24 host 10.20.10.1\n#    30 deny tcp host 10.10.20.1 eq finger www any syn log\n#    40 permit ip any any\n# ipv6 access-list test2\n#     10 deny icmpv6 any any reject-route hop-limit eq 20\n\n# !\n\n- name: Delete provided configuration\n  arista.eos.eos_acls:\n    config:\n    - afi: ipv4\n    state: deleted\n\n# After state:\n# ------------\n#\n# show running-config | section access-list\n\n# ipv6 access-list test2\n#     10 deny icmpv6 any any reject-route hop-limit eq 20\n\n\n\n# Before state:\n# -------------\n# show running-config | section access-list\n# ip access-list test1\n#    10 permit ip 10.10.10.0/24 any ttl eq 200\n#    20 permit ip 10.30.10.0/24 host 10.20.10.1\n#    30 deny tcp host 10.10.20.1 eq finger www any syn log\n#    40 permit ip any any\n# ipv6 access-list test2\n#     10 deny icmpv6 any any reject-route hop-limit eq 20\n\n# !\n\n- name: Delete provided configuration\n  arista.eos.eos_acls:\n    config:\n    - afi: ipv4\n      acls:\n      - name: test1\n    state: deleted\n\n# After state:\n# ------------\n#\n# show running-config | section access-list\n\n# ipv6 access-list test2\n#     10 deny icmpv6 any any reject-route hop-limit eq 20\n\n\n# using gathered\n\n# ip access-list test1\n#    35 deny ospf 20.0.0.0/8 any\n# ip access-list test2\n#    40 permit vlan 55 0xE2 icmpv6 any any log\n\n- name: Gather the exisitng condiguration\n  arista.eos.eos_acls:\n    state: gathered\n\n# returns:\n\n\n#  arista.eos.eos_acls:\n#    config:\n#     - afi: \"ipv4\"\n#       acls:\n#        - name: test1\n#          aces:\n#          - sequence: 35\n#            grant: \"deny\"\n#            protocol: \"ospf\"\n#            source:\n#              subnet_address: 20.0.0.0/8\n#            destination:\n#              any: true\n#     - afi: \"ipv6\"\n#       acls:\n#        - name: test2\n#          aces:\n#           - sequence: 40\n#             grant: \"permit\"\n#             vlan: \"55 0xE2\"\n#             protocol: \"icmpv6\"\n#             log: true\n#             source:\n#               any: true\n#             destination:\n#               any: true\n\n\n# using rendered\n\n- name: Delete provided configuration\n  arista.eos.eos_acls:\n    config:\n    - afi: ipv4\n      acls:\n      - name: test1\n        aces:\n        - sequence: 35\n          grant: deny\n          protocol: ospf\n          source:\n            subnet_address: 20.0.0.0/8\n          destination:\n            any: true\n    - afi: ipv6\n      acls:\n      - name: test2\n        aces:\n        - sequence: 40\n          grant: permit\n          vlan: 55 0xE2\n          protocol: icmpv6\n          log: true\n          source:\n            any: true\n          destination:\n            any: true\n    state: rendered\n\n# returns:\n\n# ip access-list test1\n#    35 deny ospf 20.0.0.0/8 any\n# ip access-list test2\n#    40 permit vlan 55 0xE2 icmpv6 any any log\n\n\n# Using Parsed\n\n# parsed_acls.cfg\n\n# ipv6 access-list standard test2\n#    10 permit any log\n# !\n# ip access-list test1\n#    35 deny ospf 20.0.0.0/8 any\n#    45 remark Run by ansible\n#    55 permit tcp any any\n# !\n\n- name: parse configs\n  arista.eos.eos_acls:\n    running_config: \"{{ lookup('file', './parsed_acls.cfg') }}\"\n    state: parsed\n\n# returns\n# \"parsed\": [\n#         {\n#             \"acls\": [\n#                 {\n#                     \"aces\": [\n#                         {\n#                             \"destination\": {\n#                                 \"any\": true\n#                             },\n#                             \"grant\": \"deny\",\n#                             \"protocol\": \"ospf\",\n#                             \"sequence\": 35,\n#                             \"source\": {\n#                                 \"subnet_address\": \"20.0.0.0/8\"\n#                             }\n#                         },\n#                         {\n#                             \"remark\": \"Run by ansible\",\n#                             \"sequence\": 45\n#                         },\n#                         {\n#                             \"destination\": {\n#                                 \"any\": true\n#                             },\n#                             \"grant\": \"permit\",\n#                             \"protocol\": \"tcp\",\n#                             \"sequence\": 55,\n#                             \"source\": {\n#                                 \"any\": true\n#                             }\n#                         }\n#                     ],\n#                     \"name\": \"test1\"\n#                 }\n#             ],\n#             \"afi\": \"ipv4\"\n#         },\n#         {\n#             \"acls\": [\n#                 {\n#                     \"aces\": [\n#                         {\n#                             \"grant\": \"permit\",\n#                             \"log\": true,\n#                             \"sequence\": 10,\n#                             \"source\": {\n#                                 \"any\": true\n#                             }\n#                         }\n#                     ],\n#                     \"name\": \"test2\",\n#                     \"standard\": true\n#                 }\n#             ],\n#             \"afi\": \"ipv6\"\n#         }\n#     ]\n\n"
  },
  "arista.eos.eos_banner": {
    "doc": {
      "description": "This will configure both login and motd banners on remote devices running Arista EOS.  It allows playbooks to add or remote banner text from the active running configuration.",
      "has_action": true,
      "notes": "Tested against Arista EOS 4.24.6F\nFor information on using CLI, eAPI and privileged mode see the :ref:`EOS Platform Options guide <eos_platform_options>`\nFor more information on using Ansible to manage network devices see the :ref:`Ansible Network Guide <network_guide>`\nFor more information on using Ansible to manage Arista EOS devices see the `Arista integration page <https://www.ansible.com/ansible-arista-networks>`_.",
      "options": {
        "banner": {
          "aliases": [],
          "description": "Specifies which banner that should be configured on the remote device.",
          "type": "str",
          "required": true,
          "choices": [
            "login",
            "motd"
          ],
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "B(Deprecated)\nStarting with Ansible 2.5 we recommend using C(connection: network_cli).\nStarting with Ansible 2.6 we recommend using C(connection: httpapi) for eAPI.\nThis option will be removed in a release after 2022-06-01.\nFor more information please see the L(EOS Platform Options guide, ../network/user_guide/platform_eos.html).\nHORIZONTALLINE\nA dict object containing connection details.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "auth_pass": {
              "aliases": [],
              "description": "Specifies the password to use if required to enter privileged mode on the remote device.  If I(authorize) is false, then this argument does nothing. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_AUTH_PASS) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "authorize": {
              "aliases": [],
              "description": "Instructs the module to enter privileged mode on the remote device before sending any commands.  If not specified, the device will attempt to execute all commands in non-privileged mode. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_AUTHORIZE) will be used instead.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "host": {
              "aliases": [],
              "description": "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [],
              "description": "Specifies the password to use to authenticate the connection to the remote device.  This is a common argument used for either I(cli) or I(eapi) transports. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "port": {
              "aliases": [],
              "description": "Specifies the port to use when building the connection to the remote device.  This value applies to either I(cli) or I(eapi).\nThe port value will default to the appropriate transport common port if none is provided in the task (cli=22, http=80, https=443).",
              "default": "0",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "ssh_keyfile": {
              "aliases": [],
              "description": "Specifies the SSH keyfile to use to authenticate the connection to the remote device.  This argument is only used for I(cli) transports. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead.",
              "type": "path",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "cli",
              "type": "str",
              "required": false,
              "choices": [
                "cli",
                "eapi"
              ],
              "suboptions": {}
            },
            "use_proxy": {
              "aliases": [],
              "description": "If C(no), the environment variables C(http_proxy) and C(https_proxy) will be ignored.",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "use_ssl": {
              "aliases": [],
              "description": "Configures the I(transport) to use SSL if set to C(yes) only when the C(transport=eapi).  If the transport argument is not eapi, this value is ignored.",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "username": {
              "aliases": [],
              "description": "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate either the CLI login or the eAPI authentication depending on which transport is used. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates.  If the transport argument is not eapi, this value is ignored.",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "Specifies whether or not the configuration is present in the current devices active running configuration.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "text": {
          "aliases": [],
          "description": "The banner text that should be present in the remote device running configuration.  This argument accepts a multiline string. Requires I(state=present).",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Manage multiline banners on Arista EOS devices",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: configure the login banner\n  arista.eos.eos_banner:\n    banner: login\n    text: |\n      this is my login banner\n      that contains a multiline\n      string\n    state: present\n\n- name: remove the motd banner\n  arista.eos.eos_banner:\n    banner: motd\n    state: absent\n"
  },
  "arista.eos.eos_bgp": {
    "doc": {
      "description": "This module provides configuration management of global BGP parameters on Arista EOS devices.",
      "has_action": true,
      "notes": "Tested against Arista EOS 4.24.6F",
      "options": {
        "config": {
          "aliases": [],
          "description": "Specifies the BGP related configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "address_family": {
              "aliases": [],
              "description": "Specifies BGP address family related configurations.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "afi": {
                  "aliases": [],
                  "description": "Type of address family to configure.",
                  "type": "str",
                  "required": true,
                  "choices": [
                    "ipv4",
                    "ipv6"
                  ],
                  "suboptions": {}
                },
                "neighbors": {
                  "aliases": [],
                  "description": "Specifies BGP neighbor related configurations in Address Family configuration mode.",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "activate": {
                      "aliases": [],
                      "description": "Enable the Address Family for this Neighbor.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "default_originate": {
                      "aliases": [],
                      "description": "Originate default route to this neighbor.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "graceful_restart": {
                      "aliases": [],
                      "description": "Enable/disable graceful restart mode for this neighbor.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "neighbor": {
                      "aliases": [],
                      "description": "Neighbor router address.",
                      "type": "str",
                      "required": true,
                      "suboptions": {}
                    },
                    "weight": {
                      "aliases": [],
                      "description": "Assign weight for routes learnt from this neighbor.\nThe range is from 0 to 65535",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "networks": {
                  "aliases": [],
                  "description": "Specify Networks to announce via BGP.\nFor operation replace, this option is mutually exclusive with root level networks option.",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "masklen": {
                      "aliases": [],
                      "description": "Subnet mask length for the Network to announce(e.g, 8, 16, 24, etc.).",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "prefix": {
                      "aliases": [],
                      "description": "Network ID to announce via BGP.",
                      "type": "str",
                      "required": true,
                      "suboptions": {}
                    },
                    "route_map": {
                      "aliases": [],
                      "description": "Route map to modify the attributes.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "redistribute": {
                  "aliases": [],
                  "description": "Specifies the redistribute information from another routing protocol.",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "protocol": {
                      "aliases": [],
                      "description": "Specifies the protocol for configuring redistribute information.",
                      "type": "str",
                      "required": true,
                      "choices": [
                        "ospfv3",
                        "ospf",
                        "isis",
                        "static",
                        "connected",
                        "rip"
                      ],
                      "suboptions": {}
                    },
                    "route_map": {
                      "aliases": [],
                      "description": "Specifies the route map reference.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                }
              }
            },
            "bgp_as": {
              "aliases": [],
              "description": "Specifies the BGP Autonomous System (AS) number to configure on the device.",
              "type": "int",
              "required": true,
              "suboptions": {}
            },
            "log_neighbor_changes": {
              "aliases": [],
              "description": "Enable/disable logging neighbor up/down and reset reason.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "neighbors": {
              "aliases": [],
              "description": "Specifies BGP neighbor related configurations.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "description": {
                  "aliases": [],
                  "description": "Neighbor specific description.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "ebgp_multihop": {
                  "aliases": [],
                  "description": "Specifies the maximum hop count for EBGP neighbors not on directly connected networks.\nThe range is from 1 to 255.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "enabled": {
                  "aliases": [],
                  "description": "Administratively shutdown or enable a neighbor.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "maximum_prefix": {
                  "aliases": [],
                  "description": "Maximum number of prefixes to accept from this peer.\nThe range is from 0 to 4294967294.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "neighbor": {
                  "aliases": [],
                  "description": "Neighbor router address.",
                  "type": "str",
                  "required": true,
                  "suboptions": {}
                },
                "password": {
                  "aliases": [],
                  "description": "Password to authenticate the BGP peer connection.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "peer_group": {
                  "aliases": [],
                  "description": "Name of the peer group that the neighbor is a member of.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "remote_as": {
                  "aliases": [],
                  "description": "Remote AS of the BGP neighbor to configure.",
                  "type": "int",
                  "required": true,
                  "suboptions": {}
                },
                "remove_private_as": {
                  "aliases": [],
                  "description": "Remove the private AS number from outbound updates.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "route_reflector_client": {
                  "aliases": [],
                  "description": "Specify a neighbor as a route reflector client.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "timers": {
                  "aliases": [],
                  "description": "Specifies BGP neighbor timer related configurations.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "holdtime": {
                      "aliases": [],
                      "description": "Interval (in seconds) after not receiving a keepalive message that device declares a peer dead.\nThe range is from 3 to 7200.\nSetting this value to 0 will not send keep-alives (hold forever).",
                      "type": "int",
                      "required": true,
                      "suboptions": {}
                    },
                    "keepalive": {
                      "aliases": [],
                      "description": "Frequency (in seconds) with which the device sends keepalive messages to its peer.\nThe range is from 0 to 3600.",
                      "type": "int",
                      "required": true,
                      "suboptions": {}
                    }
                  }
                },
                "update_source": {
                  "aliases": [],
                  "description": "Source of the routing updates.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "networks": {
              "aliases": [],
              "description": "Specify Networks to announce via BGP.\nFor operation replace, this option is mutually exclusive with networks option under address_family.\nFor operation replace, if the device already has an address family activated, this option is not allowed.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "masklen": {
                  "aliases": [],
                  "description": "Subnet mask length for the Network to announce(e.g, 8, 16, 24, etc.).",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "prefix": {
                  "aliases": [],
                  "description": "Network ID to announce via BGP.",
                  "type": "str",
                  "required": true,
                  "suboptions": {}
                },
                "route_map": {
                  "aliases": [],
                  "description": "Route map to modify the attributes.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "redistribute": {
              "aliases": [],
              "description": "Specifies the redistribute information from another routing protocol.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "protocol": {
                  "aliases": [],
                  "description": "Specifies the protocol for configuring redistribute information.",
                  "type": "str",
                  "required": true,
                  "choices": [
                    "ospf",
                    "ospfv3",
                    "static",
                    "connected",
                    "rip",
                    "isis"
                  ],
                  "suboptions": {}
                },
                "route_map": {
                  "aliases": [],
                  "description": "Specifies the route map reference.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "router_id": {
              "aliases": [],
              "description": "Configures the BGP routing process router-id value.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "operation": {
          "aliases": [],
          "description": "Specifies the operation to be performed on the BGP process configured on the device.\nIn case of merge, the input configuration will be merged with the existing BGP configuration on the device.\nIn case of replace, if there is a diff between the existing configuration and the input configuration, the existing configuration will be replaced by the input configuration for every option that has the diff.\nIn case of override, all the existing BGP configuration will be removed from the device and replaced with the input configuration.\nIn case of delete the existing BGP configuration will be removed from the device.",
          "default": "merge",
          "type": "str",
          "required": false,
          "choices": [
            "merge",
            "replace",
            "override",
            "delete"
          ],
          "suboptions": {}
        }
      },
      "short_description": "(deprecated, removed after 2023-01-29) Configure global BGP protocol settings on Arista EOS.",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: configure global bgp as 64496\n  arista.eos.eos_bgp:\n    config:\n      bgp_as: 64496\n      router_id: 192.0.2.1\n      log_neighbor_changes: true\n      neighbors:\n      - neighbor: 203.0.113.5\n        remote_as: 64511\n        timers:\n          keepalive: 300\n          holdtime: 360\n      - neighbor: 198.51.100.2\n        remote_as: 64498\n      networks:\n      - prefix: 198.51.100.0\n        route_map: RMAP_1\n      - prefix: 192.0.2.0\n        masklen: 23\n      address_family:\n      - afi: ipv4\n        safi: unicast\n        redistribute:\n        - protocol: isis\n          route_map: RMAP_1\n    operation: merge\n- name: Configure BGP neighbors\n  arista.eos.eos_bgp:\n    config:\n      bgp_as: 64496\n      neighbors:\n      - neighbor: 192.0.2.10\n        remote_as: 64496\n        description: IBGP_NBR_1\n        ebgp_multihop: 100\n        timers:\n          keepalive: 300\n          holdtime: 360\n      - neighbor: 192.0.2.15\n        remote_as: 64496\n        description: IBGP_NBR_2\n        ebgp_multihop: 150\n    operation: merge\n- name: Configure root-level networks for BGP\n  arista.eos.eos_bgp:\n    config:\n      bgp_as: 64496\n      networks:\n      - prefix: 203.0.113.0\n        masklen: 27\n        route_map: RMAP_1\n      - prefix: 203.0.113.32\n        masklen: 27\n        route_map: RMAP_2\n    operation: merge\n- name: Configure BGP neighbors under address family mode\n  arista.eos.eos_bgp:\n    config:\n      bgp_as: 64496\n      address_family:\n      - afi: ipv4\n        neighbors:\n        - neighbor: 203.0.113.10\n          activate: yes\n          default_originate: true\n        - neighbor: 192.0.2.15\n          activate: yes\n          graceful_restart: true\n    operation: merge\n- name: remove bgp as 64496 from config\n  arista.eos.eos_bgp:\n    config:\n      bgp_as: 64496\n    operation: delete\n"
  },
  "arista.eos.eos_bgp_address_family": {
    "doc": {
      "description": "This module configures and manages the attributes of BGP AF on Arista EOS platforms.",
      "has_action": true,
      "notes": "Tested against Arista EOS 4.24.6F\nThis module works with connection C(network_cli). See the L(EOS Platform Options,eos_platform_options).",
      "options": {
        "config": {
          "aliases": [],
          "description": "Configurations for BGP address family.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "address_family": {
              "aliases": [],
              "description": "Enable address family and enter its config mode",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "afi": {
                  "aliases": [],
                  "description": "address family.",
                  "type": "str",
                  "required": false,
                  "choices": [
                    "ipv4",
                    "ipv6",
                    "evpn"
                  ],
                  "suboptions": {}
                },
                "bgp_params": {
                  "aliases": [],
                  "description": "BGP parameters.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "additional_paths": {
                      "aliases": [],
                      "description": "BGP additional-paths commands",
                      "type": "str",
                      "required": false,
                      "choices": [
                        "install",
                        "send",
                        "receive"
                      ],
                      "suboptions": {}
                    },
                    "next_hop_address_family": {
                      "aliases": [],
                      "description": "Next-hop address-family configuration",
                      "type": "str",
                      "required": false,
                      "choices": [
                        "ipv6"
                      ],
                      "suboptions": {}
                    },
                    "next_hop_unchanged": {
                      "aliases": [],
                      "description": "Preserve original nexthop while advertising routes to eBGP peers.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "redistribute_internal": {
                      "aliases": [],
                      "description": "Redistribute internal BGP routes.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "route": {
                      "aliases": [],
                      "description": "Configure route-map for route installation.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "graceful_restart": {
                  "aliases": [],
                  "description": "Enable graceful restart mode.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "neighbor": {
                  "aliases": [],
                  "description": "Configure routing for a network.",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "activate": {
                      "aliases": [],
                      "description": "Activate neighbor in the address family.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "additional_paths": {
                      "aliases": [],
                      "description": "BGP additional-paths commands.",
                      "type": "str",
                      "required": false,
                      "choices": [
                        "send",
                        "receive"
                      ],
                      "suboptions": {}
                    },
                    "default_originate": {
                      "aliases": [],
                      "description": "Originate default route to this neighbor.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "always": {
                          "aliases": [],
                          "description": "Always originate default route to this neighbor.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "route_map": {
                          "aliases": [],
                          "description": "Route map reference.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "encapsulation": {
                      "aliases": [],
                      "description": "Default transport encapsulation for neighbor. Applicable for evpn address-family.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "source_interface": {
                          "aliases": [],
                          "description": "Source interface to update BGP next hop address. Applicable for mpls transport.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "transport": {
                          "aliases": [],
                          "description": "MPLS/VXLAN transport.",
                          "type": "str",
                          "required": false,
                          "choices": [
                            "mpls",
                            "vxlan"
                          ],
                          "suboptions": {}
                        }
                      }
                    },
                    "graceful_restart": {
                      "aliases": [],
                      "description": "Enable graceful restart mode.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "next_hop_address_family": {
                      "aliases": [],
                      "description": "Next-hop address-family configuration",
                      "type": "str",
                      "required": false,
                      "choices": [
                        "ipv6"
                      ],
                      "suboptions": {}
                    },
                    "next_hop_unchanged": {
                      "aliases": [],
                      "description": "Preserve original nexthop while advertising routes to eBGP peers.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "peer": {
                      "aliases": [],
                      "description": "Neighbor address/ peer group name.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "prefix_list": {
                      "aliases": [],
                      "description": "Prefix list reference.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "direction": {
                          "aliases": [],
                          "description": "Configure an inbound/outbound prefix-list.",
                          "type": "str",
                          "required": false,
                          "choices": [
                            "in",
                            "out"
                          ],
                          "suboptions": {}
                        },
                        "name": {
                          "aliases": [],
                          "description": "prefix list name.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "route_map": {
                      "aliases": [],
                      "description": "Route map reference.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "direction": {
                          "aliases": [],
                          "description": "Configure an inbound/outbound route-map.",
                          "type": "str",
                          "required": false,
                          "choices": [
                            "in",
                            "out"
                          ],
                          "suboptions": {}
                        },
                        "name": {
                          "aliases": [],
                          "description": "Route map name.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "weight": {
                      "aliases": [],
                      "description": "Weight to assign.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "network": {
                  "aliases": [],
                  "description": "configure routing for network.",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "address": {
                      "aliases": [],
                      "description": "network address.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "route_map": {
                      "aliases": [],
                      "description": "Route map reference.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "redistribute": {
                  "aliases": [],
                  "description": "Redistribute routes in to BGP.",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "isis_level": {
                      "aliases": [],
                      "description": "Applicable for isis routes. Specify isis route level.",
                      "type": "str",
                      "required": false,
                      "choices": [
                        "level-1",
                        "level-2",
                        "level-1-2"
                      ],
                      "suboptions": {}
                    },
                    "ospf_route": {
                      "aliases": [],
                      "description": "ospf route options.",
                      "type": "str",
                      "required": false,
                      "choices": [
                        "internal",
                        "external",
                        "nssa_external_1",
                        "nssa_external_2"
                      ],
                      "suboptions": {}
                    },
                    "protocol": {
                      "aliases": [],
                      "description": "Routes to be redistributed.",
                      "type": "str",
                      "required": false,
                      "choices": [
                        "isis",
                        "ospfv3",
                        "dhcp"
                      ],
                      "suboptions": {}
                    },
                    "route_map": {
                      "aliases": [],
                      "description": "Route map reference.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "route_target": {
                  "aliases": [],
                  "description": "Route target.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "action": {
                      "aliases": [],
                      "description": "Route action.",
                      "type": "str",
                      "required": false,
                      "choices": [
                        "both",
                        "import",
                        "export"
                      ],
                      "suboptions": {}
                    },
                    "imported_route": {
                      "aliases": [],
                      "description": "Export routes imported from the same Afi/Safi",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "route_map": {
                      "aliases": [],
                      "description": "Name of a route map.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "target": {
                      "aliases": [],
                      "description": "Route Target.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "type": {
                      "aliases": [
                        "mode"
                      ],
                      "description": "Type of address fmaily",
                      "type": "str",
                      "required": false,
                      "choices": [
                        "evpn",
                        "vpn-ipv4",
                        "vpn-ipv6"
                      ],
                      "suboptions": {}
                    }
                  }
                },
                "safi": {
                  "aliases": [],
                  "description": "Address family type for ipv4.",
                  "type": "str",
                  "required": false,
                  "choices": [
                    "labeled-unicast",
                    "multicast"
                  ],
                  "suboptions": {}
                },
                "vrf": {
                  "aliases": [],
                  "description": "name of the VRF in which BGP will be configured.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "as_number": {
              "aliases": [],
              "description": "Autonomous system number.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "running_config": {
          "aliases": [],
          "description": "This option is used only with state I(parsed).\nThe value of this option should be the output received from the EOS device by executing the command B(show running-config | section bgp).\nThe state I(parsed) reads the configuration from C(running_config) option and transforms it into Ansible structured data as per the resource module's argspec and the value is then returned in the I(parsed) key within the result.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The state the configuration should be left in.",
          "default": "merged",
          "type": "str",
          "required": false,
          "choices": [
            "deleted",
            "merged",
            "overridden",
            "replaced",
            "gathered",
            "rendered",
            "parsed"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manages BGP address family resource module",
      "version_added": "1.4.0"
    },
    "examples": "\n\n# Using merged\n\n# Before state\n\n# veos(config)#show running-config | section bgp\n# veos(config)#\n\n  - name: Merge provided configuration with device configuration\n    arista.eos.eos_bgp_address_family:\n      config:\n        as_number: \"10\"\n        address_family:\n          - afi: \"ipv4\"\n            redistribute:\n              - protocol: \"ospfv3\"\n                ospf_route: \"external\"\n            network:\n              - address: \"1.1.1.0/24\"\n              - address: \"1.5.1.0/24\"\n                route_map: \"MAP01\"\n          - afi: \"ipv6\"\n            bgp_params:\n              additional_paths: \"receive\"\n            neighbor:\n              - peer: \"peer2\"\n                default_originate:\n                  always: True\n          - afi: \"ipv6\"\n            redistribute:\n              - protocol: \"isis\"\n                isis_level: \"level-2\"\n            route_target:\n              mode: \"export\"\n              target: \"33:11\"\n            vrf: \"vrft\"\n      state: merged\n\n# After state:\n\n# veos(config-router-bgp)#show running-config | section bgp\n# router bgp 10\n#    neighbor peer2 peer group\n#    neighbor peer2 maximum-routes 12000\n#    neighbor 1.1.1.1 maximum-routes 12000\n#    !\n#    address-family ipv4\n#       neighbor 1.1.1.1 activate\n#       network 1.1.1.0/24\n#       network 1.5.1.0/24 route-map MAP01\n#       redistribute ospfv3 match external\n#    !\n#    address-family ipv6\n#       bgp additional-paths receive\n#       neighbor peer2 activate\n#       neighbor peer2 default-originate always\n#    !\n#    vrf vrft\n#       address-family ipv6\n#          route-target export 33:11\n#          redistribute isis level-2\n# veos(config-router-bgp)#\n\n# Module Execution:\n\n# \"after\": {\n#         \"address_family\": [\n#             {\n#                 \"afi\": \"ipv4\",\n#                 \"redistribute\": [\n#                     {\n#                         \"ospf_route\": \"external\",\n#                         \"protocol\": \"ospfv3\"\n#                     }\n#                 ]\n#             },\n#             {\n#                 \"afi\": \"ipv6\",\n#                 \"bgp_params\": {\n#                     \"additional_paths\": \"receive\"\n#                 },\n#                 \"neighbor\": [\n#                     {\n#                         \"default_originate\": {\n#                             \"always\": true\n#                         },\n#                         \"peer\": \"peer2\"\n#                     }\n#                 ]\n#             },\n#             {\n#                 \"afi\": \"ipv6\",\n#                 \"redistribute\": [\n#                     {\n#                         \"isis_level\": \"level-2\",\n#                         \"protocol\": \"isis\"\n#                     }\n#                 ],\n#                 \"route_target\": {\n#                     \"mode\": \"export\",\n#                     \"target\": \"33:11\"\n#                 },\n#                 \"vrf\": \"vrft\"\n#             }\n#         ],\n#         \"as_number\": \"10\"\n#     },\n#     \"before\": {},\n#     \"changed\": true,\n#     \"commands\": [\n#         \"router bgp 10\",\n#         \"address-family ipv4\",\n#         \"redistribute ospfv3 match external\",\n#         \"network 1.1.1.0/24\",\n#         \"network 1.5.1.0/24 route-map MAP01\",\n#         \"exit\",\n#         \"address-family ipv6\",\n#         \"neighbor peer2 default-originate always\",\n#         \"bgp additional-paths receive\",\n#         \"exit\",\n#         \"vrf vrft\",\n#         \"address-family ipv6\",\n#         \"redistribute isis level-2\",\n#         \"route-target export 33:11\",\n#         \"exit\",\n#         \"exit\"\n#     ],\n\n# Using replaced:\n\n# Before State:\n\n# veos(config-router-bgp)#show running-config | section bgp\n# router bgp 10\n#    neighbor peer2 peer group\n#    neighbor peer2 maximum-routes 12000\n#    neighbor 1.1.1.1 maximum-routes 12000\n#    !\n#    address-family ipv4\n#       neighbor 1.1.1.1 activate\n#       network 1.1.1.0/24\n#       network 1.5.1.0/24 route-map MAP01\n#       redistribute ospfv3 match external\n#    !\n#    address-family ipv6\n#       bgp additional-paths receive\n#       neighbor peer2 activate\n#       neighbor peer2 default-originate always\n#    !\n#    vrf vrft\n#       address-family ipv6\n#          route-target export 33:11\n#          redistribute isis level-2\n# veos(config-router-bgp)#\n#\n\n  - name: Replace\n    arista.eos.eos_bgp_address_family:\n      config:\n        as_number: \"10\"\n        address_family:\n          - afi: \"ipv6\"\n            vrf: \"vrft\"\n            redistribute:\n              - protocol: \"ospfv3\"\n                ospf_route: \"external\"\n          - afi: \"ipv6\"\n            redistribute:\n              - protocol: \"isis\"\n                isis_level: \"level-2\"\n      state: replaced\n\n# After State:\n\n# veos(config-router-bgp)#show running-config | section bgp\n# router bgp 10\n#    neighbor peer2 peer group\n#    neighbor peer2 maximum-routes 12000\n#    neighbor 1.1.1.1 maximum-routes 12000\n#    !\n#    address-family ipv4\n#       neighbor 1.1.1.1 activate\n#       network 1.1.1.0/24\n#       network 1.5.1.0/24 route-map MAP01\n#       redistribute ospfv3 match external\n#    !\n#    address-family ipv6\n#       neighbor peer2 default-originate always\n#       redistribute isis level-2\n#    !\n#    vrf vrft\n#       address-family ipv6\n#          redistribute ospfv3 match external\n# veos(config-router-bgp)#\n#\n#\n# # Module Execution:\n#\n#     \"after\": {\n#         \"address_family\": [\n#             {\n#                 \"afi\": \"ipv4\",\n#                 \"neighbor\": [\n#                     {\n#                         \"activate\": true,\n#                         \"peer\": \"1.1.1.1\"\n#                     }\n#                 ],\n#                 \"network\": [\n#                     {\n#                         \"address\": \"1.1.1.0/24\"\n#                     },\n#                     {\n#                         \"address\": \"1.5.1.0/24\",\n#                         \"route_map\": \"MAP01\"\n#                     }\n#                 ],\n#                 \"redistribute\": [\n#                     {\n#                         \"ospf_route\": \"external\",\n#                         \"protocol\": \"ospfv3\"\n#                     }\n#                 ]\n#             },\n#             {\n#                 \"afi\": \"ipv6\",\n#                 \"neighbor\": [\n#                     {\n#                         \"default_originate\": {\n#                             \"always\": true\n#                         },\n#                         \"peer\": \"peer2\"\n#                     }\n#                 ],\n#                 \"redistribute\": [\n#                     {\n#                         \"isis_level\": \"level-2\",\n#                         \"protocol\": \"isis\"\n#                     }\n#                 ]\n#             },\n#             {\n#                 \"afi\": \"ipv6\",\n#                 \"redistribute\": [\n#                     {\n#                         \"ospf_route\": \"external\",\n#                         \"protocol\": \"ospfv3\"\n#                     }\n#                 ],\n#                 \"vrf\": \"vrft\"\n#             }\n#         ],\n#         \"as_number\": \"10\"\n#     },\n#     \"before\": {\n#         \"address_family\": [\n#             {\n#                 \"afi\": \"ipv4\",\n#                 \"neighbor\": [\n#                     {\n#                         \"activate\": true,\n#                         \"peer\": \"1.1.1.1\"\n#                     }\n#                 ],\n#                 \"network\": [\n#                     {\n#                         \"address\": \"1.1.1.0/24\"\n#                     },\n#                     {\n#                         \"address\": \"1.5.1.0/24\",\n#                         \"route_map\": \"MAP01\"\n#                     }\n#                 ],\n#                 \"redistribute\": [\n#                     {\n#                         \"ospf_route\": \"external\",\n#                         \"protocol\": \"ospfv3\"\n#                     }\n#                 ]\n#             },\n#             {\n#                 \"afi\": \"ipv6\",\n#                 \"bgp_params\": {\n#                     \"additional_paths\": \"receive\"\n#                 },\n#                 \"neighbor\": [\n#                     {\n#                         \"activate\": true,\n#                         \"default_originate\": {\n#                             \"always\": true\n#                         },\n#                         \"peer\": \"peer2\"\n#                     }\n#                 ]\n#             },\n#             {\n#                 \"afi\": \"ipv6\",\n#                 \"redistribute\": [\n#                     {\n#                         \"isis_level\": \"level-2\",\n#                         \"protocol\": \"isis\"\n#                     }\n#                 ],\n#                 \"route_target\": {\n#                     \"mode\": \"export\",\n#                     \"target\": \"33:11\"\n#                 },\n#                 \"vrf\": \"vrft\"\n#             }\n#         ],\n#         \"as_number\": \"10\"\n#     },\n#     \"changed\": true,\n#     \"commands\": [\n#         \"router bgp 10\",\n#         \"vrf vrft\",\n#         \"address-family ipv6\",\n#         \"redistribute ospfv3 match external\",\n#         \"no redistribute isis level-2\",\n#         \"no route-target export 33:11\",\n#         \"exit\",\n#         \"exit\",\n#         \"address-family ipv6\",\n#         \"redistribute isis level-2\",\n#         \"no neighbor peer2 activate\",\n#         \"no bgp additional-paths receive\",\n#         \"exit\"\n#     ],\n\n# Using overridden (overriding af at global context):\n# Before state:\n\n# veos(config-router-bgp)#show running-config | section bgp\n# router bgp 10\n#    neighbor peer2 peer group\n#    neighbor peer2 maximum-routes 12000\n#    neighbor 1.1.1.1 maximum-routes 12000\n#    !\n#    address-family ipv4\n#       neighbor 1.1.1.1 activate\n#       network 1.1.1.0/24\n#       network 1.5.1.0/24 route-map MAP01\n#       redistribute ospfv3 match external\n#    !\n#    address-family ipv6\n#       neighbor peer2 default-originate always\n#       redistribute isis level-2\n#    !\n#    vrf vrft\n#       address-family ipv6\n#          redistribute ospfv3 match external\n# veos(config-router-bgp)#\n\n  - name: Overridden\n    arista.eos.eos_bgp_address_family:\n      config:\n        as_number: \"10\"\n        address_family:\n          - afi: \"ipv4\"\n            bgp_params:\n              additional_paths: \"receive\"\n            neighbor:\n              - peer: \"peer2\"\n                default_originate:\n                  always: True\n      state: overridden\n\n# After State:\n# veos(config-router-bgp)#show running-config | section bgp\n# router bgp 10\n#    neighbor peer2 peer group\n#    neighbor peer2 maximum-routes 12000\n#    neighbor 1.1.1.1 maximum-routes 12000\n#    !\n#    address-family ipv4\n#       bgp additional-paths receive\n#       neighbor peer2 default-originate always\n#    !\n#    vrf vrft\n#       address-family ipv6\n#          redistribute ospfv3 match external\n# veos(config-router-bgp)#\n#\n# Module Execution:\n#\n# \"after\": {\n#         \"address_family\": [\n#             {\n#                 \"afi\": \"ipv4\",\n#                 \"bgp_params\": {\n#                     \"additional_paths\": \"receive\"\n#                 },\n#                 \"neighbor\": [\n#                     {\n#                         \"default_originate\": {\n#                             \"always\": true\n#                         },\n#                         \"peer\": \"peer2\"\n#                     }\n#                 ]\n#             },\n#             {\n#                 \"afi\": \"ipv6\",\n#                 \"redistribute\": [\n#                     {\n#                         \"ospf_route\": \"external\",\n#                         \"protocol\": \"ospfv3\"\n#                     }\n#                 ],\n#                 \"vrf\": \"vrft\"\n#             }\n#         ],\n#         \"as_number\": \"10\"\n#     },\n#     \"before\": {\n#         \"address_family\": [\n#             {\n#                 \"afi\": \"ipv4\",\n#                 \"neighbor\": [\n#                     {\n#                         \"activate\": true,\n#                         \"peer\": \"1.1.1.1\"\n#                     }\n#                 ],\n#                 \"network\": [\n#                     {\n#                         \"address\": \"1.1.1.0/24\"\n#                     },\n#                     {\n#                         \"address\": \"1.5.1.0/24\",\n#                         \"route_map\": \"MAP01\"\n#                     }\n#                 ],\n#                 \"redistribute\": [\n#                     {\n#                         \"ospf_route\": \"external\",\n#                         \"protocol\": \"ospfv3\"\n#                     }\n#                 ]\n#             },\n#             {\n#                 \"afi\": \"ipv6\",\n#                 \"neighbor\": [\n#                     {\n#                         \"default_originate\": {\n#                             \"always\": true\n#                         },\n#                         \"peer\": \"peer2\"\n#                     }\n#                 ],\n#                 \"redistribute\": [\n#                     {\n#                         \"isis_level\": \"level-2\",\n#                         \"protocol\": \"isis\"\n#                     }\n#                 ]\n#             },\n#             {\n#                 \"afi\": \"ipv6\",\n#                 \"redistribute\": [\n#                     {\n#                         \"ospf_route\": \"external\",\n#                         \"protocol\": \"ospfv3\"\n#                     }\n#                 ],\n#                 \"vrf\": \"vrft\"\n#             }\n#         ],\n#         \"as_number\": \"10\"\n#     },\n#     \"changed\": true,\n#     \"commands\": [\n#         \"router bgp 10\",\n#         \"address-family ipv4\",\n#         \"no redistribute ospfv3 match external\",\n#         \"no network 1.1.1.0/24\",\n#         \"no network 1.5.1.0/24 route-map MAP01\",\n#         \"neighbor peer2 default-originate always\",\n#         \"no neighbor 1.1.1.1 activate\",\n#         \"bgp additional-paths receive\",\n#         \"exit\",\n#         \"no address-family ipv6\"\n#     ],\n\n# using Overridden (overridding af in vrf context):\n\n# Before State:\n\n# veos(config-router-bgp)#show running-config | section bgp\n# router bgp 10\n#    neighbor peer2 peer group\n#    neighbor peer2 maximum-routes 12000\n#    neighbor 1.1.1.1 maximum-routes 12000\n#    !\n#    address-family ipv4\n#       bgp additional-paths receive\n#       neighbor peer2 default-originate always\n#       no neighbor 1.1.1.1 activate\n#       network 1.1.1.0/24\n#       network 1.5.1.0/24 route-map MAP01\n#       redistribute ospfv3 match external\n#    !\n#    address-family ipv6\n#       bgp additional-paths receive\n#       neighbor peer2 default-originate always\n#    !\n#    vrf vrft\n#       address-family ipv6\n#          route-target export 33:11\n#          redistribute isis level-2\n#          redistribute ospfv3 match external\n# veos(config-router-bgp)#\n\n\n  - name: Overridden\n    arista.eos.eos_bgp_address_family:\n      config:\n        as_number: \"10\"\n        address_family:\n          - afi: \"ipv4\"\n            bgp_params:\n              additional_paths: \"receive\"\n            neighbor:\n              - peer: \"peer2\"\n                default_originate:\n                  always: True\n            vrf: vrft\n      state: overridden\n\n# After State:\n\n# veos(config-router-bgp)#show running-config | section bgp\n# router bgp 10\n#    neighbor peer2 peer group\n#    neighbor peer2 maximum-routes 12000\n#    neighbor 1.1.1.1 maximum-routes 12000\n#    !\n#    address-family ipv4\n#       bgp additional-paths receive\n#       neighbor peer2 default-originate always\n#       network 1.1.1.0/24\n#       network 1.5.1.0/24 route-map MAP01\n#       redistribute ospfv3 match external\n#    !\n#    address-family ipv6\n#       bgp additional-paths receive\n#       neighbor peer2 default-originate always\n#    !\n#    vrf vrft\n#       address-family ipv4\n#          bgp additional-paths receive\n# veos(config-router-bgp)#\n#\n# Module Execution:\n#\n# \"after\": {\n#         \"address_family\": [\n#             {\n#                 \"afi\": \"ipv4\",\n#                 \"bgp_params\": {\n#                     \"additional_paths\": \"receive\"\n#                 },\n#                 \"neighbor\": [\n#                     {\n#                         \"default_originate\": {\n#                             \"always\": true\n#                         },\n#                         \"peer\": \"peer2\"\n#                     }\n#                 ],\n#                 \"network\": [\n#                     {\n#                         \"address\": \"1.1.1.0/24\"\n#                     },\n#                     {\n#                         \"address\": \"1.5.1.0/24\",\n#                         \"route_map\": \"MAP01\"\n#                     }\n#                 ],\n#                 \"redistribute\": [\n#                     {\n#                         \"ospf_route\": \"external\",\n#                         \"protocol\": \"ospfv3\"\n#                     }\n#                 ]\n#             },\n#             {\n#                 \"afi\": \"ipv6\",\n#                 \"bgp_params\": {\n#                     \"additional_paths\": \"receive\"\n#                 },\n#                 \"neighbor\": [\n#                     {\n#                         \"default_originate\": {\n#                             \"always\": true\n#                         },\n#                         \"peer\": \"peer2\"\n#                     }\n#                 ]\n#             },\n#             {\n#                 \"afi\": \"ipv4\",\n#                 \"bgp_params\": {\n#                     \"additional_paths\": \"receive\"\n#                 },\n#                 \"vrf\": \"vrft\"\n#             }\n#         ],\n#         \"as_number\": \"10\"\n#     },\n#     \"before\": {\n#         \"address_family\": [\n#             {\n#                 \"afi\": \"ipv4\",\n#                 \"bgp_params\": {\n#                     \"additional_paths\": \"receive\"\n#                 },\n#                 \"neighbor\": [\n#                     {\n#                         \"default_originate\": {\n#                             \"always\": true\n#                         },\n#                         \"peer\": \"peer2\"\n#                     }\n#                 ],\n#                 \"network\": [\n#                     {\n#                         \"address\": \"1.1.1.0/24\"\n#                     },\n#                     {\n#                         \"address\": \"1.5.1.0/24\",\n#                         \"route_map\": \"MAP01\"\n#                     }\n#                 ],\n#                 \"redistribute\": [\n#                     {\n#                         \"ospf_route\": \"external\",\n#                         \"protocol\": \"ospfv3\"\n#                     }\n#                 ]\n#             },\n#             {\n#                 \"afi\": \"ipv6\",\n#                 \"bgp_params\": {\n#                     \"additional_paths\": \"receive\"\n#                 },\n#                 \"neighbor\": [\n#                     {\n#                         \"default_originate\": {\n#                             \"always\": true\n#                         },\n#                         \"peer\": \"peer2\"\n#                     }\n#                 ]\n#             },\n#             {\n#                 \"afi\": \"ipv6\",\n#                 \"redistribute\": [\n#                     {\n#                         \"isis_level\": \"level-2\",\n#                         \"protocol\": \"isis\"\n#                     },\n#                     {\n#                         \"ospf_route\": \"external\",\n#                         \"protocol\": \"ospfv3\"\n#                     }\n#                 ],\n#                 \"route_target\": {\n#                     \"mode\": \"export\",\n#                     \"target\": \"33:11\"\n#                 },\n#                 \"vrf\": \"vrft\"\n#             }\n#         ],\n#         \"as_number\": \"10\"\n#     },\n#     \"changed\": true,\n#     \"commands\": [\n#         \"router bgp 10\",\n#         \"vrf vrft\",\n#         \"address-family ipv4\",\n#         \"neighbor peer2 default-originate always\",\n#         \"bgp additional-paths receive\",\n#         \"exit\",\n#         \"exit\",\n#         \" vrf vrft\",\n#         \"no address-family ipv6\"\n#     ],\n\n# Using Deleted:\n\n# veos(config-router-bgp)#show running-config | section bgp\n# router bgp 10\n#    neighbor peer2 peer group\n#    neighbor peer2 maximum-routes 12000\n#    neighbor 1.1.1.1 maximum-routes 12000\n#    !\n#    address-family ipv4\n#       bgp additional-paths receive\n#       neighbor peer2 default-originate always\n#       no neighbor 1.1.1.1 activate\n#       network 1.1.1.0/24\n#       network 1.5.1.0/24 route-map MAP01\n#       redistribute ospfv3 match external\n#    !\n#    address-family ipv6\n#       bgp additional-paths receive\n#       neighbor peer2 default-originate always\n#    !\n#    vrf vrft\n#       address-family ipv4\n#          bgp additional-paths receive\n# veos(config-router-bgp)#\n\n  - name: Delete\n    arista.eos.eos_bgp_address_family:\n      config:\n        as_number: \"10\"\n        address_family:\n          - afi: \"ipv6\"\n            vrf: \"vrft\"\n          - afi: \"ipv6\"\n      state: deleted\n\n# After State:\n\n# veos(config-router-bgp)#show running-config | section bgp\n# router bgp 10\n#    neighbor peer2 peer group\n#    neighbor peer2 maximum-routes 12000\n#    neighbor 1.1.1.1 maximum-routes 12000\n#    !\n#    address-family ipv4\n#       bgp additional-paths receive\n#       neighbor peer2 default-originate always\n#       no neighbor 1.1.1.1 activate\n#       network 1.1.1.0/24\n#       network 1.5.1.0/24 route-map MAP01\n#       redistribute ospfv3 match external\n#    !\n#    vrf vrft\n#       address-family ipv4\n#          bgp additional-paths receive\n# veos(config-router-bgp)#\n#\n# Module Execution:\n#\n# \"after\": {\n#         \"address_family\": [\n#             {\n#                 \"afi\": \"ipv4\",\n#                 \"bgp_params\": {\n#                     \"additional_paths\": \"receive\"\n#                 },\n#                 \"neighbor\": [\n#                     {\n#                         \"default_originate\": {\n#                             \"always\": true\n#                         },\n#                         \"peer\": \"peer2\"\n#                     }\n#                 ],\n#                 \"network\": [\n#                     {\n#                         \"address\": \"1.1.1.0/24\"\n#                     },\n#                     {\n#                         \"address\": \"1.5.1.0/24\",\n#                         \"route_map\": \"MAP01\"\n#                     }\n#                 ],\n#                 \"redistribute\": [\n#                     {\n#                         \"ospf_route\": \"external\",\n#                         \"protocol\": \"ospfv3\"\n#                     }\n#                 ]\n#             },\n#             {\n#                 \"afi\": \"ipv4\",\n#                 \"bgp_params\": {\n#                     \"additional_paths\": \"receive\"\n#                 },\n#                 \"vrf\": \"vrft\"\n#             }\n#         ],\n#         \"as_number\": \"10\"\n#     },\n#     \"before\": {\n#         \"address_family\": [\n#             {\n#                 \"afi\": \"ipv4\",\n#                 \"bgp_params\": {\n#                     \"additional_paths\": \"receive\"\n#                 },\n#                 \"neighbor\": [\n#                     {\n#                         \"default_originate\": {\n#                             \"always\": true\n#                         },\n#                         \"peer\": \"peer2\"\n#                     }\n#                 ],\n#                 \"network\": [\n#                     {\n#                         \"address\": \"1.1.1.0/24\"\n#                     },\n#                     {\n#                         \"address\": \"1.5.1.0/24\",\n#                         \"route_map\": \"MAP01\"\n#                     }\n#                 ],\n#                 \"redistribute\": [\n#                     {\n#                         \"ospf_route\": \"external\",\n#                         \"protocol\": \"ospfv3\"\n#                     }\n#                 ]\n#             },\n#             {\n#                 \"afi\": \"ipv6\",\n#                 \"bgp_params\": {\n#                     \"additional_paths\": \"receive\"\n#                 },\n#                 \"neighbor\": [\n#                     {\n#                         \"default_originate\": {\n#                             \"always\": true\n#                         },\n#                         \"peer\": \"peer2\"\n#                     }\n#                 ]\n#             },\n#             {\n#                 \"afi\": \"ipv4\",\n#                 \"bgp_params\": {\n#                     \"additional_paths\": \"receive\"\n#                 },\n#                 \"vrf\": \"vrft\"\n#             }\n#         ],\n#         \"as_number\": \"10\"\n#     },\n\n# Using parsed:\n\n# parsed_bgp_address_family.cfg :\n\n# router bgp 10\n#    neighbor n2 peer group\n#    neighbor n2 next-hop-unchanged\n#    neighbor n2 maximum-routes 12000\n#    neighbor peer2 peer group\n#    neighbor peer2 maximum-routes 12000\n#    network 1.1.1.0/24\n#    network 1.5.1.0/24 route-map MAP01\n#    !\n#    address-family ipv4\n#       bgp additional-paths receive\n#       neighbor peer2 default-originate always\n#       redistribute ospfv3 match external\n#    !\n#    address-family ipv6\n#       no bgp additional-paths receive\n#       neighbor n2 next-hop-unchanged\n#       redistribute isis level-2\n#    !\n#    vrf bgp_10\n#       ip access-group acl01\n#       ucmp fec threshold trigger 33 clear 22 warning-only\n#       !\n#       address-family ipv4\n#          route-target import 20:11\n#    !\n#    vrf vrft\n#       address-family ipv4\n#          bgp additional-paths receive\n#       !\n#       address-family ipv6\n#          redistribute ospfv3 match external\n\n  - name: parse configs\n    arista.eos.eos_bgp_address_family:\n      running_config: \"{{ lookup('file', './parsed_bgp_address_family.cfg') }}\"\n      state: parsed\n\n# Module Execution:\n# \"parsed\": {\n#         \"address_family\": [\n#             {\n#                 \"afi\": \"ipv4\",\n#                 \"bgp_params\": {\n#                     \"additional_paths\": \"receive\"\n#                 },\n#                 \"neighbor\": [\n#                     {\n#                         \"default_originate\": {\n#                             \"always\": true\n#                         },\n#                         \"peer\": \"peer2\"\n#                     }\n#                 ],\n#                 \"redistribute\": [\n#                     {\n#                         \"ospf_route\": \"external\",\n#                         \"protocol\": \"ospfv3\"\n#                     }\n#                 ]\n#             },\n#             {\n#                 \"afi\": \"ipv6\",\n#                 \"neighbor\": [\n#                     {\n#                         \"next_hop_unchanged\": true,\n#                         \"peer\": \"n2\"\n#                     }\n#                 ],\n#                 \"redistribute\": [\n#                     {\n#                         \"isis_level\": \"level-2\",\n#                         \"protocol\": \"isis\"\n#                     }\n#                 ]\n#             },\n#             {\n#                 \"afi\": \"ipv4\",\n#                 \"route_target\": {\n#                     \"mode\": \"import\",\n#                     \"target\": \"20:11\"\n#                 },\n#                 \"vrf\": \"bgp_10\"\n#             },\n#             {\n#                 \"afi\": \"ipv4\",\n#                 \"bgp_params\": {\n#                     \"additional_paths\": \"receive\"\n#                 },\n#                 \"vrf\": \"vrft\"\n#             },\n#             {\n#                 \"afi\": \"ipv6\",\n#                 \"redistribute\": [\n#                     {\n#                         \"ospf_route\": \"external\",\n#                         \"protocol\": \"ospfv3\"\n#                     }\n#                 ],\n#                 \"vrf\": \"vrft\"\n#             }\n#         ],\n#         \"as_number\": \"10\"\n#     }\n# }\n\n# Using gathered:\n\n# Device config:\n# veos(config-router-bgp)#show running-config | section bgp\n# router bgp 10\n#    neighbor peer2 peer group\n#    neighbor peer2 maximum-routes 12000\n#    neighbor 1.1.1.1 maximum-routes 12000\n#    !\n#    address-family ipv4\n#       bgp additional-paths receive\n#       neighbor peer2 default-originate always\n#       no neighbor 1.1.1.1 activate\n#       network 1.1.1.0/24\n#       network 1.5.1.0/24 route-map MAP01\n#       redistribute ospfv3 match external\n#    !\n#    vrf vrft\n#       address-family ipv4\n#          bgp additional-paths receive\n# veos(config-router-bgp)#\n\n  - name: gather configs\n    arista.eos.eos_bgp_address_family:\n      state: gathered\n\n# Module Execution:\n# \"gathered\": {\n#         \"address_family\": [\n#             {\n#                 \"afi\": \"ipv4\",\n#                 \"bgp_params\": {\n#                     \"additional_paths\": \"receive\"\n#                 },\n#                 \"neighbor\": [\n#                     {\n#                         \"default_originate\": {\n#                             \"always\": true\n#                         },\n#                         \"peer\": \"peer2\"\n#                     }\n#                 ],\n#                 \"network\": [\n#                     {\n#                         \"address\": \"1.1.1.0/24\"\n#                     },\n#                     {\n#                         \"address\": \"1.5.1.0/24\",\n#                         \"route_map\": \"MAP01\"\n#                     }\n#                 ],\n#                 \"redistribute\": [\n#                     {\n#                         \"ospf_route\": \"external\",\n#                         \"protocol\": \"ospfv3\"\n#                     }\n#                 ]\n#             },\n#             {\n#                 \"afi\": \"ipv4\",\n#                 \"bgp_params\": {\n#                     \"additional_paths\": \"receive\"\n#                 },\n#                 \"vrf\": \"vrft\"\n#             }\n#         ],\n#         \"as_number\": \"10\"\n#     },\n\n# using rendered:\n\n  - name:  Render\n    arista.eos.eos_bgp_address_family:\n      config:\n        as_number: \"10\"\n        address_family:\n          - afi: \"ipv4\"\n            redistribute:\n              - protocol: \"ospfv3\"\n                ospf_route: \"external\"\n            network:\n              - address: \"1.1.1.0/24\"\n              - address: \"1.5.1.0/24\"\n                route_map: \"MAP01\"\n          - afi: \"ipv6\"\n            bgp_params:\n              additional_paths: \"receive\"\n            neighbor:\n              - peer: \"peer2\"\n                default_originate:\n                  always: True\n          - afi: \"ipv6\"\n            redistribute:\n              - protocol: \"isis\"\n                isis_level: \"level-2\"\n            route_target:\n              mode: \"export\"\n              target: \"33:11\"\n            vrf: \"vrft\"\n\n      state: rendered\n\n# Module Execution:\n\n# \"rendered\": [\n#         \"router bgp 10\",\n#         \"address-family ipv4\",\n#         \"redistribute ospfv3 match external\",\n#         \"network 1.1.1.0/24\",\n#         \"network 1.5.1.0/24 route-map MAP01\",\n#         \"exit\",\n#         \"address-family ipv6\",\n#         \"neighbor peer2 default-originate always\",\n#         \"bgp additional-paths receive\",\n#         \"exit\",\n#         \"vrf vrft\",\n#         \"address-family ipv6\",\n#         \"redistribute isis level-2\",\n#         \"route-target export 33:11\",\n#         \"exit\",\n#         \"exit\"\n#     ]\n#\n\n"
  },
  "arista.eos.eos_bgp_global": {
    "doc": {
      "description": "This module configures and manages the attributes of BGP global on Arista EOS platforms.",
      "has_action": true,
      "notes": "Tested against Arista EOS 4.24.6F\nThis module works with connection C(network_cli). See the L(EOS Platform Options,eos_platform_options).",
      "options": {
        "config": {
          "aliases": [],
          "description": "A list of configurations for BGP global.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "access_group": {
              "aliases": [],
              "description": "ip/ipv6 access list configuration.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "acl_name": {
                  "aliases": [],
                  "description": "access list name.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "afi": {
                  "aliases": [],
                  "description": "Specify ip/ipv6.",
                  "type": "str",
                  "required": false,
                  "choices": [
                    "ipv4",
                    "ipv6"
                  ],
                  "suboptions": {}
                },
                "direction": {
                  "aliases": [],
                  "description": "direction of packets.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "aggregate_address": {
              "aliases": [],
              "description": "Configure aggregate address.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "address": {
                  "aliases": [],
                  "description": "ipv4/ipv6 address prefix.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "advertise_only": {
                  "aliases": [],
                  "description": "Advertise without installing the generated blackhole route in FIB.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "as_set": {
                  "aliases": [],
                  "description": "Generate autonomous system set path information.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "attribute_map": {
                  "aliases": [],
                  "description": "Name of the route map used to set the attribute of the aggregate route.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "match_map": {
                  "aliases": [],
                  "description": "Name of the route map used to filter the contributors of the aggregate route.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "summary_only": {
                  "aliases": [],
                  "description": "Filters all more-specific routes from updates.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "as_number": {
              "aliases": [],
              "description": "Autonomous system number.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "bgp_params": {
              "aliases": [],
              "description": "BGP parameters.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "additional_paths": {
                  "aliases": [],
                  "description": "BGP additional-paths commands",
                  "type": "str",
                  "required": false,
                  "choices": [
                    "install",
                    "send",
                    "receive"
                  ],
                  "suboptions": {}
                },
                "advertise_inactive": {
                  "aliases": [],
                  "description": "Advertise BGP routes even if they are inactive in RIB.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "allowas_in": {
                  "aliases": [],
                  "description": "Allow local-as in updates.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "count": {
                      "aliases": [],
                      "description": "Number of local ASNs allowed in a BGP update.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "set": {
                      "aliases": [],
                      "description": "When True, it is set.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "always_compare_med": {
                  "aliases": [],
                  "description": "BGP Always Compare MED",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "asn": {
                  "aliases": [],
                  "description": "AS Number notation.",
                  "type": "str",
                  "required": false,
                  "choices": [
                    "asdot",
                    "asplain"
                  ],
                  "suboptions": {}
                },
                "auto_local_addr": {
                  "aliases": [],
                  "description": "Automatically determine the local address to be used for the non-transport AF.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "bestpath": {
                  "aliases": [],
                  "description": "Select the bestpath selection algorithim for BGP routes.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "as_path": {
                      "aliases": [],
                      "description": "Select the bestpath selection based on as-path.",
                      "type": "str",
                      "required": false,
                      "choices": [
                        "ignore",
                        "multipath_relax"
                      ],
                      "suboptions": {}
                    },
                    "ecmp_fast": {
                      "aliases": [],
                      "description": "Tie-break BGP paths in a ECMP group based on the order of arrival.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "med": {
                      "aliases": [],
                      "description": "MED attribute",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "confed": {
                          "aliases": [],
                          "description": "MED Confed.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "missing_as_worst": {
                          "aliases": [],
                          "description": "MED missing-as-worst.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "skip": {
                      "aliases": [],
                      "description": "skip one of the tie breaking rules in the bestpath selection.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "tie_break": {
                      "aliases": [],
                      "description": "Configure the tie-break option for BGP bestpath selection.",
                      "type": "str",
                      "required": false,
                      "choices": [
                        "cluster_list_length",
                        "router_id"
                      ],
                      "suboptions": {}
                    }
                  }
                },
                "client_to_client": {
                  "aliases": [],
                  "description": "client to client configuration.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "cluster_id": {
                  "aliases": [],
                  "description": "Cluster ID of this router acting as a route reflector.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "confederation": {
                  "aliases": [],
                  "description": "confederation.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "identifier": {
                      "aliases": [],
                      "description": "Confederation identifier.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "peers": {
                      "aliases": [],
                      "description": "Confederation peers.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "control_plane_filter": {
                  "aliases": [],
                  "description": "Control plane filter for BGP.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "convergence": {
                  "aliases": [],
                  "description": "Bgp convergence parameters.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "slow_peer": {
                      "aliases": [],
                      "description": "Maximum amount of time to wait for slow peers to estabilsh session.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "time": {
                      "aliases": [],
                      "description": "time in secs",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "default": {
                  "aliases": [],
                  "description": "Default neighbor configuration commands.",
                  "type": "str",
                  "required": false,
                  "choices": [
                    "ipv4_unicast",
                    "ipv6_unicast"
                  ],
                  "suboptions": {}
                },
                "enforce_first_as": {
                  "aliases": [],
                  "description": "Enforce the First AS for EBGP routes(default).",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "host_routes": {
                  "aliases": [],
                  "description": "BGP host routes configuration.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "labeled_unicast": {
                  "aliases": [],
                  "description": "Labeled Unicast.",
                  "type": "str",
                  "required": false,
                  "choices": [
                    "ip",
                    "tunnel"
                  ],
                  "suboptions": {}
                },
                "listen": {
                  "aliases": [],
                  "description": "BGP listen.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "limit": {
                      "aliases": [],
                      "description": "Set limit on the number of dynamic BGP peers allowed.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "range": {
                      "aliases": [],
                      "description": "Subnet Range to be associated with the peer group.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "address": {
                          "aliases": [],
                          "description": "Address prefix",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "peer_group": {
                          "aliases": [],
                          "description": "Name of peer group.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "name": {
                              "aliases": [],
                              "description": "name.",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            },
                            "peer_filter": {
                              "aliases": [],
                              "description": "Name of peer filter.",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            },
                            "remote_as": {
                              "aliases": [],
                              "description": "Neighbor AS number",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "log_neighbor_changes": {
                  "aliases": [],
                  "description": "Log neighbor up/down events.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "missing_policy": {
                  "aliases": [],
                  "description": "Missing policy override configuration commands.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "action": {
                      "aliases": [],
                      "description": "Missing policy action options.",
                      "type": "str",
                      "required": false,
                      "choices": [
                        "deny",
                        "permit",
                        "deny-in-out"
                      ],
                      "suboptions": {}
                    },
                    "direction": {
                      "aliases": [],
                      "description": "Missing policy direction options.",
                      "type": "str",
                      "required": false,
                      "choices": [
                        "in",
                        "out"
                      ],
                      "suboptions": {}
                    }
                  }
                },
                "monitoring": {
                  "aliases": [],
                  "description": "Enable Bgp monitoring for all/specified stations.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "next_hop_unchanged": {
                  "aliases": [],
                  "description": "Preserve original nexthop while advertising routes to eBGP peers.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "redistribute_internal": {
                  "aliases": [],
                  "description": "Redistribute internal BGP routes.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "route": {
                  "aliases": [],
                  "description": "Configure route-map for route installation.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "route_reflector": {
                  "aliases": [],
                  "description": "Configure route reflector options",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "preserve": {
                      "aliases": [],
                      "description": "preserve route attributes, overwriting route-map changes",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "set": {
                      "aliases": [],
                      "description": "When True route_reflector is set.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "transport": {
                  "aliases": [],
                  "description": "Configure transport port for TCP session",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "default_metric": {
              "aliases": [],
              "description": "Default metric.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "distance": {
              "aliases": [],
              "description": "Define an administrative distance.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "external": {
                  "aliases": [],
                  "description": "distance for external routes.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "internal": {
                  "aliases": [],
                  "description": "distance for internal routes.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "local": {
                  "aliases": [],
                  "description": "distance for local routes.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "graceful_restart": {
              "aliases": [],
              "description": "Enable graceful restart mode.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "restart_time": {
                  "aliases": [],
                  "description": "Set the max time needed to restart and come back up.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "set": {
                  "aliases": [],
                  "description": "When True, graceful restart is set.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "stalepath_time": {
                  "aliases": [],
                  "description": "Set the max time to hold onto restarting peer stale paths.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "graceful_restart_helper": {
              "aliases": [],
              "description": "Enable graceful restart helper mode.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "maximum_paths": {
              "aliases": [],
              "description": "Maximum number of equal cost paths.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "max_equal_cost_paths": {
                  "aliases": [],
                  "description": "Value for maximum number of equal cost paths.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "max_installed_ecmp_paths": {
                  "aliases": [],
                  "description": "Value for maximum number of installed ECMP routes.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "monitoring": {
              "aliases": [],
              "description": "BGP monitoring protocol configuration.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "port": {
                  "aliases": [],
                  "description": "Configure the BGP monitoring protocol port number <1024-65535>.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "received": {
                  "aliases": [],
                  "description": "BGP monitoring protocol received route selection.",
                  "type": "str",
                  "required": false,
                  "choices": [
                    "post_policy",
                    "pre_policy"
                  ],
                  "suboptions": {}
                },
                "station": {
                  "aliases": [],
                  "description": "BGP monitoring station configuration.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "timestamp": {
                  "aliases": [],
                  "description": "BGP monitoring protocol Per-Peer Header timestamp behavior.",
                  "type": "str",
                  "required": false,
                  "choices": [
                    "none",
                    "send_time"
                  ],
                  "suboptions": {}
                }
              }
            },
            "neighbor": {
              "aliases": [
                "neighbors"
              ],
              "description": "Configure routing for a network.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "additional_paths": {
                  "aliases": [],
                  "description": "BGP additional-paths commands.",
                  "type": "str",
                  "required": false,
                  "choices": [
                    "send",
                    "receive"
                  ],
                  "suboptions": {}
                },
                "allowas_in": {
                  "aliases": [],
                  "description": "Allow local-as in updates.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "count": {
                      "aliases": [],
                      "description": "Number of local ASNs allowed in a BGP update.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "set": {
                      "aliases": [],
                      "description": "When True, it is set.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "auto_local_addr": {
                  "aliases": [],
                  "description": "Automatically determine the local address to be used for the non-transport AF.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "default_originate": {
                  "aliases": [],
                  "description": "Originate default route to this neighbor.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "always": {
                      "aliases": [],
                      "description": "Always originate default route to this neighbor.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "route_map": {
                      "aliases": [],
                      "description": "Route map reference.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "description": {
                  "aliases": [],
                  "description": "Text describing the neighbor.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "dont_capability_negotiate": {
                  "aliases": [],
                  "description": "Donot perform Capability Negotiation with this neighbor.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "ebgp_multihop": {
                  "aliases": [],
                  "description": "Allow BGP connections to indirectly connected external peers.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "set": {
                      "aliases": [],
                      "description": "If True, ttl is not set.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "ttl": {
                      "aliases": [],
                      "description": "Time-to-live in the range 1-255 hops.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "encryption_password": {
                  "aliases": [],
                  "description": "Password to use in computation of MD5 hash.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "password": {
                      "aliases": [],
                      "description": "password (up to 80 chars).",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "type": {
                      "aliases": [],
                      "description": "Encryption type.",
                      "type": "int",
                      "required": false,
                      "choices": [
                        "0",
                        "7"
                      ],
                      "suboptions": {}
                    }
                  }
                },
                "enforce_first_as": {
                  "aliases": [],
                  "description": "Enforce the First AS for EBGP routes(default).",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "export_localpref": {
                  "aliases": [],
                  "description": "Override localpref when exporting to an internal peer.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "fall_over": {
                  "aliases": [],
                  "description": "Configure BFD protocol options for this peer.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "graceful_restart": {
                  "aliases": [],
                  "description": "Enable graceful restart mode.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "graceful_restart_helper": {
                  "aliases": [],
                  "description": "Enable graceful restart helper mode.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "idle_restart_timer": {
                  "aliases": [],
                  "description": "Neighbor idle restart timer.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "import_localpref": {
                  "aliases": [],
                  "description": "Override localpref when importing from an external peer.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "link_bandwidth": {
                  "aliases": [],
                  "description": "Enable link bandwidth community for routes to this peer.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "auto": {
                      "aliases": [],
                      "description": "Enable link bandwidth auto generation for routes from this peer.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "default": {
                      "aliases": [],
                      "description": "Enable link bandwidth default generation for routes from this peer.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "set": {
                      "aliases": [],
                      "description": "If True, set link bandwidth",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "update_delay": {
                      "aliases": [],
                      "description": "Delay outbound route updates.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "local_as": {
                  "aliases": [],
                  "description": "Configure local AS number advertised to peer.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "as_number": {
                      "aliases": [],
                      "description": "AS number.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "fallback": {
                      "aliases": [],
                      "description": "Prefer router AS Number over local AS Number.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "local_v6_addr": {
                  "aliases": [],
                  "description": "The local IPv6 address of the neighbor in A:B:C:D:E:F:G:H format.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "maximum_accepted_routes": {
                  "aliases": [],
                  "description": "Maximum number of routes accepted from this peer.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "count": {
                      "aliases": [],
                      "description": "Maximum number of accepted routes (0 means unlimited).",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "warning_limit": {
                      "aliases": [],
                      "description": "Maximum number of accepted routes after which a warning is issued. (0 means never warn)",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "maximum_received_routes": {
                  "aliases": [],
                  "description": "Maximum number of routes received from this peer.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "count": {
                      "aliases": [],
                      "description": "Maximum number of routes (0 means unlimited).",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "warning_limit": {
                      "aliases": [],
                      "description": "Percentage of maximum-routes at which warning is to be issued.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "limit_count": {
                          "aliases": [],
                          "description": "Number of routes at which to warn.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "limit_percent": {
                          "aliases": [],
                          "description": "Percentage of maximum number of routes at which to warn( 1-100).",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "warning_only": {
                      "aliases": [],
                      "description": "Only warn, no restart, if max route limit exceeded.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "metric_out": {
                  "aliases": [],
                  "description": "MED value to advertise to peer.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "monitoring": {
                  "aliases": [],
                  "description": "Enable BGP Monitoring Protocol for this peer.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "next_hop_self": {
                  "aliases": [],
                  "description": "Always advertise this router address as the BGP next hop",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "next_hop_unchanged": {
                  "aliases": [],
                  "description": "Preserve original nexthop while advertising routes to eBGP peers.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "next_hop_v6_address": {
                  "aliases": [],
                  "description": "IPv6 next-hop address for the neighbor",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "out_delay": {
                  "aliases": [],
                  "description": "Delay outbound route updates.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "peer": {
                  "aliases": [],
                  "description": "Neighbor address or peer group.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "peer_group": {
                  "aliases": [],
                  "description": "Name of the peer group.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "prefix_list": {
                  "aliases": [],
                  "description": "Prefix list reference.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "direction": {
                      "aliases": [],
                      "description": "Configure an inbound/outbound prefix-list.",
                      "type": "str",
                      "required": false,
                      "choices": [
                        "in",
                        "out"
                      ],
                      "suboptions": {}
                    },
                    "name": {
                      "aliases": [],
                      "description": "prefix list name.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "remote_as": {
                  "aliases": [],
                  "description": "Neighbor Autonomous System.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "remove_private_as": {
                  "aliases": [],
                  "description": "Remove private AS number from updates to this peer.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "all": {
                      "aliases": [],
                      "description": "Remove private AS number.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "replace_as": {
                      "aliases": [],
                      "description": "Replace private AS number with local AS number.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "set": {
                      "aliases": [],
                      "description": "If True, set remove_private_as.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "route_map": {
                  "aliases": [],
                  "description": "Route map reference.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "direction": {
                      "aliases": [],
                      "description": "Configure an inbound/outbound route-map.",
                      "type": "str",
                      "required": false,
                      "choices": [
                        "in",
                        "out"
                      ],
                      "suboptions": {}
                    },
                    "name": {
                      "aliases": [],
                      "description": "Route map name.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "route_reflector_client": {
                  "aliases": [],
                  "description": "Configure peer as a route reflector client.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "route_to_peer": {
                  "aliases": [],
                  "description": "Use routing table information to reach the peer.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "send_community": {
                  "aliases": [],
                  "description": "Send community attribute to this neighbor.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "community_attribute": {
                      "aliases": [],
                      "description": "Type of community attributes to send to this neighbor.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "divide": {
                      "aliases": [],
                      "description": "link-bandwidth divide attribute.",
                      "type": "str",
                      "required": false,
                      "choices": [
                        "equal",
                        "ratio"
                      ],
                      "suboptions": {}
                    },
                    "link_bandwidth_attribute": {
                      "aliases": [],
                      "description": "cumulative/aggregate attribute to be sent.",
                      "type": "str",
                      "required": false,
                      "choices": [
                        "aggregate",
                        "divide"
                      ],
                      "suboptions": {}
                    },
                    "speed": {
                      "aliases": [],
                      "description": "Reference link speed in bits/second",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "sub_attribute": {
                      "aliases": [],
                      "description": "Attribute to be sent to the neighbor.",
                      "type": "str",
                      "required": false,
                      "choices": [
                        "extended",
                        "link-bandwidth",
                        "standard"
                      ],
                      "suboptions": {}
                    }
                  }
                },
                "shutdown": {
                  "aliases": [],
                  "description": "Administratively shut down this neighbor.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "soft_recognition": {
                  "aliases": [],
                  "description": "Configure how to handle routes that fail import.",
                  "type": "str",
                  "required": false,
                  "choices": [
                    "all",
                    "None"
                  ],
                  "suboptions": {}
                },
                "timers": {
                  "aliases": [],
                  "description": "Timers.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "holdtime": {
                      "aliases": [],
                      "description": "Hold time in secs.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "keepalive": {
                      "aliases": [],
                      "description": "Keep Alive Interval in secs.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "transport": {
                  "aliases": [],
                  "description": "Configure transport options for TCP session.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "connection_mode": {
                      "aliases": [],
                      "description": "Configure connection-mode for TCP session.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "remote_port": {
                      "aliases": [],
                      "description": "Configure BGP peer TCP port to connect to.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "ttl": {
                  "aliases": [],
                  "description": "BGP ttl security check",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "update_source": {
                  "aliases": [],
                  "description": "Specify the local source interface for peer BGP sessions.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "weight": {
                  "aliases": [],
                  "description": "Weight to assign.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "network": {
              "aliases": [
                "networks"
              ],
              "description": "Configure routing for a network.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "address": {
                  "aliases": [],
                  "description": "address prefix.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "route_map": {
                  "aliases": [],
                  "description": "Name of route map.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "redistribute": {
              "aliases": [],
              "description": "Redistribute routes in to BGP.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "isis_level": {
                  "aliases": [],
                  "description": "Applicable for isis routes. Specify isis route level.",
                  "type": "str",
                  "required": false,
                  "choices": [
                    "level-1",
                    "level-2",
                    "level-1-2"
                  ],
                  "suboptions": {}
                },
                "ospf_route": {
                  "aliases": [],
                  "description": "ospf route options.",
                  "type": "str",
                  "required": false,
                  "choices": [
                    "internal",
                    "external",
                    "nssa_external_1",
                    "nssa_external_2"
                  ],
                  "suboptions": {}
                },
                "protocol": {
                  "aliases": [],
                  "description": "Routes to be redistributed.",
                  "type": "str",
                  "required": false,
                  "choices": [
                    "isis",
                    "ospfv3",
                    "ospf",
                    "attached-host",
                    "connected",
                    "rip",
                    "static"
                  ],
                  "suboptions": {}
                },
                "route_map": {
                  "aliases": [],
                  "description": "Route map reference.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "route_target": {
              "aliases": [],
              "description": "Route target.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "action": {
                  "aliases": [],
                  "description": "Route action.",
                  "type": "str",
                  "required": false,
                  "choices": [
                    "both",
                    "import",
                    "export"
                  ],
                  "suboptions": {}
                },
                "target": {
                  "aliases": [],
                  "description": "Route Target.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "router_id": {
              "aliases": [],
              "description": "Router id.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "shutdown": {
              "aliases": [],
              "description": "When True, shut down BGP.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "timers": {
              "aliases": [],
              "description": "Timers.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "holdtime": {
                  "aliases": [],
                  "description": "Hold time in secs.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "keepalive": {
                  "aliases": [],
                  "description": "Keep Alive Interval in secs.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "ucmp": {
              "aliases": [],
              "description": "Configure unequal cost multipathing.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "fec": {
                  "aliases": [],
                  "description": "Configure UCMP fec utilization threshold.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "clear": {
                      "aliases": [],
                      "description": "UCMP FEC utilization Clear thresholds.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "trigger": {
                      "aliases": [],
                      "description": "UCMP fec utilization too high threshold.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "link_bandwidth": {
                  "aliases": [],
                  "description": "Configure link-bandwidth propagation delay.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "mode": {
                      "aliases": [],
                      "description": "UCMP link bandwidth mode",
                      "type": "str",
                      "required": false,
                      "choices": [
                        "encoding_weighted",
                        "recursive"
                      ],
                      "suboptions": {}
                    },
                    "update_delay": {
                      "aliases": [],
                      "description": "Link Bandwidth Advertisement delay.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "mode": {
                  "aliases": [],
                  "description": "UCMP mode.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "nexthops": {
                      "aliases": [],
                      "description": "Value for total number UCMP nexthops.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "set": {
                      "aliases": [],
                      "description": "If True, ucmp mode is set to 1.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                }
              }
            },
            "update": {
              "aliases": [],
              "description": "Configure BGP update generation.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "batch_size": {
                  "aliases": [],
                  "description": "batch size for FIB route acknowledgements.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "wait_for": {
                  "aliases": [],
                  "description": "wait for options before converge or synchronize.",
                  "type": "str",
                  "required": false,
                  "choices": [
                    "wait_for_convergence",
                    "wait_install"
                  ],
                  "suboptions": {}
                }
              }
            },
            "vlan": {
              "aliases": [],
              "description": "Configure MAC VRF BGP for single VLAN support.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "vlan_aware_bundle": {
              "aliases": [],
              "description": "Configure MAC VRF BGP for multiple VLAN support.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "vrfs": {
              "aliases": [],
              "description": "Configure BGP in a VRF.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "access_group": {
                  "aliases": [],
                  "description": "ip/ipv6 access list configuration.",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "acl_name": {
                      "aliases": [],
                      "description": "access list name.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "afi": {
                      "aliases": [],
                      "description": "Specify ip/ipv6.",
                      "type": "str",
                      "required": false,
                      "choices": [
                        "ipv4",
                        "ipv6"
                      ],
                      "suboptions": {}
                    },
                    "direction": {
                      "aliases": [],
                      "description": "direction of packets.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "aggregate_address": {
                  "aliases": [],
                  "description": "Configure aggregate address.",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "address": {
                      "aliases": [],
                      "description": "ipv4/ipv6 address prefix.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "advertise_only": {
                      "aliases": [],
                      "description": "Advertise without installing the generated blackhole route in FIB.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "as_set": {
                      "aliases": [],
                      "description": "Generate autonomous system set path information.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "attribute_map": {
                      "aliases": [],
                      "description": "Name of the route map used to set the attribute of the aggregate route.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "match_map": {
                      "aliases": [],
                      "description": "Name of the route map used to filter the contributors of the aggregate route.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "summary_only": {
                      "aliases": [],
                      "description": "Filters all more-specific routes from updates.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "bgp_params": {
                  "aliases": [],
                  "description": "BGP parameters.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "additional_paths": {
                      "aliases": [],
                      "description": "BGP additional-paths commands",
                      "type": "str",
                      "required": false,
                      "choices": [
                        "install",
                        "send",
                        "receive"
                      ],
                      "suboptions": {}
                    },
                    "advertise_inactive": {
                      "aliases": [],
                      "description": "Advertise BGP routes even if they are inactive in RIB.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "allowas_in": {
                      "aliases": [],
                      "description": "Allow local-as in updates.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "count": {
                          "aliases": [],
                          "description": "Number of local ASNs allowed in a BGP update.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "set": {
                          "aliases": [],
                          "description": "When True, it is set.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "always_compare_med": {
                      "aliases": [],
                      "description": "BGP Always Compare MED",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "asn": {
                      "aliases": [],
                      "description": "AS Number notation.",
                      "type": "str",
                      "required": false,
                      "choices": [
                        "asdot",
                        "asplain"
                      ],
                      "suboptions": {}
                    },
                    "auto_local_addr": {
                      "aliases": [],
                      "description": "Automatically determine the local address to be used for the non-transport AF.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "bestpath": {
                      "aliases": [],
                      "description": "Select the bestpath selection algorithim for BGP routes.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "as_path": {
                          "aliases": [],
                          "description": "Select the bestpath selection based on as-path.",
                          "type": "str",
                          "required": false,
                          "choices": [
                            "ignore",
                            "multipath_relax"
                          ],
                          "suboptions": {}
                        },
                        "ecmp_fast": {
                          "aliases": [],
                          "description": "Tie-break BGP paths in a ECMP group based on the order of arrival.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "med": {
                          "aliases": [],
                          "description": "MED attribute",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "confed": {
                              "aliases": [],
                              "description": "MED Confed.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "missing_as_worst": {
                              "aliases": [],
                              "description": "MED missing-as-worst.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "skip": {
                          "aliases": [],
                          "description": "skip one of the tie breaking rules in the bestpath selection.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "tie_break": {
                          "aliases": [],
                          "description": "Configure the tie-break option for BGP bestpath selection.",
                          "type": "str",
                          "required": false,
                          "choices": [
                            "cluster_list_length",
                            "router_id"
                          ],
                          "suboptions": {}
                        }
                      }
                    },
                    "client_to_client": {
                      "aliases": [],
                      "description": "client to client configuration.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "cluster_id": {
                      "aliases": [],
                      "description": "Cluster ID of this router acting as a route reflector.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "confederation": {
                      "aliases": [],
                      "description": "confederation.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "identifier": {
                          "aliases": [],
                          "description": "Confederation identifier.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "peers": {
                          "aliases": [],
                          "description": "Confederation peers.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "control_plane_filter": {
                      "aliases": [],
                      "description": "Control plane filter for BGP.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "convergence": {
                      "aliases": [],
                      "description": "Bgp convergence parameters.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "slow_peer": {
                          "aliases": [],
                          "description": "Maximum amount of time to wait for slow peers to estabilsh session.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "time": {
                          "aliases": [],
                          "description": "time in secs",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "default": {
                      "aliases": [],
                      "description": "Default neighbor configuration commands.",
                      "type": "str",
                      "required": false,
                      "choices": [
                        "ipv4_unicast",
                        "ipv6_unicast"
                      ],
                      "suboptions": {}
                    },
                    "enforce_first_as": {
                      "aliases": [],
                      "description": "Enforce the First AS for EBGP routes(default).",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "host_routes": {
                      "aliases": [],
                      "description": "BGP host routes configuration.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "labeled_unicast": {
                      "aliases": [],
                      "description": "Labeled Unicast.",
                      "type": "str",
                      "required": false,
                      "choices": [
                        "ip",
                        "tunnel"
                      ],
                      "suboptions": {}
                    },
                    "listen": {
                      "aliases": [],
                      "description": "BGP listen.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "limit": {
                          "aliases": [],
                          "description": "Set limit on the number of dynamic BGP peers allowed.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "range": {
                          "aliases": [],
                          "description": "Subnet Range to be associated with the peer group.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "address": {
                              "aliases": [],
                              "description": "Address prefix",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            },
                            "peer_group": {
                              "aliases": [],
                              "description": "Name of peer group.",
                              "type": "dict",
                              "required": false,
                              "suboptions": {
                                "name": {
                                  "aliases": [],
                                  "description": "name.",
                                  "type": "str",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "peer_filter": {
                                  "aliases": [],
                                  "description": "Name of peer filter.",
                                  "type": "str",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "remote_as": {
                                  "aliases": [],
                                  "description": "Neighbor AS number",
                                  "type": "str",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "log_neighbor_changes": {
                      "aliases": [],
                      "description": "Log neighbor up/down events.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "missing_policy": {
                      "aliases": [],
                      "description": "Missing policy override configuration commands.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "action": {
                          "aliases": [],
                          "description": "Missing policy action options.",
                          "type": "str",
                          "required": false,
                          "choices": [
                            "deny",
                            "permit",
                            "deny-in-out"
                          ],
                          "suboptions": {}
                        },
                        "direction": {
                          "aliases": [],
                          "description": "Missing policy direction options.",
                          "type": "str",
                          "required": false,
                          "choices": [
                            "in",
                            "out"
                          ],
                          "suboptions": {}
                        }
                      }
                    },
                    "monitoring": {
                      "aliases": [],
                      "description": "Enable Bgp monitoring for all/specified stations.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "next_hop_unchanged": {
                      "aliases": [],
                      "description": "Preserve original nexthop while advertising routes to eBGP peers.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "redistribute_internal": {
                      "aliases": [],
                      "description": "Redistribute internal BGP routes.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "route": {
                      "aliases": [],
                      "description": "Configure route-map for route installation.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "route_reflector": {
                      "aliases": [],
                      "description": "Configure route reflector options",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "preserve": {
                          "aliases": [],
                          "description": "preserve route attributes, overwriting route-map changes",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "set": {
                          "aliases": [],
                          "description": "When True route_reflector is set.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "transport": {
                      "aliases": [],
                      "description": "Configure transport port for TCP session",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "default_metric": {
                  "aliases": [],
                  "description": "Default metric.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "distance": {
                  "aliases": [],
                  "description": "Define an administrative distance.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "external": {
                      "aliases": [],
                      "description": "distance for external routes.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "internal": {
                      "aliases": [],
                      "description": "distance for internal routes.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "local": {
                      "aliases": [],
                      "description": "distance for local routes.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "graceful_restart": {
                  "aliases": [],
                  "description": "Enable graceful restart mode.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "restart_time": {
                      "aliases": [],
                      "description": "Set the max time needed to restart and come back up.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "set": {
                      "aliases": [],
                      "description": "When True, graceful restart is set.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "stalepath_time": {
                      "aliases": [],
                      "description": "Set the max time to hold onto restarting peer stale paths.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "graceful_restart_helper": {
                  "aliases": [],
                  "description": "Enable graceful restart helper mode.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "maximum_paths": {
                  "aliases": [],
                  "description": "Maximum number of equal cost paths.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "max_equal_cost_paths": {
                      "aliases": [],
                      "description": "Value for maximum number of equal cost paths.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "max_installed_ecmp_paths": {
                      "aliases": [],
                      "description": "Value for maximum number of installed ECMP routes.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "neighbor": {
                  "aliases": [
                    "neighbors"
                  ],
                  "description": "Configure routing for a network.",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "additional_paths": {
                      "aliases": [],
                      "description": "BGP additional-paths commands.",
                      "type": "str",
                      "required": false,
                      "choices": [
                        "send",
                        "receive"
                      ],
                      "suboptions": {}
                    },
                    "allowas_in": {
                      "aliases": [],
                      "description": "Allow local-as in updates.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "count": {
                          "aliases": [],
                          "description": "Number of local ASNs allowed in a BGP update.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "set": {
                          "aliases": [],
                          "description": "When True, it is set.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "auto_local_addr": {
                      "aliases": [],
                      "description": "Automatically determine the local address to be used for the non-transport AF.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "default_originate": {
                      "aliases": [],
                      "description": "Originate default route to this neighbor.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "always": {
                          "aliases": [],
                          "description": "Always originate default route to this neighbor.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "route_map": {
                          "aliases": [],
                          "description": "Route map reference.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "description": {
                      "aliases": [],
                      "description": "Text describing the neighbor.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "dont_capability_negotiate": {
                      "aliases": [],
                      "description": "Donot perform Capability Negotiation with this neighbor.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "ebgp_multihop": {
                      "aliases": [],
                      "description": "Allow BGP connections to indirectly connected external peers.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "set": {
                          "aliases": [],
                          "description": "If True, ttl is not set.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "ttl": {
                          "aliases": [],
                          "description": "Time-to-live in the range 1-255 hops.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "encryption_password": {
                      "aliases": [],
                      "description": "Password to use in computation of MD5 hash.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "password": {
                          "aliases": [],
                          "description": "password (up to 80 chars).",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "type": {
                          "aliases": [],
                          "description": "Encryption type.",
                          "type": "int",
                          "required": false,
                          "choices": [
                            "0",
                            "7"
                          ],
                          "suboptions": {}
                        }
                      }
                    },
                    "enforce_first_as": {
                      "aliases": [],
                      "description": "Enforce the First AS for EBGP routes(default).",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "export_localpref": {
                      "aliases": [],
                      "description": "Override localpref when exporting to an internal peer.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "fall_over": {
                      "aliases": [],
                      "description": "Configure BFD protocol options for this peer.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "graceful_restart": {
                      "aliases": [],
                      "description": "Enable graceful restart mode.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "graceful_restart_helper": {
                      "aliases": [],
                      "description": "Enable graceful restart helper mode.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "idle_restart_timer": {
                      "aliases": [],
                      "description": "Neighbor idle restart timer.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "import_localpref": {
                      "aliases": [],
                      "description": "Override localpref when importing from an external peer.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "link_bandwidth": {
                      "aliases": [],
                      "description": "Enable link bandwidth community for routes to this peer.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "auto": {
                          "aliases": [],
                          "description": "Enable link bandwidth auto generation for routes from this peer.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "default": {
                          "aliases": [],
                          "description": "Enable link bandwidth default generation for routes from this peer.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "set": {
                          "aliases": [],
                          "description": "If True, set link bandwidth",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "update_delay": {
                          "aliases": [],
                          "description": "Delay outbound route updates.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "local_as": {
                      "aliases": [],
                      "description": "Configure local AS number advertised to peer.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "as_number": {
                          "aliases": [],
                          "description": "AS number.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "fallback": {
                          "aliases": [],
                          "description": "Prefer router AS Number over local AS Number.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "local_v6_addr": {
                      "aliases": [],
                      "description": "The local IPv6 address of the neighbor in A:B:C:D:E:F:G:H format.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "maximum_accepted_routes": {
                      "aliases": [],
                      "description": "Maximum number of routes accepted from this peer.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "count": {
                          "aliases": [],
                          "description": "Maximum number of accepted routes (0 means unlimited).",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "warning_limit": {
                          "aliases": [],
                          "description": "Maximum number of accepted routes after which a warning is issued. (0 means never warn)",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "maximum_received_routes": {
                      "aliases": [],
                      "description": "Maximum number of routes received from this peer.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "count": {
                          "aliases": [],
                          "description": "Maximum number of routes (0 means unlimited).",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "warning_limit": {
                          "aliases": [],
                          "description": "Percentage of maximum-routes at which warning is to be issued.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "limit_count": {
                              "aliases": [],
                              "description": "Number of routes at which to warn.",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "limit_percent": {
                              "aliases": [],
                              "description": "Percentage of maximum number of routes at which to warn( 1-100).",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "warning_only": {
                          "aliases": [],
                          "description": "Only warn, no restart, if max route limit exceeded.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "metric_out": {
                      "aliases": [],
                      "description": "MED value to advertise to peer.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "monitoring": {
                      "aliases": [],
                      "description": "Enable BGP Monitoring Protocol for this peer.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "next_hop_self": {
                      "aliases": [],
                      "description": "Always advertise this router address as the BGP next hop",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "next_hop_unchanged": {
                      "aliases": [],
                      "description": "Preserve original nexthop while advertising routes to eBGP peers.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "next_hop_v6_address": {
                      "aliases": [],
                      "description": "IPv6 next-hop address for the neighbor",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "out_delay": {
                      "aliases": [],
                      "description": "Delay outbound route updates.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "peer": {
                      "aliases": [],
                      "description": "Neighbor address or peer group.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "peer_group": {
                      "aliases": [],
                      "description": "Name of the peer group.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "prefix_list": {
                      "aliases": [],
                      "description": "Prefix list reference.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "direction": {
                          "aliases": [],
                          "description": "Configure an inbound/outbound prefix-list.",
                          "type": "str",
                          "required": false,
                          "choices": [
                            "in",
                            "out"
                          ],
                          "suboptions": {}
                        },
                        "name": {
                          "aliases": [],
                          "description": "prefix list name.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "remote_as": {
                      "aliases": [],
                      "description": "Neighbor Autonomous System.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "remove_private_as": {
                      "aliases": [],
                      "description": "Remove private AS number from updates to this peer.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "all": {
                          "aliases": [],
                          "description": "Remove private AS number.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "replace_as": {
                          "aliases": [],
                          "description": "Replace private AS number with local AS number.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "set": {
                          "aliases": [],
                          "description": "If True, set remove_private_as.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "route_map": {
                      "aliases": [],
                      "description": "Route map reference.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "direction": {
                          "aliases": [],
                          "description": "Configure an inbound/outbound route-map.",
                          "type": "str",
                          "required": false,
                          "choices": [
                            "in",
                            "out"
                          ],
                          "suboptions": {}
                        },
                        "name": {
                          "aliases": [],
                          "description": "Route map name.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "route_reflector_client": {
                      "aliases": [],
                      "description": "Configure peer as a route reflector client.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "route_to_peer": {
                      "aliases": [],
                      "description": "Use routing table information to reach the peer.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "send_community": {
                      "aliases": [],
                      "description": "Send community attribute to this neighbor.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "community_attribute": {
                          "aliases": [],
                          "description": "Type of community attributes to send to this neighbor.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "divide": {
                          "aliases": [],
                          "description": "link-bandwidth divide attribute.",
                          "type": "str",
                          "required": false,
                          "choices": [
                            "equal",
                            "ratio"
                          ],
                          "suboptions": {}
                        },
                        "link_bandwidth_attribute": {
                          "aliases": [],
                          "description": "cumulative/aggregate attribute to be sent.",
                          "type": "str",
                          "required": false,
                          "choices": [
                            "aggregate",
                            "divide"
                          ],
                          "suboptions": {}
                        },
                        "speed": {
                          "aliases": [],
                          "description": "Reference link speed in bits/second",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "sub_attribute": {
                          "aliases": [],
                          "description": "Attribute to be sent to the neighbor.",
                          "type": "str",
                          "required": false,
                          "choices": [
                            "extended",
                            "link-bandwidth",
                            "standard"
                          ],
                          "suboptions": {}
                        }
                      }
                    },
                    "shutdown": {
                      "aliases": [],
                      "description": "Administratively shut down this neighbor.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "soft_recognition": {
                      "aliases": [],
                      "description": "Configure how to handle routes that fail import.",
                      "type": "str",
                      "required": false,
                      "choices": [
                        "all",
                        "None"
                      ],
                      "suboptions": {}
                    },
                    "timers": {
                      "aliases": [],
                      "description": "Timers.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "holdtime": {
                          "aliases": [],
                          "description": "Hold time in secs.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "keepalive": {
                          "aliases": [],
                          "description": "Keep Alive Interval in secs.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "transport": {
                      "aliases": [],
                      "description": "Configure transport options for TCP session.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "connection_mode": {
                          "aliases": [],
                          "description": "Configure connection-mode for TCP session.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "remote_port": {
                          "aliases": [],
                          "description": "Configure BGP peer TCP port to connect to.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "ttl": {
                      "aliases": [],
                      "description": "BGP ttl security check",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "update_source": {
                      "aliases": [],
                      "description": "Specify the local source interface for peer BGP sessions.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "weight": {
                      "aliases": [],
                      "description": "Weight to assign.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "network": {
                  "aliases": [
                    "networks"
                  ],
                  "description": "Configure routing for a network.",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "address": {
                      "aliases": [],
                      "description": "address prefix.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "route_map": {
                      "aliases": [],
                      "description": "Name of route map.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "redistribute": {
                  "aliases": [],
                  "description": "Redistribute routes in to BGP.",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "isis_level": {
                      "aliases": [],
                      "description": "Applicable for isis routes. Specify isis route level.",
                      "type": "str",
                      "required": false,
                      "choices": [
                        "level-1",
                        "level-2",
                        "level-1-2"
                      ],
                      "suboptions": {}
                    },
                    "ospf_route": {
                      "aliases": [],
                      "description": "ospf route options.",
                      "type": "str",
                      "required": false,
                      "choices": [
                        "internal",
                        "external",
                        "nssa_external_1",
                        "nssa_external_2"
                      ],
                      "suboptions": {}
                    },
                    "protocol": {
                      "aliases": [],
                      "description": "Routes to be redistributed.",
                      "type": "str",
                      "required": false,
                      "choices": [
                        "isis",
                        "ospfv3",
                        "ospf",
                        "attached-host",
                        "connected",
                        "rip",
                        "static"
                      ],
                      "suboptions": {}
                    },
                    "route_map": {
                      "aliases": [],
                      "description": "Route map reference.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "route_target": {
                  "aliases": [],
                  "description": "Route target.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "action": {
                      "aliases": [],
                      "description": "Route action.",
                      "type": "str",
                      "required": false,
                      "choices": [
                        "both",
                        "import",
                        "export"
                      ],
                      "suboptions": {}
                    },
                    "imported_route": {
                      "aliases": [],
                      "description": "Export routes imported from the same Afi/Safi.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "route_map": {
                      "aliases": [],
                      "description": "Name of a route map.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "target": {
                      "aliases": [],
                      "description": "Route Target.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "type": {
                      "aliases": [],
                      "description": "Type of address fmaily",
                      "type": "str",
                      "required": false,
                      "choices": [
                        "evpn",
                        "vpn-ipv4",
                        "vpn-ipv6"
                      ],
                      "suboptions": {}
                    }
                  }
                },
                "router_id": {
                  "aliases": [],
                  "description": "Router id.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "shutdown": {
                  "aliases": [],
                  "description": "When True, shut down BGP.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "timers": {
                  "aliases": [],
                  "description": "Timers.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "holdtime": {
                      "aliases": [],
                      "description": "Hold time in secs.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "keepalive": {
                      "aliases": [],
                      "description": "Keep Alive Interval in secs.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "ucmp": {
                  "aliases": [],
                  "description": "Configure unequal cost multipathing.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "fec": {
                      "aliases": [],
                      "description": "Configure UCMP fec utilization threshold.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "clear": {
                          "aliases": [],
                          "description": "UCMP FEC utilization Clear thresholds.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "trigger": {
                          "aliases": [],
                          "description": "UCMP fec utilization too high threshold.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "link_bandwidth": {
                      "aliases": [],
                      "description": "Configure link-bandwidth propagation delay.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "mode": {
                          "aliases": [],
                          "description": "UCMP link bandwidth mode",
                          "type": "str",
                          "required": false,
                          "choices": [
                            "encoding_weighted",
                            "recursive",
                            "update_delay"
                          ],
                          "suboptions": {}
                        },
                        "update_delay": {
                          "aliases": [],
                          "description": "Link Bandwidth Advertisement delay.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "mode": {
                      "aliases": [],
                      "description": "UCMP mode.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "nexthops": {
                          "aliases": [],
                          "description": "Value for total number UCMP nexthops.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "set": {
                          "aliases": [],
                          "description": "If True, ucmp mode is set to 1.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    }
                  }
                },
                "update": {
                  "aliases": [],
                  "description": "Configure BGP update generation.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "batch_size": {
                      "aliases": [],
                      "description": "batch size for FIB route acknowledgements.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "wait_for": {
                      "aliases": [],
                      "description": "wait for options before converge or synchronize.",
                      "type": "str",
                      "required": false,
                      "choices": [
                        "wait_for_convergence",
                        "wait_install"
                      ],
                      "suboptions": {}
                    }
                  }
                },
                "vrf": {
                  "aliases": [],
                  "description": "VRF name.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            }
          }
        },
        "running_config": {
          "aliases": [],
          "description": "This option is used only with state I(parsed).\nThe value of this option should be the output received from the EOS device by executing the command B(show running-config | section bgp).\nThe state I(parsed) reads the configuration from C(running_config) option and transforms it into Ansible structured data as per the resource module's argspec and the value is then returned in the I(parsed) key within the result.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The state the configuration should be left in.\nState I(purged) removes all the BGP configurations from the target device. Use caution with this state.('no router bgp <x>')\nState I(deleted) only removes BGP attributes that this modules manages and does not negate the BGP process completely. Thereby, preserving address-family related configurations under BGP context.\nRunning states I(deleted) and I(replaced) will result in an error if there are address-family configuration lines present under vrf context that is is to be removed. Please use the  M(arista.eos.eos_bgp_address_family) module for prior cleanup.\nRefer to examples for more details.",
          "default": "merged",
          "type": "str",
          "required": false,
          "choices": [
            "deleted",
            "merged",
            "purged",
            "replaced",
            "gathered",
            "rendered",
            "parsed"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manages BGP global resource module",
      "version_added": "1.4.0"
    },
    "examples": "\n# Using merged\n# Before state\n\n# veos(config)#show running-config | section bgp\n# veos(config)#\n\n  - name: Merge provided configuration with device configuration\n    arista.eos.eos_bgp_global:\n      config:\n        as_number: \"100\"\n        bgp_params:\n          host_routes: True\n          convergence:\n            slow_peer: True\n            time: 6\n          additional_paths: \"send\"\n          log_neighbor_changes: True\n        maximum_paths:\n          max_equal_cost_paths: 55\n        aggregate_address:\n          - address: \"1.2.1.0/24\"\n            as_set: true\n            match_map: \"match01\"\n          - address: \"5.2.1.0/24\"\n            attribute_map: \"attrmatch01\"\n            advertise_only: true\n        redistribute:\n          - protocol: \"static\"\n            route_map: \"map_static\"\n          - protocol: \"attached-host\"\n        distance:\n          internal: 50\n        neighbor:\n          - peer: \"10.1.3.2\"\n            allowas_in:\n              set: true\n            default_originate:\n              always: true\n            dont_capability_negotiate: true\n            export_localpref: 4000\n            maximum_received_routes:\n              count: 500\n              warning_limit:\n                limit_percent: 5\n            next_hop_unchanged: true\n            prefix_list:\n              name: \"prefix01\"\n              direction: \"out\"\n          - peer: \"peer1\"\n            fall_over: true\n            link_bandwidth:\n              update_delay: 5\n            monitoring: True\n            send_community:\n              community_attribute: \"extended\"\n              sub_attribute: \"link-bandwidth\"\n              link_bandwidth_attribute: \"aggregate\"\n              speed: \"600\"\n        vlan: 5\n      state: merged\n\n# After State:\n# veos(config)#show running-config | section bgp\n# router bgp 100\n#    bgp convergence slow-peer time 6\n#    distance bgp 50 50 50\n#    maximum-paths 55\n#    bgp additional-paths send any\n#    neighbor peer1 peer group\n#    neighbor peer1 link-bandwidth update-delay 5\n#    neighbor peer1 fall-over bfd\n#    neighbor peer1 monitoring\n#    neighbor peer1 send-community extended link-bandwidth aggregate 600\n#    neighbor peer1 maximum-routes 12000\n#    neighbor 10.1.3.2 export-localpref 4000\n#    neighbor 10.1.3.2 next-hop-unchanged\n#    neighbor 10.1.3.2 dont-capability-negotiate\n#    neighbor 10.1.3.2 allowas-in 3\n#    neighbor 10.1.3.2 default-originate always\n#    neighbor 10.1.3.2 maximum-routes 500 warning-limit 5 percent\n#    aggregate-address 1.2.1.0/24 as-set match-map match01\n#    aggregate-address 5.2.1.0/24 attribute-map attrmatch01 advertise-only\n#    redistribute static route-map map_static\n#    redistribute attached-host\n#    !\n#    vlan 5\n#    !\n#    address-family ipv4\n#       neighbor 10.1.3.2 prefix-list prefix01 out\n# veos(config)#\n#\n# Module Execution:\n#\n# \"after\": {\n#         \"aggregate_address\": [\n#             {\n#                 \"address\": \"1.2.1.0/24\",\n#                 \"as_set\": true,\n#                 \"match_map\": \"match01\"\n#             },\n#             {\n#                 \"address\": \"5.2.1.0/24\",\n#                 \"advertise_only\": true,\n#                 \"attribute_map\": \"attrmatch01\"\n#             }\n#         ],\n#         \"as_number\": \"100\",\n#         \"bgp_params\": {\n#             \"additional_paths\": \"send\",\n#             \"convergence\": {\n#                 \"slow_peer\": true,\n#                 \"time\": 6\n#             }\n#         },\n#         \"distance\": {\n#             \"external\": 50,\n#             \"internal\": 50,\n#             \"local\": 50\n#         },\n#         \"maximum_paths\": {\n#             \"max_equal_cost_paths\": 55\n#         },\n#         \"neighbor\": [\n#             {\n#                 \"fall_over\": true,\n#                 \"link_bandwidth\": {\n#                     \"set\": true,\n#                     \"update_delay\": 5\n#                 },\n#                 \"maximum_received_routes\": {\n#                     \"count\": 12000\n#                 },\n#                 \"monitoring\": true,\n#                 \"peer\": \"peer1\",\n#                 \"peer_group\": \"peer1\",\n#                 \"send_community\": {\n#                     \"community_attribute\": \"extended\",\n#                     \"link_bandwidth_attribute\": \"aggregate\",\n#                     \"speed\": \"600\",\n#                     \"sub_attribute\": \"link-bandwidth\"\n#                 }\n#             },\n#             {\n#                 \"allowas_in\": {\n#                     \"count\": 3\n#                 },\n#                 \"default_originate\": {\n#                     \"always\": true\n#                 },\n#                 \"dont_capability_negotiate\": true,\n#                 \"export_localpref\": 4000,\n#                 \"maximum_received_routes\": {\n#                     \"count\": 500,\n#                     \"warning_limit\": {\n#                         \"limit_percent\": 5\n#                     }\n#                 },\n#                 \"next_hop_unchanged\": true,\n#                 \"peer\": \"10.1.3.2\"\n#             }\n#         ],\n#         \"redistribute\": [\n#             {\n#                 \"protocol\": \"static\",\n#                 \"route_map\": \"map_static\"\n#             },\n#             {\n#                 \"protocol\": \"attached-host\"\n#             }\n#         ],\n#         \"vlan\": 5\n#     },\n#     \"before\": {},\n#     \"changed\": true,\n#     \"commands\": [\n#         \"router bgp 100\",\n#         \"neighbor 10.1.3.2 allowas-in\",\n#         \"neighbor 10.1.3.2 default-originate always\",\n#         \"neighbor 10.1.3.2 dont-capability-negotiate\",\n#         \"neighbor 10.1.3.2 export-localpref 4000\",\n#         \"neighbor 10.1.3.2 maximum-routes 500 warning-limit 5 percent\",\n#         \"neighbor 10.1.3.2 next-hop-unchanged\",\n#         \"neighbor 10.1.3.2 prefix-list prefix01 out\",\n#         \"neighbor peer1 fall-over bfd\",\n#         \"neighbor peer1 link-bandwidth update-delay 5\",\n#         \"neighbor peer1 monitoring\",\n#         \"neighbor peer1 send-community extended link-bandwidth aggregate 600\",\n#         \"redistribute static route-map map_static\",\n#         \"redistribute attached-host\",\n#         \"aggregate-address 1.2.1.0/24 as-set match-map match01\",\n#         \"aggregate-address 5.2.1.0/24 attribute-map attrmatch01 advertise-only\",\n#         \"bgp host-routes fib direct-install\",\n#         \"bgp convergence slow-peer time 6\",\n#         \"bgp additional-paths send any\",\n#         \"bgp log-neighbor-changes\",\n#         \"maximum-paths 55\",\n#         \"distance bgp 50\",\n#         \"vlan 5\"\n#     ],\n\n# Using replaced:\n\n# Before state:\n# veos(config)#show running-config | section bgp\n# router bgp 100\n#    bgp convergence slow-peer time 6\n#    distance bgp 50 50 50\n#    maximum-paths 55\n#    bgp additional-paths send any\n#    neighbor peer1 peer group\n#    neighbor peer1 link-bandwidth update-delay 5\n#    neighbor peer1 fall-over bfd\n#    neighbor peer1 monitoring\n#    neighbor peer1 send-community extended link-bandwidth aggregate 600\n#    neighbor peer1 maximum-routes 12000\n#    neighbor 10.1.3.2 export-localpref 4000\n#    neighbor 10.1.3.2 next-hop-unchanged\n#    neighbor 10.1.3.2 dont-capability-negotiate\n#    neighbor 10.1.3.2 allowas-in 3\n#    neighbor 10.1.3.2 default-originate always\n#    neighbor 10.1.3.2 maximum-routes 500 warning-limit 5 percent\n#    aggregate-address 1.2.1.0/24 as-set match-map match01\n#    aggregate-address 5.2.1.0/24 attribute-map attrmatch01 advertise-only\n#    redistribute static route-map map_static\n#    redistribute attached-host\n#    !\n#    vlan 5\n#    !\n#    address-family ipv4\n#       neighbor 10.1.3.2 prefix-list prefix01 out\n#    !\n#    vrf vrf01\n#       route-target import 54:11\n#       neighbor 12.1.3.2 dont-capability-negotiate\n#       neighbor 12.1.3.2 allowas-in 3\n#       neighbor 12.1.3.2 default-originate always\n#       neighbor 12.1.3.2 maximum-routes 12000\n# veos(config)#\n\n  - name: replace provided configuration with device configuration\n    arista.eos.eos_bgp_global:\n      config:\n        as_number: \"100\"\n        bgp_params:\n          host_routes: True\n          convergence:\n            slow_peer: True\n            time: 6\n          additional_paths: \"send\"\n          log_neighbor_changes: True\n        vrfs:\n          - vrf: \"vrf01\"\n            maximum_paths:\n              max_equal_cost_paths: 55\n            aggregate_address:\n              - address: \"1.2.1.0/24\"\n                as_set: true\n                match_map: \"match01\"\n              - address: \"5.2.1.0/24\"\n                attribute_map: \"attrmatch01\"\n                advertise_only: true\n            redistribute:\n              - protocol: \"static\"\n                route_map: \"map_static\"\n              - protocol: \"attached-host\"\n            distance:\n              internal: 50\n            neighbor:\n              - peer: \"10.1.3.2\"\n                allowas_in:\n                  set: true\n                default_originate:\n                  always: true\n                dont_capability_negotiate: true\n                export_localpref: 4000\n                maximum_received_routes:\n                  count: 500\n                  warning_limit:\n                    limit_percent: 5\n                next_hop_unchanged: true\n                prefix_list:\n                  name: \"prefix01\"\n                  direction: \"out\"\n              - peer: \"peer1\"\n                fall_over: true\n                link_bandwidth:\n                  update_delay: 5\n                monitoring: True\n                send_community:\n                  community_attribute: \"extended\"\n                  sub_attribute: \"link-bandwidth\"\n                  link_bandwidth_attribute: \"aggregate\"\n                  speed: \"600\"\n      state: replaced\n\n# After State:\n\n# veos(config)#show running-config | section bgp\n# router bgp 100\n#    bgp convergence slow-peer time 6\n#    bgp additional-paths send any\n#    !\n#    vrf vrf01\n#       distance bgp 50 50 50\n#       maximum-paths 55\n#       neighbor 10.1.3.2 export-localpref 4000\n#       neighbor 10.1.3.2 next-hop-unchanged\n#       neighbor 10.1.3.2 dont-capability-negotiate\n#       neighbor 10.1.3.2 allowas-in 3\n#       neighbor 10.1.3.2 default-originate always\n#       neighbor 10.1.3.2 maximum-routes 500 warning-limit 5 percent\n#       aggregate-address 1.2.1.0/24 as-set match-map match01\n#       aggregate-address 5.2.1.0/24 attribute-map attrmatch01 advertise-only\n#       redistribute static route-map map_static\n#       redistribute attached-host\n#       !\n#       address-family ipv4\n#          neighbor 10.1.3.2 prefix-list prefix01 out\n# veos(config)#\n#\n#\n# Module Execution:\n#\n# \"after\": {\n#         \"as_number\": \"100\",\n#         \"bgp_params\": {\n#             \"additional_paths\": \"send\",\n#             \"convergence\": {\n#                 \"slow_peer\": true,\n#                 \"time\": 6\n#             }\n#         },\n#         \"vrfs\": [\n#             {\n#                 \"aggregate_address\": [\n#                     {\n#                         \"address\": \"1.2.1.0/24\",\n#                         \"as_set\": true,\n#                         \"match_map\": \"match01\"\n#                     },\n#                     {\n#                         \"address\": \"5.2.1.0/24\",\n#                         \"advertise_only\": true,\n#                         \"attribute_map\": \"attrmatch01\"\n#                     }\n#                 ],\n#                 \"distance\": {\n#                     \"external\": 50,\n#                     \"internal\": 50,\n#                     \"local\": 50\n#                 },\n#                 \"maximum_paths\": {\n#                     \"max_equal_cost_paths\": 55\n#                 },\n#                 \"neighbor\": [\n#                     {\n#                         \"allowas_in\": {\n#                             \"count\": 3\n#                         },\n#                         \"default_originate\": {\n#                             \"always\": true\n#                         },\n#                         \"dont_capability_negotiate\": true,\n#                         \"export_localpref\": 4000,\n#                         \"maximum_received_routes\": {\n#                             \"count\": 500,\n#                             \"warning_limit\": {\n#                                 \"limit_percent\": 5\n#                             }\n#                         },\n#                         \"next_hop_unchanged\": true,\n#                         \"peer\": \"10.1.3.2\"\n#                     }\n#                 ],\n#                 \"redistribute\": [\n#                     {\n#                         \"protocol\": \"static\",\n#                         \"route_map\": \"map_static\"\n#                     },\n#                     {\n#                         \"protocol\": \"attached-host\"\n#                     }\n#                 ],\n#                 \"vrf\": \"vrf01\"\n#             }\n#         ]\n#     },\n#     \"before\": {\n#         \"aggregate_address\": [\n#             {\n#                 \"address\": \"1.2.1.0/24\",\n#                 \"as_set\": true,\n#                 \"match_map\": \"match01\"\n#             },\n#             {\n#                 \"address\": \"5.2.1.0/24\",\n#                 \"advertise_only\": true,\n#                 \"attribute_map\": \"attrmatch01\"\n#             }\n#         ],\n#         \"as_number\": \"100\",\n#         \"bgp_params\": {\n#             \"additional_paths\": \"send\",\n#             \"convergence\": {\n#                 \"slow_peer\": true,\n#                 \"time\": 6\n#             }\n#         },\n#         \"distance\": {\n#             \"external\": 50,\n#             \"internal\": 50,\n#             \"local\": 50\n#         },\n#         \"maximum_paths\": {\n#             \"max_equal_cost_paths\": 55\n#         },\n#         \"neighbor\": [\n#             {\n#                 \"fall_over\": true,\n#                 \"link_bandwidth\": {\n#                     \"set\": true,\n#                     \"update_delay\": 5\n#                 },\n#                 \"maximum_received_routes\": {\n#                     \"count\": 12000\n#                 },\n#                 \"monitoring\": true,\n#                 \"peer\": \"peer1\",\n#                 \"peer_group\": \"peer1\",\n#                 \"send_community\": {\n#                     \"community_attribute\": \"extended\",\n#                     \"link_bandwidth_attribute\": \"aggregate\",\n#                     \"speed\": \"600\",\n#                     \"sub_attribute\": \"link-bandwidth\"\n#                 }\n#             },\n#             {\n#                 \"allowas_in\": {\n#                     \"count\": 3\n#                 },\n#                 \"default_originate\": {\n#                     \"always\": true\n#                 },\n#                 \"dont_capability_negotiate\": true,\n#                 \"export_localpref\": 4000,\n#                 \"maximum_received_routes\": {\n#                     \"count\": 500,\n#                     \"warning_limit\": {\n#                         \"limit_percent\": 5\n#                     }\n#                 },\n#                 \"next_hop_unchanged\": true,\n#                 \"peer\": \"10.1.3.2\"\n#             }\n#         ],\n#         \"redistribute\": [\n#             {\n#                 \"protocol\": \"static\",\n#                 \"route_map\": \"map_static\"\n#             },\n#             {\n#                 \"protocol\": \"attached-host\"\n#             }\n#         ],\n#         \"vlan\": 5,\n#         \"vrfs\": [\n#             {\n#                 \"neighbor\": [\n#                     {\n#                         \"allowas_in\": {\n#                             \"count\": 3\n#                         },\n#                         \"default_originate\": {\n#                             \"always\": true\n#                         },\n#                         \"dont_capability_negotiate\": true,\n#                         \"maximum_received_routes\": {\n#                             \"count\": 12000\n#                         },\n#                         \"peer\": \"12.1.3.2\"\n#                     }\n#                 ],\n#                 \"route_target\": {\n#                     \"action\": \"import\",\n#                     \"target\": \"54:11\"\n#                 },\n#                 \"vrf\": \"vrf01\"\n#             }\n#         ]\n#     },\n#     \"changed\": true,\n#     \"commands\": [\n#         \"router bgp 100\",\n#         \"vrf vrf01\",\n#         \"no route-target import 54:11\",\n#         \"neighbor 10.1.3.2 allowas-in\",\n#         \"neighbor 10.1.3.2 default-originate always\",\n#         \"neighbor 10.1.3.2 dont-capability-negotiate\",\n#         \"neighbor 10.1.3.2 export-localpref 4000\",\n#         \"neighbor 10.1.3.2 maximum-routes 500 warning-limit 5 percent\",\n#         \"neighbor 10.1.3.2 next-hop-unchanged\",\n#         \"neighbor 10.1.3.2 prefix-list prefix01 out\",\n#         \"neighbor peer1 fall-over bfd\",\n#         \"neighbor peer1 link-bandwidth update-delay 5\",\n#         \"neighbor peer1 monitoring\",\n#         \"neighbor peer1 send-community extended link-bandwidth aggregate 600\",\n#         \"no neighbor 12.1.3.2\",\n#         \"redistribute static route-map map_static\",\n#         \"redistribute attached-host\",\n#         \"aggregate-address 1.2.1.0/24 as-set match-map match01\",\n#         \"aggregate-address 5.2.1.0/24 attribute-map attrmatch01 advertise-only\",\n#         \"maximum-paths 55\",\n#         \"distance bgp 50\",\n#         \"exit\",\n#         \"no neighbor peer1 peer group\",\n#         \"no neighbor peer1 link-bandwidth update-delay 5\",\n#         \"no neighbor peer1 fall-over bfd\",\n#         \"no neighbor peer1 monitoring\",\n#         \"no neighbor peer1 send-community extended link-bandwidth aggregate 600\",\n#         \"no neighbor peer1 maximum-routes 12000\",\n#         \"no neighbor 10.1.3.2\",\n#         \"no redistribute static route-map map_static\",\n#         \"no redistribute attached-host\",\n#         \"no aggregate-address 1.2.1.0/24 as-set match-map match01\",\n#         \"no aggregate-address 5.2.1.0/24 attribute-map attrmatch01 advertise-only\",\n#         \"bgp host-routes fib direct-install\",\n#         \"bgp log-neighbor-changes\",\n#         \"no distance bgp 50 50 50\",\n#         \"no maximum-paths 55\",\n#         \"no vlan 5\"\n#     ],\n#\n\n# Using replaced (in presence of address_family under vrf):\n# Before State:\n\n#veos(config)#show running-config | section bgp\n# router bgp 100\n#    bgp convergence slow-peer time 6\n#    bgp additional-paths send any\n#    !\n#    vrf vrf01\n#       distance bgp 50 50 50\n#       maximum-paths 55\n#       neighbor 10.1.3.2 export-localpref 4000\n#       neighbor 10.1.3.2 next-hop-unchanged\n#       neighbor 10.1.3.2 dont-capability-negotiate\n#       neighbor 10.1.3.2 allowas-in 3\n#       neighbor 10.1.3.2 default-originate always\n#       neighbor 10.1.3.2 maximum-routes 500 warning-limit 5 percent\n#       aggregate-address 1.2.1.0/24 as-set match-map match01\n#       aggregate-address 5.2.1.0/24 attribute-map attrmatch01 advertise-only\n#       redistribute static route-map map_static\n#       redistribute attached-host\n#       !\n#       address-family ipv4\n#          neighbor 10.1.3.2 prefix-list prefix01 out\n#       !\n#       address-family ipv6\n#          redistribute dhcp\n# veos(config)#\n\n  - name:  Replace\n    arista.eos.eos_bgp_global:\n      config:\n        as_number: \"100\"\n        graceful_restart:\n          set: True\n        router_id: \"1.1.1.1\"\n        timers:\n          keepalive: 2\n          holdtime: 5\n        ucmp:\n          mode:\n            set: True\n        vlan_aware_bundle: \"bundle1 bundle2 bundle3\"\n      state: replaced\n\n# Module Execution:\n\n# fatal: [192.168.122.113]: FAILED! => {\n#     \"changed\": false,\n#     \"invocation\": {\n#         \"module_args\": {\n#             \"config\": {\n#                 \"access_group\": null,\n#                 \"aggregate_address\": null,\n#                 \"as_number\": \"100\",\n#                 \"bgp_params\": null,\n#                 \"default_metric\": null,\n#                 \"distance\": null,\n#                 \"graceful_restart\": {\n#                     \"restart_time\": null,\n#                     \"set\": true,\n#                     \"stalepath_time\": null\n#                 },\n#                 \"graceful_restart_helper\": null,\n#                 \"maximum_paths\": null,\n#                 \"monitoring\": null,\n#                 \"neighbor\": null,\n#                 \"network\": null,\n#                 \"redistribute\": null,\n#                 \"route_target\": null,\n#                 \"router_id\": \"1.1.1.1\",\n#                 \"shutdown\": null,\n#                 \"timers\": {\n#                     \"holdtime\": 5,\n#                     \"keepalive\": 2\n#                 },\n#                 \"ucmp\": {\n#                     \"fec\": null,\n#                     \"link_bandwidth\": null,\n#                     \"mode\": {\n#                         \"nexthops\": null,\n#                         \"set\": true\n#                     }\n#                 },\n#                 \"update\": null,\n#                 \"vlan\": null,\n#                 \"vlan_aware_bundle\": \"bundle1 bundle2 bundle3\",\n#                 \"vrfs\": null\n#             },\n#             \"running_config\": null,\n#             \"state\": \"replaced\"\n#         }\n#     },\n#     \"msg\": \"Use the _bgp_af module to delete the address_family under vrf, before replacing/deleting the vrf.\"\n# }\n\n# Using deleted:\n\n# Before state:\n\n# veos(config)#show running-config | section bgp\n# router bgp 100\n#    bgp convergence slow-peer time 6\n#    bgp additional-paths send any\n#    !\n#    vrf vrf01\n#       distance bgp 50 50 50\n#       maximum-paths 55\n#       neighbor 10.1.3.2 export-localpref 4000\n#       neighbor 10.1.3.2 next-hop-unchanged\n#       neighbor 10.1.3.2 dont-capability-negotiate\n#       neighbor 10.1.3.2 allowas-in 3\n#       neighbor 10.1.3.2 default-originate always\n#       neighbor 10.1.3.2 maximum-routes 500 warning-limit 5 percent\n#       aggregate-address 1.2.1.0/24 as-set match-map match01\n#       aggregate-address 5.2.1.0/24 attribute-map attrmatch01 advertise-only\n#       redistribute static route-map map_static\n#       redistribute attached-host\n#       !\n\n  - name: Delete configuration\n    arista.eos.eos_bgp_global:\n      config:\n        as_number: \"100\"\n      state: deleted\n\n# After State:\n\n# veos(config)#show running-config | section bgp\n# router bgp 100\n#\n#\n# Module Execution:\n#\n# \"after\": {\n#         \"as_number\": \"100\"\n#     },\n#     \"before\": {\n#         \"as_number\": \"100\",\n#         \"bgp_params\": {\n#             \"additional_paths\": \"send\",\n#             \"convergence\": {\n#                 \"slow_peer\": true,\n#                 \"time\": 6\n#             }\n#         },\n#         \"vrfs\": [\n#             {\n#                 \"aggregate_address\": [\n#                     {\n#                         \"address\": \"1.2.1.0/24\",\n#                         \"as_set\": true,\n#                         \"match_map\": \"match01\"\n#                     },\n#                     {\n#                         \"address\": \"5.2.1.0/24\",\n#                         \"advertise_only\": true,\n#                         \"attribute_map\": \"attrmatch01\"\n#                     }\n#                 ],\n#                 \"distance\": {\n#                     \"external\": 50,\n#                     \"internal\": 50,\n#                     \"local\": 50\n#                 },\n#                 \"maximum_paths\": {\n#                     \"max_equal_cost_paths\": 55\n#                 },\n#                 \"neighbor\": [\n#                     {\n#                         \"allowas_in\": {\n#                             \"count\": 3\n#                         },\n#                         \"default_originate\": {\n#                             \"always\": true\n#                         },\n#                         \"dont_capability_negotiate\": true,\n#                         \"export_localpref\": 4000,\n#                         \"maximum_received_routes\": {\n#                             \"count\": 500,\n#                             \"warning_limit\": {\n#                                 \"limit_percent\": 5\n#                             }\n#                         },\n#                         \"next_hop_unchanged\": true,\n#                         \"peer\": \"10.1.3.2\"\n#                     }\n#                 ],\n#                 \"redistribute\": [\n#                     {\n#                         \"protocol\": \"static\",\n#                         \"route_map\": \"map_static\"\n#                     },\n#                     {\n#                         \"protocol\": \"attached-host\"\n#                     }\n#                 ],\n#                 \"vrf\": \"vrf01\"\n#             }\n#         ]\n#     },\n#     \"changed\": true,\n#     \"commands\": [\n#         \"router bgp 100\",\n#         \"no vrf vrf01\",\n#         \"no bgp convergence slow-peer time 6\",\n#         \"no bgp additional-paths send any\"\n#     ],\n#\n\n# Using purged:\n\n# Before state:\n\n# veos(config)#show running-config | section bgp\n# router bgp 100\n#    bgp convergence slow-peer time 6\n#    distance bgp 50 50 50\n#    maximum-paths 55\n#    bgp additional-paths send any\n#    neighbor peer1 peer group\n#    neighbor peer1 link-bandwidth update-delay 5\n#    neighbor peer1 fall-over bfd\n#    neighbor peer1 monitoring\n#    neighbor peer1 send-community extended link-bandwidth aggregate 600\n#    neighbor peer1 maximum-routes 12000\n#    neighbor 10.1.3.2 export-localpref 4000\n#    neighbor 10.1.3.2 next-hop-unchanged\n#    neighbor 10.1.3.2 dont-capability-negotiate\n#    neighbor 10.1.3.2 allowas-in 3\n#    neighbor 10.1.3.2 default-originate always\n#    neighbor 10.1.3.2 maximum-routes 500 warning-limit 5 percent\n#    aggregate-address 1.2.1.0/24 as-set match-map match01\n#    aggregate-address 5.2.1.0/24 attribute-map attrmatch01 advertise-only\n#    redistribute static route-map map_static\n#    redistribute attached-host\n#    !\n#    vlan 5\n#    !\n#    address-family ipv4\n#       neighbor 10.1.3.2 prefix-list prefix01 out\n#    !\n#    vrf vrf01\n#       route-target import 54:11\n#       neighbor 12.1.3.2 dont-capability-negotiate\n#       neighbor 12.1.3.2 allowas-in 3\n#       neighbor 12.1.3.2 default-originate always\n#       neighbor 12.1.3.2 maximum-routes 12000\n# veos(config)#\n\n  - name: Purge configuration\n    arista.eos.eos_bgp_global:\n      config:\n        as_number: \"100\"\n      state: purged\n\n# After State:\n\n# veos(config)#show running-config | section bgp\n# veos(config)#\n\n# Module Execution:\n\n# \"after\": {},\n#     \"before\": {\n#         \"aggregate_address\": [\n#             {\n#                 \"address\": \"1.2.1.0/24\",\n#                 \"as_set\": true,\n#                 \"match_map\": \"match01\"\n#             },\n#             {\n#                 \"address\": \"5.2.1.0/24\",\n#                 \"advertise_only\": true,\n#                 \"attribute_map\": \"attrmatch01\"\n#             }\n#         ],\n#         \"as_number\": \"100\",\n#         \"bgp_params\": {\n#             \"additional_paths\": \"send\",\n#             \"convergence\": {\n#                 \"slow_peer\": true,\n#                 \"time\": 6\n#             }\n#         },\n#         \"distance\": {\n#             \"external\": 50,\n#             \"internal\": 50,\n#             \"local\": 50\n#         },\n#         \"maximum_paths\": {\n#             \"max_equal_cost_paths\": 55\n#         },\n#         \"neighbor\": [\n#             {\n#                 \"fall_over\": true,\n#                 \"link_bandwidth\": {\n#                     \"set\": true,\n#                     \"update_delay\": 5\n#                 },\n#                 \"maximum_received_routes\": {\n#                     \"count\": 12000\n#                 },\n#                 \"monitoring\": true,\n#                 \"peer\": \"peer1\",\n#                 \"peer_group\": \"peer1\",\n#                 \"send_community\": {\n#                     \"community_attribute\": \"extended\",\n#                     \"link_bandwidth_attribute\": \"aggregate\",\n#                     \"speed\": \"600\",\n#                     \"sub_attribute\": \"link-bandwidth\"\n#                 }\n#             },\n#             {\n#                 \"allowas_in\": {\n#                     \"count\": 3\n#                 },\n#                 \"default_originate\": {\n#                     \"always\": true\n#                 },\n#                 \"dont_capability_negotiate\": true,\n#                 \"export_localpref\": 4000,\n#                 \"maximum_received_routes\": {\n#                     \"count\": 500,\n#                     \"warning_limit\": {\n#                         \"limit_percent\": 5\n#                     }\n#                 },\n#                 \"next_hop_unchanged\": true,\n#                 \"peer\": \"10.1.3.2\"\n#             }\n#         ],\n#         \"redistribute\": [\n#             {\n#                 \"protocol\": \"static\",\n#                 \"route_map\": \"map_static\"\n#             },\n#             {\n#                 \"protocol\": \"attached-host\"\n#             }\n#         ],\n#         \"vlan\": 5,\n#         \"vrfs\": [\n#             {\n#                 \"neighbor\": [\n#                     {\n#                         \"allowas_in\": {\n#                             \"count\": 3\n#                         },\n#                         \"default_originate\": {\n#                             \"always\": true\n#                         },\n#                         \"dont_capability_negotiate\": true,\n#                         \"maximum_received_routes\": {\n#                             \"count\": 12000\n#                         },\n#                         \"peer\": \"12.1.3.2\"\n#                     }\n#                 ],\n#                 \"route_target\": {\n#                     \"action\": \"import\",\n#                     \"target\": \"54:11\"\n#                 },\n#                 \"vrf\": \"vrf01\"\n#             }\n#         ]\n#     },\n#     \"changed\": true,\n#     \"commands\": [\n#         \"no router bgp 100\"\n#     ],\n\n"
  },
  "arista.eos.eos_command": {
    "doc": {
      "description": "Sends an arbitrary set of commands to an EOS node and returns the results read from the device.  This module includes an argument that will cause the module to wait for a specific condition before returning or timing out if the condition is not met.",
      "has_action": true,
      "notes": "Tested against Arista EOS 4.24.6F\nFor information on using CLI, eAPI and privileged mode see the :ref:`EOS Platform Options guide <eos_platform_options>`\nFor more information on using Ansible to manage network devices see the :ref:`Ansible Network Guide <network_guide>`\nFor more information on using Ansible to manage Arista EOS devices see the `Arista integration page <https://www.ansible.com/ansible-arista-networks>`_.",
      "options": {
        "commands": {
          "aliases": [],
          "description": "The commands to send to the remote EOS device over the configured provider.  The resulting output from the command is returned.  If the I(wait_for) argument is provided, the module is not returned until the condition is satisfied or the number of I(retries) has been exceeded.\nIf a command sent to the device requires answering a prompt, it is possible to pass a dict containing command, answer and prompt. Common answers are 'y' or \"\\r\" (carriage return, must be double quotes). Refer below examples.",
          "type": "list",
          "required": true,
          "elements": "raw",
          "suboptions": {}
        },
        "interval": {
          "aliases": [],
          "description": "Configures the interval in seconds to wait between retries of the command.  If the command does not pass the specified conditional, the interval indicates how to long to wait before trying the command again.",
          "default": "1",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "match": {
          "aliases": [],
          "description": "The I(match) argument is used in conjunction with the I(wait_for) argument to specify the match policy.  Valid values are C(all) or C(any).  If the value is set to C(all) then all conditionals in the I(wait_for) must be satisfied.  If the value is set to C(any) then only one of the values must be satisfied.",
          "default": "all",
          "type": "str",
          "required": false,
          "choices": [
            "any",
            "all"
          ],
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "B(Deprecated)\nStarting with Ansible 2.5 we recommend using C(connection: network_cli).\nStarting with Ansible 2.6 we recommend using C(connection: httpapi) for eAPI.\nThis option will be removed in a release after 2022-06-01.\nFor more information please see the L(EOS Platform Options guide, ../network/user_guide/platform_eos.html).\nHORIZONTALLINE\nA dict object containing connection details.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "auth_pass": {
              "aliases": [],
              "description": "Specifies the password to use if required to enter privileged mode on the remote device.  If I(authorize) is false, then this argument does nothing. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_AUTH_PASS) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "authorize": {
              "aliases": [],
              "description": "Instructs the module to enter privileged mode on the remote device before sending any commands.  If not specified, the device will attempt to execute all commands in non-privileged mode. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_AUTHORIZE) will be used instead.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "host": {
              "aliases": [],
              "description": "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [],
              "description": "Specifies the password to use to authenticate the connection to the remote device.  This is a common argument used for either I(cli) or I(eapi) transports. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "port": {
              "aliases": [],
              "description": "Specifies the port to use when building the connection to the remote device.  This value applies to either I(cli) or I(eapi).\nThe port value will default to the appropriate transport common port if none is provided in the task (cli=22, http=80, https=443).",
              "default": "0",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "ssh_keyfile": {
              "aliases": [],
              "description": "Specifies the SSH keyfile to use to authenticate the connection to the remote device.  This argument is only used for I(cli) transports. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead.",
              "type": "path",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "cli",
              "type": "str",
              "required": false,
              "choices": [
                "cli",
                "eapi"
              ],
              "suboptions": {}
            },
            "use_proxy": {
              "aliases": [],
              "description": "If C(no), the environment variables C(http_proxy) and C(https_proxy) will be ignored.",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "use_ssl": {
              "aliases": [],
              "description": "Configures the I(transport) to use SSL if set to C(yes) only when the C(transport=eapi).  If the transport argument is not eapi, this value is ignored.",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "username": {
              "aliases": [],
              "description": "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate either the CLI login or the eAPI authentication depending on which transport is used. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates.  If the transport argument is not eapi, this value is ignored.",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "retries": {
          "aliases": [],
          "description": "Specifies the number of retries a command should be tried before it is considered failed.  The command is run on the target device every retry and evaluated against the I(wait_for) conditionals.",
          "default": "10",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "wait_for": {
          "aliases": [
            "waitfor"
          ],
          "description": "Specifies what to evaluate from the output of the command and what conditionals to apply.  This argument will cause the task to wait for a particular conditional to be true before moving forward.   If the conditional is not true by the configured retries, the task fails. Note - With I(wait_for) the value in C(result['stdout']) can be accessed using C(result), that is to access C(result['stdout'][0]) use C(result[0]) See examples.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        }
      },
      "short_description": "Run arbitrary commands on an Arista EOS device",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: run show version on remote devices\n  arista.eos.eos_command:\n    commands: show version\n\n- name: run show version and check to see if output contains Arista\n  arista.eos.eos_command:\n    commands: show version\n    wait_for: result[0] contains Arista\n\n- name: run multiple commands on remote nodes\n  arista.eos.eos_command:\n    commands:\n    - show version\n    - show interfaces\n\n- name: run multiple commands and evaluate the output\n  arista.eos.eos_command:\n    commands:\n    - show version\n    - show interfaces\n    wait_for:\n    - result[0] contains Arista\n    - result[1] contains Loopback0\n\n- name: run commands and specify the output format\n  arista.eos.eos_command:\n    commands:\n    - command: show version\n      output: json\n\n- name: using cli transport, check whether the switch is in maintenance mode\n  arista.eos.eos_command:\n    commands: show maintenance\n    wait_for: result[0] contains 'Under Maintenance'\n\n- name: using cli transport, check whether the switch is in maintenance mode using\n    json output\n  arista.eos.eos_command:\n    commands: show maintenance | json\n    wait_for: result[0].units.System.state eq 'underMaintenance'\n\n- name: using eapi transport check whether the switch is in maintenance, with 8 retries\n    and 2 second interval between retries\n  arista.eos.eos_command:\n    commands: show maintenance\n    wait_for: result[0]['units']['System']['state'] eq 'underMaintenance'\n    interval: 2\n    retries: 8\n    provider:\n      transport: eapi\n"
  },
  "arista.eos.eos_config": {
    "doc": {
      "description": "Arista EOS configurations use a simple block indent file syntax for segmenting configuration into sections.  This module provides an implementation for working with EOS configuration sections in a deterministic way.  This module works with either CLI or eAPI transports.",
      "has_action": true,
      "notes": "Tested against Arista EOS 4.24.6F\nAbbreviated commands are NOT idempotent, see L(Network FAQ,../network/user_guide/faq.html#why-do-the-config-modules-always-return-changed-true-with-abbreviated-commands).\nTo ensure idempotency and correct diff the configuration lines in the relevant module options should be similar to how they appear if present in the running configuration on device including the indentation.\nFor information on using CLI, eAPI and privileged mode see the :ref:`EOS Platform Options guide <eos_platform_options>`\nFor more information on using Ansible to manage network devices see the :ref:`Ansible Network Guide <network_guide>`\nFor more information on using Ansible to manage Arista EOS devices see the `Arista integration page <https://www.ansible.com/ansible-arista-networks>`_.",
      "options": {
        "after": {
          "aliases": [],
          "description": "The ordered set of commands to append to the end of the command stack if a change needs to be made.  Just like with I(before) this allows the playbook designer to append a set of commands to be executed after the command set.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "backup": {
          "aliases": [],
          "description": "This argument will cause the module to create a full backup of the current C(running-config) from the remote device before any changes are made. If the C(backup_options) value is not given, the backup file is written to the C(backup) folder in the playbook root directory or role root directory, if playbook is part of an ansible role. If the directory does not exist, it is created.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "backup_options": {
          "aliases": [],
          "description": "This is a dict object containing configurable options related to backup file path. The value of this option is read only when C(backup) is set to I(yes), if C(backup) is set to I(no) this option will be silently ignored.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "dir_path": {
              "aliases": [],
              "description": "This option provides the path ending with directory name in which the backup configuration file will be stored. If the directory does not exist it will be first created and the filename is either the value of C(filename) or default filename as described in C(filename) options description. If the path value is not given in that case a I(backup) directory will be created in the current working directory and backup configuration will be copied in C(filename) within I(backup) directory.",
              "type": "path",
              "required": false,
              "suboptions": {}
            },
            "filename": {
              "aliases": [],
              "description": "The filename to be used to store the backup configuration. If the filename is not given it will be generated based on the hostname, current time and date in format defined by <hostname>_config.<current-date>@<current-time>",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "before": {
          "aliases": [],
          "description": "The ordered set of commands to push on to the command stack if a change needs to be made.  This allows the playbook designer the opportunity to perform configuration commands prior to pushing any changes without affecting how the set of commands are matched against the system.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "defaults": {
          "aliases": [],
          "description": "The I(defaults) argument will influence how the running-config is collected from the device.  When the value is set to true, the command used to collect the running-config is append with the all keyword.  When the value is set to false, the command is issued without the all keyword",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "diff_against": {
          "aliases": [],
          "description": "When using the C(ansible-playbook --diff) command line argument the module can generate diffs against different sources.\nWhen this option is configure as I(startup), the module will return the diff of the running-config against the startup-config.\nWhen this option is configured as I(intended), the module will return the diff of the running-config against the configuration provided in the C(intended_config) argument.\nWhen this option is configured as I(running), the module will return the before and after diff of the running-config with respect to any changes made to the device configuration.\nWhen this option is configured as C(session), the diff returned will be based on the configuration session.",
          "default": "session",
          "type": "str",
          "required": false,
          "choices": [
            "startup",
            "running",
            "intended",
            "session"
          ],
          "suboptions": {}
        },
        "diff_ignore_lines": {
          "aliases": [],
          "description": "Use this argument to specify one or more lines that should be ignored during the diff.  This is used for lines in the configuration that are automatically updated by the system.  This argument takes a list of regular expressions or exact line matches.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "intended_config": {
          "aliases": [],
          "description": "The C(intended_config) provides the master configuration that the node should conform to and is used to check the final running-config against.   This argument will not modify any settings on the remote device and is strictly used to check the compliance of the current device's configuration against.  When specifying this argument, the task should also modify the C(diff_against) value and set it to I(intended). The configuration lines for this value should be similar to how it will appear if present in the running-configuration of the device including the indentation to ensure correct diff.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "lines": {
          "aliases": [
            "commands"
          ],
          "description": "The ordered set of commands that should be configured in the section. The commands must be the exact same commands as found in the device running-config as found in the device running-config to ensure idempotency and correct diff. Be sure to note the configuration command syntax as some commands are automatically modified by the device config parser.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "match": {
          "aliases": [],
          "description": "Instructs the module on the way to perform the matching of the set of commands against the current device config.  If match is set to I(line), commands are matched line by line.  If match is set to I(strict), command lines are matched with respect to position.  If match is set to I(exact), command lines must be an equal match.  Finally, if match is set to I(none), the module will not attempt to compare the source configuration with the running configuration on the remote device.",
          "default": "line",
          "type": "str",
          "required": false,
          "choices": [
            "line",
            "strict",
            "exact",
            "none"
          ],
          "suboptions": {}
        },
        "parents": {
          "aliases": [],
          "description": "The ordered set of parents that uniquely identify the section or hierarchy the commands should be checked against.  If the parents argument is omitted, the commands are checked against the set of top level or global commands.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "B(Deprecated)\nStarting with Ansible 2.5 we recommend using C(connection: network_cli).\nStarting with Ansible 2.6 we recommend using C(connection: httpapi) for eAPI.\nThis option will be removed in a release after 2022-06-01.\nFor more information please see the L(EOS Platform Options guide, ../network/user_guide/platform_eos.html).\nHORIZONTALLINE\nA dict object containing connection details.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "auth_pass": {
              "aliases": [],
              "description": "Specifies the password to use if required to enter privileged mode on the remote device.  If I(authorize) is false, then this argument does nothing. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_AUTH_PASS) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "authorize": {
              "aliases": [],
              "description": "Instructs the module to enter privileged mode on the remote device before sending any commands.  If not specified, the device will attempt to execute all commands in non-privileged mode. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_AUTHORIZE) will be used instead.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "host": {
              "aliases": [],
              "description": "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [],
              "description": "Specifies the password to use to authenticate the connection to the remote device.  This is a common argument used for either I(cli) or I(eapi) transports. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "port": {
              "aliases": [],
              "description": "Specifies the port to use when building the connection to the remote device.  This value applies to either I(cli) or I(eapi).\nThe port value will default to the appropriate transport common port if none is provided in the task (cli=22, http=80, https=443).",
              "default": "0",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "ssh_keyfile": {
              "aliases": [],
              "description": "Specifies the SSH keyfile to use to authenticate the connection to the remote device.  This argument is only used for I(cli) transports. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead.",
              "type": "path",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "cli",
              "type": "str",
              "required": false,
              "choices": [
                "cli",
                "eapi"
              ],
              "suboptions": {}
            },
            "use_proxy": {
              "aliases": [],
              "description": "If C(no), the environment variables C(http_proxy) and C(https_proxy) will be ignored.",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "use_ssl": {
              "aliases": [],
              "description": "Configures the I(transport) to use SSL if set to C(yes) only when the C(transport=eapi).  If the transport argument is not eapi, this value is ignored.",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "username": {
              "aliases": [],
              "description": "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate either the CLI login or the eAPI authentication depending on which transport is used. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates.  If the transport argument is not eapi, this value is ignored.",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "replace": {
          "aliases": [],
          "description": "Instructs the module on the way to perform the configuration on the device.  If the replace argument is set to I(line) then the modified lines are pushed to the device in configuration mode.  If the replace argument is set to I(block) then the entire command block is pushed to the device in configuration mode if any line is not correct.",
          "default": "line",
          "type": "str",
          "required": false,
          "choices": [
            "line",
            "block",
            "config"
          ],
          "suboptions": {}
        },
        "running_config": {
          "aliases": [
            "config"
          ],
          "description": "The module, by default, will connect to the remote device and retrieve the current running-config to use as a base for comparing against the contents of source.  There are times when it is not desirable to have the task get the current running-config for every task in a playbook.  The I(running_config) argument allows the implementer to pass in the configuration to use as the base config for this module. The configuration lines for this option should be similar to how it will appear if present in the running-configuration of the device including the indentation to ensure idempotency and correct diff.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "save_when": {
          "aliases": [],
          "description": "When changes are made to the device running-configuration, the changes are not copied to non-volatile storage by default.  Using this argument will change that before.  If the argument is set to I(always), then the running-config will always be copied to the startup-config and the I(modified) flag will always be set to True.  If the argument is set to I(modified), then the running-config will only be copied to the startup-config if it has changed since the last save to startup-config.  If the argument is set to I(never), the running-config will never be copied to the startup-config. If the argument is set to I(changed), then the running-config will only be copied to the startup-config if the task has made a change. I(changed) was added in Ansible 2.5.",
          "default": "never",
          "type": "str",
          "required": false,
          "choices": [
            "always",
            "never",
            "modified",
            "changed"
          ],
          "suboptions": {}
        },
        "src": {
          "aliases": [],
          "description": "The I(src) argument provides a path to the configuration file to load into the remote system.  The path can either be a full system path to the configuration file if the value starts with / or relative to the root of the implemented role or playbook. This argument is mutually exclusive with the I(lines) and I(parents) arguments. It can be a Jinja2 template as well. The configuration lines in the source file should be similar to how it will appear if present in the running-configuration (live switch config) of the device i ncluding the indentation to ensure idempotency and correct diff. Arista EOS device config has 3 spaces indentation.",
          "type": "path",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Manage Arista EOS configuration sections",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: configure top level settings\n  arista.eos.eos_config:\n    lines: hostname {{ inventory_hostname }}\n\n- name: load an acl into the device\n  arista.eos.eos_config:\n    lines:\n    - 10 permit ip host 192.0.2.1 any log\n    - 20 permit ip host 192.0.2.2 any log\n    - 30 permit ip host 192.0.2.3 any log\n    - 40 permit ip host 192.0.2.4 any log\n    parents: ip access-list test\n    before: no ip access-list test\n    replace: block\n\n- name: load configuration from file\n  arista.eos.eos_config:\n    src: eos.cfg\n\n- name: render a Jinja2 template onto an Arista switch\n  arista.eos.eos_config:\n    backup: yes\n    src: eos_template.j2\n\n- name: diff the running config against a master config\n  arista.eos.eos_config:\n    diff_against: intended\n    intended_config: \"{{ lookup('file', 'master.cfg') }}\"\n\n- name: for idempotency, use full-form commands\n  arista.eos.eos_config:\n    lines:\n      # - shut\n    - shutdown\n    # parents: int eth1\n    parents: interface Ethernet1\n\n- name: configurable backup path\n  arista.eos.eos_config:\n    src: eos_template.j2\n    backup: yes\n    backup_options:\n      filename: backup.cfg\n      dir_path: /home/user\n"
  },
  "arista.eos.eos_eapi": {
    "doc": {
      "description": "Use to enable or disable eAPI access, and set the port and state of http, https, local_http and unix-socket servers.\nWhen enabling eAPI access the default is to enable HTTP on port 80, enable HTTPS on port 443, disable local HTTP, and disable Unix socket server. Use the options listed below to override the default configuration.\nRequires EOS v4.12 or greater.",
      "has_action": true,
      "notes": "For information on using CLI, eAPI and privileged mode see the :ref:`EOS Platform Options guide <eos_platform_options>`\nFor more information on using Ansible to manage network devices see the :ref:`Ansible Network Guide <network_guide>`\nFor more information on using Ansible to manage Arista EOS devices see the `Arista integration page <https://www.ansible.com/ansible-arista-networks>`_.",
      "options": {
        "config": {
          "aliases": [],
          "description": "The module, by default, will connect to the remote device and retrieve the current running-config to use as a base for comparing against the contents of source.  There are times when it is not desirable to have the task get the current running-config for every task in a playbook.  The I(config) argument allows the implementer to pass in the configuration to use as the base config for comparison.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "http": {
          "aliases": [
            "enable_http"
          ],
          "description": "The C(http) argument controls the operating state of the HTTP transport protocol when eAPI is present in the running-config. When the value is set to True, the HTTP protocol is enabled and when the value is set to False, the HTTP protocol is disabled. By default, when eAPI is first configured, the HTTP protocol is disabled.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "http_port": {
          "aliases": [],
          "description": "Configures the HTTP port that will listen for connections when the HTTP transport protocol is enabled.  This argument accepts integer values in the valid range of 1 to 65535.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "https": {
          "aliases": [
            "enable_https"
          ],
          "description": "The C(https) argument controls the operating state of the HTTPS transport protocol when eAPI is present in the running-config. When the value is set to True, the HTTPS protocol is enabled and when the value is set to False, the HTTPS protocol is disabled. By default, when eAPI is first configured, the HTTPS protocol is enabled.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "https_port": {
          "aliases": [],
          "description": "Configures the HTTP port that will listen for connections when the HTTP transport protocol is enabled.  This argument accepts integer values in the valid range of 1 to 65535.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "local_http": {
          "aliases": [
            "enable_local_http"
          ],
          "description": "The C(local_http) argument controls the operating state of the local HTTP transport protocol when eAPI is present in the running-config.  When the value is set to True, the HTTP protocol is enabled and restricted to connections from localhost only.  When the value is set to False, the HTTP local protocol is disabled.\nNote is value is independent of the C(http) argument",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "local_http_port": {
          "aliases": [],
          "description": "Configures the HTTP port that will listen for connections when the HTTP transport protocol is enabled.  This argument accepts integer values in the valid range of 1 to 65535.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "B(Deprecated)\nStarting with Ansible 2.5 we recommend using C(connection: network_cli).\nStarting with Ansible 2.6 we recommend using C(connection: httpapi) for eAPI.\nThis option will be removed in a release after 2022-06-01.\nFor more information please see the L(EOS Platform Options guide, ../network/user_guide/platform_eos.html).\nHORIZONTALLINE\nA dict object containing connection details.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "auth_pass": {
              "aliases": [],
              "description": "Specifies the password to use if required to enter privileged mode on the remote device.  If I(authorize) is false, then this argument does nothing. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_AUTH_PASS) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "authorize": {
              "aliases": [],
              "description": "Instructs the module to enter privileged mode on the remote device before sending any commands.  If not specified, the device will attempt to execute all commands in non-privileged mode. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_AUTHORIZE) will be used instead.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "host": {
              "aliases": [],
              "description": "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [],
              "description": "Specifies the password to use to authenticate the connection to the remote device.  This is a common argument used for either I(cli) or I(eapi) transports. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "port": {
              "aliases": [],
              "description": "Specifies the port to use when building the connection to the remote device.  This value applies to either I(cli) or I(eapi).\nThe port value will default to the appropriate transport common port if none is provided in the task (cli=22, http=80, https=443).",
              "default": "0",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "ssh_keyfile": {
              "aliases": [],
              "description": "Specifies the SSH keyfile to use to authenticate the connection to the remote device.  This argument is only used for I(cli) transports. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead.",
              "type": "path",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "cli",
              "type": "str",
              "required": false,
              "choices": [
                "cli",
                "eapi"
              ],
              "suboptions": {}
            },
            "use_proxy": {
              "aliases": [],
              "description": "If C(no), the environment variables C(http_proxy) and C(https_proxy) will be ignored.",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "use_ssl": {
              "aliases": [],
              "description": "Configures the I(transport) to use SSL if set to C(yes) only when the C(transport=eapi).  If the transport argument is not eapi, this value is ignored.",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "username": {
              "aliases": [],
              "description": "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate either the CLI login or the eAPI authentication depending on which transport is used. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates.  If the transport argument is not eapi, this value is ignored.",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "socket": {
          "aliases": [
            "enable_socket"
          ],
          "description": "The C(socket) argument controls the operating state of the UNIX Domain Socket used to receive eAPI requests.  When the value of this argument is set to True, the UDS will listen for eAPI requests.  When the value is set to False, the UDS will not be available to handle requests.  By default when eAPI is first configured, the UDS is disabled.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The C(state) argument controls the operational state of eAPI on the remote device.  When this argument is set to C(started), eAPI is enabled to receive requests and when this argument is C(stopped), eAPI is disabled and will not receive requests.",
          "default": "started",
          "type": "str",
          "required": false,
          "choices": [
            "started",
            "stopped"
          ],
          "suboptions": {}
        },
        "timeout": {
          "aliases": [],
          "description": "The time (in seconds) to wait for the eAPI configuration to be reflected in the running-config.",
          "default": "30",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "vrf": {
          "aliases": [],
          "description": "The C(vrf) argument will configure eAPI to listen for connections in the specified VRF.  By default, eAPI transports will listen for connections in the global table.  This value requires the VRF to already be created otherwise the task will fail.",
          "default": "default",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "EOS v4.12 or greater"
      ],
      "short_description": "Manage and configure Arista EOS eAPI.",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Enable eAPI access with default configuration\n  arista.eos.eos_eapi:\n    state: started\n\n- name: Enable eAPI with no HTTP, HTTPS at port 9443, local HTTP at port 80, and socket\n    enabled\n  arista.eos.eos_eapi:\n    state: started\n    http: false\n    https_port: 9443\n    local_http: yes\n    local_http_port: 80\n    socket: yes\n\n- name: Shutdown eAPI access\n  arista.eos.eos_eapi:\n    state: stopped\n"
  },
  "arista.eos.eos_facts": {
    "doc": {
      "description": "Collects facts from Arista devices running the EOS operating system. This module places the facts gathered in the fact tree keyed by the respective resource name.  The facts module will always collect a base set of facts from the device and can enable or disable collection of additional facts.",
      "has_action": true,
      "notes": "For information on using CLI, eAPI and privileged mode see the :ref:`EOS Platform Options guide <eos_platform_options>`\nFor more information on using Ansible to manage network devices see the :ref:`Ansible Network Guide <network_guide>`\nFor more information on using Ansible to manage Arista EOS devices see the `Arista integration page <https://www.ansible.com/ansible-arista-networks>`_.",
      "options": {
        "available_network_resources": {
          "aliases": [],
          "description": "When 'True' a list of network resources for which resource modules are available will be provided.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "gather_network_resources": {
          "aliases": [],
          "description": "When supplied, this argument will restrict the facts collected to a given subset. Possible values for this argument include all and the resources like interfaces, vlans etc. Can specify a list of values to include a larger subset. Values can also be used with an initial C(M(!)) to specify that a specific subset should not be collected. Values can also be used with an initial C(M(!)) to specify that a specific subset should not be collected. Valid subsets are 'all', 'interfaces', 'l2_interfaces', 'l3_interfaces', 'lacp', 'lacp_interfaces', 'lag_interfaces', 'lldp_global', 'lldp_interfaces', 'vlans', 'acls'.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "gather_subset": {
          "aliases": [],
          "description": "When supplied, this argument will restrict the facts collected to a given subset.  Possible values for this argument include all, hardware, config, and interfaces.  Can specify a list of values to include a larger subset.  Values can also be used with an initial C(M(!)) to specify that a specific subset should not be collected.",
          "default": "!config",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "B(Deprecated)\nStarting with Ansible 2.5 we recommend using C(connection: network_cli).\nStarting with Ansible 2.6 we recommend using C(connection: httpapi) for eAPI.\nThis option will be removed in a release after 2022-06-01.\nFor more information please see the L(EOS Platform Options guide, ../network/user_guide/platform_eos.html).\nHORIZONTALLINE\nA dict object containing connection details.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "auth_pass": {
              "aliases": [],
              "description": "Specifies the password to use if required to enter privileged mode on the remote device.  If I(authorize) is false, then this argument does nothing. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_AUTH_PASS) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "authorize": {
              "aliases": [],
              "description": "Instructs the module to enter privileged mode on the remote device before sending any commands.  If not specified, the device will attempt to execute all commands in non-privileged mode. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_AUTHORIZE) will be used instead.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "host": {
              "aliases": [],
              "description": "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [],
              "description": "Specifies the password to use to authenticate the connection to the remote device.  This is a common argument used for either I(cli) or I(eapi) transports. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "port": {
              "aliases": [],
              "description": "Specifies the port to use when building the connection to the remote device.  This value applies to either I(cli) or I(eapi).\nThe port value will default to the appropriate transport common port if none is provided in the task (cli=22, http=80, https=443).",
              "default": "0",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "ssh_keyfile": {
              "aliases": [],
              "description": "Specifies the SSH keyfile to use to authenticate the connection to the remote device.  This argument is only used for I(cli) transports. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead.",
              "type": "path",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "cli",
              "type": "str",
              "required": false,
              "choices": [
                "cli",
                "eapi"
              ],
              "suboptions": {}
            },
            "use_proxy": {
              "aliases": [],
              "description": "If C(no), the environment variables C(http_proxy) and C(https_proxy) will be ignored.",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "use_ssl": {
              "aliases": [],
              "description": "Configures the I(transport) to use SSL if set to C(yes) only when the C(transport=eapi).  If the transport argument is not eapi, this value is ignored.",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "username": {
              "aliases": [],
              "description": "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate either the CLI login or the eAPI authentication depending on which transport is used. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates.  If the transport argument is not eapi, this value is ignored.",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        }
      },
      "short_description": "Collect facts from remote devices running Arista EOS",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Gather all legacy facts\n- arista.eos.eos_facts:\n    gather_subset: all\n\n- name: Gather only the config and default facts\n  arista.eos.eos_facts:\n    gather_subset:\n    - config\n\n- name: Do not gather hardware facts\n  arista.eos.eos_facts:\n    gather_subset:\n    - '!hardware'\n\n- name: Gather legacy and resource facts\n  arista.eos.eos_facts:\n    gather_subset: all\n    gather_network_resources: all\n\n- name: Gather only the interfaces resource facts and no legacy facts\n- arista.eos.eos_facts:\n    gather_subset:\n    - '!all'\n    - '!min'\n    gather_network_resources:\n    - interfaces\n\n- name: Gather all resource facts and minimal legacy facts\n  arista.eos.eos_facts:\n    gather_subset: min\n    gather_network_resources: all\n"
  },
  "arista.eos.eos_interface": {
    "doc": {
      "description": "This module provides declarative management of Interfaces on Arista EOS network devices.",
      "has_action": true,
      "notes": "Tested against Arista EOS 4.24.6F\nFor information on using CLI, eAPI and privileged mode see the :ref:`EOS Platform Options guide <eos_platform_options>`\nFor more information on using Ansible to manage network devices see the :ref:`Ansible Network Guide <network_guide>`\nFor more information on using Ansible to manage Arista EOS devices see the `Arista integration page <https://www.ansible.com/ansible-arista-networks>`_.",
      "options": {
        "aggregate": {
          "aliases": [],
          "description": "List of Interfaces definitions. Each of the entry in aggregate list should define name of interface C(name) and other options as required.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "delay": {
              "aliases": [],
              "description": "Time in seconds to wait before checking for the operational state on remote device. This wait is applicable for operational state argument which are I(state) with values C(up)/C(down), I(tx_rate) and I(rx_rate).",
              "default": "10",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "description": {
              "aliases": [],
              "description": "Description of Interface upto 240 characters.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "enabled": {
              "aliases": [],
              "description": "Interface link status. If the value is I(True) the interface state will be enabled, else if value is I(False) interface will be in disable (shutdown) state.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "mtu": {
              "aliases": [],
              "description": "Set maximum transmission unit size in bytes of transmit packet for the interface given in C(name) option.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "name": {
              "aliases": [],
              "description": "Name of the Interface to be configured on remote device. The name of interface should be in expanded format and not abbreviated.",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "neighbors": {
              "aliases": [],
              "description": "Check the operational state of given interface C(name) for LLDP neighbor.\nThe following suboptions are available.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "host": {
                  "aliases": [],
                  "description": "LLDP neighbor host for given interface C(name).",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "port": {
                  "aliases": [],
                  "description": "LLDP neighbor port to which given interface C(name) is connected.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "rx_rate": {
              "aliases": [],
              "description": "Receiver rate in bits per second (bps) for the interface given in C(name) option.\nThis is state check parameter only.\nSupports conditionals, see L(Conditionals in Networking Modules,../network/user_guide/network_working_with_command_output.html)",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "speed": {
              "aliases": [],
              "description": "This option configures autoneg and speed/duplex/flowcontrol for the interface given in C(name) option.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "state": {
              "aliases": [],
              "description": "State of the Interface configuration, C(up) means present and operationally up and C(down) means present and operationally C(down)",
              "type": "str",
              "required": false,
              "choices": [
                "present",
                "absent",
                "up",
                "down"
              ],
              "suboptions": {}
            },
            "tx_rate": {
              "aliases": [],
              "description": "Transmit rate in bits per second (bps) for the interface given in C(name) option.\nThis is state check parameter only.\nSupports conditionals, see L(Conditionals in Networking Modules,../network/user_guide/network_working_with_command_output.html)",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "delay": {
          "aliases": [],
          "description": "Time in seconds to wait before checking for the operational state on remote device. This wait is applicable for operational state argument which are I(state) with values C(up)/C(down), I(tx_rate) and I(rx_rate).",
          "default": "10",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "Description of Interface upto 240 characters.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "enabled": {
          "aliases": [],
          "description": "Interface link status. If the value is I(True) the interface state will be enabled, else if value is I(False) interface will be in disable (shutdown) state.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "mtu": {
          "aliases": [],
          "description": "Set maximum transmission unit size in bytes of transmit packet for the interface given in C(name) option.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the Interface to be configured on remote device. The name of interface should be in expanded format and not abbreviated.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "neighbors": {
          "aliases": [],
          "description": "Check the operational state of given interface C(name) for LLDP neighbor.\nThe following suboptions are available.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "host": {
              "aliases": [],
              "description": "LLDP neighbor host for given interface C(name).",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "port": {
              "aliases": [],
              "description": "LLDP neighbor port to which given interface C(name) is connected.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "provider": {
          "aliases": [],
          "description": "B(Deprecated)\nStarting with Ansible 2.5 we recommend using C(connection: network_cli).\nStarting with Ansible 2.6 we recommend using C(connection: httpapi) for eAPI.\nThis option will be removed in a release after 2022-06-01.\nFor more information please see the L(EOS Platform Options guide, ../network/user_guide/platform_eos.html).\nHORIZONTALLINE\nA dict object containing connection details.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "auth_pass": {
              "aliases": [],
              "description": "Specifies the password to use if required to enter privileged mode on the remote device.  If I(authorize) is false, then this argument does nothing. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_AUTH_PASS) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "authorize": {
              "aliases": [],
              "description": "Instructs the module to enter privileged mode on the remote device before sending any commands.  If not specified, the device will attempt to execute all commands in non-privileged mode. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_AUTHORIZE) will be used instead.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "host": {
              "aliases": [],
              "description": "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [],
              "description": "Specifies the password to use to authenticate the connection to the remote device.  This is a common argument used for either I(cli) or I(eapi) transports. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "port": {
              "aliases": [],
              "description": "Specifies the port to use when building the connection to the remote device.  This value applies to either I(cli) or I(eapi).\nThe port value will default to the appropriate transport common port if none is provided in the task (cli=22, http=80, https=443).",
              "default": "0",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "ssh_keyfile": {
              "aliases": [],
              "description": "Specifies the SSH keyfile to use to authenticate the connection to the remote device.  This argument is only used for I(cli) transports. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead.",
              "type": "path",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "cli",
              "type": "str",
              "required": false,
              "choices": [
                "cli",
                "eapi"
              ],
              "suboptions": {}
            },
            "use_proxy": {
              "aliases": [],
              "description": "If C(no), the environment variables C(http_proxy) and C(https_proxy) will be ignored.",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "use_ssl": {
              "aliases": [],
              "description": "Configures the I(transport) to use SSL if set to C(yes) only when the C(transport=eapi).  If the transport argument is not eapi, this value is ignored.",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "username": {
              "aliases": [],
              "description": "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate either the CLI login or the eAPI authentication depending on which transport is used. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates.  If the transport argument is not eapi, this value is ignored.",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "rx_rate": {
          "aliases": [],
          "description": "Receiver rate in bits per second (bps) for the interface given in C(name) option.\nThis is state check parameter only.\nSupports conditionals, see L(Conditionals in Networking Modules,../network/user_guide/network_working_with_command_output.html)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "speed": {
          "aliases": [],
          "description": "This option configures autoneg and speed/duplex/flowcontrol for the interface given in C(name) option.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "State of the Interface configuration, C(up) means present and operationally up and C(down) means present and operationally C(down)",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent",
            "up",
            "down"
          ],
          "suboptions": {}
        },
        "tx_rate": {
          "aliases": [],
          "description": "Transmit rate in bits per second (bps) for the interface given in C(name) option.\nThis is state check parameter only.\nSupports conditionals, see L(Conditionals in Networking Modules,../network/user_guide/network_working_with_command_output.html)",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "(deprecated, removed after 2022-06-01) Manage Interface on Arista EOS network devices",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: configure interface\n  arista.eos.eos_interface:\n    name: ethernet1\n    description: test-interface\n    speed: 100full\n    mtu: 512\n\n- name: remove interface\n  arista.eos.eos_interface:\n    name: ethernet1\n    state: absent\n\n- name: make interface up\n  arista.eos.eos_interface:\n    name: ethernet1\n    enabled: true\n\n- name: make interface down\n  arista.eos.eos_interface:\n    name: ethernet1\n    enabled: false\n\n- name: Check intent arguments\n  arista.eos.eos_interface:\n    name: ethernet1\n    state: up\n    tx_rate: ge(0)\n    rx_rate: le(0)\n\n- name: Check neighbors intent arguments\n  arista.eos.eos_interface:\n    name: ethernet1\n    neighbors:\n    - port: eth0\n      host: netdev\n\n- name: Configure interface in disabled state and check if the operational state is\n    disabled or not\n  arista.eos.eos_interface:\n    name: ethernet1\n    enabled: false\n    state: down\n\n- name: Add interface using aggregate\n  arista.eos.eos_interface:\n    aggregate:\n    - {name: ethernet1, mtu: 256, description: test-interface-1}\n    - {name: ethernet2, mtu: 516, description: test-interface-2}\n    speed: 100full\n    state: present\n\n- name: Delete interface using aggregate\n  arista.eos.eos_interface:\n    aggregate:\n    - name: loopback9\n    - name: loopback10\n    state: absent\n"
  },
  "arista.eos.eos_interfaces": {
    "doc": {
      "description": "This module manages the interface attributes of Arista EOS interfaces.",
      "has_action": true,
      "notes": "Tested against Arista EOS 4.24.6F\nThis module works with connection C(network_cli). See the L(EOS Platform Options,../network/user_guide/platform_eos.html).",
      "options": {
        "config": {
          "aliases": [],
          "description": "The provided configuration",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "description": {
              "aliases": [],
              "description": "Interface description",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "duplex": {
              "aliases": [],
              "description": "Interface link status. Applicable for Ethernet interfaces only.\nValues other than C(auto) must also set I(speed).\nIgnored when I(speed) is set above C(1000).",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "enabled": {
              "aliases": [],
              "description": "Administrative state of the interface.\nSet the value to C(true) to administratively enable the interface or C(false) to disable it.",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "mode": {
              "aliases": [],
              "description": "Manage Layer2 or Layer3 state of the interface. Applicable for Ethernet and port channel interfaces only.",
              "type": "str",
              "required": false,
              "choices": [
                "layer2",
                "layer3"
              ],
              "suboptions": {}
            },
            "mtu": {
              "aliases": [],
              "description": "MTU for a specific interface. Must be an even number between 576 and 9216. Applicable for Ethernet interfaces only.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "name": {
              "aliases": [],
              "description": "Full name of the interface, e.g. GigabitEthernet1.",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "speed": {
              "aliases": [],
              "description": "Interface link speed. Applicable for Ethernet interfaces only.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "running_config": {
          "aliases": [],
          "description": "This option is used only with state I(parsed).\nThe value of this option should be the output received from the EOS device by executing the command B(show running-config | section ^interface).\nThe state I(parsed) reads the configuration from C(running_config) option and transforms it into Ansible structured data as per the resource module's argspec and the value is then returned in the I(parsed) key within the result.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The state of the configuration after module completion.",
          "default": "merged",
          "type": "str",
          "required": false,
          "choices": [
            "merged",
            "replaced",
            "overridden",
            "deleted",
            "parsed",
            "rendered",
            "gathered"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Interfaces resource module",
      "version_added": "1.0.0"
    },
    "examples": "\n\n# Using merged\n\n# Before state:\n# -------------\n#\n# veos#show running-config | section interface\n# interface Ethernet1\n#    description \"Interface 1\"\n# !\n# interface Ethernet2\n# !\n# interface Management1\n#    description \"Management interface\"\n#    ip address dhcp\n# !\n\n- name: Merge provided configuration with device configuration\n  arista.eos.eos_interfaces:\n    config:\n    - name: Ethernet1\n      enabled: true\n      mode: layer3\n    - name: Ethernet2\n      description: Configured by Ansible\n      enabled: false\n    state: merged\n\n# After state:\n# ------------\n#\n# veos#show running-config | section interface\n# interface Ethernet1\n#    description \"Interface 1\"\n#    no switchport\n# !\n# interface Ethernet2\n#    description \"Configured by Ansible\"\n#    shutdown\n# !\n# interface Management1\n#    description \"Management interface\"\n#    ip address dhcp\n# !\n\n# Using replaced\n\n# Before state:\n# -------------\n#\n# veos#show running-config | section interface\n# interface Ethernet1\n#    description \"Interface 1\"\n# !\n# interface Ethernet2\n# !\n# interface Management1\n#    description \"Management interface\"\n#    ip address dhcp\n# !\n\n- name: Replaces device configuration of listed interfaces with provided configuration\n  arista.eos.eos_interfaces:\n    config:\n    - name: Ethernet1\n      enabled: true\n    - name: Ethernet2\n      description: Configured by Ansible\n      enabled: false\n    state: replaced\n\n# After state:\n# ------------\n#\n# veos#show running-config | section interface\n# interface Ethernet1\n# !\n# interface Ethernet2\n#    description \"Configured by Ansible\"\n#    shutdown\n# !\n# interface Management1\n#    description \"Management interface\"\n#    ip address dhcp\n# !\n\n# Using overridden\n\n# Before state:\n# -------------\n#\n# veos#show running-config | section interface\n# interface Ethernet1\n#    description \"Interface 1\"\n# !\n# interface Ethernet2\n# !\n# interface Management1\n#    description \"Management interface\"\n#    ip address dhcp\n# !\n\n- name: Overrides all device configuration with provided configuration\n  arista.eos.eos_interfaces:\n    config:\n    - name: Ethernet1\n      enabled: true\n    - name: Ethernet2\n      description: Configured by Ansible\n      enabled: false\n    state: overridden\n\n# After state:\n# ------------\n#\n# veos#show running-config | section interface\n# interface Ethernet1\n# !\n# interface Ethernet2\n#    description \"Configured by Ansible\"\n#    shutdown\n# !\n# interface Management1\n#    ip address dhcp\n# !\n\n# Using deleted\n\n# Before state:\n# -------------\n#\n# veos#show running-config | section interface\n# interface Ethernet1\n#    description \"Interface 1\"\n#    no switchport\n# !\n# interface Ethernet2\n# !\n# interface Management1\n#    description \"Management interface\"\n#    ip address dhcp\n# !\n\n- name: Delete or return interface parameters to default settings\n  arista.eos.eos_interfaces:\n    config:\n    - name: Ethernet1\n    state: deleted\n\n# After state:\n# ------------\n#\n# veos#show running-config | section interface\n# interface Ethernet1\n# !\n# interface Ethernet2\n# !\n# interface Management1\n#    description \"Management interface\"\n#    ip address dhcp\n# !\n\n# Using rendered\n\n- name: Use Rendered to convert the structured data to native config\n  arista.eos.eos_interfaces:\n    config:\n    - name: Ethernet1\n      enabled: true\n      mode: layer3\n    - name: Ethernet2\n      description: Configured by Ansible\n      enabled: false\n    state: merged\n\n# Output:\n# ------------\n\n# - \"interface Ethernet1\"\n# - \"description \"Interface 1\"\"\n# - \"no swithcport\"\n# - \"interface Ethernet2\"\n# - \"description \"Configured by Ansible\"\"\n# - \"shutdown\"\n# - \"interface Management1\"\n# - \"description \"Management interface\"\"\n# - \"ip address dhcp\"\n\n# Using parsed\n# parsed.cfg\n\n# interface Ethernet1\n#    description \"Interface 1\"\n# !\n# interface Ethernet2\n#    description \"Configured by Ansible\"\n#    shutdown\n# !\n\n- name: Use parsed to convert native configs to structured data\n  arista.eos.interfaces:\n    running_config: \"{{ lookup('file', 'parsed.cfg') }}\"\n    state: parsed\n\n# Output\n# parsed:\n#     - name: Ethernet1\n#       enabled: True\n#       mode: layer2\n#     - name: Ethernet2\n#       description: 'Configured by Ansible'\n#       enabled: False\n#       mode: layer2\n\n# Using gathered:\n\n# Existing config on the device\n# -----------------------------\n# interface Ethernet1\n#    description \"Interface 1\"\n# !\n# interface Ethernet2\n#    description \"Configured by Ansible\"\n#    shutdown\n# !\n\n- name: Gather interfaces facts from the device\n  arista.eos.interfaces:\n    state: gathered\n\n# output\n# gathered:\n#      - name: Ethernet1\n#        enabled: True\n#        mode: layer2\n#      - name: Ethernet2\n#        description: 'Configured by Ansible'\n#        enabled: False\n#        mode: layer2\n"
  },
  "arista.eos.eos_l2_interface": {
    "doc": {
      "description": "This module provides declarative management of L2 interfaces on Arista EOS network devices.",
      "has_action": true,
      "notes": "Tested against Arista EOS 4.24.6F\nFor information on using CLI, eAPI and privileged mode see the :ref:`EOS Platform Options guide <eos_platform_options>`\nFor more information on using Ansible to manage network devices see the :ref:`Ansible Network Guide <network_guide>`\nFor more information on using Ansible to manage Arista EOS devices see the `Arista integration page <https://www.ansible.com/ansible-arista-networks>`_.",
      "options": {
        "access_vlan": {
          "aliases": [],
          "description": "Configure given VLAN in access port. If C(mode=access), used as the access VLAN ID.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aggregate": {
          "aliases": [],
          "description": "List of Layer-2 interface definitions.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "access_vlan": {
              "aliases": [],
              "description": "Configure given VLAN in access port. If C(mode=access), used as the access VLAN ID.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "mode": {
              "aliases": [],
              "description": "Mode in which interface needs to be configured.",
              "type": "str",
              "required": false,
              "choices": [
                "access",
                "trunk"
              ],
              "suboptions": {}
            },
            "name": {
              "aliases": [],
              "description": "Name of the interface",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "native_vlan": {
              "aliases": [],
              "description": "Native VLAN to be configured in trunk port. If C(mode=trunk), used as the trunk native VLAN ID.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "state": {
              "aliases": [],
              "description": "Manage the state of the Layer-2 Interface configuration.",
              "type": "str",
              "required": false,
              "choices": [
                "present",
                "absent"
              ],
              "suboptions": {}
            },
            "trunk_allowed_vlans": {
              "aliases": [
                "trunk_vlans"
              ],
              "description": "List of allowed VLANs in a given trunk port. If C(mode=trunk), these are the ONLY VLANs that will be configured on the trunk, i.e. C(2-10,15).",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "mode": {
          "aliases": [],
          "description": "Mode in which interface needs to be configured.",
          "type": "str",
          "required": false,
          "choices": [
            "access",
            "trunk"
          ],
          "suboptions": {}
        },
        "name": {
          "aliases": [
            "interface"
          ],
          "description": "Name of the interface",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "native_vlan": {
          "aliases": [],
          "description": "Native VLAN to be configured in trunk port. If C(mode=trunk), used as the trunk native VLAN ID.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "B(Deprecated)\nStarting with Ansible 2.5 we recommend using C(connection: network_cli).\nStarting with Ansible 2.6 we recommend using C(connection: httpapi) for eAPI.\nThis option will be removed in a release after 2022-06-01.\nFor more information please see the L(EOS Platform Options guide, ../network/user_guide/platform_eos.html).\nHORIZONTALLINE\nA dict object containing connection details.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "auth_pass": {
              "aliases": [],
              "description": "Specifies the password to use if required to enter privileged mode on the remote device.  If I(authorize) is false, then this argument does nothing. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_AUTH_PASS) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "authorize": {
              "aliases": [],
              "description": "Instructs the module to enter privileged mode on the remote device before sending any commands.  If not specified, the device will attempt to execute all commands in non-privileged mode. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_AUTHORIZE) will be used instead.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "host": {
              "aliases": [],
              "description": "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [],
              "description": "Specifies the password to use to authenticate the connection to the remote device.  This is a common argument used for either I(cli) or I(eapi) transports. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "port": {
              "aliases": [],
              "description": "Specifies the port to use when building the connection to the remote device.  This value applies to either I(cli) or I(eapi).\nThe port value will default to the appropriate transport common port if none is provided in the task (cli=22, http=80, https=443).",
              "default": "0",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "ssh_keyfile": {
              "aliases": [],
              "description": "Specifies the SSH keyfile to use to authenticate the connection to the remote device.  This argument is only used for I(cli) transports. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead.",
              "type": "path",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "cli",
              "type": "str",
              "required": false,
              "choices": [
                "cli",
                "eapi"
              ],
              "suboptions": {}
            },
            "use_proxy": {
              "aliases": [],
              "description": "If C(no), the environment variables C(http_proxy) and C(https_proxy) will be ignored.",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "use_ssl": {
              "aliases": [],
              "description": "Configures the I(transport) to use SSL if set to C(yes) only when the C(transport=eapi).  If the transport argument is not eapi, this value is ignored.",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "username": {
              "aliases": [],
              "description": "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate either the CLI login or the eAPI authentication depending on which transport is used. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates.  If the transport argument is not eapi, this value is ignored.",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "Manage the state of the Layer-2 Interface configuration.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "trunk_allowed_vlans": {
          "aliases": [
            "trunk_vlans"
          ],
          "description": "List of allowed VLANs in a given trunk port. If C(mode=trunk), these are the ONLY VLANs that will be configured on the trunk, i.e. C(2-10,15).",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "(deprecated, removed after 2022-06-01) Manage L2 interfaces on Arista EOS network devices.",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Ensure Ethernet1 does not have any switchport\n  arista.eos.eos_l2_interface:\n    name: Ethernet1\n    state: absent\n\n- name: Ensure Ethernet1 is configured for access vlan 20\n  arista.eos.eos_l2_interface:\n    name: Ethernet1\n    mode: access\n    access_vlan: 20\n\n- name: Ensure Ethernet1 is a trunk port and ensure 2-50 are being tagged (doesn't\n    mean others aren't also being tagged)\n  arista.eos.eos_l2_interface:\n    name: Ethernet1\n    mode: trunk\n    native_vlan: 10\n    trunk_allowed_vlans: 2-50\n\n- name: Set switchports on aggregate\n  arista.eos.eos_l2_interface:\n    aggregate:\n    - {name: ethernet1, mode: access, access_vlan: 20}\n    - {name: ethernet2, mode: trunk, native_vlan: 10}\n"
  },
  "arista.eos.eos_l2_interfaces": {
    "doc": {
      "description": "This module provides declarative management of Layer-2 interface on Arista EOS devices.",
      "has_action": true,
      "notes": "Tested against Arista EOS 4.24.6F\nThis module works with connection C(network_cli). See the L(EOS Platform Options,../network/user_guide/platform_eos.html).",
      "options": {
        "config": {
          "aliases": [],
          "description": "A dictionary of Layer-2 interface options",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "access": {
              "aliases": [],
              "description": "Switchport mode access command to configure the interface as a layer 2 access.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "vlan": {
                  "aliases": [],
                  "description": "Configure given VLAN in access port. It's used as the access VLAN ID.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "mode": {
              "aliases": [],
              "description": "Mode in which interface needs to be configured.\nAccess mode is not shown in interface facts, so idempotency will not be maintained for switchport mode access and every time the output will come as changed=True.",
              "type": "str",
              "required": false,
              "choices": [
                "access",
                "trunk"
              ],
              "suboptions": {}
            },
            "name": {
              "aliases": [],
              "description": "Full name of interface, e.g. Ethernet1.",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "trunk": {
              "aliases": [],
              "description": "Switchport mode trunk command to configure the interface as a Layer 2 trunk.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "native_vlan": {
                  "aliases": [],
                  "description": "Native VLAN to be configured in trunk port. It is used as the trunk native VLAN ID.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "trunk_allowed_vlans": {
                  "aliases": [],
                  "description": "List of allowed VLANs in a given trunk port. These are the only VLANs that will be configured on the trunk.",
                  "type": "list",
                  "required": false,
                  "elements": "str",
                  "suboptions": {}
                }
              }
            }
          }
        },
        "running_config": {
          "aliases": [],
          "description": "This option is used only with state I(parsed).\nThe value of this option should be the output received from the EOS device by executing the command B(show running-config | section ^interface).\nThe state I(parsed) reads the configuration from C(running_config) option and transforms it into Ansible structured data as per the resource module's argspec and the value is then returned in the I(parsed) key within the result.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The state of the configuration after module completion",
          "default": "merged",
          "type": "str",
          "required": false,
          "choices": [
            "merged",
            "replaced",
            "overridden",
            "deleted",
            "parsed",
            "rendered",
            "gathered"
          ],
          "suboptions": {}
        }
      },
      "short_description": "L2 interfaces resource module",
      "version_added": "1.0.0"
    },
    "examples": "\n\n# Using merged\n\n# Before state:\n# -------------\n#\n# veos#show running-config | section interface\n# interface Ethernet1\n#    switchport access vlan 20\n# !\n# interface Ethernet2\n#    switchport trunk native vlan 20\n#    switchport mode trunk\n# !\n# interface Management1\n#    ip address dhcp\n#    ipv6 address auto-config\n# !\n\n- name: Merge provided configuration with device configuration.\n  arista.eos.eos_l2_interfaces:\n    config:\n    - name: Ethernet1\n      mode: trunk\n      trunk:\n        native_vlan: 10\n    - name: Ethernet2\n      mode: access\n      access:\n        vlan: 30\n    state: merged\n\n# After state:\n# ------------\n#\n# veos#show running-config | section interface\n# interface Ethernet1\n#    switchport trunk native vlan 10\n#    switchport mode trunk\n# !\n# interface Ethernet2\n#    switchport access vlan 30\n# !\n# interface Management1\n#    ip address dhcp\n#    ipv6 address auto-config\n# !\n\n# Using replaced\n\n# Before state:\n# -------------\n#\n# veos2#show running-config | s int\n# interface Ethernet1\n#    switchport access vlan 20\n# !\n# interface Ethernet2\n#    switchport trunk native vlan 20\n#    switchport mode trunk\n# !\n# interface Management1\n#    ip address dhcp\n#    ipv6 address auto-config\n# !\n\n- name: Replace device configuration of specified L2 interfaces with provided configuration.\n  arista.eos.eos_l2_interfaces:\n    config:\n    - name: Ethernet1\n      mode: trunk\n      trunk:\n        native_vlan: 20\n        trunk_vlans: 5-10, 15\n    state: replaced\n\n# After state:\n# ------------\n#\n# veos#show running-config | section interface\n# interface Ethernet1\n#    switchport trunk native vlan 20\n#    switchport trunk allowed vlan 5-10,15\n#    switchport mode trunk\n# !\n# interface Ethernet2\n#    switchport trunk native vlan 20\n#    switchport mode trunk\n# !\n# interface Management1\n#    ip address dhcp\n#    ipv6 address auto-config\n# !\n\n# Using overridden\n\n# Before state:\n# -------------\n#\n# veos#show running-config | section interface\n# interface Ethernet1\n#    switchport access vlan 20\n# !\n# interface Ethernet2\n#    switchport trunk native vlan 20\n#    switchport mode trunk\n# !\n# interface Management1\n#    ip address dhcp\n#    ipv6 address auto-config\n# !\n\n- name: Override device configuration of all L2 interfaces on device with provided\n    configuration.\n  arista.eos.eos_l2_interfaces:\n    config:\n    - name: Ethernet2\n      mode: access\n      access:\n        vlan: 30\n    state: overridden\n\n# After state:\n# ------------\n#\n# veos#show running-config | section interface\n# interface Ethernet1\n# !\n# interface Ethernet2\n#    switchport access vlan 30\n# !\n# interface Management1\n#    ip address dhcp\n#    ipv6 address auto-config\n# !\n\n# Using deleted\n\n# Before state:\n# -------------\n#\n# veos#show running-config | section interface\n# interface Ethernet1\n#    switchport access vlan 20\n# !\n# interface Ethernet2\n#    switchport trunk native vlan 20\n#    switchport mode trunk\n# !\n# interface Management1\n#    ip address dhcp\n#    ipv6 address auto-config\n# !\n\n- name: Delete EOS L2 interfaces as in given arguments.\n  arista.eos.eos_l2_interfaces:\n    config:\n    - name: Ethernet1\n    - name: Ethernet2\n    state: deleted\n\n# After state:\n# ------------\n#\n# veos#show running-config | section interface\n# interface Ethernet1\n# !\n# interface Ethernet2\n# !\n# interface Management1\n#    ip address dhcp\n#    ipv6 address auto-config\n\n# using rendered\n\n- name: Use Rendered to convert the structured data to native config\n  arista.eos.eos_l2_interfaces:\n    config:\n    - name: Ethernet1\n      mode: trunk\n      trunk:\n        native_vlan: 10\n    - name: Ethernet2\n      mode: access\n      access:\n        vlan: 30\n    state: merged\n\n# Output :\n# ------------\n#\n# - \"interface Ethernet1\"\n# - \"switchport trunk native vlan 10\"\n# - \"switchport mode trunk\"\n# - \"interface Ethernet2\"\n# - \"switchport access vlan 30\"\n# - \"interface Management1\"\n# - \"ip address dhcp\"\n# - \"ipv6 address auto-config\"\n\n\n# using parsed\n\n# parsed.cfg\n\n# interface Ethernet1\n#    switchport trunk native vlan 10\n#    switchport mode trunk\n# !\n# interface Ethernet2\n#    switchport access vlan 30\n# !\n\n- name: Use parsed to convert native configs to structured data\n  arista.eos.l2_interfaces:\n    running_config: \"{{ lookup('file', 'parsed.cfg') }}\"\n    state: parsed\n\n# Output:\n#   parsed:\n#      - name: Ethernet1\n#        mode: trunk\n#        trunk:\n#          native_vlan: 10\n#      - name: Ethernet2\n#        mode: access\n#        access:\n#          vlan: 30\n\n\n# Using gathered:\n# Existing config on the device:\n#\n# veos#show running-config | section interface\n# interface Ethernet1\n#    switchport trunk native vlan 10\n#    switchport mode trunk\n# !\n# interface Ethernet2\n#    switchport access vlan 30\n# !\n\n- name: Gather interfaces facts from the device\n  arista.eos.l2_interfaces:\n    state: gathered\n# output:\n#   gathered:\n#      - name: Ethernet1\n#        mode: trunk\n#        trunk:\n#          native_vlan: 10\n#      - name: Ethernet2\n#        mode: access\n#        access:\n#          vlan: 30\n\n"
  },
  "arista.eos.eos_l3_interface": {
    "doc": {
      "description": "This module provides declarative management of L3 interfaces on Arista EOS network devices.",
      "has_action": true,
      "notes": "Tested against Arista EOS 4.24.6F\nFor information on using CLI, eAPI and privileged mode see the :ref:`EOS Platform Options guide <eos_platform_options>`\nFor more information on using Ansible to manage network devices see the :ref:`Ansible Network Guide <network_guide>`\nFor more information on using Ansible to manage Arista EOS devices see the `Arista integration page <https://www.ansible.com/ansible-arista-networks>`_.",
      "options": {
        "aggregate": {
          "aliases": [],
          "description": "List of L3 interfaces definitions. Each of the entry in aggregate list should define name of interface C(name) and a optional C(ipv4) or C(ipv6) address.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "ipv4": {
              "aliases": [],
              "description": "IPv4 address to be set for the L3 interface mentioned in I(name) option. The address format is <ipv4 address>/<mask>, the mask is number in range 0-32 eg. 192.168.0.1/24",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "ipv6": {
              "aliases": [],
              "description": "IPv6 address to be set for the L3 interface mentioned in I(name) option. The address format is <ipv6 address>/<mask>, the mask is number in range 0-128 eg. fd5d:12c9:2201:1::1/64",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "name": {
              "aliases": [],
              "description": "Name of the L3 interface to be configured eg. ethernet1",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "state": {
              "aliases": [],
              "description": "State of the L3 interface configuration. It indicates if the configuration should be present or absent on remote device.",
              "type": "str",
              "required": false,
              "choices": [
                "present",
                "absent"
              ],
              "suboptions": {}
            }
          }
        },
        "ipv4": {
          "aliases": [],
          "description": "IPv4 address to be set for the L3 interface mentioned in I(name) option. The address format is <ipv4 address>/<mask>, the mask is number in range 0-32 eg. 192.168.0.1/24",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ipv6": {
          "aliases": [],
          "description": "IPv6 address to be set for the L3 interface mentioned in I(name) option. The address format is <ipv6 address>/<mask>, the mask is number in range 0-128 eg. fd5d:12c9:2201:1::1/64",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the L3 interface to be configured eg. ethernet1",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "B(Deprecated)\nStarting with Ansible 2.5 we recommend using C(connection: network_cli).\nStarting with Ansible 2.6 we recommend using C(connection: httpapi) for eAPI.\nThis option will be removed in a release after 2022-06-01.\nFor more information please see the L(EOS Platform Options guide, ../network/user_guide/platform_eos.html).\nHORIZONTALLINE\nA dict object containing connection details.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "auth_pass": {
              "aliases": [],
              "description": "Specifies the password to use if required to enter privileged mode on the remote device.  If I(authorize) is false, then this argument does nothing. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_AUTH_PASS) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "authorize": {
              "aliases": [],
              "description": "Instructs the module to enter privileged mode on the remote device before sending any commands.  If not specified, the device will attempt to execute all commands in non-privileged mode. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_AUTHORIZE) will be used instead.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "host": {
              "aliases": [],
              "description": "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [],
              "description": "Specifies the password to use to authenticate the connection to the remote device.  This is a common argument used for either I(cli) or I(eapi) transports. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "port": {
              "aliases": [],
              "description": "Specifies the port to use when building the connection to the remote device.  This value applies to either I(cli) or I(eapi).\nThe port value will default to the appropriate transport common port if none is provided in the task (cli=22, http=80, https=443).",
              "default": "0",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "ssh_keyfile": {
              "aliases": [],
              "description": "Specifies the SSH keyfile to use to authenticate the connection to the remote device.  This argument is only used for I(cli) transports. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead.",
              "type": "path",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "cli",
              "type": "str",
              "required": false,
              "choices": [
                "cli",
                "eapi"
              ],
              "suboptions": {}
            },
            "use_proxy": {
              "aliases": [],
              "description": "If C(no), the environment variables C(http_proxy) and C(https_proxy) will be ignored.",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "use_ssl": {
              "aliases": [],
              "description": "Configures the I(transport) to use SSL if set to C(yes) only when the C(transport=eapi).  If the transport argument is not eapi, this value is ignored.",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "username": {
              "aliases": [],
              "description": "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate either the CLI login or the eAPI authentication depending on which transport is used. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates.  If the transport argument is not eapi, this value is ignored.",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "State of the L3 interface configuration. It indicates if the configuration should be present or absent on remote device.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        }
      },
      "short_description": "(deprecated, removed after 2022-06-01) Manage L3 interfaces on Arista EOS network devices.",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Remove ethernet1 IPv4 and IPv6 address\n  arista.eos.eos_l3_interface:\n    name: ethernet1\n    state: absent\n\n- name: Set ethernet1 IPv4 address\n  arista.eos.eos_l3_interface:\n    name: ethernet1\n    ipv4: 192.168.0.1/24\n\n- name: Set ethernet1 IPv6 address\n  arista.eos.eos_l3_interface:\n    name: ethernet1\n    ipv6: fd5d:12c9:2201:1::1/64\n\n- name: Set interface Vlan1 (SVI) IPv4 address\n  arista.eos.eos_l3_interface:\n    name: Vlan1\n    ipv4: 192.168.0.5/24\n\n- name: Set IP addresses on aggregate\n  arista.eos.eos_l3_interface:\n    aggregate:\n    - name: ethernet1\n      ipv4: 192.168.2.10/24\n    - name: ethernet1\n      ipv4: 192.168.3.10/24\n      ipv6: fd5d:12c9:2201:1::1/64\n\n- name: Remove IP addresses on aggregate\n  arista.eos.eos_l3_interface:\n    aggregate:\n    - name: ethernet1\n      ipv4: 192.168.2.10/24\n    - name: ethernet1\n      ipv4: 192.168.3.10/24\n      ipv6: fd5d:12c9:2201:1::1/64\n    state: absent\n"
  },
  "arista.eos.eos_l3_interfaces": {
    "doc": {
      "description": "This module provides declarative management of Layer 3 interfaces on Arista EOS devices.",
      "has_action": true,
      "notes": "Tested against Arista EOS 4.24.6F\nThis module works with connection C(network_cli). See the L(EOS Platform Options,../network/user_guide/platform_eos.html). 'eos_l2_interfaces/eos_interfaces' should be used for preparing the interfaces , before applying L3 configurations using this module (eos_l3_interfaces).",
      "options": {
        "config": {
          "aliases": [],
          "description": "A dictionary of Layer 3 interface options",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "ipv4": {
              "aliases": [],
              "description": "List of IPv4 addresses to be set for the Layer 3 interface mentioned in I(name) option.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "address": {
                  "aliases": [],
                  "description": "IPv4 address to be set in the format <ipv4 address>/<mask> eg. 192.0.2.1/24, or C(dhcp) to query DHCP for an IP address.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "secondary": {
                  "aliases": [],
                  "description": "Whether or not this address is a secondary address.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "virtual": {
                  "aliases": [],
                  "description": "Whether or not this address is a virtual address.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "ipv6": {
              "aliases": [],
              "description": "List of IPv6 addresses to be set for the Layer 3 interface mentioned in I(name) option.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "address": {
                  "aliases": [],
                  "description": "IPv6 address to be set in the address format is <ipv6 address>/<mask> eg. 2001:db8:2201:1::1/64 or C(auto-config) to use SLAAC to chose an address.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "name": {
              "aliases": [],
              "description": "Full name of the interface, i.e. Ethernet1.",
              "type": "str",
              "required": true,
              "suboptions": {}
            }
          }
        },
        "running_config": {
          "aliases": [],
          "description": "This option is used only with state I(parsed).\nThe value of this option should be the output received from the EOS device by executing the command B(show running-config | section ^interface).\nThe state I(parsed) reads the configuration from C(running_config) option and transforms it into Ansible structured data as per the resource module's argspec and the value is then returned in the I(parsed) key within the result.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The state of the configuration after module completion",
          "default": "merged",
          "type": "str",
          "required": false,
          "choices": [
            "merged",
            "replaced",
            "overridden",
            "deleted",
            "parsed",
            "gathered",
            "rendered"
          ],
          "suboptions": {}
        }
      },
      "short_description": "L3 interfaces resource module",
      "version_added": "1.0.0"
    },
    "examples": "\n\n# Using deleted\n\n# Before state:\n# -------------\n#\n# veos#show running-config | section interface\n# interface Ethernet1\n#    ip address 192.0.2.12/24\n# !\n# interface Ethernet2\n#    ipv6 address 2001:db8::1/64\n# !\n# interface Management1\n#    ip address dhcp\n#    ipv6 address auto-config\n\n- name: Delete L3 attributes of given interfaces.\n  arista.eos.eos_l3_interfaces:\n    config:\n    - name: Ethernet1\n    - name: Ethernet2\n    state: deleted\n\n# After state:\n# ------------\n#\n# veos#show running-config | section interface\n# interface Ethernet1\n# !\n# interface Ethernet2\n# !\n# interface Management1\n#    ip address dhcp\n#    ipv6 address auto-config\n\n\n# Using merged\n\n# Before state:\n# -------------\n#\n# veos#show running-config | section interface\n# interface Ethernet1\n#    ip address 192.0.2.12/24\n# !\n# interface Ethernet2\n#    ipv6 address 2001:db8::1/64\n# !\n# interface Management1\n#    ip address dhcp\n#    ipv6 address auto-config\n\n- name: Merge provided configuration with device configuration.\n  arista.eos.eos_l3_interfaces:\n    config:\n    - name: Ethernet1\n      ipv4:\n      - address: 198.51.100.14/24\n    - name: Ethernet2\n      ipv4:\n      - address: 203.0.113.27/24\n    state: merged\n\n# After state:\n# ------------\n#\n# veos#show running-config | section interface\n# interface Ethernet1\n#    ip address 198.51.100.14/24\n# !\n# interface Ethernet2\n#    ip address 203.0.113.27/24\n#    ipv6 address 2001:db8::1/64\n# !\n# interface Management1\n#    ip address dhcp\n#    ipv6 address auto-config\n\n\n# Using overridden\n\n# Before state:\n# -------------\n#\n# veos#show running-config | section interface\n# interface Ethernet1\n#    ip address 192.0.2.12/24\n# !\n# interface Ethernet2\n#    ipv6 address 2001:db8::1/64\n# !\n# interface Management1\n#    ip address dhcp\n#    ipv6 address auto-config\n\n- name: Override device configuration of all L2 interfaces on device with provided\n    configuration.\n  arista.eos.eos_l3_interfaces:\n    config:\n    - name: Ethernet1\n      ipv6:\n      - address: 2001:db8:feed::1/96\n    - name: Management1\n      ipv4:\n      - address: dhcp\n    ipv6: auto-config\n    state: overridden\n\n# After state:\n# ------------\n#\n# veos#show running-config | section interface\n# interface Ethernet1\n#    ipv6 address 2001:db8:feed::1/96\n# !\n# interface Ethernet2\n# !\n# interface Management1\n#    ip address dhcp\n#    ipv6 address auto-config\n\n\n# Using replaced\n\n# Before state:\n# -------------\n#\n# veos#show running-config | section interface\n# interface Ethernet1\n#    ip address 192.0.2.12/24\n# !\n# interface Ethernet2\n#    ipv6 address 2001:db8::1/64\n# !\n# interface Management1\n#    ip address dhcp\n#    ipv6 address auto-config\n\n- name: Replace device configuration of specified L2 interfaces with provided configuration.\n  arista.eos.eos_l3_interfaces:\n    config:\n    - name: Ethernet2\n      ipv4:\n      - address: 203.0.113.27/24\n    state: replaced\n\n# After state:\n# ------------\n#\n# veos#show running-config | section interface\n# interface Ethernet1\n#    ip address 192.0.2.12/24\n# !\n# interface Ethernet2\n#    ip address 203.0.113.27/24\n# !\n# interface Management1\n#    ip address dhcp\n#    ipv6 address auto-config\n\n# Using parsed:\n\n# parsed.cfg\n# ------------\n#\n# veos#show running-config | section interface\n# interface Ethernet1\n#    ip address 198.51.100.14/24\n# !\n# interface Ethernet2\n#    ip address 203.0.113.27/24\n# !\n\n- name: Use parsed to convert native configs to structured data\n  arista.eos.interfaces:\n    running_config: \"{{ lookup('file', 'parsed.cfg') }}\"\n    state: parsed\n\n# Output:\n\n# parsed:\n#    - name: Ethernet1\n#      ipv4:\n#        - address: 198.51.100.14/24\n#    - name: Ethernet2\n#      ipv4:\n#        - address: 203.0.113.27/24\n\n# Using rendered:\n\n- name: Use Rendered to convert the structured data to native config\n  arista.eos.eos_l3_interfaces:\n    config:\n    - name: Ethernet1\n      ipv4:\n      - address: 198.51.100.14/24\n    - name: Ethernet2\n      ipv4:\n      - address: 203.0.113.27/24\n    state: rendered\n\n# Output\n# ------------\n#rendered:\n#   - \"interface Ethernet1\"\n#   - \"ip address 198.51.100.14/24\"\n#   - \"interface Ethernet2\"\n#   - \"ip address 203.0.113.27/24\"\n\n# using gathered:\n\n# Native COnfig:\n# veos#show running-config | section interface\n# interface Ethernet1\n#    ip address 198.51.100.14/24\n# !\n# interface Ethernet2\n#    ip address 203.0.113.27/24\n# !\n\n- name: Gather l3 interfaces facts from the device\n  arista.eos.l3_interfaces:\n    state: gathered\n\n#    gathered:\n#      - name: Ethernet1\n#        ipv4:\n#          - address: 198.51.100.14/24\n#      - name: Ethernet2\n#        ipv4:\n#          - address: 203.0.113.27/24\n\n\n"
  },
  "arista.eos.eos_lacp": {
    "doc": {
      "description": "This module manages Global Link Aggregation Control Protocol (LACP) on Arista EOS devices.",
      "has_action": true,
      "notes": "Tested against Arista EOS 4.24.6F\nThis module works with connection C(network_cli). See the L(EOS Platform Options,../network/user_guide/platform_eos.html).",
      "options": {
        "config": {
          "aliases": [],
          "description": "LACP global options.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "system": {
              "aliases": [],
              "description": "LACP system options.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "priority": {
                  "aliases": [],
                  "description": "The system priority to use in LACP negotiations.\nLower value is higher priority.\nRefer to vendor documentation for valid values.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                }
              }
            }
          }
        },
        "running_config": {
          "aliases": [],
          "description": "This option is used only with state I(parsed).\nThe value of this option should be the output received from the EOS device by executing the command B(show running-config | section ^lacp).\nThe state I(parsed) reads the configuration from C(running_config) option and transforms it into Ansible structured data as per the resource module's argspec and the value is then returned in the I(parsed) key within the result.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The state of the configuration after module completion.",
          "default": "merged",
          "type": "str",
          "required": false,
          "choices": [
            "merged",
            "replaced",
            "deleted",
            "parsed",
            "rendered",
            "gathered"
          ],
          "suboptions": {}
        }
      },
      "short_description": "LACP resource module",
      "version_added": "1.0.0"
    },
    "examples": "\n# Using merged\n\n# Before state:\n# -------------\n# veos# show running-config | include lacp\n# lacp system-priority 10\n\n- name: Merge provided global LACP attributes with device attributes\n  arista.eos.eos_lacp:\n    config:\n      system:\n        priority: 20\n    state: merged\n\n# After state:\n# ------------\n# veos# show running-config | include lacp\n# lacp system-priority 20\n#\n\n\n# Using replaced\n\n# Before state:\n# -------------\n# veos# show running-config | include lacp\n# lacp system-priority 10\n\n- name: Replace device global LACP attributes with provided attributes\n  arista.eos.eos_lacp:\n    config:\n      system:\n        priority: 20\n    state: replaced\n\n# After state:\n# ------------\n# veos# show running-config | include lacp\n# lacp system-priority 20\n#\n\n\n# Using deleted\n\n# Before state:\n# -------------\n# veos# show running-config | include lacp\n# lacp system-priority 10\n\n- name: Delete global LACP attributes\n  arista.eos.eos_lacp:\n    state: deleted\n\n# After state:\n# ------------\n# veos# show running-config | include lacp\n#\n\n#Using rendered:\n\n- name: Use Rendered to convert the structured data to native config\n  arista.eos.eos_lacp:\n    config:\n      system:\n        priority: 20\n    state: rendered\n\n# Output:\n# ------------\n# rendered:\n#   - \"lacp system-priority 20\"\n#\n\n# Using parsed:\n\n# parsed.cfg\n# lacp system-priority 20\n\n- name: Use parsed to convert native configs to structured data\n  arista.eos.eos_lacp:\n    running_config: \"{{ lookup('file', 'parsed.cfg') }}\"\n    state: parsed\n\n# Output:\n# parsed:\n#   system:\n#     priority: 20\n\n# Using gathered:\n# nathive config:\n# -------------\n# lacp system-priority 10\n\n- name: Gather lacp facts from the device\n  arista.eos.eos_lacp:\n    state: gathered\n\n# Output:\n# gathered:\n#   system:\n#     priority: 10\n#\n\n"
  },
  "arista.eos.eos_lacp_interfaces": {
    "doc": {
      "description": "This module manages Link Aggregation Control Protocol (LACP) attributes of interfaces on Arista EOS devices.",
      "has_action": true,
      "notes": "Tested against Arista EOS 4.24.6F\nThis module works with connection C(network_cli). See the L(EOS Platform Options,../network/user_guide/platform_eos.html).",
      "options": {
        "config": {
          "aliases": [],
          "description": "A dictionary of LACP interfaces options.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "name": {
              "aliases": [],
              "description": "Full name of the interface (i.e. Ethernet1).",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "port_priority": {
              "aliases": [],
              "description": "LACP port priority for the interface. Range 1-65535.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timer": {
              "aliases": [
                "rate"
              ],
              "description": "Rate at which PDUs are sent by LACP. At fast rate LACP is transmitted once every 1 second. At normal rate LACP is transmitted every 30 seconds after the link is bundled.",
              "type": "str",
              "required": false,
              "choices": [
                "fast",
                "normal"
              ],
              "suboptions": {}
            }
          }
        },
        "running_config": {
          "aliases": [],
          "description": "This option is used only with state I(parsed).\nThe value of this option should be the output received from the EOS device by executing the command B(show running-config | section ^interfaces).\nThe state I(parsed) reads the configuration from C(running_config) option and transforms it into Ansible structured data as per the resource module's argspec and the value is then returned in the I(parsed) key within the result.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The state of the configuration after module completion.",
          "default": "merged",
          "type": "str",
          "required": false,
          "choices": [
            "merged",
            "replaced",
            "overridden",
            "deleted",
            "parsed",
            "rendered",
            "gathered"
          ],
          "suboptions": {}
        }
      },
      "short_description": "LACP interfaces resource module",
      "version_added": "1.0.0"
    },
    "examples": "\n# Using merged\n#\n#\n# ------------\n# Before state\n# ------------\n#\n#\n# veos#show run | section ^interface\n# interface Ethernet1\n#    lacp port-priority 30\n# interface Ethernet2\n#    lacp rate fast\n\n- name: Merge provided configuration with device configuration\n  arista.eos.eos_lacp_interfaces:\n    config:\n    - name: Ethernet1\n      rate: fast\n    - name: Ethernet2\n      rate: normal\n    state: merged\n\n#\n# -----------\n# After state\n# -----------\n#\n# veos#show run | section ^interface\n# interface Ethernet1\n#    lacp port-priority 30\n#    lacp rate fast\n# interface Ethernet2\n\n\n# Using replaced\n#\n#\n# ------------\n# Before state\n# ------------\n#\n#\n# veos#show run | section ^interface\n# interface Ethernet1\n#    lacp port-priority 30\n# interface Ethernet2\n#    lacp rate fast\n\n- name: Replace existing LACP configuration of specified interfaces with provided\n    configuration\n  arista.eos.eos_lacp_interfaces:\n    config:\n    - name: Ethernet1\n      rate: fast\n    state: replaced\n\n#\n# -----------\n# After state\n# -----------\n#\n# veos#show run | section ^interface\n# interface Ethernet1\n#    lacp rate fast\n# interface Ethernet2\n#    lacp rate fast\n\n\n# Using overridden\n#\n#\n# ------------\n# Before state\n# ------------\n#\n#\n# veos#show run | section ^interface\n# interface Ethernet1\n#    lacp port-priority 30\n# interface Ethernet2\n#    lacp rate fast\n\n- name: Override the LACP configuration of all the interfaces with provided configuration\n  arista.eos.eos_lacp_interfaces:\n    config:\n    - name: Ethernet1\n      rate: fast\n    state: overridden\n\n#\n# -----------\n# After state\n#\n#\n# veos#show run | section ^interface\n# interface Ethernet1\n#    lacp rate fast\n# interface Ethernet2\n\n\n# Using deleted\n#\n#\n# ------------\n# Before state\n# ------------\n#\n#\n# veos#show run | section ^interface\n# interface Ethernet1\n#    lacp port-priority 30\n# interface Ethernet2\n#    lacp rate fast\n\n- name: Delete LACP attributes of given interfaces (or all interfaces if none specified).\n  arista.eos.eos_lacp_interfaces:\n    state: deleted\n\n#\n# -----------\n# After state\n# -----------\n#\n# veos#show run | section ^interface\n# interface Ethernet1\n# interface Ethernet2\n\n# using rendered:\n\n- name: Use Rendered to convert the structured data to native config\n  arista.eos.eos_lacp_interfaces:\n    config:\n    - name: Ethernet1\n      rate: fast\n    - name: Ethernet2\n      rate: normal\n    state: rendered\n\n#\n# -----------\n# Output\n# -----------\n# rendered:\n#   - \"interface Ethernet1\"\n#   - \"lacp rate fast\"\n\n# Using parsed:\n\n# parsed.cfg:\n#    \"interface Ethernet1\"\n#    \"lacp rate fast\"\n#    \"interface Ethernet2\"\n\n- name: Use parsed to convert native configs to structured data\n  arista.eos.eos_lacp_interfaces:\n    running_config: \"{{ lookup('file', 'parsed.cfg') }}\"\n    state: parsed\n\n# Output:\n# parsed:\n#   - name: Ethernet1\n#     rate: fast\n#   - name: Ethernet2\n#     rate: normal\n\n# Using gathered:\n# native config:\n#  veos#show run | section ^interface\n# interface Ethernet1\n#    lacp port-priority 30\n# interface Ethernet2\n#    lacp rate fast\n\n- name: Gather LACP facts from the device\n  arista.eos.eos_lacp_interfaces:\n    state: gathered\n\n# Output:\n# gathered:\n#   - name: Ethernet1\n#   - name: Ethernet2\n#     rate: fast\n\n"
  },
  "arista.eos.eos_lag_interfaces": {
    "doc": {
      "description": "This module manages attributes of link aggregation groups on Arista EOS devices.",
      "has_action": true,
      "notes": "Tested against Arista EOS 4.24.6F\nThis module works with connection C(network_cli). See the L(EOS Platform Options,../network/user_guide/platform_eos.html).",
      "options": {
        "config": {
          "aliases": [],
          "description": "A list of link aggregation group configurations.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "members": {
              "aliases": [],
              "description": "Ethernet interfaces that are part of the group.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "member": {
                  "aliases": [],
                  "description": "Name of ethernet interface that is a member of the LAG.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "mode": {
                  "aliases": [],
                  "description": "LAG mode for this interface.",
                  "type": "str",
                  "required": false,
                  "choices": [
                    "active",
                    "on",
                    "passive"
                  ],
                  "suboptions": {}
                }
              }
            },
            "name": {
              "aliases": [],
              "description": "Name of the port-channel interface of the link aggregation group (LAG) e.g., Port-Channel5.",
              "type": "str",
              "required": true,
              "suboptions": {}
            }
          }
        },
        "running_config": {
          "aliases": [],
          "description": "This option is used only with state I(parsed).\nThe value of this option should be the output received from the EOS device by executing the command B(show running-config | section interfaces).\nThe state I(parsed) reads the configuration from C(running_config) option and transforms it into Ansible structured data as per the resource module's argspec and the value is then returned in the I(parsed) key within the result.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The state of the configuration after module completion.",
          "default": "merged",
          "type": "str",
          "required": false,
          "choices": [
            "merged",
            "replaced",
            "overridden",
            "deleted",
            "rendered",
            "gathered",
            "parsed"
          ],
          "suboptions": {}
        }
      },
      "short_description": "LAG interfaces resource module",
      "version_added": "1.0.0"
    },
    "examples": "\n\n# Using merged\n\n# Before state:\n# -------------\n#\n# veos#show running-config | section interface\n# interface Ethernet1\n#   channel-group 5 mode on\n# interface Ethernet2\n\n- name: Merge provided LAG attributes with existing device configuration\n  arista.eos.eos_lag_interfaces:\n    config:\n    - name: 5\n      members:\n      - member: Ethernet2\n        mode: on\n    state: merged\n\n# After state:\n# ------------\n#\n# veos#show running-config | section interface\n# interface Ethernet1\n#   channel-group 5 mode on\n# interface Ethernet2\n#   channel-group 5 mode on\n\n\n# Using replaced\n\n# Before state:\n# -------------\n#\n# veos#show running-config | section interface\n# interface Ethernet1\n#   channel-group 5 mode on\n# interface Ethernet2\n\n- name: Replace all device configuration of specified LAGs with provided configuration\n  arista.eos.eos_lag_interfaces:\n    config:\n    - name: 5\n      members:\n      - member: Ethernet2\n        mode: on\n    state: replaced\n\n# After state:\n# ------------\n#\n# veos#show running-config | section interface\n# interface Ethernet1\n# interface Ethernet2\n#   channel-group 5 mode on\n\n\n# Using overridden\n\n# Before state:\n# -------------\n#\n# veos#show running-config | section interface\n# interface Ethernet1\n#   channel-group 5 mode on\n# interface Ethernet2\n\n- name: Override all device configuration of all LAG attributes with provided configuration\n  arista.eos.eos_lag_interfaces:\n    config:\n    - name: 10\n      members:\n      - member: Ethernet2\n        mode: on\n    state: overridden\n\n# After state:\n# ------------\n#\n# veos#show running-config | section interface\n# interface Ethernet1\n# interface Ethernet2\n#   channel-group 10 mode on\n\n\n# Using deleted\n\n# Before state:\n# -------------\n#\n# veos#show running-config | section interface\n# interface Ethernet1\n#   channel-group 5 mode on\n# interface Ethernet2\n#   channel-group 5 mode on\n\n- name: Delete LAG attributes of the given interfaces.\n  arista.eos.eos_lag_interfaces:\n    config:\n    - name: 5\n      members:\n      - member: Ethernet1\n    state: deleted\n\n# After state:\n# ------------\n#\n# veos#show running-config | section interface\n# interface Ethernet1\n# interface Ethernet2\n#   channel-group 5 mode on\n\n# Using parsed:\n\n# parsed.cfg\n# interface Ethernet1\n#   channel-group 5 mode on\n# interface Ethernet2\n#   channel-group 5 mode on\n\n- name: Use parsed to convert native configs to structured data\n  arista.eos.lag_interfaces:\n    running_config: \"{{ lookup('file', 'parsed.cfg') }}\"\n    state: parsed\n\n# Output:\n#   parsed:\n#     - name: 5\n#       members:\n#         - member: Ethernet2\n#           mode: on\n#         - member: Ethernet1\n#           mode: on\n\n# using rendered:\n\n- name: Use Rendered to convert the structured data to native config\n  arista.eos.eos_lag_interfaces:\n    config:\n    - name: 5\n      members:\n      - member: Ethernet2\n        mode: on\n      - member: Ethernet1\n        mode: on\n    state: rendered\n# -----------\n# Output\n# -----------\n#\n# rendered:\n\n# interface Ethernet1\n#   channel-group 5 mode on\n# interface Ethernet2\n#   channel-group 5 mode on\n\n\n# Using gathered:\n\n# native config:\n# interface Ethernet1\n#   channel-group 5 mode on\n# interface Ethernet2\n#   channel-group 5 mode on\n\n- name: Gather lldp_global facts from the device\n  arista.eos.lldp_global:\n    state: gathered\n\n# Output:\n#   gathered:\n#     - name: 5\n#       members:\n#         - member: Ethernet2\n#           mode: on\n#         - member: Ethernet1\n#           mode: on\n\n"
  },
  "arista.eos.eos_linkagg": {
    "doc": {
      "description": "This module provides declarative management of link aggregation groups on Arista EOS network devices.",
      "has_action": true,
      "notes": "Tested against Arista EOS 4.24.6F\nFor information on using CLI, eAPI and privileged mode see the :ref:`EOS Platform Options guide <eos_platform_options>`\nFor more information on using Ansible to manage network devices see the :ref:`Ansible Network Guide <network_guide>`\nFor more information on using Ansible to manage Arista EOS devices see the `Arista integration page <https://www.ansible.com/ansible-arista-networks>`_.",
      "options": {
        "aggregate": {
          "aliases": [],
          "description": "List of link aggregation definitions.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "group": {
              "aliases": [],
              "description": "Channel-group number for the port-channel Link aggregation group. Range 1-2000.",
              "type": "int",
              "required": true,
              "suboptions": {}
            },
            "members": {
              "aliases": [],
              "description": "List of members of the link aggregation group.",
              "type": "list",
              "required": false,
              "elements": "str",
              "suboptions": {}
            },
            "min_links": {
              "aliases": [],
              "description": "Minimum number of ports required up before bringing up the link aggregation group.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "mode": {
              "aliases": [],
              "description": "Mode of the link aggregation group.",
              "type": "str",
              "required": false,
              "choices": [
                "active",
                "on",
                "passive"
              ],
              "suboptions": {}
            },
            "state": {
              "aliases": [],
              "description": "State of the link aggregation group.",
              "type": "str",
              "required": false,
              "choices": [
                "present",
                "absent"
              ],
              "suboptions": {}
            }
          }
        },
        "group": {
          "aliases": [],
          "description": "Channel-group number for the port-channel Link aggregation group. Range 1-2000.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "members": {
          "aliases": [],
          "description": "List of members of the link aggregation group.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "min_links": {
          "aliases": [],
          "description": "Minimum number of ports required up before bringing up the link aggregation group.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "mode": {
          "aliases": [],
          "description": "Mode of the link aggregation group.",
          "type": "str",
          "required": false,
          "choices": [
            "active",
            "on",
            "passive"
          ],
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "B(Deprecated)\nStarting with Ansible 2.5 we recommend using C(connection: network_cli).\nStarting with Ansible 2.6 we recommend using C(connection: httpapi) for eAPI.\nThis option will be removed in a release after 2022-06-01.\nFor more information please see the L(EOS Platform Options guide, ../network/user_guide/platform_eos.html).\nHORIZONTALLINE\nA dict object containing connection details.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "auth_pass": {
              "aliases": [],
              "description": "Specifies the password to use if required to enter privileged mode on the remote device.  If I(authorize) is false, then this argument does nothing. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_AUTH_PASS) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "authorize": {
              "aliases": [],
              "description": "Instructs the module to enter privileged mode on the remote device before sending any commands.  If not specified, the device will attempt to execute all commands in non-privileged mode. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_AUTHORIZE) will be used instead.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "host": {
              "aliases": [],
              "description": "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [],
              "description": "Specifies the password to use to authenticate the connection to the remote device.  This is a common argument used for either I(cli) or I(eapi) transports. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "port": {
              "aliases": [],
              "description": "Specifies the port to use when building the connection to the remote device.  This value applies to either I(cli) or I(eapi).\nThe port value will default to the appropriate transport common port if none is provided in the task (cli=22, http=80, https=443).",
              "default": "0",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "ssh_keyfile": {
              "aliases": [],
              "description": "Specifies the SSH keyfile to use to authenticate the connection to the remote device.  This argument is only used for I(cli) transports. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead.",
              "type": "path",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "cli",
              "type": "str",
              "required": false,
              "choices": [
                "cli",
                "eapi"
              ],
              "suboptions": {}
            },
            "use_proxy": {
              "aliases": [],
              "description": "If C(no), the environment variables C(http_proxy) and C(https_proxy) will be ignored.",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "use_ssl": {
              "aliases": [],
              "description": "Configures the I(transport) to use SSL if set to C(yes) only when the C(transport=eapi).  If the transport argument is not eapi, this value is ignored.",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "username": {
              "aliases": [],
              "description": "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate either the CLI login or the eAPI authentication depending on which transport is used. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates.  If the transport argument is not eapi, this value is ignored.",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "purge": {
          "aliases": [],
          "description": "Purge links not defined in the I(aggregate) parameter.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "State of the link aggregation group.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        }
      },
      "short_description": "(deprecated, removed after 2022-06-01) Manage link aggregation groups on Arista EOS network devices",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: create link aggregation group\n  arista.eos.eos_linkagg:\n    group: 10\n    state: present\n\n- name: delete link aggregation group\n  arista.eos.eos_linkagg:\n    group: 10\n    state: absent\n\n- name: set link aggregation group to members\n  arista.eos.eos_linkagg:\n    group: 200\n    min_links: 3\n    mode: active\n    members:\n    - Ethernet0\n    - Ethernet1\n\n- name: remove link aggregation group from Ethernet0\n  arista.eos.eos_linkagg:\n    group: 200\n    min_links: 3\n    mode: active\n    members:\n    - Ethernet1\n\n- name: Create aggregate of linkagg definitions\n  arista.eos.eos_linkagg:\n    aggregate:\n    - {group: 3, mode: on, members: [Ethernet1]}\n    - {group: 100, mode: passive, min_links: 3, members: [Ethernet2]}\n\n- name: Remove aggregate of linkagg definitions\n  arista.eos.eos_linkagg:\n    aggregate:\n    - {group: 3, mode: on, members: [Ethernet1]}\n    - {group: 100, mode: passive, min_links: 3, members: [Ethernet2]}\n    state: absent\n"
  },
  "arista.eos.eos_lldp": {
    "doc": {
      "description": "This module provides declarative management of LLDP service on Arista EOS network devices.",
      "has_action": true,
      "notes": "Tested against Arista EOS 4.24.6F\nFor information on using CLI, eAPI and privileged mode see the :ref:`EOS Platform Options guide <eos_platform_options>`\nFor more information on using Ansible to manage network devices see the :ref:`Ansible Network Guide <network_guide>`\nFor more information on using Ansible to manage Arista EOS devices see the `Arista integration page <https://www.ansible.com/ansible-arista-networks>`_.",
      "options": {
        "provider": {
          "aliases": [],
          "description": "B(Deprecated)\nStarting with Ansible 2.5 we recommend using C(connection: network_cli).\nStarting with Ansible 2.6 we recommend using C(connection: httpapi) for eAPI.\nThis option will be removed in a release after 2022-06-01.\nFor more information please see the L(EOS Platform Options guide, ../network/user_guide/platform_eos.html).\nHORIZONTALLINE\nA dict object containing connection details.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "auth_pass": {
              "aliases": [],
              "description": "Specifies the password to use if required to enter privileged mode on the remote device.  If I(authorize) is false, then this argument does nothing. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_AUTH_PASS) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "authorize": {
              "aliases": [],
              "description": "Instructs the module to enter privileged mode on the remote device before sending any commands.  If not specified, the device will attempt to execute all commands in non-privileged mode. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_AUTHORIZE) will be used instead.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "host": {
              "aliases": [],
              "description": "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [],
              "description": "Specifies the password to use to authenticate the connection to the remote device.  This is a common argument used for either I(cli) or I(eapi) transports. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "port": {
              "aliases": [],
              "description": "Specifies the port to use when building the connection to the remote device.  This value applies to either I(cli) or I(eapi).\nThe port value will default to the appropriate transport common port if none is provided in the task (cli=22, http=80, https=443).",
              "default": "0",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "ssh_keyfile": {
              "aliases": [],
              "description": "Specifies the SSH keyfile to use to authenticate the connection to the remote device.  This argument is only used for I(cli) transports. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead.",
              "type": "path",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "cli",
              "type": "str",
              "required": false,
              "choices": [
                "cli",
                "eapi"
              ],
              "suboptions": {}
            },
            "use_proxy": {
              "aliases": [],
              "description": "If C(no), the environment variables C(http_proxy) and C(https_proxy) will be ignored.",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "use_ssl": {
              "aliases": [],
              "description": "Configures the I(transport) to use SSL if set to C(yes) only when the C(transport=eapi).  If the transport argument is not eapi, this value is ignored.",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "username": {
              "aliases": [],
              "description": "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate either the CLI login or the eAPI authentication depending on which transport is used. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates.  If the transport argument is not eapi, this value is ignored.",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "State of the LLDP configuration. If value is I(present) lldp will be enabled else if it is I(absent) it will be disabled.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent",
            "enabled",
            "disabled"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manage LLDP configuration on Arista EOS network devices",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Enable LLDP service\n  arista.eos.eos_lldp:\n    state: present\n\n- name: Disable LLDP service\n  arista.eos.eos_lldp:\n    state: absent\n"
  },
  "arista.eos.eos_lldp_global": {
    "doc": {
      "description": "This module manages Global Link Layer Discovery Protocol (LLDP) settings on Arista EOS devices.",
      "has_action": true,
      "notes": "Tested against Arista EOS 4.24.6F\nThis module works with connection C(network_cli). See the L(EOS Platform Options,../network/user_guide/platform_eos.html).",
      "options": {
        "config": {
          "aliases": [],
          "description": "The provided global LLDP configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "holdtime": {
              "aliases": [],
              "description": "Specifies the holdtime (in sec) to be sent in packets.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "reinit": {
              "aliases": [],
              "description": "Specifies the delay (in sec) for LLDP initialization on any interface.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timer": {
              "aliases": [],
              "description": "Specifies the rate at which LLDP packets are sent (in sec).",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "tlv_select": {
              "aliases": [],
              "description": "Specifies the LLDP TLVs to enable or disable.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "link_aggregation": {
                  "aliases": [],
                  "description": "Enable or disable link aggregation TLV.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "management_address": {
                  "aliases": [],
                  "description": "Enable or disable management address TLV.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "max_frame_size": {
                  "aliases": [],
                  "description": "Enable or disable maximum frame size TLV.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "port_description": {
                  "aliases": [],
                  "description": "Enable or disable port description TLV.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "system_capabilities": {
                  "aliases": [],
                  "description": "Enable or disable system capabilities TLV.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "system_description": {
                  "aliases": [],
                  "description": "Enable or disable system description TLV.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "system_name": {
                  "aliases": [],
                  "description": "Enable or disable system name TLV.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                }
              }
            }
          }
        },
        "running_config": {
          "aliases": [],
          "description": "This option is used only with state I(parsed).\nThe value of this option should be the output received from the EOS device by executing the command B(show running-config | section lldp).\nThe state I(parsed) reads the configuration from C(running_config) option and transforms it into Ansible structured data as per the resource module's argspec and the value is then returned in the I(parsed) key within the result.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The state of the configuration after module completion.",
          "default": "merged",
          "type": "str",
          "required": false,
          "choices": [
            "merged",
            "replaced",
            "deleted",
            "rendered",
            "gathered",
            "parsed"
          ],
          "suboptions": {}
        }
      },
      "short_description": "LLDP resource module",
      "version_added": "1.0.0"
    },
    "examples": "\n# Using merged\n#\n# ------------\n# Before State\n# ------------\n#\n# veos# show run | section lldp\n# lldp timer 3000\n# lldp holdtime 100\n# lldp reinit 5\n# no lldp tlv-select management-address\n# no lldp tlv-select system-description\n\n- name: Merge provided LLDP configuration with the existing configuration\n  arista.eos.eos_lldp_global:\n    config:\n      holdtime: 100\n      tlv_select:\n        management_address: false\n        port_description: false\n        system_description: true\n    state: merged\n\n# -----------\n# After state\n# -----------\n#\n# veos# show run | section lldp\n# lldp timer 3000\n# lldp holdtime 100\n# lldp reinit 5\n# no lldp tlv-select management-address\n# no lldp tlv-select port-description\n\n\n# Using replaced\n#\n# ------------\n# Before State\n# ------------\n#\n# veos# show run | section lldp\n# lldp timer 3000\n# lldp holdtime 100\n# lldp reinit 5\n# no lldp tlv-select management-address\n# no lldp tlv-select system-description\n\n- name: Replace existing LLDP device configuration with provided configuration\n  arista.eos.eos_lldp_global:\n    config:\n      holdtime: 100\n      tlv_select:\n        management_address: false\n        port_description: false\n        system_description: true\n    state: replaced\n\n# -----------\n# After state\n# -----------\n#\n# veos# show run | section lldp\n# lldp holdtime 100\n# no lldp tlv-select management-address\n# no lldp tlv-select port-description\n\n\n# Using deleted\n#\n# ------------\n# Before State\n# ------------\n#\n# veos# show run | section lldp\n# lldp timer 3000\n# lldp holdtime 100\n# lldp reinit 5\n# no lldp tlv-select management-address\n# no lldp tlv-select system-description\n\n- name: Delete existing LLDP configurations from the device\n  arista.eos.eos_lldp_global:\n    state: deleted\n\n# -----------\n# After state\n# -----------\n#\n# veos# show run | section ^lldp\n\n# Using rendered:\n\n- name: Use Rendered to convert the structured data to native config\n  arista.eos.eos_lldp_global:\n    config:\n      holdtime: 100\n      tlv_select:\n        management_address: false\n        port_description: false\n        system_description: true\n    state: rendered\n\n# -----------\n# Output\n# -----------\n#\n# rendered:\n#   - \"lldp holdtime 100\"\n#   - \"no lldp tlv-select management-address\"\n#   - \"no lldp tlv-select port-description\"\n\n# Using parsed\n\n# parsed.cfg\n\n# lldp timer 3000\n# lldp holdtime 100\n# lldp reinit 5\n# no lldp tlv-select management-address\n# no lldp tlv-select system-description\n\n- name: Use parsed to convert native configs to structured data\n  arista.eos.lldp_global:\n    running_config: \"{{ lookup('file', 'parsed.cfg') }}\"\n    state: parsed\n\n# -----------\n# Output\n# -----------\n\n#    parsed:\n#      holdtime: 100\n#      timer 3000\n#      reinit 5\n#      tlv_select:\n#        management_address: False\n#        port_description: False\n#        system_description: True\n\n# Using gathered:\n# native config:\n# lldp timer 3000\n# lldp holdtime 100\n# lldp reinit 5\n# no lldp tlv-select management-address\n# no lldp tlv-select system-description\n\n\n- name: Gather lldp_global facts from the device\n  arista.eos.lldp_global:\n    state: gathered\n\n# -----------\n# Output\n# -----------\n\n#    gathered:\n#      holdtime: 100\n#      timer 3000\n#      reinit 5\n#      tlv_select:\n#        management_address: False\n#        port_description: False\n#        system_description: True\n\n"
  },
  "arista.eos.eos_lldp_interfaces": {
    "doc": {
      "description": "This module manages Link Layer Discovery Protocol (LLDP) attributes of interfaces on Arista EOS devices.",
      "has_action": true,
      "notes": "Tested against Arista EOS 4.24.6F\nThis module works with connection C(network_cli). See the L(EOS Platform Options,../network/user_guide/platform_eos.html).",
      "options": {
        "config": {
          "aliases": [],
          "description": "A dictionary of LLDP interfaces options.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "name": {
              "aliases": [],
              "description": "Full name of the interface (i.e. Ethernet1).",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "receive": {
              "aliases": [],
              "description": "Enable/disable LLDP RX on an interface.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "transmit": {
              "aliases": [],
              "description": "Enable/disable LLDP TX on an interface.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "running_config": {
          "aliases": [],
          "description": "This option is used only with state I(parsed).\nThe value of this option should be the output received from the EOS device by executing the command B(show running-config | section ^interface).\nThe state I(parsed) reads the configuration from C(running_config) option and transforms it into Ansible structured data as per the resource module's argspec and the value is then returned in the I(parsed) key within the result.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The state of the configuration after module completion.",
          "default": "merged",
          "type": "str",
          "required": false,
          "choices": [
            "merged",
            "replaced",
            "overridden",
            "deleted",
            "parsed",
            "gathered",
            "rendered"
          ],
          "suboptions": {}
        }
      },
      "short_description": "LLDP interfaces resource module",
      "version_added": "1.0.0"
    },
    "examples": "\n# Using merged\n#\n#\n# ------------\n# Before state\n# ------------\n#\n#\n# veos#show run | section ^interface\n# interface Ethernet1\n#    no lldp receive\n# interface Ethernet2\n#    no lldp transmit\n\n- name: Merge provided configuration with running configuration\n  arista.eos.eos_lldp_interfaces:\n    config:\n    - name: Ethernet1\n      transmit: false\n    - name: Ethernet2\n      transmit: false\n    state: merged\n\n#\n# ------------\n# After state\n# ------------\n#\n# veos#show run | section ^interface\n# interface Ethernet1\n#    no lldp transmit\n#    no lldp receive\n# interface Ethernet2\n#    no lldp transmit\n\n\n# Using replaced\n#\n#\n# ------------\n# Before state\n# ------------\n#\n#\n# veos#show run | section ^interface\n# interface Ethernet1\n#    no lldp receive\n# interface Ethernet2\n#    no lldp transmit\n\n- name: Replace existing LLDP configuration of specified interfaces with provided\n    configuration\n  arista.eos.eos_lldp_interfaces:\n    config:\n    - name: Ethernet1\n      transmit: false\n    state: replaced\n\n#\n# ------------\n# After state\n# ------------\n#\n# veos#show run | section ^interface\n# interface Ethernet1\n#    no lldp transmit\n# interface Ethernet2\n#    no lldp transmit\n\n\n# Using overridden\n#\n#\n# ------------\n# Before state\n# ------------\n#\n#\n# veos#show run | section ^interface\n# interface Ethernet1\n#    no lldp receive\n# interface Ethernet2\n#    no lldp transmit\n\n- name: Override the LLDP configuration of all the interfaces with provided configuration\n  arista.eos.eos_lldp_interfaces:\n    config:\n    - name: Ethernet1\n      transmit: false\n    state: overridden\n\n#\n# ------------\n# After state\n# ------------\n#\n# veos#show run | section ^interface\n# interface Ethernet1\n#    no lldp transmit\n# interface Ethernet2\n\n\n# Using deleted\n#\n#\n# ------------\n# Before state\n# ------------\n#\n#\n# veos#show run | section ^interface\n# interface Ethernet1\n#    no lldp receive\n# interface Ethernet2\n#    no lldp transmit\n\n- name: Delete LLDP configuration of specified interfaces (or all interfaces if none\n    are specified)\n  arista.eos.eos_lldp_interfaces:\n    state: deleted\n\n#\n# ------------\n# After state\n# ------------\n#\n# veos#show run | section ^interface\n# interface Ethernet1\n# interface Ethernet2\n\n# using rendered:\n\n- name: Use Rendered to convert the structured data to native config\n  arista.eos.eos_lldp_interfaces:\n    config:\n    - name: Ethernet1\n      transmit: false\n    - name: Ethernet2\n      transmit: false\n    state: rendered\n\n#\n# ------------\n# Output\n# ------------\n#\n# interface Ethernet1\n#    no lldp transmit\n# interface Ethernet2\n#    no lldp transmit\n\n# Using parsed\n# parsed.cfg\n\n# interface Ethernet1\n#    no lldp transmit\n# interface Ethernet2\n#    no lldp transmit\n\n\n- name: Use parsed to convert native configs to structured data\n  arista.eos.lldp_interfaces:\n    running_config: \"{{ lookup('file', 'parsed.cfg') }}\"\n    state: parsed\n\n# ------------\n# Output\n# ------------\n\n#   parsed:\n#     - name: Ethernet1\n#       transmit: False\n#     - name: Ethernet2\n#       transmit: False\n\n# Using gathered:\n\n# native config:\n# interface Ethernet1\n#    no lldp transmit\n# interface Ethernet2\n#    no lldp transmit\n\n- name: Gather lldp interfaces facts from the device\n  arista.eos.lldp_interfaces:\n    state: gathered\n\n# ------------\n# Output\n# ------------\n\n#   gathered:\n#     - name: Ethernet1\n#       transmit: False\n#     - name: Ethernet2\n#       transmit: False\n\n"
  },
  "arista.eos.eos_logging": {
    "doc": {
      "description": "This module provides declarative management of logging on Arista Eos devices.",
      "has_action": true,
      "notes": "Tested against Arista EOS 4.24.6F\nFor information on using CLI, eAPI and privileged mode see the :ref:`EOS Platform Options guide <eos_platform_options>`\nFor more information on using Ansible to manage network devices see the :ref:`Ansible Network Guide <network_guide>`\nFor more information on using Ansible to manage Arista EOS devices see the `Arista integration page <https://www.ansible.com/ansible-arista-networks>`_.",
      "options": {
        "aggregate": {
          "aliases": [],
          "description": "List of logging definitions.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "dest": {
              "aliases": [],
              "description": "Destination of the logs.",
              "type": "str",
              "required": false,
              "choices": [
                "on",
                "host",
                "console",
                "monitor",
                "buffered"
              ],
              "suboptions": {}
            },
            "facility": {
              "aliases": [],
              "description": "Set logging facility.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "level": {
              "aliases": [],
              "description": "Set logging severity levels.",
              "type": "str",
              "required": false,
              "choices": [
                "emergencies",
                "alerts",
                "critical",
                "errors",
                "warnings",
                "notifications",
                "informational",
                "debugging"
              ],
              "suboptions": {}
            },
            "name": {
              "aliases": [],
              "description": "The hostname or IP address of the destination.\nRequired when I(dest=host).",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "size": {
              "aliases": [],
              "description": "Size of buffer. The acceptable value is in range from 10 to 2147483647 bytes.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "state": {
              "aliases": [],
              "description": "State of the logging configuration.",
              "default": "present",
              "type": "str",
              "required": false,
              "choices": [
                "present",
                "absent"
              ],
              "suboptions": {}
            }
          }
        },
        "dest": {
          "aliases": [],
          "description": "Destination of the logs.",
          "type": "str",
          "required": false,
          "choices": [
            "on",
            "host",
            "console",
            "monitor",
            "buffered"
          ],
          "suboptions": {}
        },
        "facility": {
          "aliases": [],
          "description": "Set logging facility.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "level": {
          "aliases": [],
          "description": "Set logging severity levels.",
          "type": "str",
          "required": false,
          "choices": [
            "emergencies",
            "alerts",
            "critical",
            "errors",
            "warnings",
            "notifications",
            "informational",
            "debugging"
          ],
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The hostname or IP address of the destination.\nRequired when I(dest=host).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "B(Deprecated)\nStarting with Ansible 2.5 we recommend using C(connection: network_cli).\nStarting with Ansible 2.6 we recommend using C(connection: httpapi) for eAPI.\nThis option will be removed in a release after 2022-06-01.\nFor more information please see the L(EOS Platform Options guide, ../network/user_guide/platform_eos.html).\nHORIZONTALLINE\nA dict object containing connection details.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "auth_pass": {
              "aliases": [],
              "description": "Specifies the password to use if required to enter privileged mode on the remote device.  If I(authorize) is false, then this argument does nothing. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_AUTH_PASS) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "authorize": {
              "aliases": [],
              "description": "Instructs the module to enter privileged mode on the remote device before sending any commands.  If not specified, the device will attempt to execute all commands in non-privileged mode. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_AUTHORIZE) will be used instead.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "host": {
              "aliases": [],
              "description": "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [],
              "description": "Specifies the password to use to authenticate the connection to the remote device.  This is a common argument used for either I(cli) or I(eapi) transports. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "port": {
              "aliases": [],
              "description": "Specifies the port to use when building the connection to the remote device.  This value applies to either I(cli) or I(eapi).\nThe port value will default to the appropriate transport common port if none is provided in the task (cli=22, http=80, https=443).",
              "default": "0",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "ssh_keyfile": {
              "aliases": [],
              "description": "Specifies the SSH keyfile to use to authenticate the connection to the remote device.  This argument is only used for I(cli) transports. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead.",
              "type": "path",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "cli",
              "type": "str",
              "required": false,
              "choices": [
                "cli",
                "eapi"
              ],
              "suboptions": {}
            },
            "use_proxy": {
              "aliases": [],
              "description": "If C(no), the environment variables C(http_proxy) and C(https_proxy) will be ignored.",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "use_ssl": {
              "aliases": [],
              "description": "Configures the I(transport) to use SSL if set to C(yes) only when the C(transport=eapi).  If the transport argument is not eapi, this value is ignored.",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "username": {
              "aliases": [],
              "description": "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate either the CLI login or the eAPI authentication depending on which transport is used. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates.  If the transport argument is not eapi, this value is ignored.",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "size": {
          "aliases": [],
          "description": "Size of buffer. The acceptable value is in range from 10 to 2147483647 bytes.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "State of the logging configuration.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manage logging on network devices",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: configure host logging\n  arista.eos.eos_logging:\n    dest: host\n    name: 172.16.0.1\n    state: present\n\n- name: remove host logging configuration\n  arista.eos.eos_logging:\n    dest: host\n    name: 172.16.0.1\n    state: absent\n\n- name: configure console logging level and facility\n  arista.eos.eos_logging:\n    dest: console\n    facility: local7\n    level: debugging\n    state: present\n\n- name: enable logging to all\n  arista.eos.eos_logging:\n    dest: on\n\n- name: configure buffer size\n  arista.eos.eos_logging:\n    dest: buffered\n    size: 5000\n\n- name: Configure logging using aggregate\n  arista.eos.eos_logging:\n    aggregate:\n    - {dest: console, level: warnings}\n    - {dest: buffered, size: 480000}\n    state: present\n"
  },
  "arista.eos.eos_logging_global": {
    "doc": {
      "description": "This module configures and manages the attributes of  logging on Arista EOS platforms.",
      "has_action": true,
      "notes": "Tested against Arista EOS 4.24.6M\nThis module works with connection C(network_cli). See the L(EOS Platform Options,eos_platform_options).",
      "options": {
        "config": {
          "aliases": [],
          "description": "A dictionary of logging options",
          "type": "dict",
          "required": false,
          "suboptions": {
            "buffered": {
              "aliases": [],
              "description": "Set buffered logging parameters.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "buffer_size": {
                  "aliases": [],
                  "description": "Logging buffer size",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "severity": {
                  "aliases": [],
                  "description": "Severity level .",
                  "type": "str",
                  "required": false,
                  "choices": [
                    "emergencies",
                    "alerts",
                    "critical",
                    "errors",
                    "warnings",
                    "notifications",
                    "informational",
                    "debugging"
                  ],
                  "suboptions": {}
                }
              }
            },
            "console": {
              "aliases": [],
              "description": "Set console logging parameters.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "severity": {
                  "aliases": [],
                  "description": "Severity level .",
                  "type": "str",
                  "required": false,
                  "choices": [
                    "emergencies",
                    "alerts",
                    "critical",
                    "errors",
                    "warnings",
                    "notifications",
                    "informational",
                    "debugging"
                  ],
                  "suboptions": {}
                }
              }
            },
            "event": {
              "aliases": [],
              "description": "Global events",
              "type": "str",
              "required": false,
              "choices": [
                "link-status",
                "port-channel",
                "spanning-tree"
              ],
              "suboptions": {}
            },
            "facility": {
              "aliases": [],
              "description": "Set logging facility.",
              "type": "str",
              "required": false,
              "choices": [
                "auth",
                "cron",
                "daemon",
                "kern",
                "local0",
                "local1",
                "local2",
                "local3",
                "local4",
                "local5",
                "local6",
                "local7",
                "lpr",
                "mail",
                "news",
                "sys10",
                "sys11",
                "sys12",
                "sys13",
                "sys14",
                "sys9",
                "syslog",
                "user",
                "uucp"
              ],
              "suboptions": {}
            },
            "format": {
              "aliases": [],
              "description": "Set logging format parameters",
              "type": "dict",
              "required": false,
              "suboptions": {
                "hostname": {
                  "aliases": [],
                  "description": "Specify hostname logging format.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "sequence_numbers": {
                  "aliases": [],
                  "description": "No. of log messages.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "timestamp": {
                  "aliases": [],
                  "description": "Set timestamp logging parameters.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "high_resolution": {
                      "aliases": [],
                      "description": "RFC3339 timestamps.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "traditional": {
                      "aliases": [],
                      "description": "Traditional syslog timestamp format as specified in RFC3164.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "state": {
                          "aliases": [],
                          "description": "When enabled traditional timestamp format is set.",
                          "type": "str",
                          "required": false,
                          "choices": [
                            "enabled",
                            "disabled"
                          ],
                          "suboptions": {}
                        },
                        "timezone": {
                          "aliases": [],
                          "description": "Show timezone in traditional format timestamp",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "year": {
                          "aliases": [],
                          "description": "Show year in traditional format timestamp",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    }
                  }
                }
              }
            },
            "hosts": {
              "aliases": [],
              "description": "Set syslog server IP address and parameters.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "add": {
                  "aliases": [],
                  "description": "Configure ports on the given host.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "name": {
                  "aliases": [],
                  "description": "Hostname or IP address of the syslog server.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "port": {
                  "aliases": [],
                  "description": "Port of the syslog server.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "protocol": {
                  "aliases": [],
                  "description": "Set syslog server transport protocol",
                  "type": "str",
                  "required": false,
                  "choices": [
                    "tcp",
                    "udp"
                  ],
                  "suboptions": {}
                },
                "remove": {
                  "aliases": [],
                  "description": "Remove configured ports from the given host",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "level": {
              "aliases": [],
              "description": "Configure logging severity",
              "type": "dict",
              "required": false,
              "suboptions": {
                "facility": {
                  "aliases": [],
                  "description": "Facility level",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "severity": {
                  "aliases": [],
                  "description": "Severity level .",
                  "type": "str",
                  "required": false,
                  "choices": [
                    "emergencies",
                    "alerts",
                    "critical",
                    "errors",
                    "warnings",
                    "notifications",
                    "informational",
                    "debugging"
                  ],
                  "suboptions": {}
                }
              }
            },
            "monitor": {
              "aliases": [],
              "description": "Set terminal monitor severity",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "persistent": {
              "aliases": [],
              "description": "Save logging messages to the flash disk.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "set": {
                  "aliases": [],
                  "description": "Save logging messages to the flash dis.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "size": {
                  "aliases": [],
                  "description": "The maximum size (in bytes) of logging file stored on flash disk.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "policy": {
              "aliases": [],
              "description": "Configure logging policies.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "invert_result": {
                  "aliases": [],
                  "description": "Invert the match of match-list.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "match_list": {
                  "aliases": [],
                  "description": "Configure logging message filtering.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "qos": {
              "aliases": [],
              "description": "Set DSCP value in IP header.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "relogging_interval": {
              "aliases": [],
              "description": "Configure relogging-interval for critical log messages",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "repeat_messages": {
              "aliases": [],
              "description": "Repeat messages instead of summarizing number of repeats",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "source_interface": {
              "aliases": [],
              "description": "Use IP Address of interface as source IP of log messages.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "synchronous": {
              "aliases": [],
              "description": "Set synchronizing unsolicited with solicited messages",
              "type": "dict",
              "required": false,
              "suboptions": {
                "level": {
                  "aliases": [],
                  "description": "Configure logging severity",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "set": {
                  "aliases": [],
                  "description": "Set synchronizing unsolicited with solicited messages.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "trap": {
              "aliases": [],
              "description": "Severity of messages sent to the syslog server.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "set": {
                  "aliases": [],
                  "description": "Severity of messages sent to the syslog server.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "severity": {
                  "aliases": [],
                  "description": "Severity level .",
                  "type": "str",
                  "required": false,
                  "choices": [
                    "emergencies",
                    "alerts",
                    "critical",
                    "errors",
                    "warnings",
                    "notifications",
                    "informational",
                    "debugging"
                  ],
                  "suboptions": {}
                }
              }
            },
            "turn_on": {
              "aliases": [],
              "description": "Turn on logging.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "vrfs": {
              "aliases": [],
              "description": "Specify vrf",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "hosts": {
                  "aliases": [],
                  "description": "Set syslog server IP address and parameters.",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "add": {
                      "aliases": [],
                      "description": "Configure ports on the given host.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "name": {
                      "aliases": [],
                      "description": "Hostname or IP address of the syslog server.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "port": {
                      "aliases": [],
                      "description": "Port of the syslog server.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "protocol": {
                      "aliases": [],
                      "description": "Set syslog server transport protocol",
                      "type": "str",
                      "required": false,
                      "choices": [
                        "tcp",
                        "udp"
                      ],
                      "suboptions": {}
                    },
                    "remove": {
                      "aliases": [],
                      "description": "Remove configured ports from the given host",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "name": {
                  "aliases": [],
                  "description": "vrf name.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "source_interface": {
                  "aliases": [],
                  "description": "Use IP Address of interface as source IP of log messages.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            }
          }
        },
        "running_config": {
          "aliases": [],
          "description": "This option is used only with state I(parsed).\nThe value of this option should be the output received from the EOS device by executing the command B(show running-config | section access-list).\nThe states I(replaced) and I(overridden) have identical behaviour for this module.\nThe state I(parsed) reads the configuration from C(running_config) option and transforms it into Ansible structured data as per the resource module's argspec and the value is then returned in the I(parsed) key within the result.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The state the configuration should be left in.",
          "default": "merged",
          "type": "str",
          "required": false,
          "choices": [
            "deleted",
            "merged",
            "overridden",
            "replaced",
            "gathered",
            "rendered",
            "parsed"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manages logging resource module",
      "version_added": "3.0.0"
    },
    "examples": "\n\n# Using merged\n\n# Before state\n\n# test(config)#show running-config | section logging\n# test(config)#\n\n  - name: Merge provided configuration with device configuration\n    arista.eos.eos_logging_global:\n      config:\n        hosts:\n          - name: \"host01\"\n            protocol: \"tcp\"\n          - name: \"11.11.11.1\"\n            port: 25\n        vrfs:\n          - name: \"vrf01\"\n            source_interface: \"Ethernet1\"\n          - name: \"vrf02\"\n            hosts:\n              - name: \"hostvrf1\"\n                protocol: \"tcp\"\n              - name: \"24.1.1.1\"\n                port: \"33\"\n\n# After State:\n\n# test(config)#show running-config | section logging\n# logging host 11.11.11.1 25\n# logging host host01 514 protocol tcp\n# logging vrf vrf02 host 24.1.1.1 33\n# logging vrf vrf02 host hostvrf1 514 protocol tcp\n# logging vrf vrf01 source-interface Ethernet1\n# test(config)#\n#\n#\n# Module Execution:\n# \"after\": {\n#         \"hosts\": [\n#             {\n#                 \"name\": \"11.11.11.1\",\n#                 \"port\": 25\n#             },\n#             {\n#                 \"name\": \"host01\",\n#                 \"port\": 514,\n#                 \"protocol\": \"tcp\"\n#             }\n#         ],\n#         \"vrfs\": [\n#             {\n#                 \"name\": \"vrf01\",\n#                 \"source_interface\": \"Ethernet1\"\n#             },\n#             {\n#                 \"hosts\": [\n#                     {\n#                         \"name\": \"24.1.1.1\",\n#                         \"port\": 33\n#                     },\n#                     {\n#                         \"name\": \"hostvrf1\",\n#                         \"port\": 514,\n#                         \"protocol\": \"tcp\"\n#                     }\n#                 ],\n#                 \"name\": \"vrf02\"\n#             }\n#         ]\n#     },\n#     \"before\": {},\n#     \"changed\": true,\n#     \"commands\": [\n#         \"logging host host01 protocol tcp\",\n#         \"logging host 11.11.11.1 25\",\n#         \"logging vrf vrf01 source-interface Ethernet1\",\n#         \"logging vrf vrf02 host hostvrf1 protocol tcp\",\n#         \"logging vrf vrf02 host 24.1.1.1 33\"\n#     ],\n#\n\n# Using replaced:\n# Before State:\n\n# test(config)#show running-config | section logging\n# logging host 11.11.11.1 25\n# logging host host01 514 protocol tcp\n# logging vrf vrf02 host 24.1.1.1 33\n# logging vrf vrf02 host hostvrf1 514 protocol tcp\n# logging format timestamp traditional timezone\n# logging vrf vrf01 source-interface Ethernet1\n# logging policy match inverse-result match-list                           list01 discard\n# logging persistent 4096\n# !\n# logging level AAA alerts\n# test(config)#\n\n  - name: Repalce\n    arista.eos.eos_logging_global:\n      config:\n        synchronous:\n          set: True\n        trap:\n          severity: \"critical\"\n        hosts:\n          - name: \"host02\"\n            protocol: \"tcp\"\n        vrfs:\n          - name: \"vrf03\"\n            source_interface: \"Vlan100\"\n          - name: \"vrf04\"\n            hosts:\n              - name: \"hostvrf1\"\n                protocol: \"tcp\"\n\n      state: replaced\n\n# After State:\n# test(config)#show running-config | section logging\n# logging synchronous\n# logging trap critical\n# logging host host02 514 protocol tcp\n# logging vrf vrf04 host hostvrf1 514 protocol tcp\n# logging vrf vrf03 source-interface Vlan100\n# test(config)#\n#\n# Module Execution:\n# \"after\": {\n#         \"hosts\": [\n#             {\n#                 \"name\": \"host02\",\n#                 \"port\": 514,\n#                 \"protocol\": \"tcp\"\n#             }\n#         ],\n#         \"synchronous\": {\n#             \"set\": True\n#         },\n#         \"trap\": {\n#            \"severity\": \"critical\"\n#         },\n#         \"vrfs\": [\n#             {\n#                 \"name\": \"vrf03\",\n#                 \"source_interface\": \"Vlan100\"\n#             },\n#             {\n#                 \"hosts\": [\n#                     {\n#                         \"name\": \"hostvrf1\",\n#                         \"port\": 514,\n#                         \"protocol\": \"tcp\"\n#                     }\n#                 ],\n#                 \"name\": \"vrf04\"\n#             }\n#         ]\n#     },\n#     \"before\": {\n#         \"format\": {\n#             \"timestamp\": {\n#                 \"traditional\": {\n#                     \"timezone\": true\n#                 }\n#             }\n#         },\n#         \"hosts\": [\n#             {\n#                 \"name\": \"11.11.11.1\",\n#                 \"port\": 25\n#             },\n#             {\n#                 \"name\": \"host01\",\n#                 \"port\": 514,\n#                 \"protocol\": \"tcp\"\n#             }\n#         ],\n#         \"level\": {\n#             \"facility\": \"AAA\",\n#             \"severity\": \"alerts\"\n#         },\n#         \"persistent\": {\n#             \"size\": 4096\n#         },\n#         \"policy\": {\n#             \"invert_result\": true,\n#             \"match_list\": \"list01\"\n#         },\n#         \"vrfs\": [\n#             {\n#                 \"name\": \"vrf01\",\n#                 \"source_interface\": \"Ethernet1\"\n#             },\n#             {\n#                 \"hosts\": [\n#                     {\n#                         \"name\": \"24.1.1.1\",\n#                         \"port\": 33\n#                     },\n#                     {\n#                         \"name\": \"hostvrf1\",\n#                         \"port\": 514,\n#                         \"protocol\": \"tcp\"\n#                     }\n#                 ],\n#                 \"name\": \"vrf02\"\n#             }\n#         ]\n#     },\n#     \"changed\": true,\n#     \"commands\": [\n#         \"logging host host02 protocol tcp\",\n#         \"no logging host 11.11.11.1 25\",\n#         \"no logging host host01 514 protocol tcp\",\n#         \"logging vrf vrf03 source-interface Vlan100\",\n#         \"logging vrf vrf04 host hostvrf1 protocol tcp\",\n#         \"no logging vrf vrf01 source-interface Ethernet1\",\n#         \"no logging vrf vrf02 host 24.1.1.1 33\",\n#         \"no logging vrf vrf02 host hostvrf1 514 protocol tcp\",\n#         \"no logging format timestamp traditional timezone\",\n#         \"no logging level AAA alerts\",\n#         \"no logging persistent 4096\",\n#         \"no logging policy match invert-result match-list list01 discard\",\n#         \"logging synchronous\",\n#         \"logging trap critical\"\n#     ],\n#\n#\n\n\n# Using overridden:\n# Before State:\n\n# test(config)#show running-config | section logging\n# logging host 11.11.11.1 25\n# logging host host01 514 protocol tcp\n# logging vrf vrf02 host 24.1.1.1 33\n# logging vrf vrf02 host hostvrf1 514 protocol tcp\n# logging format timestamp traditional timezone\n# logging vrf vrf01 source-interface Ethernet1\n# logging policy match inverse-result match-list                           list01 discard\n# logging persistent 4096\n# !\n# logging level AAA alerts\n# test(config)#\n\n  - name: Repalce\n    arista.eos.eos_logging_global:\n      config:\n        synchronous:\n          set: True\n        trap:\n          severity: \"critical\"\n        hosts:\n          - name: \"host02\"\n            protocol: \"tcp\"\n        vrfs:\n          - name: \"vrf03\"\n            source_interface: \"Vlan100\"\n          - name: \"vrf04\"\n            hosts:\n              - name: \"hostvrf1\"\n                protocol: \"tcp\"\n\n      state: overridden\n\n# After State:\n# test(config)#show running-config | section logging\n# logging synchronous\n# logging trap critical\n# logging host host02 514 protocol tcp\n# logging vrf vrf04 host hostvrf1 514 protocol tcp\n# logging vrf vrf03 source-interface Vlan100\n# test(config)#\n#\n# Module Execution:\n# \"after\": {\n#         \"hosts\": [\n#             {\n#                 \"name\": \"host02\",\n#                 \"port\": 514,\n#                 \"protocol\": \"tcp\"\n#             }\n#         ],\n#         \"synchronous\": {\n#             \"set\": True\n#         },\n#         \"trap\": {\n#            \"severity\": \"critical\"\n#         },\n#         \"vrfs\": [\n#             {\n#                 \"name\": \"vrf03\",\n#                 \"source_interface\": \"Vlan100\"\n#             },\n#             {\n#                 \"hosts\": [\n#                     {\n#                         \"name\": \"hostvrf1\",\n#                         \"port\": 514,\n#                         \"protocol\": \"tcp\"\n#                     }\n#                 ],\n#                 \"name\": \"vrf04\"\n#             }\n#         ]\n#     },\n#     \"before\": {\n#         \"format\": {\n#             \"timestamp\": {\n#                 \"traditional\": {\n#                     \"timezone\": true\n#                 }\n#             }\n#         },\n#         \"hosts\": [\n#             {\n#                 \"name\": \"11.11.11.1\",\n#                 \"port\": 25\n#             },\n#             {\n#                 \"name\": \"host01\",\n#                 \"port\": 514,\n#                 \"protocol\": \"tcp\"\n#             }\n#         ],\n#         \"level\": {\n#             \"facility\": \"AAA\",\n#             \"severity\": \"alerts\"\n#         },\n#         \"persistent\": {\n#             \"size\": 4096\n#         },\n#         \"policy\": {\n#             \"invert_result\": true,\n#             \"match_list\": \"list01\"\n#         },\n#         \"vrfs\": [\n#             {\n#                 \"name\": \"vrf01\",\n#                 \"source_interface\": \"Ethernet1\"\n#             },\n#             {\n#                 \"hosts\": [\n#                     {\n#                         \"name\": \"24.1.1.1\",\n#                         \"port\": 33\n#                     },\n#                     {\n#                         \"name\": \"hostvrf1\",\n#                         \"port\": 514,\n#                         \"protocol\": \"tcp\"\n#                     }\n#                 ],\n#                 \"name\": \"vrf02\"\n#             }\n#         ]\n#     },\n#     \"changed\": true,\n#     \"commands\": [\n#         \"logging host host02 protocol tcp\",\n#         \"no logging host 11.11.11.1 25\",\n#         \"no logging host host01 514 protocol tcp\",\n#         \"logging vrf vrf03 source-interface Vlan100\",\n#         \"logging vrf vrf04 host hostvrf1 protocol tcp\",\n#         \"no logging vrf vrf01 source-interface Ethernet1\",\n#         \"no logging vrf vrf02 host 24.1.1.1 33\",\n#         \"no logging vrf vrf02 host hostvrf1 514 protocol tcp\",\n#         \"no logging format timestamp traditional timezone\",\n#         \"no logging level AAA alerts\",\n#         \"no logging persistent 4096\",\n#         \"no logging policy match invert-result match-list list01 discard\",\n#         \"logging synchronous\",\n#         \"logging trap critical\"\n#     ],\n#\n#\n\n# Using deleted:\n\n# Before State:\n# test(config)#show running-config | section logging\n# logging synchronous level critical\n# logging host 11.11.11.1 25\n# logging host host01 514 protocol tcp\n# logging host host02 514 protocol tcp\n# logging vrf vrf02 host 24.1.1.1 33\n# logging vrf vrf02 host hostvrf1 514 protocol tcp\n# logging vrf vrf04 host hostvrf1 514 protocol tcp\n# logging vrf vrf01 source-interface Ethernet1\n# logging vrf vrf03 source-interface Vlan100\n# test(config)#\n\n  - name: Delete all logging configs\n    arista.eos.eos_logging_global:\n      state: deleted\n    become: yes\n\n# After state:\n# test(config)#show running-config | section logging\n# test(config)#\n#\n# \"after\": {},\n#     \"before\": {\n#         \"hosts\": [\n#             {\n#                 \"name\": \"11.11.11.1\",\n#                 \"port\": 25\n#             },\n#             {\n#                 \"name\": \"host01\",\n#                 \"port\": 514,\n#                 \"protocol\": \"tcp\"\n#             },\n#             {\n#                 \"name\": \"host02\",\n#                 \"port\": 514,\n#                 \"protocol\": \"tcp\"\n#             }\n#         ],\n#         \"synchronous\": {\n#             \"level\": \"critical\"\n#         },\n#         \"vrfs\": [\n#             {\n#                 \"name\": \"vrf01\",\n#                 \"source_interface\": \"Ethernet1\"\n#             },\n#             {\n#                 \"hosts\": [\n#                     {\n#                         \"name\": \"24.1.1.1\",\n#                         \"port\": 33\n#                     },\n#                     {\n#                         \"name\": \"hostvrf1\",\n#                         \"port\": 514,\n#                         \"protocol\": \"tcp\"\n#                     }\n#                 ],\n#                 \"name\": \"vrf02\"\n#             },\n#             {\n#                 \"name\": \"vrf03\",\n#                 \"source_interface\": \"Vlan100\"\n#             },\n#             {\n#                 \"hosts\": [\n#                     {\n#                         \"name\": \"hostvrf1\",\n#                         \"port\": 514,\n#                         \"protocol\": \"tcp\"\n#                     }\n#                 ],\n#                 \"name\": \"vrf04\"\n#             }\n#         ]\n#     },\n#     \"changed\": true,\n#     \"commands\": [\n#         \"no logging host 11.11.11.1 25\",\n#         \"no logging host host01 514 protocol tcp\",\n#         \"no logging host host02 514 protocol tcp\",\n#         \"no logging vrf vrf01 source-interface Ethernet1\",\n#         \"no logging vrf vrf02 host 24.1.1.1 33\",\n#         \"no logging vrf vrf02 host hostvrf1 514 protocol tcp\",\n#         \"no logging vrf vrf03 source-interface Vlan100\",\n#         \"no logging vrf vrf04 host hostvrf1 514 protocol tcp\",\n#         \"no logging synchronous level critical\"\n#     ],\n\n# Using parsed:\n# parsed.cfg\n\n# logging host 11.11.11.1 25\n# logging host host01 514 protocol tcp\n# logging vrf vrf02 host 24.1.1.1 33\n# logging vrf vrf02 host hostvrf1 514 protocol tcp\n# logging format timestamp traditional timezone\n# logging vrf vrf01 source-interface Ethernet1\n# logging policy match inverse-result match-list                           list01 discard\n# logging persistent 4096\n# !\n# logging level AAA alerts\n\n  - name: parse configs\n    arista.eos.eos_logging_global:\n      running_config: \"{{ lookup('file', './parsed.cfg') }}\"\n      state: parsed\n\n# Module Execution\n# \"parsed\": {\n#         \"format\": {\n#             \"timestamp\": {\n#                 \"traditional\": {\n#                     \"timezone\": true\n#                 }\n#             }\n#         },\n#         \"hosts\": [\n#             {\n#                 \"name\": \"11.11.11.1\",\n#                 \"port\": 25\n#             },\n#             {\n#                 \"name\": \"host01\",\n#                 \"port\": 514,\n#                 \"protocol\": \"tcp\"\n#             }\n#         ],\n#         \"level\": {\n#             \"facility\": \"AAA\",\n#             \"severity\": \"alerts\"\n#         },\n#         \"persistent\": {\n#             \"size\": 4096\n#         },\n#         \"policy\": {\n#             \"invert_result\": true,\n#             \"match_list\": \"list01\"\n#         },\n#         \"vrfs\": [\n#             {\n#                 \"name\": \"vrf01\",\n#                 \"source_interface\": \"Ethernet1\"\n#             },\n#             {\n#                 \"hosts\": [\n#                     {\n#                         \"name\": \"24.1.1.1\",\n#                         \"port\": 33\n#                     },\n#                     {\n#                         \"name\": \"hostvrf1\",\n#                         \"port\": 514,\n#                         \"protocol\": \"tcp\"\n#                     }\n#                 ],\n#                 \"name\": \"vrf02\"\n#             }\n#         ]\n#     }\n#\n\n# Using gathered:\n# Before State:\n# test(config)#show running-config | section logging\n# logging host 11.11.11.1 25\n# logging host host01 514 protocol tcp\n# logging vrf vrf02 host 24.1.1.1 33\n# logging vrf vrf02 host hostvrf1 514 protocol tcp\n# logging format timestamp traditional timezone\n# logging vrf vrf01 source-interface Ethernet1\n# logging policy match inverse-result match-list                           list01 discard\n# logging persistent 4096\n# !\n# logging level AAA alerts\n# test(config)#\n\n  - name: gather configs\n    arista.eos.eos_logging_global:\n      state: gathered\n\n# Module Execution:\n# \"gathered\": {\n#         \"format\": {\n#             \"timestamp\": {\n#                 \"traditional\": {\n#                     \"timezone\": true\n#                 }\n#             }\n#         },\n#         \"hosts\": [\n#             {\n#                 \"name\": \"11.11.11.1\",\n#                 \"port\": 25\n#             },\n#             {\n#                 \"name\": \"host01\",\n#                 \"port\": 514,\n#                 \"protocol\": \"tcp\"\n#             }\n#         ],\n#         \"level\": {\n#             \"facility\": \"AAA\",\n#             \"severity\": \"alerts\"\n#         },\n#         \"persistent\": {\n#             \"size\": 4096\n#         },\n#         \"policy\": {\n#             \"invert_result\": true,\n#             \"match_list\": \"list01\"\n#         },\n#         \"vrfs\": [\n#             {\n#                 \"name\": \"vrf01\",\n#                 \"source_interface\": \"Ethernet1\"\n#             },\n#             {\n#                 \"hosts\": [\n#                     {\n#                         \"name\": \"24.1.1.1\",\n#                         \"port\": 33\n#                     },\n#                     {\n#                         \"name\": \"hostvrf1\",\n#                         \"port\": 514,\n#                         \"protocol\": \"tcp\"\n#                     }\n#                 ],\n#                 \"name\": \"vrf02\"\n#             }\n#         ]\n#     },\n#\n\n# Using rendered:\n  - name: Render provided configuration\n    arista.eos.eos_logging_global:\n      config:\n        format:\n          timestamp:\n            traditional:\n              timezone: True\n        level:\n          facility: \"AAA\"\n          severity: \"alerts\"\n        persistent:\n          size: 4096\n        policy:\n          invert_result: True\n          match_list: \"list01\"\n        hosts:\n          - name: \"host01\"\n            protocol: \"tcp\"\n          - name: \"11.11.11.1\"\n            port: 25\n        vrfs:\n          - name: \"vrf01\"\n            source_interface: \"Ethernet1\"\n          - name: \"vrf02\"\n            hosts:\n              - name: \"hostvrf1\"\n                protocol: \"tcp\"\n              - name: \"24.1.1.1\"\n                port: \"33\"\n# Module Execution:\n\n# \"rendered\": [\n#         \"logging host host01 protocol tcp\",\n#         \"logging host 11.11.11.1 25\",\n#         \"logging vrf vrf01 source-interface Ethernet1\",\n#         \"logging vrf vrf02 host hostvrf1 protocol tcp\",\n#         \"logging vrf vrf02 host 24.1.1.1 33\",\n#         \"logging format timestamp traditional timezone\",\n#         \"logging level AAA alerts\",\n#         \"logging persistent 4096\",\n#         \"logging policy match invert-result match-list list01 discard\"\n#     ]\n#\n\n"
  },
  "arista.eos.eos_ntp_global": {
    "doc": {
      "description": "This module configures and manages the attributes of  ntp on Arista EOS platforms.",
      "has_action": true,
      "notes": "Tested against Arista EOS 4.24.60M\nThis module works with connection C(network_cli). See the U(https://docs.ansible.com/ansible/latest/network/user_guide/platform_eos.html).",
      "options": {
        "config": {
          "aliases": [],
          "description": "A dictionary of ntp options",
          "type": "dict",
          "required": false,
          "suboptions": {
            "authenticate": {
              "aliases": [],
              "description": "Require authentication for NTP synchronization.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "enable": {
                  "aliases": [],
                  "description": "Enable authentication for NTP synchronization.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "servers": {
                  "aliases": [],
                  "description": "Authentication required only for incoming NTP server responses.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "authentication_keys": {
              "aliases": [],
              "description": "Define a key to use for authentication.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "algorithm": {
                  "aliases": [],
                  "description": "hash algorithm,",
                  "type": "str",
                  "required": false,
                  "choices": [
                    "md5",
                    "sha1"
                  ],
                  "suboptions": {}
                },
                "encryption": {
                  "aliases": [],
                  "description": "key type",
                  "type": "int",
                  "required": false,
                  "choices": [
                    "0",
                    "7"
                  ],
                  "suboptions": {}
                },
                "id": {
                  "aliases": [],
                  "description": "key identifier.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "key": {
                  "aliases": [],
                  "description": "Unobfuscated key string.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "local_interface": {
              "aliases": [],
              "description": "Configure the interface from which the IP source address is taken.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "qos_dscp": {
              "aliases": [],
              "description": "Set DSCP value in IP header",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "serve": {
              "aliases": [],
              "description": "Configure the switch as an NTP server.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "access_lists": {
                  "aliases": [],
                  "description": "Configure access control list.",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "acls": {
                      "aliases": [],
                      "description": "Access lists to be configured under the afi",
                      "type": "list",
                      "required": false,
                      "elements": "dict",
                      "suboptions": {
                        "acl_name": {
                          "aliases": [],
                          "description": "Name of the access list.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "direction": {
                          "aliases": [],
                          "description": "direction for the packets.",
                          "type": "str",
                          "required": false,
                          "choices": [
                            "in",
                            "out"
                          ],
                          "suboptions": {}
                        },
                        "vrf": {
                          "aliases": [],
                          "description": "VRF in which to apply the access control list.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "afi": {
                      "aliases": [],
                      "description": "ip/ipv6 config commands.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "all": {
                  "aliases": [],
                  "description": "Service NTP requests received on any interface.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "servers": {
              "aliases": [],
              "description": "Configure NTP server to synchronize to.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "burst": {
                  "aliases": [],
                  "description": "Send a burst of packets instead of the usual one.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "iburst": {
                  "aliases": [],
                  "description": "Send bursts of packets until the server is reached",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "key_id": {
                  "aliases": [],
                  "description": "Set a key to use for authentication.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "local_interface": {
                  "aliases": [],
                  "description": "Configure the interface from which the IP source address is taken.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "maxpoll": {
                  "aliases": [],
                  "description": "Maximum poll interval.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "minpoll": {
                  "aliases": [],
                  "description": "Minimum poll interval.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "prefer": {
                  "aliases": [],
                  "description": "Mark this server as preferred.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "server": {
                  "aliases": [],
                  "description": "Hostname or A.B.C.D or A:B:C:D:E:F:G:H.",
                  "type": "str",
                  "required": true,
                  "suboptions": {}
                },
                "source": {
                  "aliases": [],
                  "description": "Configure the interface from which the IP source address is taken.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "version": {
                  "aliases": [],
                  "description": "NTP version.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "vrf": {
                  "aliases": [],
                  "description": "vrf name.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "trusted_key": {
              "aliases": [],
              "description": "Configure the set of keys that are accepted for incoming messages",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "running_config": {
          "aliases": [],
          "description": "This option is used only with state I(parsed).\nThe value of this option should be the output received from the EOS device by executing the command B(show running-config | section ntp).\nThe state I(parsed) reads the configuration from C(running_config) option and transforms it into Ansible structured data as per the resource module's argspec and the value is then returned in the I(parsed) key within the result.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The state the configuration should be left in.\nThe states I(replaced) and I(overridden) have identical behaviour for this module.\nPlease refer to examples for more details.",
          "default": "merged",
          "type": "str",
          "required": false,
          "choices": [
            "deleted",
            "merged",
            "overridden",
            "replaced",
            "gathered",
            "rendered",
            "parsed"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manages ntp resource module",
      "version_added": "3.1.0"
    },
    "examples": "\n\n# Using merged\n\n# Before state\n\n# localhost(config)#show running-config | section ntp\n# localhost(config)#\n\n  - name: Merge provided configuration with device configuration\n    arista.eos.eos_ntp_global:\n      config:\n        authenticate:\n          enable: true\n        authentication_keys:\n          - id: 2\n            algorithm: \"sha1\"\n            encryption: 7\n            key: \"123456\"\n          - id: 23\n            algorithm: \"md5\"\n            encryption: 7\n            key: \"123456\"\n        local_interface: \"Ethernet1\"\n        qos_dscp: 10\n        trusted_key: 23\n        servers:\n          - server: \"10.1.1.1\"\n            vrf: \"vrf01\"\n            burst: True\n            prefer: True\n          - server: \"25.1.1.1\"\n            vrf: \"vrf01\"\n            maxpoll: 15\n            key_id: 2\n        serve:\n          access_lists:\n            - afi: \"ip\"\n              acls:\n                - acl_name: \"acl01\"\n                  direction: \"in\"\n            - afi: \"ipv6\"\n              acls:\n                 - acl_name: \"acl02\"\n                   direction: \"in\"\n\n# After State\n\n# localhost(config)#show running-config | section ntp\n# ntp authentication-key 2 sha1 7 123456\n# ntp authentication-key 23 md5 7 123456\n# ntp trusted-key 23\n# ntp authenticate\n# ntp local-interface Ethernet1\n# ntp qos dscp 10\n# ntp server vrf vrf01 10.1.1.1 prefer burst\n# ntp server vrf vrf01 25.1.1.1 maxpoll 15 key 2\n# ntp serve ip access-group acl01 in\n# ntp serve ipv6 access-group acl02 in\n# localhost(config)#\n#\n#\n# Module Execution:\n# \"after\": {\n#         \"authenticate\": {\n#             \"enable\": true\n#         },\n#         \"authentication_keys\": [\n#             {\n#                 \"algorithm\": \"sha1\",\n#                 \"encryption\": 7,\n#                 \"id\": 2,\n#                 \"key\": \"VALUE_SPECIFIED_IN_NO_LOG_PARAMETER\"\n#             },\n#             {\n#                 \"algorithm\": \"md5\",\n#                 \"encryption\": 7,\n#                 \"id\": 23,\n#                 \"key\": \"VALUE_SPECIFIED_IN_NO_LOG_PARAMETER\"\n#             }\n#         ],\n#         \"local_interface\": \"Ethernet1\",\n#         \"qos_dscp\": 10,\n#         \"serve\": {\n#             \"access_lists\": [\n#                 {\n#                     \"acls\": [\n#                         {\n#                             \"acl_name\": \"acl01\",\n#                             \"direction\": \"in\"\n#                         }\n#                     ],\n#                     \"afi\": \"ip\"\n#                 },\n#                 {\n#                     \"acls\": [\n#                         {\n#                             \"acl_name\": \"acl02\",\n#                             \"direction\": \"in\"\n#                         }\n#                     ],\n#                     \"afi\": \"ipv6\"\n#                 }\n#             ]\n#         },\n#         \"servers\": [\n#             {\n#                 \"burst\": true,\n#                 \"prefer\": true,\n#                 \"server\": \"10.1.1.1\",\n#                 \"vrf\": \"vrf01\"\n#             },\n#             {\n#                 \"key_id\": 2,\n#                 \"maxpoll\": 15,\n#                 \"server\": \"25.1.1.1\",\n#                 \"vrf\": \"vrf01\"\n#             }\n#         ],\n#         \"trusted_key\": \"23\"\n#     },\n#     \"before\": {},\n#     \"changed\": true,\n#     \"commands\": [\n#         \"ntp serve ip access-group acl01 in\",\n#         \"ntp serve ipv6 access-group acl02 in\",\n#         \"ntp authentication-key 2 sha1 7 ********\",\n#         \"ntp authentication-key 23 md5 7 ********\",\n#         \"ntp server vrf vrf01 10.1.1.1 burst prefer\",\n#         \"ntp server vrf vrf01 25.1.1.1 key 2 maxpoll 15\",\n#         \"ntp authenticate\",\n#         \"ntp local-interface Ethernet1\",\n#         \"ntp qos dscp 10\",\n#         \"ntp trusted-key 23\"\n#     ],\n\n# Using Replaced\n\n# Before State\n\n# localhost(config)#show running-config | section ntp\n# ntp authentication-key 2 sha1 7 123456\n# ntp authentication-key 23 md5 7 123456\n# ntp trusted-key 23\n# ntp authenticate\n# ntp local-interface Ethernet1\n# ntp qos dscp 10\n# ntp server vrf vrf01 10.1.1.1 prefer burst\n# ntp server vrf vrf01 25.1.1.1 maxpoll 15 key 2\n# ntp serve ip access-group acl01 in\n# ntp serve ipv6 access-group acl02 in\n# localhost(config)#\n\n  - name: Replace\n    arista.eos.eos_ntp_global:\n      config:\n        qos_dscp: 15\n        authentication_keys:\n          - id: 2\n            algorithm: \"md5\"\n            encryption: 7\n            key: \"123456\"\n        servers:\n          - server: \"11.21.1.1\"\n            vrf: \"vrf01\"\n            burst: True\n            prefer: True\n            minpoll: 13\n        serve:\n          access_lists:\n            - afi: \"ip\"\n              acls:\n                - acl_name: \"acl03\"\n                  direction: \"in\"\n      state: replaced\n# After State:\n# localhost(config)#show running-config | section ntp\n# ntp authentication-key 2 md5 7 123456\n# ntp qos dscp 15\n# ntp server vrf vrf01 11.21.1.1 prefer burst minpoll 13\n# ntp serve ip access-group acl03 in\n# localhost(config)#\n#\n#\n# Module Execution:\n# \"after\": {\n#        \"authentication_keys\": [\n#            {\n#                \"algorithm\": \"md5\",\n#                \"encryption\": 7,\n#                \"id\": 2,\n#                \"key\": \"VALUE_SPECIFIED_IN_NO_LOG_PARAMETER\"\n#            }\n#        ],\n#        \"qos_dscp\": 15,\n#        \"serve\": {\n#            \"access_lists\": [\n#                {\n#                    \"acls\": [\n#                        {\n#                            \"acl_name\": \"acl03\",\n#                            \"direction\": \"in\"\n#                        }\n#                    ],\n#                    \"afi\": \"ip\"\n#                }\n#            ]\n#        },\n#        \"servers\": [\n#            {\n#                \"burst\": true,\n#                \"minpoll\": 13,\n#                \"prefer\": true,\n#                \"server\": \"11.21.1.1\",\n#                \"vrf\": \"vrf01\"\n#            }\n#        ]\n#    },\n#    \"before\": {\n#        \"authenticate\": {\n#            \"enable\": true\n#        },\n#        \"authentication_keys\": [\n#            {\n#                \"algorithm\": \"sha1\",\n#                \"encryption\": 7,\n#                \"id\": 2,\n#                \"key\": \"VALUE_SPECIFIED_IN_NO_LOG_PARAMETER\"\n#            },\n#            {\n#                \"algorithm\": \"md5\",\n#                \"encryption\": 7,\n#                \"id\": 23,\n#                \"key\": \"VALUE_SPECIFIED_IN_NO_LOG_PARAMETER\"\n#            }\n#        ],\n#        \"local_interface\": \"Ethernet1\",\n#        \"qos_dscp\": 10,\n#        \"serve\": {\n#            \"access_lists\": [\n#                {\n#                    \"acls\": [\n#                        {\n#                            \"acl_name\": \"acl01\",\n#                            \"direction\": \"in\"\n#                        }\n#                    ],\n#                    \"afi\": \"ip\"\n#                },\n#                {\n#                    \"acls\": [\n#                        {\n#                            \"acl_name\": \"acl02\",\n#                            \"direction\": \"in\"\n#                        }\n#                    ],\n#                    \"afi\": \"ipv6\"\n#                }\n#            ]\n#        },\n#        \"servers\": [\n#            {\n#                \"burst\": true,\n#                \"prefer\": true,\n#                \"server\": \"10.1.1.1\",\n#                \"vrf\": \"vrf01\"\n#            },\n#            {\n#                \"key_id\": 2,\n#                \"maxpoll\": 15,\n#                \"server\": \"25.1.1.1\",\n#                \"vrf\": \"vrf01\"\n#            }\n#        ],\n#        \"trusted_key\": \"23\"\n#    },\n#    \"changed\": true,\n#    \"commands\": [\n#        \"no ntp serve ip access-group acl01 in\",\n#        \"no ntp serve ipv6 access-group acl02 in\",\n#        \"no ntp authentication-key 23 md5 7 ********\",\n#        \"no ntp server vrf vrf01 10.1.1.1 burst prefer\",\n#        \"no ntp server vrf vrf01 25.1.1.1 key 2 maxpoll 15\",\n#        \"no ntp authenticate\",\n#        \"no ntp local-interface Ethernet1\",\n#        \"no ntp trusted-key 23\",\n#        \"ntp serve ip access-group acl03 in\",\n#        \"ntp authentication-key 2 md5 7 ********\",\n#        \"ntp server vrf vrf01 11.21.1.1 burst minpoll 13 prefer\",\n#        \"ntp qos dscp 15\"\n#    ],\n#\n# Using Overridden\n\n# Before State\n\n# localhost(config)#show running-config | section ntp\n# ntp authentication-key 2 sha1 7 123456\n# ntp authentication-key 23 md5 7 123456\n# ntp trusted-key 23\n# ntp authenticate\n# ntp local-interface Ethernet1\n# ntp qos dscp 10\n# ntp server vrf vrf01 10.1.1.1 prefer burst\n# ntp server vrf vrf01 25.1.1.1 maxpoll 15 key 2\n# ntp serve ip access-group acl01 in\n# ntp serve ipv6 access-group acl02 in\n# localhost(config)#\n\n  - name: Replace\n    arista.eos.eos_ntp_global:\n      config:\n        qos_dscp: 15\n        authentication_keys:\n          - id: 2\n            algorithm: \"md5\"\n            encryption: 7\n            key: \"123456\"\n        servers:\n          - server: \"11.21.1.1\"\n            vrf: \"vrf01\"\n            burst: True\n            prefer: True\n            minpoll: 13\n        serve:\n          access_lists:\n            - afi: \"ip\"\n              acls:\n                - acl_name: \"acl03\"\n                  direction: \"in\"\n      state: overridden\n# After State:\n# localhost(config)#show running-config | section ntp\n# ntp authentication-key 2 md5 7 123456\n# ntp qos dscp 15\n# ntp server vrf vrf01 11.21.1.1 prefer burst minpoll 13\n# ntp serve ip access-group acl03 in\n# localhost(config)#\n#\n#\n# Module Execution:\n# \"after\": {\n#        \"authentication_keys\": [\n#            {\n#                \"algorithm\": \"md5\",\n#                \"encryption\": 7,\n#                \"id\": 2,\n#                \"key\": \"VALUE_SPECIFIED_IN_NO_LOG_PARAMETER\"\n#            }\n#        ],\n#        \"qos_dscp\": 15,\n#        \"serve\": {\n#            \"access_lists\": [\n#                {\n#                    \"acls\": [\n#                        {\n#                            \"acl_name\": \"acl03\",\n#                            \"direction\": \"in\"\n#                        }\n#                    ],\n#                    \"afi\": \"ip\"\n#                }\n#            ]\n#        },\n#        \"servers\": [\n#            {\n#                \"burst\": true,\n#                \"minpoll\": 13,\n#                \"prefer\": true,\n#                \"server\": \"11.21.1.1\",\n#                \"vrf\": \"vrf01\"\n#            }\n#        ]\n#    },\n#    \"before\": {\n#        \"authenticate\": {\n#            \"enable\": true\n#        },\n#        \"authentication_keys\": [\n#            {\n#                \"algorithm\": \"sha1\",\n#                \"encryption\": 7,\n#                \"id\": 2,\n#                \"key\": \"VALUE_SPECIFIED_IN_NO_LOG_PARAMETER\"\n#            },\n#            {\n#                \"algorithm\": \"md5\",\n#                \"encryption\": 7,\n#                \"id\": 23,\n#                \"key\": \"VALUE_SPECIFIED_IN_NO_LOG_PARAMETER\"\n#            }\n#        ],\n#        \"local_interface\": \"Ethernet1\",\n#        \"qos_dscp\": 10,\n#        \"serve\": {\n#            \"access_lists\": [\n#                {\n#                    \"acls\": [\n#                        {\n#                            \"acl_name\": \"acl01\",\n#                            \"direction\": \"in\"\n#                        }\n#                    ],\n#                    \"afi\": \"ip\"\n#                },\n#                {\n#                    \"acls\": [\n#                        {\n#                            \"acl_name\": \"acl02\",\n#                            \"direction\": \"in\"\n#                        }\n#                    ],\n#                    \"afi\": \"ipv6\"\n#                }\n#            ]\n#        },\n#        \"servers\": [\n#            {\n#                \"burst\": true,\n#                \"prefer\": true,\n#                \"server\": \"10.1.1.1\",\n#                \"vrf\": \"vrf01\"\n#            },\n#            {\n#                \"key_id\": 2,\n#                \"maxpoll\": 15,\n#                \"server\": \"25.1.1.1\",\n#                \"vrf\": \"vrf01\"\n#            }\n#        ],\n#        \"trusted_key\": \"23\"\n#    },\n#    \"changed\": true,\n#    \"commands\": [\n#        \"no ntp serve ip access-group acl01 in\",\n#        \"no ntp serve ipv6 access-group acl02 in\",\n#        \"no ntp authentication-key 23 md5 7 ********\",\n#        \"no ntp server vrf vrf01 10.1.1.1 burst prefer\",\n#        \"no ntp server vrf vrf01 25.1.1.1 key 2 maxpoll 15\",\n#        \"no ntp authenticate\",\n#        \"no ntp local-interface Ethernet1\",\n#        \"no ntp trusted-key 23\",\n#        \"ntp serve ip access-group acl03 in\",\n#        \"ntp authentication-key 2 md5 7 ********\",\n#        \"ntp server vrf vrf01 11.21.1.1 burst minpoll 13 prefer\",\n#        \"ntp qos dscp 15\"\n#    ],\n#\n\n# using deleted:\n# Before State\n\n# localhost(config)#show running-config | section ntp\n# ntp authentication-key 2 sha1 7 123456\n# ntp authentication-key 23 md5 7 123456\n# ntp trusted-key 23\n# ntp authenticate\n# ntp local-interface Ethernet1\n# ntp qos dscp 10\n# ntp server vrf vrf01 10.1.1.1 prefer burst\n# ntp server vrf vrf01 11.21.1.1 prefer burst minpoll 13\n# ntp server vrf vrf01 25.1.1.1 maxpoll 15 key 2\n# ntp serve ip access-group acl01 in\n# ntp serve ipv6 access-group acl02 in\n# localhost(config)#\n\n  - name: Delete  ntp-global\n    arista.eos.eos_ntp_global:\n      state: deleted\n\n# After State:\n#  localhost(config)#show running-config | section ntp\n# localhost(config)#\n#\n#\n# # Module Execution\n# \"after\": {},\n#     \"before\": {\n#         \"authenticate\": {\n#             \"enable\": true\n#         },\n#         \"authentication_keys\": [\n#             {\n#                 \"algorithm\": \"sha1\",\n#                 \"encryption\": 7,\n#                 \"id\": 2,\n#                 \"key\": \"VALUE_SPECIFIED_IN_NO_LOG_PARAMETER\"\n#             },\n#             {\n#                 \"algorithm\": \"md5\",\n#                 \"encryption\": 7,\n#                 \"id\": 23,\n#                 \"key\": \"VALUE_SPECIFIED_IN_NO_LOG_PARAMETER\"\n#             }\n#         ],\n#         \"local_interface\": \"Ethernet1\",\n#         \"qos_dscp\": 10,\n#         \"serve\": {\n#             \"access_lists\": [\n#                 {\n#                     \"acls\": [\n#                         {\n#                             \"acl_name\": \"acl01\",\n#                             \"direction\": \"in\"\n#                         }\n#                     ],\n#                     \"afi\": \"ip\"\n#                 },\n#                 {\n#                     \"acls\": [\n#                         {\n#                             \"acl_name\": \"acl02\",\n#                             \"direction\": \"in\"\n#                         }\n#                     ],\n#                     \"afi\": \"ipv6\"\n#                 }\n#             ]\n#         },\n#         \"servers\": [\n#             {\n#                 \"burst\": true,\n#                 \"prefer\": true,\n#                 \"server\": \"10.1.1.1\",\n#                 \"vrf\": \"vrf01\"\n#             },\n#             {\n#                 \"burst\": true,\n#                 \"minpoll\": 13,\n#                 \"prefer\": true,\n#                 \"server\": \"11.21.1.1\",\n#                 \"vrf\": \"vrf01\"\n#             },\n#             {\n#                 \"key\": 2,\n#                 \"maxpoll\": 15,\n#                 \"server\": \"25.1.1.1\",\n#                 \"vrf\": \"vrf01\"\n#             }\n#         ],\n#         \"trusted_key\": \"23\"\n#     },\n#     \"changed\": true,\n#     \"commands\": [\n#         \"no ntp serve ip access-group acl01 in\",\n#         \"no ntp serve ipv6 access-group acl02 in\",\n#         \"no ntp authentication-key 2 sha1 7 ********\",\n#         \"no ntp authentication-key 23 md5 7 ********\",\n#         \"no ntp server vrf vrf01 10.1.1.1 burst prefer\",\n#         \"no ntp server vrf vrf01 11.21.1.1 burst minpoll 13 prefer\",\n#         \"no ntp server vrf vrf01 25.1.1.1 key 2 maxpoll 15\",\n#         \"no ntp authenticate\",\n#         \"no ntp local-interface Ethernet1\",\n#         \"no ntp qos dscp 10\",\n#         \"no ntp trusted-key 23\"\n#     ],\n#\n\n# Using parsed:\n# parsed.cfg\n# ntp authentication-key 2 sha1 7 123456\n# ntp authentication-key 23 md5 7 123456\n# ntp trusted-key 23\n# ntp authenticate\n# ntp local-interface Ethernet1\n# ntp qos dscp 10\n# ntp server vrf vrf01 10.1.1.1 prefer burst\n# ntp server vrf vrf01 11.21.1.1 prefer burst minpoll 13\n# ntp server vrf vrf01 25.1.1.1 maxpoll 15 key 2\n# ntp serve ip access-group acl01 in\n# ntp serve ipv6 access-group acl02 in\n\n  - name: parse configs\n    arista.eos.eos_ntp_global:\n      running_config: \"{{ lookup('file', './parsed_ntp_global.cfg') }}\"\n      state: parsed\n    tags:\n      - parsed\n# Module Execution\n# \"parsed\": {\n#         \"authenticate\": {\n#             \"enable\": true\n#         },\n#         \"authentication_keys\": [\n#             {\n#                 \"algorithm\": \"sha1\",\n#                 \"encryption\": 7,\n#                 \"id\": 2,\n#                 \"key\": \"VALUE_SPECIFIED_IN_NO_LOG_PARAMETER\"\n#             },\n#             {\n#                 \"algorithm\": \"md5\",\n#                 \"encryption\": 7,\n#                 \"id\": 23,\n#                 \"key\": \"VALUE_SPECIFIED_IN_NO_LOG_PARAMETER\"\n#             }\n#         ],\n#         \"local_interface\": \"Ethernet1\",\n#         \"qos_dscp\": 10,\n#         \"serve\": {\n#             \"access_lists\": [\n#                 {\n#                     \"acls\": [\n#                         {\n#                             \"acl_name\": \"acl01\",\n#                             \"direction\": \"in\"\n#                         }\n#                     ],\n#                     \"afi\": \"ip\"\n#                 },\n#                 {\n#                     \"acls\": [\n#                         {\n#                             \"acl_name\": \"acl02\",\n#                             \"direction\": \"in\"\n#                         }\n#                     ],\n#                     \"afi\": \"ipv6\"\n#                 }\n#             ]\n#         },\n#         \"servers\": [\n#             {\n#                 \"burst\": true,\n#                 \"prefer\": true,\n#                 \"server\": \"10.1.1.1\",\n#                 \"vrf\": \"vrf01\"\n#             },\n#             {\n#                 \"burst\": true,\n#                 \"minpoll\": 13,\n#                 \"prefer\": true,\n#                 \"server\": \"11.21.1.1\",\n#                 \"vrf\": \"vrf01\"\n#             },\n#             {\n#                 \"key\": 2,\n#                 \"maxpoll\": 15,\n#                 \"server\": \"25.1.1.1\",\n#                 \"vrf\": \"vrf01\"\n#             }\n#         ],\n#         \"trusted_key\": \"23\"\n#     }\n# }\n\n# using Gathered\n# Device config:\n# localhost(config)#show running-config | section ntp\n# ntp authentication-key 2 sha1 7 123456\n# ntp authentication-key 23 md5 7 123456\n# ntp trusted-key 23\n# ntp authenticate\n# ntp local-interface Ethernet1\n# ntp qos dscp 10\n# ntp server vrf vrf01 10.1.1.1 prefer burst\n# ntp server vrf vrf01 25.1.1.1 maxpoll 15 key 2\n# ntp serve ip access-group acl01 in\n# ntp serve ipv6 access-group acl02 in\n# localhost(config)#\n\n\n  - name: gather configs\n    arista.eos.eos_ntp_global:\n      state: gathered\n    tags:\n      - gathered\n# Module Execution\n#   \"gathered\": {\n#         \"authenticate\": {\n#             \"enable\": true\n#         },\n#         \"authentication_keys\": [\n#             {\n#                 \"algorithm\": \"sha1\",\n#                 \"encryption\": 7,\n#                 \"id\": 2,\n#                 \"key\": \"VALUE_SPECIFIED_IN_NO_LOG_PARAMETER\"\n#             },\n#             {\n#                 \"algorithm\": \"md5\",\n#                 \"encryption\": 7,\n#                 \"id\": 23,\n#                 \"key\": \"VALUE_SPECIFIED_IN_NO_LOG_PARAMETER\"\n#             }\n#         ],\n#         \"local_interface\": \"Ethernet1\",\n#         \"qos_dscp\": 10,\n#         \"serve\": {\n#             \"access_lists\": [\n#                 {\n#                     \"acls\": [\n#                         {\n#                             \"acl_name\": \"acl01\",\n#                             \"direction\": \"in\"\n#                         }\n#                     ],\n#                     \"afi\": \"ip\"\n#                 },\n#                 {\n#                     \"acls\": [\n#                         {\n#                             \"acl_name\": \"acl02\",\n#                             \"direction\": \"in\"\n#                         }\n#                     ],\n#                     \"afi\": \"ipv6\"\n#                 }\n#             ]\n#         },\n#         \"servers\": [\n#             {\n#                 \"burst\": true,\n#                 \"prefer\": true,\n#                 \"server\": \"10.1.1.1\",\n#                 \"vrf\": \"vrf01\"\n#             },\n#             {\n#                 \"key_id\": 2,\n#                 \"maxpoll\": 15,\n#                 \"server\": \"25.1.1.1\",\n#                 \"vrf\": \"vrf01\"\n#             }\n#         ],\n#         \"trusted_key\": \"23\"\n#     },\n#     \"invocation\": {\n#         \"module_args\": {\n#             \"config\": null,\n#             \"running_config\": null,\n#             \"state\": \"gathered\"\n#         }\n#     }\n# }\n\n\n# using rendered:\n\n  - name: Render provided configuration\n    arista.eos.eos_ntp_global:\n      config:\n        authenticate:\n          enable: true\n        authentication_keys:\n          - id: 2\n            algorithm: \"sha1\"\n            encryption: 7\n            key: \"123456\"\n          - id: 23\n            algorithm: \"md5\"\n            encryption: 7\n            key: \"123456\"\n        local_interface: \"Ethernet1\"\n        qos_dscp: 10\n        trusted_key: 23\n        servers:\n          - server: \"10.1.1.1\"\n            vrf: \"vrf01\"\n            burst: True\n            prefer: True\n          - server: \"25.1.1.1\"\n            vrf: \"vrf01\"\n            maxpoll: 15\n            key_id: 2\n        serve:\n          access_lists:\n            - afi: \"ip\"\n              acls:\n                - acl_name: \"acl01\"\n                  direction: \"in\"\n            - afi: \"ipv6\"\n              acls:\n                 - acl_name: \"acl02\"\n                   direction: \"in\"\n      state: rendered\n    become: yes\n\n# Module Execution:\n# \"rendered\": [\n#         \"ntp serve ip access-group acl01 in\",\n#         \"ntp serve ipv6 access-group acl02 in\",\n#         \"ntp authentication-key 2 sha1 7 ********\",\n#         \"ntp authentication-key 23 md5 7 ********\",\n#         \"ntp server vrf vrf01 10.1.1.1 burst prefer\",\n#         \"ntp server vrf vrf01 25.1.1.1 key 2 maxpoll 15\",\n#         \"ntp authenticate\",\n#         \"ntp local-interface Ethernet1\",\n#         \"ntp qos dscp 10\",\n#         \"ntp trusted-key 23\"\n#     ]\n#\n"
  },
  "arista.eos.eos_ospf_interfaces": {
    "doc": {
      "description": "This module manages OSPF configuration of interfaces on devices running Arista EOS.",
      "has_action": true,
      "options": {
        "config": {
          "aliases": [],
          "description": "A list of OSPF configuration for interfaces.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "address_family": {
              "aliases": [],
              "description": "OSPF settings on the interfaces in address-family context.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "afi": {
                  "aliases": [],
                  "description": "Address Family Identifier (AFI) for OSPF settings on the interfaces.",
                  "type": "str",
                  "required": true,
                  "choices": [
                    "ipv4",
                    "ipv6"
                  ],
                  "suboptions": {}
                },
                "area": {
                  "aliases": [],
                  "description": "Area associated with interface.\nValid only when afi = ipv4.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "area_id": {
                      "aliases": [],
                      "description": "Area ID as a decimal or IP address format.",
                      "type": "str",
                      "required": true,
                      "suboptions": {}
                    }
                  }
                },
                "authentication_key": {
                  "aliases": [],
                  "description": "Configure the authentication key for the interface.\nValid only when afi = ipv4.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "encryption": {
                      "aliases": [],
                      "description": "0 Specifies an UNENCRYPTED authentication key will follow.\n7 Specifies a proprietry encryption type.`",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "key": {
                      "aliases": [],
                      "description": "password (up to 8 chars).",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "authentication_v2": {
                  "aliases": [],
                  "description": "Authentication settings on the interface.\nValid only when afi = ipv4.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "message_digest": {
                      "aliases": [],
                      "description": "Use message-digest authentication.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "set": {
                      "aliases": [],
                      "description": "Enable authentication on the interface.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "authentication_v3": {
                  "aliases": [],
                  "description": "Authentication settings on the interface.\nValid only when afi = ipv6.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "algorithm": {
                      "aliases": [],
                      "description": "Encryption alsgorithm.",
                      "type": "str",
                      "required": false,
                      "choices": [
                        "md5",
                        "sha1"
                      ],
                      "suboptions": {}
                    },
                    "key": {
                      "aliases": [],
                      "description": "128 bit MD5 key or 140 bit SHA1 key.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "keytype": {
                      "aliases": [],
                      "description": "Specifies if an unencrypted/hidden follows.\n0 denotes unencrypted key.\n7 denotes hidden key.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "passphrase": {
                      "aliases": [],
                      "description": "Passphrase String for deriving keys for authentication and encryption.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "spi": {
                      "aliases": [],
                      "description": "IPsec Security Parameter Index.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "bfd": {
                  "aliases": [],
                  "description": "Enable BFD.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "cost": {
                  "aliases": [],
                  "description": "metric associated with interface.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "dead_interval": {
                  "aliases": [],
                  "description": "Time interval to detect a dead router.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "encryption_v3": {
                  "aliases": [],
                  "description": "Authentication settings on the interface.\nValid only when afi = ipv6.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "algorithm": {
                      "aliases": [],
                      "description": "algorithm.",
                      "type": "str",
                      "required": false,
                      "choices": [
                        "md5",
                        "sha1"
                      ],
                      "suboptions": {}
                    },
                    "encryption": {
                      "aliases": [],
                      "description": "encryption type.",
                      "type": "str",
                      "required": false,
                      "choices": [
                        "3des-cbc",
                        "aes-128-cbc",
                        "aes-192-cbc",
                        "aes-256-cbc",
                        "null"
                      ],
                      "suboptions": {}
                    },
                    "key": {
                      "aliases": [],
                      "description": "key",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "keytype": {
                      "aliases": [],
                      "description": "Specifies if an unencrypted/hidden follows.\n0 denotes unencrypted key.\n7 denotes hidden key.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "passphrase": {
                      "aliases": [],
                      "description": "Passphrase String for deriving keys for authentication and encryption.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "spi": {
                      "aliases": [],
                      "description": "IPsec Security Parameter Index.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "hello_interval": {
                  "aliases": [],
                  "description": "Timer interval between transmission of hello packets.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "ip_params": {
                  "aliases": [],
                  "description": "Specify parameters for IPv4/IPv6.\nValid only when afi = ipv6.",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "afi": {
                      "aliases": [],
                      "description": "Address Family Identifier (AFI) for OSPF settings on the interfaces.",
                      "type": "str",
                      "required": true,
                      "choices": [
                        "ipv4",
                        "ipv6"
                      ],
                      "suboptions": {}
                    },
                    "area": {
                      "aliases": [],
                      "description": "Area associated with interface.\nValid only when afi = ipv4.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "area_id": {
                          "aliases": [],
                          "description": "Area ID as a decimal or IP address format.",
                          "type": "str",
                          "required": true,
                          "suboptions": {}
                        }
                      }
                    },
                    "bfd": {
                      "aliases": [],
                      "description": "Enable BFD.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "cost": {
                      "aliases": [],
                      "description": "metric associated with interface.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "dead_interval": {
                      "aliases": [],
                      "description": "Time interval to detect a dead router.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "hello_interval": {
                      "aliases": [],
                      "description": "Timer interval between transmission of hello packets.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "mtu_ignore": {
                      "aliases": [],
                      "description": "if True, Disable MTU check for Database Description packets.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "network": {
                      "aliases": [],
                      "description": "Interface type.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "passive_interface": {
                      "aliases": [],
                      "description": "Suppress routing updates in an interface.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "priority": {
                      "aliases": [],
                      "description": "Interface priority.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "retransmit_interval": {
                      "aliases": [],
                      "description": "LSA retransmission interval.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "transmit_delay": {
                      "aliases": [],
                      "description": "LSA transmission delay.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "message_digest_key": {
                  "aliases": [],
                  "description": "Message digest authentication password (key) settings.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "encryption": {
                      "aliases": [],
                      "description": "0 Specifies an UNENCRYPTED ospf password (key) will follow.\n7 Specifies a proprietry encryption type.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "key": {
                      "aliases": [],
                      "description": "Authentication key (upto 16 chars).",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "key_id": {
                      "aliases": [],
                      "description": "Key ID.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "mtu_ignore": {
                  "aliases": [],
                  "description": "if True, Disable MTU check for Database Description packets.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "network": {
                  "aliases": [],
                  "description": "Interface type.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "passive_interface": {
                  "aliases": [],
                  "description": "Suppress routing updates in an interface.\nValid only when afi = ipv6.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "priority": {
                  "aliases": [],
                  "description": "Interface priority.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "retransmit_interval": {
                  "aliases": [],
                  "description": "LSA retransmission interval.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "shutdown": {
                  "aliases": [],
                  "description": "Shutdown OSPF on this interface.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "transmit_delay": {
                  "aliases": [],
                  "description": "LSA transmission delay.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "name": {
              "aliases": [],
              "description": "Name/Identifier of the interface.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "running_config": {
          "aliases": [],
          "description": "This option is used only with state I(parsed).\nThe value of this option should be the output received from the EOS device by executing the command B(show running-config | section interface).\nThe state I(parsed) reads the configuration from C(running_config) option and transforms it into Ansible structured data as per the resource module's argspec and the value is then returned in the I(parsed) key within the result.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The state the configuration should be left in.",
          "default": "merged",
          "type": "str",
          "required": false,
          "choices": [
            "merged",
            "replaced",
            "overridden",
            "deleted",
            "gathered",
            "parsed",
            "rendered"
          ],
          "suboptions": {}
        }
      },
      "short_description": "OSPF Interfaces Resource Module.",
      "version_added": "1.1.0"
    },
    "examples": "\n\n# Using merged\n\n# Before state\n\n# veos(config)#show running-config | section interface | ospf\n# veos(config)#\n\n  - name: Merge provided configuration with device configuration\n    arista.eos.eos_ospf_interfaces:\n      config:\n        - name: \"Vlan1\"\n          address_family:\n            - afi: \"ipv4\"\n              area:\n                area_id: \"0.0.0.50\"\n              cost: 500\n              mtu_ignore: True\n            - afi: \"ipv6\"\n              dead_interval: 44\n              ip_params:\n                - afi: \"ipv6\"\n                  mtu_ignore: True\n                  network: \"point-to-point\"\n      state: merged\n\n# After State\n\n# veos(config)#show running-config | section interface | ospf\n# interface Vlan1\n#    ip ospf cost 500\n#    ip ospf mtu-ignore\n#    ip ospf area 0.0.0.50\n#    ospfv3 dead-interval 44\n#    ospfv3 ipv6 network point-to-point\n#    ospfv3 ipv6 mtu-ignore\n# veos(config)#\n#\n#\n# Module Execution:\n#\n#   \"after\": [\n#         {\n#             \"name\": \"Ethernet1\"\n#         },\n#         {\n#             \"name\": \"Ethernet2\"\n#         },\n#         {\n#             \"name\": \"Management1\"\n#         },\n#         {\n#             \"address_family\": [\n#                 {\n#                     \"afi\": \"ipv4\",\n#                     \"area\": {\n#                         \"area_id\": \"0.0.0.50\"\n#                     },\n#                     \"cost\": 500,\n#                     \"mtu_ignore\": True\n#                 },\n#                 {\n#                     \"afi\": \"ipv6\",\n#                     \"dead_interval\": 44,\n#                     \"ip_params\": [\n#                         {\n#                             \"afi\": \"ipv6\",\n#                             \"mtu_ignore\": True,\n#                             \"network\": \"point-to-point\"\n#                         }\n#                     ]\n#                 }\n#             ],\n#             \"name\": \"Vlan1\"\n#         }\n#     ],\n#     \"before\": [\n#         {\n#             \"name\": \"Ethernet1\"\n#         },\n#         {\n#             \"name\": \"Ethernet2\"\n#         },\n#         {\n#             \"name\": \"Management1\"\n#         }\n#     ],\n#     \"changed\": True,\n#     \"commands\": [\n#         \"interface Vlan1\",\n#         \"ip ospf area 0.0.0.50\",\n#         \"ip ospf cost 500\",\n#         \"ip ospf mtu-ignore\",\n#         \"ospfv3 dead-interval 44\",\n#         \"ospfv3 ipv6 mtu-ignore\",\n#         \"ospfv3 ipv6 network point-to-point\"\n#     ],\n#\n\n# Using replaced\n#---------------\n\n# Before State:\n\n# veos(config)#show running-config | section interface | ospf\n# interface Vlan1\n#    ip ospf cost 500\n#    ip ospf dead-interval 29\n#    ip ospf hello-interval 66\n#    ip ospf mtu-ignore\n#    ip ospf area 0.0.0.50\n#    ospfv3 cost 106\n#    ospfv3 hello-interval 77\n#    ospfv3 dead-interval 44\n#    ospfv3 transmit-delay 100\n#    ospfv3 ipv4 priority 45\n#    ospfv3 ipv4 area 0.0.0.5\n#    ospfv3 ipv6 passive-interface\n#    ospfv3 ipv6 retransmit-interval 115\n#    ospfv3 ipv6 network point-to-point\n#    ospfv3 ipv6 mtu-ignore\n# !\n# interface Vlan2\n#    ospfv3 ipv4 hello-interval 45\n#    ospfv3 ipv4 retransmit-interval 100\n#    ospfv3 ipv4 area 0.0.0.6\n# veos(config)#\n\n\n  - name: Replace device configuration with provided configuration\n    arista.eos.eos_ospf_interfaces:\n      config:\n        - name: \"Vlan1\"\n          address_family:\n            - afi: \"ipv6\"\n              cost: 44\n              bfd: True\n              ip_params:\n                - afi: \"ipv6\"\n                  mtu_ignore: True\n                  network: \"point-to-point\"\n                  dead_interval: 56\n      state: replaced\n\n# After State:\n\n# veos(config)#show running-config | section interface | ospf\n# interface Vlan1\n#    ospfv3 bfd\n#    ospfv3 cost 44\n#    no ospfv3 ipv6 passive-interface\n#    ospfv3 ipv6 network point-to-point\n#    ospfv3 ipv6 mtu-ignore\n# !\n# interface Vlan2\n#    ospfv3 ipv4 hello-interval 45\n#    ospfv3 ipv4 retransmit-interval 100\n#    ospfv3 ipv4 area 0.0.0.6\n# veos(config)#\n#\n# Module Execution:\n#\n# \"after\": [\n#         {\n#             \"name\": \"Ethernet1\"\n#         },\n#         {\n#             \"name\": \"Ethernet2\"\n#         },\n#         {\n#             \"name\": \"Management1\"\n#         },\n#         {\n#             \"address_family\": [\n#                 {\n#                     \"afi\": \"ipv6\",\n#                     \"bfd\": True,\n#                     \"cost\": 44,\n#                     \"ip_params\": [\n#                         {\n#                             \"afi\": \"ipv6\",\n#                             \"mtu_ignore\": True,\n#                             \"network\": \"point-to-point\"\n#                         }\n#                     ]\n#                 }\n#             ],\n#             \"name\": \"Vlan1\"\n#         },\n#         {\n#             \"address_family\": [\n#                 {\n#                     \"afi\": \"ipv6\",\n#                     \"ip_params\": [\n#                         {\n#                             \"afi\": \"ipv4\",\n#                             \"area\": {\n#                                 \"area_id\": \"0.0.0.6\"\n#                             },\n#                             \"hello_interval\": 45,\n#                             \"retransmit_interval\": 100\n#                         }\n#                     ]\n#                 }\n#             ],\n#             \"name\": \"Vlan2\"\n#         }\n#     ],\n#     \"before\": [\n#         {\n#             \"name\": \"Ethernet1\"\n#         },\n#         {\n#             \"name\": \"Ethernet2\"\n#         },\n#         {\n#             \"name\": \"Management1\"\n#         },\n#         {\n#             \"address_family\": [\n#                 {\n#                     \"afi\": \"ipv4\",\n#                     \"area\": {\n#                         \"area_id\": \"0.0.0.50\"\n#                     },\n#                     \"cost\": 500,\n#                     \"dead_interval\": 29,\n#                     \"hello_interval\": 66,\n#                     \"mtu_ignore\": True\n#                 },\n#                 {\n#                     \"afi\": \"ipv6\",\n#                     \"cost\": 106,\n#                     \"dead_interval\": 44,\n#                     \"hello_interval\": 77,\n#                     \"ip_params\": [\n#                         {\n#                             \"afi\": \"ipv4\",\n#                             \"area\": {\n#                                 \"area_id\": \"0.0.0.5\"\n#                             },\n#                             \"priority\": 45\n#                         },\n#                         {\n#                             \"afi\": \"ipv6\",\n#                             \"mtu_ignore\": True,\n#                             \"network\": \"point-to-point\",\n#                             \"passive_interface\": True,\n#                             \"retransmit_interval\": 115\n#                         }\n#                     ],\n#                     \"transmit_delay\": 100\n#                 }\n#             ],\n#             \"name\": \"Vlan1\"\n#         },\n#         {\n#             \"address_family\": [\n#                 {\n#                     \"afi\": \"ipv6\",\n#                     \"ip_params\": [\n#                         {\n#                             \"afi\": \"ipv4\",\n#                             \"area\": {\n#                                 \"area_id\": \"0.0.0.6\"\n#                             },\n#                             \"hello_interval\": 45,\n#                             \"retransmit_interval\": 100\n#                         }\n#                     ]\n#                 }\n#             ],\n#             \"name\": \"Vlan2\"\n#         }\n#     ],\n#     \"changed\": True,\n#     \"commands\": [\n#         \"interface Vlan1\",\n#         \"no ip ospf cost 500\",\n#         \"no ip ospf dead-interval 29\",\n#         \"no ip ospf hello-interval 66\",\n#         \"no ip ospf mtu-ignore\",\n#         \"no ip ospf area 0.0.0.50\",\n#         \"ospfv3 cost 44\",\n#         \"ospfv3 bfd\",\n#         \"ospfv3 authentication ipsec spi 30 md5 passphrase 7 7hl8FV3lZ6H1mAKpjL47hQ==\",\n#         \"no ospfv3 ipv4 priority 45\",\n#         \"no ospfv3 ipv4 area 0.0.0.5\",\n#         \"ospfv3 ipv6 dead-interval 56\",\n#         \"no ospfv3 ipv6 passive-interface\",\n#         \"no ospfv3 ipv6 retransmit-interval 115\",\n#         \"no ospfv3 hello-interval 77\",\n#         \"no ospfv3 dead-interval 44\",\n#         \"no ospfv3 transmit-delay 100\"\n#     ],\n#\n\n# Using overidden:\n# ----------------\n\n# Before State:\n# veos(config)#show running-config | section interface | ospf\n# interface Vlan1\n#    ip ospf dead-interval 29\n#    ip ospf hello-interval 66\n#    ip ospf mtu-ignore\n#    ospfv3 bfd\n#    ospfv3 cost 106\n#    ospfv3 hello-interval 77\n#    ospfv3 transmit-delay 100\n#    ospfv3 ipv4 priority 45\n#    ospfv3 ipv4 area 0.0.0.5\n#    ospfv3 ipv6 passive-interface\n#    ospfv3 ipv6 dead-interval 56\n#    ospfv3 ipv6 retransmit-interval 115\n#    ospfv3 ipv6 network point-to-point\n#    ospfv3 ipv6 mtu-ignore\n# !\n# interface Vlan2\n#    ospfv3 ipv4 hello-interval 45\n#    ospfv3 ipv4 retransmit-interval 100\n#    ospfv3 ipv4 area 0.0.0.6\n# veos(config)#\n\n  - name: Override device configuration with provided configuration\n    arista.eos.eos_ospf_interfaces:\n      config:\n        - name: \"Vlan1\"\n          address_family:\n            - afi: \"ipv6\"\n              cost: 44\n              bfd: True\n              ip_params:\n                - afi: \"ipv6\"\n                  mtu_ignore: True\n                  network: \"point-to-point\"\n                  dead_interval: 56\n      state: overridden\n\n# After State:\n\n# veos(config)#show running-config | section interface | ospf\n# interface Vlan1\n#    ospfv3 bfd\n#    ospfv3 cost 44\n#    no ospfv3 ipv6 passive-interface\n#    ospfv3 ipv6 dead-interval 56\n#    ospfv3 ipv6 network point-to-point\n#    ospfv3 ipv6 mtu-ignore\n# veos(config)#\n#\n#\n# Module Execution:\n#\n#  \"after\": [\n#         {\n#             \"name\": \"Ethernet1\"\n#         },\n#         {\n#             \"name\": \"Ethernet2\"\n#         },\n#         {\n#             \"name\": \"Management1\"\n#         },\n#         {\n#             \"address_family\": [\n#                 {\n#                     \"afi\": \"ipv6\",\n#                     \"bfd\": True,\n#                     \"cost\": 44,\n#                     \"ip_params\": [\n#                         {\n#                             \"afi\": \"ipv6\",\n#                             \"dead_interval\": 56,\n#                             \"mtu_ignore\": True,\n#                             \"network\": \"point-to-point\"\n#                         }\n#                     ]\n#                 }\n#             ],\n#             \"name\": \"Vlan1\"\n#         },\n#         {\n#             \"name\": \"Vlan2\"\n#         }\n#     ],\n#     \"before\": [\n#         {\n#             \"name\": \"Ethernet1\"\n#         },\n#         {\n#             \"name\": \"Ethernet2\"\n#         },\n#         {\n#             \"name\": \"Management1\"\n#         },\n#         {\n#             \"address_family\": [\n#                 {\n#                     \"afi\": \"ipv4\",\n#                     \"dead_interval\": 29,\n#                     \"hello_interval\": 66,\n#                     \"mtu_ignore\": True\n#                 },\n#                 {\n#                     \"afi\": \"ipv6\",\n#                     \"bfd\": True,\n#                     \"cost\": 106,\n#                     \"hello_interval\": 77,\n#                     \"ip_params\": [\n#                         {\n#                             \"afi\": \"ipv4\",\n#                             \"area\": {\n#                                 \"area_id\": \"0.0.0.5\"\n#                             },\n#                             \"priority\": 45\n#                         },\n#                         {\n#                             \"afi\": \"ipv6\",\n#                             \"dead_interval\": 56,\n#                             \"mtu_ignore\": True,\n#                             \"network\": \"point-to-point\",\n#                             \"passive_interface\": True,\n#                             \"retransmit_interval\": 115\n#                         }\n#                     ],\n#                     \"transmit_delay\": 100\n#                 }\n#             ],\n#             \"name\": \"Vlan1\"\n#         },\n#         {\n#             \"address_family\": [\n#                 {\n#                     \"afi\": \"ipv6\",\n#                     \"ip_params\": [\n#                         {\n#                             \"afi\": \"ipv4\",\n#                             \"area\": {\n#                                 \"area_id\": \"0.0.0.6\"\n#                             },\n#                             \"hello_interval\": 45,\n#                             \"retransmit_interval\": 100\n#                         }\n#                     ]\n#                 }\n#             ],\n#             \"name\": \"Vlan2\"\n#         }\n#     ],\n#     \"changed\": True,\n#     \"commands\": [\n#         \"interface Vlan2\",\n#         \"no ospfv3 ipv4 hello-interval 45\",\n#         \"no ospfv3 ipv4 retransmit-interval 100\",\n#         \"no ospfv3 ipv4 area 0.0.0.6\",\n#         \"interface Vlan1\",\n#         \"no ip ospf dead-interval 29\",\n#         \"no ip ospf hello-interval 66\",\n#         \"no ip ospf mtu-ignore\",\n#         \"ospfv3 cost 44\",\n#         \"ospfv3 authentication ipsec spi 30 md5 passphrase 7 7hl8FV3lZ6H1mAKpjL47hQ==\",\n#         \"no ospfv3 ipv4 priority 45\",\n#         \"no ospfv3 ipv4 area 0.0.0.5\",\n#         \"no ospfv3 ipv6 passive-interface\",\n#         \"no ospfv3 ipv6 retransmit-interval 115\",\n#         \"no ospfv3 hello-interval 77\",\n#         \"no ospfv3 transmit-delay 100\"\n#     ],\n#\n\n# Using deleted:\n#--------------\n\n# before State:\n\n# veos(config)#show running-config | section interface | ospf\n# interface Vlan1\n#    ip ospf dead-interval 29\n#    ip ospf hello-interval 66\n#    ip ospf mtu-ignore\n#    ospfv3 bfd\n#    ospfv3 cost 106\n#    ospfv3 hello-interval 77\n#    ospfv3 transmit-delay 100\n#    ospfv3 ipv4 priority 45\n#    ospfv3 ipv4 area 0.0.0.5\n#    ospfv3 ipv6 passive-interface\n#    ospfv3 ipv6 dead-interval 56\n#    ospfv3 ipv6 retransmit-interval 115\n#    ospfv3 ipv6 network point-to-point\n#    ospfv3 ipv6 mtu-ignore\n# !\n# interface Vlan2\n#    ospfv3 ipv4 hello-interval 45\n#    ospfv3 ipv4 retransmit-interval 100\n#    ospfv3 ipv4 area 0.0.0.6\n# veos(config)#\n\n  - name: Delete device configuration\n    arista.eos.eos_ospf_interfaces:\n      config:\n        - name: \"Vlan1\"\n      state: deleted\n\n# After State:\n\n# veos#show running-config | section interface | ospf\n# interface Vlan2\n#    ospfv3 ipv4 hello-interval 45\n#    ospfv3 ipv4 retransmit-interval 100\n#    ospfv3 ipv4 area 0.0.0.6\n#\n# Module Execution:\n#\n# \"after\": [\n#         {\n#             \"name\": \"Ethernet1\"\n#         },\n#         {\n#             \"name\": \"Ethernet2\"\n#         },\n#         {\n#             \"name\": \"Management1\"\n#         },\n#         {\n#             \"name\": \"Vlan1\"\n#         },\n#         {\n#             \"address_family\": [\n#                 {\n#                     \"afi\": \"ipv6\",\n#                     \"ip_params\": [\n#                         {\n#                             \"afi\": \"ipv4\",\n#                             \"area\": {\n#                                 \"area_id\": \"0.0.0.6\"\n#                             },\n#                             \"hello_interval\": 45,\n#                             \"retransmit_interval\": 100\n#                         }\n#                     ]\n#                 }\n#             ],\n#             \"name\": \"Vlan2\"\n#         }\n#     ],\n#     \"before\": [\n#         {\n#             \"name\": \"Ethernet1\"\n#         },\n#         {\n#             \"name\": \"Ethernet2\"\n#         },\n#         {\n#             \"name\": \"Management1\"\n#         },\n#         {\n#             \"address_family\": [\n#                 {\n#                     \"afi\": \"ipv4\",\n#                     \"dead_interval\": 29,\n#                     \"hello_interval\": 66,\n#                     \"mtu_ignore\": True\n#                 },\n#                 {\n#                     \"afi\": \"ipv6\",\n#                     \"bfd\": True,\n#                     \"cost\": 106,\n#                     \"hello_interval\": 77,\n#                     \"ip_params\": [\n#                         {\n#                             \"afi\": \"ipv4\",\n#                             \"area\": {\n#                                 \"area_id\": \"0.0.0.5\"\n#                             },\n#                             \"priority\": 45\n#                         },\n#                         {\n#                             \"afi\": \"ipv6\",\n#                             \"dead_interval\": 56,\n#                             \"mtu_ignore\": True,\n#                             \"network\": \"point-to-point\",\n#                             \"passive_interface\": True,\n#                             \"retransmit_interval\": 115\n#                         }\n#                     ],\n#                     \"transmit_delay\": 100\n#                 }\n#             ],\n#             \"name\": \"Vlan1\"\n#         },\n#         {\n#             \"address_family\": [\n#                 {\n#                     \"afi\": \"ipv6\",\n#                     \"ip_params\": [\n#                         {\n#                             \"afi\": \"ipv4\",\n#                             \"area\": {\n#                                 \"area_id\": \"0.0.0.6\"\n#                             },\n#                             \"hello_interval\": 45,\n#                             \"retransmit_interval\": 100\n#                         }\n#                     ]\n#                 }\n#             ],\n#             \"name\": \"Vlan2\"\n#         }\n#     ],\n#     \"changed\": True,\n#     \"commands\": [\n#         \"interface Vlan1\",\n#         \"no ip ospf dead-interval 29\",\n#         \"no ip ospf hello-interval 66\",\n#         \"no ip ospf mtu-ignore\",\n#         \"no ospfv3 bfd\",\n#         \"no ospfv3 cost 106\",\n#         \"no ospfv3 hello-interval 77\",\n#         \"no ospfv3 transmit-delay 100\",\n#         \"no ospfv3 ipv4 priority 45\",\n#         \"no ospfv3 ipv4 area 0.0.0.5\",\n#         \"no ospfv3 ipv6 passive-interface\",\n#         \"no ospfv3 ipv6 dead-interval 56\",\n#         \"no ospfv3 ipv6 retransmit-interval 115\",\n#         \"no ospfv3 ipv6 network point-to-point\",\n#         \"no ospfv3 ipv6 mtu-ignore\"\n#     ],\n#\n\n# Using parsed:\n# ------------\n\n# parsed.cfg:\n# ----------\n\n# interface Vlan1\n#    ip ospf dead-interval 29\n#    ip ospf hello-interval 66\n#    ip ospf mtu-ignore\n#    ip ospf cost 500\n#    ospfv3 bfd\n#    ospfv3 cost 106\n#    ospfv3 hello-interval 77\n#    ospfv3 transmit-delay 100\n#    ospfv3 ipv4 priority 45\n#    ospfv3 ipv4 area 0.0.0.5\n#    ospfv3 ipv6 passive-interface\n#    ospfv3 ipv6 dead-interval 56\n#    ospfv3 ipv6 retransmit-interval 115\n#    ospfv3 ipv6 network point-to-point\n#    ospfv3 ipv6 mtu-ignore\n# !\n# interface Vlan2\n#    ospfv3 ipv4 hello-interval 45\n#    ospfv3 ipv4 retransmit-interval 100\n#    ospfv3 ipv4 area 0.0.0.6\n#\n\n  - name: parse configs\n    arista.eos.eos_ospf_interfaces:\n      running_config: \"{{ lookup('file', './parsed.cfg') }}\"\n      state: parsed\n\n# Module Execution:\n# \"parsed\": [\n#         {\n#             \"address_family\": [\n#                 {\n#                     \"afi\": \"ipv4\",\n#                     \"cost\": 500,\n#                     \"dead_interval\": 29,\n#                     \"hello_interval\": 66,\n#                     \"mtu_ignore\": True\n#                 },\n#                 {\n#                     \"afi\": \"ipv6\",\n#                     \"bfd\": True,\n#                     \"cost\": 106,\n#                     \"hello_interval\": 77,\n#                     \"ip_params\": [\n#                         {\n#                             \"afi\": \"ipv4\",\n#                             \"area\": {\n#                                 \"area_id\": \"0.0.0.5\"\n#                             },\n#                             \"priority\": 45\n#                         },\n#                         {\n#                             \"afi\": \"ipv6\",\n#                             \"dead_interval\": 56,\n#                             \"mtu_ignore\": True,\n#                             \"network\": \"point-to-point\",\n#                             \"passive_interface\": True,\n#                             \"retransmit_interval\": 115\n#                         }\n#                     ],\n#                     \"transmit_delay\": 100\n#                 }\n#             ],\n#             \"name\": \"Vlan1\"\n#         },\n#         {\n#             \"address_family\": [\n#                 {\n#                     \"afi\": \"ipv6\",\n#                     \"ip_params\": [\n#                         {\n#                             \"afi\": \"ipv4\",\n#                             \"area\": {\n#                                 \"area_id\": \"0.0.0.6\"\n#                             },\n#                             \"hello_interval\": 45,\n#                             \"retransmit_interval\": 100\n#                         }\n#                     ]\n#                 }\n#             ],\n#             \"name\": \"Vlan2\"\n#         }\n#     ]\n\n# Using gathered:\n\n# Device COnfig:\n\n# veos#show running-config | section interface | ospf\n# interface Vlan1\n#    ip ospf cost 500\n#    ip ospf dead-interval 29\n#    ip ospf hello-interval 66\n#    ip ospf mtu-ignore\n#    ip ospf area 0.0.0.50\n#    ospfv3 cost 106\n#    ospfv3 hello-interval 77\n#    ospfv3 transmit-delay 100\n#    ospfv3 ipv4 priority 45\n#    ospfv3 ipv4 area 0.0.0.5\n#    ospfv3 ipv6 passive-interface\n#    ospfv3 ipv6 dead-interval 56\n#    ospfv3 ipv6 retransmit-interval 115\n#    ospfv3 ipv6 network point-to-point\n#    ospfv3 ipv6 mtu-ignore\n# !\n# interface Vlan2\n#    ospfv3 ipv4 hello-interval 45\n#    ospfv3 ipv4 retransmit-interval 100\n#    ospfv3 ipv4 area 0.0.0.6\n# veos#\n\n  - name: gather configs\n    arista.eos.eos_ospf_interfaces:\n      state: gathered\n\n# Module Execution:\n#\n#  \"gathered\": [\n#         {\n#             \"name\": \"Ethernet1\"\n#         },\n#         {\n#             \"name\": \"Ethernet2\"\n#         },\n#         {\n#             \"name\": \"Management1\"\n#         },\n#         {\n#             \"address_family\": [\n#                 {\n#                     \"afi\": \"ipv4\",\n#                     \"area\": {\n#                         \"area_id\": \"0.0.0.50\"\n#                     },\n#                     \"cost\": 500,\n#                     \"dead_interval\": 29,\n#                     \"hello_interval\": 66,\n#                     \"mtu_ignore\": True\n#                 },\n#                 {\n#                     \"afi\": \"ipv6\",\n#                     \"cost\": 106,\n#                     \"hello_interval\": 77,\n#                     \"ip_params\": [\n#                         {\n#                             \"afi\": \"ipv4\",\n#                             \"area\": {\n#                                 \"area_id\": \"0.0.0.5\"\n#                             },\n#                             \"priority\": 45\n#                         },\n#                         {\n#                             \"afi\": \"ipv6\",\n#                             \"dead_interval\": 56,\n#                             \"mtu_ignore\": True,\n#                             \"network\": \"point-to-point\",\n#                             \"passive_interface\": True,\n#                             \"retransmit_interval\": 115\n#                         }\n#                     ],\n#                     \"transmit_delay\": 100\n#                 }\n#             ],\n#             \"name\": \"Vlan1\"\n#         },\n#         {\n#             \"address_family\": [\n#                 {\n#                     \"afi\": \"ipv6\",\n#                     \"ip_params\": [\n#                         {\n#                             \"afi\": \"ipv4\",\n#                             \"area\": {\n#                                 \"area_id\": \"0.0.0.6\"\n#                             },\n#                             \"hello_interval\": 45,\n#                             \"retransmit_interval\": 100\n#                         }\n#                     ]\n#                 }\n#             ],\n#             \"name\": \"Vlan2\"\n#         }\n#     ],\n#\n\n\n# Using rendered:\n# --------------\n\n  - name: Render provided configuration\n    arista.eos.eos_ospf_interfaces:\n      config:\n        - name: \"Vlan1\"\n          address_family:\n            - afi: \"ipv4\"\n              dead_interval: 29\n              mtu_ignore: True\n              hello_interval: 66\n            - afi: \"ipv6\"\n              hello_interval: 77\n              cost : 106\n              transmit_delay: 100\n              ip_params:\n                - afi: \"ipv6\"\n                  retransmit_interval: 115\n                  dead_interval: 56\n                  passive_interface: True\n                - afi: \"ipv4\"\n                  area:\n                    area_id: \"0.0.0.5\"\n                  priority: 45\n        - name: \"Vlan2\"\n          address_family:\n            - afi: \"ipv6\"\n              ip_params:\n                - afi: \"ipv4\"\n                  area:\n                    area_id: \"0.0.0.6\"\n                  hello_interval: 45\n                  retransmit_interval: 100\n            - afi: \"ipv4\"\n              message_digest_key:\n                key_id: 200\n                encryption: 7\n                key: \"hkdfhtu==\"\n\n      state: rendered\n\n# Module Execution:\n#\n# \"rendered\": [\n#         \"interface Vlan1\",\n#         \"ip ospf dead-interval 29\",\n#         \"ip ospf mtu-ignore\",\n#         \"ip ospf hello-interval 66\",\n#         \"ospfv3 hello-interval 77\",\n#         \"ospfv3 cost 106\",\n#         \"ospfv3 transmit-delay 100\",\n#         \"ospfv3 ipv4 area 0.0.0.5\",\n#         \"ospfv3 ipv4 priority 45\",\n#         \"ospfv3 ipv6 retransmit-interval 115\",\n#         \"ospfv3 ipv6 dead-interval 56\",\n#         \"ospfv3 ipv6 passive-interface\",\n#         \"interface Vlan2\",\n#         \"ip ospf message-digest-key 200 md5 7 hkdfhtu==\",\n#         \"ospfv3 ipv4 area 0.0.0.6\",\n#         \"ospfv3 ipv4 hello-interval 45\",\n#         \"ospfv3 ipv4 retransmit-interval 100\"\n#     ]\n#\n\n"
  },
  "arista.eos.eos_ospfv2": {
    "doc": {
      "description": "This module configures and manages the attributes of ospfv2 on Arista EOS platforms.",
      "has_action": true,
      "notes": "Tested against Arista EOS 4.24.6F\nThis module works with connection C(network_cli). See the L(EOS Platform Options,../network/user_guide/platform_eos.html).",
      "options": {
        "config": {
          "aliases": [],
          "description": "A list of configurations for ospfv2.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "processes": {
              "aliases": [],
              "description": "A list of dictionary specifying the ospfv2 processes.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "adjacency": {
                  "aliases": [],
                  "description": "Configure adjacency options for OSPF instance.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "exchange_start": {
                      "aliases": [],
                      "description": "Configure exchange-start options for OSPF instance.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "threshold": {
                          "aliases": [],
                          "description": "Number of peers to bring up simultaneously.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    }
                  }
                },
                "areas": {
                  "aliases": [],
                  "description": "Specifies the configuration for OSPF areas",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "area_id": {
                      "aliases": [],
                      "description": "Specifies a 32 bit number expressed in decimal or dotted-decimal notation.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "default_cost": {
                      "aliases": [],
                      "description": "Specify the cost for default summary route in stub/NSSA area.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "filter": {
                      "aliases": [],
                      "description": "Specify the filter for incoming summary LSAs.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "address": {
                          "aliases": [],
                          "description": "IP address.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "prefix_list": {
                          "aliases": [],
                          "description": "Specify list to filter for incoming LSAs.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "subnet_address": {
                          "aliases": [],
                          "description": "IP address with mask length",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "subnet_mask": {
                          "aliases": [],
                          "description": "IP subnet mask",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "not_so_stubby": {
                      "aliases": [],
                      "description": "Configures NSSA parameters.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "default_information_originate": {
                          "aliases": [],
                          "description": "Originate default Type 7 LSA.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "metric": {
                              "aliases": [],
                              "description": "Metric for default route.",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "metric_type": {
                              "aliases": [],
                              "description": "Metric type for default route.",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "nssa_only": {
                              "aliases": [],
                              "description": "Limit default advertisement to this NSSA area.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "lsa": {
                          "aliases": [],
                          "description": "lsa parameters",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "no_summary": {
                          "aliases": [],
                          "description": "Filter all type-3 LSAs in the nssa area.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "nssa_only": {
                          "aliases": [],
                          "description": "Disable Type-7 LSA p-bit setting",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "set": {
                          "aliases": [],
                          "description": "Set config up to not-so-stubby",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "nssa": {
                      "aliases": [],
                      "description": "Configures NSSA parameters.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "default_information_originate": {
                          "aliases": [],
                          "description": "Originate default Type 7 LSA.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "metric": {
                              "aliases": [],
                              "description": "Metric for default route.",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "metric_type": {
                              "aliases": [],
                              "description": "Metric type for default route.",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "nssa_only": {
                              "aliases": [],
                              "description": "Limit default advertisement to this NSSA area.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "no_summary": {
                          "aliases": [],
                          "description": "Filter all type-3 LSAs in the nssa area.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "nssa_only": {
                          "aliases": [],
                          "description": "Disable Type-7 LSA p-bit setting",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "set": {
                          "aliases": [],
                          "description": "Set config up to nssa",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "range": {
                      "aliases": [],
                      "description": "Configure route summarization.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "address": {
                          "aliases": [],
                          "description": "IP address.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "advertise": {
                          "aliases": [],
                          "description": "Enable Advertisement of the range.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "cost": {
                          "aliases": [],
                          "description": "Configures the metric.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "subnet_address": {
                          "aliases": [],
                          "description": "IP address with mask length",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "subnet_mask": {
                          "aliases": [],
                          "description": "IP subnet mask",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "stub": {
                      "aliases": [],
                      "description": "Stub area.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "no_summary": {
                          "aliases": [],
                          "description": "If False , Filter all type-3 LSAs in the stub area.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "set": {
                          "aliases": [],
                          "description": "When true sets the stub config alone.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    }
                  }
                },
                "auto_cost": {
                  "aliases": [],
                  "description": "Set auto-cost.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "reference_bandwidth": {
                      "aliases": [],
                      "description": "reference bandwidth in megabits per sec.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "bfd": {
                  "aliases": [],
                  "description": "Enable BFD.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "all_interfaces": {
                      "aliases": [],
                      "description": "Enable BFD on all interfaces.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "default_information": {
                  "aliases": [],
                  "description": "Control distribution of default information.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "always": {
                      "aliases": [],
                      "description": "Always advertise default route.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "metric": {
                      "aliases": [],
                      "description": "Metric for default route.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "metric_type": {
                      "aliases": [],
                      "description": "Metric type for default route.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "originate": {
                      "aliases": [],
                      "description": "Distribute a default route.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "route_map": {
                      "aliases": [],
                      "description": "Specify which route-map to use.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "default_metric": {
                  "aliases": [],
                  "description": "Configure the default metric for redistributed routes",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "distance": {
                  "aliases": [],
                  "description": "Specifies the administrative distance for routes.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "external": {
                      "aliases": [],
                      "description": "Routes external to the area",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "inter_area": {
                      "aliases": [],
                      "description": "Routes from other areas",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "intra_area": {
                      "aliases": [],
                      "description": "Routes with in an area",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "distribute_list": {
                  "aliases": [],
                  "description": "Specifies the list of routes to be filtered.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "prefix_list": {
                      "aliases": [],
                      "description": "prefix list to be filtered",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "route_map": {
                      "aliases": [],
                      "description": "route map to be filtered",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "dn_bit_ignore": {
                  "aliases": [],
                  "description": "If True, Disable dn-bit check for Type-3 LSAs in non-default VRFs.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "fips_restrictions": {
                  "aliases": [],
                  "description": "Use FIPS compliant algorithms",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "graceful_restart": {
                  "aliases": [],
                  "description": "Enable graceful restart mode.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "grace_period": {
                      "aliases": [],
                      "description": "Specify maximum time to wait for graceful-restart to complete.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "set": {
                      "aliases": [],
                      "description": "When true sets the grace_fulrestart config alone.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "graceful_restart_helper": {
                  "aliases": [],
                  "description": "If True, Enable graceful restart helper.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "log_adjacency_changes": {
                  "aliases": [],
                  "description": "To configure link-state changes and transitions of OSPFv2 neighbors.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "detail": {
                      "aliases": [],
                      "description": "If true , configures the switch to log all link-state changes.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "max_lsa": {
                  "aliases": [],
                  "description": "Specifies the switch behavior on reaching max lsa count.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "count": {
                      "aliases": [],
                      "description": "maximum count of lsas.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "ignore_count": {
                      "aliases": [],
                      "description": "No. of times the switch can shut down temporarily on warning",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "ignore_time": {
                      "aliases": [],
                      "description": "time in minutes, for which the switch shoud be shutdown on max-lsa warning",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "reset_time": {
                      "aliases": [],
                      "description": "Time in minutes, after which the shutdown counter resets.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "threshold": {
                      "aliases": [],
                      "description": "percentage of <count> , when a warning should be raised.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "warning": {
                      "aliases": [],
                      "description": "Only give warning message when limit is exceeded",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "max_metric": {
                  "aliases": [],
                  "description": "Set maximum metric.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "router_lsa": {
                      "aliases": [],
                      "description": "Maximum metric in self-originated router-LSAs.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "external_lsa": {
                          "aliases": [],
                          "description": "Override external-lsa metric with max-metric value.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "max_metric_value": {
                              "aliases": [],
                              "description": "Set max metric value for external LSAs.",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "set": {
                              "aliases": [],
                              "description": "Set external-lsa attribute.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "include_stub": {
                          "aliases": [],
                          "description": "Set maximum metric for stub links in router-LSAs.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "on_startup": {
                          "aliases": [],
                          "description": "Set maximum metric temporarily after reboot.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "wait_period": {
                              "aliases": [],
                              "description": "Wait period in seconds after startup.",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "set": {
                          "aliases": [],
                          "description": "Set router-lsa attribute.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "summary_lsa": {
                          "aliases": [],
                          "description": "Override summary-lsa metric with max-metric value.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "max_metric_value": {
                              "aliases": [],
                              "description": "Set max metric value for external LSAs.",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "set": {
                              "aliases": [],
                              "description": "Set external-lsa attribute.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "maximum_paths": {
                  "aliases": [],
                  "description": "Maximum number of next-hops in an ECMP route.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "mpls_ldp": {
                  "aliases": [],
                  "description": "mpls ldp sync configuration.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "networks": {
                  "aliases": [],
                  "description": "Configure routing for a network.",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "area": {
                      "aliases": [],
                      "description": "Configure OSPF area.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "mask": {
                      "aliases": [],
                      "description": "Network Wildcard Mask.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "network_address": {
                      "aliases": [],
                      "description": "Network Address.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "prefix": {
                      "aliases": [],
                      "description": "Prefix.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "passive_interface": {
                  "aliases": [],
                  "description": "Include interface but without actively running OSPF.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "default": {
                      "aliases": [],
                      "description": "If True, Set all interfaces to passive by default",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "interface_list": {
                      "aliases": [],
                      "description": "Interface range.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "point_to_point": {
                  "aliases": [],
                  "description": "Configure Point-to-point specific features.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "process_id": {
                  "aliases": [],
                  "description": "ID of OSPFV2 process.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "redistribute": {
                  "aliases": [],
                  "description": "Specifies the routes to be redistributed",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "isis_level": {
                      "aliases": [],
                      "description": "ISIS levels.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "route_map": {
                      "aliases": [],
                      "description": "Specify which route map to use.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "routes": {
                      "aliases": [],
                      "description": "Route types (BGP,isis,connected etc)",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "retransmission_threshold": {
                  "aliases": [],
                  "description": "Configure threshold for retransmission.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "rfc1583compatibility": {
                  "aliases": [],
                  "description": "Specifies different methods for calculating summary route metrics.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "router_id": {
                  "aliases": [],
                  "description": "32-bit number assigned to a router running OSPFv2.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "shutdown": {
                  "aliases": [],
                  "description": "Disable the OSPF instance.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "summary_address": {
                  "aliases": [],
                  "description": "Summary route configuration.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "address": {
                      "aliases": [],
                      "description": "IP summary address.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "attribute_map": {
                      "aliases": [],
                      "description": "Set attributes of summary route.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "mask": {
                      "aliases": [],
                      "description": "Summary Mask.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "not_advertise": {
                      "aliases": [],
                      "description": "Do not advertise summary route.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "prefix": {
                      "aliases": [],
                      "description": "Prefix.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "tag": {
                      "aliases": [],
                      "description": "Set tag.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "timers": {
                  "aliases": [],
                  "description": "Configure OSPF timers.",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "lsa": {
                      "aliases": [],
                      "description": "Configure OSPF LSA timers.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "rx": {
                          "aliases": [],
                          "description": "Configure OSPF LSA receiving timers",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "min_interval": {
                              "aliases": [],
                              "description": "Configure OSPF LSA arrival timer.",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "tx": {
                          "aliases": [],
                          "description": "Configure OSPF LSA transmission timers.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "delay": {
                              "aliases": [],
                              "description": "Configure OSPF LSA transmission delay.",
                              "type": "dict",
                              "required": false,
                              "suboptions": {
                                "initial": {
                                  "aliases": [],
                                  "description": "Delay to generate first occurrence of LSA in msecs.",
                                  "type": "int",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "max": {
                                  "aliases": [],
                                  "description": "Maximum delay between originating the same LSA in msecs.",
                                  "type": "int",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "min": {
                                  "aliases": [],
                                  "description": "Min delay between originating the same LSA in msecs.",
                                  "type": "int",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "out_delay": {
                      "aliases": [],
                      "description": "Configure out-delay timer.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "pacing": {
                      "aliases": [],
                      "description": "Configure OSPF packet pacing.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "spf": {
                      "aliases": [],
                      "description": "Configure SPF timers",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "initial": {
                          "aliases": [],
                          "description": "Initial SPF schedule delay in msecs.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "max": {
                          "aliases": [],
                          "description": "Max wait time between two SPFs in msecs.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "min": {
                          "aliases": [],
                          "description": "Min Hold time between two SPFs in msecs",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "seconds": {
                          "aliases": [],
                          "description": "Seconds.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "throttle": {
                      "aliases": [],
                      "description": "Configure throttle timers(valid only for eos version < 4.23).",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "attr": {
                          "aliases": [],
                          "description": "throttle attribute.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "initial": {
                          "aliases": [],
                          "description": "Initial  schedule delay in msecs.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "max": {
                          "aliases": [],
                          "description": "Max wait time",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "min": {
                          "aliases": [],
                          "description": "Min Hold time",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    }
                  }
                },
                "traffic_engineering": {
                  "aliases": [],
                  "description": "Enter traffic engineering config mode",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "vrf": {
                  "aliases": [],
                  "description": "VRF name .",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            }
          }
        },
        "running_config": {
          "aliases": [],
          "description": "This option is used only with state I(parsed).\nThe value of this option should be the output received from the EOS device by executing the command B(show running-config | section ospf).\nThe state I(parsed) reads the configuration from C(running_config) option and transforms it into Ansible structured data as per the resource module's argspec and the value is then returned in the I(parsed) key within the result.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The state the configuration should be left in.",
          "default": "merged",
          "type": "str",
          "required": false,
          "choices": [
            "deleted",
            "merged",
            "overridden",
            "replaced",
            "gathered",
            "rendered",
            "parsed"
          ],
          "suboptions": {}
        }
      },
      "short_description": "OSPFv2 resource module",
      "version_added": "1.0.0"
    },
    "examples": "\n# Using merged\n\n# Before state:\n# ------------\n# localhost#show running-config | section ospf\n# localhost#\n\n  - name: replace Ospf configs\n    arista.eos.eos_ospfv2:\n      config:\n        - processes:\n            - process_id: 1\n              adjacency:\n                exchange_start:\n                    threshold: 20045623\n              areas:\n                - filter:\n                    address: \"10.1.1.0/24\"\n                  id: \"0.0.0.2\"\n                - id: \"0.0.0.50\"\n                  range:\n                    address: \"172.20.0.0/16\"\n                    cost: 34\n              default_information:\n                metric: 100\n                metric_type: 1\n                originate: True\n              distance:\n                intra_area: 85\n              max_lsa:\n                count: 8000\n                ignore_count: 3\n                ignore_time: 6\n                reset_time: 20\n                threshold: 40\n              networks:\n                - area: \"0.0.0.0\"\n                  prefix: 10.10.2.0/24\n                - area: \"0.0.0.0\"\n                  prefix: \"10.10.3.0/24\"\n              redistribute:\n                - routes: \"static\"\n              router_id: \"170.21.0.4\"\n            - process_id: 2\n              vrf: \"vrf01\"\n              areas:\n                - id: \"0.0.0.9\"\n                  default_cost: 20\n              max_lsa:\n                count: 8000\n                ignore_count: 3\n                ignore_time: 6\n                reset_time: 20\n                threshold: 40\n              networks:\n                - area: \"0.0.0.0\"\n                  prefix: 10.10.2.0/24\n                - area: \"0.0.0.0\"\n                  prefix: \"10.10.3.0/24\"\n              redistribute:\n                - routes: \"static\"\n              router_id: \"170.21.0.4\"\n            - process_id: 2\n              vrf: \"vrf01\"\n              areas:\n                - id: \"0.0.0.9\"\n                  default_cost: 20\n              max_lsa:\n                count: 8000\n                ignore_count: 3\n                ignore_time: 6\n                reset_time: 20\n                threshold: 40\n            - process_id: 3\n              vrf: \"vrf02\"\n              redistribute:\n                - routes: \"connected\"\n\n# After state:\n# localhost#show running-config | section ospf\n# router ospf 1\n#    router-id 170.21.0.4\n#    distance ospf intra-area 85\n#    redistribute static\n#    area 0.0.0.2 filter 10.1.1.0/24\n#    area 0.0.0.50 range 172.20.0.0/16 cost 34\n#    network 10.10.2.0/24 area 0.0.0.0\n#    network 10.10.3.0/24 area 0.0.0.0\n#    max-lsa 8000 40 ignore-time 6 ignore-count 3 reset-time 20\n#    adjacency exchange-start threshold 20045623\n#    default-information originate metric 100 metric-type 1\n#\n# router ospf 2 vrf vrf01\n#    area 0.0.0.9 default-cost 20\n#    max-lsa 8000 40 ignore-time 6 ignore-count 3 reset-time 20\n# !\n# router ospf 3 vrf vrf02\n#    redistribute connected\n#    max-lsa 12000\n# localhost#\n#\n# \"processes\": [\n#                 {\n#                     \"adjacency\": {\n#                         \"exchange_start\": {\n#                             \"threshold\": 20045623\n#                         }\n#                     },\n#                     \"areas\": [\n#                         {\n#                             \"filter\": {\n#                                 \"address\": \"10.1.1.0/24\"\n#                             },\n#                             \"id\": \"0.0.0.2\"\n#                         },\n#                         {\n#                             \"id\": \"0.0.0.50\",\n#                             \"range\": {\n#                                 \"address\": \"172.20.0.0/16\",\n#                                 \"cost\": 34\n#                             }\n#                         }\n#                     ],\n#                     \"default_information\": {\n#                         \"metric\": 100,\n#                         \"metric_type\": 1,\n#                         \"originate\": true\n#                     },\n#                     \"distance\": {\n#                         \"intra_area\": 85\n#                     },\n#                     \"max_lsa\": {\n#                         \"count\": 8000,\n#                         \"ignore_count\": 3,\n#                         \"ignore_time\": 6,\n#                         \"reset_time\": 20,\n#                         \"threshold\": 40\n#                     },\n#                     \"networks\": [\n#                         {\n#                             \"area\": \"0.0.0.0\",\n#                             \"prefix\": \"10.10.2.0/24\"\n#                         },\n#                         {\n#                             \"area\": \"0.0.0.0\",\n#                             \"prefix\": \"10.10.3.0/24\"\n#                         }\n#                     ],\n#                     \"process_id\": 1,\n#                     \"redistribute\": [\n#                         {\n#                             \"routes\": \"static\"\n#                         }\n#                     ],\n#                     \"router_id\": \"170.21.0.4\"\n#                 },\n#                 {\n#                     \"areas\": [\n#                         {\n#                             \"default_cost\": 20,\n#                             \"id\": \"0.0.0.9\"\n#                         }\n#                     ],\n#                     \"max_lsa\": {\n#                         \"count\": 8000,\n#                         \"ignore_count\": 3,\n#                         \"ignore_time\": 6,\n#                         \"reset_time\": 20,\n#                         \"threshold\": 40\n#                     },\n#                     \"process_id\": 2,\n#                     \"vrf\": \"vrf01\"\n#                 },\n#                 {\n#                     \"max_lsa\": {\n#                         \"count\": 12000\n#                     },\n#                     \"process_id\": 3,\n#                     \"redistribute\": [\n#                         {\n#                             \"routes\": \"connected\"\n#                         }\n#                     ],\n#                     \"vrf\": \"vrf02\"\n#                 }\n#             ]\n#         }\n#     ]\n#\n\n\n# Using replaced:\n# --------------\n\n# Before State:\n\n# localhost#show running-config | section ospf\n# router ospf 1\n#    router-id 170.21.0.4\n#    distance ospf intra-area 85\n#    redistribute static\n#    area 0.0.0.2 filter 10.1.1.0/24\n#    area 0.0.0.50 range 172.20.0.0/16 cost 34\n#    network 10.10.2.0/24 area 0.0.0.0\n#    network 10.10.3.0/24 area 0.0.0.0\n#    max-lsa 8000 40 ignore-time 6 ignore-count 3 reset-time 20\n#    adjacency exchange-start threshold 20045623\n#    default-information originate metric 100 metric-type 1\n# !\n# router ospf 2 vrf vrf01\n#    area 0.0.0.9 default-cost 20\n#    max-lsa 8000 40 ignore-time 6 ignore-count 3 reset-time 20\n# !\n# router ospf 3 vrf vrf02\n#    redistribute connected\n#    max-lsa 12000\n# localhost#\n#\n# \"before\": [\n#         {\n#             \"processes\": [\n#                 {\n#                     \"adjacency\": {\n#                         \"exchange_start\": {\n#                             \"threshold\": 20045623\n#                         }\n#                     },\n#                     \"areas\": [\n#                         {\n#                             \"filter\": {\n#                                 \"address\": \"10.1.1.0/24\"\n#                             },\n#                             \"id\": \"0.0.0.2\"\n#                         },\n#                         {\n#                             \"id\": \"0.0.0.50\",\n#                             \"range\": {\n#                                 \"address\": \"172.20.0.0/16\",\n#                                 \"cost\": 34\n#                             }\n#                         }\n#                     ],\n#                     \"default_information\": {\n#                         \"metric\": 100,\n#                         \"metric_type\": 1,\n#                         \"originate\": true\n#                     },\n#                     \"distance\": {\n#                         \"intra_area\": 85\n#                     },\n#                     \"max_lsa\": {\n#                         \"count\": 8000,\n#                         \"ignore_count\": 3,\n#                         \"ignore_time\": 6,\n#                         \"reset_time\": 20,\n#                         \"threshold\": 40\n#                     },\n#                     \"networks\": [\n#                         {\n#                             \"area\": \"0.0.0.0\",\n#                             \"prefix\": \"10.10.2.0/24\"\n#                         },\n#                         {\n#                             \"area\": \"0.0.0.0\",\n#                             \"prefix\": \"10.10.3.0/24\"\n#                         }\n#                     ],\n#                     \"process_id\": 1,\n#                     \"redistribute\": [\n#                         {\n#                             \"routes\": \"static\"\n#                         }\n#                     ],\n#                     \"router_id\": \"170.21.0.4\"\n#                 },\n#                 {\n#                     \"areas\": [\n#                         {\n#                             \"default_cost\": 20,\n#                             \"id\": \"0.0.0.9\"\n#                         }\n#                     ],\n#                     \"max_lsa\": {\n#                         \"count\": 8000,\n#                         \"ignore_count\": 3,\n#                         \"ignore_time\": 6,\n#                         \"reset_time\": 20,\n#                         \"threshold\": 40\n#                     },\n#                     \"process_id\": 2,\n#                     \"vrf\": \"vrf01\"\n#                 },\n#                 {\n#                     \"max_lsa\": {\n#                         \"count\": 12000\n#                     },\n#                     \"process_id\": 3,\n#                     \"redistribute\": [\n#                         {\n#                             \"routes\": \"connected\"\n#                         }\n#                     ],\n#                     \"vrf\": \"vrf02\"\n#                 }\n#             ]\n#         }\n#     ]\n#\n  - name: replace Ospf configs\n    arista.eos.eos_ospfv2:\n          config:\n            - processes:\n                - process_id: 2\n                  vrf: \"vrf01\"\n                  point_to_point: True\n                  redistribute:\n                    - routes: \"isis\"\n                      isis_level: \"level-1\"\n\n          state: replaced\n\n# After State:\n# -----------\n#         \"router ospf 2 vrf vrf01\",\n#         \"no area 0.0.0.9 default-cost 20\",\n#         \"no max-lsa  8000 40 ignore-time 6  ignore-count 3  reset-time 20\",\n#         \"point-to-point routes\",\n#         \"redistribute isis level-1\"\n#\n# \"after\": [\n#         {\n#             \"processes\": [\n#                 {\n#                     \"adjacency\": {\n#                         \"exchange_start\": {\n#                             \"threshold\": 20045623\n#                         }\n#                     },\n#                     \"areas\": [\n#                         {\n#                             \"filter\": {\n#                                 \"address\": \"10.1.1.0/24\"\n#                             },\n#                             \"id\": \"0.0.0.2\"\n#                         },\n#                         {\n#                             \"id\": \"0.0.0.50\",\n#                             \"range\": {\n#                                 \"address\": \"172.20.0.0/16\",\n#                                 \"cost\": 34\n#                             }\n#                         }\n#                     ],\n#                     \"default_information\": {\n#                         \"metric\": 100,\n#                         \"metric_type\": 1,\n#                         \"originate\": true\n#                     },\n#                     \"distance\": {\n#                         \"intra_area\": 85\n#                     },\n#                     \"max_lsa\": {\n#                         \"count\": 8000,\n#                         \"ignore_count\": 3,\n#                         \"ignore_time\": 6,\n#                         \"reset_time\": 20,\n#                         \"threshold\": 40\n#                     },\n#                     \"networks\": [\n#                         {\n#                             \"area\": \"0.0.0.0\",\n#                             \"prefix\": \"10.10.2.0/24\"\n#                         },\n#                         {\n#                             \"area\": \"0.0.0.0\",\n#                             \"prefix\": \"10.10.3.0/24\"\n#                         }\n#                     ],\n#                     \"process_id\": 1,\n#                     \"redistribute\": [\n#                         {\n#                             \"routes\": \"static\"\n#                         }\n#                     ],\n#                     \"router_id\": \"170.21.0.4\"\n#                 },\n#                 {\n#                     \"max_lsa\": {\n#                         \"count\": 12000\n#                     },\n#                     \"process_id\": 2,\n#                     \"redistribute\": [\n#                         {\n#                             \"isis_level\": \"level-1\",\n#                             \"routes\": \"isis\"\n#                         }\n#                     ],\n#                     \"vrf\": \"vrf01\"\n#                 },\n#                 {\n#                     \"max_lsa\": {\n#                         \"count\": 12000\n#                     },\n#                     \"process_id\": 3,\n#                     \"redistribute\": [\n#                         {\n#                             \"routes\": \"connected\"\n#                         }\n#                     ],\n#                     \"vrf\": \"vrf02\"\n#                 }\n#             ]\n#         }\n#     ]\n#\n\n# Using overridden:\n# ----------------\n\n# Before State:\n# localhost#show running-config | section ospf\n# router ospf 1\n#    router-id 170.21.0.4\n#    distance ospf intra-area 85\n#    redistribute static\n#    area 0.0.0.2 filter 10.1.1.0/24\n#    area 0.0.0.50 range 172.20.0.0/16 cost 34\n#    network 10.10.2.0/24 area 0.0.0.0\n#    network 10.10.3.0/24 area 0.0.0.0\n#    max-lsa 8000 40 ignore-time 6 ignore-count 3 reset-time 20\n#    adjacency exchange-start threshold 20045623\n#    default-information originate metric 100 metric-type 1\n# !\n# router ospf 2 vrf vrf01\n#    redistribute isis level-1\n#    max-lsa 12000\n# !\n# router ospf 3 vrf vrf02\n#    redistribute connected\n#    max-lsa 12000\n# localhost#\n#\n# \"before\": [\n#         {\n#             \"processes\": [\n#                 {\n#                     \"adjacency\": {\n#                         \"exchange_start\": {\n#                             \"threshold\": 20045623\n#                         }\n#                     },\n#                     \"areas\": [\n#                         {\n#                             \"filter\": {\n#                                 \"address\": \"10.1.1.0/24\"\n#                             },\n#                             \"id\": \"0.0.0.2\"\n#                         },\n#                         {\n#                             \"id\": \"0.0.0.50\",\n#                             \"range\": {\n#                                 \"address\": \"172.20.0.0/16\",\n#                                 \"cost\": 34\n#                             }\n#                         }\n#                     ],\n#                     \"default_information\": {\n#                         \"metric\": 100,\n#                         \"metric_type\": 1,\n#                         \"originate\": true\n#                     },\n#                     \"distance\": {\n#                         \"intra_area\": 85\n#                     },\n#                     \"max_lsa\": {\n#                         \"count\": 8000,\n#                         \"ignore_count\": 3,\n#                         \"ignore_time\": 6,\n#                         \"reset_time\": 20,\n#                         \"threshold\": 40\n#                     },\n#                     \"networks\": [\n#                         {\n#                             \"area\": \"0.0.0.0\",\n#                             \"prefix\": \"10.10.2.0/24\"\n#                         },\n#                         {\n#                             \"area\": \"0.0.0.0\",\n#                             \"prefix\": \"10.10.3.0/24\"\n#                         }\n#                     ],\n#                     \"process_id\": 1,\n#                     \"redistribute\": [\n#                         {\n#                             \"routes\": \"static\"\n#                         }\n#                     ],\n#                     \"router_id\": \"170.21.0.4\"\n#                 },\n#                 {\n#                     \"max_lsa\": {\n#                         \"count\": 12000\n#                     },\n#                     \"process_id\": 2,\n#                     \"redistribute\": [\n#                         {\n#                             \"isis_level\": \"level-1\",\n#                             \"routes\": \"isis\"\n#                         }\n#                     ],\n#                     \"vrf\": \"vrf01\"\n#                 },\n#                 {\n#                     \"max_lsa\": {\n#                         \"count\": 12000\n#                     },\n#                     \"process_id\": 3,\n#                     \"redistribute\": [\n#                         {\n#                             \"routes\": \"connected\"\n#                         }\n#                     ],\n#                     \"vrf\": \"vrf02\"\n#                 }\n#             ]\n#         }\n#     ]\n\n  - name: override Ospf configs\n    arista.eos.eos_ospfv2:\n          config:\n            - processes:\n                - process_id: 2\n                  vrf: \"vrf01\"\n                  redistribute:\n                    - routes: \"connected\"\n\n          state: override\n\n# After State:\n\n# \"no router ospf 1\",\n# \"no router ospf 3\",\n# \"router ospf 2 vrf vrf01\",\n# \"no max-lsa  12000\",\n# \"no redistribute isis level-1\",\n# \"redistribute connected\"\n#\n# \"after\": [\n#         {\n#             \"processes\": [\n#                 {\n#                     \"max_lsa\": {\n#                         \"count\": 12000\n#                     },\n#                     \"process_id\": 2,\n#                     \"redistribute\": [\n#                         {\n#                             \"routes\": \"connected\"\n#                         }\n#                     ],\n#                     \"vrf\": \"vrf01\"\n#                 }\n#             ]\n#         }\n#     ]\n\n# Using Deleted:\n\n# localhost#show running-config | section ospf\n# router ospf 1\n#    router-id 170.21.0.4\n#    distance ospf intra-area 85\n#    redistribute static\n#    area 0.0.0.2 filter 10.1.1.0/24\n#    area 0.0.0.50 range 172.20.0.0/16 cost 34\n#    network 10.10.2.0/24 area 0.0.0.0\n#    network 10.10.3.0/24 area 0.0.0.0\n#    max-lsa 8000 40 ignore-time 6 ignore-count 3 reset-time 20\n#    adjacency exchange-start threshold 20045623\n#    default-information originate metric 100 metric-type 1\n# !\n# router ospf 2 vrf vrf01\n#    redistribute connected\n#    area 0.0.0.9 default-cost 20\n#    max-lsa 8000 40 ignore-time 6 ignore-count 3 reset-time 20\n# !\n# router ospf 3 vrf vrf02\n#    redistribute connected\n#    max-lsa 12000\n# localhost#\n#\n# \"before\": [\n#         {\n#             \"processes\": [\n#                 {\n#                     \"adjacency\": {\n#                         \"exchange_start\": {\n#                             \"threshold\": 20045623\n#                         }\n#                     },\n#                     \"areas\": [\n#                         {\n#                             \"filter\": {\n#                                 \"address\": \"10.1.1.0/24\"\n#                             },\n#                             \"id\": \"0.0.0.2\"\n#                         },\n#                         {\n#                             \"id\": \"0.0.0.50\",\n#                             \"range\": {\n#                                 \"address\": \"172.20.0.0/16\",\n#                                 \"cost\": 34\n#                             }\n#                         }\n#                     ],\n#                     \"default_information\": {\n#                         \"metric\": 100,\n#                         \"metric_type\": 1,\n#                         \"originate\": true\n#                     },\n#                     \"distance\": {\n#                         \"intra_area\": 85\n#                     },\n#                     \"max_lsa\": {\n#                         \"count\": 8000,\n#                         \"ignore_count\": 3,\n#                         \"ignore_time\": 6,\n#                         \"reset_time\": 20,\n#                         \"threshold\": 40\n#                     },\n#                     \"networks\": [\n#                         {\n#                             \"area\": \"0.0.0.0\",\n#                             \"prefix\": \"10.10.2.0/24\"\n#                         },\n#                         {\n#                             \"area\": \"0.0.0.0\",\n#                             \"prefix\": \"10.10.3.0/24\"\n#                         }\n#                     ],\n#                     \"process_id\": 1,\n#                     \"redistribute\": [\n#                         {\n#                             \"routes\": \"static\"\n#                         }\n#                     ],\n#                     \"router_id\": \"170.21.0.4\"\n#                 },\n#                 {\n#                     \"areas\": [\n#                         {\n#                             \"default_cost\": 20,\n#                             \"id\": \"0.0.0.9\"\n#                         }\n#                     ],\n#                     \"max_lsa\": {\n#                         \"count\": 8000,\n#                         \"ignore_count\": 3,\n#                         \"ignore_time\": 6,\n#                         \"reset_time\": 20,\n#                         \"threshold\": 40\n#                     },\n#                     \"process_id\": 2,\n#                     \"redistribute\": [\n#                         {\n#                             \"routes\": \"connected\"\n#                         }\n#                     ],\n#                     \"vrf\": \"vrf01\"\n#                 },\n#                 {\n#                     \"max_lsa\": {\n#                         \"count\": 12000\n#                     },\n#                     \"process_id\": 3,\n#                     \"redistribute\": [\n#                         {\n#                             \"routes\": \"connected\"\n#                         }\n#                     ],\n#                     \"vrf\": \"vrf02\"\n#                 }\n#             ]\n#         }\n#     ]\n\n  - name: Delete Ospf configs\n    arista.eos.eos_ospfv2:\n          config:\n            - processes:\n                - process_id: 1\n\n          state: deleted\n\n# After State:\n# Commands:\n# \"no router ospf 1\"\n\n# \"after\": [\n#         {\n#             \"processes\": [\n#                 {\n#                     \"areas\": [\n#                         {\n#                             \"default_cost\": 20,\n#                             \"id\": \"0.0.0.9\"\n#                         }\n#                     ],\n#                     \"max_lsa\": {\n#                         \"count\": 8000,\n#                         \"ignore_count\": 3,\n#                         \"ignore_time\": 6,\n#                         \"reset_time\": 20,\n#                         \"threshold\": 40\n#                     },\n#                     \"process_id\": 2,\n#                     \"redistribute\": [\n#                         {\n#                             \"routes\": \"connected\"\n#                         }\n#                     ],\n#                     \"vrf\": \"vrf01\"\n#                 },\n#                 {\n#                     \"max_lsa\": {\n#                         \"count\": 12000\n#                     },\n#                     \"process_id\": 3,\n#                     \"redistribute\": [\n#                         {\n#                             \"routes\": \"connected\"\n#                         }\n#                     ],\n#                     \"vrf\": \"vrf02\"\n#                 }\n#             ]\n#         }\n#     ]\n\n# Using gathered:\n# localhost#show running-config | section ospf\n# router ospf 2 vrf vrf01\n#    redistribute connected\n#    area 0.0.0.9 default-cost 20\n#    max-lsa 8000 40 ignore-time 6 ignore-count 3 reset-time 20\n# !\n# router ospf 3 vrf vrf02\n#    redistribute connected\n#    max-lsa 12000\n# localhost#\n\n  - name: replace Ospf configs\n    arista.eos.eos_ospfv2:\n          state: gathered\n\n# \"gathered\": [\n#         {\n#             \"processes\": [\n#                 {\n#                     \"areas\": [\n#                         {\n#                             \"default_cost\": 20,\n#                             \"id\": \"0.0.0.9\"\n#                         }\n#                     ],\n#                     \"max_lsa\": {\n#                         \"count\": 8000,\n#                         \"ignore_count\": 3,\n#                         \"ignore_time\": 6,\n#                         \"reset_time\": 20,\n#                         \"threshold\": 40\n#                     },\n#                     \"process_id\": 2,\n#                     \"redistribute\": [\n#                         {\n#                             \"routes\": \"connected\"\n#                         }\n#                     ],\n#                     \"vrf\": \"vrf01\"\n#                 },\n#                 {\n#                     \"max_lsa\": {\n#                         \"count\": 12000\n#                     },\n#                     \"process_id\": 3,\n#                     \"redistribute\": [\n#                         {\n#                             \"routes\": \"connected\"\n#                         }\n#                     ],\n#                     \"vrf\": \"vrf02\"\n#                 }\n#             ]\n#         }\n#     ]\n\n# Using parsed:\n# ------------\n\n# parsed.cfg\n# router ospf 1\n#    adjacency exchange-start threshold 20045623\n#    area 0.0.0.2 filter 10.1.1.0/24\n#    area 0.0.0.50  range 172.20.0.0/16 cost 34\n#    default-information originate  metric 100 metric-type 1\n#    distance ospf intra-area 85\n#    max-lsa  80000 40 ignore-count 3  ignore-time 6  reset-time 20\n#    network 10.10.2.0/24 area 0.0.0.0\n#    network 10.10.3.0/24 area 0.0.0.0\n#    redistribute static\n#    router-id 170.21.0.4\n# router ospf 2 vrf vrf01,\n#    area 0.0.0.9 default-cost 20\n#    max-lsa  80000 40 ignore-count 3  ignore-time 6  reset-time 20\n# router ospf 3 vrf vrf02\n#    redistribute static\n\n  - name: Parse Ospf configs\n    arista.eos.eos_ospfv2:\n          running_config: \"{{ lookup('file', './parsed.cfg') }}\"\n          state: parsed\n\n# \"parsed\": [\n#         {\n#             \"processes\": [\n#                 {\n#                     \"adjacency\": {\n#                         \"exchange_start\": {\n#                             \"threshold\": 20045623\n#                         }\n#                     },\n#                     \"areas\": [\n#                         {\n#                             \"filter\": {\n#                                 \"address\": \"10.1.1.0/24\"\n#                             },\n#                             \"id\": \"0.0.0.2\"\n#                         },\n#                         {\n#                             \"id\": \"0.0.0.50\",\n#                             \"range\": {\n#                                 \"address\": \"172.20.0.0/16\",\n#                                 \"cost\": 34\n#                             }\n#                         }\n#                     ],\n#                     \"default_information\": {\n#                         \"metric\": 100,\n#                         \"metric_type\": 1,\n#                         \"originate\": true\n#                     },\n#                     \"distance\": {\n#                         \"intra_area\": 85\n#                     },\n#                     \"max_lsa\": {\n#                         \"count\": 80000,\n#                         \"ignore_count\": 3,\n#                         \"ignore_time\": 6,\n#                         \"reset_time\": 20,\n#                         \"threshold\": 40\n#                     },\n#                     \"networks\": [\n#                         {\n#                             \"area\": \"0.0.0.0\",\n#                             \"prefix\": \"10.10.2.0/24\"\n#                         },\n#                         {\n#                             \"area\": \"0.0.0.0\",\n#                             \"prefix\": \"10.10.3.0/24\"\n#                         }\n#                     ],\n#                     \"process_id\": 1,\n#                     \"redistribute\": [\n#                         {\n#                             \"routes\": \"static\"\n#                         }\n#                     ],\n#                     \"router_id\": \"170.21.0.4\"\n#                 },\n#                 {\n#                     \"areas\": [\n#                         {\n#                             \"default_cost\": 20,\n#                             \"id\": \"0.0.0.9\"\n#                         }\n#                     ],\n#                     \"max_lsa\": {\n#                         \"count\": 80000,\n#                         \"ignore_count\": 3,\n#                         \"ignore_time\": 6,\n#                         \"reset_time\": 20,\n#                         \"threshold\": 40\n#                     },\n#                     \"process_id\": 2,\n#                     \"vrf\": \"vrf01,\"\n#                 },\n#                 {\n#                     \"process_id\": 3,\n#                     \"redistribute\": [\n#                         {\n#                             \"routes\": \"static\"\n#                         }\n#                     ],\n#                     \"vrf\": \"vrf02\"\n#                 }\n#             ]\n#         }\n#     ]\n\n# Using rendered:\n# --------------\n\n  - name: replace Ospf configs\n    arista.eos.eos_ospfv2:\n          config:\n            - processes:\n              - process_id: 1\n                adjacency:\n                  exchange_start:\n                    threshold: 20045623\n                areas:\n                - filter:\n                    address: 10.1.1.0/24\n                  id: 0.0.0.2\n                - id: 0.0.0.50\n                  range:\n                    address: 172.20.0.0/16\n                    cost: 34\n                default_information:\n                  metric: 100\n                  metric_type: 1\n                  originate: true\n                distance:\n                  intra_area: 85\n                max_lsa:\n                  count: 8000\n                  ignore_count: 3\n                  ignore_time: 6\n                  reset_time: 20\n                  threshold: 40\n                networks:\n                - area: 0.0.0.0\n                  prefix: 10.10.2.0/24\n                - area: 0.0.0.0\n                  prefix: 10.10.3.0/24\n                redistribute:\n                - routes: static\n                router_id: 170.21.0.4\n          state: rendered\n\n# \"rendered\": [\n#         \"router ospf 1\",\n#         \"adjacency exchange-start threshold 20045623\",\n#         \"area 0.0.0.2 filter 10.1.1.0/24\",\n#         \"area 0.0.0.50  range 172.20.0.0/16 cost 34\",\n#         \"default-information originate metric 100 metric-type 1\",\n#         \"distance ospf intra-area 85\",\n#         \"max-lsa  8000 40 ignore-count 3  ignore-time 6  reset-time 20\",\n#         \"network 10.10.2.0/24 area 0.0.0.0\",\n#         \"network 10.10.3.0/24 area 0.0.0.0\",\n#         \"redistribute static\",\n#         \"router-id 170.21.0.4\"\n#     ]\n#\n\n"
  },
  "arista.eos.eos_ospfv3": {
    "doc": {
      "description": "This module configures and manages the attributes of ospfv3 on Arista EOS platforms.",
      "has_action": true,
      "notes": "Tested against Arista EOS 4.24.6F\nThis module works with connection C(network_cli). See the L(EOS Platform Options,../network/user_guide/platform_eos.html).",
      "options": {
        "config": {
          "aliases": [],
          "description": "A list of configurations for ospfv3.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "processes": {
              "aliases": [],
              "description": "A list of dictionary specifying the ospfv3 processes.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "address_family": {
                  "aliases": [],
                  "description": "Enable address family and enter its config mode",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "adjacency": {
                      "aliases": [],
                      "description": "Configure adjacency options for OSPF instance.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "exchange_start": {
                          "aliases": [],
                          "description": "Configure exchange-start options for OSPF instance.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "threshold": {
                              "aliases": [],
                              "description": "Number of peers to bring up simultaneously.",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        }
                      }
                    },
                    "afi": {
                      "aliases": [],
                      "description": "address family .",
                      "type": "str",
                      "required": false,
                      "choices": [
                        "ipv4",
                        "ipv6"
                      ],
                      "suboptions": {}
                    },
                    "areas": {
                      "aliases": [],
                      "description": "Specifies the configuration for OSPF areas",
                      "type": "list",
                      "required": false,
                      "elements": "dict",
                      "suboptions": {
                        "area_id": {
                          "aliases": [],
                          "description": "Specifies a 32 bit number expressed in decimal or dotted-decimal notation.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "authentication": {
                          "aliases": [],
                          "description": "Configure authentication for the area incase of ospfv3.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "algorithm": {
                              "aliases": [],
                              "description": "Name of algorithm to be used.",
                              "type": "str",
                              "required": false,
                              "choices": [
                                "md5",
                                "sha1"
                              ],
                              "suboptions": {}
                            },
                            "encrypt_key": {
                              "aliases": [],
                              "description": "If False, key string is not encrypted",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "hidden_key": {
                              "aliases": [],
                              "description": "If True, Specifies that a HIDDEN key will follow.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "key": {
                              "aliases": [],
                              "description": "128 bit MD5 key or 140 bit SHA1 key.",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            },
                            "passphrase": {
                              "aliases": [],
                              "description": "Passphrase String for deriving keys for authentication and encryption.",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            },
                            "spi": {
                              "aliases": [],
                              "description": "Specify the SPI value",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "default_cost": {
                          "aliases": [],
                          "description": "Specify the cost for default summary route in stub/NSSA area.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "encryption": {
                          "aliases": [],
                          "description": "Configure encryption for the area",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "algorithm": {
                              "aliases": [],
                              "description": "name of the algorithm to be used.",
                              "type": "str",
                              "required": false,
                              "choices": [
                                "sha1",
                                "md5"
                              ],
                              "suboptions": {}
                            },
                            "encrypt_key": {
                              "aliases": [],
                              "description": "If False, key string is not encrypted",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "encryption": {
                              "aliases": [],
                              "description": "name of encryption to be used.",
                              "type": "str",
                              "required": false,
                              "choices": [
                                "3des-cbc",
                                "aes-128-cbc",
                                "aes-192-cbc",
                                "aes-256-cbc",
                                "null"
                              ],
                              "suboptions": {}
                            },
                            "hidden_key": {
                              "aliases": [],
                              "description": "If True, Specifies that a HIDDEN key will follow.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "key": {
                              "aliases": [],
                              "description": "128 bit MD5 key or 140 bit SHA1 key.",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            },
                            "passphrase": {
                              "aliases": [],
                              "description": "Passphrase String for deriving keys for authentication and encryption.",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            },
                            "spi": {
                              "aliases": [],
                              "description": "Specify the SPI value",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "nssa": {
                          "aliases": [],
                          "description": "Configures NSSA parameters.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "default_information_originate": {
                              "aliases": [],
                              "description": "Originate default Type 7 LSA.",
                              "type": "dict",
                              "required": false,
                              "suboptions": {
                                "metric": {
                                  "aliases": [],
                                  "description": "Metric for default route.",
                                  "type": "int",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "metric_type": {
                                  "aliases": [],
                                  "description": "Metric type for default route.",
                                  "type": "int",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "nssa_only": {
                                  "aliases": [],
                                  "description": "Limit default advertisement to this NSSA area.",
                                  "type": "bool",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "set": {
                                  "aliases": [],
                                  "description": "True if only default information orignate is set",
                                  "type": "bool",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            },
                            "no_summary": {
                              "aliases": [],
                              "description": "Filter all type-3 LSAs in the nssa area.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "nssa_only": {
                              "aliases": [],
                              "description": "Disable Type-7 LSA p-bit setting",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "set": {
                              "aliases": [],
                              "description": "True if only nssa is set",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "translate": {
                              "aliases": [],
                              "description": "Enable LSA translation.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "ranges": {
                          "aliases": [],
                          "description": "Configure route summarization.",
                          "type": "list",
                          "required": false,
                          "elements": "dict",
                          "suboptions": {
                            "address": {
                              "aliases": [],
                              "description": "IP address.",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            },
                            "advertise": {
                              "aliases": [],
                              "description": "Enable Advertisement of the range.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "cost": {
                              "aliases": [],
                              "description": "Configures the metric.",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "subnet_address": {
                              "aliases": [],
                              "description": "IP address with mask length",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            },
                            "subnet_mask": {
                              "aliases": [],
                              "description": "IP subnet mask",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "stub": {
                          "aliases": [],
                          "description": "Stub area.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "set": {
                              "aliases": [],
                              "description": "True if only stub is set",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "summary_lsa": {
                              "aliases": [],
                              "description": "If False , Filter all type-3 LSAs in the stub area.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        }
                      }
                    },
                    "auto_cost": {
                      "aliases": [],
                      "description": "Set auto-cost.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "reference_bandwidth": {
                          "aliases": [],
                          "description": "reference bandwidth in megabits per sec.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "bfd": {
                      "aliases": [],
                      "description": "Enable BFD.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "all_interfaces": {
                          "aliases": [],
                          "description": "Enable BFD on all interfaces.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "default_information": {
                      "aliases": [],
                      "description": "Control distribution of default information.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "always": {
                          "aliases": [],
                          "description": "Always advertise default route.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "metric": {
                          "aliases": [],
                          "description": "Metric for default route.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "metric_type": {
                          "aliases": [],
                          "description": "Metric type for default route.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "originate": {
                          "aliases": [],
                          "description": "Distribute a default route.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "route_map": {
                          "aliases": [],
                          "description": "Specify which route-map to use.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "default_metric": {
                      "aliases": [],
                      "description": "Configure the default metric for redistributed routes.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "distance": {
                      "aliases": [],
                      "description": "Specifies the administrative distance for routes.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "fips_restrictions": {
                      "aliases": [],
                      "description": "Use FIPS compliant algorithms",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "graceful_restart": {
                      "aliases": [],
                      "description": "Enable graceful restart mode.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "grace_period": {
                          "aliases": [],
                          "description": "Specify maximum time to wait for graceful-restart to complete.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "set": {
                          "aliases": [],
                          "description": "When true sets the grace_fulrestart config alone.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "graceful_restart_helper": {
                      "aliases": [],
                      "description": "If True, Enable graceful restart helper.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "log_adjacency_changes": {
                      "aliases": [],
                      "description": "To configure link-state changes and transitions of OSPFv3 neighbors.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "detail": {
                          "aliases": [],
                          "description": "If true , configures the switch to log all link-state changes.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "set": {
                          "aliases": [],
                          "description": "When true sets the log_adjacency_changes config alone.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "max_metric": {
                      "aliases": [],
                      "description": "Set maximum metric.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "router_lsa": {
                          "aliases": [],
                          "description": "Maximum metric in self-originated router-LSAs.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "external_lsa": {
                              "aliases": [],
                              "description": "Override external-lsa metric with max-metric value.",
                              "type": "dict",
                              "required": false,
                              "suboptions": {
                                "max_metric_value": {
                                  "aliases": [],
                                  "description": "Set max metric value for external LSAs.",
                                  "type": "int",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "set": {
                                  "aliases": [],
                                  "description": "Set external-lsa attribute.",
                                  "type": "bool",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            },
                            "include_stub": {
                              "aliases": [],
                              "description": "Set maximum metric for stub links in router-LSAs.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "on_startup": {
                              "aliases": [],
                              "description": "Set maximum metric temporarily after reboot.",
                              "type": "dict",
                              "required": false,
                              "suboptions": {
                                "wait_for_bgp": {
                                  "aliases": [],
                                  "description": "Let BGP decide when to originate router-LSA with normal metric",
                                  "type": "bool",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "wait_period": {
                                  "aliases": [],
                                  "description": "Wait period in seconds after startup.",
                                  "type": "int",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            },
                            "set": {
                              "aliases": [],
                              "description": "Set router-lsa attribute.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "summary_lsa": {
                              "aliases": [],
                              "description": "Override summary-lsa metric with max-metric value.",
                              "type": "dict",
                              "required": false,
                              "suboptions": {
                                "max_metric_value": {
                                  "aliases": [],
                                  "description": "Set max metric value for external LSAs.",
                                  "type": "int",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "set": {
                                  "aliases": [],
                                  "description": "Set external-lsa attribute.",
                                  "type": "bool",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "maximum_paths": {
                      "aliases": [],
                      "description": "Maximum number of next-hops in an ECMP route.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "passive_interface": {
                      "aliases": [],
                      "description": "Include interface but without actively running OSPF.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "redistribute": {
                      "aliases": [],
                      "description": "Specifies the routes to be redistributed.",
                      "type": "list",
                      "required": false,
                      "elements": "dict",
                      "suboptions": {
                        "route_map": {
                          "aliases": [],
                          "description": "Specify which route map to use.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "routes": {
                          "aliases": [],
                          "description": "Route types (BGP,static,connected)",
                          "type": "str",
                          "required": false,
                          "choices": [
                            "bgp",
                            "connected",
                            "static"
                          ],
                          "suboptions": {}
                        }
                      }
                    },
                    "router_id": {
                      "aliases": [],
                      "description": "32-bit number assigned to a router running OSPFv3.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "shutdown": {
                      "aliases": [],
                      "description": "Disable the OSPF instance.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "timers": {
                      "aliases": [],
                      "description": "Configure OSPF timers.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "lsa": {
                          "aliases": [],
                          "description": "Configure OSPFv3 LSA timers.",
                          "type": "raw",
                          "required": false,
                          "suboptions": {
                            "direction": {
                              "aliases": [],
                              "description": "Configure OSPFv3 LSA receiving/transmission timers.",
                              "type": "str",
                              "required": false,
                              "choices": [
                                "rx",
                                "tx"
                              ],
                              "suboptions": {}
                            },
                            "initial": {
                              "aliases": [],
                              "description": "Initial SPF schedule delay in msecs.",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "max": {
                              "aliases": [],
                              "description": "Max wait time between two SPFs in msecs.",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "min": {
                              "aliases": [],
                              "description": "Min Hold time between two SPFs in msecs",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "out_delay": {
                          "aliases": [],
                          "description": "Configure out-delay timer.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "pacing": {
                          "aliases": [],
                          "description": "Configure OSPF packet pacing.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "spf": {
                          "aliases": [],
                          "description": "Configure OSPFv3 spf timers.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "initial": {
                              "aliases": [],
                              "description": "Initial SPF schedule delay in msecs.",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "max": {
                              "aliases": [],
                              "description": "Max wait time between two SPFs in msecs.",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "min": {
                              "aliases": [],
                              "description": "Min Hold time between two SPFs in msecs",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "throttle": {
                          "aliases": [],
                          "description": "This command is deprecated by 'timers lsa' or 'timers spf'.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "initial": {
                              "aliases": [],
                              "description": "Initial SPF schedule delay in msecs.",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "lsa": {
                              "aliases": [],
                              "description": "Configure threshold for retransmission of lsa",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "max": {
                              "aliases": [],
                              "description": "Max wait time between two SPFs in msecs.",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "min": {
                              "aliases": [],
                              "description": "Min Hold time between two SPFs in msecs",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "spf": {
                              "aliases": [],
                              "description": "Configure time between SPF calculations",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "adjacency": {
                  "aliases": [],
                  "description": "Configure adjacency options for OSPF instance.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "exchange_start": {
                      "aliases": [],
                      "description": "Configure exchange-start options for OSPF instance.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "threshold": {
                          "aliases": [],
                          "description": "Number of peers to bring up simultaneously.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    }
                  }
                },
                "areas": {
                  "aliases": [],
                  "description": "Specifies the configuration for OSPF areas",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "area_id": {
                      "aliases": [],
                      "description": "Specifies a 32 bit number expressed in decimal or dotted-decimal notation.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "authentication": {
                      "aliases": [],
                      "description": "Configure authentication for the area incase of ospfv3.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "algorithm": {
                          "aliases": [],
                          "description": "Name of algorithm to be used.",
                          "type": "str",
                          "required": false,
                          "choices": [
                            "md5",
                            "sha1"
                          ],
                          "suboptions": {}
                        },
                        "encrypt_key": {
                          "aliases": [],
                          "description": "If False, key string is not encrypted",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "hidden_key": {
                          "aliases": [],
                          "description": "If True, Specifies that a HIDDEN key will follow.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "key": {
                          "aliases": [],
                          "description": "128 bit MD5 key or 140 bit SHA1 key.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "passphrase": {
                          "aliases": [],
                          "description": "Passphrase String for deriving keys for authentication and encryption.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "spi": {
                          "aliases": [],
                          "description": "Specify the SPI value",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "default_cost": {
                      "aliases": [],
                      "description": "Specify the cost for default summary route in stub/NSSA area.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "encryption": {
                      "aliases": [],
                      "description": "Configure encryption for the area",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "algorithm": {
                          "aliases": [],
                          "description": "name of the algorithm to be used.",
                          "type": "str",
                          "required": false,
                          "choices": [
                            "sha1",
                            "md5"
                          ],
                          "suboptions": {}
                        },
                        "encrypt_key": {
                          "aliases": [],
                          "description": "If False, key string is not encrypted",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "encryption": {
                          "aliases": [],
                          "description": "name of encryption to be used.",
                          "type": "str",
                          "required": false,
                          "choices": [
                            "3des-cbc",
                            "aes-128-cbc",
                            "aes-192-cbc",
                            "aes-256-cbc",
                            "null"
                          ],
                          "suboptions": {}
                        },
                        "hidden_key": {
                          "aliases": [],
                          "description": "If True, Specifies that a HIDDEN key will follow.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "key": {
                          "aliases": [],
                          "description": "128 bit MD5 key or 140 bit SHA1 key.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "passphrase": {
                          "aliases": [],
                          "description": "Passphrase String for deriving keys for authentication and encryption.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "spi": {
                          "aliases": [],
                          "description": "Specify the SPI value",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "nssa": {
                      "aliases": [],
                      "description": "Configures NSSA parameters.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "default_information_originate": {
                          "aliases": [],
                          "description": "Originate default Type 7 LSA.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "metric": {
                              "aliases": [],
                              "description": "Metric for default route.",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "metric_type": {
                              "aliases": [],
                              "description": "Metric type for default route.",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "nssa_only": {
                              "aliases": [],
                              "description": "Limit default advertisement to this NSSA area.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "set": {
                              "aliases": [],
                              "description": "True if only default information orignate is set",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "no_summary": {
                          "aliases": [],
                          "description": "Filter all type-3 LSAs in the nssa area.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "nssa_only": {
                          "aliases": [],
                          "description": "Disable Type-7 LSA p-bit setting",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "set": {
                          "aliases": [],
                          "description": "True if only nssa is set",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "translate": {
                          "aliases": [],
                          "description": "Enable LSA translation.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "stub": {
                      "aliases": [],
                      "description": "Stub area.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "set": {
                          "aliases": [],
                          "description": "True if only stub is set.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "summary_lsa": {
                          "aliases": [],
                          "description": "If False , Filter all type-3 LSAs in the stub area.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    }
                  }
                },
                "auto_cost": {
                  "aliases": [],
                  "description": "Set auto-cost.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "reference_bandwidth": {
                      "aliases": [],
                      "description": "reference bandwidth in megabits per sec.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "bfd": {
                  "aliases": [],
                  "description": "Enable BFD.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "all_interfaces": {
                      "aliases": [],
                      "description": "Enable BFD on all interfaces.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "fips_restrictions": {
                  "aliases": [],
                  "description": "Use FIPS compliant algorithms",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "graceful_restart": {
                  "aliases": [],
                  "description": "Enable graceful restart mode.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "grace_period": {
                      "aliases": [],
                      "description": "Specify maximum time to wait for graceful-restart to complete.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "set": {
                      "aliases": [],
                      "description": "When true sets the grace_fulrestart config alone.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "graceful_restart_helper": {
                  "aliases": [],
                  "description": "If True, Enable graceful restart helper.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "log_adjacency_changes": {
                  "aliases": [],
                  "description": "To configure link-state changes and transitions of OSPFv3 neighbors.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "detail": {
                      "aliases": [],
                      "description": "If true , configures the switch to log all link-state changes.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "set": {
                      "aliases": [],
                      "description": "When true sets the log_adjacency_changes config alone.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "max_metric": {
                  "aliases": [],
                  "description": "Set maximum metric.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "router_lsa": {
                      "aliases": [],
                      "description": "Maximum metric in self-originated router-LSAs.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "external_lsa": {
                          "aliases": [],
                          "description": "Override external-lsa metric with max-metric value.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "max_metric_value": {
                              "aliases": [],
                              "description": "Set max metric value for external LSAs.",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "set": {
                              "aliases": [],
                              "description": "Set external-lsa attribute.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "include_stub": {
                          "aliases": [],
                          "description": "Set maximum metric for stub links in router-LSAs.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "on_startup": {
                          "aliases": [],
                          "description": "Set maximum metric temporarily after reboot.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "wait_for_bgp": {
                              "aliases": [],
                              "description": "Let BGP decide when to originate router-LSA with normal metric",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "wait_period": {
                              "aliases": [],
                              "description": "Wait period in seconds after startup.",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "set": {
                          "aliases": [],
                          "description": "Set router-lsa attribute.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "summary_lsa": {
                          "aliases": [],
                          "description": "Override summary-lsa metric with max-metric value.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "max_metric_value": {
                              "aliases": [],
                              "description": "Set max metric value for external LSAs.",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "set": {
                              "aliases": [],
                              "description": "Set external-lsa attribute.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "passive_interface": {
                  "aliases": [],
                  "description": "Include interface but without actively running OSPF.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "router_id": {
                  "aliases": [],
                  "description": "32-bit number assigned to a router running OSPFv3.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "shutdown": {
                  "aliases": [],
                  "description": "Disable the OSPF instance.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "timers": {
                  "aliases": [],
                  "description": "Configure OSPF timers.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "lsa": {
                      "aliases": [],
                      "description": "Configure OSPFv3 LSA timers.",
                      "type": "raw",
                      "required": false,
                      "suboptions": {
                        "direction": {
                          "aliases": [],
                          "description": "Configure OSPFv3 LSA receiving/transmission timers.",
                          "type": "str",
                          "required": false,
                          "choices": [
                            "rx",
                            "tx"
                          ],
                          "suboptions": {}
                        },
                        "initial": {
                          "aliases": [],
                          "description": "Initial SPF schedule delay in msecs.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "max": {
                          "aliases": [],
                          "description": "Max wait time between two SPFs in msecs.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "min": {
                          "aliases": [],
                          "description": "Min Hold time between two SPFs in msecs",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "out_delay": {
                      "aliases": [],
                      "description": "Configure out-delay timer.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "pacing": {
                      "aliases": [],
                      "description": "Configure OSPF packet pacing.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "spf": {
                      "aliases": [],
                      "description": "Configure OSPFv3 spf timers.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "initial": {
                          "aliases": [],
                          "description": "Initial SPF schedule delay in msecs.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "max": {
                          "aliases": [],
                          "description": "Max wait time between two SPFs in msecs.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "min": {
                          "aliases": [],
                          "description": "Min Hold time between two SPFs in msecs",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "throttle": {
                      "aliases": [],
                      "description": "This command is deprecated by 'timers lsa' or 'timers spf'.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "initial": {
                          "aliases": [],
                          "description": "Initial SPF schedule delay in msecs.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "lsa": {
                          "aliases": [],
                          "description": "Configure threshold for retransmission of lsa",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "max": {
                          "aliases": [],
                          "description": "Max wait time between two SPFs in msecs.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "min": {
                          "aliases": [],
                          "description": "Min Hold time between two SPFs in msecs",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "spf": {
                          "aliases": [],
                          "description": "Configure time between SPF calculations",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    }
                  }
                },
                "vrf": {
                  "aliases": [],
                  "description": "VRF name .",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            }
          }
        },
        "running_config": {
          "aliases": [],
          "description": "This option is used only with state I(parsed).\nThe value of this option should be the output received from the EOS device by executing the command B(show running-config | section ospfv3).\nThe state I(parsed) reads the configuration from C(running_config) option and transforms it into Ansible structured data as per the resource module's argspec and the value is then returned in the I(parsed) key within the result.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The state the configuration should be left in.",
          "default": "merged",
          "type": "str",
          "required": false,
          "choices": [
            "deleted",
            "merged",
            "overridden",
            "replaced",
            "gathered",
            "rendered",
            "parsed"
          ],
          "suboptions": {}
        }
      },
      "short_description": "OSPFv3 resource module",
      "version_added": "1.1.0"
    },
    "examples": "\n\n# Using merged\n\n# Before state\n\n# veos#show running-config | section ospfv3\n# veos#\n\n\n  -  arista.eos.eos_ospfv3:\n      config:\n        processes:\n          - address_family:\n              - timers:\n                  lsa: 22\n                graceful_restart:\n                  grace_period: 35\n                afi: \"ipv6\"\n            timers:\n              pacing: 55\n            fips_restrictions: True\n            router_id: \"2.2.2.2\"\n            vrf: \"vrfmerge\"\n\n\n# After state\n\n# veos#show running-config | section ospfv3\n# router ospfv3 vrf vrfmerge\n#    router-id 2.2.2.2\n# test\n#    fips restrictions\n#    timers pacing flood 55\n#    !\n#    address-family ipv6\n#       fips restrictions\n#       timers lsa arrival 22\n#       graceful-restart grace-period 35\n# veos#\n\n# Module Execution\n#     \"after\": {\n#         \"processes\": [\n#             {\n#                 \"address_family\": [\n#                     {\n#                         \"afi\": \"ipv6\",\n#                         \"fips_restrictions\": true,\n#                         \"graceful_restart\": {\n#                             \"grace_period\": 35\n#                         },\n#                         \"timers\": {\n#                             \"lsa\": 22\n#                         }\n#                     }\n#                 ],\n#                 \"fips_restrictions\": true,\n#                 \"router_id\": \"2.2.2.2\",\n#                 \"timers\": {\n#                     \"pacing\": 55\n#                 },\n#                 \"vrf\": \"vrfmerge\"\n#             }\n#         ]\n#     },\n#     \"before\": {},\n#     \"changed\": true,\n#     \"commands\": [\n#         \"router ospfv3 vrf vrfmerge\",\n#         \"address-family ipv6\",\n#         \"graceful-restart grace-period 35\",\n#         \"timers lsa arrival 22\",\n#         \"exit\",\n#         \"timers pacing flood 55\",\n#         \"fips restrictions\",\n#         \"router-id 2.2.2.2\",\n#         \"exit\"\n#     ],\n\n\n# using replaced\n\n# before state\n\n# veos#show running-config | section ospfv3\n# router ospfv3\n#    fips restrictions\n#    area 0.0.0.0 encryption ipsec spi 43 esp null md5 passphrase 7 h8pZp9eprTYjjoY/NKFFe0Ei7x03Y7dyLotRhI0a5t4=\n# !\n# router ospfv3 vrf vrfmerge\n#    router-id 2.2.2.2\n#    fips restrictions\n#    timers pacing flood 55\n#    !\n#    address-family ipv6\n#       fips restrictions\n#       timers lsa arrival 22\n#       graceful-restart grace-period 35\n# veos#\n\n\n  - arista.eos.eos_ospfv3:\n      config:\n        processes:\n          - areas:\n              - area_id: \"0.0.0.0\"\n                encryption:\n                  spi: 43\n                  encryption: \"null\"\n                  algorithm: \"md5\"\n                  encrypt_key: False\n                  passphrase: \"7hl8FV3lZ6H1mAKpjL47hQ==\"\n            vrf: \"default\"\n            address_family:\n              - afi: \"ipv4\"\n                router_id: \"7.1.1.1\"\n      state: replaced\n\n# After state\n# veos#show running-config | section ospfv3\n# router ospfv3\n#    area 0.0.0.0 encryption ipsec spi 43 esp null md5 passphrase 7 h8pZp9eprTYjjoY/NKFFe0Ei7x03Y7dyLotRhI0a5t4=\n# !\n# router ospfv3 vrf vrfmerge\n#    passive-interface default\n#    !\n#    address-family ipv6\n#       area 0.0.0.3 range 10.1.2.0/24\n#       area 0.0.0.3 range 60.1.0.0/16 cost 30\n# veos#\n\n# Module execution\n\n# \"after\": {\n#     \"processes\": [\n#         {\n#             \"areas\": [\n#                 {\n#                     \"area_id\": \"0.0.0.0\",\n#                     \"encryption\": {\n#                         \"algorithm\": \"md5\",\n#                         \"encryption\": \"null\",\n#                         \"hidden_key\": true,\n#                         \"passphrase\": \"h8pZp9eprTYjjoY/NKFFe0Ei7x03Y7dyLotRhI0a5t4=\"\n#                     }\n#                 }\n#             ],\n#             \"vrf\": \"default\"\n#         },\n#         {\n#             \"address_family\": [\n#                 {\n#                     \"afi\": \"ipv6\",\n#                     \"areas\": [\n#                         {\n#                             \"area_id\": \"0.0.0.3\",\n#                             \"ranges\": [\n#                                 {\n#                                     \"address\": \"10.1.2.0/24\"\n#                                 },\n#                                 {\n#                                     \"address\": \"60.1.0.0/16\",\n#                                     \"cost\": 30\n#                                 }\n#                             ]\n#                         }\n#                     ]\n#                 }\n#             ],\n#             \"passive_interface\": true,\n#             \"vrf\": \"vrfmerge\"\n#         }\n#     ]\n# },\n# \"before\": {\n#     \"processes\": [\n#         {\n#             \"areas\": [\n#                 {\n#                     \"area_id\": \"0.0.0.0\",\n#                     \"encryption\": {\n#                         \"algorithm\": \"md5\",\n#                         \"encryption\": \"null\",\n#                         \"hidden_key\": true,\n#                         \"passphrase\": \"h8pZp9eprTYjjoY/NKFFe0Ei7x03Y7dyLotRhI0a5t4=\"\n#                     }\n#                 }\n#             ],\n#             \"fips_restrictions\": true,\n#             \"vrf\": \"default\"\n#         },\n#         {\n#             \"address_family\": [\n#                 {\n#                     \"afi\": \"ipv6\",\n#                     \"fips_restrictions\": true,\n#                     \"graceful_restart\": {\n#                         \"grace_period\": 35\n#                     },\n#                     \"timers\": {\n#                         \"lsa\": 22\n#                     }\n#                 }\n#             ],\n#             \"fips_restrictions\": true,\n#             \"router_id\": \"2.2.2.2\",\n#             \"timers\": {\n#                 \"pacing\": 55\n#             },\n#             \"vrf\": \"vrfmerge\"\n#         }\n#     ]\n# },\n# \"changed\": true,\n# \"commands\": [\n#     \"router ospfv3 vrf vrfmerge\",\n#     \"address-family ipv6\",\n#     \"no fips restrictions\",\n#     \"no graceful-restart\",\n#     \"no timers lsa arrival 22\",\n#     \"area 0.0.0.3 range 10.1.2.2/24 advertise\",\n#     \"area 0.0.0.3 range 60.1.1.1 255.255.0.0 cost 30\",\n#     \"exit\",\n#     \"passive-interface default\",\n#     \"no router-id\",\n#     \"no fips restrictions\",\n#     \"no timers pacing flood 55\",\n#     \"exit\"\n# ],\n\n\n# using overridden\n\n# before state\n\n# veos#show running-config | section ospfv3\n# router ospfv3\n#    area 0.0.0.0 encryption ipsec spi 43 esp null md5 passphrase 7 h8pZp9eprTYjjoY/NKFFe0Ei7x03Y7dyLotRhI0a5t4=\n# !\n# router ospfv3 vrf vrfmerge\n#    passive-interface default\n#    !\n#    address-family ipv6\n#       area 0.0.0.3 range 10.1.2.0/24\n#       area 0.0.0.3 range 60.1.0.0/16 cost 30\n# veos#\n\n\n  -  arista.eos.eos_ospfv3:\n      config:\n        processes:\n          - address_family:\n              - areas:\n                  - area_id: \"0.0.0.3\"\n                    ranges:\n                      - address: 10.1.2.2/24\n                        advertise: True\n                      - address: 60.1.1.1\n                        subnet_mask: 255.255.0.0\n                        cost: 30\n                afi: \"ipv6\"\n            passive_interface: True\n            vrf: \"vrfmerge\"\n      state: overridden\n\n# After state\n\n# veos#show running-config | section ospfv3\n# router ospfv3 vrf vrfmerge\n#    passive-interface default\n#    !\n#    address-family ipv6\n#       area 0.0.0.3 range 10.1.2.0/24\n#       area 0.0.0.3 range 60.1.0.0/16 cost 30\n# veos#\n\n\n\n# Module execution\n\n# \"after\": {\n#     \"processes\": [\n#         {\n#             \"address_family\": [\n#                 {\n#                     \"afi\": \"ipv6\",\n#                     \"areas\": [\n#                         {\n#                             \"area_id\": \"0.0.0.3\",\n#                             \"ranges\": [\n#                                 {\n#                                     \"address\": \"10.1.2.0/24\"\n#                                 },\n#                                 {\n#                                     \"address\": \"60.1.0.0/16\",\n#                                     \"cost\": 30\n#                                 }\n#                             ]\n#                         }\n#                     ]\n#                 }\n#             ],\n#             \"passive_interface\": true,\n#             \"vrf\": \"vrfmerge\"\n#         }\n#     ]\n# },\n# \"before\": {\n#     \"processes\": [\n#         {\n#             \"areas\": [\n#                 {\n#                     \"area_id\": \"0.0.0.0\",\n#                     \"encryption\": {\n#                         \"algorithm\": \"md5\",\n#                         \"encryption\": \"null\",\n#                         \"hidden_key\": true,\n#                         \"passphrase\": \"h8pZp9eprTYjjoY/NKFFe0Ei7x03Y7dyLotRhI0a5t4=\"\n#                     }\n#                 }\n#             ],\n#             \"vrf\": \"default\"\n#         },\n#         {\n#             \"address_family\": [\n#                 {\n#                     \"afi\": \"ipv6\",\n#                     \"areas\": [\n#                         {\n#                             \"area_id\": \"0.0.0.3\",\n#                             \"ranges\": [\n#                                 {\n#                                     \"address\": \"10.1.2.0/24\"\n#                                 },\n#                                 {\n#                                     \"address\": \"60.1.0.0/16\",\n#                                     \"cost\": 30\n#                                 }\n#                             ]\n#                         }\n#                     ]\n#                 }\n#             ],\n#             \"passive_interface\": true,\n#             \"vrf\": \"vrfmerge\"\n#         }\n#     ]\n# },\n# \"changed\": true,\n# \"commands\": [\n#     \"no router ospfv3\",\n#     \"router ospfv3 vrf vrfmerge\",\n#     \"address-family ipv6\",\n#     \"no area 0.0.0.3 range 10.1.2.0/24\",\n#     \"no area 0.0.0.3 range 60.1.0.0/16 cost 30\",\n#     \"area 0.0.0.3 range 10.1.2.2/24 advertise\",\n#     \"area 0.0.0.3 range 60.1.1.1 255.255.0.0 cost 30\",\n#     \"exit\",\n#     \"exit\"\n# ],\n\n# using deleted\n\n# Before state\n\n# veos#show running-config | section ospfv3\n# router ospfv3\n#    area 0.0.0.0 encryption ipsec spi 43 esp null md5 passphrase 7 h8pZp9eprTYjjoY/NKFFe0Ei7x03Y7dyLotRhI0a5t4=\n# !\n# router ospfv3 vrf vrfmerge\n#    passive-interface default\n#    !\n#    address-family ipv4\n#       redistribute connected\n#       redistribute static route-map MAP01\n#       area 0.0.0.3 range 10.1.2.0/24\n#       area 0.0.0.3 range 60.1.0.0/16 cost 30\n#    !\n#    address-family ipv6\n#       area 0.0.0.3 range 10.1.2.0/24\n#       area 0.0.0.3 range 60.1.0.0/16 cost 30\n# veos#\n\n\n  -  arista.eos.eos_ospfv3:\n      config:\n        processes:\n          - vrf: \"default\"\n      state: deleted\n\n# After state\n\n# veos#show running-config | section ospfv3\n# router ospfv3 vrf vrfmerge\n#    passive-interface default\n#    !\n#    address-family ipv4\n#       redistribute connected\n#       redistribute static route-map MAP01\n#       area 0.0.0.3 range 10.1.2.0/24\n#       area 0.0.0.3 range 60.1.0.0/16 cost 30\n#    !\n#    address-family ipv6\n#       area 0.0.0.3 range 10.1.2.0/24\n#       area 0.0.0.3 range 60.1.0.0/16 cost 30\n# veos#\n\n\n# Module execution\n# \"after\": {\n#     \"processes\": [\n#         {\n#             \"address_family\": [\n#                 {\n#                     \"afi\": \"ipv4\",\n#                     \"areas\": [\n#                         {\n#                             \"area_id\": \"0.0.0.3\",\n#                             \"ranges\": [\n#                                 {\n#                                     \"address\": \"10.1.2.0/24\"\n#                                 },\n#                                 {\n#                                     \"address\": \"60.1.0.0/16\",\n#                                     \"cost\": 30\n#                                 }\n#                             ]\n#                         }\n#                     ],\n#                     \"redistribute\": [\n#                         {\n#                             \"routes\": \"connected\"\n#                         },\n#                         {\n#                             \"route_map\": \"MAP01\",\n#                             \"routes\": \"static\"\n#                         }\n#                     ]\n#                 },\n#                 {\n#                     \"afi\": \"ipv6\",\n#                     \"areas\": [\n#                         {\n#                             \"area_id\": \"0.0.0.3\",\n#                             \"ranges\": [\n#                                 {\n#                                     \"address\": \"10.1.2.0/24\"\n#                                 },\n#                                 {\n#                                     \"address\": \"60.1.0.0/16\",\n#                                     \"cost\": 30\n#                                 }\n#                             ]\n#                         }\n#                     ]\n#                 }\n#             ],\n#             \"passive_interface\": true,\n#             \"vrf\": \"vrfmerge\"\n#         }\n#     ]\n# },\n# \"before\": {\n#     \"processes\": [\n#         {\n#             \"areas\": [\n#                 {\n#                     \"area_id\": \"0.0.0.0\",\n#                     \"encryption\": {\n#                         \"algorithm\": \"md5\",\n#                         \"encryption\": \"null\",\n#                         \"hidden_key\": true,\n#                         \"passphrase\": \"h8pZp9eprTYjjoY/NKFFe0Ei7x03Y7dyLotRhI0a5t4=\"\n#                     }\n#                 }\n#             ],\n#             \"vrf\": \"default\"\n#         },\n#         {\n#             \"address_family\": [\n#                 {\n#                     \"afi\": \"ipv4\",\n#                     \"areas\": [\n#                         {\n#                             \"area_id\": \"0.0.0.3\",\n#                             \"ranges\": [\n#                                 {\n#                                     \"address\": \"10.1.2.0/24\"\n#                                 },\n#                                 {\n#                                     \"address\": \"60.1.0.0/16\",\n#                                     \"cost\": 30\n#                                 }\n#                             ]\n#                         }\n#                     ],\n#                     \"redistribute\": [\n#                         {\n#                             \"routes\": \"connected\"\n#                         },\n#                         {\n#                             \"route_map\": \"MAP01\",\n#                             \"routes\": \"static\"\n#                         }\n#                     ]\n#                 },\n#                 {\n#                     \"afi\": \"ipv6\",\n#                     \"areas\": [\n#                         {\n#                             \"area_id\": \"0.0.0.3\",\n#                             \"ranges\": [\n#                                 {\n#                                     \"address\": \"10.1.2.0/24\"\n#                                 },\n#                                 {\n#                                     \"address\": \"60.1.0.0/16\",\n#                                     \"cost\": 30\n#                                 }\n#                             ]\n#                         }\n#                     ]\n#                 }\n#             ],\n#             \"passive_interface\": true,\n#             \"vrf\": \"vrfmerge\"\n#         }\n#     ]\n# },\n# \"changed\": true,\n# \"commands\": [\n#     \"no router ospfv3\"\n# ],\n\n# using parsed\n\n# parsed_ospfv3.cfg\n\n# router ospfv3\n#    fips restrictions\n#    area 0.0.0.20 stub\n#    area 0.0.0.20 authentication ipsec spi 33 sha1 passphrase 7 4O8T3zo4xBdRWXBnsnK934o9SEb+jEhHUN6+xzZgCo2j9EnQBUvtwNxxLEmYmm6w\n#    area 0.0.0.40 default-cost 45\n#    area 0.0.0.40 stub\n#    timers pacing flood 7\n#    adjacency exchange-start threshold 11\n#    !\n#    address-family ipv4\n#       fips restrictions\n#       redistribute connected\n#    !\n#    address-family ipv6\n#       router-id 10.1.1.1\n#       fips restrictions\n# !\n# router ospfv3 vrf vrf01\n#    bfd all-interfaces\n#    fips restrictions\n#    area 0.0.0.0 encryption ipsec spi 256 esp null sha1 passphrase 7 7hl8FV3lZ6H1mAKpjL47hQ==\n#    log-adjacency-changes detail\n#    !\n#    address-family ipv4\n#       passive-interface default\n#       fips restrictions\n#       redistribute connected route-map MAP01\n#       maximum-paths 100\n#    !\n#    address-family ipv6\n#       fips restrictions\n#       area 0.0.0.10 nssa no-summary\n#       default-information originate route-map DefaultRouteFilter\n#       max-metric router-lsa external-lsa 25 summary-lsa\n# !\n# router ospfv3 vrf vrf02\n#    fips restrictions\n#    !\n#    address-family ipv6\n#       router-id 10.17.0.3\n#       distance ospf intra-area 200\n#       fips restrictions\n#       area 0.0.0.1 stub\n#       timers spf delay initial 56 56 56\n#       timers out-delay 10\n\n\n  -  arista.eos.eos_ospfv3:\n      running_config: \"{{ lookup('file', './parsed_ospfv3.cfg') }}\"\n      state: parsed\n\n# Module execution\n\n# \"parsed\": {\n#         \"processes\": [\n#             {\n#                 \"address_family\": [\n#                     {\n#                         \"afi\": \"ipv4\",\n#                         \"fips_restrictions\": true,\n#                         \"redistribute\": [\n#                             {\n#                                 \"routes\": \"connected\"\n#                             }\n#                         ]\n#                     },\n#                     {\n#                         \"afi\": \"ipv6\",\n#                         \"fips_restrictions\": true,\n#                         \"router_id\": \"10.1.1.1\"\n#                     }\n#                 ],\n#                 \"adjacency\": {\n#                     \"exchange_start\": {\n#                         \"threshold\": 11\n#                     }\n#                 },\n#                 \"areas\": [\n#                     {\n#                         \"area_id\": \"0.0.0.20\",\n#                         \"authentication\": {\n#                             \"algorithm\": \"sha1\",\n#                             \"hidden_key\": true,\n#                             \"passphrase\": \"4O8T3zo4xBdRWXBnsnK934o9SEb+jEhHUN6+xzZgCo2j9EnQBUvtwNxxLEmYmm6w\",\n#                             \"spi\": 33\n#                         },\n#                         \"stub\": {\n#                             \"set\": true\n#                         }\n#                     },\n#                     {\n#                         \"area_id\": \"0.0.0.40\",\n#                         \"default_cost\": 45,\n#                         \"stub\": {\n#                             \"set\": true\n#                         }\n#                     }\n#                 ],\n#                 \"fips_restrictions\": true,\n#                 \"timers\": {\n#                     \"pacing\": 7\n#                 },\n#                 \"vrf\": \"default\"\n#             },\n#             {\n#                 \"address_family\": [\n#                     {\n#                         \"afi\": \"ipv4\",\n#                         \"fips_restrictions\": true,\n#                         \"maximum_paths\": 100,\n#                         \"passive_interface\": true,\n#                         \"redistribute\": [\n#                             {\n#                                 \"route_map\": \"MAP01\",\n#                                 \"routes\": \"connected\"\n#                             }\n#                         ]\n#                     },\n#                     {\n#                         \"afi\": \"ipv6\",\n#                         \"areas\": [\n#                             {\n#                                 \"area_id\": \"0.0.0.10\",\n#                                 \"nssa\": {\n#                                     \"no_summary\": true\n#                                 }\n#                             }\n#                         ],\n#                         \"default_information\": {\n#                             \"originate\": true,\n#                             \"route_map\": \"DefaultRouteFilter\"\n#                         },\n#                         \"fips_restrictions\": true,\n#                         \"max_metric\": {\n#                             \"router_lsa\": {\n#                                 \"external_lsa\": {\n#                                     \"max_metric_value\": 25\n#                                 },\n#                                 \"summary_lsa\": {\n#                                     \"set\": true\n#                                 }\n#                             }\n#                         }\n#                     }\n#                 ],\n#                 \"areas\": [\n#                     {\n#                         \"area_id\": \"0.0.0.0\",\n#                         \"encryption\": {\n#                             \"algorithm\": \"sha1\",\n#                             \"encryption\": \"null\",\n#                             \"hidden_key\": true,\n#                             \"passphrase\": \"7hl8FV3lZ6H1mAKpjL47hQ==\"\n#                         }\n#                     }\n#                 ],\n#                 \"bfd\": {\n#                     \"all_interfaces\": true\n#                 },\n#                 \"fips_restrictions\": true,\n#                 \"log_adjacency_changes\": {\n#                     \"detail\": true\n#                 },\n#                 \"vrf\": \"vrf01\"\n#             },\n#             {\n#                 \"address_family\": [\n#                     {\n#                         \"afi\": \"ipv6\",\n#                         \"areas\": [\n#                             {\n#                                 \"area_id\": \"0.0.0.1\",\n#                                 \"stub\": {\n#                                     \"set\": true\n#                                 }\n#                             }\n#                         ],\n#                         \"distance\": 200,\n#                         \"fips_restrictions\": true,\n#                         \"router_id\": \"10.17.0.3\",\n#                         \"timers\": {\n#                             \"out_delay\": 10,\n#                             \"spf\": {\n#                                 \"initial\": 56,\n#                                 \"max\": 56,\n#                                 \"min\": 56,\n#                             }\n#                         }\n#                     }\n#                 ],\n#                 \"fips_restrictions\": true,\n#                 \"vrf\": \"vrf02\"\n#             }\n#         ]\n\n# using gathered\n\n# native config\n\n# veos#show running-config | section ospfv3\n# router ospfv3 vrf vrfmerge\n#    passive-interface default\n#    !\n#    address-family ipv4\n#       redistribute connected\n#       redistribute static route-map MAP01\n#       area 0.0.0.3 range 10.1.2.0/24\n#       area 0.0.0.3 range 60.1.0.0/16 cost 30\n#    !\n#    address-family ipv6\n#       area 0.0.0.3 range 10.1.2.0/24\n#       area 0.0.0.3 range 60.1.0.0/16 cost 30\n# veos#\n\n\n  -  arista.eos.eos_ospfv3:\n      state: gathered\n\n# module execution\n\n# \"gathered\": {\n#     \"processes\": [\n#         {\n#             \"address_family\": [\n#                 {\n#                     \"afi\": \"ipv4\",\n#                     \"areas\": [\n#                         {\n#                             \"area_id\": \"0.0.0.3\",\n#                             \"ranges\": [\n#                                 {\n#                                     \"address\": \"10.1.2.0/24\"\n#                                 },\n#                                 {\n#                                     \"address\": \"60.1.0.0/16\",\n#                                     \"cost\": 30\n#                                 }\n#                             ]\n#                         }\n#                     ],\n#                     \"redistribute\": [\n#                         {\n#                             \"routes\": \"connected\"\n#                         },\n#                         {\n#                             \"route_map\": \"MAP01\",\n#                             \"routes\": \"static\"\n#                         }\n#                     ]\n#                 },\n#                 {\n#                     \"afi\": \"ipv6\",\n#                     \"areas\": [\n#                         {\n#                             \"area_id\": \"0.0.0.3\",\n#                             \"ranges\": [\n#                                 {\n#                                     \"address\": \"10.1.2.0/24\"\n#                                 },\n#                                 {\n#                                     \"address\": \"60.1.0.0/16\",\n#                                     \"cost\": 30\n#                                 }\n#                             ]\n#                         }\n#                     ]\n#                 }\n#             ],\n#             \"passive_interface\": true,\n#             \"vrf\": \"vrfmerge\"\n#         }\n#     ]\n\n# using rendered\n\n  -  arista.eos.eos_ospfv3:\n      config:\n        processes:\n          - address_family:\n              - timers:\n                  lsa: 22\n                graceful_restart:\n                  grace_period: 35\n                afi: \"ipv6\"\n            timers:\n              pacing: 55\n            fips_restrictions: True\n            router_id: \"2.2.2.2\"\n            vrf: \"vrfmerge\"\n      state: rendered\n\n# module execution\n\n# \"rendered\": [\n#         \"router ospfv3 vrf vrfmerge\",\n#         \"address-family ipv6\",\n#         \"graceful-restart grace-period 35\",\n#         \"timers lsa arrival 22\",\n#         \"exit\",\n#         \"timers pacing flood 55\",\n#         \"fips restrictions\",\n#         \"router-id 2.2.2.2\",\n#         \"exit\"\n#     ]\n\n\n"
  },
  "arista.eos.eos_prefix_lists": {
    "doc": {
      "description": "This module configures and manages the attributes of Prefix lists on Arista EOS platforms.",
      "has_action": true,
      "notes": "Tested against Arista EOS 4.24.6F\nThis module works with connection C(network_cli). See the L(EOS Platform Options,eos_platform_options).",
      "options": {
        "config": {
          "aliases": [],
          "description": "A list of dictionary of prefix-list options",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "afi": {
              "aliases": [],
              "description": "The Address Family Indicator (AFI) for the  prefix list.",
              "type": "str",
              "required": true,
              "choices": [
                "ipv4",
                "ipv6"
              ],
              "suboptions": {}
            },
            "prefix_lists": {
              "aliases": [],
              "description": "A list of prefix-lists.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "entries": {
                  "aliases": [],
                  "description": "List of prefix-lists",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "action": {
                      "aliases": [],
                      "description": "action to be performed on the specified path",
                      "type": "str",
                      "required": false,
                      "choices": [
                        "deny",
                        "permit"
                      ],
                      "suboptions": {}
                    },
                    "address": {
                      "aliases": [],
                      "description": "ipv4/v6 address in prefix-mask or address-masklen format",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "match": {
                      "aliases": [],
                      "description": "match masklen",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "masklen": {
                          "aliases": [],
                          "description": "Mask Length.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "operator": {
                          "aliases": [],
                          "description": "equalto/greater than/lesser than",
                          "type": "str",
                          "required": false,
                          "choices": [
                            "eq",
                            "le",
                            "ge"
                          ],
                          "suboptions": {}
                        }
                      }
                    },
                    "resequence": {
                      "aliases": [],
                      "description": "Resequence the list.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "default": {
                          "aliases": [],
                          "description": "Resequence with default values (10).",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "start_seq": {
                          "aliases": [],
                          "description": "Starting sequence number.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "step": {
                          "aliases": [],
                          "description": "Step to increment the sequence number.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "sequence": {
                      "aliases": [],
                      "description": "sequence number",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "name": {
                  "aliases": [],
                  "description": "Name of the prefix-list",
                  "type": "str",
                  "required": true,
                  "suboptions": {}
                }
              }
            }
          }
        },
        "running_config": {
          "aliases": [],
          "description": "This option is used only with state I(parsed).\nThe value of this option should be the output received from the EOS device by executing the command B(show running-config | section access-list).\nThe state I(parsed) reads the configuration from C(running_config) option and transforms it into Ansible structured data as per the resource module's argspec and the value is then returned in the I(parsed) key within the result.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The state the configuration should be left in.",
          "default": "merged",
          "type": "str",
          "required": false,
          "choices": [
            "deleted",
            "merged",
            "overridden",
            "replaced",
            "gathered",
            "rendered",
            "parsed"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manages Prefix lists resource module",
      "version_added": "2.2.0"
    },
    "examples": "\n# Using merged\n# Before state\n# veos#show running-config | section prefix-lists\n# veos#\n\n  - name: Merge provided configuration with device configuration\n    arista.eos.eos_prefix_lists:\n      config:\n        - afi: \"ipv4\"\n          prefix_lists:\n            - name: \"v401\"\n              entries:\n                - sequence: 25\n                  action: \"deny\"\n                  address: \"45.55.4.0/24\"\n                - sequence: 100\n                  action: \"permit\"\n                  address: \"11.11.2.0/24\"\n                  match:\n                    masklen: 32\n                    operator: \"ge\"\n            - name: \"v402\"\n              entries:\n                - action: \"deny\"\n                  address: \"10.1.1.0/24\"\n                  sequence: 10\n                  match:\n                    masklen: 32\n                    operator: \"ge\"\n        - afi: \"ipv6\"\n          prefix_lists:\n            - name: \"v601\"\n              entries:\n                - sequence: 125\n                  action: \"deny\"\n                  address: \"5000:1::/64\"\n\n# After State\n# veos#\n# veos#show running-config | section prefix-list\n# ip prefix-list v401\n#    seq 25 deny 45.55.4.0/24\n#    seq 100 permit 11.11.2.0/24 ge 32\n# !\n# ip prefix-list v402\n#    seq 10 deny 10.1.1.0/24 ge 32\n# !\n# ipv6 prefix-list v601\n#    seq 125 deny 5000:1::/64\n# veos#\n#\n# Module Execution:\n# \"after\": [\n#         {\n#             \"afi\": \"ipv4\",\n#             \"prefix_lists\": [\n#                 {\n#                     \"entries\": [\n#                         {\n#                             \"action\": \"deny\",\n#                             \"address\": \"45.55.4.0/24\",\n#                             \"sequence\": 25\n#                         },\n#                         {\n#                             \"action\": \"permit\",\n#                             \"address\": \"11.11.2.0/24\",\n#                             \"match\": {\n#                                 \"masklen\": 32,\n#                                 \"operator\": \"ge\"\n#                             },\n#                             \"sequence\": 100\n#                         }\n#                     ],\n#                     \"name\": \"v401\"\n#                 },\n#                 {\n#                     \"entries\": [\n#                         {\n#                             \"action\": \"deny\",\n#                             \"address\": \"10.1.1.0/24\",\n#                             \"match\": {\n#                                 \"masklen\": 32,\n#                                 \"operator\": \"ge\"\n#                             },\n#                             \"sequence\": 10\n#                         }\n#                     ],\n#                     \"name\": \"v402\"\n#                 }\n#             ]\n#         },\n#         {\n#             \"afi\": \"ipv6\",\n#             \"prefix_lists\": [\n#                 {\n#                     \"entries\": [\n#                         {\n#                             \"action\": \"deny\",\n#                             \"address\": \"5000:1::/64\",\n#                             \"sequence\": 125\n#                         }\n#                     ],\n#                     \"name\": \"v601\"\n#                 }\n#             ]\n#         }\n#     ],\n#     \"before\": {},\n#     \"changed\": true,\n#     \"commands\": [\n#         \"ipv6 prefix-list v601\",\n#         \"seq 125 deny 5000:1::/64\",\n#         \"ip prefix-list v401\",\n#         \"seq 25 deny 45.55.4.0/24\",\n#         \"seq 100 permit 11.11.2.0/24 ge 32\",\n#         \"ip prefix-list v402\",\n#         \"seq 10 deny 10.1.1.0/24 ge 32\"\n#     ],\n#\n\n# using merged:\n# Failure scenario : 'merged' should not be used when an existing prefix-list (sequence number)\n# is to be modified.\n\n# Before State:\n# veos#show running-config | section prefix-list\n# ip prefix-list v401\n#    seq 25 deny 45.55.4.0/24\n#    seq 100 permit 11.11.2.0/24 ge 32\n# !\n# ip prefix-list v402\n#    seq 10 deny 10.1.1.0/24 ge 32\n# !\n# ipv6 prefix-list v601\n#    seq 125 deny 5000:1::/64\n# veos#\n\n  - name: Merge provided configuration with device configuration\n    arista.eos.eos_prefix_lists:\n      config:\n        - afi: \"ipv4\"\n          prefix_lists:\n            - name: \"v401\"\n              entries:\n                - sequence: 25\n                  action: \"deny\"\n                  address: \"45.55.4.0/24\"\n                  match:\n                    masklen: 32\n                    operator: \"ge\"\n                - sequence: 100\n                  action: \"permit\"\n                  address: \"11.11.2.0/24\"\n                  match:\n                    masklen: 32\n                    operator: \"ge\"\n            - name: \"v402\"\n              entries:\n                - action: \"deny\"\n                  address: \"10.1.1.0/24\"\n                  sequence: 10\n                  match:\n                    masklen: 32\n                    operator: \"ge\"\n        - afi: \"ipv6\"\n          prefix_lists:\n            - name: \"v601\"\n              entries:\n                - sequence: 125\n                  action: \"deny\"\n                  address: \"5000:1::/64\"\n      state: merged\n\n# Module Execution:\n# fatal: [192.168.122.113]: FAILED! => {\n#     \"changed\": false,\n#     \"invocation\": {\n#         \"module_args\": {\n#             \"config\": [\n#                 {\n#                     \"afi\": \"ipv4\",\n#                     \"prefix_lists\": [\n#                         {\n#                             \"entries\": [\n#                                 {\n#                                     \"action\": \"deny\",\n#                                     \"address\": \"45.55.4.0/24\",\n#                                     \"match\": {\n#                                         \"masklen\": 32,\n#                                         \"operator\": \"ge\"\n#                                     },\n#                                     \"resequence\": null,\n#                                     \"sequence\": 25\n#                                 },\n#                                 {\n#                                     \"action\": \"permit\",\n#                                     \"address\": \"11.11.2.0/24\",\n#                                     \"match\": {\n#                                         \"masklen\": 32,\n#                                         \"operator\": \"ge\"\n#                                     },\n#                                     \"resequence\": null,\n#                                     \"sequence\": 100\n#                                 }\n#                             ],\n#                             \"name\": \"v401\"\n#                         },\n#                         {\n#                             \"entries\": [\n#                                 {\n#                                     \"action\": \"deny\",\n#                                     \"address\": \"10.1.1.0/24\",\n#                                     \"match\": {\n#                                         \"masklen\": 32,\n#                                         \"operator\": \"ge\"\n#                                     },\n#                                     \"resequence\": null,\n#                                     \"sequence\": 10\n#                                 }\n#                             ],\n#                             \"name\": \"v402\"\n#                         }\n#                     ]\n#                 },\n#                 {\n#                     \"afi\": \"ipv6\",\n#                     \"prefix_lists\": [\n#                         {\n#                             \"entries\": [\n#                                 {\n#                                     \"action\": \"deny\",\n#                                     \"address\": \"5000:1::/64\",\n#                                     \"match\": null,\n#                                     \"resequence\": null,\n#                                     \"sequence\": 125\n#                                 }\n#                             ],\n#                             \"name\": \"v601\"\n#                         }\n#                     ]\n#                 }\n#             ],\n#             \"running_config\": null,\n#             \"state\": \"merged\"\n#         }\n#     },\n#     \"msg\": \"Sequence number 25 is already present. Use replaced/overridden operation to change the configuration\"\n# }\n#\n\n# Using Replaced:\n\n# Before state:\n# veos#show running-config | section prefix-list\n# ip prefix-list v401\n#    seq 25 deny 45.55.4.0/24\n#    seq 100 permit 11.11.2.0/24 ge 32\n# !\n# ip prefix-list v402\n#    seq 10 deny 10.1.1.0/24 ge 32\n# !\n# ipv6 prefix-list v601\n#    seq 125 deny 5000:1::/64\n# veos#\n  - name: Replace\n    arista.eos.eos_prefix_lists:\n      config:\n        - afi: \"ipv4\"\n          prefix_lists:\n            - name: \"v401\"\n              entries:\n                - sequence: 25\n                  action: \"deny\"\n                  address: \"45.55.4.0/24\"\n                  match:\n                    masklen: 32\n                    operator: \"ge\"\n                - sequence: 200\n                  action: \"permit\"\n                  address: \"200.11.2.0/24\"\n                  match:\n                    masklen: 32\n                    operator: \"ge\"\n      state: replaced\n# After State:\n# veos#show running-config | section prefix-list\n# ip prefix-list v401\n#    seq 25 deny 45.55.4.0/24 ge 32\n#    seq 200 permit 200.11.2.0/24 ge 32\n# !\n# ipv6 prefix-list v601\n#    seq 125 deny 5000:1::/64\n# veos#\n#\n#\n# Module Execution:\n#\n# \"after\": [\n#         {\n#             \"afi\": \"ipv4\",\n#             \"prefix_lists\": [\n#                 {\n#                     \"entries\": [\n#                         {\n#                             \"action\": \"deny\",\n#                             \"address\": \"45.55.4.0/24\",\n#                             \"match\": {\n#                                 \"masklen\": 32,\n#                                 \"operator\": \"ge\"\n#                             },\n#                             \"sequence\": 25\n#                         },\n#                         {\n#                             \"action\": \"permit\",\n#                             \"address\": \"200.11.2.0/24\",\n#                             \"match\": {\n#                                 \"masklen\": 32,\n#                                 \"operator\": \"ge\"\n#                             },\n#                             \"sequence\": 200\n#                         }\n#                     ],\n#                     \"name\": \"v401\"\n#                 }\n#             ]\n#         },\n#         {\n#             \"afi\": \"ipv6\",\n#             \"prefix_lists\": [\n#                 {\n#                     \"entries\": [\n#                         {\n#                             \"action\": \"deny\",\n#                             \"address\": \"5000:1::/64\",\n#                             \"sequence\": 125\n#                         }\n#                     ],\n#                     \"name\": \"v601\"\n#                 }\n#             ]\n#         }\n#     ],\n#     \"before\": [\n#         {\n#             \"afi\": \"ipv4\",\n#             \"prefix_lists\": [\n#                 {\n#                     \"entries\": [\n#                         {\n#                             \"action\": \"deny\",\n#                             \"address\": \"45.55.4.0/24\",\n#                             \"sequence\": 25\n#                         },\n#                         {\n#                             \"action\": \"permit\",\n#                             \"address\": \"11.11.2.0/24\",\n#                             \"match\": {\n#                                 \"masklen\": 32,\n#                                 \"operator\": \"ge\"\n#                             },\n#                             \"sequence\": 100\n#                         }\n#                     ],\n#                     \"name\": \"v401\"\n#                 },\n#                 {\n#                     \"entries\": [\n#                         {\n#                             \"action\": \"deny\",\n#                             \"address\": \"10.1.1.0/24\",\n#                             \"match\": {\n#                                 \"masklen\": 32,\n#                                 \"operator\": \"ge\"\n#                             },\n#                             \"sequence\": 10\n#                         }\n#                     ],\n#                     \"name\": \"v402\"\n#                 }\n#             ]\n#         },\n#         {\n#             \"afi\": \"ipv6\",\n#             \"prefix_lists\": [\n#                 {\n#                     \"entries\": [\n#                         {\n#                             \"action\": \"deny\",\n#                             \"address\": \"5000:1::/64\",\n#                             \"sequence\": 125\n#                         }\n#                     ],\n#                     \"name\": \"v601\"\n#                 }\n#             ]\n#         }\n#     ],\n#     \"changed\": true,\n#     \"commands\": [\n#         \"ip prefix-list v401\",\n#         \"no seq 25\",\n#         \"seq 25 deny 45.55.4.0/24 ge 32\",\n#         \"seq 200 permit 200.11.2.0/24 ge 32\",\n#         \"no seq 100\",\n#         \"no ip prefix-list v402\"\n#     ],\n\n# Using overridden:\n# Before State:\n\n# veos#show running-config | section prefix-list\n# ip prefix-list v401\n#    seq 25 deny 45.55.4.0/24 ge 32\n#    seq 100 permit 11.11.2.0/24 ge 32\n#    seq 200 permit 200.11.2.0/24 ge 32\n# !\n# ip prefix-list v402\n#    seq 10 deny 10.1.1.0/24 ge 32\n# !\n# ipv6 prefix-list v601\n#    seq 125 deny 5000:1::/64\n# veos#\n\n\n  - name: Override\n    arista.eos.eos_prefix_lists:\n      config:\n        - afi: \"ipv4\"\n          prefix_lists:\n            - name: \"v401\"\n              entries:\n                - sequence: 25\n                  action: \"deny\"\n                  address: \"45.55.4.0/24\"\n                - sequence: 300\n                  action: \"permit\"\n                  address: \"30.11.2.0/24\"\n                  match:\n                    masklen: 32\n                    operator: \"ge\"\n            - name: \"v403\"\n              entries:\n                - action: \"deny\"\n                  address: \"10.1.1.0/24\"\n                  sequence: 10\n      state: overridden\n\n# After State\n# veos#\n# veos#show running-config | section prefix-list\n# ip prefix-list v401\n#    seq 25 deny 45.55.4.0/24 ge 32\n#    seq 300 permit 30.11.2.0/24 ge 32\n# !\n# ip prefix-list v403\n#    seq 10 deny 10.1.1.0/24\n# veos#\n#\n#\n# Module Execution:\n# \"after\": [\n#         {\n#             \"afi\": \"ipv4\",\n#             \"prefix_lists\": [\n#                 {\n#                     \"entries\": [\n#                         {\n#                             \"action\": \"deny\",\n#                             \"address\": \"45.55.4.0/24\",\n#                             \"match\": {\n#                                 \"masklen\": 32,\n#                                 \"operator\": \"ge\"\n#                             },\n#                             \"sequence\": 25\n#                         },\n#                         {\n#                             \"action\": \"permit\",\n#                             \"address\": \"30.11.2.0/24\",\n#                             \"match\": {\n#                                 \"masklen\": 32,\n#                                 \"operator\": \"ge\"\n#                             },\n#                             \"sequence\": 300\n#                         }\n#                     ],\n#                     \"name\": \"v401\"\n#                 },\n#                 {\n#                     \"entries\": [\n#                         {\n#                             \"action\": \"deny\",\n#                             \"address\": \"10.1.1.0/24\",\n#                             \"sequence\": 10\n#                         }\n#                     ],\n#                     \"name\": \"v403\"\n#                 }\n#             ]\n#         }\n#     ],\n#     \"before\": [\n#         {\n#             \"afi\": \"ipv4\",\n#             \"prefix_lists\": [\n#                 {\n#                     \"entries\": [\n#                         {\n#                             \"action\": \"deny\",\n#                             \"address\": \"45.55.4.0/24\",\n#                             \"match\": {\n#                                 \"masklen\": 32,\n#                                 \"operator\": \"ge\"\n#                             },\n#                             \"sequence\": 25\n#                         },\n#                         {\n#                             \"action\": \"permit\",\n#                             \"address\": \"11.11.2.0/24\",\n#                             \"match\": {\n#                                 \"masklen\": 32,\n#                                 \"operator\": \"ge\"\n#                             },\n#                             \"sequence\": 100\n#                         },\n#                         {\n#                             \"action\": \"permit\",\n#                             \"address\": \"200.11.2.0/24\",\n#                             \"match\": {\n#                                 \"masklen\": 32,\n#                                 \"operator\": \"ge\"\n#                             },\n#                             \"sequence\": 200\n#                         }\n#                     ],\n#                     \"name\": \"v401\"\n#                 },\n#                 {\n#                     \"entries\": [\n#                         {\n#                             \"action\": \"deny\",\n#                             \"address\": \"10.1.1.0/24\",\n#                             \"match\": {\n#                                 \"masklen\": 32,\n#                                 \"operator\": \"ge\"\n#                             },\n#                             \"sequence\": 10\n#                         }\n#                     ],\n#                     \"name\": \"v402\"\n#                 }\n#             ]\n#         },\n#         {\n#             \"afi\": \"ipv6\",\n#             \"prefix_lists\": [\n#                 {\n#                     \"entries\": [\n#                         {\n#                             \"action\": \"deny\",\n#                             \"address\": \"5000:1::/64\",\n#                             \"sequence\": 125\n#                         }\n#                     ],\n#                     \"name\": \"v601\"\n#                 }\n#             ]\n#         }\n#     ],\n#     \"changed\": true,\n#     \"commands\": [\n#         \"no ipv6 prefix-list v601\",\n#         \"ip prefix-list v401\",\n#         \"seq 25 deny 45.55.4.0/24\",\n#         \"seq 300 permit 30.11.2.0/24 ge 32\",\n#         \"no seq 100\",\n#         \"no seq 200\",\n#         \"ip prefix-list v403\",\n#         \"seq 10 deny 10.1.1.0/24\",\n#         \"no ip prefix-list v402\"\n#     ],\n#\n\n# Using deleted:\n# Before State:\n\n# veos#show running-config | section prefix-list\n# ip prefix-list v401\n#    seq 25 deny 45.55.4.0/24 ge 32\n#    seq 100 permit 11.11.2.0/24 ge 32\n#    seq 300 permit 30.11.2.0/24 ge 32\n# !\n# ip prefix-list v402\n#    seq 10 deny 10.1.1.0/24 ge 32\n# !\n# ip prefix-list v403\n#    seq 10 deny 10.1.1.0/24\n# !\n# ipv6 prefix-list v601\n#    seq 125 deny 5000:1::/64\n# veos#\n\n  - name: Delete device configuration\n    arista.eos.eos_prefix_lists:\n      config:\n        - afi: \"ipv6\"\n      state: deleted\n\n\n# after State:\n# veos#show running-config | section prefix-list\n# ip prefix-list v401\n#    seq 25 deny 45.55.4.0/24 ge 32\n#    seq 100 permit 11.11.2.0/24 ge 32\n#    seq 300 permit 30.11.2.0/24 ge 32\n# !\n# ip prefix-list v402\n#    seq 10 deny 10.1.1.0/24 ge 32\n# !\n# ip prefix-list v403\n#    seq 10 deny 10.1.1.0/24\n#\n#\n# Module Execution:\n#     \"after\": [\n#         {\n#             \"afi\": \"ipv4\",\n#             \"prefix_lists\": [\n#                 {\n#                     \"entries\": [\n#                         {\n#                             \"action\": \"deny\",\n#                             \"address\": \"45.55.4.0/24\",\n#                             \"match\": {\n#                                 \"masklen\": 32,\n#                                 \"operator\": \"ge\"\n#                             },\n#                             \"sequence\": 25\n#                         },\n#                         {\n#                             \"action\": \"permit\",\n#                             \"address\": \"11.11.2.0/24\",\n#                             \"match\": {\n#                                 \"masklen\": 32,\n#                                 \"operator\": \"ge\"\n#                             },\n#                             \"sequence\": 100\n#                         },\n#                         {\n#                             \"action\": \"permit\",\n#                             \"address\": \"30.11.2.0/24\",\n#                             \"match\": {\n#                                 \"masklen\": 32,\n#                                 \"operator\": \"ge\"\n#                             },\n#                             \"sequence\": 300\n#                         }\n#                     ],\n#                     \"name\": \"v401\"\n#                 },\n#                 {\n#                     \"entries\": [\n#                         {\n#                             \"action\": \"deny\",\n#                             \"address\": \"10.1.1.0/24\",\n#                             \"match\": {\n#                                 \"masklen\": 32,\n#                                 \"operator\": \"ge\"\n#                             },\n#                             \"sequence\": 10\n#                         }\n#                     ],\n#                     \"name\": \"v402\"\n#                 },\n#                 {\n#                     \"entries\": [\n#                         {\n#                             \"action\": \"deny\",\n#                             \"address\": \"10.1.1.0/24\",\n#                             \"sequence\": 10\n#                         }\n#                     ],\n#                     \"name\": \"v403\"\n#                 }\n#             ]\n#         }\n#     ],\n#     \"before\": [\n#         {\n#             \"afi\": \"ipv4\",\n#             \"prefix_lists\": [\n#                 {\n#                     \"entries\": [\n#                         {\n#                             \"action\": \"deny\",\n#                             \"address\": \"45.55.4.0/24\",\n#                             \"match\": {\n#                                 \"masklen\": 32,\n#                                 \"operator\": \"ge\"\n#                             },\n#                             \"sequence\": 25\n#                         },\n#                         {\n#                             \"action\": \"permit\",\n#                             \"address\": \"11.11.2.0/24\",\n#                             \"match\": {\n#                                 \"masklen\": 32,\n#                                 \"operator\": \"ge\"\n#                             },\n#                             \"sequence\": 100\n#                         },\n#                         {\n#                             \"action\": \"permit\",\n#                             \"address\": \"30.11.2.0/24\",\n#                             \"match\": {\n#                                 \"masklen\": 32,\n#                                 \"operator\": \"ge\"\n#                             },\n#                             \"sequence\": 300\n#                         }\n#                     ],\n#                     \"name\": \"v401\"\n#                 },\n#                 {\n#                     \"entries\": [\n#                         {\n#                             \"action\": \"deny\",\n#                             \"address\": \"10.1.1.0/24\",\n#                             \"match\": {\n#                                 \"masklen\": 32,\n#                                 \"operator\": \"ge\"\n#                             },\n#                             \"sequence\": 10\n#                         }\n#                     ],\n#                     \"name\": \"v402\"\n#                 },\n#                 {\n#                     \"entries\": [\n#                         {\n#                             \"action\": \"deny\",\n#                             \"address\": \"10.1.1.0/24\",\n#                             \"sequence\": 10\n#                         }\n#                     ],\n#                     \"name\": \"v403\"\n#                 }\n#             ]\n#         },\n#         {\n#             \"afi\": \"ipv6\",\n#             \"prefix_lists\": [\n#                 {\n#                     \"entries\": [\n#                         {\n#                             \"action\": \"deny\",\n#                             \"address\": \"5000:1::/64\",\n#                             \"sequence\": 125\n#                         }\n#                     ],\n#                     \"name\": \"v601\"\n#                 }\n#             ]\n#         }\n#     ],\n#     \"changed\": true,\n#     \"commands\": [\n#         \"no ipv6 prefix-list v601\"\n#     ],\n#\n\n# Using deleted\n# Before state:\n\n# veos#show running-config | section prefix-list\n# ip prefix-list v401\n#    seq 25 deny 45.55.4.0/24 ge 32\n#    seq 100 permit 11.11.2.0/24 ge 32\n#    seq 300 permit 30.11.2.0/24 ge 32\n# !\n# ip prefix-list v402\n#    seq 10 deny 10.1.1.0/24 ge 32\n# !\n# ip prefix-list v403\n#    seq 10 deny 10.1.1.0/24\n# veos#\n\n  - name: Delete device configuration\n    arista.eos.eos_prefix_lists:\n      state: deleted\n\n# After State:\n# veos#show running-config | section prefix-list\n# veos#\n#\n# Module Execution:\n#    \"after\": {},\n#    \"before\": [\n#        {\n#            \"afi\": \"ipv4\",\n#            \"prefix_lists\": [\n#                {\n#                    \"entries\": [\n#                        {\n#                            \"action\": \"deny\",\n#                            \"address\": \"45.55.4.0/24\",\n#                            \"match\": {\n#                                \"masklen\": 32,\n#                                \"operator\": \"ge\"\n#                            },\n#                            \"sequence\": 25\n#                        },\n#                        {\n#                            \"action\": \"permit\",\n#                            \"address\": \"11.11.2.0/24\",\n#                            \"match\": {\n#                                \"masklen\": 32,\n#                                \"operator\": \"ge\"\n#                            },\n#                            \"sequence\": 100\n#                        },\n#                        {\n#                            \"action\": \"permit\",\n#                            \"address\": \"30.11.2.0/24\",\n#                            \"match\": {\n#                                \"masklen\": 32,\n#                                \"operator\": \"ge\"\n#                            },\n#                            \"sequence\": 300\n#                        }\n#                    ],\n#                    \"name\": \"v401\"\n#                },\n#                {\n#                    \"entries\": [\n#                        {\n#                            \"action\": \"deny\",\n#                            \"address\": \"10.1.1.0/24\",\n#                            \"match\": {\n#                                \"masklen\": 32,\n#                                \"operator\": \"ge\"\n#                            },\n#                            \"sequence\": 10\n#                        }\n#                    ],\n#                    \"name\": \"v402\"\n#                },\n#                {\n#                    \"entries\": [\n#                        {\n#                            \"action\": \"deny\",\n#                            \"address\": \"10.1.1.0/24\",\n#                            \"sequence\": 10\n#                        }\n#                    ],\n#                    \"name\": \"v403\"\n#                }\n#            ]\n#        }\n#    ],\n#    \"changed\": true,\n#    \"commands\": [\n#        \"no ip prefix-list v401\",\n#        \"no ip prefix-list v402\",\n#        \"no ip prefix-list v403\"\n#    ],\n#\n\n# Using parsed:\n# parse_prefix_lists.cfg\n# ip prefix-list v401\n#    seq 25 deny 45.55.4.0/24\n#    seq 100 permit 11.11.2.0/24 ge 32\n# !\n# ip prefix-list v402\n#    seq 10 deny 10.1.1.0/24\n# !\n# ipv6 prefix-list v601\n#    seq 125 deny 5000:1::/64\n#\n  - name: parse configs\n    arista.eos.eos_prefix_lists:\n      running_config: \"{{ lookup('file', './parsed_prefix_lists.cfg') }}\"\n      state: parsed\n\n# Module Execution:\n#     \"parsed\": [\n#         {\n#             \"afi\": \"ipv4\",\n#             \"prefix_lists\": [\n#                 {\n#                     \"entries\": [\n#                         {\n#                             \"action\": \"deny\",\n#                             \"address\": \"45.55.4.0/24\",\n#                             \"sequence\": 25\n#                         },\n#                         {\n#                             \"action\": \"permit\",\n#                             \"address\": \"11.11.2.0/24\",\n#                             \"match\": {\n#                                 \"masklen\": 32,\n#                                 \"operator\": \"ge\"\n#                             },\n#                             \"sequence\": 100\n#                         }\n#                     ],\n#                     \"name\": \"v401\"\n#                 },\n#                 {\n#                     \"entries\": [\n#                         {\n#                             \"action\": \"deny\",\n#                             \"address\": \"10.1.1.0/24\",\n#                             \"sequence\": 10\n#                         }\n#                     ],\n#                     \"name\": \"v402\"\n#                 }\n#             ]\n#         },\n#         {\n#             \"afi\": \"ipv6\",\n#             \"prefix_lists\": [\n#                 {\n#                     \"entries\": [\n#                         {\n#                             \"action\": \"deny\",\n#                             \"address\": \"5000:1::/64\",\n#                             \"sequence\": 125\n#                         }\n#                     ],\n#                     \"name\": \"v601\"\n#                 }\n#             ]\n#         }\n#     ]\n\n# Using rendered:\n  - name: Render provided configuration\n    arista.eos.eos_prefix_lists:\n      config:\n        - afi: \"ipv4\"\n          prefix_lists:\n            - name: \"v401\"\n              entries:\n                - sequence: 25\n                  action: \"deny\"\n                  address: \"45.55.4.0/24\"\n                - sequence: 200\n                  action: \"permit\"\n                  address: \"200.11.2.0/24\"\n                  match:\n                    masklen: 32\n                    operator: \"ge\"\n            - name: \"v403\"\n              entries:\n                - action: \"deny\"\n                  address: \"10.1.1.0/24\"\n                  sequence: 10\n      state: rendered\n\n# Module Execution:\n#  \"rendered\": [\n#         \"ip prefix-list v401\",\n#         \"seq 25 deny 45.55.4.0/24\",\n#         \"seq 200 permit 200.11.2.0/24 ge 32\",\n#         \"ip prefix-list v403\",\n#         \"seq 10 deny 10.1.1.0/24\"\n#     ]\n#\n\n# using gathered:\n# Device config:\n# veos#show running-config | section prefix-list\n# ip prefix-list v401\n#    seq 25 deny 45.55.4.0/24\n#    seq 100 permit 11.11.2.0/24 ge 32\n# !\n# ip prefix-list v402\n#    seq 10 deny 10.1.1.0/24 ge 32\n# !\n# ipv6 prefix-list v601\n#    seq 125 deny 5000:1::/64\n# veos#\n\n  - name: gather configs\n    arista.eos.eos_prefix_lists:\n      state: gathered\n\n# Module Execution:\n#\n# \"gathered\": [\n#         {\n#             \"afi\": \"ipv4\",\n#             \"prefix_lists\": [\n#                 {\n#                     \"entries\": [\n#                         {\n#                             \"action\": \"deny\",\n#                             \"address\": \"45.55.4.0/24\",\n#                             \"sequence\": 25\n#                         },\n#                         {\n#                             \"action\": \"permit\",\n#                             \"address\": \"11.11.2.0/24\",\n#                             \"match\": {\n#                                 \"masklen\": 32,\n#                                 \"operator\": \"ge\"\n#                             },\n#                             \"sequence\": 100\n#                         }\n#                     ],\n#                     \"name\": \"v401\"\n#                 },\n#                 {\n#                     \"entries\": [\n#                         {\n#                             \"action\": \"deny\",\n#                             \"address\": \"10.1.1.0/24\",\n#                             \"match\": {\n#                                 \"masklen\": 32,\n#                                 \"operator\": \"ge\"\n#                             },\n#                             \"sequence\": 10\n#                         }\n#                     ],\n#                     \"name\": \"v402\"\n#                 }\n#             ]\n#         },\n#         {\n#             \"afi\": \"ipv6\",\n#             \"prefix_lists\": [\n#                 {\n#                     \"entries\": [\n#                         {\n#                             \"action\": \"deny\",\n#                             \"address\": \"5000:1::/64\",\n#                             \"sequence\": 125\n#                         }\n#                     ],\n#                     \"name\": \"v601\"\n#                 }\n#             ]\n#         }\n#     ],\n\n"
  },
  "arista.eos.eos_route_maps": {
    "doc": {
      "description": "This module configures and manages the attributes of Route Mapd on Arista EOS platforms.",
      "has_action": true,
      "notes": "Tested against Arista EOS 4.24.6F\nThis module works with connection C(network_cli). See the L(EOS Platform Options,eos_platform_options).",
      "options": {
        "config": {
          "aliases": [],
          "description": "A list of route-map options",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "entries": {
              "aliases": [],
              "description": "Route Map entries.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "action": {
                  "aliases": [],
                  "description": "Action for matching routes",
                  "type": "str",
                  "required": false,
                  "choices": [
                    "deny",
                    "permit"
                  ],
                  "suboptions": {}
                },
                "continue_sequence": {
                  "aliases": [],
                  "description": "Route map entry sequence number.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "description": {
                  "aliases": [],
                  "description": "Description for the route map.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "match": {
                  "aliases": [],
                  "description": "Route map match rules.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "aggregate_role": {
                      "aliases": [],
                      "description": "Role in BGP contributor-aggregate relation.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "contributor": {
                          "aliases": [],
                          "description": "BGP aggregate's contributor.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "route_map": {
                          "aliases": [],
                          "description": "Route map to apply against the aggregate route.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "as": {
                      "aliases": [],
                      "description": "BGP AS number.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "as_path": {
                      "aliases": [],
                      "description": "Set as-path.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "length": {
                          "aliases": [],
                          "description": "Specify as-path length ( with comparison operators like <= 60 and >= 40 ).",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "path_list": {
                          "aliases": [],
                          "description": "AS path list name.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "community": {
                      "aliases": [],
                      "description": "BGP community attribute.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "community_list": {
                          "aliases": [],
                          "description": "list of community names (in csv format).",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "exact_match": {
                          "aliases": [],
                          "description": "Do exact matching of communities.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "instances": {
                          "aliases": [],
                          "description": "Match number of community instances ( with comparison operators like <= 60 and >= 40 ).",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "extcommunity": {
                      "aliases": [],
                      "description": "extended community list name.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "community_list": {
                          "aliases": [],
                          "description": "list of community names (in csv format).",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "exact_match": {
                          "aliases": [],
                          "description": "Do exact matching of communities.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "interface": {
                      "aliases": [],
                      "description": "interface name.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "invert_result": {
                      "aliases": [],
                      "description": "Invert match result.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "aggregate_role": {
                          "aliases": [],
                          "description": "Role in BGP contributor-aggregate relation.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "contributor": {
                              "aliases": [],
                              "description": "BGP aggregate's contributor.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "route_map": {
                              "aliases": [],
                              "description": "Route map to apply against the aggregate route.",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "as_path": {
                          "aliases": [],
                          "description": "Set as-path.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "length": {
                              "aliases": [],
                              "description": "Specify as-path length ( with comparison operators like <= 60 and >= 40 ).",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            },
                            "path_list": {
                              "aliases": [],
                              "description": "AS path list name.",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "community": {
                          "aliases": [],
                          "description": "BGP community attribute.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "community_list": {
                              "aliases": [],
                              "description": "list of community names (in csv format).",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            },
                            "exact_match": {
                              "aliases": [],
                              "description": "Do exact matching of communities.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "instances": {
                              "aliases": [],
                              "description": "Match number of community instances ( with comparison operators like <= 60 and >= 40 ).",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "extcommunity": {
                          "aliases": [],
                          "description": "extended community list name.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "community_list": {
                              "aliases": [],
                              "description": "list of community names (in csv format).",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            },
                            "exact_match": {
                              "aliases": [],
                              "description": "Do exact matching of communities.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "large_community": {
                          "aliases": [],
                          "description": "extended community list name.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "community_list": {
                              "aliases": [],
                              "description": "list of community names (in csv format).",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            },
                            "exact_match": {
                              "aliases": [],
                              "description": "Do exact matching of communities.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        }
                      }
                    },
                    "ip": {
                      "aliases": [],
                      "description": "Set IP specific information.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "address": {
                          "aliases": [],
                          "description": "next hop destination.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "access_list": {
                              "aliases": [],
                              "description": "ip access-list.",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            },
                            "dynamic": {
                              "aliases": [],
                              "description": "Configure dynamic prefix-list.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "prefix_list": {
                              "aliases": [],
                              "description": "Prefix list.",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "next_hop": {
                          "aliases": [],
                          "description": "next hop prefix list.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "resolved_next_hop": {
                          "aliases": [],
                          "description": "Route resolved prefix list.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "ipv6": {
                      "aliases": [],
                      "description": "Set IPv6 specific information.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "address": {
                          "aliases": [],
                          "description": "next hop destination.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "access_list": {
                              "aliases": [],
                              "description": "ip access-list.",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            },
                            "dynamic": {
                              "aliases": [],
                              "description": "Configure dynamic prefix-list.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "prefix_list": {
                              "aliases": [],
                              "description": "Prefix list.",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "next_hop": {
                          "aliases": [],
                          "description": "next hop prefix list.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "resolved_next_hop": {
                          "aliases": [],
                          "description": "Route resolved prefix list.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "isis_level": {
                      "aliases": [],
                      "description": "IS-IS level.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "large_community": {
                      "aliases": [],
                      "description": "extended community list name.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "community_list": {
                          "aliases": [],
                          "description": "list of community names (in csv format).",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "exact_match": {
                          "aliases": [],
                          "description": "Do exact matching of communities.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "local_preference": {
                      "aliases": [],
                      "description": "BGP local preference.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "metric": {
                      "aliases": [],
                      "description": "Route metric.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "metric_type": {
                      "aliases": [],
                      "description": "Route metric type.",
                      "type": "str",
                      "required": false,
                      "choices": [
                        "type-1",
                        "type-2"
                      ],
                      "suboptions": {}
                    },
                    "route_type": {
                      "aliases": [],
                      "description": "Route type",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "router_id": {
                      "aliases": [],
                      "description": "Router ID.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "source_protocol": {
                      "aliases": [],
                      "description": "Source routing protocol,",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "tag": {
                      "aliases": [],
                      "description": "Route tag",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "sequence": {
                  "aliases": [],
                  "description": "Index in the sequence.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "set": {
                  "aliases": [],
                  "description": "set route attributes.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "as_path": {
                      "aliases": [],
                      "description": "Set as-path.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "match": {
                          "aliases": [],
                          "description": "Match the entire as-path.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "as_number": {
                              "aliases": [],
                              "description": "as number to use (includes auto;in csv format)",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            },
                            "none": {
                              "aliases": [],
                              "description": "Remove matching AS numbers",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "prepend": {
                          "aliases": [],
                          "description": "Prepend to the as-path.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "as_number": {
                              "aliases": [],
                              "description": "as number to prepend (includes auto;in csv format)",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            },
                            "last_as": {
                              "aliases": [],
                              "description": "The number of times to prepend the last AS number.",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        }
                      }
                    },
                    "bgp": {
                      "aliases": [],
                      "description": "BGP AS path multipath weight.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "community_attributes": {
                      "aliases": [],
                      "description": "BGP community attribute.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "community": {
                          "aliases": [],
                          "description": "community attributes.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "additive": {
                              "aliases": [],
                              "description": "Add to existing community.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "delete": {
                              "aliases": [],
                              "description": "Delete matching communities.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "graceful_shutdown": {
                              "aliases": [],
                              "description": "Gracefully shutdown.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "internet": {
                              "aliases": [],
                              "description": "Internet community",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "list": {
                              "aliases": [],
                              "description": "community list name.",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            },
                            "local_as": {
                              "aliases": [],
                              "description": "Do not send outside local AS.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "no_advertise": {
                              "aliases": [],
                              "description": "Do not advertise to any peer.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "no_export": {
                              "aliases": [],
                              "description": "Do not export to next AS.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "number": {
                              "aliases": [],
                              "description": "community number (in csv format).",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "graceful_shutdown": {
                          "aliases": [],
                          "description": "Graceful shutdown",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "none": {
                          "aliases": [],
                          "description": "No community attribute.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "distance": {
                      "aliases": [],
                      "description": "Set protocol independent distance.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "evpn": {
                      "aliases": [],
                      "description": "Keep the next hop when advertising to eBGP peers.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "extcommunity": {
                      "aliases": [],
                      "description": "BGP extended community attribute.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "lbw": {
                          "aliases": [],
                          "description": "Link bandwith values.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "aggregate": {
                              "aliases": [],
                              "description": "Aggregate Link Bandwidth.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "divide": {
                              "aliases": [],
                              "description": "Divide Link Bandwidth.",
                              "type": "str",
                              "required": false,
                              "choices": [
                                "equal",
                                "ration"
                              ],
                              "suboptions": {}
                            },
                            "value": {
                              "aliases": [],
                              "description": "Link Bandwidth extended community value.",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "none": {
                          "aliases": [],
                          "description": "No attribute.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "rt": {
                          "aliases": [],
                          "description": "Route target extended community",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "additive": {
                              "aliases": [],
                              "description": "Add to the existing community.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "delete": {
                              "aliases": [],
                              "description": "Delete matching communities.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "vpn": {
                              "aliases": [],
                              "description": "VPN extended community.",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "soo": {
                          "aliases": [],
                          "description": "Site-of-Origin extended community.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "additive": {
                              "aliases": [],
                              "description": "Add to the existing community.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "delete": {
                              "aliases": [],
                              "description": "Delete matching communities.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "vpn": {
                              "aliases": [],
                              "description": "VPN extended community.",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        }
                      }
                    },
                    "ip": {
                      "aliases": [],
                      "description": "Set IP specific information.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "address": {
                          "aliases": [],
                          "description": "next hop address.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "peer_address": {
                          "aliases": [],
                          "description": "Use BGP peering addr as next-hop.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "unchanged": {
                          "aliases": [],
                          "description": "Keep the next hop when advertising to eBGP peer",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "ipv6": {
                      "aliases": [],
                      "description": "Set IPv6 specific information.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "address": {
                          "aliases": [],
                          "description": "next hop address.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "peer_address": {
                          "aliases": [],
                          "description": "Use BGP peering addr as next-hop.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "unchanged": {
                          "aliases": [],
                          "description": "Keep the next hop when advertising to eBGP peer",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "isis_level": {
                      "aliases": [],
                      "description": "IS-IS level.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "local_preference": {
                      "aliases": [],
                      "description": "BGP local preference.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "metric": {
                      "aliases": [],
                      "description": "Route metric.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "add": {
                          "aliases": [],
                          "description": "Add igp-metric / igp-nexthop-cost",
                          "type": "str",
                          "required": false,
                          "choices": [
                            "igp-metric",
                            "igp-nexthop-cost"
                          ],
                          "suboptions": {}
                        },
                        "igp_param": {
                          "aliases": [],
                          "description": "IGP parameter",
                          "type": "str",
                          "required": false,
                          "choices": [
                            "igp-metric",
                            "igp-nexthop-cost"
                          ],
                          "suboptions": {}
                        },
                        "value": {
                          "aliases": [],
                          "description": "metric value to add or subtract(with +/- sign).",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "metric_type": {
                      "aliases": [],
                      "description": "Route metric type.",
                      "type": "str",
                      "required": false,
                      "choices": [
                        "type-1",
                        "type-2"
                      ],
                      "suboptions": {}
                    },
                    "nexthop": {
                      "aliases": [],
                      "description": "Route next hop.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "max_metric": {
                          "aliases": [],
                          "description": "Set IGP max metric value.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "value": {
                          "aliases": [],
                          "description": "IGP metric value.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "origin": {
                      "aliases": [],
                      "description": "Set bgp origin.",
                      "type": "str",
                      "required": false,
                      "choices": [
                        "egp",
                        "igp",
                        "incomplete"
                      ],
                      "suboptions": {}
                    },
                    "segment_index": {
                      "aliases": [],
                      "description": "MPLS Segment-routing Segment Index.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "tag": {
                      "aliases": [],
                      "description": "Route tag",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "weight": {
                      "aliases": [],
                      "description": "BGP weight.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "source": {
                  "aliases": [],
                  "description": "Rename/Copy configuration",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "action": {
                      "aliases": [],
                      "description": "rename or copy configuration",
                      "type": "str",
                      "required": false,
                      "choices": [
                        "rename",
                        "copy"
                      ],
                      "suboptions": {}
                    },
                    "overwrite": {
                      "aliases": [],
                      "description": "if True, overwrite existing config.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "source_map_name": {
                      "aliases": [],
                      "description": "Source route map name.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "statement": {
                  "aliases": [],
                  "description": "statement name",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "sub_route_map": {
                  "aliases": [],
                  "description": "Sub route map",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "invert_result": {
                      "aliases": [],
                      "description": "Invert sub route map result",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "name": {
                      "aliases": [],
                      "description": "sub route map name",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                }
              }
            },
            "route_map": {
              "aliases": [],
              "description": "Route map name.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "running_config": {
          "aliases": [],
          "description": "This option is used only with state I(parsed).\nThe value of this option should be the output received from the EOS device by executing the command B(show running-config | section route-map).\nThe state I(parsed) reads the configuration from C(running_config) option and transforms it into Ansible structured data as per the resource module's argspec and the value is then returned in the I(parsed) key within the result.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The state the configuration should be left in.",
          "default": "merged",
          "type": "str",
          "required": false,
          "choices": [
            "deleted",
            "merged",
            "overridden",
            "replaced",
            "gathered",
            "rendered",
            "parsed"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manages Route Maps resource module",
      "version_added": "2.1.0"
    },
    "examples": "\n# Using merged\n# Before state\n# veos#show running-config | section route-map\n# veos#\n\n  - name: Merge provided configuration with device configuration\n    arista.eos.eos_route_maps:\n      config:\n        - route_map: \"mapmerge\"\n          entries:\n            - description: \"merged_map\"\n              action: \"permit\"\n              sequence: 10\n              match:\n                router_id: 22\n            - description: \"newmap\"\n              action: \"deny\"\n              sequence: 25\n              continue_sequence: 45\n              match:\n                interface: \"Ethernet1\"\n        - route_map: \"mapmerge2\"\n          entries:\n            - sub_route_map:\n                name: \"mapmerge\"\n              action: \"deny\"\n              sequence: 45\n              set:\n                metric:\n                  value: 25\n                  add: \"igp-metric\"\n                as_path:\n                  prepend:\n                    last_as: 2\n              match:\n                ipv6:\n                  resolved_next_hop: \"list1\"\n      state: merged\n\n# After State:\n\n# veos#show running-config | section route-map\n# route-map mapmerge permit 10\n#    description merged_map\n#    match router-id prefix-list 22\n# !\n# route-map mapmerge deny 25\n#    description newmap\n#    match interface Ethernet1\n#    continue 45\n# !\n# route-map mapmerge2 deny 45\n#    match ipv6 resolved-next-hop prefix-list list1\n#    sub-route-map mapmerge\n#    set metric 25 +igp-metric\n#    set as-path prepend last-as 2\n# !\n# route-map test permit 10\n# veos#\n\n\n# Module Execution:\n\n#  \"after\": [\n#         {\n#             \"entries\": [\n#                 {\n#                     \"action\": \"permit\",\n#                     \"description\": \"merged_map\",\n#                     \"match\": {\n#                         \"router_id\": \"22\"\n#                     },\n#                     \"sequence\": 10\n#                 },\n#                 {\n#                     \"action\": \"deny\",\n#                     \"continue_sequence\": 45,\n#                     \"description\": \"newmap\",\n#                     \"match\": {\n#                         \"interface\": \"Ethernet1\"\n#                     },\n#                     \"sequence\": 25\n#                 }\n#             ],\n#             \"route_map\": \"mapmerge\"\n#         },\n#         {\n#             \"entries\": [\n#                 {\n#                     \"action\": \"deny\",\n#                     \"match\": {\n#                         \"ipv6\": {\n#                             \"resolved_next_hop\": \"list1\"\n#                         }\n#                     },\n#                     \"sequence\": 45,\n#                     \"set\": {\n#                         \"as_path\": {\n#                             \"prepend\": {\n#                                 \"last_as\": 2\n#                             }\n#                         },\n#                         \"metric\": {\n#                             \"add\": \"igp-metric\",\n#                             \"value\": \"25\"\n#                         }\n#                     },\n#                     \"sub_route_map\": {\n#                         \"name\": \"mapmerge\"\n#                     }\n#                 }\n#             ],\n#             \"route_map\": \"mapmerge2\"\n#         }\n#     ],\n#     \"before\": {},\n#     \"changed\": true,\n#     \"commands\": [\n#         \"route-map mapmerge permit 10\",\n#         \"match router-id prefix-list 22\",\n#         \"description merged_map\",\n#         \"route-map mapmerge deny 25\",\n#         \"match interface Ethernet1\",\n#         \"description newmap\",\n#         \"continue 45\",\n#         \"route-map mapmerge2 deny 45\",\n#         \"match ipv6 resolved-next-hop prefix-list list1\",\n#         \"set metric 25 +igp-metric\",\n#         \"set as-path prepend last-as 2\",\n#         \"sub-route-map mapmerge\"\n#     ],\n#\n\n# Using replaced:\n\n# Before State:\n\n# veos#show running-config | section route-map\n# route-map mapmerge permit 10\n#    description merged_map\n#    match router-id prefix-list 22\n# !\n# route-map mapmerge deny 25\n#    description newmap\n#    match interface Ethernet1\n#    continue 45\n# !\n# route-map mapmerge2 deny 45\n#    match ipv6 resolved-next-hop prefix-list list1\n#    sub-route-map mapmerge\n#    set metric 25 +igp-metric\n#    set as-path prepend last-as 2\n# !\n# veos#\n\n  - name: Replace\n    arista.eos.eos_route_maps:\n      config:\n        - route_map: \"mapmerge\"\n          entries:\n            - action: \"permit\"\n              sequence: 10\n              match:\n                ipv6:\n                  resolved_next_hop: \"listr\"\n            - action: \"deny\"\n              sequence: 90\n              set:\n                extcommunity:\n                  rt:\n                    vpn: \"22:11\"\n                    delete: True\n                ip:\n                  unchanged: True\n      state: replaced\n\n# After State:\n\n# veos#show running-config | section route-map\n# route-map mapmerge permit 10\n#    match ipv6 resolved-next-hop prefix-list listr\n# !\n# route-map mapmerge deny 25\n#    description newmap\n#    match interface Ethernet1\n#    continue 45\n# !\n# route-map mapmerge deny 90\n#    set ip next-hop unchanged\n#    set extcommunity rt 22:11 delete\n# !\n# route-map mapmerge2 deny 45\n#    match ipv6 resolved-next-hop prefix-list list1\n#    sub-route-map mapmerge\n#    set metric 25 +igp-metric\n#    set as-path prepend last-as 2\n# !\n#\n# Module Execution:\n#\n#     \"after\": [\n#         {\n#             \"entries\": [\n#                 {\n#                     \"action\": \"permit\",\n#                     \"match\": {\n#                         \"ipv6\": {\n#                             \"resolved_next_hop\": \"listr\"\n#                         }\n#                     },\n#                     \"sequence\": 10\n#                 },\n#                 {\n#                     \"action\": \"deny\",\n#                     \"continue_sequence\": 45,\n#                     \"description\": \"newmap\",\n#                     \"match\": {\n#                         \"interface\": \"Ethernet1\"\n#                     },\n#                     \"sequence\": 25\n#                 },\n#                 {\n#                     \"action\": \"deny\",\n#                     \"sequence\": 90,\n#                     \"set\": {\n#                         \"extcommunity\": {\n#                             \"rt\": {\n#                                 \"delete\": true,\n#                                 \"vpn\": \"22:11\"\n#                             }\n#                         },\n#                         \"ip\": {\n#                             \"unchanged\": true\n#                         }\n#                     }\n#                 }\n#             ],\n#             \"route_map\": \"mapmerge\"\n#         },\n#         {\n#             \"entries\": [\n#                 {\n#                     \"action\": \"deny\",\n#                     \"match\": {\n#                         \"ipv6\": {\n#                             \"resolved_next_hop\": \"list1\"\n#                         }\n#                     },\n#                     \"sequence\": 45,\n#                     \"set\": {\n#                         \"as_path\": {\n#                             \"prepend\": {\n#                                 \"last_as\": 2\n#                             }\n#                         },\n#                         \"metric\": {\n#                             \"add\": \"igp-metric\",\n#                             \"value\": \"25\"\n#                         }\n#                     },\n#                     \"sub_route_map\": {\n#                         \"name\": \"mapmerge\"\n#                     }\n#                 }\n#             ],\n#             \"route_map\": \"mapmerge2\"\n#         },\n#         {\n#             \"entries\": [\n#                 {\n#                     \"action\": \"permit\",\n#                     \"sequence\": 10\n#                 }\n#             ],\n#             \"route_map\": \"test\"\n#         }\n#     ],\n#     \"before\": [\n#         {\n#             \"entries\": [\n#                 {\n#                     \"action\": \"permit\",\n#                     \"description\": \"merged_map\",\n#                     \"match\": {\n#                         \"router_id\": \"22\"\n#                     },\n#                     \"sequence\": 10\n#                 },\n#                 {\n#                     \"action\": \"deny\",\n#                     \"continue_sequence\": 45,\n#                     \"description\": \"newmap\",\n#                     \"match\": {\n#                         \"interface\": \"Ethernet1\"\n#                     },\n#                     \"sequence\": 25\n#                 }\n#             ],\n#             \"route_map\": \"mapmerge\"\n#         },\n#         {\n#             \"entries\": [\n#                 {\n#                     \"action\": \"deny\",\n#                     \"match\": {\n#                         \"ipv6\": {\n#                             \"resolved_next_hop\": \"list1\"\n#                         }\n#                     },\n#                     \"sequence\": 45,\n#                     \"set\": {\n#                         \"as_path\": {\n#                             \"prepend\": {\n#                                 \"last_as\": 2\n#                             }\n#                         },\n#                         \"metric\": {\n#                             \"add\": \"igp-metric\",\n#                             \"value\": \"25\"\n#                         }\n#                     },\n#                     \"sub_route_map\": {\n#                         \"name\": \"mapmerge\"\n#                     }\n#                 }\n#             ],\n#             \"route_map\": \"mapmerge2\"\n#         }\n#     ],\n#     \"changed\": true,\n#     \"commands\": [\n#         \"route-map mapmerge permit 10\",\n#         \"match ipv6 resolved-next-hop prefix-list listr\",\n#         \"no match router-id prefix-list 22\",\n#         \"no description\",\n#         \"route-map mapmerge deny 90\",\n#         \"set extcommunity rt 22:11 delete\",\n#         \"set ip next-hop unchanged\"\n#     ],\n#\n#\n# Using Overridden:\n\n# Before state:\n# veos#show running-config | section route-map\n# route-map mapmerge permit 10\n#    match ipv6 resolved-next-hop prefix-list listr\n# !\n# route-map mapmerge deny 25\n#    description newmap\n#    match interface Ethernet1\n#    continue 45\n# !\n# route-map mapmerge deny 90\n#    set ip next-hop unchanged\n#    set extcommunity rt 22:11 delete\n# !\n# route-map mapmerge2 deny 45\n#    match ipv6 resolved-next-hop prefix-list list1\n#    sub-route-map mapmerge\n#    set metric 25 +igp-metric\n#    set as-path prepend last-as 2\n# !\n# route-map test permit 10\n# veos#\n\n  - name: Override\n    arista.eos.eos_route_maps:\n      config:\n        - route_map: \"mapmerge\"\n          entries:\n            - action: \"permit\"\n              sequence: 10\n              match:\n                ipv6:\n                  resolved_next_hop: \"listr\"\n            - action: \"deny\"\n              sequence: 90\n              set:\n                metric:\n                  igp_param: \"igp-nexthop-cost\"\n      state: overridden\n\n# After State:\n\n# veos#show running-config | section route-map\n# route-map mapmerge permit 10\n#    match ipv6 resolved-next-hop prefix-list listr\n# !\n# route-map mapmerge deny 90\n#    set metric igp-nexthop-cost\n# veos#\n#\n#\n#    \"after\": [\n#         {\n#             \"entries\": [\n#                 {\n#                     \"action\": \"permit\",\n#                     \"match\": {\n#                         \"ipv6\": {\n#                             \"resolved_next_hop\": \"listr\"\n#                         }\n#                     },\n#                     \"sequence\": 10\n#                 },\n#                 {\n#                     \"action\": \"deny\",\n#                     \"sequence\": 90,\n#                     \"set\": {\n#                         \"metric\": {\n#                             \"igp_param\": \"igp-nexthop-cost\"\n#                         }\n#                     }\n#                 }\n#             ],\n#             \"route_map\": \"mapmerge\"\n#         }\n#     ],\n#     \"before\": [\n#         {\n#             \"entries\": [\n#                 {\n#                     \"action\": \"permit\",\n#                     \"match\": {\n#                         \"ipv6\": {\n#                             \"resolved_next_hop\": \"listr\"\n#                         }\n#                     },\n#                     \"sequence\": 10\n#                 },\n#                 {\n#                     \"action\": \"deny\",\n#                     \"continue_sequence\": 45,\n#                     \"description\": \"newmap\",\n#                     \"match\": {\n#                         \"interface\": \"Ethernet1\"\n#                     },\n#                     \"sequence\": 25\n#                 },\n#                 {\n#                     \"action\": \"deny\",\n#                     \"sequence\": 90,\n#                     \"set\": {\n#                         \"extcommunity\": {\n#                             \"rt\": {\n#                                 \"delete\": true,\n#                                 \"vpn\": \"22:11\"\n#                             }\n#                         },\n#                         \"ip\": {\n#                             \"unchanged\": true\n#                         }\n#                     }\n#                 }\n#             ],\n#             \"route_map\": \"mapmerge\"\n#         },\n#         {\n#             \"entries\": [\n#                 {\n#                     \"action\": \"deny\",\n#                     \"match\": {\n#                         \"ipv6\": {\n#                             \"resolved_next_hop\": \"list1\"\n#                         }\n#                     },\n#                     \"sequence\": 45,\n#                     \"set\": {\n#                         \"as_path\": {\n#                             \"prepend\": {\n#                                 \"last_as\": 2\n#                             }\n#                         },\n#                         \"metric\": {\n#                             \"add\": \"igp-metric\",\n#                             \"value\": \"25\"\n#                         }\n#                     },\n#                     \"sub_route_map\": {\n#                         \"name\": \"mapmerge\"\n#                     }\n#                 }\n#             ],\n#             \"route_map\": \"mapmerge2\"\n#         },\n#         {\n#             \"entries\": [\n#                 {\n#                     \"action\": \"permit\",\n#                     \"sequence\": 10\n#                 }\n#             ],\n#             \"route_map\": \"test\"\n#         }\n#     ],\n#     \"changed\": true,\n#     \"commands\": [\n#         \"no route-map mapmerge deny 25\",\n#         \"no route-map mapmerge2 deny 45\",\n#         \"no route-map test permit 10\",\n#         \"route-map mapmerge deny 90\",\n#         \"set metric igp-nexthop-cost\",\n#         \"no set ip next-hop unchanged\",\n#         \"no set extcommunity rt 22:11 delete\"\n#     ],\n#\n# Using deleted:\n# Before State:\n\n# veos#show running-config | section route-map\n# route-map mapmerge permit 10\n#    description merged_map\n#    match router-id prefix-list 22\n#    match ipv6 resolved-next-hop prefix-list listr\n# !\n# route-map mapmerge deny 25\n#    description newmap\n#    match interface Ethernet1\n#    continue 45\n# !\n# route-map mapmerge deny 90\n#    set metric igp-nexthop-cost\n# !\n# route-map mapmerge2 deny 45\n#    match ipv6 resolved-next-hop prefix-list list1\n#    sub-route-map mapmerge\n#    set metric 25 +igp-metric\n#    set as-path prepend last-as 2\n# veos#\n\n  - name: Delete route-map\n    arista.eos.eos_route_maps:\n      config:\n        - route_map: \"mapmerge\"\n      state: deleted\n    become: yes\n    tags:\n      - deleted1\n\n# After State:\n\n# veos#show running-config | section route-map\n# route-map mapmerge2 deny 45\n#    match ipv6 resolved-next-hop prefix-list list1\n#    sub-route-map mapmerge\n#    set metric 25 +igp-metric\n#    set as-path prepend last-as 2\n# veos#\n#\n# Module Execution:\n#\n# \"after\": [\n#         {\n#             \"entries\": [\n#                 {\n#                     \"action\": \"deny\",\n#                     \"match\": {\n#                         \"ipv6\": {\n#                             \"resolved_next_hop\": \"list1\"\n#                         }\n#                     },\n#                     \"sequence\": 45,\n#                     \"set\": {\n#                         \"as_path\": {\n#                             \"prepend\": {\n#                                 \"last_as\": 2\n#                             }\n#                         },\n#                         \"metric\": {\n#                             \"add\": \"igp-metric\",\n#                             \"value\": \"25\"\n#                         }\n#                     },\n#                     \"sub_route_map\": {\n#                         \"name\": \"mapmerge\"\n#                     }\n#                 }\n#             ],\n#             \"route_map\": \"mapmerge2\"\n#         }\n#     ],\n#     \"before\": [\n#         {\n#             \"entries\": [\n#                 {\n#                     \"action\": \"permit\",\n#                     \"description\": \"merged_map\",\n#                     \"match\": {\n#                         \"ipv6\": {\n#                             \"resolved_next_hop\": \"listr\"\n#                         },\n#                         \"router_id\": \"22\"\n#                     },\n#                     \"sequence\": 10\n#                 },\n#                 {\n#                     \"action\": \"deny\",\n#                     \"continue\": 45,\n#                     \"description\": \"newmap\",\n#                     \"match\": {\n#                         \"interface\": \"Ethernet1\"\n#                     },\n#                     \"sequence\": 25\n#                 },\n#                 {\n#                     \"action\": \"deny\",\n#                     \"sequence\": 90,\n#                     \"set\": {\n#                         \"metric\": {\n#                             \"igp_param\": \"igp-nexthop-cost\"\n#                         }\n#                     }\n#                 }\n#             ],\n#             \"route_map\": \"mapmerge\"\n#         },\n#         {\n#             \"entries\": [\n#                 {\n#                     \"action\": \"deny\",\n#                     \"match\": {\n#                         \"ipv6\": {\n#                             \"resolved_next_hop\": \"list1\"\n#                         }\n#                     },\n#                     \"sequence\": 45,\n#                     \"set\": {\n#                         \"as_path\": {\n#                             \"prepend\": {\n#                                 \"last_as\": 2\n#                             }\n#                         },\n#                         \"metric\": {\n#                             \"add\": \"igp-metric\",\n#                             \"value\": \"25\"\n#                         }\n#                     },\n#                     \"sub_route_map\": {\n#                         \"name\": \"mapmerge\"\n#                     }\n#                 }\n#             ],\n#             \"route_map\": \"mapmerge2\"\n#         }\n#     ],\n#     \"changed\": true,\n#     \"commands\": [\n#         \"no route-map mapmerge\"\n#     ],\n\n# Using deleted to delete all route-maps:\n\n# Before State:\n\n# veos#show running-config | section route-map\n# route-map mapmerge permit 10\n#    description merged_map\n#    match router-id prefix-list 22\n# !\n# route-map mapmerge deny 25\n#    description newmap\n#    match interface Ethernet1\n#    continue 45\n# !\n# route-map mapmerge2 deny 45\n#    match ipv6 resolved-next-hop prefix-list list1\n#    sub-route-map mapmerge\n#    set metric 25 +igp-metric\n#    set as-path prepend last-as 2\n# veos#\n\n  - name: Delete all route-maps\n    arista.eos.eos_route_maps:\n      state: deleted\n\n# After State:\n# veos#show running-config | section route-map\n# veos#\n#\n# Module Execution:\n#\n# \"after\": {},\n#     \"before\": [\n#         {\n#             \"entries\": [\n#                 {\n#                     \"action\": \"permit\",\n#                     \"description\": \"merged_map\",\n#                     \"match\": {\n#                         \"router_id\": \"22\"\n#                     },\n#                     \"sequence\": 10\n#                 },\n#                 {\n#                     \"action\": \"deny\",\n#                     \"continue\": 45,\n#                     \"description\": \"newmap\",\n#                     \"match\": {\n#                         \"interface\": \"Ethernet1\"\n#                     },\n#                     \"sequence\": 25\n#                 }\n#             ],\n#             \"route_map\": \"mapmerge\"\n#         },\n#         {\n#             \"entries\": [\n#                 {\n#                     \"action\": \"deny\",\n#                     \"match\": {\n#                         \"ipv6\": {\n#                             \"resolved_next_hop\": \"list1\"\n#                         }\n#                     },\n#                     \"sequence\": 45,\n#                     \"set\": {\n#                         \"as_path\": {\n#                             \"prepend\": {\n#                                 \"last_as\": 2\n#                             }\n#                         },\n#                         \"metric\": {\n#                             \"add\": \"igp-metric\",\n#                             \"value\": \"25\"\n#                         }\n#                     },\n#                     \"sub_route_map\": {\n#                         \"name\": \"mapmerge\"\n#                     }\n#                 }\n#             ],\n#             \"route_map\": \"mapmerge2\"\n#         }\n#     ],\n#     \"changed\": true,\n#     \"commands\": [\n#         \"no route-map mapmerge\",\n#         \"no route-map mapmerge2\"\n#     ],\n\n# Using gathered:\n\n# Device configs:\n\n# veos#show running-config | section route-map\n# route-map mapmerge permit 10\n#    description merged_map\n#    match router-id prefix-list 22\n# !\n# route-map mapmerge deny 25\n#    description newmap\n#    match interface Ethernet1\n#    continue 45\n# !\n# route-map mapmerge2 deny 45\n#    match ipv6 resolved-next-hop prefix-list list1\n#    sub-route-map mapmerge\n#    set metric 25 +igp-metric\n#    set as-path prepend last-as 2\n# veos#\n\n  - name: gather configs\n    arista.eos.eos_route_maps:\n      state: gathered\n\n# Module Execution:\n#   \"gathered\": [\n#         {\n#             \"entries\": [\n#                 {\n#                     \"action\": \"permit\",\n#                     \"description\": \"merged_map\",\n#                     \"match\": {\n#                         \"router_id\": \"22\"\n#                     },\n#                     \"sequence\": 10\n#                 },\n#                 {\n#                     \"action\": \"deny\",\n#                     \"continue_sequence\": 45,\n#                     \"description\": \"newmap\",\n#                     \"match\": {\n#                         \"interface\": \"Ethernet1\"\n#                     },\n#                     \"sequence\": 25\n#                 }\n#             ],\n#             \"route_map\": \"mapmerge\"\n#         },\n#         {\n#             \"entries\": [\n#                 {\n#                     \"action\": \"deny\",\n#                     \"match\": {\n#                         \"ipv6\": {\n#                             \"resolved_next_hop\": \"list1\"\n#                         }\n#                     },\n#                     \"sequence\": 45,\n#                     \"set\": {\n#                         \"as_path\": {\n#                             \"prepend\": {\n#                                 \"last_as\": 2\n#                             }\n#                         },\n#                         \"metric\": {\n#                             \"add\": \"igp-metric\",\n#                             \"value\": \"25\"\n#                         }\n#                     },\n#                     \"sub_route_map\": {\n#                         \"name\": \"mapmerge\"\n#                     }\n#                 }\n#             ],\n#             \"route_map\": \"mapmerge2\"\n#         }\n#     ],\n\n# Using rendered:\n\n  - name: Render provided configuration\n    arista.eos.eos_route_maps:\n      config:\n        - route_map: \"mapmerge\"\n          entries:\n            - description: \"merged_map\"\n              action: \"permit\"\n              sequence: 10\n              match:\n                router_id: 22\n              set:\n                bgp: 20\n            - description: \"newmap\"\n              action: \"deny\"\n              sequence: 25\n              continue_sequence: 45\n              match:\n                interface: \"Ethernet1\"\n        - route_map: \"mapmerge2\"\n          entries:\n            - sub_route_map:\n                name: \"mapmerge\"\n              action: \"deny\"\n              sequence: 45\n              set:\n                metric:\n                  value: 25\n                  add: \"igp-metric\"\n                as_path:\n                  prepend:\n                    last_as: 2\n              match:\n                ipv6:\n                  resolved_next_hop: \"list1\"\n      state: rendered\n\n# Module Execution:\n# \"rendered\": [\n#         \"route-map mapmerge permit 10\",\n#         \"match router-id prefix-list 22\",\n#         \"set bgp bestpath as-path weight 20\",\n#         \"description merged_map\",\n#         \"route-map mapmerge deny 25\",\n#         \"match interface Ethernet1\",\n#         \"description newmap\",\n#         \"continue 45\",\n#         \"route-map mapmerge2 deny 45\",\n#         \"match ipv6 resolved-next-hop prefix-list list1\",\n#         \"set metric 25 +igp-metric\",\n#         \"set as-path prepend last-as 2\",\n#         \"sub-route-map mapmerge\"\n#     ]\n\n# Using parsed:\n\n# parsed.cfg\n# route-map mapmerge permit 10\n#    description merged_map\n#    match router-id prefix-list 22\n#    set bgp bestpath as-path weight 20\n# !\n# route-map mapmerge deny 25\n#    description newmap\n#    match interface Ethernet1\n#    continue 45\n# !\n# route-map mapmerge2 deny 45\n#    match ipv6 resolved-next-hop prefix-list list1\n#    sub-route-map mapmerge\n#    set metric 25 +igp-metric\n#    set as-path prepend last-as 2\n\n  - name: parse configs\n    arista.eos.eos_route_maps:\n      running_config: \"{{ lookup('file', './parsed.cfg') }}\"\n      state: parsed\n\n# Module Execution:\n# \"parsed\": [\n#         {\n#             \"entries\": [\n#                 {\n#                     \"action\": \"permit\",\n#                     \"description\": \"merged_map\",\n#                     \"match\": {\n#                         \"router_id\": \"22\"\n#                     },\n#                     \"sequence\": 10,\n#                     \"set\": {\n#                         \"bgp\": 20\n#                     }\n#                 },\n#                 {\n#                     \"action\": \"deny\",\n#                     \"continue_sequence\": 45,\n#                     \"description\": \"newmap\",\n#                     \"match\": {\n#                         \"interface\": \"Ethernet1\"\n#                     },\n#                     \"sequence\": 25\n#                 }\n#             ],\n#             \"route_map\": \"mapmerge\"\n#         },\n#         {\n#             \"entries\": [\n#                 {\n#                     \"action\": \"deny\",\n#                     \"match\": {\n#                         \"ipv6\": {\n#                             \"resolved_next_hop\": \"list1\"\n#                         }\n#                     },\n#                     \"sequence\": 45,\n#                     \"set\": {\n#                         \"as_path\": {\n#                             \"prepend\": {\n#                                 \"last_as\": 2\n#                             }\n#                         },\n#                         \"metric\": {\n#                             \"add\": \"igp-metric\",\n#                             \"value\": \"25\"\n#                         }\n#                     },\n#                     \"sub_route_map\": {\n#                         \"name\": \"mapmerge\"\n#                     }\n#                 }\n#             ],\n#             \"route_map\": \"mapmerge2\"\n#         }\n#     ]\n\n\n\n"
  },
  "arista.eos.eos_static_route": {
    "doc": {
      "description": "This module provides declarative management of static IP routes on Arista EOS network devices.",
      "has_action": true,
      "notes": "Tested against Arista EOS 4.24.6F\nFor information on using CLI, eAPI and privileged mode see the :ref:`EOS Platform Options guide <eos_platform_options>`\nFor more information on using Ansible to manage network devices see the :ref:`Ansible Network Guide <network_guide>`\nFor more information on using Ansible to manage Arista EOS devices see the `Arista integration page <https://www.ansible.com/ansible-arista-networks>`_.",
      "options": {
        "address": {
          "aliases": [
            "prefix"
          ],
          "description": "Network address with prefix of the static route.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "admin_distance": {
          "aliases": [],
          "description": "Admin distance of the static route.",
          "default": "1",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "aggregate": {
          "aliases": [],
          "description": "List of static route definitions",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "address": {
              "aliases": [
                "prefix"
              ],
              "description": "Network address with prefix of the static route.",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "admin_distance": {
              "aliases": [],
              "description": "Admin distance of the static route.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "next_hop": {
              "aliases": [],
              "description": "Next hop IP of the static route.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "state": {
              "aliases": [],
              "description": "State of the static route configuration.",
              "type": "str",
              "required": false,
              "choices": [
                "present",
                "absent"
              ],
              "suboptions": {}
            },
            "vrf": {
              "aliases": [],
              "description": "VRF for static route.",
              "default": "default",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "next_hop": {
          "aliases": [],
          "description": "Next hop IP of the static route.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "B(Deprecated)\nStarting with Ansible 2.5 we recommend using C(connection: network_cli).\nStarting with Ansible 2.6 we recommend using C(connection: httpapi) for eAPI.\nThis option will be removed in a release after 2022-06-01.\nFor more information please see the L(EOS Platform Options guide, ../network/user_guide/platform_eos.html).\nHORIZONTALLINE\nA dict object containing connection details.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "auth_pass": {
              "aliases": [],
              "description": "Specifies the password to use if required to enter privileged mode on the remote device.  If I(authorize) is false, then this argument does nothing. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_AUTH_PASS) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "authorize": {
              "aliases": [],
              "description": "Instructs the module to enter privileged mode on the remote device before sending any commands.  If not specified, the device will attempt to execute all commands in non-privileged mode. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_AUTHORIZE) will be used instead.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "host": {
              "aliases": [],
              "description": "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [],
              "description": "Specifies the password to use to authenticate the connection to the remote device.  This is a common argument used for either I(cli) or I(eapi) transports. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "port": {
              "aliases": [],
              "description": "Specifies the port to use when building the connection to the remote device.  This value applies to either I(cli) or I(eapi).\nThe port value will default to the appropriate transport common port if none is provided in the task (cli=22, http=80, https=443).",
              "default": "0",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "ssh_keyfile": {
              "aliases": [],
              "description": "Specifies the SSH keyfile to use to authenticate the connection to the remote device.  This argument is only used for I(cli) transports. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead.",
              "type": "path",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "cli",
              "type": "str",
              "required": false,
              "choices": [
                "cli",
                "eapi"
              ],
              "suboptions": {}
            },
            "use_proxy": {
              "aliases": [],
              "description": "If C(no), the environment variables C(http_proxy) and C(https_proxy) will be ignored.",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "use_ssl": {
              "aliases": [],
              "description": "Configures the I(transport) to use SSL if set to C(yes) only when the C(transport=eapi).  If the transport argument is not eapi, this value is ignored.",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "username": {
              "aliases": [],
              "description": "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate either the CLI login or the eAPI authentication depending on which transport is used. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates.  If the transport argument is not eapi, this value is ignored.",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "State of the static route configuration.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "vrf": {
          "aliases": [],
          "description": "VRF for static route.",
          "default": "default",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "(deprecated, removed after 2022-06-01) Manage static IP routes on Arista EOS network devices",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: configure static route\n  arista.eos.eos_static_route:\n    address: 10.0.2.0/24\n    next_hop: 10.8.38.1\n    admin_distance: 2\n- name: delete static route\n  arista.eos.eos_static_route:\n    address: 10.0.2.0/24\n    next_hop: 10.8.38.1\n    state: absent\n- name: configure static routes using aggregate\n  arista.eos.eos_static_route:\n    aggregate:\n    - {address: 10.0.1.0/24, next_hop: 10.8.38.1}\n    - {address: 10.0.3.0/24, next_hop: 10.8.38.1}\n- name: Delete static route using aggregate\n  arista.eos.eos_static_route:\n    aggregate:\n    - {address: 10.0.1.0/24, next_hop: 10.8.38.1}\n    - {address: 10.0.3.0/24, next_hop: 10.8.38.1}\n    state: absent\n"
  },
  "arista.eos.eos_static_routes": {
    "doc": {
      "description": "This module configures and manages the attributes of static routes on Arista EOS platforms.",
      "has_action": true,
      "notes": "Tested against Arista EOS 4.24.6F\nThis module works with connection C(network_cli). See the L(EOS Platform Options,../network/user_guide/platform_eos.html).",
      "options": {
        "config": {
          "aliases": [],
          "description": "A list of configurations for static routes.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "address_families": {
              "aliases": [],
              "description": "A dictionary specifying the address family to which the static route(s) belong.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "afi": {
                  "aliases": [],
                  "description": "Specifies the top level address family indicator.",
                  "type": "str",
                  "required": true,
                  "choices": [
                    "ipv4",
                    "ipv6"
                  ],
                  "suboptions": {}
                },
                "routes": {
                  "aliases": [],
                  "description": "A dictionary that specifies the static route configurations.",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "dest": {
                      "aliases": [],
                      "description": "Destination IPv4 subnet (CIDR or address-mask notation).\nThe address format is <v4/v6 address>/<mask> or <v4/v6 address> <mask>.\nThe mask is number in range 0-32 for IPv4 and in range 0-128 for IPv6.",
                      "type": "str",
                      "required": true,
                      "suboptions": {}
                    },
                    "next_hops": {
                      "aliases": [],
                      "description": "Details of route to be taken.",
                      "type": "list",
                      "required": false,
                      "elements": "dict",
                      "suboptions": {
                        "admin_distance": {
                          "aliases": [],
                          "description": "Preference or administrative distance of route (range 1-255).",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "description": {
                          "aliases": [],
                          "description": "Name of the static route.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "forward_router_address": {
                          "aliases": [],
                          "description": "Forwarding router's address on destination interface.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "interface": {
                          "aliases": [],
                          "description": "Outgoing interface to take. For anything except 'null0', then next hop IP address should also be configured.\nIP address of the next hop router or\nnull0 Null0 interface or\nethernet e_num Ethernet interface or\nloopback l_num Loopback interface or\nmanagement m_num Management interface or\nport-channel p_num\nvlan v_num\nvxlan vx_num\nNexthop-Group  Specify nexthop group name\nTunnel  Tunnel interface\nvtep  Configure VXLAN Tunnel End Points",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "mpls_label": {
                          "aliases": [],
                          "description": "MPLS label",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "nexthop_grp": {
                          "aliases": [],
                          "description": "Nexthop group",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "tag": {
                          "aliases": [],
                          "description": "Route tag value (ranges from 0 to 4294967295).",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "track": {
                          "aliases": [],
                          "description": "Track value (range 1 - 512). Track must already be configured on the device before adding the route.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "vrf": {
                          "aliases": [],
                          "description": "VRF of the destination.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    }
                  }
                }
              }
            },
            "vrf": {
              "aliases": [],
              "description": "The VRF to which the static route(s) belong.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "running_config": {
          "aliases": [],
          "description": "This option is used only with state I(parsed).\nThe value of this option should be the output received from the EOS device by executing the command B(show running-config | grep routes).\nThe state I(parsed) reads the configuration from C(running_config) option and transforms it into Ansible structured data as per the resource module's argspec and the value is then returned in the I(parsed) key within the result.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The state the configuration should be left in.",
          "default": "merged",
          "type": "str",
          "required": false,
          "choices": [
            "deleted",
            "merged",
            "overridden",
            "replaced",
            "gathered",
            "rendered",
            "parsed"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Static routes resource module",
      "version_added": "1.0.0"
    },
    "examples": "\n# Using deleted\n\n# Before State:\n# ------------\n\n# veos(config)#show running-config | grep route\n# ip route vrf testvrf 22.65.1.0/24 Null0 90 name testroute\n# ipv6 route 5222:5::/64 Management1 4312:100::1\n# ipv6 route vrf testvrf 2222:6::/64 Management1 4312:100::1\n# ipv6 route vrf testvrf 2222:6::/64 Ethernet1 55\n# ipv6 route vrf testvrf 2222:6::/64 Null0 90 name testroute1\n# veos(config)#\n\n- name: Delete afi\n  arista.eos.eos_static_routes:\n    config:\n    - vrf: testvrf\n      address_families:\n      - afi: ipv4\n    state: deleted\n\n#    \"after\": [\n#        {\n#            \"address_families\": [\n#                {\n#                    \"afi\": \"ipv6\",\n#                    \"routes\": [\n#                        {\n#                            \"dest\": \"5222:5::/64\",\n#                            \"next_hops\": [\n#                                {\n#                                    \"forward_router_address\": \"4312:100::1\",\n#                                    \"interface\": \"Management1\"\n#                                }\n#                            ]\n#                        }\n#                    ]\n#                }\n#            ]\n#        },\n#        {\n#            \"address_families\": [\n#                {\n#                    \"afi\": \"ipv6\",\n#                    \"routes\": [\n#                        {\n#                            \"dest\": \"2222:6::/64\",\n#                            \"next_hops\": [\n#                                {\n#                                    \"forward_router_address\": \"4312:100::1\",\n#                                    \"interface\": \"Management1\"\n#                                },\n#                                {\n#                                    \"admin_distance\": 55,\n#                                    \"interface\": \"Ethernet1\"\n#                                },\n#                                {\n#                                    \"admin_distance\": 90,\n#                                    \"description\": \"testroute1\",\n#                                    \"interface\": \"Null0\"\n#                                }\n#                            ]\n#                        }\n#                    ]\n#                }\n#            ],\n#            \"vrf\": \"testvrf\"\n#        }\n#    ],\n#    \"before\": [\n#        {\n#            \"address_families\": [\n#                {\n#                    \"afi\": \"ipv6\",\n#                    \"routes\": [\n#                        {\n#                            \"dest\": \"5222:5::/64\",\n#                            \"next_hops\": [\n#                                {\n#                                    \"forward_router_address\": \"4312:100::1\",\n#                                    \"interface\": \"Management1\"\n#                                }\n#                            ]\n#                        }\n#                    ]\n#                }\n#            ]\n#        },\n#        {\n#            \"address_families\": [\n#                {\n#                    \"afi\": \"ipv4\",\n#                    \"routes\": [\n#                        {\n#                            \"dest\": \"22.65.1.0/24\",\n#                            \"next_hops\": [\n#                                {\n#                                    \"admin_distance\": 90,\n#                                    \"description\": \"testroute\",\n#                                    \"interface\": \"Null0\"\n#                                }\n#                            ]\n#                        }\n#                    ]\n#                },\n#                {\n#                    \"afi\": \"ipv6\",\n#                    \"routes\": [\n#                        {\n#                            \"dest\": \"2222:6::/64\",\n#                            \"next_hops\": [\n#                                {\n#                                    \"forward_router_address\": \"4312:100::1\",\n#                                    \"interface\": \"Management1\"\n#                                },\n#                                {\n#                                    \"admin_distance\": 55,\n#                                    \"interface\": \"Ethernet1\"\n#                                },\n#                                {\n#                                    \"admin_distance\": 90,\n#                                    \"description\": \"testroute1\",\n#                                    \"interface\": \"Null0\"\n#                                }\n#                            ]\n#                        }\n#                    ]\n#                }\n#            ],\n#            \"vrf\": \"testvrf\"\n#        }\n#    ],\n#    \"changed\": true,\n#    \"commands\": [\n#        \"no ip route vrf testvrf 22.65.1.0/24 Null0 90 name testroute\"\n#    ],\n\n# After State\n# ___________\n\n# veos(config)#show running-config | grep route\n# ipv6 route 5222:5::/64 Management1 4312:100::1\n# ipv6 route vrf testvrf 2222:6::/64 Management1 4312:100::1\n# ipv6 route vrf testvrf 2222:6::/64 Ethernet1 55\n# ipv6 route vrf testvrf 2222:6::/64 Null0 90 name testroute1\n\n#\n# Using merged\n\n# Before : [\n#        {\n#            \"address_families\": [\n#                {\n#                    \"afi\": \"ipv4\",\n#                    \"routes\": [\n#                        {\n#                            \"dest\": \"165.10.1.0/24\",\n#                            \"next_hops\": [\n#                                {\n#                                    \"admin_distance\": 100,\n#                                    \"interface\": \"Ethernet1\"\n#                                }\n#                            ]\n#                        },\n#                        {\n#                            \"dest\": \"172.17.252.0/24\",\n#                            \"next_hops\": [\n#                                {\n#                                    \"nexthop_grp\": \"testgroup\"\n#                                }\n#                            ]\n#                        }\n#                    ]\n#                },\n#                {\n#                    \"afi\": \"ipv6\",\n#                    \"routes\": [\n#                        {\n#                            \"dest\": \"5001::/64\",\n#                            \"next_hops\": [\n#                                {\n#                                    \"admin_distance\": 50,\n#                                    \"interface\": \"Ethernet1\"\n#                                }\n#                            ]\n#                        }\n#                    ]\n#                }\n#            ]\n#        },\n#        {\n#            \"address_families\": [\n#                {\n#                    \"afi\": \"ipv4\",\n#                    \"routes\": [\n#                        {\n#                            \"dest\": \"130.1.122.0/24\",\n#                            \"next_hops\": [\n#                                {\n#                                    \"interface\": \"Ethernet1\",\n#                                    \"tag\": 50\n#                                }\n#                            ]\n#                        }\n#                    ]\n#                }\n#            ],\n#            \"vrf\": \"testvrf\"\n#        }\n#    ]\n#\n# Before State\n# -------------\n# veos(config)#show running-config | grep \"route\"\n# ip route 165.10.1.0/24 Ethernet1 100\n# ip route 172.17.252.0/24 Nexthop-Group testgroup\n# ip route vrf testvrf 130.1.122.0/24 Ethernet1 tag 50\n# ipv6 route 5001::/64 Ethernet1 50\n# veos(config)#\n\n- name: Merge new static route configuration\n  arista.eos.eos_static_routes:\n    config:\n    - vrf: testvrf\n      address_families:\n      - afi: ipv6\n        routes:\n        - dest: 2211::0/64\n          next_hop:\n          - forward_router_address: 100:1::2\n            interface: Ethernet1\n    state: merged\n\n# After State\n# -----------\n\n#After [\n#        {\n#            \"address_families\": [\n#                {\n#                    \"afi\": \"ipv4\",\n#                    \"routes\": [\n#                        {\n#                            \"dest\": \"165.10.1.0/24\",\n#                            \"next_hops\": [\n#                                {\n#                                    \"admin_distance\": 100,\n#                                    \"interface\": \"Ethernet1\"\n#                                }\n#                            ]\n#                        },\n#                        {\n#                            \"dest\": \"172.17.252.0/24\",\n#                            \"next_hops\": [\n#                                {\n#                                    \"nexthop_grp\": \"testgroup\"\n#                                }\n#                            ]\n#                        }\n#                    ]\n#                },\n#                {\n#                    \"afi\": \"ipv6\",\n#                    \"routes\": [\n#                        {\n#                            \"dest\": \"5001::/64\",\n#                            \"next_hops\": [\n#                                {\n#                                    \"admin_distance\": 50,\n#                                    \"interface\": \"Ethernet1\"\n#                                }\n#                            ]\n#                        }\n#                    ]\n#                }\n#            ]\n#        },\n#        {\n#            \"address_families\": [\n#                {\n#                    \"afi\": \"ipv4\",\n#                    \"routes\": [\n#                        {\n#                            \"dest\": \"130.1.122.0/24\",\n#                            \"next_hops\": [\n#                                {\n#                                    \"interface\": \"Ethernet1\",\n#                                    \"tag\": 50\n#                                }\n#                            ]\n#                        }\n#                    ]\n#                },\n#                {\n#                    \"afi\": \"ipv6\",\n#                    \"routes\": [\n#                        {\n#                            \"dest\": \"2211::0/64\",\n#                            \"next_hops\": [\n#                                {\n#                                    \"aforward_router_address\": 100:1::2\n#                                    \"interface\": \"Ethernet1\"\n#                                }\n#                            ]\n#                        }\n#                    ]\n#                }\n\n#            ],\n#            \"vrf\": \"testvrf\"\n#        }\n#    ]\n#\n# veos(config)#show running-config | grep \"route\"\n# ip route 165.10.1.0/24 Ethernet1 100\n# ip route 172.17.252.0/24 Nexthop-Group testgroup\n# ip route vrf testvrf 130.1.122.0/24 Ethernet1 tag 50\n# ipv6 route 2211::/64 Ethernet1 100:1::2\n# ipv6 route 5001::/64 Ethernet1 50\n# veos(config)#\n\n\n# Using overridden\n\n\n# Before State\n# -------------\n\n#    \"before\": [\n#        {\n#            \"address_families\": [\n#                {\n#                    \"afi\": \"ipv4\",\n#                    \"routes\": [\n#                        {\n#                            \"dest\": \"165.10.1.0/24\",\n#                            \"next_hops\": [\n#                                {\n#                                    \"admin_distance\": 100,\n#                                    \"interface\": \"Ethernet1\"\n#                                }\n#                            ]\n#                        },\n#                        {\n#                            \"dest\": \"172.17.252.0/24\",\n#                            \"next_hops\": [\n#                                {\n#                                    \"nexthop_grp\": \"testgroup\"\n#                                }\n#                            ]\n#                        }\n#                    ]\n#                },\n#                {\n#                    \"afi\": \"ipv6\",\n#                    \"routes\": [\n#                        {\n#                            \"dest\": \"5001::/64\",\n#                            \"next_hops\": [\n#                                {\n#                                    \"admin_distance\": 50,\n#                                    \"interface\": \"Ethernet1\"\n#                                }\n#                            ]\n#                        }\n#                    ]\n#                }\n#            ]\n#        },\n#        {\n#            \"address_families\": [\n#                {\n#                    \"afi\": \"ipv4\",\n#                    \"routes\": [\n#                        {\n#                            \"dest\": \"130.1.122.0/24\",\n#                            \"next_hops\": [\n#                                {\n#                                    \"interface\": \"Ethernet1\",\n#                                    \"tag\": 50\n#                                }\n#                            ]\n#                        }\n#                    ]\n#                }\n#            ],\n#            \"vrf\": \"testvrf\"\n#        }\n#    ]\n# veos(config)#show running-config | grep \"route\"\n# ip route 165.10.1.0/24 Ethernet1 100\n# ip route 172.17.252.0/24 Nexthop-Group testgroup\n# ip route vrf testvrf 130.1.122.0/24 Ethernet1 tag 50\n# ipv6 route 5001::/64 Ethernet1 50\n# veos(config)#\n\n- name: Overridden static route configuration\n  arista.eos.eos_static_routes:\n    config:\n    - address_families:\n      - afi: ipv4\n        routes:\n        - dest: 10.2.2.0/24\n          next_hop:\n          - interface: Ethernet1\n    state: replaced\n\n# After State\n# -----------\n\n# \"after\": [\n#        {\n#            \"address_families\": [\n#                {\n#                    \"afi\": \"ipv4\",\n#                    \"routes\": [\n#                        {\n#                            \"dest\": \"10.2.2.0/24\",\n#                            \"next_hops\": [\n#                                {\n#                                    \"interface\": \"Ethernet1\"\n#                                }\n#                            ]\n#                        }\n#                    ]\n#                }\n#            ]\n#        }\n#    ]\n# veos(config)#show running-config | grep \"route\"\n# ip route 10.2.2.0/24 Ethernet1\n# veos(config)#\n\n\n# Using replaced\n\n# Before State\n# -------------\n\n# ip route 10.2.2.0/24 Ethernet1\n# ip route 10.2.2.0/24 64.1.1.1 label 17 33\n# ip route 33.33.33.0/24 Nexthop-Group testgrp\n# ip route vrf testvrf 22.65.1.0/24 Null0 90 name testroute\n# ipv6 route 5222:5::/64 Management1 4312:100::1\n# ipv6 route vrf testvrf 2222:6::/64 Management1 4312:100::1\n# ipv6 route vrf testvrf 2222:6::/64 Ethernet1 55\n# ipv6 route vrf testvrf 2222:6::/64 Null0 90 name testroute1\n\n# [\n#        {\n#            \"address_families\": [\n#                {\n#                    \"afi\": \"ipv4\",\n#                    \"routes\": [\n#                        {\n#                            \"dest\": \"10.2.2.0/24\",\n#                            \"next_hops\": [\n#                                {\n#                                    \"interface\": \"Ethernet1\"\n#                                },\n#                                {\n#                                    \"admin_distance\": 33,\n#                                    \"interface\": \"64.1.1.1\",\n#                                    \"mpls_label\": 17\n#                                }\n#                            ]\n#                        },\n#                        {\n#                            \"dest\": \"33.33.33.0/24\",\n#                            \"next_hops\": [\n#                                {\n#                                    \"nexthop_grp\": \"testgrp\"\n#                                }\n#                            ]\n#                        }\n#                    ]\n#                },\n#                {\n#                    \"afi\": \"ipv6\",\n#                    \"routes\": [\n#                        {\n#                            \"dest\": \"5222:5::/64\",\n#                            \"next_hops\": [\n#                                {\n#                                    \"forward_router_address\": \"4312:100::1\",\n#                                    \"interface\": \"Management1\"\n#                                }\n#                            ]\n#                        }\n#                    ]\n#                }\n#            ]\n#        },\n#        {\n#            \"address_families\": [\n#                {\n#                    \"afi\": \"ipv4\",\n#                    \"routes\": [\n#                        {\n#                            \"dest\": \"22.65.1.0/24\",\n#                            \"next_hops\": [\n#                                {\n#                                    \"admin_distance\": 90,\n#                                    \"description\": \"testroute\",\n#                                    \"interface\": \"Null0\"\n#                                }\n#                            ]\n#                        }\n#                    ]\n#                },\n#                {\n#                    \"afi\": \"ipv6\",\n#                    \"routes\": [\n#                        {\n#                            \"dest\": \"2222:6::/64\",\n#                            \"next_hops\": [\n#                                {\n#                                    \"forward_router_address\": \"4312:100::1\",\n#                                    \"interface\": \"Management1\"\n#                                },\n#                                {\n#                                    \"admin_distance\": 90,\n#                                    \"description\": \"testroute1\",\n#                                    \"interface\": \"Null0\"\n#                                }\n#                            ]\n#                        }\n#                    ]\n#                }\n#            ],\n#            \"vrf\": \"testvrf\"\n#        }\n#    ]\n\n- name: Replace nexthop\n  arista.eos.eos_static_routes:\n    config:\n    - vrf: testvrf\n      address_families:\n      - afi: ipv6\n        routes:\n        - dest: 2222:6::/64\n          next_hops:\n          - admin_distance: 55\n            interface: Ethernet1\n    state: replaced\n\n# After State\n# -----------\n\n# veos(config)#show running-config | grep route\n# ip route 10.2.2.0/24 Ethernet1\n# ip route 10.2.2.0/24 64.1.1.1 label 17 33\n# ip route 33.33.33.0/24 Nexthop-Group testgrp\n# ip route vrf testvrf 22.65.1.0/24 Null0 90 name testroute\n# ipv6 route 5222:5::/64 Management1 4312:100::1\n# ipv6 route vrf testvrf 2222:6::/64 Ethernet1 55\n\n# \"after\": [\n#        {\n#            \"address_families\": [\n#                {\n#                    \"afi\": \"ipv4\",\n#                    \"routes\": [\n#                        {\n#                            \"dest\": \"10.2.2.0/24\",\n#                            \"next_hops\": [\n#                                {\n#                                    \"interface\": \"Ethernet1\"\n#                                },\n#                                {\n#                                    \"admin_distance\": 33,\n#                                    \"interface\": \"64.1.1.1\",\n#                                    \"mpls_label\": 17\n#                                }\n#                            ]\n#                        },\n#                        {\n#                            \"dest\": \"33.33.33.0/24\",\n#                            \"next_hops\": [\n#                                {\n#                                    \"nexthop_grp\": \"testgrp\"\n#                                }\n#                            ]\n#                        }\n#                    ]\n#                },\n#                {\n#                    \"afi\": \"ipv6\",\n#                    \"routes\": [\n#                        {\n#                            \"dest\": \"5222:5::/64\",\n#                            \"next_hops\": [\n#                                {\n#                                    \"forward_router_address\": \"4312:100::1\",\n#                                    \"interface\": \"Management1\"\n#                                }\n#                            ]\n#                        }\n#                    ]\n#                }\n#            ]\n#        },\n#        {\n#            \"address_families\": [\n#                {\n#                    \"afi\": \"ipv4\",\n#                    \"routes\": [\n#                        {\n#                            \"dest\": \"22.65.1.0/24\",\n#                            \"next_hops\": [\n#                                {\n#                                    \"admin_distance\": 90,\n#                                    \"description\": \"testroute\",\n#                                    \"interface\": \"Null0\"\n#                                }\n#                            ]\n#                        }\n#                    ]\n#                },\n#                {\n#                    \"afi\": \"ipv6\",\n#                    \"routes\": [\n#                        {\n#                            \"dest\": \"2222:6::/64\",\n#                            \"next_hops\": [\n#                                {\n#                                    \"admin_distance\": 55,\n#                                    \"interface\": \"Ethernet1\"\n#                                }\n#                            ]\n#                        }\n#                    ]\n#                }\n#            ],\n#            \"vrf\": \"testvrf\"\n#        }\n#    ]\n\n# Before State\n# -------------\n# veos(config)#show running-config | grep \"route\"\n# ip route 165.10.1.0/24 Ethernet1 10.1.1.2 100\n# ipv6 route 5001::/64 Ethernet1\n# veos(config)#\n\n\n- name: Gather the exisitng condiguration\n  arista.eos.eos_static_routes:\n    state: gathered\n\n# returns :\n#  arista.eos.eos_static_routes:\n#    config:\n#      - address_families:\n#          - afi: ipv4\n#            routes:\n#              - dest: 165.10.1.0/24\n#                next_hop:\n#                  - forward_router_address: 10.1.1.2\n#                    interface: \"Ethernet1\"\n#                    admin_distance: 100\n#          - afi: ipv6\n#            routes:\n#              - dest: 5001::/64\n#                next_hop:\n#                  - interface: \"Ethernet1\"\n\n\n# Using rendered\n\n#   arista.eos.eos_static_routes:\n#    config:\n#      - address_families:\n#          - afi: ipv4\n#            routes:\n#              - dest: 165.10.1.0/24\n#                next_hop:\n#                  - forward_router_address: 10.1.1.2\n#                    interface: \"Ethernet1\"\n#                    admin_distance: 100\n#         - afi: ipv6\n#            routes:\n#              - dest: 5001::/64\n#                next_hop:\n#                  - interface: \"Ethernet1\"\n\n# returns:\n\n# ip route 165.10.1.0/24 Ethernet1 10.1.1.2 100\n# ipv6 route 5001::/64 Ethernet1\n\n\n"
  },
  "arista.eos.eos_system": {
    "doc": {
      "description": "This module provides declarative management of node system attributes on Arista EOS devices.  It provides an option to configure host system parameters or remove those parameters from the device active configuration.",
      "has_action": true,
      "notes": "Tested against Arista EOS 4.24.6F\nFor information on using CLI, eAPI and privileged mode see the :ref:`EOS Platform Options guide <eos_platform_options>`\nFor more information on using Ansible to manage network devices see the :ref:`Ansible Network Guide <network_guide>`\nFor more information on using Ansible to manage Arista EOS devices see the `Arista integration page <https://www.ansible.com/ansible-arista-networks>`_.",
      "options": {
        "domain_list": {
          "aliases": [
            "domain_search"
          ],
          "description": "Provides the list of domain suffixes to append to the hostname for the purpose of doing name resolution. This argument accepts a list of names and will be reconciled with the current active configuration on the running node.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "domain_name": {
          "aliases": [],
          "description": "Configure the IP domain name on the remote device to the provided value. Value should be in the dotted name form and will be appended to the C(hostname) to create a fully-qualified domain name.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "hostname": {
          "aliases": [],
          "description": "Configure the device hostname parameter. This option takes an ASCII string value.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "lookup_source": {
          "aliases": [],
          "description": "Provides one or more source interfaces to use for performing DNS lookups.  The interface provided in C(lookup_source) can only exist in a single VRF.  This argument accepts either a list of interface names or a list of hashes that configure the interface name and VRF name.  See examples.",
          "type": "list",
          "required": false,
          "elements": "raw",
          "suboptions": {}
        },
        "name_servers": {
          "aliases": [],
          "description": "List of DNS name servers by IP address to use to perform name resolution lookups.  This argument accepts either a list of DNS servers or a list of hashes that configure the name server and VRF name.  See examples.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "B(Deprecated)\nStarting with Ansible 2.5 we recommend using C(connection: network_cli).\nStarting with Ansible 2.6 we recommend using C(connection: httpapi) for eAPI.\nThis option will be removed in a release after 2022-06-01.\nFor more information please see the L(EOS Platform Options guide, ../network/user_guide/platform_eos.html).\nHORIZONTALLINE\nA dict object containing connection details.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "auth_pass": {
              "aliases": [],
              "description": "Specifies the password to use if required to enter privileged mode on the remote device.  If I(authorize) is false, then this argument does nothing. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_AUTH_PASS) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "authorize": {
              "aliases": [],
              "description": "Instructs the module to enter privileged mode on the remote device before sending any commands.  If not specified, the device will attempt to execute all commands in non-privileged mode. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_AUTHORIZE) will be used instead.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "host": {
              "aliases": [],
              "description": "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [],
              "description": "Specifies the password to use to authenticate the connection to the remote device.  This is a common argument used for either I(cli) or I(eapi) transports. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "port": {
              "aliases": [],
              "description": "Specifies the port to use when building the connection to the remote device.  This value applies to either I(cli) or I(eapi).\nThe port value will default to the appropriate transport common port if none is provided in the task (cli=22, http=80, https=443).",
              "default": "0",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "ssh_keyfile": {
              "aliases": [],
              "description": "Specifies the SSH keyfile to use to authenticate the connection to the remote device.  This argument is only used for I(cli) transports. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead.",
              "type": "path",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "cli",
              "type": "str",
              "required": false,
              "choices": [
                "cli",
                "eapi"
              ],
              "suboptions": {}
            },
            "use_proxy": {
              "aliases": [],
              "description": "If C(no), the environment variables C(http_proxy) and C(https_proxy) will be ignored.",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "use_ssl": {
              "aliases": [],
              "description": "Configures the I(transport) to use SSL if set to C(yes) only when the C(transport=eapi).  If the transport argument is not eapi, this value is ignored.",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "username": {
              "aliases": [],
              "description": "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate either the CLI login or the eAPI authentication depending on which transport is used. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates.  If the transport argument is not eapi, this value is ignored.",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "State of the configuration values in the device's current active configuration.  When set to I(present), the values should be configured in the device active configuration and when set to I(absent) the values should not be in the device active configuration",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manage the system attributes on Arista EOS devices",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: configure hostname and domain-name\n  arista.eos.eos_system:\n    hostname: eos01\n    domain_name: test.example.com\n\n- name: remove configuration\n  arista.eos.eos_system:\n    state: absent\n\n- name: configure DNS lookup sources\n  arista.eos.eos_system:\n    lookup_source: Management1\n\n- name: configure DNS lookup sources with VRF support\n  arista.eos.eos_system:\n    lookup_source:\n    - interface: Management1\n      vrf: mgmt\n    - interface: Ethernet1\n      vrf: myvrf\n\n- name: configure name servers\n  arista.eos.eos_system:\n    name_servers:\n    - 8.8.8.8\n    - 8.8.4.4\n\n- name: configure name servers with VRF support\n  arista.eos.eos_system:\n    name_servers:\n    - {server: 8.8.8.8, vrf: mgmt}\n    - {server: 8.8.4.4, vrf: mgmt}\n"
  },
  "arista.eos.eos_user": {
    "doc": {
      "description": "This module provides declarative management of the local usernames configured on Arista EOS devices.  It allows playbooks to manage either individual usernames or the collection of usernames in the current running config.  It also supports purging usernames from the configuration that are not explicitly defined.",
      "has_action": true,
      "notes": "Tested against Arista EOS 4.24.6F\nFor information on using CLI, eAPI and privileged mode see the :ref:`EOS Platform Options guide <eos_platform_options>`\nFor more information on using Ansible to manage network devices see the :ref:`Ansible Network Guide <network_guide>`\nFor more information on using Ansible to manage Arista EOS devices see the `Arista integration page <https://www.ansible.com/ansible-arista-networks>`_.",
      "options": {
        "aggregate": {
          "aliases": [
            "users",
            "collection"
          ],
          "description": "The set of username objects to be configured on the remote Arista EOS device.  The list entries can either be the username or a hash of username and properties.  This argument is mutually exclusive with the C(username) argument.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "configured_password": {
              "aliases": [],
              "description": "The password to be configured on the remote Arista EOS device. The password needs to be provided in clear and it will be encrypted on the device. Please note that this option is not same as C(provider password).",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "name": {
              "aliases": [],
              "description": "The username to be configured on the remote Arista EOS device.  This argument accepts a stringv value and is mutually exclusive with the C(aggregate) argument. Please note that this option is not same as C(provider username).",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "nopassword": {
              "aliases": [],
              "description": "Defines the username without assigning a password.  This will allow the user to login to the system without being authenticated by a password.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "privilege": {
              "aliases": [],
              "description": "The C(privilege) argument configures the privilege level of the user when logged into the system.  This argument accepts integer values in the range of 1 to 15.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "role": {
              "aliases": [],
              "description": "Configures the role for the username in the device running configuration.  The argument accepts a string value defining the role name.  This argument does not check if the role has been configured on the device.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "sshkey": {
              "aliases": [],
              "description": "Specifies the SSH public key to configure for the given username.  This argument accepts a valid SSH key value.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "state": {
              "aliases": [],
              "description": "Configures the state of the username definition as it relates to the device operational configuration.  When set to I(present), the username(s) should be configured in the device active configuration and when set to I(absent) the username(s) should not be in the device active configuration",
              "type": "str",
              "required": false,
              "choices": [
                "present",
                "absent"
              ],
              "suboptions": {}
            },
            "update_password": {
              "aliases": [],
              "description": "Since passwords are encrypted in the device running config, this argument will instruct the module when to change the password.  When set to C(always), the password will always be updated in the device and when set to C(on_create) the password will be updated only if the username is created.",
              "type": "str",
              "required": false,
              "choices": [
                "on_create",
                "always"
              ],
              "suboptions": {}
            }
          }
        },
        "configured_password": {
          "aliases": [],
          "description": "The password to be configured on the remote Arista EOS device. The password needs to be provided in clear and it will be encrypted on the device. Please note that this option is not same as C(provider password).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The username to be configured on the remote Arista EOS device.  This argument accepts a stringv value and is mutually exclusive with the C(aggregate) argument. Please note that this option is not same as C(provider username).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "nopassword": {
          "aliases": [],
          "description": "Defines the username without assigning a password.  This will allow the user to login to the system without being authenticated by a password.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "privilege": {
          "aliases": [],
          "description": "The C(privilege) argument configures the privilege level of the user when logged into the system.  This argument accepts integer values in the range of 1 to 15.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "B(Deprecated)\nStarting with Ansible 2.5 we recommend using C(connection: network_cli).\nStarting with Ansible 2.6 we recommend using C(connection: httpapi) for eAPI.\nThis option will be removed in a release after 2022-06-01.\nFor more information please see the L(EOS Platform Options guide, ../network/user_guide/platform_eos.html).\nHORIZONTALLINE\nA dict object containing connection details.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "auth_pass": {
              "aliases": [],
              "description": "Specifies the password to use if required to enter privileged mode on the remote device.  If I(authorize) is false, then this argument does nothing. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_AUTH_PASS) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "authorize": {
              "aliases": [],
              "description": "Instructs the module to enter privileged mode on the remote device before sending any commands.  If not specified, the device will attempt to execute all commands in non-privileged mode. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_AUTHORIZE) will be used instead.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "host": {
              "aliases": [],
              "description": "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [],
              "description": "Specifies the password to use to authenticate the connection to the remote device.  This is a common argument used for either I(cli) or I(eapi) transports. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "port": {
              "aliases": [],
              "description": "Specifies the port to use when building the connection to the remote device.  This value applies to either I(cli) or I(eapi).\nThe port value will default to the appropriate transport common port if none is provided in the task (cli=22, http=80, https=443).",
              "default": "0",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "ssh_keyfile": {
              "aliases": [],
              "description": "Specifies the SSH keyfile to use to authenticate the connection to the remote device.  This argument is only used for I(cli) transports. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead.",
              "type": "path",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "cli",
              "type": "str",
              "required": false,
              "choices": [
                "cli",
                "eapi"
              ],
              "suboptions": {}
            },
            "use_proxy": {
              "aliases": [],
              "description": "If C(no), the environment variables C(http_proxy) and C(https_proxy) will be ignored.",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "use_ssl": {
              "aliases": [],
              "description": "Configures the I(transport) to use SSL if set to C(yes) only when the C(transport=eapi).  If the transport argument is not eapi, this value is ignored.",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "username": {
              "aliases": [],
              "description": "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate either the CLI login or the eAPI authentication depending on which transport is used. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates.  If the transport argument is not eapi, this value is ignored.",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "purge": {
          "aliases": [],
          "description": "Instructs the module to consider the resource definition absolute.  It will remove any previously configured usernames on the device with the exception of the `admin` user which cannot be deleted per EOS constraints.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "role": {
          "aliases": [],
          "description": "Configures the role for the username in the device running configuration.  The argument accepts a string value defining the role name.  This argument does not check if the role has been configured on the device.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "sshkey": {
          "aliases": [],
          "description": "Specifies the SSH public key to configure for the given username.  This argument accepts a valid SSH key value.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Configures the state of the username definition as it relates to the device operational configuration.  When set to I(present), the username(s) should be configured in the device active configuration and when set to I(absent) the username(s) should not be in the device active configuration",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "update_password": {
          "aliases": [],
          "description": "Since passwords are encrypted in the device running config, this argument will instruct the module when to change the password.  When set to C(always), the password will always be updated in the device and when set to C(on_create) the password will be updated only if the username is created.",
          "default": "always",
          "type": "str",
          "required": false,
          "choices": [
            "on_create",
            "always"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manage the collection of local users on EOS devices",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: create a new user\n  arista.eos.eos_user:\n    name: ansible\n    sshkey: \"{{ lookup('file', '~/.ssh/id_rsa.pub') }}\"\n    state: present\n\n- name: remove all users except admin\n  arista.eos.eos_user:\n    purge: yes\n\n- name: set multiple users to privilege level 15\n  arista.eos.eos_user:\n    aggregate:\n    - name: netop\n    - name: netend\n    privilege: 15\n    state: present\n\n- name: Change Password for User netop\n  arista.eos.eos_user:\n    username: netop\n    configured_password: '{{ new_password }}'\n    update_password: always\n    state: present\n"
  },
  "arista.eos.eos_vlan": {
    "doc": {
      "description": "This module provides declarative management of VLANs on Arista EOS network devices.",
      "has_action": true,
      "notes": "Tested against Arista EOS 4.24.6F\nFor information on using CLI, eAPI and privileged mode see the :ref:`EOS Platform Options guide <eos_platform_options>`\nFor more information on using Ansible to manage network devices see the :ref:`Ansible Network Guide <network_guide>`\nFor more information on using Ansible to manage Arista EOS devices see the `Arista integration page <https://www.ansible.com/ansible-arista-networks>`_.",
      "options": {
        "aggregate": {
          "aliases": [],
          "description": "List of VLANs definitions.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "associated_interfaces": {
              "aliases": [],
              "description": "This is a intent option and checks the operational state of the for given vlan C(name) for associated interfaces. The name of interface is case sensitive and should be in expanded format and not abbreviated. If the value in the C(associated_interfaces) does not match with the operational state of vlan interfaces on device it will result in failure.",
              "type": "list",
              "required": false,
              "elements": "str",
              "suboptions": {}
            },
            "delay": {
              "aliases": [],
              "description": "Delay the play should wait to check for declarative intent params values.",
              "default": "10",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "interfaces": {
              "aliases": [],
              "description": "List of interfaces that should be associated to the VLAN. The name of interface is case sensitive and should be in expanded format and not abbreviated.",
              "type": "list",
              "required": false,
              "elements": "str",
              "suboptions": {}
            },
            "name": {
              "aliases": [],
              "description": "Name of the VLAN.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "state": {
              "aliases": [],
              "description": "State of the VLAN configuration.",
              "default": "present",
              "type": "str",
              "required": false,
              "choices": [
                "present",
                "absent",
                "active",
                "suspend"
              ],
              "suboptions": {}
            },
            "vlan_id": {
              "aliases": [],
              "description": "ID of the VLAN.",
              "type": "int",
              "required": true,
              "suboptions": {}
            }
          }
        },
        "associated_interfaces": {
          "aliases": [],
          "description": "This is a intent option and checks the operational state of the for given vlan C(name) for associated interfaces. The name of interface is case sensitive and should be in expanded format and not abbreviated. If the value in the C(associated_interfaces) does not match with the operational state of vlan interfaces on device it will result in failure.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "delay": {
          "aliases": [],
          "description": "Delay the play should wait to check for declarative intent params values.",
          "default": "10",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "interfaces": {
          "aliases": [],
          "description": "List of interfaces that should be associated to the VLAN. The name of interface is case sensitive and should be in expanded format and not abbreviated.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the VLAN.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "B(Deprecated)\nStarting with Ansible 2.5 we recommend using C(connection: network_cli).\nStarting with Ansible 2.6 we recommend using C(connection: httpapi) for eAPI.\nThis option will be removed in a release after 2022-06-01.\nFor more information please see the L(EOS Platform Options guide, ../network/user_guide/platform_eos.html).\nHORIZONTALLINE\nA dict object containing connection details.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "auth_pass": {
              "aliases": [],
              "description": "Specifies the password to use if required to enter privileged mode on the remote device.  If I(authorize) is false, then this argument does nothing. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_AUTH_PASS) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "authorize": {
              "aliases": [],
              "description": "Instructs the module to enter privileged mode on the remote device before sending any commands.  If not specified, the device will attempt to execute all commands in non-privileged mode. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_AUTHORIZE) will be used instead.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "host": {
              "aliases": [],
              "description": "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [],
              "description": "Specifies the password to use to authenticate the connection to the remote device.  This is a common argument used for either I(cli) or I(eapi) transports. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "port": {
              "aliases": [],
              "description": "Specifies the port to use when building the connection to the remote device.  This value applies to either I(cli) or I(eapi).\nThe port value will default to the appropriate transport common port if none is provided in the task (cli=22, http=80, https=443).",
              "default": "0",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "ssh_keyfile": {
              "aliases": [],
              "description": "Specifies the SSH keyfile to use to authenticate the connection to the remote device.  This argument is only used for I(cli) transports. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead.",
              "type": "path",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "cli",
              "type": "str",
              "required": false,
              "choices": [
                "cli",
                "eapi"
              ],
              "suboptions": {}
            },
            "use_proxy": {
              "aliases": [],
              "description": "If C(no), the environment variables C(http_proxy) and C(https_proxy) will be ignored.",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "use_ssl": {
              "aliases": [],
              "description": "Configures the I(transport) to use SSL if set to C(yes) only when the C(transport=eapi).  If the transport argument is not eapi, this value is ignored.",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "username": {
              "aliases": [],
              "description": "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate either the CLI login or the eAPI authentication depending on which transport is used. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates.  If the transport argument is not eapi, this value is ignored.",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "purge": {
          "aliases": [],
          "description": "Purge VLANs not defined in the I(aggregate) parameter.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "State of the VLAN configuration.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent",
            "active",
            "suspend"
          ],
          "suboptions": {}
        },
        "vlan_id": {
          "aliases": [],
          "description": "ID of the VLAN.",
          "type": "int",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "(deprecated, removed after 2022-06-01) Manage VLANs on Arista EOS network devices",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create vlan\n  arista.eos.eos_vlan:\n    vlan_id: 4000\n    name: vlan-4000\n    state: present\n\n- name: Add interfaces to vlan\n  arista.eos.eos_vlan:\n    vlan_id: 4000\n    state: present\n    interfaces:\n    - Ethernet1\n    - Ethernet2\n\n- name: Check if interfaces is assigned to vlan\n  arista.eos.eos_vlan:\n    vlan_id: 4000\n    associated_interfaces:\n    - Ethernet1\n    - Ethernet2\n\n- name: Suspend vlan\n  arista.eos.eos_vlan:\n    vlan_id: 4000\n    state: suspend\n\n- name: Unsuspend vlan\n  arista.eos.eos_vlan:\n    vlan_id: 4000\n    state: active\n\n- name: Create aggregate of vlans\n  arista.eos.eos_vlan:\n    aggregate:\n    - vlan_id: 4000\n    - {vlan_id: 4001, name: vlan-4001}\n"
  },
  "arista.eos.eos_vlans": {
    "doc": {
      "description": "This module provides declarative management of VLANs on Arista EOS network devices.",
      "has_action": true,
      "notes": "Tested against Arista EOS 4.24.6F\nThis module works with connection C(network_cli). See the L(EOS Platform Options,../network/user_guide/platform_eos.html).",
      "options": {
        "config": {
          "aliases": [],
          "description": "A dictionary of VLANs options",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "name": {
              "aliases": [],
              "description": "Name of the VLAN.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "state": {
              "aliases": [],
              "description": "Operational state of the VLAN",
              "type": "str",
              "required": false,
              "choices": [
                "active",
                "suspend"
              ],
              "suboptions": {}
            },
            "vlan_id": {
              "aliases": [],
              "description": "ID of the VLAN. Range 1-4094",
              "type": "int",
              "required": true,
              "suboptions": {}
            }
          }
        },
        "running_config": {
          "aliases": [],
          "description": "This option is used only with state I(parsed).\nThe value of this option should be the output received from the EOS device by executing the command B(show running-config | section vlan).\nThe state I(parsed) reads the configuration from C(running_config) option and transforms it into Ansible structured data as per the resource module's argspec and the value",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The state of the configuration after module completion",
          "default": "merged",
          "type": "str",
          "required": false,
          "choices": [
            "merged",
            "replaced",
            "overridden",
            "deleted",
            "rendered",
            "gathered",
            "parsed"
          ],
          "suboptions": {}
        }
      },
      "short_description": "VLANs resource module",
      "version_added": "1.0.0"
    },
    "examples": "\n# Using deleted\n\n# Before state:\n# -------------\n#\n# veos(config-vlan-20)#show running-config | section vlan\n# vlan 10\n#    name ten\n# !\n# vlan 20\n#    name twenty\n\n- name: Delete attributes of the given VLANs.\n  arista.eos.eos_vlans:\n    config:\n    - vlan_id: 20\n    state: deleted\n\n# After state:\n# ------------\n#\n# veos(config-vlan-20)#show running-config | section vlan\n# vlan 10\n#    name ten\n\n\n# Using merged\n\n# Before state:\n# -------------\n#\n# veos(config-vlan-20)#show running-config | section vlan\n# vlan 10\n#    name ten\n# !\n# vlan 20\n#    name twenty\n\n- name: Merge given VLAN attributes with device configuration\n  arista.eos.eos_vlans:\n    config:\n    - vlan_id: 20\n      state: suspend\n    state: merged\n\n# After state:\n# ------------\n#\n# veos(config-vlan-20)#show running-config | section vlan\n# vlan 10\n#    name ten\n# !\n# vlan 20\n#    name twenty\n#    state suspend\n\n\n# Using overridden\n\n# Before state:\n# -------------\n#\n# veos(config-vlan-20)#show running-config | section vlan\n# vlan 10\n#    name ten\n# !\n# vlan 20\n#    name twenty\n\n- name: Override device configuration of all VLANs with provided configuration\n  arista.eos.eos_vlans:\n    config:\n    - vlan_id: 20\n      state: suspend\n    state: overridden\n\n# After state:\n# ------------\n#\n# veos(config-vlan-20)#show running-config | section vlan\n# vlan 20\n#    state suspend\n\n\n# Using replaced\n\n# Before state:\n# -------------\n#\n# veos(config-vlan-20)#show running-config | section vlan\n# vlan 10\n#    name ten\n# !\n# vlan 20\n#    name twenty\n\n- name: Replace all attributes of specified VLANs with provided configuration\n  arista.eos.eos_vlans:\n    config:\n    - vlan_id: 20\n      state: suspend\n    state: replaced\n\n# After state:\n# ------------\n#\n# veos(config-vlan-20)#show running-config | section vlan\n# vlan 10\n#    name ten\n# !\n# vlan 20\n#    state suspend\n\n# using parsed\n\n# parsed.cfg\n# vlan 10\n#    name ten\n# !\n# vlan 20\n#    name twenty\n#    state suspend\n\n- name: Use parsed to convert native configs to structured data\n  arista.eos.eos_vlans:\n    running_config: \"{{ lookup('file', 'parsed.cfg') }}\"\n    state: parsed\n\n# Output:\n# -------\n#   parsed:\n#     - vlan_id: 10\n#       name: ten\n#     - vlan_id: 20\n#       state: suspend\n\n# Using rendered:\n\n- name: Use Rendered to convert the structured data to native config\n  arista.eos.eos_vlans:\n    config:\n    - vlan_id: 10\n      name: ten\n    - vlan_id: 20\n      state: suspend\n    state: rendered\n\n# Output:\n# ------\n# rendered:\n#   - \"vlan 10\"\n#   - \"name ten\"\n#   - \"vlan 20\"\n#   - \"state suspend\"\n\n# Using gathered:\n# native_config:\n# vlan 10\n#    name ten\n# !\n# vlan 20\n#    name twenty\n#    state suspend\n\n- name: Gather vlans facts from the device\n  arista.eos.eos_vlans:\n    state: gathered\n\n# Output:\n# ------\n\n# gathered:\n#   - vlan_id: 10\n#     name: ten\n#   - vlan_id: 20\n#     state: suspend\n\n"
  },
  "arista.eos.eos_vrf": {
    "doc": {
      "description": "This module provides declarative management of VRFs on Arista EOS network devices.",
      "has_action": true,
      "notes": "Tested against Arista EOS 4.24.6F\nFor information on using CLI, eAPI and privileged mode see the :ref:`EOS Platform Options guide <eos_platform_options>`\nFor more information on using Ansible to manage network devices see the :ref:`Ansible Network Guide <network_guide>`\nFor more information on using Ansible to manage Arista EOS devices see the `Arista integration page <https://www.ansible.com/ansible-arista-networks>`_.",
      "options": {
        "aggregate": {
          "aliases": [],
          "description": "List of VRFs instances",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "associated_interfaces": {
              "aliases": [],
              "description": "This is a intent option and checks the operational state of the for given vrf C(name) for associated interfaces. If the value in the C(associated_interfaces) does not match with the operational state of vrf interfaces on device it will result in failure.",
              "type": "list",
              "required": false,
              "elements": "str",
              "suboptions": {}
            },
            "delay": {
              "aliases": [],
              "description": "Time in seconds to wait before checking for the operational state on remote device. This wait is applicable for operational state arguments.",
              "default": "10",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "interfaces": {
              "aliases": [],
              "description": "Identifies the set of interfaces that should be configured in the VRF. Interfaces must be routed interfaces in order to be placed into a VRF. The name of interface should be in expanded format and not abbreviated.",
              "type": "list",
              "required": false,
              "elements": "str",
              "suboptions": {}
            },
            "name": {
              "aliases": [],
              "description": "Name of the VRF.",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "rd": {
              "aliases": [],
              "description": "Route distinguisher of the VRF",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "state": {
              "aliases": [],
              "description": "State of the VRF configuration.",
              "default": "present",
              "type": "str",
              "required": false,
              "choices": [
                "present",
                "absent"
              ],
              "suboptions": {}
            }
          }
        },
        "associated_interfaces": {
          "aliases": [],
          "description": "This is a intent option and checks the operational state of the for given vrf C(name) for associated interfaces. If the value in the C(associated_interfaces) does not match with the operational state of vrf interfaces on device it will result in failure.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "delay": {
          "aliases": [],
          "description": "Time in seconds to wait before checking for the operational state on remote device. This wait is applicable for operational state arguments.",
          "default": "10",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "interfaces": {
          "aliases": [],
          "description": "Identifies the set of interfaces that should be configured in the VRF. Interfaces must be routed interfaces in order to be placed into a VRF. The name of interface should be in expanded format and not abbreviated.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the VRF.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "B(Deprecated)\nStarting with Ansible 2.5 we recommend using C(connection: network_cli).\nStarting with Ansible 2.6 we recommend using C(connection: httpapi) for eAPI.\nThis option will be removed in a release after 2022-06-01.\nFor more information please see the L(EOS Platform Options guide, ../network/user_guide/platform_eos.html).\nHORIZONTALLINE\nA dict object containing connection details.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "auth_pass": {
              "aliases": [],
              "description": "Specifies the password to use if required to enter privileged mode on the remote device.  If I(authorize) is false, then this argument does nothing. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_AUTH_PASS) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "authorize": {
              "aliases": [],
              "description": "Instructs the module to enter privileged mode on the remote device before sending any commands.  If not specified, the device will attempt to execute all commands in non-privileged mode. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_AUTHORIZE) will be used instead.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "host": {
              "aliases": [],
              "description": "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [],
              "description": "Specifies the password to use to authenticate the connection to the remote device.  This is a common argument used for either I(cli) or I(eapi) transports. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "port": {
              "aliases": [],
              "description": "Specifies the port to use when building the connection to the remote device.  This value applies to either I(cli) or I(eapi).\nThe port value will default to the appropriate transport common port if none is provided in the task (cli=22, http=80, https=443).",
              "default": "0",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "ssh_keyfile": {
              "aliases": [],
              "description": "Specifies the SSH keyfile to use to authenticate the connection to the remote device.  This argument is only used for I(cli) transports. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead.",
              "type": "path",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "cli",
              "type": "str",
              "required": false,
              "choices": [
                "cli",
                "eapi"
              ],
              "suboptions": {}
            },
            "use_proxy": {
              "aliases": [],
              "description": "If C(no), the environment variables C(http_proxy) and C(https_proxy) will be ignored.",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "use_ssl": {
              "aliases": [],
              "description": "Configures the I(transport) to use SSL if set to C(yes) only when the C(transport=eapi).  If the transport argument is not eapi, this value is ignored.",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "username": {
              "aliases": [],
              "description": "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate either the CLI login or the eAPI authentication depending on which transport is used. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates.  If the transport argument is not eapi, this value is ignored.",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "purge": {
          "aliases": [],
          "description": "Purge VRFs not defined in the I(aggregate) parameter.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "rd": {
          "aliases": [],
          "description": "Route distinguisher of the VRF",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "State of the VRF configuration.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manage VRFs on Arista EOS network devices",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create vrf\n  arista.eos.eos_vrf:\n    name: test\n    rd: 1:200\n    interfaces:\n    - Ethernet2\n    state: present\n\n- name: Delete VRFs\n  arista.eos.eos_vrf:\n    name: test\n    state: absent\n\n- name: Create aggregate of VRFs with purge\n  arista.eos.eos_vrf:\n    aggregate:\n    - name: test4\n      rd: 1:204\n    - name: test5\n      rd: 1:205\n    state: present\n    purge: yes\n\n- name: Delete aggregate of VRFs\n  arista.eos.eos_vrf:\n    aggregate:\n    - name: test2\n    - name: test3\n    - name: test4\n    - name: test5\n    state: absent\n"
  }
}