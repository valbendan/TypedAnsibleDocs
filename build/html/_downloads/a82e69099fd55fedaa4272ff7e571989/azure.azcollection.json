{
  "azure.azcollection.azure_rm_adapplication": {
    "doc": {
      "description": "Manage Azure Active Directory application.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "allow_guests_sign_in": {
          "aliases": [],
          "description": "A property on the application to indicate if the application accepts other IDPs or not or partially accepts.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "app_id": {
          "aliases": [],
          "description": "Application ID.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "app_roles": {
          "aliases": [],
          "description": "Declare the roles you want to associate with your application.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "allowed_member_types": {
              "aliases": [],
              "description": "Specifies whether this app role can be assigned to users and groups I(allowed_member_types=User).\nTo other application's I(allowed_member_types=Application).\nOr both C(User) and C(Appplication).",
              "type": "list",
              "required": true,
              "elements": "str",
              "suboptions": {}
            },
            "description": {
              "aliases": [],
              "description": "The description for the app role.\nThis is displayed when the app role is being assigned.\nif the app role functions as an application permission, during consent experiences.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "display_name": {
              "aliases": [],
              "description": "Display name for the permission that appears in the app role assignment and consent experiences.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "is_enabled": {
              "aliases": [],
              "description": "When creating or updating an app role, this must be set to true (which is the default).\nTo delete a role, this must first be set to false.\nAt that point, in a subsequent call, this role may be removed.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "value": {
              "aliases": [],
              "description": "Specifies the value to include in the roles claim in ID tokens and access tokens authenticating an assigned user or service principal.\nMust not exceed 120 characters in length.\nAllowed characters include !\nAny other character, including the space character, are not allowed.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "available_to_other_tenants": {
          "aliases": [],
          "description": "The application can be used from any Azure AD tenants.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "credential_description": {
          "aliases": [],
          "description": "The description of the password.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "display_name": {
          "aliases": [],
          "description": "The display name of the application.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "end_date": {
          "aliases": [],
          "description": "Date or datetime after which credentials expire(e.g. '2017-12-31').\nDefault value is one year after current time.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "homepage": {
          "aliases": [],
          "description": "The url where users can sign in and use your app.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "identifier_uris": {
          "aliases": [],
          "description": "Space-separated unique URIs that Azure AD can use for this app.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "key_type": {
          "aliases": [],
          "description": "The type of the key credentials associated with the application.",
          "default": "AsymmetricX509Cert",
          "type": "str",
          "required": false,
          "choices": [
            "AsymmetricX509Cert",
            "Password",
            "Symmetric"
          ],
          "suboptions": {}
        },
        "key_usage": {
          "aliases": [],
          "description": "The usage of the key credentials associated with the application.",
          "default": "Verify",
          "type": "str",
          "required": false,
          "choices": [
            "Sign",
            "Verify"
          ],
          "suboptions": {}
        },
        "key_value": {
          "aliases": [],
          "description": "The value for the key credentials associated with the application.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "native_app": {
          "aliases": [],
          "description": "An application which can be installed on a user's device or computer.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "oauth2_allow_implicit_flow": {
          "aliases": [],
          "description": "Whether to allow implicit grant flow for OAuth2.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "optional_claims": {
          "aliases": [],
          "description": "Declare the optional claims for the application.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "additional_properties": {
              "aliases": [],
              "description": "Additional properties of the claim.\nIf a property exists in this collection, it modifies the behavior of the optional claim specified in the name property.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "essential": {
              "aliases": [],
              "description": "If the value is true, the claim specified by the client is necessary to ensure a smooth authorization experience for the specific task requested by the end user.\nThe default value is false.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "name": {
              "aliases": [],
              "description": "The name of the optional claim.",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "source": {
              "aliases": [],
              "description": "The source (directory object) of the claim.\nThere are predefined claims and user-defined claims from extension properties.\nIf the source value is null, the claim is a predefined optional claim.\nIf the source value is user, the value in the name property is the extension property from the user object.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "password": {
          "aliases": [],
          "description": "App password, aka 'client secret'.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "reply_urls": {
          "aliases": [],
          "description": "Space-separated URIs to which Azure AD will redirect in response to an OAuth 2.0 request.\nThe value does not need to be a physical endpoint, but must be a valid URI.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "required_resource_accesses": {
          "aliases": [],
          "description": "Resource scopes and roles the application requires access to.\nShould be in manifest json format.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "resource_access": {
              "aliases": [],
              "description": "The description of the app role.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "id": {
                  "aliases": [],
                  "description": "The unique identifier for one of the oauth2PermissionScopes or appRole instances that the resource application exposes.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "type": {
                  "aliases": [],
                  "description": "Specifies whether the id property references an oauth2PermissionScopes or an appRole.\nPossible values are Scope or Role.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "resource_app_id": {
              "aliases": [],
              "description": "The unique identifier for the resource that the application requires access to.\nThis should be equal to the appId declared on the target resource application.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "start_date": {
          "aliases": [],
          "description": "Date or datetime at which credentials become valid, such as '2017-01-01'.\nDefault value is current time.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Assert the state of Active Dirctory service principal.\nUse C(present) to create or update a Password and use C(absent) to delete.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "The tenant ID.",
          "type": "str",
          "required": true,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage Azure Active Directory application",
      "version_added": "1.6.0"
    },
    "examples": "\n  - name: Create ad application\n    azure_rm_adapplication:\n      tenant: \"{{ tenant_id }}\"\n      display_name: \"{{ display_name }}\"\n\n  - name: Create application with more parameter\n    azure_rm_adapplication:\n      tenant: \"{{ tenant_id }}\"\n      display_name: \"{{ display_name }}\"\n      available_to_other_tenants: False\n      credential_description: \"for test\"\n      end_date: 2021-10-01\n      start_date: 2021-05-18\n      identifier_uris: fredtest02.com\n\n  - name: delete ad application\n    azure_rm_adapplication:\n      tenant: \"{{ tenant_id }}\"\n      app_id: \"{{ app_id }}\"\n      state: absent\n"
  },
  "azure.azcollection.azure_rm_adapplication_info": {
    "doc": {
      "description": "Get Azure Active Directory application info.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "app_id": {
          "aliases": [],
          "description": "The application ID.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "identifier_uri": {
          "aliases": [],
          "description": "It's identifier_uri's object ID.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "object_id": {
          "aliases": [],
          "description": "It's application's object ID.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "The tenant ID.",
          "type": "str",
          "required": true,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure Active Directory application info",
      "version_added": "1.6.0"
    },
    "examples": "\n  - name: get ad app info by App ID\n    azure_rm_adapplication_info:\n      app_id: \"{{ app_id }}\"\n      tenant: \"{{ tenant_id }}\"\n\n  - name: get ad app info ---- by object ID\n    azure_rm_adapplication_info:\n      object_id: \"{{ object_id }}\"\n      tenant: \"{{ tenant_id }}\"\n\n  - name: get ad app info ---- by identifier uri\n    azure_rm_adapplication_info:\n      identifier_uri: \"{{ identifier_uri }}\"\n      tenant: \"{{ tenant_id }}\"\n\n"
  },
  "azure.azcollection.azure_rm_adgroup": {
    "doc": {
      "description": "Create, update or delete Azure Active Directory group.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "absent_members": {
          "aliases": [],
          "description": "The azure ad objects asserted to not be members of the group.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "absent_owners": {
          "aliases": [],
          "description": "The azure ad objects asserted to not be owners of the group.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "display_name": {
          "aliases": [],
          "description": "The display name of the ad group.\nCan be used with I(mail_nickname) instead of I(object_id) to reference existing group.\nRequired when creating a new ad group.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "mail_nickname": {
          "aliases": [],
          "description": "The mail nickname of the ad group.\nCan be used with I(display_name) instead of I(object_id) to reference existing group.\nRequired when creating a new ad group.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "object_id": {
          "aliases": [],
          "description": "The object id for the ad group.\nCan be used to reference when updating an existing group.\nIgnored when attempting to create a group.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "present_members": {
          "aliases": [],
          "description": "The azure ad objects asserted to be members of the group.\nThis list does not need to be all inclusive. Objects that are members and not on this list remain members.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "present_owners": {
          "aliases": [],
          "description": "The azure ad objects asserted to be owners of the group.\nThis list does not need to be all inclusive. Objects that are owners and not on this list remain members.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Assert the state of the resource group. Use C(present) to create or update and C(absent) to delete.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "The tenant ID.",
          "type": "str",
          "required": true,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage Azure Active Directory group",
      "version_added": "1.6.0"
    },
    "examples": "\n    - name: Create Group\n      azure_rm_adgroup:\n        tenant: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n        display_name: \"Group-Name\"\n        mail_nickname: \"Group-Mail-Nickname\"\n        state: 'present'\n\n    - name: Delete Group using display_name and mail_nickname\n      azure_rm_adgroup:\n        tenant: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n        display_name: \"Group-Name\"\n        mail_nickname: \"Group-Mail-Nickname\"\n        state: 'absent'\n\n    - name: Delete Group using object_id\n      azure_rm_adgroup:\n        tenant: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n        object_id: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n        state: 'absent'\n\n    - name: Ensure Users are Members of a Group using display_name and mail_nickname\n      azure_rm_adgroup:\n        tenant: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n        display_name: \"Group-Name\"\n        mail_nickname: \"Group-Mail-Nickname\"\n        state: 'present'\n        present_members:\n          - \"https://graph.windows.net/{{ tenant_id }}/directoryObjects/{{ ad_object_1_object_id }}\"\n          - \"https://graph.windows.net/{{ tenant_id }}/directoryObjects/{{ ad_object_2_object_id }}\"\n\n    - name: Ensure Users are Members of a Group using object_id\n      azure_rm_adgroup:\n        tenant: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n        object_id: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n        state: 'present'\n        present_members:\n          - \"https://graph.windows.net/{{ ad_object_1_tenant_id }}/directoryObjects/{{ ad_object_1_object_id }}\"\n          - \"https://graph.windows.net/{{ ad_object_2_tenant_id }}/directoryObjects/{{ ad_object_2_object_id }}\"\n\n    - name: Ensure Users are not Members of a Group using display_name and mail_nickname\n      azure_rm_adgroup:\n        tenant: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n        display_name: \"Group-Name\"\n        mail_nickname: \"Group-Mail-Nickname\"\n        state: 'present'\n        absent_members:\n          - \"{{ ad_object_1_object_id }}\"\n\n    - name: Ensure Users are Members of a Group using object_id\n      azure_rm_adgroup:\n        tenant: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n        object_id: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n        state: 'present'\n        absent_members:\n          - \"{{ ad_object_1_object_id }}\"\n\n    - name: Ensure Users are Owners of a Group using display_name and mail_nickname\n      azure_rm_adgroup:\n        tenant: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n        display_name: \"Group-Name\"\n        mail_nickname: \"Group-Mail-Nickname\"\n        state: 'present'\n        present_owners:\n          - \"https://graph.windows.net/{{ tenant_id }}/directoryObjects/{{ ad_object_1_object_id }}\"\n          - \"https://graph.windows.net/{{ tenant_id }}/directoryObjects/{{ ad_object_2_object_id }}\"\n\n    - name: Ensure Users are Owners of a Group using object_id\n      azure_rm_adgroup:\n        tenant: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n        object_id: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n        state: 'present'\n        present_owners:\n          - \"https://graph.windows.net/{{ ad_object_1_tenant_id }}/directoryObjects/{{ ad_object_1_object_id }}\"\n          - \"https://graph.windows.net/{{ ad_object_2_tenant_id }}/directoryObjects/{{ ad_object_2_object_id }}\"\n\n    - name: Ensure Users are not Owners of a Group using display_name and mail_nickname\n      azure_rm_adgroup:\n        tenant: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n        display_name: \"Group-Name\"\n        mail_nickname: \"Group-Mail-Nickname\"\n        state: 'present'\n        absent_owners:\n          - \"{{ ad_object_1_object_id }}\"\n          - \"{{ ad_object_2_object_id }}\"\n\n    - name: Ensure Users are Owners of a Group using object_id\n      azure_rm_adgroup:\n        tenant: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n        object_id: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n        state: 'present'\n        absent_owners:\n          - \"{{ ad_object_1_object_id }}\"\n          - \"{{ ad_object_2_object_id }}\"\n\n"
  },
  "azure.azcollection.azure_rm_adgroup_info": {
    "doc": {
      "description": "Get Azure Active Directory group info.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "all": {
          "aliases": [],
          "description": "If True, will return all groups in tenant.\nIf False will return no users.\nIt is recommended that you instead identify a subset of groups and use filter.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "attribute_name": {
          "aliases": [],
          "description": "The name of an attribute that you want to match to attribute_value.\nIf attribute_name is not a collection type it will return groups where attribute_name is equal to attribute_value.\nIf attribute_name is a collection type it will return groups where attribute_value is in attribute_name.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "attribute_value": {
          "aliases": [],
          "description": "The value to match attribute_name to.\nIf attribute_name is not a collection type it will return groups where attribute_name is equal to attribute_value.\nIf attribute_name is a collection type it will groups users where attribute_value is in attribute_name.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "check_membership": {
          "aliases": [],
          "description": "The object ID of the contact, group, user, or service principal to check for membership against returned groups.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "object_id": {
          "aliases": [],
          "description": "The object id for the ad group.\nreturns the group which has this object ID.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "odata_filter": {
          "aliases": [],
          "description": "returns groups based on the the OData filter passed into this parameter.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "return_group_members": {
          "aliases": [],
          "description": "Indicate whether the members of a group should be returned with the returned groups.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "return_member_groups": {
          "aliases": [],
          "description": "Indicate whether the groups in which a groups is a member should be returned with the returned groups.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "return_owners": {
          "aliases": [],
          "description": "Indicate whether the owners of a group should be returned with the returned groups.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "The tenant ID.",
          "type": "str",
          "required": true,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure Active Directory group info",
      "version_added": "1.6.0"
    },
    "examples": "\n    - name: Return a specific group using object_id\n      azure_rm_adgroup_info:\n        object_id: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n        tenant: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n\n    - name: Return a specific group using object_id and  return the owners of the group\n      azure_rm_adgroup_info:\n        object_id: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n        return_owners: True\n        tenant: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n\n    - name: Return a specific group using object_id and return the owners and members of the group\n      azure_rm_adgroup_info:\n        object_id: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n        return_owners: True\n        return_group_members: True\n        tenant: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n\n    - name: Return a specific group using object_id and return the groups the group is a member of\n      azure_rm_adgroup_info:\n        object_id: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n        return_member_groups: True\n        tenant: \"{{ tenant_id }}\"\n\n    - name: Return a specific group using object_id and check an ID for membership\n      azure_rm_adgroup_info:\n        object_id: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n        check_membership: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n        tenant: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n\n    - name: Return a specific group using displayName for attribute_name\n      azure_rm_adgroup_info:\n        attribute_name: \"displayName\"\n        attribute_value: \"Display-Name-Of-AD-Group\"\n        tenant: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n\n    - name: Return groups matching odata_filter\n      azure_rm_adgroup_info:\n        odata_filter: \"mailNickname eq 'Mail-Nickname-Of-AD-Group'\"\n        tenant: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n\n    - name: Return all groups\n      azure_rm_adgroup_info:\n        tenant: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n        all: True\n\n"
  },
  "azure.azcollection.azure_rm_adpassword": {
    "doc": {
      "description": "Manage application password.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "app_id": {
          "aliases": [],
          "description": "The application ID.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "app_object_id": {
          "aliases": [],
          "description": "The application object ID.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "end_date": {
          "aliases": [],
          "description": "Date or datemtime after which credentials expire.\nDefault value is one year after current time.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "key_id": {
          "aliases": [],
          "description": "The password key ID.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_principal_object_id": {
          "aliases": [],
          "description": "The service principal object ID.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Assert the state of Active Dirctory Password.\nUse C(present) to create or update a Password and use C(absent) to delete.\nUpdate is not supported, if I(state=absent) and I(key_id=None), then all passwords of the application will be deleted.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "The tenant ID.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "value": {
          "aliases": [],
          "description": "The application password value.\nLength greater than 18 characters.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage application password",
      "version_added": "0.2.0"
    },
    "examples": "\n    - name: create ad password\n      azure_rm_adpassword:\n        app_id: \"{{ app_id }}\"\n        state: present\n        value: \"$abc12345678\"\n        tenant: \"{{ tenant_id }}\"\n"
  },
  "azure.azcollection.azure_rm_adpassword_info": {
    "doc": {
      "description": "Get application password info.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "app_id": {
          "aliases": [],
          "description": "The application ID.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "app_object_id": {
          "aliases": [],
          "description": "The application object ID.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "end_date": {
          "aliases": [],
          "description": "Date or datemtime after which credentials expire.\nDefault value is one year after current time.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "key_id": {
          "aliases": [],
          "description": "The password key ID.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_principal_object_id": {
          "aliases": [],
          "description": "The service principal object ID.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "The tenant ID.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "value": {
          "aliases": [],
          "description": "The application password value.\nLength greater than 18 characters.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get application password info",
      "version_added": "0.2.0"
    },
    "examples": "\n  - name: get ad password info\n    azure_rm_adpassword_info:\n      app_id: \"{{ app_id }}\"\n      tenant: \"{{ tenant_id }}\"\n      key_id: \"{{ key_id }}\"\n"
  },
  "azure.azcollection.azure_rm_adserviceprincipal": {
    "doc": {
      "description": "Manage Azure Active Directory service principal.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "app_id": {
          "aliases": [],
          "description": "The application ID.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "app_role_assignment_required": {
          "aliases": [],
          "description": "Whether the Role of the Service Principal is set.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Assert the state of Active Dirctory service principal.\nUse C(present) to create or update a Password and use C(absent) to delete.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "The tenant ID.",
          "type": "str",
          "required": true,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage Azure Active Directory service principal",
      "version_added": "0.2.0"
    },
    "examples": "\n  - name: create ad sp\n    azure_rm_adserviceprincipal:\n      app_id: \"{{ app_id }}\"\n      state: present\n      tenant: \"{{ tenant_id }}\"\n"
  },
  "azure.azcollection.azure_rm_adserviceprincipal_info": {
    "doc": {
      "description": "Get Azure Active Directory service principal info.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "app_id": {
          "aliases": [],
          "description": "The application ID.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "object_id": {
          "aliases": [],
          "description": "It's service principal's object ID.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "The tenant ID.",
          "type": "str",
          "required": true,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure Active Directory service principal info",
      "version_added": "0.2.0"
    },
    "examples": "\n  - name: get ad sp info\n    azure_rm_adserviceprincipal_info:\n      app_id: \"{{ app_id }}\"\n      tenant: \"{{ tenant_id }}\"\n\n"
  },
  "azure.azcollection.azure_rm_aduser": {
    "doc": {
      "description": "Create, delete, and update an Azure Active Directory user.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "account_enabled": {
          "aliases": [],
          "description": "A boolean determing whether or not the user account is enabled.\nUsed when either creating or updating a user account.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "attribute_name": {
          "aliases": [],
          "description": "The name of an attribute that you want to match to attribute_value.\nIf attribute_name is not a collection type it will update or delete the user where attribute_name is equal to attribute_value.\nIf attribute_name is a collection type it will update or delete the user where attribute_value is in attribute_name.\nMutually exclusive with I(object_id), I(user_principal_name), and I(odata_filter).\nRequired together with I(attribute_value).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "attribute_value": {
          "aliases": [],
          "description": "The value to match attribute_name to.\nIf attribute_name is not a collection type it will update or delete the user where attribute_name is equal to attribute_value.\nIf attribute_name is a collection type it will update or delete the user where attribute_value is in attribute_name.\nRequired together with I(attribute_name).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "display_name": {
          "aliases": [],
          "description": "The display name of the user.\nUsed when either creating or updating a user account.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "given_name": {
          "aliases": [],
          "description": "The given name for the user.\nUsed when either creating or updating a user account.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "immutable_id": {
          "aliases": [],
          "description": "The immutable_id of the user.\nUsed when either creating or updating a user account.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "mail": {
          "aliases": [],
          "description": "The primary email address of the user.\nUsed when either creating or updating a user account.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "mail_nickname": {
          "aliases": [],
          "description": "The mail alias for the user.\nUsed when either creating or updating a user account.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "object_id": {
          "aliases": [],
          "description": "The object id for the user.\nUpdates or deletes the user who has this object ID.\nMutually exclusive with I(user_principal_name), I(attribute_name), and I(odata_filter).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "odata_filter": {
          "aliases": [],
          "description": "Filter that can be used to specify a user to update or delete.\nMutually exclusive with I(object_id), I(attribute_name), and I(user_principal_name).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password_profile": {
          "aliases": [],
          "description": "The password for the user.\nUsed when either creating or updating a user account.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "State of the ad user. Use C(present) to create or update an ad user and C(absent) to delete an ad user.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "surname": {
          "aliases": [],
          "description": "The surname for the user.\nUsed when either creating or updating a user account.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "The tenant ID.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "usage_location": {
          "aliases": [],
          "description": "A two letter country code, ISO standard 3166.\nRequired for a user that will be assigned licenses due to legal requirement to check for availability of services in countries.\nUsed when either creating or updating a user account.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "user_principal_name": {
          "aliases": [],
          "description": "The principal name of the user.\nCreates, updates, or deletes the user who has this principal name.\nMutually exclusive with I(object_id), I(attribute_name), and I(odata_filter).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "user_type": {
          "aliases": [],
          "description": "A string value that can be used to classify user types in your directory, such as Member and Guest.\nUsed when either creating or updating a user account.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Modify an Azure Active Directory user",
      "version_added": "1.5.0"
    },
    "examples": "\n- name: Create user\n  azure_rm_aduser:\n    user_principal_name: \"{{ user_id }}\"\n    tenant: \"{{ tenant_id }}\"\n    state: \"present\"\n    account_enabled: \"True\"\n    display_name: \"Test_{{ user_principal_name }}_Display_Name\"\n    password_profile: \"password\"\n    mail_nickname: \"Test_{{ user_principal_name }}_mail_nickname\"\n    immutable_id: \"{{ object_id }}\"\n    given_name: \"First\"\n    surname: \"Last\"\n    user_type: \"Member\"\n    usage_location: \"US\"\n    mail: \"{{ user_principal_name }}@contoso.com\"\n\n- name: Update user with new value for account_enabled\n  azure_rm_aduser:\n    user_principal_name: \"{{ user_id }}\"\n    tenant: \"{{ tenant_id }}\"\n    state: \"present\"\n    account_enabled: \"False\"\n\n- name: Delete user\n  azure_rm_aduser:\n    user_principal_name: \"{{ user_id }}\"\n    tenant: \"{{ tenant_id }}\"\n    state: \"absent\"\n\n"
  },
  "azure.azcollection.azure_rm_aduser_info": {
    "doc": {
      "description": "Get Azure Active Directory user info.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "all": {
          "aliases": [],
          "description": "If True, will return all users in tenant.\nIf False will return no users.\nIt is recommended that you instead identify a subset of users and use filter.\nMutually exclusive with I(object_id), I(attribute_name), I(odata_filter) and I(user_principal_name).",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "attribute_name": {
          "aliases": [],
          "description": "The name of an attribute that you want to match to attribute_value.\nIf attribute_name is not a collection type it will return users where attribute_name is equal to attribute_value.\nIf attribute_name is a collection type it will return users where attribute_value is in attribute_name.\nMutually exclusive with I(object_id), I(user_principal_name), I(odata_filter) and I(all).\nRequired together with I(attribute_value).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "attribute_value": {
          "aliases": [],
          "description": "The value to match attribute_name to.\nIf attribute_name is not a collection type it will return users where attribute_name is equal to attribute_value.\nIf attribute_name is a collection type it will return users where attribute_value is in attribute_name.\nRequired together with I(attribute_name).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "object_id": {
          "aliases": [],
          "description": "The object id for the user.\nreturns the user who has this object ID.\nMutually exclusive with I(user_principal_name), I(attribute_name), I(odata_filter) and I(all).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "odata_filter": {
          "aliases": [],
          "description": "returns users based on the the OData filter passed into this parameter.\nMutually exclusive with I(object_id), I(attribute_name), I(user_principal_name) and I(all).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "The tenant ID.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "user_principal_name": {
          "aliases": [],
          "description": "The principal name of the user.\nreturns the user who has this principal name.\nMutually exclusive with I(object_id), I(attribute_name), I(odata_filter) and I(all).",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure Active Directory user info",
      "version_added": "1.4.0"
    },
    "examples": "\n    - name: Using user_principal_name\n      azure.azcollection.azure_rm_aduser_info:\n        user_principal_name: user@contoso.com\n        tenant: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n\n    - name: Using object_id\n      azure.azcollection.azure_rm_aduser_info:\n        object_id: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n        tenant: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n\n    - name: Using attribute mailNickname - not a collection\n      azure.azcollection.azure_rm_aduser_info:\n        attribute_name: mailNickname\n        attribute_value: users_mailNickname\n        tenant: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n\n    - name: Using attribute proxyAddresses - a collection\n      azure.azcollection.azure_rm_aduser_info:\n        attribute_name: proxyAddresses\n        attribute_value: SMTP:user@contoso.com\n        tenant: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n\n    - name: Using Filter mailNickname\n      azure.azcollection.azure_rm_aduser_info:\n        odata_filter: mailNickname eq 'user@contoso.com'\n        tenant: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n\n    - name: Using Filter proxyAddresses\n      azure.azcollection.azure_rm_aduser_info:\n        odata_filter: proxyAddresses/any(c:c eq 'SMTP:user@contoso.com')\n        tenant: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n"
  },
  "azure.azcollection.azure_rm_aks": {
    "doc": {
      "description": "Create, update and delete a managed Azure Container Service (AKS) instance.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "aad_profile": {
          "aliases": [],
          "description": "Profile of Azure Active Directory configuration.",
          "required": false,
          "suboptions": {
            "client_app_id": {
              "aliases": [],
              "description": "The client AAD application ID.",
              "required": false,
              "suboptions": {}
            },
            "server_app_id": {
              "aliases": [],
              "description": "The server AAD application ID.",
              "required": false,
              "suboptions": {}
            },
            "server_app_secret": {
              "aliases": [],
              "description": "The server AAD application secret.",
              "required": false,
              "suboptions": {}
            },
            "tenant_id": {
              "aliases": [],
              "description": "The AAD tenant ID to use for authentication.\nIf not specified, will use the tenant of the deployment subscription.",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "addon": {
          "aliases": [],
          "description": "Profile of managed cluster add-on.\nKey can be C(http_application_routing), C(monitoring), C(virtual_node).\nValue must be a dict contains a bool variable C(enabled).",
          "type": "dict",
          "required": false,
          "suboptions": {
            "http_application_routing": {
              "aliases": [],
              "description": "The HTTP application routing solution makes it easy to access applications that are deployed to your cluster.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "enabled": {
                  "aliases": [],
                  "description": "Whether the solution enabled.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "monitoring": {
              "aliases": [],
              "description": "It gives you performance visibility by collecting memory and processor metrics from controllers, nodes, and containers that are available in Kubernetes through the Metrics API.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "enabled": {
                  "aliases": [],
                  "description": "Whether the solution enabled.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "log_analytics_workspace_resource_id": {
                  "aliases": [],
                  "description": "Where to store the container metrics.",
                  "required": true,
                  "suboptions": {}
                }
              }
            },
            "virtual_node": {
              "aliases": [],
              "description": "With virtual nodes, you have quick provisioning of pods, and only pay per second for their execution time.\nYou don't need to wait for Kubernetes cluster autoscaler to deploy VM compute nodes to run the additional pods.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "enabled": {
                  "aliases": [],
                  "description": "Whether the solution enabled.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "subnet_resource_id": {
                  "aliases": [],
                  "description": "Subnet associated to the cluster.",
                  "required": true,
                  "suboptions": {}
                }
              }
            }
          }
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "agent_pool_profiles": {
          "aliases": [],
          "description": "The agent pool profile suboptions.",
          "required": false,
          "suboptions": {
            "availability_zones": {
              "aliases": [],
              "description": "Availability zones for nodes. Must use VirtualMachineScaleSets AgentPoolType.",
              "type": "list",
              "required": false,
              "choices": [
                "1",
                "2",
                "3"
              ],
              "suboptions": {}
            },
            "count": {
              "aliases": [],
              "description": "Number of agents (VMs) to host docker containers.\nAllowed values must be in the range of C(1) to C(100) (inclusive).",
              "required": true,
              "suboptions": {}
            },
            "enable_auto_scaling": {
              "aliases": [],
              "description": "To enable auto-scaling.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "max_count": {
              "aliases": [],
              "description": "Maximum number of nodes for auto-scaling.\nRequired if I(enable_auto_scaling=True).",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "max_pods": {
              "aliases": [],
              "description": "Maximum number of pods schedulable on nodes.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "min_count": {
              "aliases": [],
              "description": "Minmum number of nodes for auto-scaling.\nRequired if I(enable_auto_scaling=True).",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "mode": {
              "aliases": [],
              "description": "AgentPoolMode represents mode of an agent pool.\nPossible values include C(System) and C(User).\nSystem AgentPoolMode requires a minimum VM SKU of at least 2 vCPUs and 4GB memory.",
              "type": "str",
              "required": false,
              "choices": [
                "System",
                "User"
              ],
              "suboptions": {}
            },
            "name": {
              "aliases": [],
              "description": "Unique name of the agent pool profile in the context of the subscription and resource group.",
              "required": true,
              "suboptions": {}
            },
            "node_labels": {
              "aliases": [],
              "description": "Agent pool node labels to be persisted across all nodes in agent pool.",
              "type": "dict",
              "required": false,
              "suboptions": {}
            },
            "os_disk_size_gb": {
              "aliases": [],
              "description": "Size of the OS disk.",
              "required": false,
              "suboptions": {}
            },
            "type": {
              "aliases": [],
              "description": "AgentPoolType represents types of an agent pool.\nPossible values include C(VirtualMachineScaleSets) and C(AvailabilitySet).",
              "type": "str",
              "required": false,
              "choices": [
                "VirtualMachineScaleSets",
                "AvailabilitySet"
              ],
              "suboptions": {}
            },
            "vm_size": {
              "aliases": [],
              "description": "The VM Size of each of the Agent Pool VM's (e.g. C(Standard_F1) / C(Standard_D2v2)).",
              "required": true,
              "suboptions": {}
            },
            "vnet_subnet_id": {
              "aliases": [],
              "description": "Specifies the VNet's subnet identifier.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "dns_prefix": {
          "aliases": [],
          "description": "DNS prefix specified when creating the managed cluster.",
          "required": false,
          "suboptions": {}
        },
        "enable_rbac": {
          "aliases": [],
          "description": "Enable RBAC.\nExisting non-RBAC enabled AKS clusters cannot currently be updated for RBAC use.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "kubernetes_version": {
          "aliases": [],
          "description": "Version of Kubernetes specified when creating the managed cluster.",
          "required": false,
          "suboptions": {}
        },
        "linux_profile": {
          "aliases": [],
          "description": "The Linux profile suboptions.\nOptional, provide if you need an ssh access to the cluster nodes.",
          "required": false,
          "suboptions": {
            "admin_username": {
              "aliases": [],
              "description": "The Admin Username for the cluster.",
              "required": true,
              "suboptions": {}
            },
            "ssh_key": {
              "aliases": [],
              "description": "The Public SSH Key used to access the cluster.",
              "required": true,
              "suboptions": {}
            }
          }
        },
        "location": {
          "aliases": [],
          "description": "Valid azure location. Defaults to location of the resource group.",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the managed Azure Container Services (AKS) instance.",
          "required": true,
          "suboptions": {}
        },
        "network_profile": {
          "aliases": [],
          "description": "Profile of network configuration.",
          "required": false,
          "suboptions": {
            "dns_service_ip": {
              "aliases": [],
              "description": "An IP address assigned to the Kubernetes DNS service.\nIt must be within the Kubernetes service address range specified in serviceCidr.",
              "default": "10.0.0.10",
              "required": false,
              "suboptions": {}
            },
            "docker_bridge_cidr": {
              "aliases": [],
              "description": "A CIDR notation IP range assigned to the Docker bridge network.\nIt must not overlap with any Subnet IP ranges or the Kubernetes service address range.",
              "default": "172.17.0.1/16",
              "required": false,
              "suboptions": {}
            },
            "load_balancer_sku": {
              "aliases": [],
              "description": "The load balancer sku for the managed cluster.",
              "required": false,
              "choices": [
                "standard",
                "basic"
              ],
              "suboptions": {}
            },
            "network_plugin": {
              "aliases": [],
              "description": "Network plugin used for building Kubernetes network.\nThis property cannot been changed.\nWith C(kubenet), nodes get an IP address from the Azure virtual network subnet.\nAKS features such as Virtual Nodes or network policies aren't supported with C(kubenet).\nC(azure) enables Azure Container Networking Interface(CNI), every pod gets an IP address from the subnet and can be accessed directly.",
              "default": "kubenet",
              "required": false,
              "choices": [
                "azure",
                "kubenet"
              ],
              "suboptions": {}
            },
            "network_policy": {
              "aliases": [],
              "description": "Network policy used for building Kubernetes network.",
              "required": false,
              "choices": [
                "azure",
                "calico"
              ],
              "suboptions": {}
            },
            "pod_cidr": {
              "aliases": [],
              "description": "A CIDR notation IP range from which to assign pod IPs when I(network_plugin=kubenet) is used.\nIt should be a large address space that isn't in use elsewhere in your network environment.\nThis address range must be large enough to accommodate the number of nodes that you expect to scale up to.",
              "default": "10.244.0.0/16",
              "required": false,
              "suboptions": {}
            },
            "service_cidr": {
              "aliases": [],
              "description": "A CIDR notation IP range from which to assign service cluster IPs.\nIt must not overlap with any Subnet IP ranges.\nIt should be the *.10 address of your service IP address range.",
              "default": "10.0.0.0/16",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "node_resource_group": {
          "aliases": [],
          "description": "Name of the resource group containing agent pool nodes.\nUnable to update.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Name of a resource group where the managed Azure Container Services (AKS) exists or will be created.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_principal": {
          "aliases": [],
          "description": "The service principal suboptions. If not provided - use system-assigned managed identity.",
          "required": false,
          "suboptions": {
            "client_id": {
              "aliases": [],
              "description": "The ID for the Service Principal.",
              "required": true,
              "suboptions": {}
            },
            "client_secret": {
              "aliases": [],
              "description": "The secret password associated with the service principal.",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "Assert the state of the AKS. Use C(present) to create or update an AKS and C(absent) to delete it.",
          "default": "present",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage a managed Azure Container Service (AKS) instance",
      "version_added": "0.1.2"
    },
    "examples": "\n    - name: Create an AKS instance With A System Node Pool & A User Node Pool\n      azure_rm_aks:\n        name: myAKS\n        resource_group: myResourceGroup\n        location: eastus\n        dns_prefix: akstest\n        kubernetes_version: 1.14.6\n        linux_profile:\n          admin_username: azureuser\n          ssh_key: ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAA...\n        service_principal:\n          client_id: \"cf72ca99-f6b9-4004-b0e0-bee10c521948\"\n          client_secret: \"Password1234!\"\n        agent_pool_profiles:\n          - name: default\n            count: 1\n            vm_size: Standard_B2s\n            enable_auto_scaling: True\n            type: VirtualMachineScaleSets\n            mode: System\n            max_count: 3\n            min_count: 1\n            enable_rbac: yes\n          - name: user\n            count: 1\n            vm_size: Standard_D2_v2\n            enable_auto_scaling: True\n            type: VirtualMachineScaleSets\n            mode: User\n            max_count: 3\n            min_count: 1\n            enable_rbac: yes\n\n    - name: Create a managed Azure Container Services (AKS) instance\n      azure_rm_aks:\n        name: myAKS\n        location: eastus\n        resource_group: myResourceGroup\n        dns_prefix: akstest\n        kubernetes_version: 1.14.6\n        linux_profile:\n          admin_username: azureuser\n          ssh_key: ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAA...\n        service_principal:\n          client_id: \"cf72ca99-f6b9-4004-b0e0-bee10c521948\"\n          client_secret: \"Password123!\"\n        agent_pool_profiles:\n          - name: default\n            count: 5\n            mode: System\n            vm_size: Standard_B2s\n        tags:\n          Environment: Production\n\n    - name: Use minimal parameters and system-assigned identity\n      azure_rm_aks:\n        name: myMinimalCluster\n        location: eastus\n        resource_group: myExistingResourceGroup\n        dns_prefix: akstest\n        agent_pool_profiles:\n          - name: default\n            count: 1\n            vm_size: Standard_D2_v2\n\n    - name: Remove a managed Azure Container Services (AKS) instance\n      azure_rm_aks:\n        name: myAKS\n        resource_group: myResourceGroup\n        state: absent\n"
  },
  "azure.azcollection.azure_rm_aks_info": {
    "doc": {
      "description": "Get facts for a specific Azure Kubernetes Service or all Azure Kubernetes Services.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Limit results to a specific resource group.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The resource group to search for the desired Azure Kubernetes Service",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "show_kubeconfig": {
          "aliases": [],
          "description": "Show kubeconfig of the AKS cluster.\nNote the operation will cost more network overhead, not recommended when listing AKS.",
          "required": false,
          "choices": [
            "user",
            "admin"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure Kubernetes Service facts",
      "version_added": "0.1.2"
    },
    "examples": "\n    - name: Get facts for one Azure Kubernetes Service\n      azure_rm_aks_info:\n        name: Testing\n        resource_group: myResourceGroup\n\n    - name: Get facts for all Azure Kubernetes Services\n      azure_rm_aks_info:\n\n    - name: Get facts by tags\n      azure_rm_aks_info:\n        tags:\n          - testing\n"
  },
  "azure.azcollection.azure_rm_aksupgrade_info": {
    "doc": {
      "description": "Get the upgrade versions available for a managed Azure Container Service (AKS) instance.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the managed Azure Container Services (AKS) instance.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Name of a resource group where the managed Azure Container Services (AKS) exists.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get the upgrade versions available for a AKS instance",
      "version_added": "1.4.0"
    },
    "examples": "\n    - name: Get available upgrade versions for AKS instance\n      azure_rm_aksupgrade_info:\n        name: myAKS\n        resource_group: myResourceGroup\n      register: myAKSupgrades\n"
  },
  "azure.azcollection.azure_rm_aksversion_info": {
    "doc": {
      "description": "Get available kubernetes versions supported by Azure Kubernetes Service.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "location": {
          "aliases": [],
          "description": "Get the versions available for creating a managed Kubernetes cluster.",
          "required": true,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "version": {
          "aliases": [],
          "description": "Get the upgrade versions available for a managed Kubernetes cluster version.",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get available kubernetes versions supported by Azure Kubernetes Service",
      "version_added": "0.1.2"
    },
    "examples": "\n    - name: Get available versions for AKS in location eastus\n      azure_rm_aksversion_info:\n        location: eastus\n    - name: Get  available versions an AKS can be upgrade to\n      azure_rm_aksversion_info:\n        location: eastis\n        version: 1.11.6\n"
  },
  "azure.azcollection.azure_rm_apimanagement": {
    "doc": {
      "description": "Create azure api instance.\nUpdate the existing azure api instance.\nDelete azure api instance.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_id": {
          "aliases": [],
          "description": "API revision identifier. It must be unique in the current API Management service instance.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_revision": {
          "aliases": [],
          "description": "Describes the Revision of the Api.\nIf no value is provided, default revision 1 is created",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "api_revision_description": {
          "aliases": [],
          "description": "Description of the Api Revision.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "api_type": {
          "aliases": [],
          "description": "Type of Api to create.\nC(http) creates a SOAP to REST API.\nC(soap) creates a SOAP pass-through API.",
          "type": "str",
          "required": false,
          "choices": [
            "soap",
            "http"
          ],
          "suboptions": {}
        },
        "api_version": {
          "aliases": [],
          "description": "Indicates the Version identifier of the API if the API is versioned",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "api_version_description": {
          "aliases": [],
          "description": "Description of the Api Version.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "api_version_set": {
          "aliases": [],
          "description": "Version set details",
          "type": "dict",
          "required": false,
          "suboptions": {
            "description": {
              "aliases": [],
              "description": "Description of API Version Set.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "id": {
              "aliases": [],
              "description": "Identifier for existing API Version Set\nOmit this value to create a new Version Set.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "name": {
              "aliases": [],
              "description": "The display Name of the API Version Set.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "version_header_name": {
              "aliases": [],
              "description": "Name of HTTP header parameter that indicates the API Version if versioningScheme is set to `header`.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "version_query_name": {
              "aliases": [],
              "description": "Name of query parameter that indicates the API Version if versioningScheme is set to `query`.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "versioning_scheme": {
              "aliases": [],
              "description": "An value that determines where the API Version identifer will be located in a HTTP request.",
              "type": "str",
              "required": false,
              "choices": [
                "Segment",
                "Query",
                "Header"
              ],
              "suboptions": {}
            }
          }
        },
        "api_version_set_id": {
          "aliases": [],
          "description": "A resource identifier for the related ApiVersionSet.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "authentication_settings": {
          "aliases": [],
          "description": "Collection of authentication settings included into this API.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "o_auth2": {
              "aliases": [],
              "description": "OAuth2 Authentication settings",
              "type": "dict",
              "required": false,
              "suboptions": {
                "authorization_server_id": {
                  "aliases": [],
                  "description": "OAuth authorization server identifier.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "scope": {
                  "aliases": [],
                  "description": "operations scope.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "openid": {
              "aliases": [],
              "description": "OpenID Connect Authentication Settings",
              "type": "dict",
              "required": false,
              "suboptions": {
                "bearer_token_sending_methods": {
                  "aliases": [],
                  "description": "How to send token to the server.",
                  "type": "list",
                  "required": false,
                  "choices": [
                    "authorizationHeader",
                    "query"
                  ],
                  "elements": "str",
                  "suboptions": {}
                },
                "openid_provider_id": {
                  "aliases": [],
                  "description": "OAuth authorization server identifier.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            }
          }
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "Description of the API.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "display_name": {
          "aliases": [],
          "description": "API Name to be displayed. It must be 1 to 300 characters long.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "format": {
          "aliases": [],
          "description": "Format of the Content in which the API is getting imported.",
          "type": "str",
          "required": false,
          "choices": [
            "wadl-xml",
            "wadl-link-json",
            "swagger-json",
            "swagger-link-json",
            "wsdl",
            "wsdl-link",
            "openapi",
            "openapi+json",
            "openapi-link"
          ],
          "suboptions": {}
        },
        "is_current": {
          "aliases": [],
          "description": "Indicates if API revision is current api revision.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "path": {
          "aliases": [],
          "description": "Relative URL uniquely identifying this API.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "protocols": {
          "aliases": [],
          "description": "Describes on which protocols the operations in this API can be invoked.",
          "type": "list",
          "required": false,
          "choices": [
            "http",
            "https"
          ],
          "elements": "str",
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_name": {
          "aliases": [],
          "description": "The name of the API Management service.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "service_url": {
          "aliases": [],
          "description": "Absolute URL of the backend service implementing this API\nCannot be more than 2000 characters long.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "source_api_id": {
          "aliases": [],
          "description": "API identifier of the source API.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "State of the Api.\nUse C(present) to create or update an Api and C(absent) to delete it.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_key_parameter_names": {
          "aliases": [],
          "description": "Protocols over which API is made available.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "header": {
              "aliases": [],
              "description": "Subscription key header name.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "query": {
              "aliases": [],
              "description": "Subscription key query string parameter name.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "subscription_required": {
          "aliases": [],
          "description": "Specifies whether an API or Product subscription is required for accessing the API.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "type": {
          "aliases": [],
          "description": "Type of API",
          "type": "str",
          "required": false,
          "choices": [
            "http",
            "soap"
          ],
          "suboptions": {}
        },
        "value": {
          "aliases": [],
          "description": "Content value when Importing an API.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "wsdl_selector": {
          "aliases": [],
          "description": "Criteria to limit import of WSDL to a subset of the document.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "wsdl_endpoint_name": {
              "aliases": [],
              "description": "Name of endpoint(port) to import from WSDL.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "wsdl_service_name": {
              "aliases": [],
              "description": "Name of service to import from WSDL.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage Azure api instances",
      "version_added": "1.6.0"
    },
    "examples": "\n    - name: Create a new API instance\n      azure_rm_apimanagement:\n        resource_group: 'myResourceGroup'\n        service_name: myService\n        api_id: testApi\n        description: testDescription\n        display_name: TestAPI\n        service_url: 'http://testapi.example.net/api'\n        path: myapiPath\n        protocols:\n        - https\n    - name: Update an existing API instance.\n      azure_rm_apimanagement:\n        resource_group: myResourceGroup\n        service_name: myService\n        api_id: testApi\n        display_name: newTestAPI\n        service_url: 'http://testapi.example.net/api'\n        path: myapiPath\n        protocols:\n        - https\n    - name: ApiManagementDeleteApi\n      azure_rm_apimanagement:\n        resource_group: myResourceGroup\n        service_name: myService\n        api_id: testApi\n        state: absent\n"
  },
  "azure.azcollection.azure_rm_apimanagement_info": {
    "doc": {
      "description": "Get the information of api instance.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_id": {
          "aliases": [],
          "description": "API revision identifier. It must be unique in the current API Management service instance.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "expand_api_version_set": {
          "aliases": [],
          "description": "Include full ApiVersionSet resource in response",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "include_not_tagged_apis": {
          "aliases": [],
          "description": "Included not tagged APIs in the response.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_name": {
          "aliases": [],
          "description": "The name of the API Management service.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get the infomation of the API Instance",
      "version_added": "1.6.0"
    },
    "examples": "\n    - name: Get the information of api\n      azure_rm_apimanagement_info:\n        resource_group: myResourceGroup\n        service_name: myService\n    - name: Get the information of api\n      azure_rm_apimanagement_info:\n        resource_group: myResourceGroup\n        service_name: myService\n        api_id: testApi\n"
  },
  "azure.azcollection.azure_rm_apimanagementservice": {
    "doc": {
      "description": "Create and delete instance of Azure ApiManagementService.\nUpdates are not currently supported, this feature should be added in a later release.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "location": {
          "aliases": [],
          "description": "Location of the Api management service.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Service name.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "publisher_email": {
          "aliases": [],
          "description": "Publisher email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "publisher_name": {
          "aliases": [],
          "description": "Publisher name.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "sku_capacity": {
          "aliases": [],
          "description": "Capacity of the SKU (number of deployed units of the SKU).",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "sku_name": {
          "aliases": [],
          "description": "Name of the Sku.",
          "type": "str",
          "required": false,
          "choices": [
            "Developer",
            "Standard",
            "Premium",
            "Basic",
            "Consumption"
          ],
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Assert the state of the ApiManagementService.\nUse C(present) to create or update an ApiManagementService.\nUse C(absent) to delete an ApiManagementService.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage Azure ApiManagementService instance",
      "version_added": "1.5.0"
    },
    "examples": "\n- name: Create Api Management Service\n  azure_rm_apimanagementservice:\n    resource_group: myResourceGroup\n    name: myService\n    publisher_email: user@example.com\n    publisher_name: Publisher Name\n    sku_name: Developer\n    sku_capacity: 1\n\n- name: Delete Api Management Service\n  azure_rm_apimanagementservice:\n    resource_group: myResourceGroup\n    name: myService\n    state: absent\n"
  },
  "azure.azcollection.azure_rm_apimanagementservice_info": {
    "doc": {
      "description": "Get info of ApiManagementService.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Resource name.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get ApiManagementService info",
      "version_added": "1.5.0"
    },
    "examples": "\n- name: Get Api Management Service By Name and Resource Group\n  azure_rm_apimanagementservice_info:\n    resource_group: myResourceGroup\n    name: myApiName\n\n- name: Get Api Management Service By Resource Group\n  azure_rm_apimanagementservice_info:\n    resource_group: myResourceGroup\n\n- name: Get Api Management Service By Subscription\n  azure_rm_apimanagementservice_info:\n"
  },
  "azure.azcollection.azure_rm_appgateway": {
    "doc": {
      "description": "Create, update and delete instance of Application Gateway.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "authentication_certificates": {
          "aliases": [],
          "description": "Authentication certificates of the application gateway resource.",
          "required": false,
          "suboptions": {
            "data": {
              "aliases": [],
              "description": "Certificate public data - base64 encoded pfx.",
              "required": false,
              "suboptions": {}
            },
            "name": {
              "aliases": [],
              "description": "Name of the resource that is unique within a resource group. This name can be used to access the resource.",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "backend_address_pools": {
          "aliases": [],
          "description": "List of backend address pool of the application gateway resource.",
          "required": false,
          "suboptions": {
            "backend_addresses": {
              "aliases": [],
              "description": "List of backend addresses.",
              "required": false,
              "suboptions": {
                "fqdn": {
                  "aliases": [],
                  "description": "Fully qualified domain name (FQDN).",
                  "required": false,
                  "suboptions": {}
                },
                "ip_address": {
                  "aliases": [],
                  "description": "IP address.",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "name": {
              "aliases": [],
              "description": "Resource that is unique within a resource group. This name can be used to access the resource.",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "backend_http_settings_collection": {
          "aliases": [],
          "description": "Backend http settings of the application gateway resource.",
          "required": false,
          "suboptions": {
            "affinity_cookie_name": {
              "aliases": [],
              "description": "Cookie name to use for the affinity cookie.",
              "required": false,
              "suboptions": {}
            },
            "authentication_certificates": {
              "aliases": [],
              "description": "List of references to application gateway authentication certificates.\nApplicable only when C(cookie_based_affinity) is enabled, otherwise quietly ignored.",
              "required": false,
              "suboptions": {
                "id": {
                  "aliases": [],
                  "description": "Resource ID.",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "cookie_based_affinity": {
              "aliases": [],
              "description": "Cookie based affinity.",
              "required": false,
              "choices": [
                "enabled",
                "disabled"
              ],
              "suboptions": {}
            },
            "host_name": {
              "aliases": [],
              "description": "Host header to be sent to the backend servers.",
              "required": false,
              "suboptions": {}
            },
            "name": {
              "aliases": [],
              "description": "Name of the resource that is unique within a resource group. This name can be used to access the resource.",
              "required": false,
              "suboptions": {}
            },
            "path": {
              "aliases": [],
              "description": "Path which should be used as a prefix for all C(http) requests.\nNull means no path will be prefixed. Default value is null.",
              "required": false,
              "suboptions": {}
            },
            "pick_host_name_from_backend_address": {
              "aliases": [],
              "description": "Whether host header should be picked from the host name of the backend server. Default value is false.",
              "required": false,
              "suboptions": {}
            },
            "port": {
              "aliases": [],
              "description": "The destination port on the backend.",
              "required": false,
              "suboptions": {}
            },
            "probe": {
              "aliases": [],
              "description": "Probe resource of an application gateway.",
              "required": false,
              "suboptions": {}
            },
            "protocol": {
              "aliases": [],
              "description": "The protocol used to communicate with the backend.",
              "required": false,
              "choices": [
                "http",
                "https"
              ],
              "suboptions": {}
            },
            "request_timeout": {
              "aliases": [],
              "description": "Request timeout in seconds.\nApplication Gateway will fail the request if response is not received within RequestTimeout.\nAcceptable values are from 1 second to 86400 seconds.",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "frontend_ip_configurations": {
          "aliases": [],
          "description": "Frontend IP addresses of the application gateway resource.",
          "required": false,
          "suboptions": {
            "name": {
              "aliases": [],
              "description": "Name of the resource that is unique within a resource group. This name can be used to access the resource.",
              "required": false,
              "suboptions": {}
            },
            "private_ip_address": {
              "aliases": [],
              "description": "PrivateIPAddress of the network interface IP Configuration.",
              "required": false,
              "suboptions": {}
            },
            "private_ip_allocation_method": {
              "aliases": [],
              "description": "PrivateIP allocation method.",
              "required": false,
              "choices": [
                "static",
                "dynamic"
              ],
              "suboptions": {}
            },
            "public_ip_address": {
              "aliases": [],
              "description": "Reference of the PublicIP resource.",
              "required": false,
              "suboptions": {}
            },
            "subnet": {
              "aliases": [],
              "description": "Reference of the subnet resource.",
              "required": false,
              "suboptions": {
                "id": {
                  "aliases": [],
                  "description": "Full ID of the subnet resource. Required if name and virtual_network_name are not provided.",
                  "required": false,
                  "suboptions": {}
                },
                "name": {
                  "aliases": [],
                  "description": "Name of the subnet. Only used if virtual_network_name is also provided.",
                  "required": false,
                  "suboptions": {}
                },
                "virtual_network_name": {
                  "aliases": [],
                  "description": "Name of the virtual network. Only used if name is also provided.",
                  "required": false,
                  "suboptions": {}
                }
              }
            }
          }
        },
        "frontend_ports": {
          "aliases": [],
          "description": "List of frontend ports of the application gateway resource.",
          "required": false,
          "suboptions": {
            "name": {
              "aliases": [],
              "description": "Name of the resource that is unique within a resource group. This name can be used to access the resource.",
              "required": false,
              "suboptions": {}
            },
            "port": {
              "aliases": [],
              "description": "Frontend port.",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "gateway_ip_configurations": {
          "aliases": [],
          "description": "List of subnets used by the application gateway.",
          "required": false,
          "suboptions": {
            "name": {
              "aliases": [],
              "description": "Name of the resource that is unique within a resource group. This name can be used to access the resource.",
              "required": false,
              "suboptions": {}
            },
            "subnet": {
              "aliases": [],
              "description": "Reference of the subnet resource. A subnet from where application gateway gets its private address.",
              "required": false,
              "suboptions": {
                "id": {
                  "aliases": [],
                  "description": "Full ID of the subnet resource. Required if name and virtual_network_name are not provided.",
                  "required": false,
                  "suboptions": {}
                },
                "name": {
                  "aliases": [],
                  "description": "Name of the subnet. Only used if virtual_network_name is also provided.",
                  "required": false,
                  "suboptions": {}
                },
                "virtual_network_name": {
                  "aliases": [],
                  "description": "Name of the virtual network. Only used if name is also provided.",
                  "required": false,
                  "suboptions": {}
                }
              }
            }
          }
        },
        "http_listeners": {
          "aliases": [],
          "description": "List of HTTP listeners of the application gateway resource.",
          "required": false,
          "suboptions": {
            "frontend_ip_configuration": {
              "aliases": [],
              "description": "Frontend IP configuration resource of an application gateway.",
              "required": false,
              "suboptions": {}
            },
            "frontend_port": {
              "aliases": [],
              "description": "Frontend port resource of an application gateway.",
              "required": false,
              "suboptions": {}
            },
            "host_name": {
              "aliases": [],
              "description": "Host name of C(http) listener.",
              "required": false,
              "suboptions": {}
            },
            "name": {
              "aliases": [],
              "description": "Name of the resource that is unique within a resource group. This name can be used to access the resource.",
              "required": false,
              "suboptions": {}
            },
            "protocol": {
              "aliases": [],
              "description": "Protocol of the C(http) listener.",
              "required": false,
              "choices": [
                "http",
                "https"
              ],
              "suboptions": {}
            },
            "require_server_name_indication": {
              "aliases": [],
              "description": "Applicable only if I(protocol) is C(https). Enables SNI for multi-hosting.",
              "required": false,
              "suboptions": {}
            },
            "ssl_certificate": {
              "aliases": [],
              "description": "SSL certificate resource of an application gateway.",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "location": {
          "aliases": [],
          "description": "Resource location. If not set, location from the resource group will be used as default.",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the application gateway.",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "probes": {
          "aliases": [],
          "description": "Probes available to the application gateway resource.",
          "required": false,
          "suboptions": {
            "host": {
              "aliases": [],
              "description": "Host name to send the I(probe) to.",
              "required": false,
              "suboptions": {}
            },
            "interval": {
              "aliases": [],
              "description": "The probing interval in seconds.\nThis is the time interval between two consecutive probes.\nAcceptable values are from 1 second to 86400 seconds.",
              "required": false,
              "suboptions": {}
            },
            "name": {
              "aliases": [],
              "description": "Name of the I(probe) that is unique within an Application Gateway.",
              "required": false,
              "suboptions": {}
            },
            "path": {
              "aliases": [],
              "description": "Relative path of I(probe).\nValid path starts from '/'.\nProbe is sent to <Protocol>://<host>:<port><path>.",
              "required": false,
              "suboptions": {}
            },
            "pick_host_name_from_backend_http_settings": {
              "aliases": [],
              "description": "Whether host header should be picked from the host name of the backend HTTP settings. Default value is false.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "protocol": {
              "aliases": [],
              "description": "The protocol used for the I(probe).",
              "required": false,
              "choices": [
                "http",
                "https"
              ],
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "The probe timeout in seconds.\nProbe marked as failed if valid response is not received with this timeout period.\nAcceptable values are from 1 second to 86400 seconds.",
              "required": false,
              "suboptions": {}
            },
            "unhealthy_threshold": {
              "aliases": [],
              "description": "The I(probe) retry count.\nBackend server is marked down after consecutive probe failure count reaches UnhealthyThreshold.\nAcceptable values are from 1 second to 20.",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "redirect_configurations": {
          "aliases": [],
          "description": "Redirect configurations of the application gateway resource.",
          "required": false,
          "suboptions": {
            "include_path": {
              "aliases": [],
              "description": "Include path in the redirected url.",
              "required": false,
              "suboptions": {}
            },
            "include_query_string": {
              "aliases": [],
              "description": "Include query string in the redirected url.",
              "required": false,
              "suboptions": {}
            },
            "name": {
              "aliases": [],
              "description": "Name of the resource that is unique within a resource group.",
              "required": false,
              "suboptions": {}
            },
            "redirect_type": {
              "aliases": [],
              "description": "Redirection type.",
              "required": false,
              "choices": [
                "permanent",
                "found",
                "see_other",
                "temporary"
              ],
              "suboptions": {}
            },
            "target_listener": {
              "aliases": [],
              "description": "Reference to a listener to redirect the request to.",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "request_routing_rules": {
          "aliases": [],
          "description": "List of request routing rules of the application gateway resource.",
          "required": false,
          "suboptions": {
            "backend_address_pool": {
              "aliases": [],
              "description": "Backend address pool resource of the application gateway. Not used if I(rule_type) is C(path_based_routing).",
              "required": false,
              "suboptions": {}
            },
            "backend_http_settings": {
              "aliases": [],
              "description": "Backend C(http) settings resource of the application gateway.",
              "required": false,
              "suboptions": {}
            },
            "http_listener": {
              "aliases": [],
              "description": "Http listener resource of the application gateway.",
              "required": false,
              "suboptions": {}
            },
            "name": {
              "aliases": [],
              "description": "Name of the resource that is unique within a resource group. This name can be used to access the resource.",
              "required": false,
              "suboptions": {}
            },
            "redirect_configuration": {
              "aliases": [],
              "description": "Redirect configuration resource of the application gateway.",
              "required": false,
              "suboptions": {}
            },
            "rule_type": {
              "aliases": [],
              "description": "Rule type.",
              "required": false,
              "choices": [
                "basic",
                "path_based_routing"
              ],
              "suboptions": {}
            },
            "url_path_map": {
              "aliases": [],
              "description": "URL path map resource of the application gateway. Required if I(rule_type) is C(path_based_routing).",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "sku": {
          "aliases": [],
          "description": "SKU of the application gateway resource.",
          "required": false,
          "suboptions": {
            "capacity": {
              "aliases": [],
              "description": "Capacity (instance count) of an application gateway.",
              "required": false,
              "suboptions": {}
            },
            "name": {
              "aliases": [],
              "description": "Name of an application gateway SKU.",
              "required": false,
              "choices": [
                "standard_small",
                "standard_medium",
                "standard_large",
                "standard_v2",
                "waf_medium",
                "waf_large",
                "waf_v2"
              ],
              "suboptions": {}
            },
            "tier": {
              "aliases": [],
              "description": "Tier of an application gateway.",
              "required": false,
              "choices": [
                "standard",
                "standard_v2",
                "waf",
                "waf_v2"
              ],
              "suboptions": {}
            }
          }
        },
        "ssl_certificates": {
          "aliases": [],
          "description": "SSL certificates of the application gateway resource.",
          "required": false,
          "suboptions": {
            "data": {
              "aliases": [],
              "description": "Base-64 encoded pfx certificate.\nOnly applicable in PUT Request.",
              "required": false,
              "suboptions": {}
            },
            "name": {
              "aliases": [],
              "description": "Name of the resource that is unique within a resource group. This name can be used to access the resource.",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [],
              "description": "Password for the pfx file specified in I(data).\nOnly applicable in PUT request.",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "ssl_policy": {
          "aliases": [],
          "description": "SSL policy of the application gateway resource.",
          "required": false,
          "suboptions": {
            "cipher_suites": {
              "aliases": [],
              "description": "List of SSL cipher suites to be enabled in the specified order to application gateway.",
              "required": false,
              "choices": [
                "tls_ecdhe_rsa_with_aes_256_gcm_sha384",
                "tls_ecdhe_rsa_with_aes_128_gcm_sha256",
                "tls_ecdhe_rsa_with_aes_256_cbc_sha384",
                "tls_ecdhe_rsa_with_aes_128_cbc_sha256",
                "tls_ecdhe_rsa_with_aes_256_cbc_sha",
                "tls_ecdhe_rsa_with_aes_128_cbc_sha",
                "tls_dhe_rsa_with_aes_256_gcm_sha384",
                "tls_dhe_rsa_with_aes_128_gcm_sha256",
                "tls_dhe_rsa_with_aes_256_cbc_sha",
                "tls_dhe_rsa_with_aes_128_cbc_sha",
                "tls_rsa_with_aes_256_gcm_sha384",
                "tls_rsa_with_aes_128_gcm_sha256",
                "tls_rsa_with_aes_256_cbc_sha256",
                "tls_rsa_with_aes_128_cbc_sha256",
                "tls_rsa_with_aes_256_cbc_sha",
                "tls_rsa_with_aes_128_cbc_sha",
                "tls_ecdhe_ecdsa_with_aes_256_gcm_sha384",
                "tls_ecdhe_ecdsa_with_aes_128_gcm_sha256",
                "tls_ecdhe_ecdsa_with_aes_256_cbc_sha384",
                "tls_ecdhe_ecdsa_with_aes_128_cbc_sha256",
                "tls_ecdhe_ecdsa_with_aes_256_cbc_sha",
                "tls_ecdhe_ecdsa_with_aes_128_cbc_sha",
                "tls_dhe_dss_with_aes_256_cbc_sha256",
                "tls_dhe_dss_with_aes_128_cbc_sha256",
                "tls_dhe_dss_with_aes_256_cbc_sha",
                "tls_dhe_dss_with_aes_128_cbc_sha",
                "tls_rsa_with_3des_ede_cbc_sha",
                "tls_dhe_dss_with_3des_ede_cbc_sha"
              ],
              "suboptions": {}
            },
            "disabled_ssl_protocols": {
              "aliases": [],
              "description": "List of SSL protocols to be disabled on application gateway.",
              "required": false,
              "choices": [
                "tls_v1_0",
                "tls_v1_1",
                "tls_v1_2"
              ],
              "suboptions": {}
            },
            "min_protocol_version": {
              "aliases": [],
              "description": "Minimum version of Ssl protocol to be supported on application gateway.",
              "required": false,
              "choices": [
                "tls_v1_0",
                "tls_v1_1",
                "tls_v1_2"
              ],
              "suboptions": {}
            },
            "policy_name": {
              "aliases": [],
              "description": "Name of Ssl C(predefined) policy.",
              "required": false,
              "choices": [
                "ssl_policy20150501",
                "ssl_policy20170401",
                "ssl_policy20170401_s"
              ],
              "suboptions": {}
            },
            "policy_type": {
              "aliases": [],
              "description": "Type of SSL Policy.",
              "required": false,
              "choices": [
                "predefined",
                "custom"
              ],
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "Assert the state of the Public IP. Use C(present) to create or update a and C(absent) to delete.",
          "default": "present",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "url_path_maps": {
          "aliases": [],
          "description": "List of URL path maps of the application gateway resource.",
          "required": false,
          "suboptions": {
            "default_backend_address_pool": {
              "aliases": [],
              "description": "Backend address pool resource of the application gateway which will be used if no path matches occur.",
              "required": false,
              "suboptions": {}
            },
            "default_backend_http_settings": {
              "aliases": [],
              "description": "Backend http settings resource of the application gateway; used for the I(default_backend_address_pool).",
              "required": false,
              "suboptions": {}
            },
            "name": {
              "aliases": [],
              "description": "Name of the resource that is unique within the application gateway. This name can be used to access the resource.",
              "required": false,
              "suboptions": {}
            },
            "path_rules": {
              "aliases": [],
              "description": "List of URL path rules.",
              "required": false,
              "suboptions": {
                "backend_address_pool": {
                  "aliases": [],
                  "description": "Backend address pool resource of the application gateway which will be used if the path is matched.",
                  "required": false,
                  "suboptions": {}
                },
                "backend_http_settings": {
                  "aliases": [],
                  "description": "Backend http settings resource of the application gateway; used for the path's I(backend_address_pool).",
                  "required": false,
                  "suboptions": {}
                },
                "name": {
                  "aliases": [],
                  "description": "Name of the resource that is unique within the path map.",
                  "required": false,
                  "suboptions": {}
                },
                "paths": {
                  "aliases": [],
                  "description": "List of paths.",
                  "required": false,
                  "suboptions": {}
                }
              }
            }
          }
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage Application Gateway instance",
      "version_added": "0.1.2"
    },
    "examples": "\n- name: Create instance of Application Gateway\n  azure_rm_appgateway:\n    resource_group: myResourceGroup\n    name: myAppGateway\n    sku:\n      name: standard_small\n      tier: standard\n      capacity: 2\n    gateway_ip_configurations:\n      - subnet:\n          id: \"{{ subnet_id }}\"\n        name: app_gateway_ip_config\n    frontend_ip_configurations:\n      - subnet:\n          id: \"{{ subnet_id }}\"\n        name: sample_gateway_frontend_ip_config\n    frontend_ports:\n      - port: 90\n        name: ag_frontend_port\n    backend_address_pools:\n      - backend_addresses:\n          - ip_address: 10.0.0.4\n        name: test_backend_address_pool\n    backend_http_settings_collection:\n      - port: 80\n        protocol: http\n        cookie_based_affinity: enabled\n        name: sample_appgateway_http_settings\n    http_listeners:\n      - frontend_ip_configuration: sample_gateway_frontend_ip_config\n        frontend_port: ag_frontend_port\n        name: sample_http_listener\n    request_routing_rules:\n      - rule_type: Basic\n        backend_address_pool: test_backend_address_pool\n        backend_http_settings: sample_appgateway_http_settings\n        http_listener: sample_http_listener\n        name: rule1\n\n- name: Create instance of Application Gateway by looking up virtual network and subnet\n  azure_rm_appgateway:\n    resource_group: myResourceGroup\n    name: myAppGateway\n    sku:\n      name: standard_small\n      tier: standard\n      capacity: 2\n    gateway_ip_configurations:\n      - subnet:\n          name: default\n          virtual_network_name: my-vnet\n        name: app_gateway_ip_config\n    frontend_ip_configurations:\n      - subnet:\n          name: default\n          virtual_network_name: my-vnet\n        name: sample_gateway_frontend_ip_config\n    frontend_ports:\n      - port: 90\n        name: ag_frontend_port\n    backend_address_pools:\n      - backend_addresses:\n          - ip_address: 10.0.0.4\n        name: test_backend_address_pool\n    backend_http_settings_collection:\n      - port: 80\n        protocol: http\n        cookie_based_affinity: enabled\n        name: sample_appgateway_http_settings\n    http_listeners:\n      - frontend_ip_configuration: sample_gateway_frontend_ip_config\n        frontend_port: ag_frontend_port\n        name: sample_http_listener\n    request_routing_rules:\n      - rule_type: Basic\n        backend_address_pool: test_backend_address_pool\n        backend_http_settings: sample_appgateway_http_settings\n        http_listener: sample_http_listener\n        name: rule1\n\n- name: Create instance of Application Gateway with path based rules\n  azure_rm_appgateway:\n    resource_group: myResourceGroup\n    name: myAppGateway\n    sku:\n      name: standard_small\n      tier: standard\n      capacity: 2\n    gateway_ip_configurations:\n      - subnet:\n          id: \"{{ subnet_id }}\"\n        name: app_gateway_ip_config\n    frontend_ip_configurations:\n      - subnet:\n          id: \"{{ subnet_id }}\"\n        name: sample_gateway_frontend_ip_config\n    frontend_ports:\n      - port: 90\n        name: ag_frontend_port\n    backend_address_pools:\n      - backend_addresses:\n          - ip_address: 10.0.0.4\n        name: test_backend_address_pool\n    backend_http_settings_collection:\n      - port: 80\n        protocol: http\n        cookie_based_affinity: enabled\n        name: sample_appgateway_http_settings\n    http_listeners:\n      - frontend_ip_configuration: sample_gateway_frontend_ip_config\n        frontend_port: ag_frontend_port\n        name: sample_http_listener\n    request_routing_rules:\n      - rule_type: path_based_routing\n        http_listener: sample_http_listener\n        name: rule1\n        url_path_map: path_mappings\n    url_path_maps:\n      - name: path_mappings\n        default_backend_address_pool: test_backend_address_pool\n        default_backend_http_settings: sample_appgateway_http_settings\n        path_rules:\n          - name: path_rules\n            backend_address_pool: test_backend_address_pool\n            backend_http_settings: sample_appgateway_http_settings\n            paths:\n              - \"/abc\"\n              - \"/123/*\"\n"
  },
  "azure.azcollection.azure_rm_applicationsecuritygroup": {
    "doc": {
      "description": "Create, update and delete instance of Azure Application Security Group.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "location": {
          "aliases": [],
          "description": "Resource location. If not set, location from the resource group will be used as default.",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the application security group.",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Assert the state of the Application Security Group.\nUse C(present) to create or update an Application Security Group and C(absent) to delete it.",
          "default": "present",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage Azure Application Security Group",
      "version_added": "0.1.2"
    },
    "examples": "\n  - name: Create application security group\n    azure_rm_applicationsecuritygroup:\n      resource_group: myResourceGroup\n      name: mySecurityGroup\n      location: eastus\n      tags:\n        foo: bar\n"
  },
  "azure.azcollection.azure_rm_applicationsecuritygroup_info": {
    "doc": {
      "description": "Get facts of Azure Application Security Group.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the application security group.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group.",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure Application Security Group facts",
      "version_added": "0.1.2"
    },
    "examples": "\n  - name: List application security groups in specific resource group\n    azure_rm_applicationsecuritygroup_info:\n      resource_group: myResourceGroup\n\n  - name: List application security groups in specific subscription\n    azure_rm_applicationsecuritygroup_info:\n\n  - name: Get application security group by name\n    azure_rm_applicationsecuritygroup_info:\n        resource_group: myResourceGroup\n        name: myApplicationSecurityGroup\n        tags:\n            - foo\n"
  },
  "azure.azcollection.azure_rm_appserviceplan": {
    "doc": {
      "description": "Create, update and delete instance of App Service Plan.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "is_linux": {
          "aliases": [],
          "description": "Describe whether to host webapp on Linux worker.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "location": {
          "aliases": [],
          "description": "Resource location. If not set, location from the resource group will be used as default.",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Unique name of the app service plan to create or update.",
          "required": true,
          "suboptions": {}
        },
        "number_of_workers": {
          "aliases": [],
          "description": "Describe number of workers to be allocated.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Name of the resource group to which the resource belongs.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "sku": {
          "aliases": [],
          "description": "The pricing tiers, e.g., C(F1), C(D1), C(B1), C(B2), C(B3), C(S1), C(P1), C(P1V2) etc.\nPlease see U(https://azure.microsoft.com/en-us/pricing/details/app-service/plans/) for more detail.\nFor Linux app service plan, please see U(https://azure.microsoft.com/en-us/pricing/details/app-service/linux/) for more detail.",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Assert the state of the app service plan.\nUse C(present) to create or update an app service plan and C(absent) to delete it.",
          "default": "present",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage App Service Plan",
      "version_added": "0.1.2"
    },
    "examples": "\n    - name: Create a windows app service plan\n      azure_rm_appserviceplan:\n        resource_group: myResourceGroup\n        name: myAppPlan\n        location: eastus\n        sku: S1\n\n    - name: Create a linux app service plan\n      azure_rm_appserviceplan:\n        resource_group: myResourceGroup\n        name: myAppPlan\n        location: eastus\n        sku: S1\n        is_linux: true\n        number_of_workers: 1\n\n    - name: update sku of existing windows app service plan\n      azure_rm_appserviceplan:\n        resource_group: myResourceGroup\n        name: myAppPlan\n        location: eastus\n        sku: S2\n"
  },
  "azure.azcollection.azure_rm_appserviceplan_info": {
    "doc": {
      "description": "Get facts for a specific app service plan or all app service plans in a resource group, or all app service plan in current subscription.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Only show results for a specific app service plan.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Limit results by resource group.",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get azure app service plan facts",
      "version_added": "0.1.2"
    },
    "examples": "\n    - name: Get facts for app service plan by name\n      azure_rm_appserviceplan_info:\n        resource_group: myResourceGroup\n        name: myAppServicePlan\n\n    - name: Get azure_rm_appserviceplan_facts for app service plan in resource group\n      azure_rm_appserviceplan_info:\n        resource_group: myResourceGroup\n\n    - name: Get facts for app service plan with tags\n      azure_rm_appserviceplan_info:\n        tags:\n          - testtag\n          - foo:bar\n"
  },
  "azure.azcollection.azure_rm_automationaccount": {
    "doc": {
      "description": "Create, delete an Azure Automation account.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "location": {
          "aliases": [],
          "description": "Location of the resource.\nIf not specified, use resource group location.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the automation account.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Name of resource group.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "State of the automation account. Use C(present) to create or update a automation account and C(absent) to delete an automation account.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage Azure Automation account",
      "version_added": "0.1.2"
    },
    "examples": "\n- name: Create an automation account\n  azure_rm_automationaccount:\n      name: Testing\n      resource_group: myResourceGroup\n\n- name: Create an automation account\n  azure_rm_automationaccount:\n      name: Testing\n      resource_group: myResourceGroup\n      location: eastus\n"
  },
  "azure.azcollection.azure_rm_automationaccount_info": {
    "doc": {
      "description": "Get facts of automation account.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "list_keys": {
          "aliases": [],
          "description": "List keys for a automation account.\nNote this will cost network overhead, suggest only used when I(name) set.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "list_statistics": {
          "aliases": [],
          "description": "List statistics details for a automation account.\nNote this will cost network overhead, suggest only used when I(name) set.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "list_usages": {
          "aliases": [],
          "description": "List usage details for a automation account.\nNote this will cost network overhead, suggest only used when I(name) set.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the automation account.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "type": "list",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure automation account facts",
      "version_added": "0.1.2"
    },
    "examples": "\n- name: Get details of an automation account\n  azure_rm_automationaccount_info:\n      name: Testing\n      resource_group: myResourceGroup\n      list_statistics: yes\n      list_usages: yes\n      list_keys: yes\n\n- name: List automation account in a resource group\n  azure_rm_automationaccount_info:\n      resource_group: myResourceGroup\n\n- name: List automation account in a resource group\n  azure_rm_automationaccount_info:\n"
  },
  "azure.azcollection.azure_rm_autoscale": {
    "doc": {
      "description": "Create, delete an autoscale setting.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "enabled": {
          "aliases": [],
          "description": "Specifies whether automatic scaling is enabled for the resource.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "location": {
          "aliases": [],
          "description": "location of the resource.",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "name of the resource.",
          "required": true,
          "suboptions": {}
        },
        "notifications": {
          "aliases": [],
          "description": "The collection of notifications.",
          "required": false,
          "suboptions": {
            "custom_emails": {
              "aliases": [],
              "description": "The custom e-mails list. This value can be null or empty, in which case this attribute will be ignored.",
              "required": false,
              "suboptions": {}
            },
            "send_to_subscription_administrator": {
              "aliases": [],
              "description": "A value indicating whether to send email to subscription administrator.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "send_to_subscription_co_administrators": {
              "aliases": [],
              "description": "A value indicating whether to send email to subscription co-administrators.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "webhooks": {
              "aliases": [],
              "description": "The list of webhook notifications service uri.",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profiles": {
          "aliases": [],
          "description": "The collection of automatic scaling profiles that specify different scaling parameters for different time periods.\nA maximum of 20 profiles can be specified.",
          "required": false,
          "suboptions": {
            "count": {
              "aliases": [],
              "description": "The number of instances that will be set if metrics are not available for evaluation.\nThe default is only used if the current instance count is lower than the default.",
              "required": true,
              "suboptions": {}
            },
            "fixed_date_end": {
              "aliases": [],
              "description": "The specific date-time end for the profile.\nThis element is not used if the Recurrence element is used.",
              "required": false,
              "suboptions": {}
            },
            "fixed_date_start": {
              "aliases": [],
              "description": "The specific date-time start for the profile.\nThis element is not used if the Recurrence element is used.",
              "required": false,
              "suboptions": {}
            },
            "fixed_date_timezone": {
              "aliases": [],
              "description": "The specific date-time timezone for the profile.\nThis element is not used if the Recurrence element is used.",
              "required": false,
              "suboptions": {}
            },
            "max_count": {
              "aliases": [],
              "description": "The maximum number of instances for the resource.\nThe actual maximum number of instances is limited by the cores that are available in the subscription.",
              "required": false,
              "suboptions": {}
            },
            "min_count": {
              "aliases": [],
              "description": "The minimum number of instances for the resource.",
              "required": false,
              "suboptions": {}
            },
            "name": {
              "aliases": [],
              "description": "The name of the profile.",
              "required": true,
              "suboptions": {}
            },
            "recurrence_days": {
              "aliases": [],
              "description": "The days of repeating times at which this profile begins.\nThis element is not used if the FixedDate element is used.",
              "required": false,
              "suboptions": {}
            },
            "recurrence_frequency": {
              "aliases": [],
              "description": "How often the schedule profile should take effect.\nIf this value is C(Week), meaning each week will have the same set of profiles.\nThis element is not used if the FixedDate element is used.",
              "default": "None",
              "required": false,
              "choices": [
                "None",
                "Second",
                "Minute",
                "Hour",
                "Day",
                "Week",
                "Month",
                "Year"
              ],
              "suboptions": {}
            },
            "recurrence_hours": {
              "aliases": [],
              "description": "The hours of repeating times at which this profile begins.\nThis element is not used if the FixedDate element is used.",
              "required": false,
              "suboptions": {}
            },
            "recurrence_mins": {
              "aliases": [],
              "description": "The mins of repeating times at which this profile begins.\nThis element is not used if the FixedDate element is used.",
              "required": false,
              "suboptions": {}
            },
            "recurrence_timezone": {
              "aliases": [],
              "description": "The timezone of repeating times at which this profile begins.\nThis element is not used if the FixedDate element is used.",
              "required": false,
              "suboptions": {}
            },
            "rules": {
              "aliases": [],
              "description": "The collection of rules that provide the triggers and parameters for the scaling action.\nA maximum of 10 rules can be specified.",
              "required": false,
              "suboptions": {
                "cooldown": {
                  "aliases": [],
                  "description": "The amount of time (minutes) to wait since the last scaling action before this action occurs.\nIt must be between 1 ~ 10080.",
                  "required": false,
                  "suboptions": {}
                },
                "direction": {
                  "aliases": [],
                  "description": "Whether the scaling action increases or decreases the number of instances.",
                  "required": false,
                  "choices": [
                    "Increase",
                    "Decrease"
                  ],
                  "suboptions": {}
                },
                "metric_name": {
                  "aliases": [],
                  "description": "The name of the metric that defines what the rule monitors.",
                  "required": true,
                  "suboptions": {}
                },
                "metric_resource_uri": {
                  "aliases": [],
                  "description": "The resource identifier of the resource the rule monitors.",
                  "required": false,
                  "suboptions": {}
                },
                "operator": {
                  "aliases": [],
                  "description": "The operator that is used to compare the metric data and the threshold.",
                  "default": "GreaterThan",
                  "required": false,
                  "choices": [
                    "Equals",
                    "NotEquals",
                    "GreaterThan",
                    "GreaterThanOrEqual",
                    "LessThan",
                    "LessThanOrEqual"
                  ],
                  "suboptions": {}
                },
                "statistic": {
                  "aliases": [],
                  "description": "How the metrics from multiple instances are combined.",
                  "default": "Average",
                  "required": false,
                  "choices": [
                    "Average",
                    "Min",
                    "Max",
                    "Sum"
                  ],
                  "suboptions": {}
                },
                "threshold": {
                  "aliases": [],
                  "description": "The threshold of the metric that triggers the scale action.",
                  "default": "70",
                  "required": false,
                  "suboptions": {}
                },
                "time_aggregation": {
                  "aliases": [],
                  "description": "How the data that is collected should be combined over time.",
                  "default": "Average",
                  "required": false,
                  "choices": [
                    "Average",
                    "Minimum",
                    "Maximum",
                    "Total",
                    "Count"
                  ],
                  "suboptions": {}
                },
                "time_grain": {
                  "aliases": [],
                  "description": "The granularity(minutes) of metrics the rule monitors.\nMust be one of the predefined values returned from metric definitions for the metric.\nMust be between 1 ~ 720.",
                  "required": true,
                  "suboptions": {}
                },
                "time_window": {
                  "aliases": [],
                  "description": "The range of time(minutes) in which instance data is collected.\nThis value must be greater than the delay in metric collection, which can vary from resource-to-resource.\nMust be between 5 ~ 720.",
                  "required": true,
                  "suboptions": {}
                },
                "type": {
                  "aliases": [],
                  "description": "The type of action that should occur when the scale rule fires.",
                  "required": false,
                  "choices": [
                    "PercentChangeCount",
                    "ExactCount",
                    "ChangeCount"
                  ],
                  "suboptions": {}
                },
                "value": {
                  "aliases": [],
                  "description": "The number of instances that are involved in the scaling action.\nThis value must be 1 or greater.",
                  "required": false,
                  "suboptions": {}
                }
              }
            }
          }
        },
        "resource_group": {
          "aliases": [],
          "description": "Resource group of the resource.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Assert the state of the virtual network. Use C(present) to create or update and C(absent) to delete.",
          "default": "present",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "target": {
          "aliases": [],
          "description": "The identifier of the resource to apply autoscale setting.\nIt could be the resource id string.\nIt also could be a dict contains the C(name), C(subscription_id), C(namespace), C(types), C(resource_group) of the resource.",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage Azure autoscale setting",
      "version_added": "0.1.2"
    },
    "examples": "\n- name: Create an auto scale\n  azure_rm_autoscale:\n      target: \"/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachineScaleSets/myVmss\"\n      enabled: true\n      profiles:\n      - count: '1'\n        recurrence_days:\n        - Monday\n        name: Auto created scale condition\n        recurrence_timezone: China Standard Time\n        recurrence_mins:\n        - '0'\n        min_count: '1'\n        max_count: '1'\n        recurrence_frequency: Week\n        recurrence_hours:\n        - '18'\n      name: scale\n      resource_group: myResourceGroup\n\n- name: Create an auto scale with complicated profile\n  azure_rm_autoscale:\n      target: \"/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachineScaleSets\n               /myVmss\"\n      enabled: true\n      profiles:\n      - count: '1'\n        recurrence_days:\n        - Monday\n        name: Auto created scale condition 0\n        rules:\n        - time_aggregation: Average\n          time_window: 10\n          direction: Increase\n          metric_name: Percentage CPU\n          metric_resource_uri: \"/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtua\n                                lMachineScaleSets/vmss\"\n          value: '1'\n          threshold: 70\n          cooldown: 5\n          time_grain: 1\n          statistic: Average\n          operator: GreaterThan\n          type: ChangeCount\n        max_count: '1'\n        recurrence_mins:\n        - '0'\n        min_count: '1'\n        recurrence_timezone: China Standard Time\n        recurrence_frequency: Week\n        recurrence_hours:\n        - '6'\n      notifications:\n      - email_admin: True\n        email_co_admin: False\n        custom_emails:\n        - yuwzho@microsoft.com\n      name: scale\n      resource_group: myResourceGroup\n\n- name: Delete an Azure Auto Scale Setting\n  azure_rm_autoscale:\n    state: absent\n    resource_group: myResourceGroup\n    name: scale\n"
  },
  "azure.azcollection.azure_rm_autoscale_info": {
    "doc": {
      "description": "Get facts of Auto Scale Setting.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the Auto Scale Setting.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure Auto Scale Setting facts",
      "version_added": "0.1.2"
    },
    "examples": "\n  - name: Get instance of Auto Scale Setting\n    azure_rm_autoscale_info:\n      resource_group: myResourceGroup\n      name: auto_scale_name\n\n  - name: List instances of Auto Scale Setting\n    azure_rm_autoscale_info:\n      resource_group: myResourceGroup\n"
  },
  "azure.azcollection.azure_rm_availabilityset": {
    "doc": {
      "description": "Create, update and delete Azure Availability Set.\nAn availability set cannot be updated, you will have to recreate one instead.\nThe only update operation will be for the tags.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "location": {
          "aliases": [],
          "description": "Valid Azure location. Defaults to location of the resource group.",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the availability set.",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "platform_fault_domain_count": {
          "aliases": [],
          "description": "Fault domains define the group of virtual machines that share a common power source and network switch.\nShould be between C(1) and C(3).",
          "default": "3",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "platform_update_domain_count": {
          "aliases": [],
          "description": "Update domains indicate groups of virtual machines and underlying physical hardware that can be rebooted at the same time.",
          "default": "5",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "proximity_placement_group": {
          "aliases": [],
          "description": "The proximity placement group that the availability set should be assigned to.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Name of a resource group where the availability set exists or will be created.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "sku": {
          "aliases": [],
          "description": "Define if the availability set supports managed disks.",
          "default": "Classic",
          "required": false,
          "choices": [
            "Classic",
            "Aligned"
          ],
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Assert the state of the availability set.\nUse C(present) to create or update a availability set and C(absent) to delete a availability set.",
          "default": "present",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage Azure Availability Set",
      "version_added": "0.1.2"
    },
    "examples": "\n    - name: Create an availability set with default options\n      azure_rm_availabilityset:\n        name: myAvailabilitySet\n        location: eastus\n        resource_group: myResourceGroup\n\n    - name: Create an availability set with advanced options\n      azure_rm_availabilityset:\n        name: myAvailabilitySet\n        location: eastus\n        resource_group: myResourceGroup\n        platform_update_domain_count: 5\n        platform_fault_domain_count: 3\n        proximity_placement_group: myProximityPlacementGroup\n        sku: Aligned\n\n    - name: Delete an availability set\n      azure_rm_availabilityset:\n        name: myAvailabilitySet\n        location: eastus\n        resource_group: myResourceGroup\n        state: absent\n"
  },
  "azure.azcollection.azure_rm_availabilityset_info": {
    "doc": {
      "description": "Get facts for a specific availability set or all availability sets.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Limit results to a specific availability set.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The resource group to search for the desired availability set.",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "List of tags to be matched.",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure Availability Set facts",
      "version_added": "0.1.2"
    },
    "examples": "\n    - name: Get facts for one availability set\n      azure_rm_availabilityset_info:\n        name: Testing\n        resource_group: myResourceGroup\n\n    - name: Get facts for all availability sets in a specific resource group\n      azure_rm_availabilityset_info:\n        resource_group: myResourceGroup\n\n"
  },
  "azure.azcollection.azure_rm_azurefirewall": {
    "doc": {
      "description": "Create, update and delete instance of Azure Firewall.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "application_rule_collections": {
          "aliases": [],
          "description": "Collection of application rule collections used by Azure Firewall.",
          "type": "list",
          "required": false,
          "suboptions": {
            "action": {
              "aliases": [],
              "description": "The action type of a rule collection.",
              "type": "str",
              "required": false,
              "choices": [
                "allow",
                "deny"
              ],
              "suboptions": {}
            },
            "name": {
              "aliases": [],
              "description": "Gets name of the resource that is unique within a resource group.\nThis name can be used to access the resource.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "priority": {
              "aliases": [],
              "description": "Priority of the application rule collection resource.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "rules": {
              "aliases": [],
              "description": "Collection of rules used by a application rule collection.",
              "type": "list",
              "required": false,
              "suboptions": {
                "description": {
                  "aliases": [],
                  "description": "Description of the rule.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "fqdn_tags": {
                  "aliases": [],
                  "description": "List of FQDN Tags for this rule.",
                  "type": "list",
                  "required": false,
                  "suboptions": {}
                },
                "name": {
                  "aliases": [],
                  "description": "Name of the application rule.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "protocols": {
                  "aliases": [],
                  "description": "Array of ApplicationRuleProtocols.",
                  "type": "list",
                  "required": false,
                  "suboptions": {}
                },
                "source_addresses": {
                  "aliases": [],
                  "description": "List of source IP addresses for this rule.",
                  "type": "list",
                  "required": false,
                  "suboptions": {}
                },
                "target_fqdns": {
                  "aliases": [],
                  "description": "List of FQDNs for this rule.",
                  "type": "list",
                  "required": false,
                  "suboptions": {}
                }
              }
            }
          }
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "ip_configurations": {
          "aliases": [],
          "description": "IP configuration of the Azure Firewall resource.",
          "type": "list",
          "required": false,
          "suboptions": {
            "name": {
              "aliases": [],
              "description": "Name of the resource that is unique within a resource group.\nThis name can be used to access the resource.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "public_ip_address": {
              "aliases": [],
              "description": "Existing public IP address.\nIt can be a string containing resource ID.\nIt can be a string containing a name in current resource group.\nIt can be a dictionary containing I(name) and optionally I(resource_group).",
              "type": "raw",
              "required": false,
              "suboptions": {}
            },
            "subnet": {
              "aliases": [],
              "description": "Existing subnet.\nIt can be a string containing subnet resource ID.\nIt can be a dictionary containing I(name), I(virtual_network_name) and optionally I(resource_group) .",
              "type": "raw",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "location": {
          "aliases": [],
          "description": "Resource location.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the Azure Firewall.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "nat_rule_collections": {
          "aliases": [],
          "description": "Collection of NAT rule collections used by Azure Firewall.",
          "type": "list",
          "required": false,
          "suboptions": {
            "action": {
              "aliases": [],
              "description": "The action type of a NAT rule collection",
              "type": "str",
              "required": false,
              "choices": [
                "snat",
                "dnat"
              ],
              "suboptions": {}
            },
            "name": {
              "aliases": [],
              "description": "Gets name of the resource that is unique within a resource group.\nThis name can be used to access the resource.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "priority": {
              "aliases": [],
              "description": "Priority of the NAT rule collection resource.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "rules": {
              "aliases": [],
              "description": "Collection of rules used by a NAT rule collection.",
              "type": "list",
              "required": false,
              "suboptions": {
                "description": {
                  "aliases": [],
                  "description": "Description of the rule.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "destination_addresses": {
                  "aliases": [],
                  "description": "List of destination IP addresses for this rule.",
                  "type": "list",
                  "required": false,
                  "suboptions": {}
                },
                "destination_ports": {
                  "aliases": [],
                  "description": "List of destination ports.",
                  "type": "list",
                  "required": false,
                  "suboptions": {}
                },
                "name": {
                  "aliases": [],
                  "description": "Name of the NAT rule.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "protocols": {
                  "aliases": [],
                  "description": "Array of AzureFirewallNetworkRuleProtocols applicable to this NAT rule.",
                  "type": "list",
                  "required": false,
                  "suboptions": {}
                },
                "source_addresses": {
                  "aliases": [],
                  "description": "List of source IP addresses for this rule.",
                  "type": "list",
                  "required": false,
                  "suboptions": {}
                },
                "translated_address": {
                  "aliases": [],
                  "description": "The translated address for this NAT rule.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "translated_port": {
                  "aliases": [],
                  "description": "The translated port for this NAT rule.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            }
          }
        },
        "network_rule_collections": {
          "aliases": [],
          "description": "Collection of network rule collections used by Azure Firewall.",
          "type": "list",
          "required": false,
          "suboptions": {
            "action": {
              "aliases": [],
              "description": "The action type of a rule collection.",
              "type": "str",
              "required": false,
              "choices": [
                "allow",
                "deny"
              ],
              "suboptions": {}
            },
            "name": {
              "aliases": [],
              "description": "Gets name of the resource that is unique within a resource group.\nThis name can be used to access the resource.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "priority": {
              "aliases": [],
              "description": "Priority of the network rule collection resource.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "rules": {
              "aliases": [],
              "description": "Collection of rules used by a network rule collection.",
              "type": "list",
              "required": false,
              "suboptions": {
                "description": {
                  "aliases": [],
                  "description": "Description of the rule.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "destination_addresses": {
                  "aliases": [],
                  "description": "List of destination IP addresses.",
                  "type": "list",
                  "required": false,
                  "suboptions": {}
                },
                "destination_ports": {
                  "aliases": [],
                  "description": "List of destination ports.",
                  "type": "list",
                  "required": false,
                  "suboptions": {}
                },
                "name": {
                  "aliases": [],
                  "description": "Name of the network rule.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "protocols": {
                  "aliases": [],
                  "description": "Array of AzureFirewallNetworkRuleProtocols.",
                  "type": "list",
                  "required": false,
                  "suboptions": {}
                },
                "source_addresses": {
                  "aliases": [],
                  "description": "List of source IP addresses for this rule.",
                  "type": "list",
                  "required": false,
                  "suboptions": {}
                }
              }
            }
          }
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Assert the state of the AzureFirewall.\nUse C(present) to create or update an AzureFirewall and C(absent) to delete it.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage Azure Firewall instance",
      "version_added": "0.1.2"
    },
    "examples": "\n- name: Create Azure Firewall\n  azure_rm_azurefirewall:\n    resource_group: myResourceGroup\n    name: myAzureFirewall\n    tags:\n      key1: value1\n    application_rule_collections:\n      - priority: 110\n        action:\n          type: deny\n        rules:\n          - name: rule1\n            description: Deny inbound rule\n            source_addresses:\n              - 216.58.216.164\n              - 10.0.0.0/24\n            protocols:\n              - type: https\n                port: '443'\n            target_fqdns:\n              - www.test.com\n        name: apprulecoll\n    nat_rule_collections:\n      - priority: 112\n        action:\n          type: dnat\n        rules:\n          - name: DNAT-HTTPS-traffic\n            description: D-NAT all outbound web traffic for inspection\n            source_addresses:\n              - '*'\n            destination_addresses:\n              - 1.2.3.4\n            destination_ports:\n              - '443'\n            protocols:\n              - tcp\n            translated_address: 1.2.3.5\n            translated_port: '8443'\n        name: natrulecoll\n    network_rule_collections:\n      - priority: 112\n        action:\n          type: deny\n        rules:\n          - name: L4-traffic\n            description: Block traffic based on source IPs and ports\n            protocols:\n              - tcp\n            source_addresses:\n              - 192.168.1.1-192.168.1.12\n              - 10.1.4.12-10.1.4.255\n            destination_addresses:\n              - '*'\n            destination_ports:\n              - 443-444\n              - '8443'\n        name: netrulecoll\n    ip_configurations:\n      - subnet: >-\n          /subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/myResourceGroup\n          /providers/Microsoft.Network/virtualNetworks/myVirtualNetwork\n          /subnets/AzureFirewallSubnet\n        public_ip_address: >-\n          /subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/myResourceGroup\n          /providers/Microsoft.Network/publicIPAddresses/\n          myPublicIpAddress\n        name: azureFirewallIpConfiguration\n- name: Delete Azure Firewall\n  azure_rm_azurefirewall:\n    resource_group: myResourceGroup\n    name: myAzureFirewall\n    state: absent\n\n"
  },
  "azure.azcollection.azure_rm_azurefirewall_info": {
    "doc": {
      "description": "Get info of AzureFirewall.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Resource name.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get AzureFirewall info",
      "version_added": "0.1.2"
    },
    "examples": "\n- name: List all Azure Firewalls for a given subscription\n  azure_rm_azurefirewall_info:\n- name: List all Azure Firewalls for a given resource group\n  azure_rm_azurefirewall_info:\n    resource_group: myResourceGroup\n- name: Get Azure Firewall\n  azure_rm_azurefirewall_info:\n    resource_group: myResourceGroup\n    name: myAzureFirewall\n\n"
  },
  "azure.azcollection.azure_rm_backupazurevm": {
    "doc": {
      "description": "Back up an Azure VM using Azure Backup.\nEnabling/Updating protection for the Azure VM.\nTrigger an on-demand backup for a protected Azure VM.\nStop protection but retain existing data.\nStop protection and delete data.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "backup_policy_id": {
          "aliases": [],
          "description": "Backup Policy ID present under Recovery Service Vault mentioned in recovery_vault_name field.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "recovery_vault_name": {
          "aliases": [],
          "description": "The name of the Azure Recovery Service Vault.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "resource_id": {
          "aliases": [],
          "description": "Azure Virtual Machine Resource ID.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Assert the state of the protection item.\nUse C(create) for enabling protection for the Azure VM.\nUse C(update) for changing the policy of protection.\nUse C(stop) for stop protection but retain existing data.\nUse C(delete) for stop protection and delete data.\nUse C(backup) for on-demand backup.",
          "default": "create",
          "type": "str",
          "required": false,
          "choices": [
            "create",
            "update",
            "delete",
            "stop",
            "backup"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Back up an Azure Virtual Machine using Azure Backup",
      "version_added": "1.1.0"
    },
    "examples": "\n    - name: Enabling/Updating protection for the Azure VM\n      azure_rm_backupazurevm:\n        resource_group: 'myResourceGroup'\n        recovery_vault_name: 'testVault'\n        resource_id: '/subscriptions/00000000-0000-0000-0000-000000000000/         resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/testVM'\n        backup_policy_id: '/subscriptions/00000000-0000-0000-0000-000000000000/         resourceGroups/myResourceGroup/providers/microsoft.recoveryservices/vaults/testVault/backupPolicies/ProdPolicy'\n        state: 'create'\n    - name: Stop protection but retain existing data\n      azure_rm_backupazurevm:\n        resource_group: 'myResourceGroup'\n        recovery_vault_name: 'testVault'\n        resource_id: '/subscriptions/00000000-0000-0000-0000-000000000000/         resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/testVM'\n        state: 'stop'\n    - name: Stop protection and delete data\n      azure_rm_backupazurevm:\n        resource_group: 'myResourceGroup'\n        recovery_vault_name: 'testVault'\n        resource_id: '/subscriptions/00000000-0000-0000-0000-000000000000/         resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/testVM'\n        state: 'delete'\n    - name: Trigger an on-demand backup for a protected Azure VM\n      azure_rm_backupazurevm:\n        resource_group: 'myResourceGroup'\n        recovery_vault_name: 'testVault'\n        resource_id: '/subscriptions/00000000-0000-0000-0000-000000000000/         resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/testVM'\n        backup_policy_id: '/subscriptions/00000000-0000-0000-0000-000000000000/         resourceGroups/myResourceGroup/providers/microsoft.recoveryservices/vaults/testVault/backupPolicies/ProdPolicy'\n        state: 'backup'\n    "
  },
  "azure.azcollection.azure_rm_backupazurevm_info": {
    "doc": {
      "description": "Get Recovery point details for protected items.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "recovery_vault_name": {
          "aliases": [],
          "description": "The name of the Azure Recovery Service Vault.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "resource_id": {
          "aliases": [],
          "description": "Azure Virtual Machine Resource ID.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Back up an Azure Virtual Machine using Azure Backup Information",
      "version_added": "1.1.0"
    },
    "examples": "\n    - name: Get Recovery Point Details\n      azure_rm_backupazurevm_info:\n        resource_group: 'myResourceGroup'\n        recovery_vault_name: 'testVault'\n        resource_id: '/subscriptions/00000000-0000-0000-0000-000000000000/         resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/testVM'\n    "
  },
  "azure.azcollection.azure_rm_backuppolicy": {
    "doc": {
      "description": "Create and delete instance of Azure Backup Policy.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "backup_management_type": {
          "aliases": [],
          "description": "Defines the type of resource the policy will be applied to.",
          "type": "str",
          "required": false,
          "choices": [
            "AzureIaasVM"
          ],
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "daily_retention_count": {
          "aliases": [],
          "description": "The amount of days to retain backups.\nDoes not apply to Weekly frequency.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "instant_recovery_snapshot_retention": {
          "aliases": [],
          "description": "How many days to retain instant recovery snapshots.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the backup policy.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group the vault is in.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "schedule_days": {
          "aliases": [],
          "description": "List of days to execute the schedule.\nDoes not apply to Daily frequency.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "schedule_run_frequency": {
          "aliases": [],
          "description": "The frequency to run the policy.",
          "type": "str",
          "required": false,
          "choices": [
            "Daily",
            "Weekly"
          ],
          "suboptions": {}
        },
        "schedule_run_time": {
          "aliases": [],
          "description": "The hour to run backups.\nValid choices are on 24 hour scale (0-23).",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "schedule_weekly_frequency": {
          "aliases": [],
          "description": "The amount of weeks between backups.\nBackup every schedule_weekly_frequency week(s)\nAzure will default behavior to running weekly if this is left blank\nBackup every schedule_weekly_frequency week(s).\nAzure will default behavior to running weekly if this is left blank.\nDoes not apply to Daily frequency.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Assert the state of the backup policy.\nUse C(present) to create or update a backup policy and C(absent) to delete it.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "time_zone": {
          "aliases": [],
          "description": "Timezone to apply schedule_run_time.",
          "default": "UTC",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "vault_name": {
          "aliases": [],
          "description": "The name of the Recovery Services Vault the policy belongs to.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "weekly_retention_count": {
          "aliases": [],
          "description": "The amount of weeks to retain backups.",
          "type": "int",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage Azure Backup Policy",
      "version_added": "1.4.0"
    },
    "examples": "\n    - name: Delete a backup policy\n      azure_rm_backuppolicy:\n        vault_name: Vault_Name\n        name: Policy_Name\n        resource_group: Resource_Group_Name\n        state: absent\n\n    - name: Create a daily VM backup policy\n      azure_rm_backuppolicy:\n        vault_name: Vault_Name\n        name: Policy_Name\n        resource_group: Resource_Group_Name\n        state: present\n        backup_management_type: \"AzureIaasVM\"\n        schedule_run_frequency: \"Daily\"\n        instant_recovery_snapshot_retention: 2\n        daily_retention_count: 12\n        time_zone: \"Pacific Standard Time\"\n        schedule_run_time: 14\n\n    - name: Create a weekly VM backup policy\n      azure.azcollection.azure_rm_backuppolicy:\n        vault_name: Vault_Name\n        name: Policy_Name\n        resource_group: Resource_Group_Name\n        state: present\n        backup_management_type: \"AzureIaasVM\"\n        schedule_run_frequency: \"Weekly\"\n        instant_recovery_snapshot_retention: 5\n        weekly_retention_count: 4\n        schedule_days:\n          - \"Monday\"\n          - \"Wednesday\"\n          - \"Friday\"\n        time_zone: \"Pacific Standard Time\"\n        schedule_run_time: 8\n\n"
  },
  "azure.azcollection.azure_rm_backuppolicy_info": {
    "doc": {
      "description": "Create and delete instance of Azure Backup Policy.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the backup policy.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group the vault is in.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "vault_name": {
          "aliases": [],
          "description": "The name of the Recovery Services Vault the policy belongs to.",
          "type": "str",
          "required": true,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Info on Azure Backup Policy",
      "version_added": "1.4.0"
    },
    "examples": "\n    - name: Get backup policy information\n      azure_rm_backuppolicy_info:\n        vault_name: Vault_Name\n        name: Policy_Name\n        resource_group: Resource_Group_Name\n      register: backup_policy\n"
  },
  "azure.azcollection.azure_rm_batchaccount": {
    "doc": {
      "description": "Create, update and delete instance of Azure Batch Account.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auto_storage_account": {
          "aliases": [],
          "description": "Existing storage account with which to associate the Batch Account.\nIt can be the storage account name which is in the same resource group.\nIt can be the storage account ID. Fox example \"/subscriptions/{subscription_id}/resourceGroups/ {resource_group}/providers/Microsoft.Storage/storageAccounts/{name}\".\nIt can be a dict which contains I(name) and I(resource_group) of the storage account.",
          "required": false,
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "key_vault": {
          "aliases": [],
          "description": "Existing key vault with which to associate the Batch Account.\nIt can be the key vault name which is in the same resource group.\nIt can be the key vault ID. For example \"/subscriptions/{subscription_id}/resourceGroups/ {resource_group}/providers/Microsoft.KeyVault/vaults/{name}\".\nIt can be a dict which contains I(name) and I(resource_group) of the key vault.",
          "required": false,
          "suboptions": {}
        },
        "location": {
          "aliases": [],
          "description": "Specifies the supported Azure location where the resource exists.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the Batch Account.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "pool_allocation_mode": {
          "aliases": [],
          "description": "The pool acclocation mode of the Batch Account.",
          "default": "batch_service",
          "type": "str",
          "required": false,
          "choices": [
            "batch_service",
            "user_subscription"
          ],
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group in which to create the Batch Account.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Assert the state of the Batch Account.\nUse C(present) to create or update a Batch Account and C(absent) to delete it.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manages a Batch Account on Azure",
      "version_added": "0.1.2"
    },
    "examples": "\n  - name: Create Batch Account\n    azure_rm_batchaccount:\n        resource_group: MyResGroup\n        name: mybatchaccount\n        location: eastus\n        auto_storage_account:\n          name: mystorageaccountname\n        pool_allocation_mode: batch_service\n"
  },
  "azure.azcollection.azure_rm_cdnendpoint": {
    "doc": {
      "description": "Create, update, start, stop and delete a Azure CDN endpoint.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "content_types_to_compress": {
          "aliases": [],
          "description": "List of content types on which compression applies.\nThis value should be a valid MIME type.",
          "type": "list",
          "required": false,
          "suboptions": {}
        },
        "is_compression_enabled": {
          "aliases": [],
          "description": "Indicates whether content compression is enabled on CDN.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "is_http_allowed": {
          "aliases": [],
          "description": "Indicates whether HTTP traffic is allowed on the endpoint.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "is_https_allowed": {
          "aliases": [],
          "description": "Indicates whether HTTPS traffic is allowed on the endpoint.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "location": {
          "aliases": [],
          "description": "Valid azure location. Defaults to location of the resource group.",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the Azure CDN endpoint.",
          "required": true,
          "suboptions": {}
        },
        "origin_host_header": {
          "aliases": [],
          "description": "The host header value sent to the origin with each request.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "origin_path": {
          "aliases": [],
          "description": "A directory path on the origin that CDN can use to retrieve content from.\nE.g. contoso.cloudapp.net/originpath.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "origins": {
          "aliases": [],
          "description": "Set of source of the content being delivered via CDN.",
          "required": true,
          "suboptions": {
            "host_name": {
              "aliases": [],
              "description": "The address of the origin.\nIt can be a domain name, IPv4 address, or IPv6 address.",
              "required": true,
              "suboptions": {}
            },
            "http_port": {
              "aliases": [],
              "description": "The value of the HTTP port. Must be between C(1) and C(65535).",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "https_port": {
              "aliases": [],
              "description": "The value of the HTTPS port. Must be between C(1) and C(65535).",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "name": {
              "aliases": [],
              "description": "Origin name.",
              "required": true,
              "suboptions": {}
            }
          }
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile_name": {
          "aliases": [],
          "description": "Name of the CDN profile where the endpoint attached to.",
          "required": true,
          "suboptions": {}
        },
        "purge": {
          "aliases": [],
          "description": "Use with I(state=present) to purge the endpoint.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "purge_content_paths": {
          "aliases": [],
          "description": "Use with I(state=present) and I(purge=true) to specify content paths to be purged.",
          "default": "['/']",
          "type": "list",
          "required": false,
          "suboptions": {}
        },
        "query_string_caching_behavior": {
          "aliases": [],
          "description": "Defines how CDN caches requests that include query strings.",
          "default": "ignore_query_string",
          "type": "str",
          "required": false,
          "choices": [
            "ignore_query_string",
            "bypass_caching",
            "use_query_string",
            "not_set"
          ],
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Name of a resource group where the Azure CDN endpoint exists or will be created.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "started": {
          "aliases": [],
          "description": "Use with I(state=present) to start the endpoint.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Assert the state of the Azure CDN endpoint. Use C(present) to create or update a Azure CDN endpoint and C(absent) to delete it.",
          "default": "present",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage a Azure CDN endpoint",
      "version_added": "0.1.2"
    },
    "examples": "\n    - name: Create a Azure CDN endpoint\n      azure_rm_cdnendpoint:\n          resource_group: myResourceGroup\n          profile_name: myProfile\n          name: myEndpoint\n          origins:\n            - name: TestOrig\n              host_name: \"www.example.com\"\n          tags:\n              testing: testing\n              delete: on-exit\n              foo: bar\n    - name: Delete a Azure CDN endpoint\n      azure_rm_cdnendpoint:\n          resource_group: myResourceGroup\n          profile_name: myProfile\n          name: myEndpoint\n          state: absent\n"
  },
  "azure.azcollection.azure_rm_cdnendpoint_info": {
    "doc": {
      "description": "Get facts for a specific Azure CDN endpoint or all Azure CDN endpoints.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Limit results to a specific Azure CDN endpoint.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile_name": {
          "aliases": [],
          "description": "Name of CDN profile.",
          "required": true,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Name of resource group where this CDN profile belongs to.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure CDN endpoint facts",
      "version_added": "0.1.2"
    },
    "examples": "\n  - name: Get facts for all endpoints in CDN profile\n    azure_rm_cdnendpoint_info:\n      resource_group: myResourceGroup\n      profile_name: myCDNProfile\n\n  - name: Get facts of specific CDN endpoint\n    azure_rm_cdnendpoint_info:\n      resource_group: myResourceGroup\n      profile_name: myCDNProfile\n      name: myEndpoint1\n"
  },
  "azure.azcollection.azure_rm_cdnprofile": {
    "doc": {
      "description": "Create, update and delete a Azure CDN profile.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "location": {
          "aliases": [],
          "description": "Valid Azure location. Defaults to location of the resource group.",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the CDN profile.",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Name of a resource group where the CDN profile exists or will be created.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "sku": {
          "aliases": [],
          "description": "The pricing tier, defines a CDN provider, feature list and rate of the CDN profile.\nDetailed pricing can be find at U(https://azure.microsoft.com/en-us/pricing/details/cdn/).",
          "required": false,
          "choices": [
            "standard_verizon",
            "premium_verizon",
            "custom_verizon",
            "standard_akamai",
            "standard_chinacdn",
            "standard_microsoft"
          ],
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Assert the state of the CDN profile. Use C(present) to create or update a CDN profile and C(absent) to delete it.",
          "default": "present",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage a Azure CDN profile",
      "version_added": "0.1.2"
    },
    "examples": "\n    - name: Create a CDN profile\n      azure_rm_cdnprofile:\n          resource_group: myResourceGroup\n          name: myCDN\n          sku: standard_akamai\n          tags:\n              testing: testing\n\n    - name: Delete the CDN profile\n      azure_rm_cdnprofile:\n        resource_group: myResourceGroup\n        name: myCDN\n        state: absent\n"
  },
  "azure.azcollection.azure_rm_cdnprofile_info": {
    "doc": {
      "description": "Get facts for a specific Azure CDN profile or all CDN profiles.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Limit results to a specific CDN profile.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The resource group to search for the desired CDN profile.",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure CDN profile facts",
      "version_added": "0.1.2"
    },
    "examples": "\n    - name: Get facts for one CDN profile\n      azure_rm_cdnprofile_info:\n        name: Testing\n        resource_group: myResourceGroup\n\n    - name: Get facts for all CDN profiles\n      azure_rm_cdnprofile_info:\n\n    - name: Get facts by tags\n      azure_rm_cdnprofile_info:\n        tags:\n          - Environment:Test\n"
  },
  "azure.azcollection.azure_rm_cognitivesearch": {
    "doc": {
      "description": "Create, update or delete Azure Cognitive Search service.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "hosting_mode": {
          "aliases": [],
          "description": "Applicable only for the standard3 SKU.\nYou can set this property to enable up to 3 high density partitions that allow up to 1000 indexes.\nFor the standard3 SKU, the value is either 'default' or 'highDensity'.\nFor all other SKUs, this value must be 'default'.",
          "default": "default",
          "type": "str",
          "required": false,
          "choices": [
            "default",
            "highDensity"
          ],
          "suboptions": {}
        },
        "identity": {
          "aliases": [],
          "description": "The identity for the resource.",
          "default": "None",
          "type": "str",
          "required": false,
          "choices": [
            "None",
            "SystemAssigned"
          ],
          "suboptions": {}
        },
        "location": {
          "aliases": [],
          "description": "Valid azure location. Defaults to location of the resource group.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the Azure Cognitive Search service.\nSearch service names must only contain lowercase letters, digits or dashes.\nCannot use dash as the first two or last one characters.\nCannot contain consecutive dashes.\nMust be between 2 and 60 characters in length.\nSearch service names must be globally unique.\nYou cannot change the service name after the service is created.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "network_rule_set": {
          "aliases": [],
          "description": "Network specific rules that determine how the Azure Cognitive Search service may be reached.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "partition_count": {
          "aliases": [],
          "description": "The number of partitions in the search service.\nIt can be C(1), C(2), C(3), C(4), C(6), or C(12).\nValues greater than 1 are only valid for standard SKUs.\nFor 'standard3' services with hostingMode set to 'highDensity', the allowed values are between 1 and 3.",
          "default": "1",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "public_network_access": {
          "aliases": [],
          "description": "This value can be set to C(enabled) to avoid breaking changes on existing customer resources and templates.\nIf set to C(enabled), traffic over public interface is not allowed, and private endpoint connections would be the exclusive access method.",
          "default": "enabled",
          "type": "str",
          "required": false,
          "choices": [
            "enabled",
            "disabled"
          ],
          "suboptions": {}
        },
        "replica_count": {
          "aliases": [],
          "description": "The number of replicas in the search service.\nIt must be a value between 1 and 12 inclusive for I(sku=standard).\nIt must be a value between 1 and 3 inclusive for I(sku=basic).",
          "default": "1",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group within the current subscription.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "sku": {
          "aliases": [],
          "description": "The SKU of the Search Service, which determines price tier and capacity limits.\nThis property is required when creating a new Search Service.",
          "default": "basic",
          "type": "str",
          "required": false,
          "choices": [
            "free",
            "basic",
            "standard",
            "standard2",
            "standard3",
            "storage_optimized_l1",
            "storage_optimized_l2"
          ],
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Assert the state of the search instance. Set to C(present) to create or update a search instance. Set to C(absent) to remove a search instance.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage Azure Cognitive Search service",
      "version_added": "1.4.0"
    },
    "examples": "\n  - name: Create Azure Cognitive Search\n    azure_rm_cognitivesearch:\n      resource_group: myResourceGroup\n      name: myAzureSearch\n"
  },
  "azure.azcollection.azure_rm_cognitivesearch_info": {
    "doc": {
      "description": "Get info for a specific Azure Cognitive Search service or all Azure Cognitive Search service within a resource group.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the Azure Cognitive Search service.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the Azure resource group.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "show_keys": {
          "aliases": [],
          "description": "Retrieve admin and query keys.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure Cognitive Search service info",
      "version_added": "1.4.0"
    },
    "examples": "\n  - name: Get Azure Cognitive Search info from resource group 'myResourceGroup' and name 'myAzureSearch'\n    azure_rm_cognitivesearch_info:\n      resource_group: myResourceGroup\n      name: myAzureSearch\n\n  - name: Get Azure Cognitive Search info from resource group 'myResourceGroup'\n    azure_rm_cognitivesearch_info:\n      resource_group: myResourceGroup\n\n  - name: Get all Azure Cognitive Search info\n    azure_rm_cognitivesearch_info:\n"
  },
  "azure.azcollection.azure_rm_containerinstance": {
    "doc": {
      "description": "Create, update and delete an Azure Container Instance.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "containers": {
          "aliases": [],
          "description": "List of containers.\nRequired when creation.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "commands": {
              "aliases": [],
              "description": "List of commands to execute within the container instance in exec form.\nWhen updating existing container all existing commands will be replaced by new ones.",
              "type": "list",
              "required": false,
              "elements": "str",
              "suboptions": {}
            },
            "cpu": {
              "aliases": [],
              "description": "The required number of CPU cores of the containers.",
              "default": "1",
              "type": "float",
              "required": false,
              "suboptions": {}
            },
            "environment_variables": {
              "aliases": [],
              "description": "List of container environment variables.\nWhen updating existing container all existing variables will be replaced by new ones.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "is_secure": {
                  "aliases": [],
                  "description": "Is variable secure.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "name": {
                  "aliases": [],
                  "description": "Environment variable name.",
                  "type": "str",
                  "required": true,
                  "suboptions": {}
                },
                "value": {
                  "aliases": [],
                  "description": "Environment variable value.",
                  "type": "str",
                  "required": true,
                  "suboptions": {}
                }
              }
            },
            "image": {
              "aliases": [],
              "description": "The container image name.",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "memory": {
              "aliases": [],
              "description": "The required memory of the containers in GB.",
              "default": "1.5",
              "type": "float",
              "required": false,
              "suboptions": {}
            },
            "name": {
              "aliases": [],
              "description": "The name of the container instance.",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "ports": {
              "aliases": [],
              "description": "List of ports exposed within the container group.",
              "type": "list",
              "required": false,
              "elements": "int",
              "suboptions": {}
            },
            "volume_mounts": {
              "aliases": [],
              "description": "The volume mounts for the container instance",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "mount_path": {
                  "aliases": [],
                  "description": "The path within the container where the volume should be mounted",
                  "type": "str",
                  "required": true,
                  "suboptions": {}
                },
                "name": {
                  "aliases": [],
                  "description": "The name of the volume mount",
                  "type": "str",
                  "required": true,
                  "suboptions": {}
                },
                "read_only": {
                  "aliases": [],
                  "description": "The flag indicating whether the volume mount is read-only",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                }
              }
            }
          }
        },
        "dns_name_label": {
          "aliases": [],
          "description": "The Dns name label for the IP.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "force_update": {
          "aliases": [],
          "description": "Force update of existing container instance. Any update will result in deletion and recreation of existing containers.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ip_address": {
          "aliases": [],
          "description": "The IP address type of the container group.\nDefault is C(none) and creating an instance without public IP.",
          "default": "none",
          "type": "str",
          "required": false,
          "choices": [
            "public",
            "none"
          ],
          "suboptions": {}
        },
        "location": {
          "aliases": [],
          "description": "Valid azure location. Defaults to location of the resource group.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the container group.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "os_type": {
          "aliases": [],
          "description": "The OS type of containers.",
          "default": "linux",
          "type": "str",
          "required": false,
          "choices": [
            "linux",
            "windows"
          ],
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ports": {
          "aliases": [],
          "description": "List of ports exposed within the container group.\nThis option is deprecated, using I(ports) under I(containers)\".",
          "type": "list",
          "required": false,
          "elements": "int",
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "registry_login_server": {
          "aliases": [],
          "description": "The container image registry login server.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "registry_password": {
          "aliases": [],
          "description": "The password to log in container image registry server.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "registry_username": {
          "aliases": [],
          "description": "The username to log in container image registry server.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Name of resource group.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "restart_policy": {
          "aliases": [],
          "description": "Restart policy for all containers within the container group.",
          "type": "str",
          "required": false,
          "choices": [
            "always",
            "on_failure",
            "never"
          ],
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Assert the state of the container instance. Use C(present) to create or update an container instance and C(absent) to delete it.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "volumes": {
          "aliases": [],
          "description": "List of Volumes that can be mounted by containers in this container group.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "azure_file": {
              "aliases": [],
              "description": "The Azure File volume",
              "type": "dict",
              "required": false,
              "suboptions": {
                "read_only": {
                  "aliases": [],
                  "description": "The flag indicating whether the Azure File shared mounted as a volume is read-only",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "share_name": {
                  "aliases": [],
                  "description": "The name of the Azure File share to be mounted as a volume",
                  "type": "str",
                  "required": true,
                  "suboptions": {}
                },
                "storage_account_key": {
                  "aliases": [],
                  "description": "The storage account access key used to access the Azure File share",
                  "type": "str",
                  "required": true,
                  "suboptions": {}
                },
                "storage_account_name": {
                  "aliases": [],
                  "description": "The name of the storage account that contains the Azure File share",
                  "type": "str",
                  "required": true,
                  "suboptions": {}
                }
              }
            },
            "empty_dir": {
              "aliases": [],
              "description": "The empty directory volume",
              "type": "dict",
              "required": false,
              "suboptions": {}
            },
            "git_repo": {
              "aliases": [],
              "description": "The git repo volume",
              "type": "dict",
              "required": false,
              "suboptions": {
                "directory": {
                  "aliases": [],
                  "description": "Target directory name",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "repository": {
                  "aliases": [],
                  "description": "Repository URL",
                  "type": "str",
                  "required": true,
                  "suboptions": {}
                },
                "revision": {
                  "aliases": [],
                  "description": "Commit hash for the specified revision",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "name": {
              "aliases": [],
              "description": "The name of the Volume",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "secret": {
              "aliases": [],
              "description": "The secret volume",
              "type": "dict",
              "required": false,
              "suboptions": {}
            }
          }
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage an Azure Container Instance",
      "version_added": "0.1.2"
    },
    "examples": "\n  - name: Create sample container group\n    azure_rm_containerinstance:\n      resource_group: myResourceGroup\n      name: myContainerInstanceGroup\n      os_type: linux\n      ip_address: public\n      containers:\n        - name: myContainer1\n          image: httpd\n          memory: 1.5\n          ports:\n            - 80\n            - 81\n\n  - name: Create sample container group with azure file share volume\n    azure_rm_containerinstance:\n      resource_group: myResourceGroup\n      name: myContainerInstanceGroupz\n      os_type: linux\n      ip_address: public\n      containers:\n        - name: mycontainer1\n          image: httpd\n          memory: 1\n          volume_mounts:\n            - name: filesharevolume\n              mount_path: \"/data/files\"\n          ports:\n            - 80\n            - 81\n      volumes:\n        - name: filesharevolume\n          azure_file:\n            storage_account_name: mystorageaccount\n            share_name: acishare\n            storage_account_key: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n\n  - name: Create sample container group with git repo volume\n    azure_rm_containerinstance:\n      resource_group: myResourceGroup\n      name: myContainerInstanceGroup\n      os_type: linux\n      ip_address: public\n      containers:\n        - name: mycontainer1\n          image: httpd\n          memory: 1\n          volume_mounts:\n            - name: myvolume1\n              mount_path: \"/mnt/test\"\n          ports:\n            - 80\n            - 81\n      volumes:\n        - name: myvolume1\n          git_repo:\n            repository: \"https://github.com/Azure-Samples/aci-helloworld.git\"\n"
  },
  "azure.azcollection.azure_rm_containerinstance_info": {
    "doc": {
      "description": "Get facts of Container Instance.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the container instance.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing of tags. Format tags 'key:value'.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure Container Instance facts",
      "version_added": "0.1.2"
    },
    "examples": "\n  - name: Get specific Container Instance facts\n    azure_rm_containerinstance_info:\n      resource_group: myResourceGroup\n      name: myContainer\n\n  - name: List Container Instances in a specified resource group name\n    azure_rm_containerinstance_info:\n      resource_group: myResourceGroup\n"
  },
  "azure.azcollection.azure_rm_containerregistry": {
    "doc": {
      "description": "Create, update and delete an Azure Container Registry.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "admin_user_enabled": {
          "aliases": [],
          "description": "If enabled, you can use the registry name as username and admin user access key as password to docker login to your container registry.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "location": {
          "aliases": [],
          "description": "Valid azure location. Defaults to location of the resource group.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the Container Registry.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Name of a resource group where the Container Registry exists or will be created.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "sku": {
          "aliases": [],
          "description": "Specifies the SKU to use. Currently can be either C(Basic), C(Standard) or C(Premium).",
          "default": "Standard",
          "type": "str",
          "required": false,
          "choices": [
            "Basic",
            "Standard",
            "Premium"
          ],
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Assert the state of the container registry. Use C(present) to create or update an container registry and C(absent) to delete it.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage an Azure Container Registry",
      "version_added": "0.1.2"
    },
    "examples": "\n    - name: Create an azure container registry\n      azure_rm_containerregistry:\n        name: myRegistry\n        location: eastus\n        resource_group: myResourceGroup\n        admin_user_enabled: true\n        sku: Premium\n        tags:\n            Release: beta1\n            Environment: Production\n\n    - name: Remove an azure container registry\n      azure_rm_containerregistry:\n        name: myRegistry\n        resource_group: myResourceGroup\n        state: absent\n"
  },
  "azure.azcollection.azure_rm_containerregistry_info": {
    "doc": {
      "description": "Get facts for Container Registry.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the container registry.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group to which the container registry belongs.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "retrieve_credentials": {
          "aliases": [],
          "description": "Retrieve credentials for container registry.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure Container Registry facts",
      "version_added": "0.1.2"
    },
    "examples": "\n  - name: Get instance of Registry\n    azure_rm_containerregistry_info:\n      resource_group: myResourceGroup\n      name: myRegistry\n\n  - name: List instances of Registry\n    azure_rm_containerregistry_info:\n      resource_group: myResourceGroup\n"
  },
  "azure.azcollection.azure_rm_containerregistryreplication": {
    "doc": {
      "description": "Create, update and delete instance of Replication.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "location": {
          "aliases": [],
          "description": "Resource location. If not set, location from the resource group will be used as default.",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "registry_name": {
          "aliases": [],
          "description": "The name of the container registry.",
          "required": true,
          "suboptions": {}
        },
        "replication": {
          "aliases": [],
          "description": "The parameters for creating a replication.",
          "required": false,
          "suboptions": {}
        },
        "replication_name": {
          "aliases": [],
          "description": "The name of the I(replication).",
          "required": true,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group to which the container registry belongs.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage Replication instance.",
      "version_added": "0.1.2"
    },
    "examples": "\n  - name: Create (or update) Replication\n    azure_rm_containerregistryreplication:\n      resource_group: myResourceGroup\n      registry_name: myRegistry\n      replication_name: myReplication\n      replication: replication\n      location: eastus\n"
  },
  "azure.azcollection.azure_rm_containerregistryreplication_info": {
    "doc": {
      "description": "Get facts of Replication.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "registry_name": {
          "aliases": [],
          "description": "The name of the container registry.",
          "required": true,
          "suboptions": {}
        },
        "replication_name": {
          "aliases": [],
          "description": "The name of the replication.",
          "required": true,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group to which the container registry belongs.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Replication facts.",
      "version_added": "0.0.1"
    },
    "examples": "\n  - name: Get instance of Replication\n    azure_rm_containerregistryreplication_info:\n      resource_group: resource_group_name\n      registry_name: registry_name\n      replication_name: replication_name\n"
  },
  "azure.azcollection.azure_rm_containerregistrywebhook": {
    "doc": {
      "description": "Create, update and delete instance of Webhook.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "actions": {
          "aliases": [],
          "description": "The list of actions that trigger the webhook to post notifications.",
          "type": "list",
          "required": false,
          "suboptions": {}
        },
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "custom_headers": {
          "aliases": [],
          "description": "Custom headers that will be added to the webhook notifications.",
          "required": false,
          "suboptions": {}
        },
        "location": {
          "aliases": [],
          "description": "Resource location. If not set, location from the resource group will be used as default.",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "registry_name": {
          "aliases": [],
          "description": "The name of the container registry.",
          "required": true,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group to which the container registry belongs.",
          "required": true,
          "suboptions": {}
        },
        "scope": {
          "aliases": [],
          "description": "The scope of repositories where the event can be triggered. For example, 'foo:*' means events for all tags under repository 'foo'. 'foo:bar' m eans events for 'foo:bar' only. 'foo' is equivalent to 'foo:latest'. Empty means all events.",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_uri": {
          "aliases": [],
          "description": "The service URI for the webhook to post notifications.",
          "required": false,
          "suboptions": {}
        },
        "status": {
          "aliases": [],
          "description": "The status of the webhook at the time the operation was called.",
          "required": false,
          "choices": [
            "enabled",
            "disabled"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "webhook_name": {
          "aliases": [],
          "description": "The name of the webhook.",
          "required": true,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage Webhook instance.",
      "version_added": "0.1.2"
    },
    "examples": "\n  - name: Create (or update) Webhook\n    azure_rm_containerregistrywebhook:\n      resource_group: myResourceGroup\n      registry_name: myRegistry\n      webhook_name: myWebhook\n      location: eastus\n"
  },
  "azure.azcollection.azure_rm_containerregistrywebhook_info": {
    "doc": {
      "description": "Get facts of Webhook.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "registry_name": {
          "aliases": [],
          "description": "The name of the container registry.",
          "required": true,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group to which the container registry belongs.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "webhook_name": {
          "aliases": [],
          "description": "The name of the webhook.",
          "required": true,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Webhook facts.",
      "version_added": "0.1.2"
    },
    "examples": "\n  - name: Get instance of Webhook\n    azure_rm_containerregistrywebhook_info:\n      resource_group: resource_group_name\n      registry_name: registry_name\n      webhook_name: webhook_name\n"
  },
  "azure.azcollection.azure_rm_cosmosdbaccount": {
    "doc": {
      "description": "Create, update and delete instance of Azure Database Account.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "consistency_policy": {
          "aliases": [],
          "description": "The consistency policy for the Cosmos DB account.",
          "required": false,
          "suboptions": {
            "default_consistency_level": {
              "aliases": [],
              "description": "The default consistency level and configuration settings of the Cosmos DB account.\nRequired when I(state=present).",
              "required": false,
              "choices": [
                "eventual",
                "session",
                "bounded_staleness",
                "strong",
                "consistent_prefix"
              ],
              "suboptions": {}
            },
            "max_interval_in_seconds": {
              "aliases": [],
              "description": "When used with the Bounded Staleness consistency level, this value represents the time amount of staleness (in seconds) tolerated.\nAccepted range for this value is 5 - 86400. Required when I(default_consistency_policy=bounded_staleness).",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "max_staleness_prefix": {
              "aliases": [],
              "description": "When used with the Bounded Staleness consistency level, this value represents the number of stale requests tolerated.\nAccepted range for this value is 1 - 2,147,483,647. Required when I(default_consistency_policy=bounded_staleness).",
              "type": "int",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "database_account_offer_type": {
          "aliases": [],
          "description": "Database account offer type, for example I(Standard)\nRequired when I(state=present).",
          "required": false,
          "suboptions": {}
        },
        "enable_automatic_failover": {
          "aliases": [],
          "description": "Enables automatic failover of the write region in the rare event that the region is unavailable due to an outage.\nAutomatic failover will result in a new write region for the account and is chosen based on the failover priorities configured for the account.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "enable_cassandra": {
          "aliases": [],
          "description": "Enable Cassandra.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "enable_gremlin": {
          "aliases": [],
          "description": "Enable Gremlin.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "enable_multiple_write_locations": {
          "aliases": [],
          "description": "Enables the account to write in multiple locations",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "enable_table": {
          "aliases": [],
          "description": "Enable Table.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "geo_rep_locations": {
          "aliases": [],
          "description": "An array that contains the georeplication locations enabled for the Cosmos DB account.\nRequired when I(state=present).",
          "type": "list",
          "required": false,
          "suboptions": {
            "failover_priority": {
              "aliases": [],
              "description": "The failover priority of the region. A failover priority of 0 indicates a write region.\nThe maximum value for a failover priority = (total number of regions - 1).\nFailover priority values must be unique for each of the regions in which the database account exists.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "name": {
              "aliases": [],
              "description": "The name of the region.",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "ip_range_filter": {
          "aliases": [],
          "description": "Cosmos DB Firewall support. This value specifies the set of IP addresses or IP address ranges.\nIn CIDR form to be included as the allowed list of client IPs for a given database account.\nIP addresses/ranges must be comma separated and must not contain any spaces.",
          "required": false,
          "suboptions": {}
        },
        "is_virtual_network_filter_enabled": {
          "aliases": [],
          "description": "Flag to indicate whether to enable/disable Virtual Network ACL rules.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "kind": {
          "aliases": [],
          "description": "Indicates the type of database account. This can only be set at database account creation.",
          "required": false,
          "choices": [
            "global_document_db",
            "mongo_db",
            "parse"
          ],
          "suboptions": {}
        },
        "location": {
          "aliases": [],
          "description": "The location of the resource group to which the resource belongs.\nRequired when I(state=present).",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Cosmos DB database account name.",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Name of an Azure resource group.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Assert the state of the Database Account.\nUse C(present) to create or update an Database Account and C(absent) to delete it.",
          "default": "present",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "virtual_network_rules": {
          "aliases": [],
          "description": "List of Virtual Network ACL rules configured for the Cosmos DB account.",
          "type": "list",
          "required": false,
          "suboptions": {
            "ignore_missing_vnet_service_endpoint": {
              "aliases": [],
              "description": "Create Cosmos DB account without existing virtual network service endpoint.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "subnet": {
              "aliases": [],
              "description": "It can be a string containing resource id of a subnet.\nIt can be a dictionary containing 'resource_group', 'virtual_network_name' and 'subnet_name'",
              "required": false,
              "suboptions": {}
            }
          }
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage Azure Database Account instance",
      "version_added": "0.1.2"
    },
    "examples": "\n  - name: Create Cosmos DB Account - min\n    azure_rm_cosmosdbaccount:\n      resource_group: myResourceGroup\n      name: myDatabaseAccount\n      location: westus\n      geo_rep_locations:\n        - name: southcentralus\n          failover_priority: 0\n      database_account_offer_type: Standard\n\n  - name: Create Cosmos DB Account - max\n    azure_rm_cosmosdbaccount:\n      resource_group: myResourceGroup\n      name: myDatabaseAccount\n      location: westus\n      kind: mongo_db\n      geo_rep_locations:\n        - name: southcentralus\n          failover_priority: 0\n      database_account_offer_type: Standard\n      ip_range_filter: 10.10.10.10\n      enable_multiple_write_locations: yes\n      virtual_network_rules:\n        - subnet: \"/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/myVi\n                   rtualNetwork/subnets/mySubnet\"\n      consistency_policy:\n        default_consistency_level: bounded_staleness\n        max_staleness_prefix: 10\n        max_interval_in_seconds: 1000\n"
  },
  "azure.azcollection.azure_rm_cosmosdbaccount_info": {
    "doc": {
      "description": "Get facts of Azure Cosmos DB Account.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Cosmos DB database account name.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Name of an Azure resource group.",
          "required": false,
          "suboptions": {}
        },
        "retrieve_connection_strings": {
          "aliases": [],
          "description": "Retrieve connection strings.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "retrieve_keys": {
          "aliases": [],
          "description": "Retrieve keys and connection strings.",
          "type": "str",
          "required": false,
          "choices": [
            "all",
            "readonly"
          ],
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure Cosmos DB Account facts",
      "version_added": "0.1.2"
    },
    "examples": "\n  - name: Get instance of Database Account\n    azure_rm_cosmosdbaccount_info:\n      resource_group: myResourceGroup\n      name: testaccount\n\n  - name: List instances of Database Account\n    azure_rm_cosmosdbaccount_info:\n      resource_group: myResourceGroup\n"
  },
  "azure.azcollection.azure_rm_datalakestore": {
    "doc": {
      "description": "Create, update or delete a data lake store.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "default_group": {
          "aliases": [],
          "description": "The default owner group for all new folders and files created in the Data Lake Store account.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "encryption_config": {
          "aliases": [],
          "description": "The Key Vault encryption configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "key_vault_meta_info": {
              "aliases": [],
              "description": "The Key Vault information for connecting to user managed encryption keys.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "encryption_key_name": {
                  "aliases": [],
                  "description": "The name of the user managed encryption key.",
                  "type": "str",
                  "required": true,
                  "suboptions": {}
                },
                "encryption_key_version": {
                  "aliases": [],
                  "description": "The version of the user managed encryption key.",
                  "type": "str",
                  "required": true,
                  "suboptions": {}
                },
                "key_vault_resource_id": {
                  "aliases": [],
                  "description": "The resource identifier for the user managed Key Vault being used to encrypt.",
                  "type": "str",
                  "required": true,
                  "suboptions": {}
                }
              }
            },
            "type": {
              "aliases": [],
              "description": "The type of encryption configuration being used.",
              "type": "str",
              "required": true,
              "choices": [
                "UserManaged",
                "ServiceManaged"
              ],
              "suboptions": {}
            }
          }
        },
        "encryption_state": {
          "aliases": [],
          "description": "The current state of encryption for this Data Lake Store account.",
          "type": "str",
          "required": false,
          "choices": [
            "Enabled",
            "Disabled"
          ],
          "suboptions": {}
        },
        "firewall_allow_azure_ips": {
          "aliases": [],
          "description": "The current state of allowing or disallowing IPs originating within Azure through the firewall.\nIf the firewall is disabled, this is not enforced.",
          "type": "str",
          "required": false,
          "choices": [
            "Enabled",
            "Disabled"
          ],
          "suboptions": {}
        },
        "firewall_rules": {
          "aliases": [],
          "description": "The list of firewall rules associated with this Data Lake Store account.",
          "type": "list",
          "required": false,
          "suboptions": {
            "end_ip_address": {
              "aliases": [],
              "description": "The end IP address for the firewall rule.\nThis can be either ipv4 or ipv6.\nStart and End should be in the same protocol.",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "name": {
              "aliases": [],
              "description": "The unique name of the firewall rule to create.",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "start_ip_address": {
              "aliases": [],
              "description": "The start IP address for the firewall rule.\nThis can be either ipv4 or ipv6.\nStart and End should be in the same protocol.",
              "type": "str",
              "required": true,
              "suboptions": {}
            }
          }
        },
        "firewall_state": {
          "aliases": [],
          "description": "The current state of the IP address firewall for this Data Lake Store account.",
          "type": "str",
          "required": false,
          "choices": [
            "Enabled",
            "Disabled"
          ],
          "suboptions": {}
        },
        "identity": {
          "aliases": [],
          "description": "The Key Vault encryption identity, if any.",
          "type": "str",
          "required": false,
          "choices": [
            "SystemAssigned"
          ],
          "suboptions": {}
        },
        "location": {
          "aliases": [],
          "description": "The resource location.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the Data Lake Store account.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "new_tier": {
          "aliases": [],
          "description": "The commitment tier to use for next month.",
          "type": "str",
          "required": false,
          "choices": [
            "Consumption",
            "Commitment_1TB",
            "Commitment_10TB",
            "Commitment_100TB",
            "Commitment_500TB",
            "Commitment_1PB",
            "Commitment_5PB"
          ],
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [
            "resource_group_name"
          ],
          "description": "The name of the Azure resource group to use.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "State of the data lake store. Use C(present) to create or update a data lake store and use C(absent) to delete it.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "virtual_network_rules": {
          "aliases": [],
          "description": "The list of virtual network rules associated with this Data Lake Store account.",
          "type": "list",
          "required": false,
          "suboptions": {
            "name": {
              "aliases": [],
              "description": "The unique name of the virtual network rule to create.",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "subnet_id": {
              "aliases": [],
              "description": "The resource identifier for the subnet.",
              "type": "str",
              "required": true,
              "suboptions": {}
            }
          }
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage Azure data lake store",
      "version_added": "1.4.0"
    },
    "examples": "\n  - name: Create Azure Data Lake Store\n    azure_rm_datalakestore:\n      resource_group: myResourceGroup\n      name: myDataLakeStore\n"
  },
  "azure.azcollection.azure_rm_datalakestore_info": {
    "doc": {
      "description": "Get Azure Data Lake Store info.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the Data Lake Store account.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [
            "resource_group_name"
          ],
          "description": "The name of the Azure resource group.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure Data Lake Store info",
      "version_added": "1.4.0"
    },
    "examples": "\n  - name: Get Azure Data Lake Store info from resource group 'myResourceGroup' and name 'myDataLakeStore'\n    azure_rm_datalakestore_info:\n      resource_group: myResourceGroup\n      name: myDataLakeStore\n\n  - name: Get Azure Data Lake Store info from resource group 'myResourceGroup'\n    azure_rm_datalakestore_info:\n      resource_group: myResourceGroup\n\n  - name: Get Azure Data Lake Store info\n    azure_rm_datalakestore_info:\n"
  },
  "azure.azcollection.azure_rm_ddosprotectionplan": {
    "doc": {
      "description": "Create, update and delete instance of DDoS protection plan.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "location": {
          "aliases": [],
          "description": "Resource location. If not set, location from the resource group will be used as default.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Unique name of the app service plan to create or update.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Name of the resource group to which the resource belongs.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Assert the state of the DDoS protection plan.\nUse C(present) to create or update an DDoS protection plan and C(absent) to delete it.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage DDoS protection plan",
      "version_added": "1.7.0"
    },
    "examples": "\n- name: \"Create DDoS protection plan\"\n  azure_rm_ddosprotectionplan:\n    resource_group: rg\n    location: eastus\n    name: ddosplan\n- name: Delete DDoS protection plan\n  azure_rm_ddosprotectionplan:\n    resource_group: rg\n    name: ddosplan\n    state: absent\n"
  },
  "azure.azcollection.azure_rm_ddosprotectionplan_info": {
    "doc": {
      "description": "Get facts of Azure DDoS protection plan.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the DDoS protection plan.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure DDoS protection plan",
      "version_added": "1.7.0"
    },
    "examples": "\n  - name: Get facts of specific DDoS protection plan\n    azure_rm_ddosprotectionplan_info:\n      resource_group: myResourceGroup\n      name: myDDoSProtectionPlan\n"
  },
  "azure.azcollection.azure_rm_deployment": {
    "doc": {
      "description": "Create or destroy Azure Resource Manager template deployments via the Azure SDK for Python.\nYou can find some quick start templates in GitHub here U(https://github.com/azure/azure-quickstart-templates).\nFor more information on Azure Resource Manager templates see U(https://azure.microsoft.com/en-us/documentation/articles/resource-group-template-deploy/).",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "deployment_mode": {
          "aliases": [],
          "description": "In incremental mode, resources are deployed without deleting existing resources that are not included in the template.\nIn complete mode resources are deployed and existing resources in the resource group not included in the template are deleted.",
          "default": "incremental",
          "required": false,
          "choices": [
            "complete",
            "incremental"
          ],
          "suboptions": {}
        },
        "location": {
          "aliases": [],
          "description": "The geo-locations in which the resource group will be located.",
          "default": "westus",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [
            "deployment_name"
          ],
          "description": "The name of the deployment to be tracked in the resource group deployment history.\nRe-using a deployment name will overwrite the previous value in the resource group's deployment history.",
          "default": "ansible-arm",
          "required": false,
          "suboptions": {}
        },
        "parameters": {
          "aliases": [],
          "description": "A hash of all the required template variables for the deployment template. This parameter is mutually exclusive with I(parameters_link).\nEither I(parameters_link) or I(parameters) is required if I(state=present).",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "parameters_link": {
          "aliases": [],
          "description": "Uri of file containing the parameters body. This parameter is mutually exclusive with I(parameters).\nEither I(parameters_link) or I(parameters) is required if I(state=present).",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [
            "resource_group_name"
          ],
          "description": "The resource group name to use or create to host the deployed template.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "If I(state=present), template will be created.\nIf I(state=present) and deployment exists, it will be updated.\nIf I(state=absent), the resource group will be removed.",
          "default": "present",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "template": {
          "aliases": [],
          "description": "A hash containing the templates inline. This parameter is mutually exclusive with I(template_link).\nEither I(template) or I(template_link) is required if I(state=present).",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "template_link": {
          "aliases": [],
          "description": "Uri of file containing the template body. This parameter is mutually exclusive with I(template).\nEither I(template) or I(template_link) is required if I(state=present).",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "wait_for_deployment_completion": {
          "aliases": [],
          "description": "Whether or not to block until the deployment has completed.",
          "default": "yes",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "wait_for_deployment_polling_period": {
          "aliases": [],
          "description": "Time (in seconds) to wait between polls when waiting for deployment completion.",
          "default": "10",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Create or destroy Azure Resource Manager template deployments",
      "version_added": "0.1.0"
    },
    "examples": "\n# Destroy a template deployment\n- name: Destroy Azure Deploy\n  azure_rm_deployment:\n    resource_group: myResourceGroup\n    name: myDeployment\n    state: absent\n\n# Create or update a template deployment based on uris using parameter and template links\n- name: Create Azure Deploy\n  azure_rm_deployment:\n    resource_group: myResourceGroup\n    name: myDeployment\n    template_link: 'https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/101-vm-simple-linux/azuredeploy.json'\n    parameters_link: 'https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/101-vm-simple-linux/azuredeploy.parameters.json'\n\n# Create or update a template deployment based on a uri to the template and parameters specified inline.\n# This deploys a VM with SSH support for a given public key, then stores the result in 'azure_vms'. The result is then\n# used to create a new host group. This host group is then used to wait for each instance to respond to the public IP SSH.\n\n- name: Create Azure Deploy\n  azure_rm_deployment:\n    resource_group: myResourceGroup\n    name: myDeployment\n    parameters:\n      newStorageAccountName:\n        value: devopsclestorage1\n      adminUsername:\n        value: devopscle\n      dnsNameForPublicIP:\n        value: devopscleazure\n      location:\n        value: West US\n      vmSize:\n        value: Standard_A2\n      vmName:\n        value: ansibleSshVm\n      sshKeyData:\n        value: YOUR_SSH_PUBLIC_KEY\n    template_link: 'https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/101-vm-sshkey/azuredeploy.json'\n  register: azure\n- name: Add new instance to host group\n  add_host:\n    hostname: \"{{ item['ips'][0].public_ip }}\"\n    groupname: azure_vms\n  loop: \"{{ azure.deployment.instances }}\"\n\n# Deploy an Azure WebApp running a hello world'ish node app\n- name: Create Azure WebApp Deployment at http://devopscleweb.azurewebsites.net/hello.js\n  azure_rm_deployment:\n    resource_group: myResourceGroup\n    name: myDeployment\n    parameters:\n      repoURL:\n        value: 'https://github.com/devigned/az-roadshow-oss.git'\n      siteName:\n        value: devopscleweb\n      hostingPlanName:\n        value: someplan\n      siteLocation:\n        value: westus\n      sku:\n        value: Standard\n    template_link: 'https://raw.githubusercontent.com/azure/azure-quickstart-templates/master/201-web-app-github-deploy/azuredeploy.json'\n\n# Create or update a template deployment based on an inline template and parameters\n- name: Create Azure Deploy\n  azure_rm_deployment:\n    resource_group: myResourceGroup\n    name: myDeployment\n    template:\n      $schema: \"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\"\n      contentVersion: \"1.0.0.0\"\n      parameters:\n        newStorageAccountName:\n          type: \"string\"\n          metadata:\n            description: \"Unique DNS Name for the Storage Account where the Virtual Machine's disks will be placed.\"\n        adminUsername:\n          type: \"string\"\n          metadata:\n            description: \"User name for the Virtual Machine.\"\n        adminPassword:\n          type: \"securestring\"\n          metadata:\n            description: \"Password for the Virtual Machine.\"\n        dnsNameForPublicIP:\n          type: \"string\"\n          metadata:\n            description: \"Unique DNS Name for the Public IP used to access the Virtual Machine.\"\n        ubuntuOSVersion:\n          type: \"string\"\n          defaultValue: \"14.04.2-LTS\"\n          allowedValues:\n            - \"12.04.5-LTS\"\n            - \"14.04.2-LTS\"\n            - \"15.04\"\n          metadata:\n            description: >\n                         The Ubuntu version for the VM. This will pick a fully patched image of this given Ubuntu version.\n                         Allowed values: 12.04.5-LTS, 14.04.2-LTS, 15.04.\"\n      variables:\n        location: \"West US\"\n        imagePublisher: \"Canonical\"\n        imageOffer: \"UbuntuServer\"\n        OSDiskName: \"osdiskforlinuxsimple\"\n        nicName: \"myVMNic\"\n        addressPrefix: \"192.0.2.0/24\"\n        subnetName: \"Subnet\"\n        subnetPrefix: \"10.0.0.0/24\"\n        storageAccountType: \"Standard_LRS\"\n        publicIPAddressName: \"myPublicIP\"\n        publicIPAddressType: \"Dynamic\"\n        vmStorageAccountContainerName: \"vhds\"\n        vmName: \"MyUbuntuVM\"\n        vmSize: \"Standard_D1\"\n        virtualNetworkName: \"MyVNET\"\n        vnetID: \"[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]\"\n        subnetRef: \"[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]\"\n      resources:\n        - type: \"Microsoft.Storage/storageAccounts\"\n          name: \"[parameters('newStorageAccountName')]\"\n          apiVersion: \"2015-05-01-preview\"\n          location: \"[variables('location')]\"\n          properties:\n            accountType: \"[variables('storageAccountType')]\"\n        - apiVersion: \"2015-05-01-preview\"\n          type: \"Microsoft.Network/publicIPAddresses\"\n          name: \"[variables('publicIPAddressName')]\"\n          location: \"[variables('location')]\"\n          properties:\n            publicIPAllocationMethod: \"[variables('publicIPAddressType')]\"\n            dnsSettings:\n              domainNameLabel: \"[parameters('dnsNameForPublicIP')]\"\n        - type: \"Microsoft.Network/virtualNetworks\"\n          apiVersion: \"2015-05-01-preview\"\n          name: \"[variables('virtualNetworkName')]\"\n          location: \"[variables('location')]\"\n          properties:\n            addressSpace:\n              addressPrefixes:\n                - \"[variables('addressPrefix')]\"\n            subnets:\n              -\n                name: \"[variables('subnetName')]\"\n                properties:\n                  addressPrefix: \"[variables('subnetPrefix')]\"\n        - type: \"Microsoft.Network/networkInterfaces\"\n          apiVersion: \"2015-05-01-preview\"\n          name: \"[variables('nicName')]\"\n          location: \"[variables('location')]\"\n          dependsOn:\n            - \"[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]\"\n            - \"[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]\"\n          properties:\n            ipConfigurations:\n              -\n                name: \"ipconfig1\"\n                properties:\n                  privateIPAllocationMethod: \"Dynamic\"\n                  publicIPAddress:\n                    id: \"[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]\"\n                  subnet:\n                    id: \"[variables('subnetRef')]\"\n        - type: \"Microsoft.Compute/virtualMachines\"\n          apiVersion: \"2015-06-15\"\n          name: \"[variables('vmName')]\"\n          location: \"[variables('location')]\"\n          dependsOn:\n            - \"[concat('Microsoft.Storage/storageAccounts/', parameters('newStorageAccountName'))]\"\n            - \"[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]\"\n          properties:\n            hardwareProfile:\n              vmSize: \"[variables('vmSize')]\"\n            osProfile:\n              computername: \"[variables('vmName')]\"\n              adminUsername: \"[parameters('adminUsername')]\"\n              adminPassword: \"[parameters('adminPassword')]\"\n            storageProfile:\n              imageReference:\n                publisher: \"[variables('imagePublisher')]\"\n                offer: \"[variables('imageOffer')]\"\n                sku: \"[parameters('ubuntuOSVersion')]\"\n                version: \"latest\"\n              osDisk:\n                name: \"osdisk\"\n                vhd:\n                  uri: >\n                       [concat('http://',parameters('newStorageAccountName'),'.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/',\n                       variables('OSDiskName'),'.vhd')]\n                caching: \"ReadWrite\"\n                createOption: \"FromImage\"\n            networkProfile:\n              networkInterfaces:\n                -\n                  id: \"[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]\"\n            diagnosticsProfile:\n              bootDiagnostics:\n                enabled: \"true\"\n                storageUri: \"[concat('http://',parameters('newStorageAccountName'),'.blob.core.windows.net')]\"\n    parameters:\n      newStorageAccountName:\n        value: devopsclestorage\n      adminUsername:\n        value: devopscle\n      adminPassword:\n        value: Password1!\n      dnsNameForPublicIP:\n        value: devopscleazure\n"
  },
  "azure.azcollection.azure_rm_deployment_info": {
    "doc": {
      "description": "Get facts of Azure Deployment.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the deployment.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure Deployment facts",
      "version_added": "0.1.2"
    },
    "examples": "\n  - name: Get instance of Deployment\n    azure_rm_deployment_info:\n      resource_group: myResourceGroup\n      name: myDeployment\n"
  },
  "azure.azcollection.azure_rm_devtestlab": {
    "doc": {
      "description": "Create, update and delete instance of Azure DevTest Lab.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "location": {
          "aliases": [],
          "description": "The location of the resource.",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the lab.",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "premium_data_disks": {
          "aliases": [],
          "description": "Allow creation of premium data disks.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Assert the state of the DevTest Lab.\nUse C(present) to create or update an DevTest Lab and C(absent) to delete it.",
          "default": "present",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "storage_type": {
          "aliases": [],
          "description": "Type of storage used by the lab. It can be either C(premium) or C(standard).",
          "required": false,
          "choices": [
            "standard",
            "premium"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage Azure DevTest Lab instance",
      "version_added": "0.1.2"
    },
    "examples": "\n  - name: Create (or update) DevTest Lab\n    azure_rm_devtestlab:\n      resource_group: myResourceGroup\n      name: mylab\n      storage_type: standard\n"
  },
  "azure.azcollection.azure_rm_devtestlab_info": {
    "doc": {
      "description": "Get facts of Azure DevTest Lab.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the lab.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "type": "list",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure DevTest Lab facts",
      "version_added": "0.1.2"
    },
    "examples": "\n  - name: List instances of DevTest Lab by resource group\n    azure_rm_devtestlab_info:\n      resource_group: testrg\n\n  - name: List instances of DevTest Lab in subscription\n    azure_rm_devtestlab_info:\n\n  - name: Get instance of DevTest Lab\n    azure_rm_devtestlab_info:\n      resource_group: testrg\n      name: testlab\n"
  },
  "azure.azcollection.azure_rm_devtestlabarmtemplate_info": {
    "doc": {
      "description": "Get facts of Azure DevTest Lab ARM Template.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "artifact_source_name": {
          "aliases": [],
          "description": "The name of the artifact source.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "lab_name": {
          "aliases": [],
          "description": "The name of the lab.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the ARM template.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure DevTest Lab ARM Template facts",
      "version_added": "0.1.2"
    },
    "examples": "\n  - name: Get information on DevTest Lab ARM Template\n    azure_rm_devtestlabarmtemplate_info:\n      resource_group: myResourceGroup\n      lab_name: myLab\n      artifact_source_name: public environment repo\n      name: WebApp\n"
  },
  "azure.azcollection.azure_rm_devtestlabartifact_info": {
    "doc": {
      "description": "Get facts of Azure DevTest Lab Artifact.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "artifact_source_name": {
          "aliases": [],
          "description": "The name of the artifact source.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "lab_name": {
          "aliases": [],
          "description": "The name of the lab.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the artifact.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure DevTest Lab Artifact facts",
      "version_added": "0.1.2"
    },
    "examples": "\n  - name: Get instance of DevTest Lab Artifact\n    azure_rm_devtestlabartifact_info:\n      resource_group: myResourceGroup\n      lab_name: myLab\n      artifact_source_name: myArtifactSource\n      name: myArtifact\n"
  },
  "azure.azcollection.azure_rm_devtestlabartifactsource": {
    "doc": {
      "description": "Create, update and delete instance of Azure DevTest Labs Artifacts Source.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "arm_template_folder_path": {
          "aliases": [],
          "description": "The folder containing Azure Resource Manager templates.",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "branch_ref": {
          "aliases": [],
          "description": "The artifact source's branch reference.",
          "required": false,
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "display_name": {
          "aliases": [],
          "description": "The artifact source's display name.",
          "required": false,
          "suboptions": {}
        },
        "folder_path": {
          "aliases": [],
          "description": "The folder containing artifacts.",
          "required": false,
          "suboptions": {}
        },
        "is_enabled": {
          "aliases": [],
          "description": "Indicates whether the artifact source is enabled.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "lab_name": {
          "aliases": [],
          "description": "The name of the lab.",
          "required": true,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the artifact source.",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [],
          "description": "The security token to authenticate to the artifact source.",
          "required": false,
          "suboptions": {}
        },
        "source_type": {
          "aliases": [],
          "description": "The artifact source's type.",
          "required": false,
          "choices": [
            "vso",
            "github"
          ],
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Assert the state of the DevTest Labs Artifacts Source.\nUse C(present) to create or update an DevTest Labs Artifacts Source and C(absent) to delete it.",
          "default": "present",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "uri": {
          "aliases": [],
          "description": "The artifact source's URI.",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage Azure DevTest Labs Artifacts Source instance",
      "version_added": "0.1.2"
    },
    "examples": "\n  - name: Create (or update) DevTest Labs Artifacts Source\n    azure_rm_devtestlabartifactsource:\n      resource_group: myrg\n      lab_name: mylab\n      name: myartifacts\n      uri: https://github.com/myself/myrepo.git\n      source_type: github\n      folder_path: /\n      security_token: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n"
  },
  "azure.azcollection.azure_rm_devtestlabartifactsource_info": {
    "doc": {
      "description": "Get facts of Azure DevTest Lab Artifact Source.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "lab_name": {
          "aliases": [],
          "description": "The name of DevTest Lab.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of DevTest Lab Artifact Source.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "type": "list",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure DevTest Lab Artifact Source facts",
      "version_added": "0.1.2"
    },
    "examples": "\n  - name: Get instance of DevTest Lab Artifact Source\n    azure_rm_devtestlabartifactsource_info:\n      resource_group: myResourceGroup\n      lab_name: myLab\n      name: myArtifactSource\n"
  },
  "azure.azcollection.azure_rm_devtestlabcustomimage": {
    "doc": {
      "description": "Create, update and delete instance of Azure DevTest Lab Custom Image.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "author": {
          "aliases": [],
          "description": "The author of the custom image.",
          "required": false,
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "The description of the custom image.",
          "required": false,
          "suboptions": {}
        },
        "lab_name": {
          "aliases": [],
          "description": "The name of the lab.",
          "required": true,
          "suboptions": {}
        },
        "linux_os_state": {
          "aliases": [],
          "description": "The state of the Linux OS.",
          "required": false,
          "choices": [
            "non_deprovisioned",
            "deprovision_requested",
            "deprovision_applied"
          ],
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the custom image.",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "source_vm": {
          "aliases": [],
          "description": "Source DevTest Lab virtual machine name.",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Assert the state of the Custom Image.\nUse C(present) to create or update an Custom Image and C(absent) to delete it.",
          "default": "present",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "windows_os_state": {
          "aliases": [],
          "description": "The state of the Windows OS.",
          "required": false,
          "choices": [
            "non_sysprepped",
            "sysprep_requested",
            "sysprep_applied"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage Azure DevTest Lab Custom Image instance",
      "version_added": "0.1.2"
    },
    "examples": "\n- name: Create instance of DevTest Lab Image\n  azure_rm_devtestlabcustomimage:\n    resource_group: myResourceGroup\n    lab_name: myLab\n    name: myImage\n    source_vm: myDevTestLabVm\n    linux_os_state: non_deprovisioned\n"
  },
  "azure.azcollection.azure_rm_devtestlabcustomimage_info": {
    "doc": {
      "description": "Get facts of Azure Azure DevTest Lab Custom Image.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "lab_name": {
          "aliases": [],
          "description": "The name of the lab.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the custom image.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "type": "list",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure DevTest Lab Custom Image facts",
      "version_added": "0.1.2"
    },
    "examples": "\n  - name: Get instance of Custom Image\n    azure_rm_devtestlabcustomimage_info:\n      resource_group: myResourceGroup\n      lab_name: myLab\n      name: myImage\n\n  - name: List instances of Custom Image in the lab\n    azure_rm_devtestlabcustomimage_info:\n      resource_group: myResourceGroup\n      lab_name: myLab\n      name: myImage\n"
  },
  "azure.azcollection.azure_rm_devtestlabenvironment": {
    "doc": {
      "description": "Create, update and delete instance of Azure DevTest Lab Environment.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "deployment_parameters": {
          "aliases": [],
          "description": "The parameters of the Azure Resource Manager template.",
          "type": "list",
          "required": false,
          "suboptions": {
            "name": {
              "aliases": [],
              "description": "The name of the template parameter.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "value": {
              "aliases": [],
              "description": "The value of the template parameter.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "deployment_template": {
          "aliases": [],
          "description": "The Azure Resource Manager template's identifier.",
          "type": "raw",
          "required": false,
          "suboptions": {}
        },
        "lab_name": {
          "aliases": [],
          "description": "The name of the lab.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "location": {
          "aliases": [],
          "description": "The location of the resource.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the environment.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Assert the state of the Environment.\nUse C((present) to create or update an Environment and C(absent) to delete it.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "user_name": {
          "aliases": [],
          "description": "The name of the user profile.",
          "type": "str",
          "required": true,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage Azure DevTest Lab Environment instance",
      "version_added": "0.1.2"
    },
    "examples": "\n- name: Create instance of DevTest Lab Environment from public environment repo\n  azure_rm_devtestlabenvironment:\n    resource_group: myResourceGroup\n    lab_name: myLab\n    user_name: user\n    name: myEnvironment\n    location: eastus\n    deployment_template:\n      artifact_source_name: public environment repo\n      name: WebApp\n"
  },
  "azure.azcollection.azure_rm_devtestlabenvironment_info": {
    "doc": {
      "description": "Get facts of Azure Environment.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "lab_name": {
          "aliases": [],
          "description": "The name of the lab.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the environment.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "type": "list",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "user_name": {
          "aliases": [],
          "description": "The name of the user profile.",
          "type": "str",
          "required": true,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure Environment facts",
      "version_added": "0.1.2"
    },
    "examples": "\n  - name: Get instance of Environment\n    azure_rm_devtestlabenvironment_info:\n      resource_group: myResourceGroup\n      lab_name: myLab\n      user_name: myUser\n      name: myEnvironment\n"
  },
  "azure.azcollection.azure_rm_devtestlabpolicy": {
    "doc": {
      "description": "Create, update and delete instance of Azure Policy.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "The description of the policy.",
          "required": false,
          "suboptions": {}
        },
        "fact_name": {
          "aliases": [],
          "description": "The fact name of the policy (e.g. C(lab_vm_count), C(lab_vm_size)), MaxVmsAllowedPerLab, etc.",
          "required": false,
          "choices": [
            "user_owned_lab_vm_count",
            "user_owned_lab_premium_vm_count",
            "lab_vm_count",
            "lab_premium_vm_count",
            "lab_vm_size",
            "gallery_image",
            "user_owned_lab_vm_count_in_subnet",
            "lab_target_cost"
          ],
          "suboptions": {}
        },
        "lab_name": {
          "aliases": [],
          "description": "The name of the lab.",
          "required": true,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the policy.",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "policy_set_name": {
          "aliases": [],
          "description": "The name of the policy set.",
          "required": true,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Assert the state of the Policy.\nUse C(present) to create or update an Policy and C(absent) to delete it.",
          "default": "present",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "threshold": {
          "aliases": [],
          "description": "The threshold of the policy (it could be either a maximum value or a list of allowed values).",
          "type": "raw",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage Azure Policy instance",
      "version_added": "0.1.2"
    },
    "examples": "\n- name: Create DevTest Lab Policy\n  azure_rm_devtestlabpolicy:\n    resource_group: myResourceGroup\n    lab_name: myLab\n    policy_set_name: myPolicySet\n    name: myPolicy\n    fact_name: user_owned_lab_vm_count\n    threshold: 5\n"
  },
  "azure.azcollection.azure_rm_devtestlabpolicy_info": {
    "doc": {
      "description": "Get facts of Azure DTL Policy.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "lab_name": {
          "aliases": [],
          "description": "The name of the lab.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the policy.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "policy_set_name": {
          "aliases": [],
          "description": "The name of the policy set.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "type": "list",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure DTL Policy facts",
      "version_added": "0.1.2"
    },
    "examples": "\n  - name: Get instance of Policy\n    azure_rm_devtestlabpolicy_info:\n      resource_group: myResourceGroup\n      lab_name: myLab\n      policy_set_name: myPolicySet\n      name: myPolicy\n"
  },
  "azure.azcollection.azure_rm_devtestlabschedule": {
    "doc": {
      "description": "Create, update and delete instance of Azure DecTest Lab Schedule.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "lab_name": {
          "aliases": [],
          "description": "The name of the lab.",
          "required": true,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the schedule.",
          "required": true,
          "choices": [
            "lab_vms_startup",
            "lab_vms_shutdown"
          ],
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Assert the state of the Schedule.\nUse C(present) to create or update an Schedule and C(absent) to delete it.",
          "default": "present",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "time": {
          "aliases": [],
          "description": "The time of day the schedule will occur.",
          "required": false,
          "suboptions": {}
        },
        "time_zone_id": {
          "aliases": [],
          "description": "The time zone ID.",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage Azure DevTest Lab Schedule instance",
      "version_added": "0.1.2"
    },
    "examples": "\n  - name: Create (or update) DevTest Lab Schedule\n    azure_rm_devtestlabschedule:\n      resource_group: myResourceGroup\n      lab_name: myLab\n      name: lab_vms_shutdown\n      time: \"1030\"\n      time_zone_id: \"UTC+12\"\n"
  },
  "azure.azcollection.azure_rm_devtestlabschedule_info": {
    "doc": {
      "description": "Get facts of Azure Schedule.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "lab_name": {
          "aliases": [],
          "description": "The name of the lab.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the schedule.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "type": "list",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure Schedule facts",
      "version_added": "0.1.2"
    },
    "examples": "\n  - name: Get instance of Schedule\n    azure_rm_devtestlabschedule_info:\n      resource_group: myResourceGroup\n      lab_name: myLab\n      name: mySchedule\n"
  },
  "azure.azcollection.azure_rm_devtestlabvirtualmachine": {
    "doc": {
      "description": "Create, update and delete instance of Azure DevTest Lab Virtual Machine.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "allow_claim": {
          "aliases": [],
          "description": "Indicates whether another user can take ownership of the virtual machine.",
          "required": false,
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "artifacts": {
          "aliases": [],
          "description": "The artifacts to be installed on the virtual machine.",
          "type": "list",
          "required": false,
          "suboptions": {
            "parameters": {
              "aliases": [],
              "description": "The parameters of the artifact.",
              "type": "list",
              "required": false,
              "suboptions": {
                "name": {
                  "aliases": [],
                  "description": "The name of the artifact parameter.",
                  "required": false,
                  "suboptions": {}
                },
                "value": {
                  "aliases": [],
                  "description": "The value of the artifact parameter.",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "source_name": {
              "aliases": [],
              "description": "The artifact's source name.",
              "required": false,
              "suboptions": {}
            },
            "source_path": {
              "aliases": [],
              "description": "The artifact's path in the source repository.",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "disallow_public_ip_address": {
          "aliases": [],
          "description": "Indicates whether the virtual machine is to be created without a public IP address.",
          "required": false,
          "suboptions": {}
        },
        "expiration_date": {
          "aliases": [],
          "description": "The expiration date for VM.",
          "required": false,
          "suboptions": {}
        },
        "image": {
          "aliases": [],
          "description": "The Microsoft Azure Marketplace image reference of the virtual machine.",
          "required": false,
          "suboptions": {
            "offer": {
              "aliases": [],
              "description": "The offer of the gallery image.",
              "required": false,
              "suboptions": {}
            },
            "os_type": {
              "aliases": [],
              "description": "The OS type of the gallery image.",
              "required": false,
              "suboptions": {}
            },
            "publisher": {
              "aliases": [],
              "description": "The publisher of the gallery image.",
              "required": false,
              "suboptions": {}
            },
            "sku": {
              "aliases": [],
              "description": "The SKU of the gallery image.",
              "required": false,
              "suboptions": {}
            },
            "version": {
              "aliases": [],
              "description": "The version of the gallery image.",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "lab_name": {
          "aliases": [],
          "description": "The name of the lab.",
          "required": true,
          "suboptions": {}
        },
        "lab_subnet": {
          "aliases": [],
          "description": "An existing subnet within lab's virtual network.\nIt can be the subnet's resource id.\nIt can be a dict which contains C(virtual_network_name) and C(name).",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the virtual machine.",
          "required": true,
          "suboptions": {}
        },
        "notes": {
          "aliases": [],
          "description": "The notes of the virtual machine.",
          "required": false,
          "suboptions": {}
        },
        "os_type": {
          "aliases": [],
          "description": "Base type of operating system.",
          "required": false,
          "choices": [
            "windows",
            "linux"
          ],
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "The password of the virtual machine administrator.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ssh_key": {
          "aliases": [],
          "description": "The SSH key of the virtual machine administrator.",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Assert the state of the Virtual Machine.\nUse C(present) to create or update an Virtual Machine and C(absent) to delete it.",
          "default": "present",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "storage_type": {
          "aliases": [],
          "description": "Storage type to use for virtual machine.",
          "required": false,
          "choices": [
            "standard",
            "premium"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "user_name": {
          "aliases": [],
          "description": "The user name of the virtual machine.",
          "required": false,
          "suboptions": {}
        },
        "vm_size": {
          "aliases": [],
          "description": "A valid Azure VM size value. For example, C(Standard_D4).\nThe list of choices varies depending on the subscription and location. Check your subscription for available choices.\nAvailable values can be found on this website, link U(https://docs.microsoft.com/en-us/azure/virtual-machines/windows/sizes-general).\nRequired when I(state=present).",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage Azure DevTest Lab Virtual Machine instance",
      "version_added": "0.1.2"
    },
    "examples": "\n  - name: Create (or update) Virtual Machine\n    azure_rm_devtestlabvirtualmachine:\n      resource_group: myrg\n      lab_name: mylab\n      name: myvm\n      notes: Virtual machine notes....\n      os_type: linux\n      vm_size: Standard_A2_v2\n      user_name: vmadmin\n      password: ZSuppas$$21!\n      lab_subnet:\n        name: myvnSubnet\n        virtual_network_name: myvn\n      disallow_public_ip_address: no\n      image:\n        offer: UbuntuServer\n        publisher: Canonical\n        sku: 16.04-LTS\n        os_type: Linux\n        version: latest\n      artifacts:\n        - source_name: myartifact\n          source_path: \"/Artifacts/linux-install-mongodb\"\n      allow_claim: no\n      expiration_date: \"2019-02-22T01:49:12.117974Z\"\n"
  },
  "azure.azcollection.azure_rm_devtestlabvirtualmachine_info": {
    "doc": {
      "description": "Get facts of Azure DevTest Lab Virtual Machine.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "lab_name": {
          "aliases": [],
          "description": "The name of the lab.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the virtual machine.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "type": "list",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure DevTest Lab Virtual Machine facts",
      "version_added": "0.1.2"
    },
    "examples": "\n  - name: Get instance of DTL Virtual Machine\n    azure_rm_devtestlabvirtualmachine_info:\n      resource_group: myResourceGroup\n      lab_name: myLab\n      name: myVm\n"
  },
  "azure.azcollection.azure_rm_devtestlabvirtualnetwork": {
    "doc": {
      "description": "Create, update and delete instance of Azure DevTest Lab Virtual Network.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "The description of the virtual network.",
          "required": false,
          "suboptions": {}
        },
        "lab_name": {
          "aliases": [],
          "description": "The name of the lab.",
          "required": true,
          "suboptions": {}
        },
        "location": {
          "aliases": [],
          "description": "The location of the resource.",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the virtual network.",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Assert the state of the Virtual Network.\nUse C(present) to create or update an Virtual Network and C(absent) to delete it.",
          "default": "present",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage Azure DevTest Lab Virtual Network instance",
      "version_added": "0.1.2"
    },
    "examples": "\n  - name: Create (or update) Virtual Network\n    azure_rm_devtestlabvirtualnetwork:\n      resource_group: myResourceGroup\n      lab_name: mylab\n      name: myvn\n      description: My Lab Virtual Network\n"
  },
  "azure.azcollection.azure_rm_devtestlabvirtualnetwork_info": {
    "doc": {
      "description": "Get facts of Azure DevTest Lab Virtual Network.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "lab_name": {
          "aliases": [],
          "description": "The name of DevTest Lab.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of DevTest Lab Virtual Network.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure DevTest Lab Virtual Network facts",
      "version_added": "0.1.2"
    },
    "examples": "\n  - name: Get instance of DevTest Lab Virtual Network\n    azure_rm_devtestlabvirtualnetwork_info:\n      resource_group: myResourceGroup\n      lab_name: myLab\n      name: myVirtualNetwork\n\n  - name: List all Virtual Networks in DevTest Lab\n    azure_rm_devtestlabvirtualnetwork_info:\n      resource_group: myResourceGroup\n      lab_name: myLab\n      name: myVirtualNetwork\n"
  },
  "azure.azcollection.azure_rm_diskencryptionset": {
    "doc": {
      "description": "Creates, deletes, and updates Disk encryption set.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "key_url": {
          "aliases": [],
          "description": "The url pointing to the encryption key to be used for disk encryption set.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "location": {
          "aliases": [],
          "description": "Location for Disk encryption set. Defaults to location of resource group if not specified.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the disk encryption set.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of resource group.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "source_vault": {
          "aliases": [],
          "description": "The name of source key vault containing encryption key.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Assert the state of the disk encryption set. Use C(present) to create or update and C(absent) to delete.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Create, delete and update Disk encryption set",
      "version_added": "1.9.0"
    },
    "examples": "\n- name: create disk encryption set\n  azure_rm_diskencryptionset:\n    resource_group: myResourceGroup\n    name: mydiskencryptionset\n    source_vault: myvault\n    key_url: https://myvault.vault.azure.net/keys/Key1/e65090b268ec4c3ba1a0f7a473005768\n    state: present\n\n- name: Update disk encryption set\n  azure_rm_diskencryptionset:\n    resource_group: myResourceGroup\n    name: mydiskencryptionset\n    source_vault: myvault\n    key_url: https://myvault.vault.azure.net/keys/Key1/e65090b268ec4c3ba1a0f7a473005768\n    state: present\n    tags:\n      key1: \"value1\"\n\n- name: Delete disk encryption set\n  azure_rm_diskencryptionset:\n    resource_group: myResourceGroup\n    name: mydiskencryptionset\n    state: absent\n"
  },
  "azure.azcollection.azure_rm_diskencryptionset_info": {
    "doc": {
      "description": "Get facts for specific disk encryption set or all sets in a given resource group.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the disk encryption set.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Name of the resource group.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit the results by providing resource tags.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get disk encryption set facts",
      "version_added": "1.9.0"
    },
    "examples": "\n- name: Get facts for one disk encryption set\n  azure_rm_diskencryptionset_info:\n    resource_group: myResourceGroup\n    name: mydiskencryptionset\n\n- name: Get facts for all disk encryption sets in resource group\n  azure_rm_diskencryptionset_info:\n    resource_group: myResourceGroup\n"
  },
  "azure.azcollection.azure_rm_dnsrecordset": {
    "doc": {
      "description": "Creates, deletes, and updates DNS records sets and records within an existing Azure DNS Zone.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "record_mode": {
          "aliases": [],
          "description": "Whether existing record values not sent to the module should be purged.",
          "default": "purge",
          "required": false,
          "choices": [
            "append",
            "purge"
          ],
          "suboptions": {}
        },
        "record_type": {
          "aliases": [],
          "description": "The type of record set to create or delete.",
          "required": true,
          "choices": [
            "A",
            "AAAA",
            "CNAME",
            "MX",
            "NS",
            "SRV",
            "TXT",
            "PTR",
            "CAA",
            "SOA"
          ],
          "suboptions": {}
        },
        "records": {
          "aliases": [],
          "description": "List of records to be created depending on the type of record (set).",
          "required": false,
          "suboptions": {
            "entry": {
              "aliases": [],
              "description": "Primary data value for all record types.",
              "required": false,
              "suboptions": {}
            },
            "port": {
              "aliases": [],
              "description": "Used for creating an C(SRV) record set/records.",
              "required": false,
              "suboptions": {}
            },
            "preference": {
              "aliases": [],
              "description": "Used for creating an C(MX) record set/records.",
              "required": false,
              "suboptions": {}
            },
            "priority": {
              "aliases": [],
              "description": "Used for creating an C(SRV) record set/records.",
              "required": false,
              "suboptions": {}
            },
            "weight": {
              "aliases": [],
              "description": "Used for creating an C(SRV) record set/records.",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "relative_name": {
          "aliases": [],
          "description": "Relative name of the record set.",
          "required": true,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Name of resource group.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Assert the state of the record set. Use C(present) to create or update and C(absent) to delete.",
          "default": "present",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "time_to_live": {
          "aliases": [],
          "description": "Time to live of the record set in seconds.",
          "default": "3600",
          "required": false,
          "suboptions": {}
        },
        "zone_name": {
          "aliases": [],
          "description": "Name of the existing DNS zone in which to manage the record set.",
          "required": true,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Create, delete and update DNS record sets and records",
      "version_added": "0.1.0"
    },
    "examples": "\n\n- name: ensure an \"A\" record set with multiple records\n  azure_rm_dnsrecordset:\n    resource_group: myResourceGroup\n    relative_name: www\n    zone_name: testing.com\n    record_type: A\n    records:\n      - entry: 192.168.100.101\n      - entry: 192.168.100.102\n      - entry: 192.168.100.103\n\n- name: delete a record set\n  azure_rm_dnsrecordset:\n    resource_group: myResourceGroup\n    record_type: A\n    relative_name: www\n    zone_name: testing.com\n    state: absent\n\n- name: create multiple \"A\" record sets with multiple records\n  azure_rm_dnsrecordset:\n    resource_group: myResourceGroup\n    zone_name: testing.com\n    relative_name: \"{{ item.name }}\"\n    record_type: \"{{ item.type }}\"\n    records: \"{{ item.records }}\"\n  with_items:\n    - { name: 'servera', type: 'A', records: [ { entry: '10.10.10.20' }, { entry: '10.10.10.21' }] }\n    - { name: 'serverb', type: 'A', records: [ { entry: '10.10.10.30' }, { entry: '10.10.10.41' }] }\n    - { name: 'serverc', type: 'A', records: [ { entry: '10.10.10.40' }, { entry: '10.10.10.41' }] }\n\n- name: create SRV records in a new record set\n  azure_rm_dnsrecordset:\n    resource_group: myResourceGroup\n    relative_name: _sip._tcp.testing.com\n    zone_name: testing.com\n    time_to_live: 7200\n    record_type: SRV\n    records:\n    - entry: sip.testing.com\n      preference: 10\n      priority: 20\n      weight: 10\n      port: 5060\n\n- name: create PTR record in a new record set\n  azure_rm_dnsrecordset:\n    resource_group: myResourceGroup\n    relative_name: 192.168.100.101.in-addr.arpa\n    zone_name: testing.com\n    record_type: PTR\n    records:\n    - entry: servera.testing.com\n\n- name: create TXT record in a new record set\n  azure_rm_dnsrecordset:\n    resource_group: myResourceGroup\n    relative_name: mail.testing.com\n    zone_name: testing.com\n    record_type: TXT\n    records:\n    - entry: 'v=spf1 a -all'\n\n"
  },
  "azure.azcollection.azure_rm_dnsrecordset_info": {
    "doc": {
      "description": "Get facts for a specific DNS Record Set in a Zone, or a specific type in all Zones or in one Zone etc.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "record_type": {
          "aliases": [],
          "description": "Limit record sets by record type.",
          "required": false,
          "suboptions": {}
        },
        "relative_name": {
          "aliases": [],
          "description": "Only show results for a Record Set.",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Limit results by resource group. Required when filtering by name or type.",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "top": {
          "aliases": [],
          "description": "Limit the maximum number of record sets to return.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "zone_name": {
          "aliases": [],
          "description": "Limit results by zones. Required when filtering by name or type.",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get DNS Record Set facts",
      "version_added": "0.1.2"
    },
    "examples": "\n- name: Get facts for one Record Set\n  azure_rm_dnsrecordset_info:\n    resource_group: myResourceGroup\n    zone_name: example.com\n    relative_name: server10\n    record_type: A\n- name: Get facts for all Type A Record Sets in a Zone\n  azure_rm_dnsrecordset_info:\n    resource_group: myResourceGroup\n    zone_name: example.com\n    record_type: A\n- name: Get all record sets in one zone\n  azure_rm_dnsrecordset_info:\n    resource_group: myResourceGroup\n    zone_name: example.com\n"
  },
  "azure.azcollection.azure_rm_dnszone": {
    "doc": {
      "description": "Creates and deletes Azure DNS zones.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the DNS zone.",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "registration_virtual_networks": {
          "aliases": [],
          "description": "A list of references to virtual networks that register hostnames in this DNS zone.\nThis is a only when I(type=private).\nEach element can be the name or resource id, or a dict contains C(name), C(resource_group) information of the virtual network.",
          "type": "list",
          "required": false,
          "suboptions": {}
        },
        "resolution_virtual_networks": {
          "aliases": [],
          "description": "A list of references to virtual networks that resolve records in this DNS zone.\nThis is a only when I(type=private).\nEach element can be the name or resource id, or a dict contains C(name), C(resource_group) information of the virtual network.",
          "type": "list",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "name of resource group.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Assert the state of the zone. Use C(present) to create or update and C(absent) to delete.",
          "default": "present",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "type": {
          "aliases": [],
          "description": "The type of this DNS zone (C(public) or C(private)).",
          "required": false,
          "choices": [
            "public",
            "private"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage Azure DNS zones",
      "version_added": "0.1.0"
    },
    "examples": "\n\n- name: Create a DNS zone\n  azure_rm_dnszone:\n    resource_group: myResourceGroup\n    name: example.com\n\n- name: Delete a DNS zone\n  azure_rm_dnszone:\n    resource_group: myResourceGroup\n    name: example.com\n    state: absent\n\n"
  },
  "azure.azcollection.azure_rm_dnszone_info": {
    "doc": {
      "description": "Get facts for a specific DNS zone or all DNS zones within a resource group.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Only show results for a specific zone.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Limit results by resource group. Required when filtering by name.",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get DNS zone facts",
      "version_added": "0.1.2"
    },
    "examples": "\n- name: Get facts for one zone\n  azure_rm_dnszone_info:\n    resource_group: myResourceGroup\n    name: foobar22\n\n- name: Get facts for all zones in a resource group\n  azure_rm_dnszone_info:\n    resource_group: myResourceGroup\n\n- name: Get facts by tags\n  azure_rm_dnszone_info:\n    tags:\n      - testing\n"
  },
  "azure.azcollection.azure_rm_eventhub": {
    "doc": {
      "description": "Create, update and delete instance of Event Hub.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "location": {
          "aliases": [],
          "description": "Resource location. If not set, location from the resource group will be used as default.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "message_retention_in_days": {
          "aliases": [],
          "description": "Number of days to retain the events for this Event Hub.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Unique name of the Event Hub.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "namespace_name": {
          "aliases": [],
          "description": "Name of the namespace in which to create event hub.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "partition_count": {
          "aliases": [],
          "description": "Number of partitions created for the Event Hub.\nRange from 1 to 32.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Name of the resource group to which the resource belongs.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "sku": {
          "aliases": [],
          "description": "The name of the SKU.\nPlease see L(https://azure.microsoft.com/en-in/pricing/details/event-hubs/).",
          "default": "Basic",
          "type": "str",
          "required": false,
          "choices": [
            "Basic",
            "Standard"
          ],
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Assert the state of the Event Hub.\nUse C(present) to create or update an event hub and C(absent) to delete it.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "status": {
          "aliases": [],
          "description": "Enumerates the possible values for the status of the Event hub.",
          "default": "Active",
          "type": "str",
          "required": false,
          "choices": [
            "Active",
            "Disabled",
            "Restoring",
            "SendDisabled",
            "ReceiveDisabled",
            "Creating",
            "Deleting",
            "Renaming",
            "Unknown"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage Event Hub",
      "version_added": "1.6.0"
    },
    "examples": "\n\n- name: \"Create Event Hub\"\n  azure_rm_eventhub:\n    resource_group: testgroupans\n    location: eastus\n    namespace_name: myNamespace\n    name: myhub\n    tags:\n       - a: b\n    sku: free\n\n- name: Delete Event Hub\n  azure_rm_eventhub:\n    resource_group: testgroupans\n    name: myNamespace\n    state: absent\n\n- name: \"Create Event Hub Namespace\"\n  azure_rm_eventhub:\n    resource_group: testgroupans\n    location: eastus\n    namespace_name: myNamespace\n    tags:\n      a: b\n    sku: free\n\n- name: Delete Event Hub Namespace\n  azure_rm_eventhub:\n    resource_group: testgroupans\n    namespace_name: myNamespace\n    state: absent\n\n"
  },
  "azure.azcollection.azure_rm_eventhub_info": {
    "doc": {
      "description": "Get facts of Azure Event Hub.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the Event hub.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "namespace_name": {
          "aliases": [],
          "description": "The name of the namspace.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure Event Hub",
      "version_added": "1.6.0"
    },
    "examples": "\n  - name: Get facts of specific Event hub\n    community.azure.azure_rm_eventhub_info:\n      resource_group: myResourceGroup\n      name: myEventHub\n"
  },
  "azure.azcollection.azure_rm_expressroute": {
    "doc": {
      "description": "Create, update and delete instance of Express Route.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "allow_classic_operations": {
          "aliases": [],
          "description": "Support for classic operations.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "authorizations": {
          "aliases": [],
          "description": "The list of authorizations.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "name": {
              "aliases": [],
              "description": "Name of the authorization.",
              "type": "str",
              "required": true,
              "suboptions": {}
            }
          }
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "global_reach_enabled": {
          "aliases": [],
          "description": "Flag denoting global reach status.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "location": {
          "aliases": [],
          "description": "Resource location. If not set, location from the resource group will be used as default.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Unique name of the app service plan to create or update.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Name of the resource group to which the resource belongs.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_provider_properties": {
          "aliases": [],
          "description": "The service Provider properties",
          "type": "dict",
          "required": false,
          "suboptions": {
            "bandwidth_in_mbps": {
              "aliases": [],
              "description": "The bandwidth of the circuit when the circuit is provisioned on an ExpressRoutePort resource.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "peering_location": {
              "aliases": [],
              "description": "The peering location",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "service_provider_name": {
              "aliases": [],
              "description": "Name of service provider",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "sku": {
          "aliases": [],
          "description": "The name of the SKU.\nPlease see L(https://azure.microsoft.com/en-in/pricing/details/expressroute/)\nRequired sku when I(state=present).",
          "type": "dict",
          "required": false,
          "suboptions": {
            "family": {
              "aliases": [],
              "description": "the family of the SKU",
              "type": "str",
              "required": true,
              "choices": [
                "metereddata",
                "unlimiteddata"
              ],
              "suboptions": {}
            },
            "tier": {
              "aliases": [],
              "description": "The tier of the SKU",
              "type": "str",
              "required": true,
              "choices": [
                "standard",
                "premium"
              ],
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "Assert the state of the express route.\nUse C(present) to create or update an express route and C(absent) to delete it.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage Express Route Circuits",
      "version_added": "1.7.0"
    },
    "examples": "\n- name: \"Create Express route\"\n  azure_rm_expressroute:\n    resource_group: rg\n    location: eastus\n    name: exp\n    allow_classic_operations: true\n    global_reach_enabled: false\n    tags:\n       - a: b\n    authorizations:\n       - name: authorization_test\n    service_provider_properties:\n      service_provider_name: Aryaka Networks\n      peering_location: Seattle\n      bandwidth_in_mbps: '200'\n    sku:\n      tier: premium\n      family: metereddata\n\n- name: Delete Express route\n  azure_rm_expressroute:\n    resource_group: rg\n    name: exp\n    state: absent\n\n"
  },
  "azure.azcollection.azure_rm_expressroute_info": {
    "doc": {
      "description": "Get facts of Azure Express Route.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the express route.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure Express Route",
      "version_added": "1.7.0"
    },
    "examples": "\n  - name: Get facts of specific expressroute\n    community.azure.azure_rm_expressroute_info:\n      resource_group: myResourceGroup\n      name: myExpressRoute\n\n"
  },
  "azure.azcollection.azure_rm_functionapp": {
    "doc": {
      "description": "Create, update or delete an Azure Function App.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "app_settings": {
          "aliases": [],
          "description": "Dictionary containing application settings.",
          "required": false,
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "container_settings": {
          "aliases": [],
          "description": "Web app container settings.",
          "required": false,
          "suboptions": {
            "name": {
              "aliases": [],
              "description": "Name of container. For example \"imagename:tag\".",
              "required": false,
              "suboptions": {}
            },
            "registry_server_password": {
              "aliases": [],
              "description": "The container registry server password.",
              "required": false,
              "suboptions": {}
            },
            "registry_server_url": {
              "aliases": [],
              "description": "Container registry server url. For example C(mydockerregistry.io).",
              "required": false,
              "suboptions": {}
            },
            "registry_server_user": {
              "aliases": [],
              "description": "The container registry server user name.",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "location": {
          "aliases": [],
          "description": "Valid Azure location. Defaults to location of the resource group.",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the Azure Function App.",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "plan": {
          "aliases": [],
          "description": "App service plan.\nIt can be name of existing app service plan in same resource group as function app.\nIt can be resource id of existing app service plan.\nResource id. For example /subscriptions/<subs_id>/resourceGroups/<resource_group>/providers/Microsoft.Web/serverFarms/<plan_name>.\nIt can be a dict which contains C(name), C(resource_group).\nC(name). Name of app service plan.\nC(resource_group). Resource group name of app service plan.",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [
            "resource_group_name"
          ],
          "description": "Name of resource group.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Assert the state of the Function App. Use C(present) to create or update a Function App and C(absent) to delete.",
          "default": "present",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "storage_account": {
          "aliases": [
            "storage",
            "storage_account_name"
          ],
          "description": "Name of the storage account to use.",
          "required": true,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage Azure Function Apps",
      "version_added": "0.1.2"
    },
    "examples": "\n- name: Create a function app\n  azure_rm_functionapp:\n    resource_group: myResourceGroup\n    name: myFunctionApp\n    storage_account: myStorageAccount\n\n- name: Create a function app with app settings\n  azure_rm_functionapp:\n    resource_group: myResourceGroup\n    name: myFunctionApp\n    storage_account: myStorageAccount\n    app_settings:\n      setting1: value1\n      setting2: value2\n\n- name: Create container based function app\n  azure_rm_functionapp:\n    resource_group: myResourceGroup\n    name: myFunctionApp\n    storage_account: myStorageAccount\n    plan:\n      resource_group: myResourceGroup\n      name: myAppPlan\n    container_settings:\n      name: httpd\n      registry_server_url: index.docker.io\n\n- name: Delete a function app\n  azure_rm_functionapp:\n    resource_group: myResourceGroup\n    name: myFunctionApp\n    state: absent\n"
  },
  "azure.azcollection.azure_rm_functionapp_info": {
    "doc": {
      "description": "Get facts for one Azure Function App or all Function Apps within a resource group.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Only show results for a specific Function App.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [
            "resource_group_name"
          ],
          "description": "Limit results to a resource group. Required when filtering by name.",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure Function App facts",
      "version_added": "0.1.2"
    },
    "examples": "\n    - name: Get facts for one Function App\n      azure_rm_functionapp_info:\n        resource_group: myResourceGroup\n        name: myfunctionapp\n\n    - name: Get facts for all Function Apps in a resource group\n      azure_rm_functionapp_info:\n        resource_group: myResourceGroup\n\n    - name: Get facts for all Function Apps by tags\n      azure_rm_functionapp_info:\n        tags:\n          - testing\n"
  },
  "azure.azcollection.azure_rm_gallery": {
    "doc": {
      "description": "Create, update and delete instance of Azure Shared Image Gallery (SIG).",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "The description of this Shared Image Gallery resource. This property is updatable.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "location": {
          "aliases": [],
          "description": "Resource location.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the Shared Image Gallery.\nValid names consist of less than 80 alphanumeric characters, underscores and periods.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Assert the state of the Gallery.\nUse C(present) to create or update an Gallery and C(absent) to delete it.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage Azure Shared Image Gallery instance",
      "version_added": "0.1.2"
    },
    "examples": "\n- name: Create or update a simple gallery.\n  azure_rm_gallery:\n    resource_group: myResourceGroup\n    name: myGallery1283\n    location: West US\n    description: This is the gallery description.\n"
  },
  "azure.azcollection.azure_rm_gallery_info": {
    "doc": {
      "description": "Get info of Azure Shared Image Gallery.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Resource name",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure Shared Image Gallery info",
      "version_added": "0.1.2"
    },
    "examples": "\n- name: List galleries in a subscription.\n  azure_rm_gallery_info:\n- name: List galleries in a resource group.\n  azure_rm_gallery_info:\n    resource_group: myResourceGroup\n- name: Get a gallery.\n  azure_rm_gallery_info:\n    resource_group: myResourceGroup\n    name: myGallery\n\n"
  },
  "azure.azcollection.azure_rm_galleryimage": {
    "doc": {
      "description": "Create, update and delete instance of Azure SIG Image.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "The description of this gallery Image Definition resource. This property is updatable.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "disallowed": {
          "aliases": [],
          "description": "Disallowed parameter values.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "disk_types": {
              "aliases": [],
              "description": "A list of disallowed disk types.",
              "type": "list",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "end_of_life_date": {
          "aliases": [],
          "description": "The end of life date of the gallery Image Definition.\nThis property can be used for decommissioning purposes.\nThis property is updatable.\nFormat should be according to ISO-8601, for instance \"2019-06-26\".",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "eula": {
          "aliases": [],
          "description": "The Eula agreement for the gallery Image Definition.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "gallery_name": {
          "aliases": [],
          "description": "The name of the Shared Image Gallery in which the Image Definition is to be created.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "identifier": {
          "aliases": [],
          "description": "Image identifier.",
          "type": "dict",
          "required": true,
          "suboptions": {
            "offer": {
              "aliases": [],
              "description": "The name of the gallery Image Definition offer.",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "publisher": {
              "aliases": [],
              "description": "The name of the gallery Image Definition publisher.",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "sku": {
              "aliases": [],
              "description": "The name of the gallery Image Definition SKU.",
              "type": "str",
              "required": true,
              "suboptions": {}
            }
          }
        },
        "location": {
          "aliases": [],
          "description": "Resource location.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the gallery Image Definition to be created or updated.\nThe allowed characters are alphabets and numbers with dots, dashes, and periods allowed in the middle.\nThe maximum length is 80 characters.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "os_state": {
          "aliases": [],
          "description": "The allowed values for OS State are C(generalized).",
          "type": "str",
          "required": true,
          "choices": [
            "generalized",
            "specialized"
          ],
          "suboptions": {}
        },
        "os_type": {
          "aliases": [],
          "description": "This property allows you to specify the type of the OS that is included in the disk when creating a VM from a managed image.",
          "type": "str",
          "required": true,
          "choices": [
            "windows",
            "linux"
          ],
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "privacy_statement_uri": {
          "aliases": [],
          "description": "The privacy statement uri.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "purchase_plan": {
          "aliases": [],
          "description": "Purchase plan.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "name": {
              "aliases": [],
              "description": "The plan ID.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "product": {
              "aliases": [],
              "description": "The product ID.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "publisher": {
              "aliases": [],
              "description": "The publisher ID.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "recommended": {
          "aliases": [],
          "description": "Recommended parameter values.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "memory": {
              "aliases": [],
              "description": "Memory.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "max": {
                  "aliases": [],
                  "description": "The maximum number of the resource.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "min": {
                  "aliases": [],
                  "description": "The minimum number of the resource.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "v_cpus": {
              "aliases": [],
              "description": "Number of virtual CPUs.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "max": {
                  "aliases": [],
                  "description": "The maximum number of the resource.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "min": {
                  "aliases": [],
                  "description": "The minimum number of the resource.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                }
              }
            }
          }
        },
        "release_note_uri": {
          "aliases": [],
          "description": "The release note uri.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Assert the state of the GalleryImage.\nUse C(present) to create or update an GalleryImage and C(absent) to delete it.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage Azure SIG Image instance",
      "version_added": "0.1.2"
    },
    "examples": "\n- name: Create or update gallery image\n  azure_rm_galleryimage:\n    resource_group: myResourceGroup\n    gallery_name: myGallery1283\n    name: myImage\n    location: West US\n    os_type: linux\n    os_state: generalized\n    identifier:\n      publisher: myPublisherName\n      offer: myOfferName\n      sku: mySkuName\n"
  },
  "azure.azcollection.azure_rm_galleryimage_info": {
    "doc": {
      "description": "Get info of Azure SIG Image.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "gallery_name": {
          "aliases": [],
          "description": "The name of the shared image gallery from which the image definitions are to be retrieved.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Resource name.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure SIG Image info",
      "version_added": "0.1.2"
    },
    "examples": "\n- name: List gallery images in a gallery.\n  azure_rm_galleryimage_info:\n    resource_group: myResourceGroup\n    gallery_name: myGallery\n- name: Get a gallery image.\n  azure_rm_galleryimage_info:\n    resource_group: myResourceGroup\n    gallery_name: myGallery\n    name: myImage\n\n"
  },
  "azure.azcollection.azure_rm_galleryimageversion": {
    "doc": {
      "description": "Create, update and delete instance of Azure SIG Image Version.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "gallery_image_name": {
          "aliases": [],
          "description": "The name of the gallery Image Definition in which the Image Version is to be created.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "gallery_name": {
          "aliases": [],
          "description": "The name of the Shared Image Gallery in which the Image Definition resides.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "location": {
          "aliases": [],
          "description": "Resource location.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the gallery Image Version to be created.\nNeeds to follow semantic version name pattern, The allowed characters are digit and period.\nDigits must be within the range of a 32-bit integer. For example <MajorVersion>.<MinorVersion>.<Patch>.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "publishing_profile": {
          "aliases": [],
          "description": "Publishing profile.",
          "type": "dict",
          "required": true,
          "suboptions": {
            "end_of_life_date": {
              "aliases": [],
              "description": "The end of life date of the gallery Image Version.\nThis property can be used for decommissioning purposes.\nThis property is updatable. Format should be according to ISO-8601, for instance \"2019-06-26\".",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "exclude_from_latest": {
              "aliases": [],
              "description": "If I(exclude_from_latest=true), Virtual Machines deployed from the latest version of the Image Definition won't use this Image Version.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "managed_image": {
              "aliases": [],
              "description": "Managed image reference, could be resource ID, or dictionary containing I(resource_group) and I(name)\nObsolete since 2.10, use storage_profile instead",
              "required": false,
              "suboptions": {}
            },
            "replica_count": {
              "aliases": [],
              "description": "The number of replicas of the Image Version to be created per region.\nThis property would take effect for a region when regionalReplicaCount is not specified.\nThis property is updatable.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "snapshot": {
              "aliases": [],
              "description": "Source snapshot to be used.\nObsolete since 2.10, use storage_profile instead",
              "required": false,
              "suboptions": {}
            },
            "storage_account_type": {
              "aliases": [],
              "description": "Specifies the storage account type to be used to store the image.\nThis property is not updatable.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "target_regions": {
              "aliases": [],
              "description": "The target regions where the Image Version is going to be replicated to.\nThis property is updatable.",
              "type": "list",
              "required": false,
              "suboptions": {
                "name": {
                  "aliases": [],
                  "description": "Region name.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "regional_replica_count": {
                  "aliases": [],
                  "description": "The number of replicas of the Image Version to be created per region.\nThis property would take effect for a region when regionalReplicaCount is not specified.\nThis property is updatable.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "storage_account_type": {
                  "aliases": [],
                  "description": "Storage account type.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            }
          }
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Assert the state of the GalleryImageVersion.\nUse C(present) to create or update an GalleryImageVersion and C(absent) to delete it.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "storage_profile": {
          "aliases": [],
          "description": "Storage profile",
          "type": "dict",
          "required": true,
          "suboptions": {
            "data_disks": {
              "aliases": [],
              "description": "list of data disk snapshot\nMutual exclusive with source_image",
              "type": "list",
              "required": false,
              "suboptions": {
                "host_caching": {
                  "aliases": [],
                  "description": "host disk caching",
                  "default": "None",
                  "type": "str",
                  "required": false,
                  "choices": [
                    "None",
                    "ReadOnly",
                    "ReadWrite"
                  ],
                  "suboptions": {}
                },
                "lun": {
                  "aliases": [],
                  "description": "lun of the data disk",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "source": {
                  "aliases": [],
                  "description": "Reference to data disk snapshot. Could be resource ID or dictionary containing I(resource_group) and I(name)",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "os_disk": {
              "aliases": [],
              "description": "os disk snapshot\nMutual exclusive with source_image",
              "type": "raw",
              "required": false,
              "suboptions": {
                "host_caching": {
                  "aliases": [],
                  "description": "host disk caching",
                  "default": "None",
                  "type": "str",
                  "required": false,
                  "choices": [
                    "None",
                    "ReadOnly",
                    "ReadWrite"
                  ],
                  "suboptions": {}
                },
                "source": {
                  "aliases": [],
                  "description": "Reference to os disk snapshot. Could be resource ID or dictionary containing I(resource_group) and I(name)",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "source_image": {
              "aliases": [],
              "description": "Reference to managed image or gallery image version\nCould be resource ID to managed image, or dictionary containing I(resource_group) and I(name)\nCould be resource ID to image version, or dictionary containing I(resource_group),I(gallery_name), I(gallery_image_name) and I(version)\nMutual exclusive with os_disk and data_disks",
              "type": "raw",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage Azure SIG Image Version instance",
      "version_added": "0.1.2"
    },
    "examples": "\n- name: Create a gallery image version form a managed image\n  azure_rm_galleryimageversion:\n    resource_group: myResourceGroup\n    gallery_name: myGallery\n    gallery_image_name: myGalleryImage\n    name: 1.1.0\n    location: East US\n    publishing_profile:\n      end_of_life_date: \"2020-10-01t00:00:00+00:00\"\n      exclude_from_latest: yes\n      replica_count: 4\n      storage_account_type: Standard_LRS\n      target_regions:\n        - name: West US\n          regional_replica_count: 1\n        - name: East US\n          regional_replica_count: 3\n          storage_account_type: Standard_LRS\n    storage_profile:\n        source_image: /subscriptions/sub123/resourceGroups/group123/providers/Microsoft.Compute/images/myOsImage\n\n- name: Create a gallery image version from another gallery image version\n  azure_rm_galleryimageversion:\n    resource_group: myResourceGroup\n    gallery_name: myGallery\n    gallery_image_name: myGalleryImage\n    name: 1.2.0\n    location: East US\n    publishing_profile:\n      end_of_life_date: \"2020-10-01t00:00:00+00:00\"\n      exclude_from_latest: yes\n      replica_count: 4\n      storage_account_type: Standard_LRS\n      target_regions:\n        - name: West US\n          regional_replica_count: 1\n        - name: East US\n          regional_replica_count: 3\n          storage_account_type: Standard_LRS\n    storage_profile:\n        source_image:\n            version: 1.1.0\n            gallery_name: myGallery2\n            gallery_image_name: myGalleryImage2\n\n- name: Create gallery image by using one os dist snapshot and zero or many data disk snapshots\n  azure_rm_galleryimageversion:\n    resource_group: myRsourceGroup\n    gallery_name: myGallery\n    gallery_image_name: myGalleryImage\n    name: 3.4.0\n    location: East  US\n    publishing_profile:\n      end_of_life_date: \"2020-10-01t00:00:00+00:00\"\n      exclude_from_latest: yes\n      replica_count: 1\n      storage_account_type: Standard_LRS\n      target_regions:\n        - name: East US\n          regional_replica_count: 1\n          storage_account_type: Standard_LRS\n    storage_profile:\n      os_disk:\n          source: \"/subscriptions/mySub/resourceGroups/myGroup/providers/Microsoft.Compute/snapshots/os_snapshot_vma\"\n      data_disks:\n          - lun: 0\n            source:\n              name: data_snapshot_vma\n          - lun: 1\n            source: \"/subscriptions/mySub/resourceGroups/myGroup/providers/Microsoft.Compute/snapshots/data_snapshot_vmb\"\n"
  },
  "azure.azcollection.azure_rm_galleryimageversion_info": {
    "doc": {
      "description": "Get info of Azure SIG Image Version.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "gallery_image_name": {
          "aliases": [],
          "description": "The name of the gallery Image Definition in which the Image Version resides.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "gallery_name": {
          "aliases": [],
          "description": "The name of the Shared Image Gallery in which the Image Definition resides.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Resource name.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure SIG Image Version info",
      "version_added": "0.1.2"
    },
    "examples": "\n- name: List gallery image versions in a gallery image definition.\n  azure_rm_galleryimageversion_info:\n    resource_group: myResourceGroup\n    gallery_name: myGallery\n    gallery_image_name: myImage\n- name: Get a gallery image version.\n  azure_rm_galleryimageversion_info:\n    resource_group: myResourceGroup\n    gallery_name: myGallery\n    gallery_image_name: myImage\n    name: myVersion\n\n"
  },
  "azure.azcollection.azure_rm_hdinsightcluster": {
    "doc": {
      "description": "Create, update and delete instance of Azure HDInsight Cluster.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cluster_definition": {
          "aliases": [],
          "description": "The cluster definition.",
          "required": false,
          "suboptions": {
            "gateway_rest_password": {
              "aliases": [],
              "description": "Gateway REST password.",
              "required": false,
              "suboptions": {}
            },
            "gateway_rest_username": {
              "aliases": [],
              "description": "Gateway REST user name.",
              "required": false,
              "suboptions": {}
            },
            "kind": {
              "aliases": [],
              "description": "The type of cluster.",
              "required": false,
              "choices": [
                "hadoop",
                "spark",
                "hbase",
                "storm"
              ],
              "suboptions": {}
            }
          }
        },
        "cluster_version": {
          "aliases": [],
          "description": "The version of the cluster. For example C(3.6).",
          "required": false,
          "suboptions": {}
        },
        "compute_profile_roles": {
          "aliases": [],
          "description": "The list of roles in the cluster.",
          "type": "list",
          "required": false,
          "suboptions": {
            "linux_profile": {
              "aliases": [],
              "description": "The Linux OS profile.",
              "required": false,
              "suboptions": {
                "password": {
                  "aliases": [],
                  "description": "SSH password.",
                  "required": false,
                  "suboptions": {}
                },
                "username": {
                  "aliases": [],
                  "description": "SSH user name.",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "min_instance_count": {
              "aliases": [],
              "description": "The minimum instance count of the cluster.",
              "required": false,
              "suboptions": {}
            },
            "name": {
              "aliases": [],
              "description": "The name of the role.",
              "required": false,
              "choices": [
                "headnode",
                "workernode",
                "zookepernode"
              ],
              "suboptions": {}
            },
            "target_instance_count": {
              "aliases": [],
              "description": "The instance count of the cluster.",
              "required": false,
              "suboptions": {}
            },
            "vm_size": {
              "aliases": [],
              "description": "The size of the VM.",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "location": {
          "aliases": [],
          "description": "Resource location. If not set, location from the resource group will be used as default.",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the cluster.",
          "required": true,
          "suboptions": {}
        },
        "os_type": {
          "aliases": [],
          "description": "The type of operating system.",
          "required": false,
          "choices": [
            "linux"
          ],
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Assert the state of the cluster.\nUse C(present) to create or update a cluster and C(absent) to delete it.",
          "default": "present",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "storage_accounts": {
          "aliases": [],
          "description": "The list of storage accounts in the cluster.",
          "type": "list",
          "required": false,
          "suboptions": {
            "container": {
              "aliases": [],
              "description": "The container in the storage account.",
              "required": false,
              "suboptions": {}
            },
            "is_default": {
              "aliases": [],
              "description": "Whether or not the storage account is the default storage account.",
              "required": false,
              "suboptions": {}
            },
            "key": {
              "aliases": [],
              "description": "The storage account access key.",
              "required": false,
              "suboptions": {}
            },
            "name": {
              "aliases": [],
              "description": "Blob storage endpoint. For example storage_account_name.blob.core.windows.net.",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tier": {
          "aliases": [],
          "description": "The cluster tier.",
          "required": false,
          "choices": [
            "standard",
            "premium"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage Azure HDInsight Cluster instance",
      "version_added": "0.1.2"
    },
    "examples": "\n- name: Create instance of HDInsight Cluster\n  azure_rm_hdinsightcluster:\n    resource_group: myResourceGroup\n    name: myCluster\n    location: eastus2\n    cluster_version: 3.6\n    os_type: linux\n    tier: standard\n    cluster_definition:\n      kind: spark\n      gateway_rest_username: http-user\n      gateway_rest_password: MuABCPassword!!@123\n    storage_accounts:\n      - name: myStorageAccount.blob.core.windows.net\n        is_default: yes\n        container: myContainer\n        key: GExmaxH4lDNdHA9nwAsCt8t4AOQas2y9vXQP1kKALTram7Q3/5xLVIab3+nYG1x63Xyak9/VXxQyNBHA9pDWw==\n    compute_profile_roles:\n      - name: headnode\n        target_instance_count: 2\n        hardware_profile:\n          vm_size: Standard_D3\n        linux_profile:\n          username: sshuser\n          password: MuABCPassword!!@123\n      - name: workernode\n        target_instance_count: 2\n        vm_size: Standard_D3\n        linux_profile:\n          username: sshuser\n          password: MuABCPassword!!@123\n"
  },
  "azure.azcollection.azure_rm_hdinsightcluster_info": {
    "doc": {
      "description": "Get facts of Azure HDInsight Cluster.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "HDInsight cluster name.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Name of an Azure resource group.",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure HDInsight Cluster facts",
      "version_added": "0.1.2"
    },
    "examples": "\n  - name: Get instance of HDInsight Cluster\n    azure_rm_hdinsightcluster_info:\n      resource_group: myResourceGroup\n      name: myCluster\n\n  - name: List instances of HDInsight Cluster\n    azure_rm_hdinsightcluster_info:\n      resource_group: myResourceGroup\n"
  },
  "azure.azcollection.azure_rm_image": {
    "doc": {
      "description": "Create, delete an image from virtual machine, blob uri, managed disk or snapshot.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "data_disk_sources": {
          "aliases": [],
          "description": "List of data disk sources, including unmanaged blob URI, managed disk id or name, or snapshot id or name.",
          "type": "list",
          "required": false,
          "suboptions": {}
        },
        "location": {
          "aliases": [],
          "description": "Location of the image. Derived from I(resource_group) if not specified.",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the image.",
          "required": true,
          "suboptions": {}
        },
        "os_type": {
          "aliases": [],
          "description": "The OS type of image.",
          "required": false,
          "choices": [
            "Windows",
            "Linux"
          ],
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Name of resource group.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "source": {
          "aliases": [],
          "description": "OS disk source from the same region.\nIt can be a virtual machine, OS disk blob URI, managed OS disk, or OS snapshot.\nEach type of source except for blob URI can be given as resource id, name or a dict contains C(resource_group), C(name) and C(type).\nIf source type is blob URI, the source should be the full URI of the blob in string type.\nIf you specify the I(type) in a dict, acceptable value contains C(disks), C(virtual_machines) and C(snapshots).",
          "type": "raw",
          "required": true,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Assert the state of the image. Use C(present) to create or update a image and C(absent) to delete an image.",
          "default": "present",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage Azure image",
      "version_added": "0.0.1"
    },
    "examples": "\n- name: Create an image from a virtual machine\n  azure_rm_image:\n    resource_group: myResourceGroup\n    name: myImage\n    source: myVirtualMachine\n\n- name: Create an image from os disk\n  azure_rm_image:\n    resource_group: myResourceGroup\n    name: myImage\n    source: /subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroup/myResourceGroup/providers/Microsoft.Compute/disks/disk001\n    data_disk_sources:\n        - datadisk001\n        - datadisk002\n    os_type: Linux\n\n- name: Create an image from os disk via dict\n  azure_rm_image:\n    resource_group: myResourceGroup\n    name: myImage\n    source:\n        type: disks\n        resource_group: myResourceGroup\n        name: disk001\n    data_disk_sources:\n        - datadisk001\n        - datadisk002\n    os_type: Linux\n\n- name: Delete an image\n  azure_rm_image:\n    state: absent\n    resource_group: myResourceGroup\n    name: myImage\n    source: testvm001\n"
  },
  "azure.azcollection.azure_rm_image_info": {
    "doc": {
      "description": "List azure custom images. The images can be listed where scope of listing can be based on subscription, resource group, name or tags.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the image to filter from existing images.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Name of resource group.",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "List of tags to be matched.",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get facts about azure custom images",
      "version_added": "0.0.1"
    },
    "examples": "\n- name: List images with name\n  azure_rm_image_info:\n    name: test-image\n    resource_group: myResourceGroup\n\n- name: List images by resource group\n  azure_rm_image_info:\n    resource_group: myResourceGroup\n    tags:\n      - testing\n      - foo:bar\n\n- name: List all available images under current subscription\n  azure_rm_image_info:\n"
  },
  "azure.azcollection.azure_rm_iotdevice": {
    "doc": {
      "description": "Create, delete an Azure IoT hub device.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_method": {
          "aliases": [],
          "description": "The authorization type an entity is to be created with.",
          "default": "sas",
          "type": "str",
          "required": false,
          "choices": [
            "sas",
            "certificate_authority",
            "self_signed"
          ],
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "desired": {
          "aliases": [],
          "description": "Used along with reported properties to synchronize device configuration or conditions.\nThe tag can be nested dictionary, '.', '$', '#', ' ' is not allowed in the key.\nList is not supported.\nNot supported in IoT Hub with Basic tier.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "edge_enabled": {
          "aliases": [],
          "description": "Flag indicating edge enablement.\nNot supported in IoT Hub with Basic tier.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "hub": {
          "aliases": [],
          "description": "Name of IoT Hub.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "hub_policy_key": {
          "aliases": [],
          "description": "Key of the I(hub_policy_name).",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "hub_policy_name": {
          "aliases": [],
          "description": "Policy name of the IoT Hub which will be used to query from IoT hub.\nThis policy should have 'RegistryWrite, ServiceConnect, DeviceConnect' accesses. You may get 401 error when you lack any of these.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the IoT hub device identity.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "primary_key": {
          "aliases": [
            "primary_thumbprint"
          ],
          "description": "Explicit self-signed certificate thumbprint to use for primary key.\nExplicit Shared Private Key to use for primary key.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "secondary_key": {
          "aliases": [
            "secondary_thumbprint"
          ],
          "description": "Explicit self-signed certificate thumbprint to use for secondary key.\nExplicit Shared Private Key to use for secondary key.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "State of the IoT hub. Use C(present) to create or update an IoT hub device and C(absent) to delete an IoT hub device.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "status": {
          "aliases": [],
          "description": "Set device status upon creation.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "twin_tags": {
          "aliases": [],
          "description": "A section that the solution back end can read from and write to.\nTags are not visible to device apps.\nThe tag can be nested dictionary, '.', '$', '#', ' ' is not allowed in the key.\nList is not supported.\nNot supported in IoT Hub with Basic tier.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage Azure IoT hub device",
      "version_added": "0.1.2"
    },
    "examples": "\n- name: Create simplest Azure IoT Hub device\n  azure_rm_iotdevice:\n    hub: myHub\n    name: Testing\n    hub_policy_name: iothubowner\n    hub_policy_key: \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\"\n\n- name: Create Azure IoT Edge device\n  azure_rm_iotdevice:\n    hub: myHub\n    name: Testing\n    hub_policy_name: iothubowner\n    hub_policy_key: \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\"\n    edge_enabled: yes\n\n- name: Create Azure IoT Hub device with device twin properties and tag\n  azure_rm_iotdevice:\n    hub: myHub\n    name: Testing\n    hub_policy_name: iothubowner\n    hub_policy_key: \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\"\n    twin_tags:\n        location:\n            country: US\n            city: Redmond\n        sensor: humidity\n    desired:\n        period: 100\n"
  },
  "azure.azcollection.azure_rm_iotdevice_info": {
    "doc": {
      "description": "Query, get Azure IoT hub device.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "hub": {
          "aliases": [],
          "description": "Name of IoT Hub.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "hub_policy_key": {
          "aliases": [],
          "description": "Key of the I(hub_policy_name).",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "hub_policy_name": {
          "aliases": [],
          "description": "Policy name of the IoT Hub which will be used to query from IoT hub.\nThis policy should have at least 'Registry Read' access.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "module_id": {
          "aliases": [],
          "description": "Name of the IoT hub device module.\nMust use with I(device_id) defined.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [
            "device_id"
          ],
          "description": "Name of the IoT hub device identity.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "query": {
          "aliases": [],
          "description": "Query an IoT hub to retrieve information regarding device twins using a SQL-like language.\nSee U(https://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-devguide-query-language).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "top": {
          "aliases": [],
          "description": "Used when I(name) not defined.\nList the top n devices in the query.",
          "type": "int",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Facts of Azure IoT hub device",
      "version_added": "0.1.2"
    },
    "examples": "\n- name: Get the details of a device\n  azure_rm_iotdevice_info:\n      name: Testing\n      hub: MyIoTHub\n      hub_policy_name: registryRead\n      hub_policy_key: XXXXXXXXXXXXXXXXXXXX\n\n- name: Query all device modules in an IoT Hub\n  azure_rm_iotdevice_info:\n      query: \"SELECT * FROM devices.modules\"\n      hub: MyIoTHub\n      hub_policy_name: registryRead\n      hub_policy_key: XXXXXXXXXXXXXXXXXXXX\n\n- name: List all devices in an IoT Hub\n  azure_rm_iotdevice_info:\n      hub: MyIoTHub\n      hub_policy_name: registryRead\n      hub_policy_key: XXXXXXXXXXXXXXXXXXXX\n"
  },
  "azure.azcollection.azure_rm_iotdevicemodule": {
    "doc": {
      "description": "Create, delete an Azure IoT hub device module.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_method": {
          "aliases": [],
          "description": "The authorization type an entity is to be created with.",
          "default": "sas",
          "type": "str",
          "required": false,
          "choices": [
            "sas",
            "certificate_authority",
            "self_signed"
          ],
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "desired": {
          "aliases": [],
          "description": "Used along with reported properties to synchronize device configuration or conditions.\nThe tag can be nested dictionary, '.', '$', '#', ' ' is not allowed in the key.\nList is not supported.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "device": {
          "aliases": [],
          "description": "Device name the module associate with.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "hub": {
          "aliases": [],
          "description": "Name of IoT Hub.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "hub_policy_key": {
          "aliases": [],
          "description": "Key of the I(hub_policy_name).",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "hub_policy_name": {
          "aliases": [],
          "description": "Policy name of the IoT Hub which will be used to query from IoT hub.\nThis policy should have at least 'Registry Read' access.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the IoT hub device identity.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "primary_key": {
          "aliases": [
            "primary_thumbprint"
          ],
          "description": "Explicit self-signed certificate thumbprint to use for primary key.\nExplicit Shared Private Key to use for primary key.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "secondary_key": {
          "aliases": [
            "secondary_thumbprint"
          ],
          "description": "Explicit self-signed certificate thumbprint to use for secondary key.\nExplicit Shared Private Key to use for secondary key.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "State of the IoT hub. Use C(present) to create or update an IoT hub device and C(absent) to delete an IoT hub device.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "twin_tags": {
          "aliases": [],
          "description": "A section that the solution back end can read from and write to.\nTags are not visible to device apps.\nThe tag can be nested dictionary, '.', '$', '#', ' ' is not allowed in the key.\nList is not supported.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage Azure IoT hub device module",
      "version_added": "0.1.2"
    },
    "examples": "\n- name: Create simplest Azure IoT Hub device module\n  azure_rm_iotdevicemodule:\n    hub: myHub\n    name: Testing\n    device: mydevice\n    hub_policy_name: iothubowner\n    hub_policy_key: \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\"\n\n- name: Create Azure IoT Edge device module\n  azure_rm_iotdevice:\n    hub: myHub\n    device: mydevice\n    name: Testing\n    hub_policy_name: iothubowner\n    hub_policy_key: \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\"\n    edge_enabled: yes\n\n- name: Create Azure IoT Hub device module with module twin properties and tag\n  azure_rm_iotdevice:\n    hub: myHub\n    name: Testing\n    device: mydevice\n    hub_policy_name: iothubowner\n    hub_policy_key: \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\"\n    twin_tags:\n        location:\n            country: US\n            city: Redmond\n        sensor: humidity\n    desired:\n        period: 100\n"
  },
  "azure.azcollection.azure_rm_iothub": {
    "doc": {
      "description": "Create, delete an Azure IoT hub.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "enable_file_upload_notifications": {
          "aliases": [],
          "description": "File upload notifications are enabled if set to C(True).",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "event_endpoint": {
          "aliases": [],
          "description": "The Event Hub-compatible endpoint property.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "partition_count": {
              "aliases": [],
              "description": "The number of partitions for receiving device-to-cloud messages in the Event Hub-compatible endpoint.\nSee U(https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#device-to-cloud-messages).\nDefault is C(2).",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "retention_time_in_days": {
              "aliases": [],
              "description": "The retention time for device-to-cloud messages in days.\nSee U(https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#device-to-cloud-messages).\nDefault is C(1).",
              "type": "int",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "ip_filters": {
          "aliases": [],
          "description": "Configure rules for rejecting or accepting traffic from specific IPv4 addresses.",
          "type": "list",
          "required": false,
          "suboptions": {
            "action": {
              "aliases": [],
              "description": "The desired action for requests captured by this rule.",
              "type": "str",
              "required": true,
              "choices": [
                "accept",
                "reject"
              ],
              "suboptions": {}
            },
            "ip_mask": {
              "aliases": [],
              "description": "A string that contains the IP address range in CIDR notation for the rule.",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "name": {
              "aliases": [],
              "description": "Name of the filter.",
              "type": "str",
              "required": true,
              "suboptions": {}
            }
          }
        },
        "location": {
          "aliases": [],
          "description": "Location of the IoT hub.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the IoT hub.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Name of resource group.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "routes": {
          "aliases": [],
          "description": "Route device-to-cloud messages to service-facing endpoints.",
          "type": "list",
          "required": false,
          "suboptions": {
            "condition": {
              "aliases": [],
              "description": "The query expression for the routing query that is run against the message application properties, system properties, message body, device twin tags, and device twin properties to determine if it is a match for the endpoint.\nFor more information about constructing a query, see U(https://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-devguide-routing-query-syntax)",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "enabled": {
              "aliases": [],
              "description": "Whether to enable the route.",
              "type": "bool",
              "required": true,
              "suboptions": {}
            },
            "endpoint_name": {
              "aliases": [],
              "description": "The name of the endpoint in I(routing_endpoints) where IoT Hub sends messages that match the query.",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "name": {
              "aliases": [],
              "description": "Name of the route.",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "source": {
              "aliases": [],
              "description": "The origin of the data stream to be acted upon.",
              "type": "str",
              "required": true,
              "choices": [
                "device_messages",
                "twin_change_events",
                "device_lifecycle_events",
                "device_job_lifecycle_events"
              ],
              "suboptions": {}
            }
          }
        },
        "routing_endpoints": {
          "aliases": [],
          "description": "Custom endpoints.",
          "type": "list",
          "required": false,
          "suboptions": {
            "connection_string": {
              "aliases": [],
              "description": "Connection string of the custom endpoint.\nThe connection string should have send privilege.",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "container": {
              "aliases": [],
              "description": "Container name of the custom endpoint when I(resource_type=storage).",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "encoding": {
              "aliases": [],
              "description": "Encoding of the message when I(resource_type=storage).",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "name": {
              "aliases": [],
              "description": "Name of the custom endpoint.",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "resource_group": {
              "aliases": [],
              "description": "Resource group of the endpoint.\nDefault is the same as I(resource_group).",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "resource_type": {
              "aliases": [],
              "description": "Resource type of the custom endpoint.",
              "type": "str",
              "required": true,
              "choices": [
                "eventhub",
                "queue",
                "storage",
                "topic"
              ],
              "suboptions": {}
            },
            "subscription": {
              "aliases": [],
              "description": "Subscription id of the endpoint.\nDefault is the same as I(subscription).",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "sku": {
          "aliases": [],
          "description": "Pricing tier for Azure IoT Hub.\nNote that only one free IoT hub instance is allowed in each subscription. Exception will be thrown if free instances exceed one.\nDefault is C(s1) when creation.",
          "type": "str",
          "required": false,
          "choices": [
            "b1",
            "b2",
            "b3",
            "f1",
            "s1",
            "s2",
            "s3"
          ],
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "State of the IoT hub. Use C(present) to create or update an IoT hub and C(absent) to delete an IoT hub.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "unit": {
          "aliases": [],
          "description": "Units in your IoT Hub.\nDefault is C(1).",
          "type": "int",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage Azure IoT hub",
      "version_added": "0.1.2"
    },
    "examples": "\n- name: Create a simplest IoT hub\n  azure_rm_iothub:\n    name: Testing\n    resource_group: myResourceGroup\n- name: Create an IoT hub with route\n  azure_rm_iothub:\n    resource_group: myResourceGroup\n    name: Testing\n    routing_endpoints:\n        - connection_string: \"Endpoint=sb://qux.servicebus.windows.net/;SharedAccessKeyName=quux;SharedAccessKey=****;EntityPath=myQueue\"\n          name: foo\n          resource_type: queue\n          resource_group: myResourceGroup1\n    routes:\n        - name: bar\n          source: device_messages\n          endpoint_name: foo\n          enabled: yes\n"
  },
  "azure.azcollection.azure_rm_iothub_info": {
    "doc": {
      "description": "Get facts for a specific IoT Hub or all IoT Hubs.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "list_consumer_groups": {
          "aliases": [],
          "description": "List the consumer group of the built-in event hub.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "list_keys": {
          "aliases": [],
          "description": "List the keys of IoT Hub.\nNote this will have network overhead for each IoT Hub.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Limit results to a specific resource group.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The resource group to search for the desired IoT Hub.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "show_endpoint_health": {
          "aliases": [],
          "description": "Get the health for routing endpoints.\nNote this will have network overhead for each IoT Hub.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "show_quota_metrics": {
          "aliases": [],
          "description": "Get the quota metrics for an IoT hub.\nNote this will have network overhead for each IoT Hub.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "show_stats": {
          "aliases": [],
          "description": "Show the statistics for IoT Hub.\nNote this will have network overhead for each IoT Hub.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "type": "list",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "test_route_message": {
          "aliases": [],
          "description": "Test routes message. It will be used to test all routes.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get IoT Hub facts",
      "version_added": "0.1.2"
    },
    "examples": "\n    - name: Get facts for one IoT Hub\n      azure_rm_iothub_info:\n        name: Testing\n        resource_group: myResourceGroup\n\n    - name: Get facts for all IoT Hubs\n      azure_rm_iothub_info:\n\n    - name: Get facts for all IoT Hubs in a specific resource group\n      azure_rm_iothub_info:\n        resource_group: myResourceGroup\n\n    - name: Get facts by tags\n      azure_rm_iothub_info:\n        tags:\n          - testing\n"
  },
  "azure.azcollection.azure_rm_iothubconsumergroup": {
    "doc": {
      "description": "Create, delete an Azure IoT hub.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "event_hub": {
          "aliases": [],
          "description": "Event hub endpoint name.",
          "default": "events",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "hub": {
          "aliases": [],
          "description": "Name of the IoT hub.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the consumer group.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Name of resource group.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "State of the IoT hub. Use C(present) to create or update an IoT hub and C(absent) to delete an IoT hub.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage Azure IoT hub",
      "version_added": "0.1.2"
    },
    "examples": "\n- name: Create an IoT hub consumer group\n  azure_rm_iothubconsumergroup:\n    name: test\n    resource_group: myResourceGroup\n    hub: Testing\n"
  },
  "azure.azcollection.azure_rm_ipgroup": {
    "doc": {
      "description": "Creates, deletes, and updates IP group in specified resource group.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "ip_addresses": {
          "aliases": [],
          "description": "The List of IP addresses in IP group.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "location": {
          "aliases": [],
          "description": "Location for IP group. Defaults to location of resource group if not specified.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the IP group.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Name of the resource group.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Assert the state of the IP group. Use C(present) to create or update and C(absent) to delete.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Create, delete and update IP group",
      "version_added": "1.6.0"
    },
    "examples": "\n- name: Create IP Group\n  azure_rm_ipgroup:\n    resource_group: MyAzureResourceGroup\n    name: myipgroup\n    location: eastus\n    ip_addresses:\n      - 13.64.39.16/32\n      - 40.74.146.80/31\n      - 40.74.147.32/28\n    tags:\n      key1: \"value1\"\n    state: present\n\n- name: Update IP Group\n  azure_rm_ipgroup:\n    resource_group: MyAzureResourceGroup\n    name: myipgroup\n    location: eastus\n    ip_addresses:\n      - 10.0.0.0/24\n    tags:\n      key2: \"value2\"\n\n- name: Delete IP Group\n  azure_rm_ipgroup:\n    resource_group: MyAzureResourceGroup\n    name: myipgroup\n    state: absent\n"
  },
  "azure.azcollection.azure_rm_ipgroup_info": {
    "doc": {
      "description": "Get facts for specified IP group or all IP groups in a given resource group.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the IP group.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Name of the resource group.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit the results by providing resource tags.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get IP group facts",
      "version_added": "1.6.0"
    },
    "examples": "\n- name: Get facts for one IP group\n  azure_rm_ipgroup_info:\n    resource_group: myAzureResourceGroup\n    name: myipgroup\n\n- name: Get facts for all IP groups in resource group\n  azure_rm_ipgroup_info:\n    resource_group: myAzureResourceGroup\n"
  },
  "azure.azcollection.azure_rm_keyvault": {
    "doc": {
      "description": "Create, update and delete instance of Key Vault.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "access_policies": {
          "aliases": [],
          "description": "An array of 0 to 16 identities that have access to the key vault.\nAll identities in the array must use the same tenant ID as the key vault's tenant ID.",
          "required": false,
          "suboptions": {
            "application_id": {
              "aliases": [],
              "description": "Application ID of the client making request on behalf of a principal.",
              "required": false,
              "suboptions": {}
            },
            "certificates": {
              "aliases": [],
              "description": "List of permissions to certificates.",
              "required": false,
              "choices": [
                "get",
                "list",
                "delete",
                "create",
                "import",
                "update",
                "managecontacts",
                "getissuers",
                "listissuers",
                "setissuers",
                "deleteissuers",
                "manageissuers",
                "recover",
                "purge"
              ],
              "suboptions": {}
            },
            "keys": {
              "aliases": [],
              "description": "List of permissions to keys.",
              "required": false,
              "choices": [
                "encrypt",
                "decrypt",
                "wrapkey",
                "unwrapkey",
                "sign",
                "verify",
                "get",
                "list",
                "create",
                "update",
                "import",
                "delete",
                "backup",
                "restore",
                "recover",
                "purge"
              ],
              "suboptions": {}
            },
            "object_id": {
              "aliases": [],
              "description": "The object ID of a user, service principal or security group in the Azure Active Directory tenant for the vault.\nThe object ID must be unique for the list of access policies.\nPlease note this is not application id. Object id can be obtained by running \"az ad sp show --id <application id>\".",
              "required": true,
              "suboptions": {}
            },
            "secrets": {
              "aliases": [],
              "description": "List of permissions to secrets.",
              "required": false,
              "choices": [
                "get",
                "list",
                "set",
                "delete",
                "backup",
                "restore",
                "recover",
                "purge"
              ],
              "suboptions": {}
            },
            "storage": {
              "aliases": [],
              "description": "List of permissions to storage accounts.",
              "required": false,
              "suboptions": {}
            },
            "tenant_id": {
              "aliases": [],
              "description": "The Azure Active Directory tenant ID that should be used for authenticating requests to the key vault.\nCurrent keyvault C(tenant_id) value will be used if not specified.",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "enable_purge_protection": {
          "aliases": [],
          "description": "Property specifying whether protection against purge is enabled for this vault.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "enable_soft_delete": {
          "aliases": [],
          "description": "Property to specify whether the soft delete functionality is enabled for this key vault.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "enabled_for_deployment": {
          "aliases": [],
          "description": "Property to specify whether Azure Virtual Machines are permitted to retrieve certificates stored as secrets from the key vault.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "enabled_for_disk_encryption": {
          "aliases": [],
          "description": "Property to specify whether Azure Disk Encryption is permitted to retrieve secrets from the vault and unwrap keys.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "enabled_for_template_deployment": {
          "aliases": [],
          "description": "Property to specify whether Azure Resource Manager is permitted to retrieve secrets from the key vault.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "location": {
          "aliases": [],
          "description": "Resource location. If not set, location from the resource group will be used as default.",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "recover_mode": {
          "aliases": [],
          "description": "Create vault in recovery mode.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the Resource Group to which the server belongs.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "sku": {
          "aliases": [],
          "description": "SKU details.",
          "required": false,
          "suboptions": {
            "family": {
              "aliases": [],
              "description": "SKU family name.",
              "required": false,
              "suboptions": {}
            },
            "name": {
              "aliases": [],
              "description": "SKU name to specify whether the key vault is a standard vault or a premium vault.",
              "required": true,
              "choices": [
                "standard",
                "premium"
              ],
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "Assert the state of the KeyVault. Use C(present) to create or update an KeyVault and C(absent) to delete it.",
          "default": "present",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "vault_name": {
          "aliases": [],
          "description": "Name of the vault.",
          "required": true,
          "suboptions": {}
        },
        "vault_tenant": {
          "aliases": [],
          "description": "The Azure Active Directory tenant ID that should be used for authenticating requests to the key vault.",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage Key Vault instance",
      "version_added": "0.1.2"
    },
    "examples": "\n  - name: Create instance of Key Vault\n    azure_rm_keyvault:\n      resource_group: myResourceGroup\n      vault_name: samplekeyvault\n      enabled_for_deployment: yes\n      vault_tenant: 72f98888-8666-4144-9199-2d7cd0111111\n      sku:\n        name: standard\n      access_policies:\n        - tenant_id: 72f98888-8666-4144-9199-2d7cd0111111\n          object_id: 99998888-8666-4144-9199-2d7cd0111111\n          keys:\n            - get\n            - list\n"
  },
  "azure.azcollection.azure_rm_keyvault_info": {
    "doc": {
      "description": "Get facts of Azure Key Vault.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the key vault.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group to which the key vault belongs.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "type": "list",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure Key Vault facts",
      "version_added": "0.1.2"
    },
    "examples": "\n  - name: Get Key Vault by name\n    azure_rm_keyvault_info:\n      resource_group: myResourceGroup\n      name: myVault\n\n  - name: List Key Vaults in specific resource group\n    azure_rm_keyvault_info:\n      resource_group: myResourceGroup\n\n  - name: List Key Vaults in current subscription\n    azure_rm_keyvault_info:\n"
  },
  "azure.azcollection.azure_rm_keyvaultkey": {
    "doc": {
      "description": "Create or delete a key within a given keyvault.\nBy using Key Vault, you can encrypt keys and secrets.\nSuch as authentication keys, storage account keys, data encryption keys, .PFX files, and passwords.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "byok_file": {
          "aliases": [],
          "description": "BYOK file.",
          "required": false,
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "key_name": {
          "aliases": [],
          "description": "Name of the keyvault key.",
          "required": true,
          "suboptions": {}
        },
        "keyvault_uri": {
          "aliases": [],
          "description": "URI of the keyvault endpoint.",
          "required": true,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "pem_file": {
          "aliases": [],
          "description": "PEM file.",
          "required": false,
          "suboptions": {}
        },
        "pem_password": {
          "aliases": [],
          "description": "PEM password.",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Assert the state of the key. Use C(present) to create a key and C(absent) to delete a key.",
          "default": "present",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Use Azure KeyVault keys",
      "version_added": "0.1.2"
    },
    "examples": "\n    - name: Create a key\n      azure_rm_keyvaultkey:\n        key_name: MyKey\n        keyvault_uri: https://contoso.vault.azure.net/\n\n    - name: Delete a key\n      azure_rm_keyvaultkey:\n        key_name: MyKey\n        keyvault_uri: https://contoso.vault.azure.net/\n        state: absent\n"
  },
  "azure.azcollection.azure_rm_keyvaultkey_info": {
    "doc": {
      "description": "Get facts of Azure Key Vault key.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Key name. If not set, will list all keys in I(vault_uri).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "show_deleted_key": {
          "aliases": [],
          "description": "Set to C(true) to show deleted keys. Set to C(false) to show not deleted keys.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "type": "list",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "vault_uri": {
          "aliases": [],
          "description": "Vault uri where the key stored in.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "version": {
          "aliases": [],
          "description": "Key version.\nSet it to C(current) to show latest version of a key.\nSet it to C(all) to list all versions of a key.\nSet it to specific version to list specific version of a key. eg. fd2682392a504455b79c90dd04a1bf46.",
          "default": "current",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure Key Vault key facts",
      "version_added": "0.1.2"
    },
    "examples": "\n  - name: Get latest version of specific key\n    azure_rm_keyvaultkey_info:\n      vault_uri: \"https://myVault.vault.azure.net\"\n      name: myKey\n\n  - name: List all versions of specific key\n    azure_rm_keyvaultkey_info:\n      vault_uri: \"https://myVault.vault.azure.net\"\n      name: myKey\n      version: all\n\n  - name: List specific version of specific key\n    azure_rm_keyvaultkey_info:\n      vault_uri: \"https://myVault.vault.azure.net\"\n      name: myKey\n      version: fd2682392a504455b79c90dd04a1bf46\n\n  - name: List all keys in specific key vault\n    azure_rm_keyvaultkey_info:\n        vault_uri: \"https://myVault.vault.azure.net\"\n\n  - name: List deleted keys in specific key vault\n    azure_rm_keyvaultkey_info:\n        vault_uri: \"https://myVault.vault.azure.net\"\n        show_deleted_key: True\n"
  },
  "azure.azcollection.azure_rm_keyvaultsecret": {
    "doc": {
      "description": "Create or delete a secret within a given keyvault.\nBy using Key Vault, you can encrypt keys and secrets.\nSuch as authentication keys, storage account keys, data encryption keys, .PFX files, and passwords.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "content_type": {
          "aliases": [],
          "description": "Type of the secret value such as a password.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "keyvault_uri": {
          "aliases": [],
          "description": "URI of the keyvault endpoint.",
          "required": true,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "secret_name": {
          "aliases": [],
          "description": "Name of the keyvault secret.",
          "required": true,
          "suboptions": {}
        },
        "secret_value": {
          "aliases": [],
          "description": "Secret to be secured by keyvault.",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Assert the state of the subnet. Use C(present) to create or update a secret and C(absent) to delete a secret .",
          "default": "present",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Use Azure KeyVault Secrets",
      "version_added": "0.1.2"
    },
    "examples": "\n    - name: Create a secret\n      azure_rm_keyvaultsecret:\n        secret_name: MySecret\n        secret_value: My_Pass_Sec\n        keyvault_uri: https://contoso.vault.azure.net/\n        tags:\n            testing: testing\n            delete: never\n\n    - name: Delete a secret\n      azure_rm_keyvaultsecret:\n        secret_name: MySecret\n        keyvault_uri: https://contoso.vault.azure.net/\n        state: absent\n"
  },
  "azure.azcollection.azure_rm_keyvaultsecret_info": {
    "doc": {
      "description": "Get facts of Azure Key Vault secret.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Secret name. If not set, will list all secrets in vault_uri.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "show_deleted_secret": {
          "aliases": [],
          "description": "Set to I(show_delete_secret=true) to show deleted secrets. Set to I(show_deleted_secret=false) to show not deleted secrets.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "vault_uri": {
          "aliases": [],
          "description": "Vault uri where the secret stored in.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "version": {
          "aliases": [],
          "description": "Secret version.\nSet it to C(current) to show latest version of a secret.\nSet it to C(all) to list all versions of a secret.\nSet it to specific version to list specific version of a secret. eg. fd2682392a504455b79c90dd04a1bf46",
          "default": "current",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure Key Vault secret facts",
      "version_added": "0.1.2"
    },
    "examples": "\n  - name: Get latest version of specific secret\n    azure_rm_keyvaultsecret_info:\n      vault_uri: \"https://myVault.vault.azure.net\"\n      name: mySecret\n\n  - name: List all versions of specific secret\n    azure_rm_keyvaultsecret_info:\n      vault_uri: \"https://myVault.vault.azure.net\"\n      name: mySecret\n      version: all\n\n  - name: List specific version of specific secret\n    azure_rm_keyvaultsecret_info:\n      vault_uri: \"https://myVault.vault.azure.net\"\n      name: mySecret\n      version: fd2682392a504455b79c90dd04a1bf46\n\n  - name: List all secrets in specific key vault\n    azure_rm_keyvaultsecret_info:\n        vault_uri: \"https://myVault.vault.azure.net\"\n\n  - name: List deleted secrets in specific key vault\n    azure_rm_keyvaultsecret_info:\n        vault_uri: \"https://myVault.vault.azure.net\"\n        show_deleted_secret: True\n"
  },
  "azure.azcollection.azure_rm_loadbalancer": {
    "doc": {
      "description": "Create, update and delete Azure load balancers.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "backend_address_pools": {
          "aliases": [],
          "description": "List of backend address pools.",
          "required": false,
          "suboptions": {
            "name": {
              "aliases": [],
              "description": "Name of the backend address pool.",
              "required": true,
              "suboptions": {}
            }
          }
        },
        "backend_port": {
          "aliases": [],
          "description": "(deprecated) Backend port that will be exposed for the load balancer.\nThis option has been deprecated, and will be removed in 2.9. Use I(load_balancing_rules) instead.",
          "required": false,
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "frontend_ip_configurations": {
          "aliases": [],
          "description": "List of frontend IPs to be used.",
          "required": false,
          "suboptions": {
            "name": {
              "aliases": [],
              "description": "Name of the frontend ip configuration.",
              "required": true,
              "suboptions": {}
            },
            "private_ip_address": {
              "aliases": [],
              "description": "The reference of the Public IP resource.",
              "required": false,
              "suboptions": {}
            },
            "private_ip_allocation_method": {
              "aliases": [],
              "description": "The Private IP allocation method.",
              "required": false,
              "choices": [
                "Static",
                "Dynamic"
              ],
              "suboptions": {}
            },
            "public_ip_address": {
              "aliases": [],
              "description": "Name of an existing public IP address object in the current resource group to associate with the security group.",
              "required": false,
              "suboptions": {}
            },
            "subnet": {
              "aliases": [],
              "description": "The reference of the subnet resource.\nShould be an existing subnet's resource id.",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "frontend_port": {
          "aliases": [],
          "description": "(deprecated) Frontend port that will be exposed for the load balancer.\nThis option has been deprecated, and will be removed in 2.9. Use I(load_balancing_rules) instead.",
          "required": false,
          "suboptions": {}
        },
        "idle_timeout": {
          "aliases": [],
          "description": "(deprecated) Timeout for TCP idle connection in minutes.\nThis option has been deprecated, and will be removed in 2.9. Use I(load_balancing_rules) instead.",
          "default": "4",
          "required": false,
          "suboptions": {}
        },
        "inbound_nat_pools": {
          "aliases": [],
          "description": "Defines an external port range for inbound NAT to a single backend port on NICs associated with a load balancer.\nInbound NAT rules are created automatically for each NIC associated with the Load Balancer using an external port from this range.\nDefining an Inbound NAT pool on your Load Balancer is mutually exclusive with defining inbound Nat rules.\nInbound NAT pools are referenced from virtual machine scale sets.\nNICs that are associated with individual virtual machines cannot reference an inbound NAT pool.\nThey have to reference individual inbound NAT rules.",
          "required": false,
          "suboptions": {
            "backend_port": {
              "aliases": [],
              "description": "The port used for internal connections on the endpoint.\nAcceptable values are between 1 and 65535.",
              "required": false,
              "suboptions": {}
            },
            "frontend_ip_configuration_name": {
              "aliases": [],
              "description": "A reference to frontend IP addresses.",
              "required": true,
              "suboptions": {}
            },
            "frontend_port_range_end": {
              "aliases": [],
              "description": "The last port in the range of external ports that will be used to provide inbound NAT to NICs associated with the load balancer.\nAcceptable values range between 1 and 65535.",
              "required": true,
              "suboptions": {}
            },
            "frontend_port_range_start": {
              "aliases": [],
              "description": "The first port in the range of external ports that will be used to provide inbound NAT to NICs associated with the load balancer.\nAcceptable values range between 1 and 65534.",
              "required": true,
              "suboptions": {}
            },
            "name": {
              "aliases": [],
              "description": "Name of the inbound NAT pool.",
              "required": true,
              "suboptions": {}
            },
            "protocol": {
              "aliases": [],
              "description": "IP protocol for the NAT pool.",
              "required": false,
              "choices": [
                "Tcp",
                "Udp",
                "All"
              ],
              "suboptions": {}
            }
          }
        },
        "inbound_nat_rules": {
          "aliases": [],
          "description": "Collection of inbound NAT Rules used by a load balancer.\nDefining inbound NAT rules on your load balancer is mutually exclusive with defining an inbound NAT pool.\nInbound NAT pools are referenced from virtual machine scale sets.\nNICs that are associated with individual virtual machines cannot reference an Inbound NAT pool.\nThey have to reference individual inbound NAT rules.",
          "required": false,
          "suboptions": {
            "backend_port": {
              "aliases": [],
              "description": "The port used for internal connections on the endpoint.\nAcceptable values are between 0 and 65535.\nNote that value 0 enables \"Any Port\".",
              "required": false,
              "suboptions": {}
            },
            "enable_floating_ip": {
              "aliases": [],
              "description": "Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group.\nThis setting is required when using the SQL AlwaysOn Availability Groups in SQL server.\nThis setting can't be changed after you create the endpoint.",
              "required": false,
              "suboptions": {}
            },
            "enable_tcp_reset": {
              "aliases": [],
              "description": "Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination.\nThis element is only used when I(protocol=Tcp).",
              "required": false,
              "suboptions": {}
            },
            "frontend_ip_configuration": {
              "aliases": [],
              "description": "A reference to frontend IP addresses.",
              "required": true,
              "suboptions": {}
            },
            "frontend_port": {
              "aliases": [],
              "description": "The port for the external endpoint.\nFrontend port numbers must be unique across all rules within the load balancer.\nAcceptable values are between 0 and 65534.\nNote that value 0 enables \"Any Port\".",
              "required": false,
              "suboptions": {}
            },
            "idle_timeout": {
              "aliases": [],
              "description": "The timeout for the TCP idle connection.\nThe value can be set between 4 and 30 minutes.\nThe default value is C(4) minutes.\nThis element is only used when I(protocol=Tcp).",
              "required": false,
              "suboptions": {}
            },
            "name": {
              "aliases": [],
              "description": "name of the inbound nat rule.",
              "required": true,
              "suboptions": {}
            },
            "protocol": {
              "aliases": [],
              "description": "IP protocol for the inbound nat rule.",
              "required": false,
              "choices": [
                "Tcp",
                "Udp",
                "All"
              ],
              "suboptions": {}
            }
          }
        },
        "load_balancing_rules": {
          "aliases": [],
          "description": "Object collection representing the load balancing rules Gets the provisioning.",
          "required": false,
          "suboptions": {
            "backend_address_pool": {
              "aliases": [],
              "description": "A reference to a pool of DIPs. Inbound traffic is randomly load balanced across IPs in the backend IPs.",
              "required": true,
              "suboptions": {}
            },
            "backend_port": {
              "aliases": [],
              "description": "The port used for internal connections on the endpoint.\nAcceptable values are between 0 and 65535.\nNote that value 0 enables \"Any Port\".",
              "required": false,
              "suboptions": {}
            },
            "enable_floating_ip": {
              "aliases": [],
              "description": "Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group.",
              "required": false,
              "suboptions": {}
            },
            "frontend_ip_configuration": {
              "aliases": [],
              "description": "A reference to frontend IP addresses.",
              "required": true,
              "suboptions": {}
            },
            "frontend_port": {
              "aliases": [],
              "description": "The port for the external endpoint.\nFrontend port numbers must be unique across all rules within the load balancer.\nAcceptable values are between 0 and 65534.\nNote that value 0 enables \"Any Port\".",
              "required": false,
              "suboptions": {}
            },
            "idle_timeout": {
              "aliases": [],
              "description": "The timeout for the TCP idle connection.\nThe value can be set between 4 and 30 minutes.\nThe default value is C(4) minutes.\nThis element is only used when the protocol is set to TCP.",
              "required": false,
              "suboptions": {}
            },
            "load_distribution": {
              "aliases": [],
              "description": "The session persistence policy for this rule; C(Default) is no persistence.",
              "default": "Default",
              "required": false,
              "choices": [
                "Default",
                "SourceIP",
                "SourceIPProtocol"
              ],
              "suboptions": {}
            },
            "name": {
              "aliases": [],
              "description": "Name of the load balancing rule.",
              "required": true,
              "suboptions": {}
            },
            "probe": {
              "aliases": [],
              "description": "The name of the load balancer probe this rule should use for health checks.",
              "required": true,
              "suboptions": {}
            },
            "protocol": {
              "aliases": [],
              "description": "IP protocol for the load balancing rule.",
              "required": false,
              "choices": [
                "Tcp",
                "Udp",
                "All"
              ],
              "suboptions": {}
            }
          }
        },
        "load_distribution": {
          "aliases": [],
          "description": "(deprecated) The type of load distribution that the load balancer will employ.\nThis option has been deprecated, and will be removed in 2.9. Use I(load_balancing_rules) instead.",
          "required": false,
          "choices": [
            "Default",
            "SourceIP",
            "SourceIPProtocol"
          ],
          "suboptions": {}
        },
        "location": {
          "aliases": [],
          "description": "Valid Azure location. Defaults to location of the resource group.",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the load balancer.",
          "required": true,
          "suboptions": {}
        },
        "natpool_backend_port": {
          "aliases": [],
          "description": "(deprecated) Backend port used by the NAT pool.\nThis option has been deprecated, and will be removed in 2.9. Use I(inbound_nat_pools) instead.",
          "required": false,
          "suboptions": {}
        },
        "natpool_frontend_port_end": {
          "aliases": [],
          "description": "(deprecated) End of the port range for a NAT pool.\nThis option has been deprecated, and will be removed in 2.9. Use I(inbound_nat_pools) instead.",
          "required": false,
          "suboptions": {}
        },
        "natpool_frontend_port_start": {
          "aliases": [],
          "description": "(deprecated) Start of the port range for a NAT pool.\nThis option has been deprecated, and will be removed in 2.9. Use I(inbound_nat_pools) instead.",
          "required": false,
          "suboptions": {}
        },
        "natpool_protocol": {
          "aliases": [],
          "description": "(deprecated) The protocol for the NAT pool.\nThis option has been deprecated, and will be removed in 2.9. Use I(inbound_nat_pools) instead.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "probe_fail_count": {
          "aliases": [],
          "description": "(deprecated) The amount of probe failures for the load balancer to make a health determination.\nThis option has been deprecated, and will be removed in 2.9. Use I(probes) instead.",
          "default": "3",
          "required": false,
          "suboptions": {}
        },
        "probe_interval": {
          "aliases": [],
          "description": "(deprecated) Time (in seconds) between endpoint health probes.\nThis option has been deprecated, and will be removed in 2.9. Use I(probes) instead.",
          "default": "15",
          "required": false,
          "suboptions": {}
        },
        "probe_port": {
          "aliases": [],
          "description": "(deprecated) The port that the health probe will use.\nThis option has been deprecated, and will be removed in 2.9. Use I(probes) instead.",
          "required": false,
          "suboptions": {}
        },
        "probe_protocol": {
          "aliases": [],
          "description": "(deprecated) The protocol to use for the health probe.\nThis option has been deprecated, and will be removed in 2.9. Use I(probes) instead.",
          "required": false,
          "choices": [
            "Tcp",
            "Http",
            "Https"
          ],
          "suboptions": {}
        },
        "probe_request_path": {
          "aliases": [],
          "description": "(deprecated) The URL that an HTTP probe or HTTPS probe will use (only relevant if I(probe_protocol=Http) or I(probe_protocol=Https)).\nThis option has been deprecated, and will be removed in 2.9. Use I(probes) instead.",
          "required": false,
          "suboptions": {}
        },
        "probes": {
          "aliases": [],
          "description": "List of probe definitions used to check endpoint health.",
          "required": false,
          "suboptions": {
            "fail_count": {
              "aliases": [
                "number_of_probes"
              ],
              "description": "The number of probes where if no response, will result in stopping further traffic from being delivered to the endpoint.\nThis values allows endpoints to be taken out of rotation faster or slower than the typical times used in Azure.",
              "default": "3",
              "required": false,
              "suboptions": {}
            },
            "interval": {
              "aliases": [],
              "description": "The interval, in seconds, for how frequently to probe the endpoint for health status.\nSlightly less than half the allocated timeout period, which allows two full probes before taking the instance out of rotation.\nThe default value is C(15), the minimum value is C(5).",
              "default": "15",
              "required": false,
              "suboptions": {}
            },
            "name": {
              "aliases": [],
              "description": "Name of the probe.",
              "required": true,
              "suboptions": {}
            },
            "port": {
              "aliases": [],
              "description": "Probe port for communicating the probe. Possible values range from 1 to 65535, inclusive.",
              "required": true,
              "suboptions": {}
            },
            "protocol": {
              "aliases": [],
              "description": "The protocol of the end point to be probed.\nIf C(Tcp) is specified, a received ACK is required for the probe to be successful.\nIf C(Http) or C(Https) is specified, a 200 OK response from the specified URL is required for the probe to be successful.",
              "required": false,
              "choices": [
                "Tcp",
                "Http",
                "Https"
              ],
              "suboptions": {}
            },
            "request_path": {
              "aliases": [],
              "description": "The URI used for requesting health status from the VM.\nPath is required if I(protocol=Http) or I(protocol=Https). Otherwise, it is not allowed.",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "protocol": {
          "aliases": [],
          "description": "(deprecated) The protocol (TCP or UDP) that the load balancer will use.\nThis option has been deprecated, and will be removed in 2.9. Use I(load_balancing_rules) instead.",
          "required": false,
          "choices": [
            "Tcp",
            "Udp"
          ],
          "suboptions": {}
        },
        "public_ip_address_name": {
          "aliases": [
            "public_ip_address",
            "public_ip_name",
            "public_ip"
          ],
          "description": "(deprecated) Name of an existing public IP address object to associate with the security group.\nThis option has been deprecated, and will be removed in 2.9. Use I(frontend_ip_configurations) instead.",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Name of a resource group where the load balancer exists or will be created.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "sku": {
          "aliases": [],
          "description": "The load balancer SKU.",
          "required": false,
          "choices": [
            "Basic",
            "Standard"
          ],
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Assert the state of the load balancer. Use C(present) to create/update a load balancer, or C(absent) to delete one.",
          "default": "present",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage Azure load balancers",
      "version_added": "0.1.2"
    },
    "examples": "\n- name: create load balancer\n  azure_rm_loadbalancer:\n    resource_group: myResourceGroup\n    name: testloadbalancer1\n    frontend_ip_configurations:\n      - name: frontendipconf0\n        public_ip_address: testpip\n    backend_address_pools:\n      - name: backendaddrpool0\n    probes:\n      - name: prob0\n        port: 80\n    inbound_nat_pools:\n      - name: inboundnatpool0\n        frontend_ip_configuration_name: frontendipconf0\n        protocol: Tcp\n        frontend_port_range_start: 80\n        frontend_port_range_end: 81\n        backend_port: 8080\n    load_balancing_rules:\n      - name: lbrbalancingrule0\n        frontend_ip_configuration: frontendipconf0\n        backend_address_pool: backendaddrpool0\n        frontend_port: 80\n        backend_port: 80\n        probe: prob0\n    inbound_nat_rules:\n      - name: inboundnatrule0\n        backend_port: 8080\n        protocol: Tcp\n        frontend_port: 8080\n        frontend_ip_configuration: frontendipconf0\n"
  },
  "azure.azcollection.azure_rm_loadbalancer_info": {
    "doc": {
      "description": "Get facts for a specific load balancer or all load balancers.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Limit results to a specific resource group.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The resource group to search for the desired load balancer.",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get load balancer facts",
      "version_added": "0.1.2"
    },
    "examples": "\n    - name: Get facts for one load balancer\n      azure_rm_loadbalancer_info:\n        name: Testing\n        resource_group: myResourceGroup\n\n    - name: Get facts for all load balancers\n      azure_rm_loadbalancer_info:\n\n    - name: Get facts for all load balancers in a specific resource group\n      azure_rm_loadbalancer_info:\n        resource_group: myResourceGroup\n\n    - name: Get facts by tags\n      azure_rm_loadbalancer_info:\n        tags:\n          - testing\n"
  },
  "azure.azcollection.azure_rm_lock": {
    "doc": {
      "description": "Create, delete an Azure lock.\nTo create or delete management locks, you must have access to Microsoft.Authorization/* or Microsoft.Authorization/locks/* actions.\nOf the built-in roles, only Owner and User Access Administrator are granted those actions.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "level": {
          "aliases": [],
          "description": "The lock level type.",
          "type": "str",
          "required": false,
          "choices": [
            "can_not_delete",
            "read_only"
          ],
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "managed_resource_id": {
          "aliases": [],
          "description": "Manage a lock for the specified resource ID.\nMutually exclusive with I(resource_group).\nIf neither I(managed_resource_id) or I(resource_group) are specified, manage a lock for the current subscription.\n'/subscriptions/{subscriptionId}' for subscriptions.\n'/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}' for resource groups.\n'/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{namespace}/{resourceType}/{resourceName}' for resources.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the lock.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Manage a lock for the named resource group.\nMutually exclusive with I(managed_resource_id).\nIf neither I(managed_resource_id) or I(resource_group) are specified, manage a lock for the current subscription.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "State of the lock.\nUse C(present) to create or update a lock and C(absent) to delete a lock.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage Azure locks",
      "version_added": "0.1.2"
    },
    "examples": "\n- name: Create a lock for a resource\n  azure_rm_lock:\n      managed_resource_id: /subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourcegroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM\n      name: myLock\n      level: read_only\n\n- name: Create a lock for a resource group\n  azure_rm_lock:\n      managed_resource_id: /subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourcegroups/myResourceGroup\n      name: myLock\n      level: read_only\n\n- name: Create a lock for a resource group\n  azure_rm_lock:\n      resource_group: myResourceGroup\n      name: myLock\n      level: read_only\n\n- name: Create a lock for a subscription\n  azure_rm_lock:\n      name: myLock\n      level: read_only\n"
  },
  "azure.azcollection.azure_rm_lock_info": {
    "doc": {
      "description": "Create, delete an Azure lock.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "managed_resource_id": {
          "aliases": [],
          "description": "ID of the resource where need to manage the lock.\nGet this via facts module.\nCannot be set mutual with I(resource_group).\nManage subscription if both I(managed_resource_id) and I(resource_group) not defined.\n'/subscriptions/{subscriptionId}' for subscriptions.\n'/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}' for resource groups.\n'/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{namespace}/{resourceType}/{resourceName}' for resources.\nCan get all locks with 'child scope' for this resource, use I(managed_resource_id) in response for further management.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the lock.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Resource group name where need to manage the lock.\nThe lock is in the resource group level.\nCannot be set mutual with I(managed_resource_id).\nQuery subscription if both I(managed_resource_id) and I(resource_group) not defined.\nCan get all locks with 'child scope' in this resource group, use the I(managed_resource_id) in response for further management.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage Azure locks",
      "version_added": "0.1.2"
    },
    "examples": "\n- name: Get myLock details of myVM\n  azure_rm_lock_info:\n    name: myLock\n    managed_resource_id: /subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourcegroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM\n\n- name: List locks of myVM\n  azure_rm_lock_info:\n    managed_resource_id: /subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourcegroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM\n\n- name: List locks of myResourceGroup\n  azure_rm_lock_info:\n    resource_group: myResourceGroup\n\n- name: List locks of myResourceGroup\n  azure_rm_lock_info:\n    managed_resource_id: /subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourcegroups/myResourceGroup\n\n- name: List locks of mySubscription\n  azure_rm_lock_info:\n\n- name: List locks of mySubscription\n  azure_rm_lock_info:\n    managed_resource_id: /subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n"
  },
  "azure.azcollection.azure_rm_loganalyticsworkspace": {
    "doc": {
      "description": "Create, delete Azure Log Analytics workspaces.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "force": {
          "aliases": [],
          "description": "Deletes the workspace without the recovery option. A workspace that was deleted with this flag cannot be recovered.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "intelligence_packs": {
          "aliases": [],
          "description": "Manage intelligence packs possible for this workspace.\nEnable one pack by setting it to C(true). For example \"Backup:true\".\nDisable one pack by setting it to C(false). For example \"Backup:false\".\nOther intelligence packs not list in this property will not be changed.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "location": {
          "aliases": [],
          "description": "Resource location.",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the workspace.",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Name of resource group.",
          "required": true,
          "suboptions": {}
        },
        "retention_in_days": {
          "aliases": [],
          "description": "The workspace data retention in days.\n-1 means Unlimited retention for I(sku=unlimited).\n730 days is the maximum allowed for all other SKUs.",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "sku": {
          "aliases": [],
          "description": "The SKU of the workspace.",
          "default": "per_gb2018",
          "required": false,
          "choices": [
            "free",
            "standard",
            "premium",
            "unlimited",
            "per_node",
            "per_gb2018",
            "standalone"
          ],
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Assert the state of the image. Use C(present) to create or update a image and C(absent) to delete an image.",
          "default": "present",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage Azure Log Analytics workspaces",
      "version_added": "0.1.2"
    },
    "examples": "\n- name: Create a workspace with backup enabled\n  azure_rm_loganalyticsworkspace:\n    resource_group: myResourceGroup\n    name: myLogAnalyticsWorkspace\n    intelligence_pack:\n        Backup: true\n"
  },
  "azure.azcollection.azure_rm_loganalyticsworkspace_info": {
    "doc": {
      "description": "Get, query Azure Log Analytics workspaces.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the workspace.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Name of resource group.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "show_intelligence_packs": {
          "aliases": [],
          "description": "Show the intelligence packs for a workspace.\nNote this will cost one more network overhead for each workspace, expected slow response.",
          "required": false,
          "suboptions": {}
        },
        "show_management_groups": {
          "aliases": [],
          "description": "Show the management groups for a workspace.\nNote this will cost one more network overhead for each workspace, expected slow response.",
          "required": false,
          "suboptions": {}
        },
        "show_shared_keys": {
          "aliases": [],
          "description": "Show the shared keys for a workspace.\nNote this will cost one more network overhead for each workspace, expected slow response.",
          "required": false,
          "suboptions": {}
        },
        "show_usages": {
          "aliases": [],
          "description": "Show the list of usages for a workspace.\nNote this will cost one more network overhead for each workspace, expected slow response.",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get facts of Azure Log Analytics workspaces",
      "version_added": "0.1.2"
    },
    "examples": "\n- name: Query a workspace\n  azure_rm_loganalyticsworkspace_info:\n      resource_group: myResourceGroup\n      name: myLogAnalyticsWorkspace\n      show_intelligence_packs: true\n      show_management_groups: true\n      show_shared_keys: true\n      show_usages: true\n"
  },
  "azure.azcollection.azure_rm_manageddisk": {
    "doc": {
      "description": "Create, update and delete an Azure Managed Disk.",
      "has_action": false,
      "notes": "This module was called M(azure_rm_managed_disk) before Ansible 2.8. The usage did not change.\nFor authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "attach_caching": {
          "aliases": [],
          "description": "Disk caching policy controlled by VM. Will be used when attached to the VM defined by C(managed_by).\nIf this option is different from the current caching policy, the managed disk will be deattached and attached with current caching option again.",
          "required": false,
          "choices": [
            "read_only",
            "read_write"
          ],
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "create_option": {
          "aliases": [],
          "description": "C(import) from a VHD file in I(source_uri) and C(copy) from previous managed disk I(source_uri).",
          "required": false,
          "choices": [
            "empty",
            "import",
            "copy"
          ],
          "suboptions": {}
        },
        "disk_size_gb": {
          "aliases": [],
          "description": "Size in GB of the managed disk to be created.\nIf I(create_option=copy) then the value must be greater than or equal to the source's size.",
          "required": false,
          "suboptions": {}
        },
        "location": {
          "aliases": [],
          "description": "Valid Azure location. Defaults to location of the resource group.",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "lun": {
          "aliases": [],
          "description": "The logical unit number for data disk.\nThis value is used to identify data disks within the VM and therefore must be unique for each data disk attached to a VM.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "managed_by": {
          "aliases": [],
          "description": "Name of an existing virtual machine with which the disk is or will be associated, this VM should be in the same resource group.\nTo detach a disk from a vm, explicitly set to ''.\nIf this option is unset, the value will not be changed.",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the managed disk.",
          "required": true,
          "suboptions": {}
        },
        "os_type": {
          "aliases": [],
          "description": "Type of Operating System.\nUsed when I(create_option=copy) or I(create_option=import) and the source is an OS disk.\nIf omitted during creation, no value is set.\nIf omitted during an update, no change is made.\nOnce set, this value cannot be cleared.",
          "required": false,
          "choices": [
            "linux",
            "windows"
          ],
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Name of a resource group where the managed disk exists or will be created.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "source_uri": {
          "aliases": [
            "source_resource_uri"
          ],
          "description": "URI to a valid VHD file to be used or the resource ID of the managed disk to copy.",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Assert the state of the managed disk. Use C(present) to create or update a managed disk and C(absent) to delete a managed disk.",
          "default": "present",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "storage_account_type": {
          "aliases": [],
          "description": "Type of storage for the managed disk.\nIf not specified, the disk is created as C(Standard_LRS).\nC(Standard_LRS) is for Standard HDD.\nC(StandardSSD_LRS) (added in 2.8) is for Standard SSD.\nC(Premium_LRS) is for Premium SSD.\nC(UltraSSD_LRS) (added in 2.8) is for Ultra SSD, which is in preview mode, and only available on select instance types.\nSee U(https://docs.microsoft.com/en-us/azure/virtual-machines/windows/disks-types) for more information about disk types.",
          "required": false,
          "choices": [
            "Standard_LRS",
            "StandardSSD_LRS",
            "Premium_LRS",
            "UltraSSD_LRS"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Tags to assign to the managed disk.\nFormat tags as 'key' or 'key:value'.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "zone": {
          "aliases": [],
          "description": "The Azure managed disk's zone.\nAllowed values are C(1), C(2), C(3) and C(' ').",
          "required": false,
          "choices": [
            "1",
            "2",
            "3"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage Azure Manage Disks",
      "version_added": "0.1.2"
    },
    "examples": "\n    - name: Create managed disk\n      azure_rm_manageddisk:\n        name: mymanageddisk\n        location: eastus\n        resource_group: myResourceGroup\n        disk_size_gb: 4\n\n    - name: Create managed operating system disk from page blob\n      azure_rm_manageddisk:\n        name: mymanageddisk\n        location: eastus2\n        resource_group: myResourceGroup\n        create_option: import\n        source_uri: https://storageaccountname.blob.core.windows.net/containername/blob-name.vhd\n        os_type: windows\n        storage_account_type: Premium_LRS\n\n    - name: Mount the managed disk to VM\n      azure_rm_manageddisk:\n        name: mymanageddisk\n        location: eastus\n        resource_group: myResourceGroup\n        disk_size_gb: 4\n        managed_by: testvm001\n        attach_caching: read_only\n\n    - name: Unmount the managed disk to VM\n      azure_rm_manageddisk:\n        name: mymanageddisk\n        location: eastus\n        resource_group: myResourceGroup\n        managed_by: ''\n        disk_size_gb: 4\n\n    - name: Delete managed disk\n      azure_rm_manageddisk:\n        name: mymanageddisk\n        location: eastus\n        resource_group: myResourceGroup\n        state: absent\n"
  },
  "azure.azcollection.azure_rm_manageddisk_info": {
    "doc": {
      "description": "Get facts for a specific managed disk or all managed disks.",
      "has_action": false,
      "notes": "This module was called M(azure_rm_managed_disk_facts) before Ansible 2.8. The usage did not change.\nFor authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "managed_by": {
          "aliases": [],
          "description": "Limit results to disks managed by the given VM fqid.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Limit results to a specific managed disk.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Limit results to a specific resource group.\nRequired if I(name) is set",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags.\nFormat tags as 'key' or 'key:value'.",
          "type": "list",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get managed disk facts",
      "version_added": "0.1.2"
    },
    "examples": "\n- name: Get facts for one managed disk\n  azure_rm_manageddisk_info:\n    name: Testing\n    resource_group: myResourceGroup\n\n- name: Get facts for all managed disks\n  azure_rm_manageddisk_info:\n\n- name: Get facts for all managed disks managed by a specific vm\n  azure_rm_manageddisk_info:\n    managed_by: '/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/rgName/Microsoft.Compute/virtualMachines/vmName'\n\n- name: Get facts by tags\n  azure_rm_manageddisk_info:\n    tags:\n    - testing\n"
  },
  "azure.azcollection.azure_rm_managementgroup": {
    "doc": {
      "description": "Create, update and delete instance of Azure ManagementGroup.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "group_id": {
          "aliases": [],
          "description": "Management Group ID.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "id": {
          "aliases": [],
          "description": "The fully qualified ID for the management group.\nFor example /providers/Microsoft.Management/managementGroups/0000000-0000-0000-0000-000000000000.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the management group.\nFor example 00000000-0000-0000-0000-000000000000.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "properties": {
          "aliases": [],
          "description": "The properties of the management group.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "display_name": {
              "aliases": [],
              "description": "The friendly name of the management group.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "parent_id": {
              "aliases": [],
              "description": "The parent of the management group.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "tenant_id": {
              "aliases": [],
              "description": "The AAD Tenant ID associated with the management group.\nFor example 00000000-0000-0000-0000-000000000000.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Assert the state of the ManagementGroup.\nUse C(present) to create or update an ManagementGroup and C(absent) to delete it.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "type": {
          "aliases": [],
          "description": "The type of the resource.\nFor example /providers/Microsoft.Management/managementGroups.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage Azure ManagementGroup instance",
      "version_added": "0.1.1"
    },
    "examples": "\n- name: create management group\n  azure_rm_managementgroup:\n    group_id: ChildGroup\n    type: /providers/Microsoft.Management/managementGroups/\n    name: ChildGroup\n    properties:\n      tenantId: 20000000-0000-0000-0000-000000000000\n      display_name: ChildGroup\n      parent_id: /providers/Microsoft.Management/managementGroups/RootGroup\n\n- name: delete management group\n  azure_rm_managementgroup:\n    group_id: ChildGroup\n    state: absent\n\n"
  },
  "azure.azcollection.azure_rm_managementgroup_info": {
    "doc": {
      "description": "Get facts for a specific Management Group or all Management Groups.",
      "has_action": false,
      "notes": "azure_rm_managementgroup_info - The roles assigned to the principal executing the playbook will determine what is a root management_group. You may also be able to request the details of a parent management group, but unable to fetch that group. It is highly recommended that if I(children) is set c(True) that specific management groups are requested since a list of all groups will require an additional Azure API call for each returned group.\nFor authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "children": {
          "aliases": [],
          "description": "If c(False), then only I(name) or I(id) group will be fetched, or only the list of root groups.\nIf c(True), then the children groups will also be returned.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "flatten": {
          "aliases": [],
          "description": "If c(True) then child management_groups and subscriptions will be copied to the root of the management_groups and subscriptions return list respectively.\nBy default c(False), child elements will only apear in the nested complex.\nOption only matters when I(children) is c(True), and will otherwise be silently ignored.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "id": {
          "aliases": [],
          "description": "Limit results to a specific management group by id.\nMutually exclusive with I(name).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [
            "management_group_name"
          ],
          "description": "Limit results to a specific management group by name.\nMutually exclusive with I(id).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "recurse": {
          "aliases": [],
          "description": "By default, c(False), only the direct children are returned if I(children) is c(True).\nIf c(True), then all descendants of the heirarchy are returned.\nOption only matters when I(children) is c(True), and will otherwise be silently ignored.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure Management Group facts",
      "version_added": "1.5.0"
    },
    "examples": "\n- name: Get facts for all root management groups for authenticated principal\n  azure_rm_managementgroup_info:\n\n- name: Get facts for one management group by id with direct children\n  azure_rm_managementgroup_info:\n    id: /providers/Microsoft.Management/managementGroups/contoso-group\n    children: True\n\n- name: Get facts for one management group by name with all children, flattened into top list\n  azure_rm_managementgroup_info:\n    name: \"contoso-group\"\n    children: True\n    recurse: True\n    flatten: True\n"
  },
  "azure.azcollection.azure_rm_mariadbconfiguration": {
    "doc": {
      "description": "Create, update and delete instance of Configuration.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the server configuration.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group that contains the resource.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "server_name": {
          "aliases": [],
          "description": "The name of the server.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Assert the state of the MariaDB configuration. Use C(present) to update setting, or C(absent) to reset to default value.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "value": {
          "aliases": [],
          "description": "Value of the configuration.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage Configuration instance",
      "version_added": "0.1.2"
    },
    "examples": "\n  - name: Update SQL Server setting\n    azure_rm_mariadbconfiguration:\n      resource_group: myResourceGroup\n      server_name: myServer\n      name: event_scheduler\n      value: \"ON\"\n"
  },
  "azure.azcollection.azure_rm_mariadbconfiguration_info": {
    "doc": {
      "description": "Get facts of Azure MariaDB Configuration.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Setting name.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "server_name": {
          "aliases": [],
          "description": "The name of the server.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure MariaDB Configuration facts",
      "version_added": "0.1.2"
    },
    "examples": "\n  - name: Get specific setting of MariaDB Server\n    azure_rm_mariadbconfiguration_info:\n      resource_group: myResourceGroup\n      server_name: testserver\n      name: deadlock_timeout\n\n  - name: Get all settings of MariaDB Server\n    azure_rm_mariadbconfiguration_info:\n      resource_group: myResourceGroup\n      server_name: server_name\n"
  },
  "azure.azcollection.azure_rm_mariadbdatabase": {
    "doc": {
      "description": "Create, update and delete instance of MariaDB Database.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "charset": {
          "aliases": [],
          "description": "The charset of the database. Check MariaDB documentation for possible values.\nThis is only set on creation, use I(force_update) to recreate a database if the values don't match.",
          "required": false,
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "collation": {
          "aliases": [],
          "description": "The collation of the database. Check MariaDB documentation for possible values.\nThis is only set on creation, use I(force_update) to recreate a database if the values don't match.",
          "required": false,
          "suboptions": {}
        },
        "force_update": {
          "aliases": [],
          "description": "When set to C(true), will delete and recreate the existing MariaDB database if any of the properties don't match what is set.\nWhen set to C(false), no change will occur to the database even if any of the properties do not match.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the database.",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "server_name": {
          "aliases": [],
          "description": "The name of the server.",
          "required": true,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Assert the state of the MariaDB Database. Use C(present) to create or update a database and C(absent) to delete it.",
          "default": "present",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage MariaDB Database instance",
      "version_added": "0.1.2"
    },
    "examples": "\n  - name: Create (or update) MariaDB Database\n    azure_rm_mariadbdatabase:\n      resource_group: myResourceGroup\n      server_name: testserver\n      name: db1\n"
  },
  "azure.azcollection.azure_rm_mariadbdatabase_info": {
    "doc": {
      "description": "Get facts of MariaDB Database.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the database.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "server_name": {
          "aliases": [],
          "description": "The name of the server.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure MariaDB Database facts",
      "version_added": "0.1.2"
    },
    "examples": "\n  - name: Get instance of MariaDB Database\n    azure_rm_mariadbdatabase_info:\n      resource_group: myResourceGroup\n      server_name: server_name\n      name: database_name\n\n  - name: List instances of MariaDB Database\n    azure_rm_mariadbdatabase_info:\n      resource_group: myResourceGroup\n      server_name: server_name\n"
  },
  "azure.azcollection.azure_rm_mariadbfirewallrule": {
    "doc": {
      "description": "Create, update and delete instance of MariaDB firewall rule.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "end_ip_address": {
          "aliases": [],
          "description": "The end IP address of the MariaDB firewall rule. Must be IPv4 format.",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the MariaDB firewall rule.",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "server_name": {
          "aliases": [],
          "description": "The name of the server.",
          "required": true,
          "suboptions": {}
        },
        "start_ip_address": {
          "aliases": [],
          "description": "The start IP address of the MariaDB firewall rule. Must be IPv4 format.",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Assert the state of the MariaDB firewall rule. Use C(present) to create or update a rule and C(absent) to ensure it is not present.",
          "default": "present",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage MariaDB firewall rule instance",
      "version_added": "0.1.2"
    },
    "examples": "\n  - name: Create (or update) MariaDB firewall rule\n    azure_rm_mariadbfirewallrule:\n      resource_group: myResourceGroup\n      server_name: testserver\n      name: rule1\n      start_ip_address: 10.0.0.17\n      end_ip_address: 10.0.0.20\n"
  },
  "azure.azcollection.azure_rm_mariadbfirewallrule_info": {
    "doc": {
      "description": "Get facts of Azure MariaDB Firewall Rule.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the server firewall rule.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "server_name": {
          "aliases": [],
          "description": "The name of the server.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure MariaDB Firewall Rule facts",
      "version_added": "0.0.1"
    },
    "examples": "\n  - name: Get instance of MariaDB Firewall Rule\n    azure_rm_mariadbfirewallrule_info:\n      resource_group: myResourceGroup\n      server_name: server_name\n      name: firewall_rule_name\n\n  - name: List instances of MariaDB Firewall Rule\n    azure_rm_mariadbfirewallrule_info:\n      resource_group: myResourceGroup\n      server_name: server_name\n"
  },
  "azure.azcollection.azure_rm_mariadbserver": {
    "doc": {
      "description": "Create, update and delete instance of MariaDB Server.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "admin_password": {
          "aliases": [],
          "description": "The password of the administrator login.",
          "required": false,
          "suboptions": {}
        },
        "admin_username": {
          "aliases": [],
          "description": "The administrator's login name of a server. Can only be specified when the server is being created (and is required for creation).",
          "required": false,
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "create_mode": {
          "aliases": [],
          "description": "Create mode of SQL Server.",
          "default": "Default",
          "required": false,
          "suboptions": {}
        },
        "enforce_ssl": {
          "aliases": [],
          "description": "Enable SSL enforcement.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "location": {
          "aliases": [],
          "description": "Resource location. If not set, location from the resource group will be used as default.",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the server.",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "sku": {
          "aliases": [],
          "description": "The SKU (pricing tier) of the server.",
          "required": false,
          "suboptions": {
            "capacity": {
              "aliases": [],
              "description": "The scale up/out capacity, representing server's compute units.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "name": {
              "aliases": [],
              "description": "The name of the SKU, typically, tier + family + cores, for example C(B_Gen4_1), C(GP_Gen5_8).",
              "required": false,
              "suboptions": {}
            },
            "size": {
              "aliases": [],
              "description": "The size code, to be interpreted by resource as appropriate.",
              "required": false,
              "suboptions": {}
            },
            "tier": {
              "aliases": [],
              "description": "The tier of the particular SKU, for example C(Basic).",
              "required": false,
              "choices": [
                "basic",
                "standard"
              ],
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "Assert the state of the MariaDB Server. Use C(present) to create or update a server and C(absent) to delete it.",
          "default": "present",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "storage_mb": {
          "aliases": [],
          "description": "The maximum storage allowed for a server.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "version": {
          "aliases": [],
          "description": "Server version.",
          "required": false,
          "choices": [
            "10.2",
            "10.3"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage MariaDB Server instance",
      "version_added": "0.1.2"
    },
    "examples": "\n  - name: Create (or update) MariaDB Server\n    azure_rm_mariadbserver:\n      resource_group: myResourceGroup\n      name: testserver\n      sku:\n        name: B_Gen5_1\n        tier: Basic\n      location: eastus\n      storage_mb: 1024\n      enforce_ssl: True\n      version: 10.2\n      admin_username: cloudsa\n      admin_password: password\n"
  },
  "azure.azcollection.azure_rm_mariadbserver_info": {
    "doc": {
      "description": "Get facts of MariaDB Server.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the server.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "type": "list",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure MariaDB Server facts",
      "version_added": "0.1.2"
    },
    "examples": "\n  - name: Get instance of MariaDB Server\n    azure_rm_mariadbserver_info:\n      resource_group: myResourceGroup\n      name: server_name\n\n  - name: List instances of MariaDB Server\n    azure_rm_mariadbserver_info:\n      resource_group: myResourceGroup\n"
  },
  "azure.azcollection.azure_rm_monitorlogprofile": {
    "doc": {
      "description": "Create, update and delete instance of Azure Monitor log profile.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "categories": {
          "aliases": [],
          "description": "List of categories of logs. These categories are created as is convenient to  user. Some Values are C(Write), C(Delete) and/or C(Action).",
          "type": "list",
          "required": false,
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "location": {
          "aliases": [],
          "description": "Resource location.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "locations": {
          "aliases": [],
          "description": "List of regions for which Activity Log events should be stored.",
          "type": "list",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Unique name of the log profile to create or update.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "retention_policy": {
          "aliases": [],
          "description": "Retention policy for events in the log.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "days": {
              "aliases": [],
              "description": "The number of days for the retention. A value of 0 will retain the events indefinitely.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "enabled": {
              "aliases": [],
              "description": "Whether the retention policy is enabled.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_bus_rule_id": {
          "aliases": [],
          "description": "The service bus rule  ID of the service bus namespace in which you would like to have Event Hubs created for streaming in the Activity Log.\nFormat like {service_bus_resource_id}/authorizationrules{key_name}.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Assert the state of the log profile.\nUse C(present) to create or update a log profile and C(absent) to delete it.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "storage_account": {
          "aliases": [],
          "description": "The storage account to which send the Activity Log.\nIt could be a resource ID.\nIt could be a dict containing I(resource_grorup) and I(name).",
          "type": "raw",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage Azure Monitor log profile",
      "version_added": "0.0.1"
    },
    "examples": "\n  - name: Create a log profile\n    azure_rm_monitorlogprofile:\n      name: myProfile\n      location: eastus\n      locations:\n        - eastus\n        - westus\n      categories:\n        - Write\n        - Action\n      retention_policy:\n        enabled: False\n        days: 1\n      storage_account:\n        resource_group: myResourceGroup\n        name: myStorageAccount\n    register: output\n\n  - name: Delete a log profile\n    azure_rm_monitorlogprofile:\n      name: myProfile\n      state: absent\n"
  },
  "azure.azcollection.azure_rm_mysqlconfiguration": {
    "doc": {
      "description": "Create, update and delete instance of Configuration.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the server configuration.",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group that contains the resource.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "server_name": {
          "aliases": [],
          "description": "The name of the server.",
          "required": true,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Assert the state of the MySQL configuration. Use C(present) to update setting, or C(absent) to reset to default value.",
          "default": "present",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "value": {
          "aliases": [],
          "description": "Value of the configuration.",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage Configuration instance",
      "version_added": "0.1.2"
    },
    "examples": "\n  - name: Update SQL Server setting\n    azure_rm_mysqlconfiguration:\n      resource_group: myResourceGroup\n      server_name: myServer\n      name: event_scheduler\n      value: \"ON\"\n"
  },
  "azure.azcollection.azure_rm_mysqlconfiguration_info": {
    "doc": {
      "description": "Get facts of Azure MySQL Configuration.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Setting name.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "server_name": {
          "aliases": [],
          "description": "The name of the server.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure MySQL Configuration facts",
      "version_added": "0.1.2"
    },
    "examples": "\n  - name: Get specific setting of MySQL Server\n    azure_rm_mysqlconfiguration_info:\n      resource_group: myResourceGroup\n      server_name: testmysqlserver\n      name: deadlock_timeout\n\n  - name: Get all settings of MySQL Server\n    azure_rm_mysqlconfiguration_info:\n      resource_group: myResourceGroup\n      server_name: server_name\n"
  },
  "azure.azcollection.azure_rm_mysqldatabase": {
    "doc": {
      "description": "Create, update and delete instance of MySQL Database.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "charset": {
          "aliases": [],
          "description": "The charset of the database. Check MySQL documentation for possible values.\nThis is only set on creation, use I(force_update) to recreate a database if the values don't match.",
          "required": false,
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "collation": {
          "aliases": [],
          "description": "The collation of the database. Check MySQL documentation for possible values.\nThis is only set on creation, use I(force_update) to recreate a database if the values don't match.",
          "required": false,
          "suboptions": {}
        },
        "force_update": {
          "aliases": [],
          "description": "When set to C(true), will delete and recreate the existing MySQL database if any of the properties don't match what is set.\nWhen set to C(false), no change will occur to the database even if any of the properties do not match.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the database.",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "server_name": {
          "aliases": [],
          "description": "The name of the server.",
          "required": true,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Assert the state of the MySQL Database. Use C(present) to create or update a database and C(absent) to delete it.",
          "default": "present",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage MySQL Database instance",
      "version_added": "0.1.2"
    },
    "examples": "\n  - name: Create (or update) MySQL Database\n    azure_rm_mysqldatabase:\n      resource_group: myResourceGroup\n      server_name: testserver\n      name: db1\n"
  },
  "azure.azcollection.azure_rm_mysqldatabase_info": {
    "doc": {
      "description": "Get facts of MySQL Database.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the database.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "server_name": {
          "aliases": [],
          "description": "The name of the server.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure MySQL Database facts",
      "version_added": "0.1.2"
    },
    "examples": "\n  - name: Get instance of MySQL Database\n    azure_rm_mysqldatabase_info:\n      resource_group: myResourceGroup\n      server_name: server_name\n      name: database_name\n\n  - name: List instances of MySQL Database\n    azure_rm_mysqldatabase_info:\n      resource_group: myResourceGroup\n      server_name: server_name\n"
  },
  "azure.azcollection.azure_rm_mysqlfirewallrule": {
    "doc": {
      "description": "Create, update and delete instance of MySQL firewall rule.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "end_ip_address": {
          "aliases": [],
          "description": "The end IP address of the MySQL firewall rule. Must be IPv4 format.",
          "required": true,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the MySQL firewall rule.",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "server_name": {
          "aliases": [],
          "description": "The name of the server.",
          "required": true,
          "suboptions": {}
        },
        "start_ip_address": {
          "aliases": [],
          "description": "The start IP address of the MySQL firewall rule. Must be IPv4 format.",
          "required": true,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Assert the state of the MySQL firewall rule. Use C(present) to create or update a rule and C(absent) to ensure it is not present.",
          "default": "present",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage MySQL firewall rule instance",
      "version_added": "0.1.2"
    },
    "examples": "\n  - name: Create (or update) MySQL firewall rule\n    azure_rm_mysqlfirewallrule:\n      resource_group: myResourceGroup\n      server_name: testserver\n      name: rule1\n      start_ip_address: 10.0.0.17\n      end_ip_address: 10.0.0.20\n"
  },
  "azure.azcollection.azure_rm_mysqlfirewallrule_info": {
    "doc": {
      "description": "Get facts of Azure MySQL Firewall Rule.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the server firewall rule.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "server_name": {
          "aliases": [],
          "description": "The name of the server.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure MySQL Firewall Rule facts",
      "version_added": "0.1.2"
    },
    "examples": "\n  - name: Get instance of MySQL Firewall Rule\n    azure_rm_mysqlfirewallrule_info:\n      resource_group: myResourceGroup\n      server_name: server_name\n      name: firewall_rule_name\n\n  - name: List instances of MySQL Firewall Rule\n    azure_rm_mysqlfirewallrule_info:\n      resource_group: myResourceGroup\n      server_name: server_name\n"
  },
  "azure.azcollection.azure_rm_mysqlserver": {
    "doc": {
      "description": "Create, update and delete instance of MySQL Server.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "admin_password": {
          "aliases": [],
          "description": "The password of the administrator login.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "admin_username": {
          "aliases": [],
          "description": "The administrator's login name of a server.\nCan only be specified when the server is being created (and is required for creation).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "create_mode": {
          "aliases": [],
          "description": "Create mode of SQL Server.",
          "default": "Default",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "enforce_ssl": {
          "aliases": [],
          "description": "Enable SSL enforcement.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "location": {
          "aliases": [],
          "description": "Resource location. If not set, location from the resource group will be used as default.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the server.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "restarted": {
          "aliases": [],
          "description": "Set to C(true) with I(state=present) to restart a running mysql server.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "sku": {
          "aliases": [],
          "description": "The SKU (pricing tier) of the server.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "capacity": {
              "aliases": [],
              "description": "The scale up/out capacity, representing server's compute units.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "name": {
              "aliases": [],
              "description": "The name of the sku, typically, tier + family + cores, for example C(B_Gen4_1), C(GP_Gen5_8).",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "size": {
              "aliases": [],
              "description": "The size code, to be interpreted by resource as appropriate.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "tier": {
              "aliases": [],
              "description": "The tier of the particular SKU, for example C(Basic).",
              "type": "str",
              "required": false,
              "choices": [
                "basic",
                "standard"
              ],
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "Assert the state of the MySQL Server. Use C(present) to create or update a server and C(absent) to delete it.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "storage_profile": {
          "aliases": [],
          "description": "Storage Profile properties of a server.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "backup_retention_days": {
              "aliases": [],
              "description": "Backup retention days for the server",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "geo_redundant_backup": {
              "aliases": [],
              "description": "Enable Geo-redundant or not for server backup.",
              "type": "str",
              "required": false,
              "choices": [
                "Disabled",
                "Enabled"
              ],
              "suboptions": {}
            },
            "storage_autogrow": {
              "aliases": [],
              "description": "Enable Storage Auto Grow.",
              "type": "str",
              "required": false,
              "choices": [
                "Disabled",
                "Enabled"
              ],
              "suboptions": {}
            },
            "storage_mb": {
              "aliases": [],
              "description": "The maximum storage allowed for a server.",
              "type": "int",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "version": {
          "aliases": [],
          "description": "Server version.",
          "type": "str",
          "required": false,
          "choices": [
            "5.7",
            "8.0"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage MySQL Server instance",
      "version_added": "0.1.2"
    },
    "examples": "\n  - name: Create (or update) MySQL Server\n    azure_rm_mysqlserver:\n      resource_group: myResourceGroup\n      name: testserver\n      sku:\n        name: B_Gen5_1\n        tier: Basic\n      location: eastus\n      storage_profile:\n        storage_mb: 51200\n        backup_retention_days: 7\n        geo_redundant_backup: Disabled\n        storage_autogrow: Disabled\n      enforce_ssl: True\n      version: 5.7\n      admin_username: cloudsa\n      admin_password: password\n"
  },
  "azure.azcollection.azure_rm_mysqlserver_info": {
    "doc": {
      "description": "Get facts of MySQL Server.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the server.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure MySQL Server facts",
      "version_added": "0.1.2"
    },
    "examples": "\n  - name: Get instance of MySQL Server\n    azure_rm_mysqlserver_info:\n      resource_group: myResourceGroup\n      name: server_name\n\n  - name: List instances of MySQL Server\n    azure_rm_mysqlserver_info:\n      resource_group: myResourceGroup\n"
  },
  "azure.azcollection.azure_rm_networkinterface": {
    "doc": {
      "description": "Create, update or delete a network interface.\nWhen creating a network interface you must provide the name of an existing virtual network, the name of an existing subnet within the virtual network.\nA default security group and public IP address will be created automatically.\nOr you can provide the name of an existing security group and public IP address.\nSee the examples below for more details.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "create_with_security_group": {
          "aliases": [],
          "description": "Whether a security group should be be created with the NIC.\nIf this flag set to C(True) and no I(security_group) set, a default security group will be created.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "dns_servers": {
          "aliases": [],
          "description": "Which DNS servers should the NIC lookup.\nList of IP addresses.",
          "type": "list",
          "required": false,
          "suboptions": {}
        },
        "enable_accelerated_networking": {
          "aliases": [],
          "description": "Whether the network interface should be created with the accelerated networking feature or not.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "enable_ip_forwarding": {
          "aliases": [
            "ip_forwarding"
          ],
          "description": "Whether to enable IP forwarding.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ip_configurations": {
          "aliases": [],
          "description": "List of IP configurations. Each configuration object should include field I(private_ip_address), I(private_ip_allocation_method), I(public_ip_address_name), I(public_ip), I(public_ip_allocation_method), I(name).",
          "required": false,
          "suboptions": {
            "application_security_groups": {
              "aliases": [],
              "description": "List of application security groups in which the IP configuration is included.\nElement of the list could be a resource id of application security group, or dict of I(resource_group) and I(name).",
              "required": false,
              "suboptions": {}
            },
            "load_balancer_backend_address_pools": {
              "aliases": [],
              "description": "List of existing load-balancer backend address pools to associate with the network interface.\nCan be written as a resource ID.\nAlso can be a dict of I(name) and I(load_balancer).",
              "required": false,
              "suboptions": {}
            },
            "name": {
              "aliases": [],
              "description": "Name of the IP configuration.",
              "required": true,
              "suboptions": {}
            },
            "primary": {
              "aliases": [],
              "description": "Whether the IP configuration is the primary one in the list.\nThe first IP configuration default set to I(primary=True).",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "private_ip_address": {
              "aliases": [],
              "description": "Private IP address for the IP configuration.",
              "required": false,
              "suboptions": {}
            },
            "private_ip_address_version": {
              "aliases": [],
              "description": "The version of the IP configuration.",
              "default": "IPv4",
              "required": false,
              "choices": [
                "IPv4",
                "IPv6"
              ],
              "suboptions": {}
            },
            "private_ip_allocation_method": {
              "aliases": [],
              "description": "Private IP allocation method.",
              "default": "Dynamic",
              "required": false,
              "choices": [
                "Dynamic",
                "Static"
              ],
              "suboptions": {}
            },
            "public_ip_address_name": {
              "aliases": [
                "public_ip_address",
                "public_ip_name"
              ],
              "description": "Name of the public IP address. None for disable IP address.",
              "required": false,
              "suboptions": {}
            },
            "public_ip_allocation_method": {
              "aliases": [],
              "description": "Public IP allocation method.",
              "default": "Dynamic",
              "required": false,
              "choices": [
                "Dynamic",
                "Static"
              ],
              "suboptions": {}
            }
          }
        },
        "location": {
          "aliases": [],
          "description": "Valid Azure location. Defaults to location of the resource group.",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the network interface.",
          "required": true,
          "suboptions": {}
        },
        "open_ports": {
          "aliases": [],
          "description": "When a default security group is created for a Linux host a rule will be added allowing inbound TCP connections to the default SSH port C(22), and for a Windows host rules will be added allowing inbound access to RDP ports C(3389) and C(5986). Override the default ports by providing a list of open ports.",
          "required": false,
          "suboptions": {}
        },
        "os_type": {
          "aliases": [],
          "description": "Determines any rules to be added to a default security group.\nWhen creating a network interface, if no security group name is provided, a default security group will be created.\nIf the I(os_type=Windows), a rule allowing RDP access will be added.\nIf the I(os_type=Linux), a rule allowing SSH access will be added.",
          "default": "Linux",
          "required": false,
          "choices": [
            "Windows",
            "Linux"
          ],
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "private_ip_address": {
          "aliases": [],
          "description": "(Deprecate) Valid IPv4 address that falls within the specified subnet.\nThis option will be deprecated in 2.9, use I(ip_configurations) instead.",
          "required": false,
          "suboptions": {}
        },
        "private_ip_allocation_method": {
          "aliases": [],
          "description": "(Deprecate) Whether or not the assigned IP address is permanent.\nWhen creating a network interface, if you specify I(private_ip_address=Static), you must provide a value for I(private_ip_address).\nYou can update the allocation method to C(Static) after a dynamic private IP address has been assigned.\nThis option will be deprecated in 2.9, use I(ip_configurations) instead.",
          "default": "Dynamic",
          "required": false,
          "choices": [
            "Dynamic",
            "Static"
          ],
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "public_ip": {
          "aliases": [],
          "description": "(Deprecate) When creating a network interface, if no public IP address name is provided a default public IP address will be created.\nSet to C(false) if you do not want a public IP address automatically created.\nThis option will be deprecated in 2.9, use I(ip_configurations) instead.",
          "default": "yes",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "public_ip_address_name": {
          "aliases": [
            "public_ip_address",
            "public_ip_name"
          ],
          "description": "(Deprecate) Name of an existing public IP address object to associate with the security group.\nThis option will be deprecated in 2.9, use I(ip_configurations) instead.",
          "required": false,
          "suboptions": {}
        },
        "public_ip_allocation_method": {
          "aliases": [],
          "description": "(Deprecate) If a I(public_ip_address_name) is not provided, a default public IP address will be created.\nThe allocation method determines whether or not the public IP address assigned to the network interface is permanent.\nThis option will be deprecated in 2.9, use I(ip_configurations) instead.",
          "default": "Dynamic",
          "required": false,
          "choices": [
            "Dynamic",
            "Static"
          ],
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Name of a resource group where the network interface exists or will be created.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_group": {
          "aliases": [
            "security_group_name"
          ],
          "description": "An existing security group with which to associate the network interface.\nIf not provided, a default security group will be created when I(create_with_security_group=true).\nIt can be the name of security group.\nMake sure the security group is in the same resource group when you only give its name.\nIt can be the resource id.\nIt can be a dict contains security_group's I(name) and I(resource_group).",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Assert the state of the network interface. Use C(present) to create or update an interface and C(absent) to delete an interface.",
          "default": "present",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "subnet_name": {
          "aliases": [
            "subnet"
          ],
          "description": "Name of an existing subnet within the specified virtual network. Required when creating a network interface.\nUse the C(virtual_network)'s resource group.",
          "required": true,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "virtual_network": {
          "aliases": [
            "virtual_network_name"
          ],
          "description": "An existing virtual network with which the network interface will be associated. Required when creating a network interface.\nIt can be the virtual network's name.\nMake sure your virtual network is in the same resource group as NIC when you give only the name.\nIt can be the virtual network's resource id.\nIt can be a dict which contains I(name) and I(resource_group) of the virtual network.",
          "required": true,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage Azure network interfaces",
      "version_added": "0.1.0"
    },
    "examples": "\n    - name: Create a network interface with minimal parameters\n      azure_rm_networkinterface:\n        name: nic001\n        resource_group: myResourceGroup\n        virtual_network: vnet001\n        subnet_name: subnet001\n        ip_configurations:\n          - name: ipconfig1\n            public_ip_address_name: publicip001\n            primary: True\n\n    - name: Create a network interface with private IP address only (no Public IP)\n      azure_rm_networkinterface:\n        name: nic001\n        resource_group: myResourceGroup\n        virtual_network: vnet001\n        subnet_name: subnet001\n        create_with_security_group: False\n        ip_configurations:\n          - name: ipconfig1\n            primary: True\n\n    - name: Create a network interface for use in a Windows host (opens RDP port) with custom RDP port\n      azure_rm_networkinterface:\n        name: nic002\n        resource_group: myResourceGroup\n        virtual_network: vnet001\n        subnet_name: subnet001\n        os_type: Windows\n        rdp_port: 3399\n        security_group: \"/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroup/myResourceGroup/providers/Microsoft.Network/networkSecurit\n                         yGroups/nsg001\"\n        ip_configurations:\n          - name: ipconfig1\n            public_ip_address_name: publicip001\n            primary: True\n\n    - name: Create a network interface using existing security group and public IP\n      azure_rm_networkinterface:\n        name: nic003\n        resource_group: myResourceGroup\n        virtual_network: vnet001\n        subnet_name: subnet001\n        security_group: secgroup001\n        ip_configurations:\n          - name: ipconfig1\n            public_ip_address_name: publicip001\n            primary: True\n\n    - name: Create a network with multiple ip configurations\n      azure_rm_networkinterface:\n        name: nic004\n        resource_group: myResourceGroup\n        subnet_name: subnet001\n        virtual_network: vnet001\n        security_group:\n          name: testnic002\n          resource_group: Testing1\n        ip_configurations:\n          - name: ipconfig1\n            public_ip_address_name: publicip001\n            primary: True\n          - name: ipconfig2\n            load_balancer_backend_address_pools:\n              - \"{{ loadbalancer001.state.backend_address_pools[0].id }}\"\n              - name: backendaddrpool1\n                load_balancer: loadbalancer001\n\n    - name: Create a network interface in accelerated networking mode\n      azure_rm_networkinterface:\n        name: nic005\n        resource_group: myResourceGroup\n        virtual_network_name: vnet001\n        subnet_name: subnet001\n        enable_accelerated_networking: True\n\n    - name: Create a network interface with IP forwarding\n      azure_rm_networkinterface:\n        name: nic001\n        resource_group: myResourceGroup\n        virtual_network: vnet001\n        subnet_name: subnet001\n        ip_forwarding: True\n        ip_configurations:\n          - name: ipconfig1\n            public_ip_address_name: publicip001\n            primary: True\n\n    - name: Create a network interface with dns servers\n      azure_rm_networkinterface:\n        name: nic009\n        resource_group: myResourceGroup\n        virtual_network: vnet001\n        subnet_name: subnet001\n        dns_servers:\n          - 8.8.8.8\n\n    - name: Delete network interface\n      azure_rm_networkinterface:\n        resource_group: myResourceGroup\n        name: nic003\n        state: absent\n"
  },
  "azure.azcollection.azure_rm_networkinterface_info": {
    "doc": {
      "description": "Get facts for a specific network interface or all network interfaces within a resource group.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Only show results for a specific network interface.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Name of the resource group containing the network interface(s). Required when searching by name.",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get network interface facts",
      "version_added": "0.1.2"
    },
    "examples": "\n    - name: Get facts for one network interface\n      azure_rm_networkinterface_info:\n        resource_group: myResourceGroup\n        name: nic001\n\n    - name: Get network interfaces within a resource group\n      azure_rm_networkinterface_info:\n        resource_group: myResourceGroup\n\n    - name: Get network interfaces by tag\n      azure_rm_networkinterface_info:\n        resource_group: myResourceGroup\n        tags:\n          - testing\n          - foo:bar\n"
  },
  "azure.azcollection.azure_rm_notificationhub": {
    "doc": {
      "description": "Create, update and delete instance of Notification Hub.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "location": {
          "aliases": [],
          "description": "Resource location. If not set, location from the resource group will be used as default.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Unique name of the Notification Hub.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "namespace_name": {
          "aliases": [],
          "description": "Name of the namespace in which to create notification hub.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Name of the resource group to which the resource belongs.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "sku": {
          "aliases": [],
          "description": "The name of the SKU.\nPlease see L(https://azure.microsoft.com/en-in/pricing/details/notification-hubs/).",
          "default": "free",
          "type": "str",
          "required": false,
          "choices": [
            "free",
            "basic",
            "standard"
          ],
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Assert the state of the Notification Hub.\nUse C(present) to create or update an notification hub and C(absent) to delete it.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage Notification Hub",
      "version_added": "1.7.0"
    },
    "examples": "\n\n- name: \"Create Notification Hub\"\n  azure_rm_notificationhub:\n    resource_group: testgroupans\n    location: eastus\n    namespace_name: myNamespace\n    name: myhub\n    tags:\n       - a: b\n    sku: free\n\n- name: Delete Notification Hub\n  azure_rm_notificationhub:\n    resource_group: testgroupans\n    name: myNamespace\n    state: absent\n\n- name: \"Create Notification Hub Namespace\"\n  azure_rm_notificationhub:\n    resource_group: testgroupans\n    location: eastus\n    namespace_name: myNamespace\n    tags:\n       - a: b\n    sku: free\n\n- name: Delete Notification Hub Namespace\n  azure_rm_notificationhub:\n    resource_group: testgroupans\n    namespace_name: myNamespace\n    state: absent\n\n"
  },
  "azure.azcollection.azure_rm_notificationhub_info": {
    "doc": {
      "description": "Get facts of Azure Notification Hub",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the Notification hub.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "namespace_name": {
          "aliases": [],
          "description": "The name of the namspace.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure Notification Hub",
      "version_added": "1.7.0"
    },
    "examples": "\n  - name: Get facts of specific notification hub\n    community.azure.azure_rm_notificationhub_info:\n      resource_group: myResourceGroup\n      name: myNotificationHub\n\n"
  },
  "azure.azcollection.azure_rm_openshiftmanagedcluster": {
    "doc": {
      "description": "Create, update and delete instance of Azure Red Hat OpenShift Managed Cluster instance.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_server_profile": {
          "aliases": [],
          "description": "API server configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "ip": {
              "aliases": [],
              "description": "IP address of api server (immutable), only appears in response.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "url": {
              "aliases": [],
              "description": "Url of api server (immutable), only appears in response.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "visibility": {
              "aliases": [],
              "description": "API server visibility.",
              "default": "Public",
              "type": "str",
              "required": false,
              "choices": [
                "Public",
                "Private"
              ],
              "suboptions": {}
            }
          }
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cluster_profile": {
          "aliases": [],
          "description": "Configuration for OpenShift cluster.",
          "default": "{}",
          "type": "dict",
          "required": false,
          "suboptions": {
            "cluster_resource_group_id": {
              "aliases": [],
              "description": "The ID of the cluster resource group (immutable).",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "domain": {
              "aliases": [],
              "description": "The domain for the cluster (immutable).",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "pull_secret": {
              "aliases": [],
              "description": "Pull secret for the cluster (immutable).",
              "default": "",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "version": {
              "aliases": [],
              "description": "The Openshift version (immutable).",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "ingress_profiles": {
          "aliases": [],
          "description": "Ingress profiles configuration. only one profile is supported at the current API version.",
          "type": "list",
          "required": false,
          "suboptions": {
            "ip": {
              "aliases": [],
              "description": "IP of the ingress (immutable), only appears in response.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "name": {
              "aliases": [],
              "description": "Name of the ingress  (immutable).",
              "default": "default",
              "type": "str",
              "required": false,
              "choices": [
                "default"
              ],
              "suboptions": {}
            },
            "visibility": {
              "aliases": [],
              "description": "Ingress visibility.",
              "default": "Public",
              "type": "str",
              "required": false,
              "choices": [
                "Public",
                "Private"
              ],
              "suboptions": {}
            }
          }
        },
        "location": {
          "aliases": [],
          "description": "Resource location.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "master_profile": {
          "aliases": [],
          "description": "Configuration for OpenShift master VMs.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "subnet_id": {
              "aliases": [],
              "description": "The Azure resource ID of the master subnet (immutable).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "vm_size": {
              "aliases": [],
              "description": "Size of agent VMs (immutable).",
              "type": "str",
              "required": false,
              "choices": [
                "Standard_D2s_v3",
                "Standard_D4s_v3",
                "Standard_D8s_v3"
              ],
              "suboptions": {}
            }
          }
        },
        "name": {
          "aliases": [],
          "description": "Resource name.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "network_profile": {
          "aliases": [],
          "description": "Configuration for OpenShift networking (immutable).",
          "default": "{'pod_cidr': '10.128.0.0/14', 'service_cidr': '172.30.0.0/16'}",
          "type": "dict",
          "required": false,
          "suboptions": {
            "pod_cidr": {
              "aliases": [],
              "description": "CIDR for the OpenShift Pods (immutable).",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "service_cidr": {
              "aliases": [],
              "description": "CIDR for OpenShift Services (immutable).",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provisioning_state": {
          "aliases": [],
          "description": "The current deployment or provisioning state, which only appears in the response.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_principal_profile": {
          "aliases": [],
          "description": "service principal.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "client_id": {
              "aliases": [],
              "description": "Client ID of the service principal (immutable).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "client_secret": {
              "aliases": [],
              "description": "Client secret of the service principal (immutable).",
              "type": "str",
              "required": true,
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "Assert the state of the OpenShiftManagedCluster.\nUse C(present) to create or update an OpenShiftManagedCluster and C(absent) to delete it.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "worker_profiles": {
          "aliases": [],
          "description": "Configuration for OpenShift worker Vms.",
          "type": "list",
          "required": false,
          "suboptions": {
            "count": {
              "aliases": [],
              "description": "The number of worker VMs. Must be between 3 and 20 (immutable).",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "disk_size": {
              "aliases": [],
              "description": "The disk size of the worker VMs in GB. Must be 128 or greater (immutable).",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "name": {
              "aliases": [],
              "description": "name of the worker profile (immutable).",
              "type": "str",
              "required": true,
              "choices": [
                "worker"
              ],
              "suboptions": {}
            },
            "subnet_id": {
              "aliases": [],
              "description": "The Azure resource ID of the worker subnet (immutable).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "vm_size": {
              "aliases": [],
              "description": "The size of the worker Vms (immutable).",
              "type": "str",
              "required": false,
              "choices": [
                "Standard_D2s_v3",
                "Standard_D4s_v3",
                "Standard_D8s_v3"
              ],
              "suboptions": {}
            }
          }
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage Azure Red Hat OpenShift Managed Cluster instance",
      "version_added": "1.2.0"
    },
    "examples": "\n    - name: Create openshift cluster\n      azure_rm_openshiftmanagedcluster:\n        resource_group: \"myResourceGroup\"\n        name: \"myCluster\"\n        location: \"eastus\"\n        cluster_profile:\n          cluster_resource_group_id: \"/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/clusterResourceGroup\"\n          domain: \"mydomain\"\n        service_principal_profile:\n          client_id: \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"\n          client_secret: \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"\n        network_profile:\n          pod_cidr: \"10.128.0.0/14\"\n          service_cidr: \"172.30.0.0/16\"\n        worker_profiles:\n          - vm_size : \"Standard_D4s_v3\"\n            subnet_id : \"/subscriptions/xx-xx-xx-xx-xx/resourceGroups/myResourceGroup/Microsoft.Network/virtualNetworks/myVnet/subnets/worker\"\n            disk_size : 128\n            count : 3\n        master_profile:\n          vm_size : \"Standard_D8s_v3\"\n          subnet_id: \"/subscriptions/xx-xx-xx-xx-xx/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/myVnet/subnets/master\"\n    - name: Delete OpenShift Managed Cluster\n      azure_rm_openshiftmanagedcluster:\n        resource_group: myResourceGroup\n        name: myCluster\n        location: eastus\n        state: absent\n"
  },
  "azure.azcollection.azure_rm_postgresqlconfiguration": {
    "doc": {
      "description": "Update or reset Azure PostgreSQL Configuration setting.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Setting name.",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group that contains the resource.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "server_name": {
          "aliases": [],
          "description": "The name of the server.",
          "required": true,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Assert the state of the PostgreSQL setting. Use C(present) to update setting, or C(absent) to reset to default value.",
          "default": "present",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "value": {
          "aliases": [],
          "description": "Setting value.",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage Azure PostgreSQL Configuration",
      "version_added": "0.1.2"
    },
    "examples": "\n  - name: Update PostgreSQL Server setting\n    azure_rm_postgresqlconfiguration:\n      resource_group: myResourceGroup\n      server_name: myServer\n      name: deadlock_timeout\n      value: 2000\n"
  },
  "azure.azcollection.azure_rm_postgresqlconfiguration_info": {
    "doc": {
      "description": "Get facts of Azure PostgreSQL Configuration.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Setting name.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group that contains the resource.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "server_name": {
          "aliases": [],
          "description": "The name of the server.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure PostgreSQL Configuration facts",
      "version_added": "0.1.2"
    },
    "examples": "\n  - name: Get specific setting of PostgreSQL configuration\n    azure_rm_postgresqlconfiguration_info:\n      resource_group: myResourceGroup\n      server_name: testpostgresqlserver\n      name: deadlock_timeout\n\n  - name: Get all settings of PostgreSQL Configuration\n    azure_rm_postgresqlconfiguration_info:\n      resource_group: myResourceGroup\n      server_name: testpostgresqlserver\n"
  },
  "azure.azcollection.azure_rm_postgresqldatabase": {
    "doc": {
      "description": "Create, update and delete instance of PostgreSQL Database.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "charset": {
          "aliases": [],
          "description": "The charset of the database. Check PostgreSQL documentation for possible values.\nThis is only set on creation, use I(force_update) to recreate a database if the values don't match.",
          "required": false,
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "collation": {
          "aliases": [],
          "description": "The collation of the database. Check PostgreSQL documentation for possible values.\nThis is only set on creation, use I(force_update) to recreate a database if the values don't match.",
          "required": false,
          "suboptions": {}
        },
        "force_update": {
          "aliases": [],
          "description": "When set to C(true), will delete and recreate the existing PostgreSQL database if any of the properties don't match what is set.\nWhen set to C(false), no change will occur to the database even if any of the properties do not match.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the database.",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "server_name": {
          "aliases": [],
          "description": "The name of the server.",
          "required": true,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Assert the state of the PostgreSQL database. Use C(present) to create or update a database and C(absent) to delete it.",
          "default": "present",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage PostgreSQL Database instance",
      "version_added": "0.1.2"
    },
    "examples": "\n  - name: Create (or update) PostgreSQL Database\n    azure_rm_postgresqldatabase:\n      resource_group: myResourceGroup\n      server_name: testserver\n      name: db1\n"
  },
  "azure.azcollection.azure_rm_postgresqldatabase_info": {
    "doc": {
      "description": "Get facts of PostgreSQL Database.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the database.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "server_name": {
          "aliases": [],
          "description": "The name of the server.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure PostgreSQL Database facts",
      "version_added": "0.1.2"
    },
    "examples": "\n  - name: Get instance of PostgreSQL Database\n    azure_rm_postgresqldatabase_info:\n      resource_group: myResourceGroup\n      server_name: server_name\n      name: database_name\n\n  - name: List instances of PostgreSQL Database\n    azure_rm_postgresqldatabase_info:\n      resource_group: myResourceGroup\n      server_name: server_name\n"
  },
  "azure.azcollection.azure_rm_postgresqlfirewallrule": {
    "doc": {
      "description": "Create, update and delete instance of PostgreSQL firewall rule.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "end_ip_address": {
          "aliases": [],
          "description": "The end IP address of the PostgreSQL firewall rule. Must be IPv4 format.",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the PostgreSQL firewall rule.",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "server_name": {
          "aliases": [],
          "description": "The name of the server.",
          "required": true,
          "suboptions": {}
        },
        "start_ip_address": {
          "aliases": [],
          "description": "The start IP address of the PostgreSQL firewall rule. Must be IPv4 format.",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Assert the state of the PostgreSQL firewall rule. Use C(present) to create or update a PostgreSQL firewall rule and C(absent) to delete it.",
          "default": "present",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage PostgreSQL firewall rule instance",
      "version_added": "0.1.2"
    },
    "examples": "\n  - name: Create (or update) PostgreSQL firewall rule\n    azure_rm_postgresqlfirewallrule:\n      resource_group: myResourceGroup\n      server_name: testserver\n      name: rule1\n      start_ip_address: 10.0.0.16\n      end_ip_address: 10.0.0.18\n"
  },
  "azure.azcollection.azure_rm_postgresqlfirewallrule_info": {
    "doc": {
      "description": "Get facts of Azure PostgreSQL Firewall Rule.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the server firewall rule.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "server_name": {
          "aliases": [],
          "description": "The name of the server.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure PostgreSQL Firewall Rule facts",
      "version_added": "0.1.2"
    },
    "examples": "\n  - name: Get instance of PostgreSQL Firewall Rule\n    azure_rm_postgresqlfirewallrule_info:\n      resource_group: myResourceGroup\n      server_name: server_name\n      name: firewall_rule_name\n\n  - name: List instances of PostgreSQL Firewall Rule\n    azure_rm_postgresqlfirewallrule_info:\n      resource_group: myResourceGroup\n      server_name: server_name\n"
  },
  "azure.azcollection.azure_rm_postgresqlserver": {
    "doc": {
      "description": "Create, update and delete instance of PostgreSQL Server.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "admin_password": {
          "aliases": [],
          "description": "The password of the administrator login.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "admin_username": {
          "aliases": [],
          "description": "The administrator's login name of a server. Can only be specified when the server is being created (and is required for creation).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "backup_retention_days": {
          "aliases": [],
          "description": "Backup retention period between 7 and 35 days. 7 days by default if not set",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "create_mode": {
          "aliases": [],
          "description": "Create mode of SQL Server. Blank (default), restore from geo redundant (geo_restore), or restore from point in time (point_in_time_restore).",
          "default": "default",
          "type": "str",
          "required": false,
          "choices": [
            "default",
            "geo_restore",
            "point_in_time_restore"
          ],
          "suboptions": {}
        },
        "enforce_ssl": {
          "aliases": [],
          "description": "Enable SSL enforcement.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "geo_redundant_backup": {
          "aliases": [],
          "description": "Choose between locally redundant(default) or geo-redundant backup. This cannot be updated after first deployment",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "location": {
          "aliases": [],
          "description": "Resource location. If not set, location from the resource group will be used as default.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the server.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "restore_point_in_time": {
          "aliases": [],
          "description": "Restore point creation time (ISO8601 format), specifying the time to restore from.\nRequired if I(create_mode=point_in_time_restore).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "sku": {
          "aliases": [],
          "description": "The SKU (pricing tier) of the server.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "capacity": {
              "aliases": [],
              "description": "The scale up/out capacity, representing server's compute units.",
              "required": false,
              "suboptions": {}
            },
            "name": {
              "aliases": [],
              "description": "The name of the SKU, typically, tier + family + cores, for example C(B_Gen4_1), C(GP_Gen5_8).",
              "required": false,
              "suboptions": {}
            },
            "size": {
              "aliases": [],
              "description": "The size code, to be interpreted by resource as appropriate.",
              "required": false,
              "suboptions": {}
            },
            "tier": {
              "aliases": [],
              "description": "The tier of the particular SKU, for example C(Basic).",
              "required": false,
              "choices": [
                "Basic",
                "Standard"
              ],
              "suboptions": {}
            }
          }
        },
        "source_server_id": {
          "aliases": [],
          "description": "Id if the source server if I(create_mode=default).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Assert the state of the PostgreSQL server. Use C(present) to create or update a server and C(absent) to delete it.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "storage_autogrow": {
          "aliases": [],
          "description": "Enable storage autogrow.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "storage_mb": {
          "aliases": [],
          "description": "The maximum storage allowed for a server.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "version": {
          "aliases": [],
          "description": "Server version.",
          "type": "str",
          "required": false,
          "choices": [
            "9.5",
            "9.6",
            "10",
            "11"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage PostgreSQL Server instance",
      "version_added": "0.1.2"
    },
    "examples": "\n  - name: Create (or update) PostgreSQL Server\n    azure_rm_postgresqlserver:\n      resource_group: myResourceGroup\n      name: testserver\n      sku:\n        name: B_Gen5_1\n        tier: Basic\n      location: eastus\n      storage_mb: 1024\n      enforce_ssl: True\n      storage_autogrow: True\n      admin_username: cloudsa\n      admin_password: password\n"
  },
  "azure.azcollection.azure_rm_postgresqlserver_info": {
    "doc": {
      "description": "Get facts of PostgreSQL Server.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the server.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure PostgreSQL Server facts",
      "version_added": "0.1.2"
    },
    "examples": "\n  - name: Get instance of PostgreSQL Server\n    azure_rm_postgresqlserver_info:\n      resource_group: myResourceGroup\n      name: server_name\n\n  - name: List instances of PostgreSQL Server\n    azure_rm_postgresqlserver_info:\n      resource_group: myResourceGroup\n"
  },
  "azure.azcollection.azure_rm_privatednsrecordset": {
    "doc": {
      "description": "Creates, deletes, and updates Private DNS records sets and records within an existing Azure Private DNS Zone.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "record_mode": {
          "aliases": [],
          "description": "Whether existing record values not sent to the module should be purged.",
          "default": "purge",
          "type": "str",
          "required": false,
          "choices": [
            "append",
            "purge"
          ],
          "suboptions": {}
        },
        "record_type": {
          "aliases": [],
          "description": "The type of record set to create or delete.",
          "type": "str",
          "required": true,
          "choices": [
            "A",
            "AAAA",
            "CNAME",
            "MX",
            "PTR",
            "SOA",
            "SRV",
            "TXT"
          ],
          "suboptions": {}
        },
        "records": {
          "aliases": [],
          "description": "List of records to be created depending on the type of record (set).",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "entry": {
              "aliases": [],
              "description": "Primary data value for all record types.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "port": {
              "aliases": [],
              "description": "Used for creating an C(SRV) record set/records.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "preference": {
              "aliases": [],
              "description": "Used for creating an C(MX) record set/records.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "priority": {
              "aliases": [],
              "description": "Used for creating an C(SRV) record set/records.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "weight": {
              "aliases": [],
              "description": "Used for creating an C(SRV) record set/records.",
              "type": "int",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "relative_name": {
          "aliases": [],
          "description": "Relative name of the record set.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Name of resource group.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Assert the state of the record set. Use C(present) to create or update and C(absent) to delete.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "time_to_live": {
          "aliases": [],
          "description": "Time to live of the record set in seconds.",
          "default": "3600",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "zone_name": {
          "aliases": [],
          "description": "Name of the existing Private DNS zone in which to manage the record set.",
          "type": "str",
          "required": true,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Create, delete and update Private DNS record sets and records",
      "version_added": "1.1.0"
    },
    "examples": "\n\n- name: ensure an \"A\" record set with multiple records\n  azure_rm_privatednsrecordset:\n    resource_group: myResourceGroup\n    relative_name: www\n    zone_name: testing.com\n    record_type: A\n    records:\n      - entry: 192.168.100.101\n      - entry: 192.168.100.102\n      - entry: 192.168.100.103\n\n- name: delete a record set\n  azure_rm_privatednsrecordset:\n    resource_group: myResourceGroup\n    record_type: A\n    relative_name: www\n    zone_name: testing.com\n    state: absent\n\n- name: create multiple \"A\" record sets with multiple records\n  azure_rm_privatednsrecordset:\n    resource_group: myResourceGroup\n    zone_name: testing.com\n    relative_name: \"{{ item.name }}\"\n    record_type: \"{{ item.type }}\"\n    records: \"{{ item.records }}\"\n  with_items:\n    - { name: 'servera', type: 'A', records: [ { entry: '10.10.10.20' }, { entry: '10.10.10.21' }] }\n    - { name: 'serverb', type: 'A', records: [ { entry: '10.10.10.30' }, { entry: '10.10.10.41' }] }\n    - { name: 'serverc', type: 'A', records: [ { entry: '10.10.10.40' }, { entry: '10.10.10.41' }] }\n\n- name: create SRV records in a new record set\n  azure_rm_privatednsrecordset:\n    resource_group: myResourceGroup\n    relative_name: _sip._tcp.testing.com\n    zone_name: testing.com\n    time_to_live: 7200\n    record_type: SRV\n    records:\n    - entry: sip.testing.com\n      priority: 20\n      weight: 10\n      port: 5060\n\n- name: create PTR record in a new record set\n  azure_rm_privatednsrecordset:\n    resource_group: myResourceGroup\n    relative_name: 192.168.100.101.in-addr.arpa\n    zone_name: testing.com\n    record_type: PTR\n    records:\n    - entry: servera.testing.com\n\n- name: create TXT record in a new record set\n  azure_rm_privatednsrecordset:\n    resource_group: myResourceGroup\n    relative_name: mail.testing.com\n    zone_name: testing.com\n    record_type: TXT\n    records:\n    - entry: 'v=spf1 a -all'\n\n"
  },
  "azure.azcollection.azure_rm_privatednsrecordset_info": {
    "doc": {
      "description": "Get facts for a specific DNS Record Set in a Private DNS Zone, or a specific type of DNS record in all zones or one zone etc.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "record_type": {
          "aliases": [],
          "description": "Limit record sets by record type.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "relative_name": {
          "aliases": [],
          "description": "Only show results for a Record Set.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Limit results by resource group. Required when filtering by name or type.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "top": {
          "aliases": [],
          "description": "Limit the maximum number of record sets to return.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "zone_name": {
          "aliases": [],
          "description": "Limit results by zones. Required when filtering by name or type.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Private DNS Record Set facts",
      "version_added": "1.1.0"
    },
    "examples": "\n- name: Get facts for one record set in one Private DNS Zone\n  azure_rm_privatednsrecordset_info:\n    resource_group: myResourceGroup\n    zone_name: newzone.com\n    relative_name: servera\n    record_type: A\n- name: Get facts for all Type A record sets in a Private DNS Zone\n  azure_rm_privatednsrecordset_info:\n    resource_group: myResourceGroup\n    zone_name: newzone.com\n    record_type: A\n- name: Get all record sets in a Private DNS Zone\n  azure_rm_privatednsrecordset_info:\n    resource_group: myResourceGroup\n    zone_name: newzone.com\n"
  },
  "azure.azcollection.azure_rm_privatednszone": {
    "doc": {
      "description": "Creates and deletes Azure private DNS zones.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the private DNS zone.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Name of resource group.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Assert the state of the zone. Use C(present) to create or update and C(absent) to delete.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage Azure private DNS zones",
      "version_added": "0.0.1"
    },
    "examples": "\n\n- name: Create a private DNS zone\n  azure_rm_privatednszone:\n    resource_group: myResourceGroup\n    name: example.com\n\n- name: Delete a private DNS zone\n  azure_rm_privatednszone:\n    resource_group: myResourceGroup\n    name: example.com\n    state: absent\n\n"
  },
  "azure.azcollection.azure_rm_privatednszone_info": {
    "doc": {
      "description": "Get facts for a specific private DNS zone or all private DNS zones within a resource group.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Only show results for a specific zone.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Limit results by resource group. Required when filtering by name.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "type": "list",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get private DNS zone facts",
      "version_added": "0.0.1"
    },
    "examples": "\n- name: Get facts for one zone\n  azure_rm_privatednszone_info:\n    resource_group: myResourceGroup\n    name: foobar22\n\n- name: Get facts for all zones in a resource group\n  azure_rm_privatednszone_info:\n    resource_group: myResourceGroup\n\n- name: Get facts for privatednszone with tags\n  azure_rm_privatednszone_info:\n    tags:\n      - testing\n      - foo:bar\n"
  },
  "azure.azcollection.azure_rm_privatednszonelink": {
    "doc": {
      "description": "Creates, deletes, and updates Virtual network links for an existing Azure Private DNS Zone.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the virtual network link.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "registration_enabled": {
          "aliases": [],
          "description": "Is auto-registration of virtual machine records in the virtual network in the Private DNS zone enabled",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Name of resource group.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Assert the state of the virtual network link. Use C(present) to create or update and C(absent) to delete.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "virtual_network": {
          "aliases": [],
          "description": "The reference of the virtual network.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "zone_name": {
          "aliases": [],
          "description": "The name of the Private DNS zone.",
          "type": "str",
          "required": true,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Create, delete and update Virtual network link for Private DNS zone",
      "version_added": "1.6.0"
    },
    "examples": "\n- name: Create a virtual network link\n  azure_rm_privatednszonelink:\n    resource_group: myResourceGroup\n    name: vnetlink1\n    zone_name: privatezone.com\n    virtual_network: MyAzureVNet\n    state: present\n\n- name: Update virtual network link\n  azure_rm_privatednszonelink:\n    resource_group: myResourceGroup\n    name: vnetlink1\n    zone_name: privatezone.com\n    virtual_network: MyAzureVNet\n    registration_enabled: true\n    state: present\n    tags:\n      key1: \"value1\"\n\n- name: Delete a virtual network link\n  azure_rm_privatednszonelink:\n    resource_group: myResourceGroup\n    name: vnetlink1\n    zone_name: privatezone.com\n    state: absent\n"
  },
  "azure.azcollection.azure_rm_privatednszonelink_info": {
    "doc": {
      "description": "Get a specified virtual network link or all virtual network links facts for a Private DNS zone.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the virtual network link.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Name of resource group.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit the results by providing resource tags.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "zone_name": {
          "aliases": [],
          "description": "The name of the Private DNS zone.",
          "type": "str",
          "required": true,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Virtual Network link facts for private DNS zone",
      "version_added": "1.6.0"
    },
    "examples": "\n- name: Get facts for one virtual network link in private DNS zone\n  azure_rm_privatednszonelink_info:\n    resource_group: myResourceGroup\n    name: vnetlink1\n    zone_name: privatezone.com\n\n- name: Get facts for all virtual network links in private DNS zone\n  azure_rm_privatednszonelink_info:\n    resource_group: myResourceGroup\n    zone_name: privatezone.com\n"
  },
  "azure.azcollection.azure_rm_privateendpoint": {
    "doc": {
      "description": "Create, update or delete a private endpoint.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "location": {
          "aliases": [],
          "description": "Valid Azure location. Defaults to location of the resource group.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the private endpoint.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "private_dns_zone_configs": {
          "aliases": [],
          "description": "The Private DNS zones configurations.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "name": {
              "aliases": [],
              "description": "The name of the private dns zone configs.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "private_dns_zone_group": {
              "aliases": [],
              "description": "The resource ID of the Private DNS zones.",
              "type": "list",
              "required": false,
              "elements": "str",
              "suboptions": {}
            }
          }
        },
        "private_link_service_connections": {
          "aliases": [],
          "description": "A grouping of information about the connection to the remote resource.\nThis parameter is required for create or update.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "group_ids": {
              "aliases": [],
              "description": "The ID(s) of the group(s) obtained from the remote resource that this private endpoint should connect to.",
              "type": "list",
              "required": false,
              "elements": "str",
              "suboptions": {}
            },
            "name": {
              "aliases": [],
              "description": "The name of the resource that is unique within a resource group.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "private_link_service_id": {
              "aliases": [],
              "description": "The resource id of the private endpoint to connect to.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Name of resource group.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "State of the virtual network. Use C(present) to create or update and C(absent) to delete.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "subnet": {
          "aliases": [],
          "description": "The ID of the subnet from which the private IP will be allocated.\nThis parameter is required for create or update.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "id": {
              "aliases": [],
              "description": "The ID of the subnet from which the private IP will be allocated.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage Azure private endpoint",
      "version_added": "1.8.0"
    },
    "examples": "\n- name: Create private endpoint\n  azure_rm_privateendpoint:\n    name: testprivateendpoint\n    resource_group: v-xisuRG\n    private_link_service_connections:\n      - name: Test_private_link_service\n        private_link_service_id: /subscriptions/xxx/resourceGroups/myResourceGroup/providers/Microsoft.Network/privateLinkServices/testervice\n    subnet:\n      id: /subscriptions/xxx/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/fredvnet/subnets/default\n    tags:\n      key1: value1\n      key2: value2\n\n- name: Delete private endpoint\n  azure_rm_privateendpoint:\n    name: testprivateendpoint\n    resource_group: myResourceGroup\n    state: absent\n"
  },
  "azure.azcollection.azure_rm_privateendpoint_info": {
    "doc": {
      "description": "Get facts for private endpoints.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of resource group.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Limit results by resource group.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get private endpoints info",
      "version_added": "1.8.0"
    },
    "examples": "\n    - name: Get facts for one private endpoint\n      azure_rm_privateendpoint_info:\n        resource_group: myResourceGroup\n        name: testprivateendpoint\n\n    - name: Get all private endpoint under the resource group\n      azure_rm_privateendpoint_info:\n        resource_group: myResourceGroup\n\n    - name: Get all private endpoint under subscription\n      azure_rm_virtualnetwork_info:\n        tags:\n          key1: value1\n"
  },
  "azure.azcollection.azure_rm_proximityplacementgroup": {
    "doc": {
      "description": "Creates, deletes, and updates proximity placement group.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "location": {
          "aliases": [],
          "description": "Valid Azure location for proximity placement group. Defaults to location of resource group.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the proximity placement group.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Name of resource group.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Assert the state of the placement group. Use C(present) to create or update and C(absent) to delete.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Create, delete and update proximity placement group",
      "version_added": "1.6.0"
    },
    "examples": "\n- name: Create a proximity placement group\n  azure_rm_proximityplacementgroup:\n    resource_group: myAzureResourceGroup\n    location: eastus\n    name: myppg\n    state: present\n\n- name: Update proximity placement group\n  azure_rm_proximityplacementgroup:\n    resource_group: myAzureResourceGroup\n    location: eastus\n    name: myppg\n    tags:\n      key1: \"value1\"\n    state: present\n\n- name: Delete a proximity placement group\n  azure_rm_proximityplacementgroup:\n    resource_group: myAzureResourceGroup\n    name: myppg\n    state: absent\n"
  },
  "azure.azcollection.azure_rm_proximityplacementgroup_info": {
    "doc": {
      "description": "Get facts for specified proximity placement group or all proximity placement groups in a given resource group.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the proximity placement group.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Name of resource group.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit the results by providing resource tags.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get proximity placement group facts",
      "version_added": "1.6.0"
    },
    "examples": "\n- name: Get facts for one proximity placement group\n  azure_rm_proximityplacementgroup_info:\n    resource_group: myAzureResourceGroup\n    name: myppg\n\n- name: Get facts for all proximity placement groups in resource group\n  azure_rm_proximityplacementgroup_info:\n    resource_group: myAzureResourceGroup\n"
  },
  "azure.azcollection.azure_rm_publicipaddress": {
    "doc": {
      "description": "Create, update and delete a Public IP address.\nAllows setting and updating the address allocation method and domain name label.\nUse the M(azure_rm_networkinterface) module to associate a Public IP with a network interface.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "allocation_method": {
          "aliases": [],
          "description": "Control whether the assigned Public IP remains permanently assigned to the object.\nIf not set to C(Static), the IP address my changed anytime an associated virtual machine is power cycled.",
          "default": "dynamic",
          "required": false,
          "choices": [
            "dynamic",
            "static",
            "Static",
            "Dynamic"
          ],
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "domain_name": {
          "aliases": [
            "domain_name_label"
          ],
          "description": "The customizable portion of the FQDN assigned to public IP address. This is an explicit setting.\nIf no value is provided, any existing value will be removed on an existing public IP.",
          "required": false,
          "suboptions": {}
        },
        "idle_timeout": {
          "aliases": [],
          "description": "Idle timeout in minutes.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "ip_tags": {
          "aliases": [],
          "description": "List of IpTag associated with the public IP address.\nEach element should contain type:value pair.",
          "required": false,
          "suboptions": {
            "type": {
              "aliases": [],
              "description": "Sets the ip_tags type.",
              "required": false,
              "suboptions": {}
            },
            "value": {
              "aliases": [],
              "description": "Sets the ip_tags value.",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "location": {
          "aliases": [],
          "description": "Valid Azure location. Defaults to location of the resource group.",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the Public IP.",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Name of resource group with which the Public IP is associated.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "sku": {
          "aliases": [],
          "description": "The public IP address SKU.\nWhen I(version=ipv6), if I(sku=standard) then set I(allocation_method=static).\nWhen I(version=ipv4), if I(sku=standard) then set I(allocation_method=static).",
          "required": false,
          "choices": [
            "basic",
            "standard",
            "Basic",
            "Standard"
          ],
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Assert the state of the Public IP. Use C(present) to create or update a and C(absent) to delete.",
          "default": "present",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "version": {
          "aliases": [],
          "description": "The public IP address version.",
          "default": "ipv4",
          "required": false,
          "choices": [
            "ipv4",
            "ipv6"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage Azure Public IP Addresses",
      "version_added": "0.1.0"
    },
    "examples": "\n    - name: Create a public ip address\n      azure_rm_publicipaddress:\n        resource_group: myResourceGroup\n        name: my_public_ip\n        allocation_method: static\n        domain_name: foobar\n\n    - name: Delete public ip\n      azure_rm_publicipaddress:\n        resource_group: myResourceGroup\n        name: my_public_ip\n        state: absent\n"
  },
  "azure.azcollection.azure_rm_publicipaddress_info": {
    "doc": {
      "description": "Get facts for a specific public IP or all public IPs within a resource group.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Only show results for a specific Public IP.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Limit results by resource group. Required when using name parameter.",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get public IP facts",
      "version_added": "0.1.2"
    },
    "examples": "\n    - name: Get facts for one Public IP\n      azure_rm_publicipaddress_info:\n        resource_group: myResourceGroup\n        name: publicip001\n\n    - name: Get facts for all Public IPs within a resource groups\n      azure_rm_publicipaddress_info:\n        resource_group: myResourceGroup\n"
  },
  "azure.azcollection.azure_rm_recoveryservicesvault": {
    "doc": {
      "description": "Create or Delete Azure Recovery Services vault.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "location": {
          "aliases": [],
          "description": "Azure Resource location.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the Azure Recovery Service Vault.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Assert the state of the protection item.\nUse C(present) for Creating Azure Recovery Service Vault.\nUse C(absent) for Deleting Azure Recovery Service Vault.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Create and Delete Azure Recovery Services vault",
      "version_added": "1.1.0"
    },
    "examples": "\n    - name: Create/Update Azure Recovery Service vault\n      azure_rm_recoveryservicesvault:\n        resource_group: 'myResourceGroup'\n        name: 'testVault'\n        location: 'westeurope'\n        state: 'present'\n    - name: Delete Recovery Service Vault\n      azure_rm_recoveryservicesvault:\n        resource_group: 'myResourceGroup'\n        name: 'testVault'\n        location: 'westeurope'\n        state: 'absent'\n"
  },
  "azure.azcollection.azure_rm_recoveryservicesvault_info": {
    "doc": {
      "description": "Get Azure Recovery Services vault Details.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the Azure Recovery Service Vault.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure Recovery Services vault Details",
      "version_added": "1.1.0"
    },
    "examples": "\n    - name: Get Azure Recovery Services Vault Details.\n      azure_rm_recoveryservicesvault_info:\n        resource_group: 'myResourceGroup'\n        name: 'testVault'\n"
  },
  "azure.azcollection.azure_rm_rediscache": {
    "doc": {
      "description": "Create, update and delete instance of Azure Cache for Redis.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "enable_non_ssl_port": {
          "aliases": [],
          "description": "When set I(enable_non_ssl_port=true), the non-ssl Redis server port 6379 will be enabled.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "location": {
          "aliases": [],
          "description": "Resource location. If not set, location from the resource group will be used as default.",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "maxfragmentationmemory_reserved": {
          "aliases": [],
          "description": "Configures the amount of memory in MB that is reserved to accommodate for memory fragmentation.\nPlease see U(https://docs.microsoft.com/en-us/azure/redis-cache/cache-configure#advanced-settings) for more detail.",
          "required": false,
          "suboptions": {}
        },
        "maxmemory_policy": {
          "aliases": [],
          "description": "Configures the eviction policy of the cache.\nPlease see U(https://docs.microsoft.com/en-us/azure/redis-cache/cache-configure#advanced-settings) for more detail.",
          "required": false,
          "choices": [
            "volatile_lru",
            "allkeys_lru",
            "volatile_random",
            "allkeys_random",
            "volatile_ttl",
            "noeviction"
          ],
          "suboptions": {}
        },
        "maxmemory_reserved": {
          "aliases": [],
          "description": "Configures the amount of memory in MB that is reserved for non-cache operations.\nPlease see U(https://docs.microsoft.com/en-us/azure/redis-cache/cache-configure#advanced-settings) for more detail.",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Unique name of the Azure Cache for Redis to create or update.",
          "required": true,
          "suboptions": {}
        },
        "notify_keyspace_events": {
          "aliases": [],
          "description": "Allows clients to receive notifications when certain events occur.\nPlease see U(https://docs.microsoft.com/en-us/azure/redis-cache/cache-configure#advanced-settings) for more detail.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "reboot": {
          "aliases": [],
          "description": "Reboot specified Redis node(s). There can be potential data loss.",
          "required": false,
          "suboptions": {
            "reboot_type": {
              "aliases": [],
              "description": "Which Redis node(s) to reboot.",
              "default": "all",
              "required": false,
              "choices": [
                "primary",
                "secondary",
                "all"
              ],
              "suboptions": {}
            },
            "shard_id": {
              "aliases": [],
              "description": "If clustering is enabled, the id of the shard to be rebooted.",
              "type": "int",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "regenerate_key": {
          "aliases": [],
          "description": "Regenerate Redis cache's access keys.",
          "required": false,
          "suboptions": {
            "key_type": {
              "aliases": [],
              "description": "The Redis key to regenerate.",
              "required": false,
              "choices": [
                "primary",
                "secondary"
              ],
              "suboptions": {}
            }
          }
        },
        "resource_group": {
          "aliases": [],
          "description": "Name of the resource group to which the resource belongs.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "shard_count": {
          "aliases": [],
          "description": "The number of shards to be created when I(sku=premium).",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "sku": {
          "aliases": [],
          "description": "SKU info of Azure Cache for Redis.",
          "required": false,
          "suboptions": {
            "name": {
              "aliases": [],
              "description": "Type of Azure Cache for Redis to deploy.",
              "required": true,
              "choices": [
                "basic",
                "standard",
                "premium"
              ],
              "suboptions": {}
            },
            "size": {
              "aliases": [],
              "description": "Size of Azure Cache for Redis to deploy.\nWhen I(sku=basic) or I(sku=standard), allowed values are C(C0), C(C1), C(C2), C(C3), C(C4), C(C5), C(C6).\nWhen I(sku=premium), allowed values are C(P1), C(P2), C(P3), C(P4).\nPlease see U(https://docs.microsoft.com/en-us/rest/api/redis/redis/create#sku) for allowed values.",
              "required": true,
              "choices": [
                "C0",
                "C1",
                "C2",
                "C3",
                "C4",
                "C5",
                "C6",
                "P1",
                "P2",
                "P3",
                "P4"
              ],
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "Assert the state of the Azure Cache for Redis.\nUse C(present) to create or update an Azure Cache for Redis and C(absent) to delete it.",
          "default": "present",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "static_ip": {
          "aliases": [],
          "description": "Static IP address. Required when deploying an Azure Cache for Redis inside an existing Azure virtual network.",
          "required": false,
          "suboptions": {}
        },
        "subnet": {
          "aliases": [],
          "description": "Subnet in a virtual network to deploy the Azure Cache for Redis in.\nIt can be resource id of subnet, for example /subscriptions/{subid}/resourceGroups/{resourceGroupName}/Microsoft.{Network|ClassicNetwork}/VirtualNetworks/vnet1/subnets/subnet1.\nIt can be a dictionary where contains I(name), I(virtual_network_name) and I(resource_group).\nI(name). Name of the subnet.\nI(resource_group). Resource group name of the subnet.\nI(virtual_network_name). Name of virtual network to which this subnet belongs.",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant_settings": {
          "aliases": [],
          "description": "Dict of tenant settings.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "wait_for_provisioning": {
          "aliases": [],
          "description": "Wait till the Azure Cache for Redis instance provisioning_state is Succeeded.\nIt takes several minutes for Azure Cache for Redis to be provisioned ready for use after creating/updating/rebooting.\nSet this option to C(true) to wait for provisioning_state. Set to C(false) if you don't care about provisioning_state.\nPoll wait timeout is 60 minutes.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage Azure Cache for Redis instance",
      "version_added": "0.1.2"
    },
    "examples": "\n  - name: Create an Azure Cache for Redis\n    azure_rm_rediscache:\n        resource_group: myResourceGroup\n        name: myRedis\n        sku:\n          name: basic\n          size: C1\n\n  - name: Scale up the Azure Cache for Redis\n    azure_rm_rediscache:\n        resource_group: myResourceGroup\n        name: myRedis\n        sku:\n          name: standard\n          size: C1\n        tags:\n          testing: foo\n\n  - name: Force reboot the redis cache\n    azure_rm_rediscache:\n        resource_group: myResourceGroup\n        name: myRedisCache\n        reboot:\n          reboot_type: all\n\n  - name: Create Azure Cache for Redis with subnet\n    azure_rm_rediscache:\n        resource_group: myResourceGroup\n        name: myRedis\n        sku:\n          name: premium\n          size: P1\n        subnet: \"/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/myVirt\n                 ualNetwork/subnets/mySubnet\"\n\n"
  },
  "azure.azcollection.azure_rm_rediscache_info": {
    "doc": {
      "description": "Get facts for Azure Cache for Redis instance.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Limit results to a specific Azure Cache for Redis.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The resource group to search for the desired Azure Cache for Redis.",
          "required": true,
          "suboptions": {}
        },
        "return_access_keys": {
          "aliases": [],
          "description": "Indicate weather to return access keys of the Azure Cache for Redis.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure Cache for Redis instance facts",
      "version_added": "0.1.2"
    },
    "examples": "\n    - name: Get Azure Cache for Redis by name\n      azure_rm_rediscache_info:\n        resource_group: myResourceGroup\n        name: myRedis\n\n    - name: Get Azure Cache for Redis with access keys by name\n      azure_rm_rediscache_info:\n        resource_group: myResourceGroup\n        name: myRedis\n        return_access_keys: true\n\n    - name: Get Azure Cache for Redis in specific resource group\n      azure_rm_rediscache_info:\n        resource_group: myResourceGroup\n"
  },
  "azure.azcollection.azure_rm_rediscachefirewallrule": {
    "doc": {
      "description": "Create, update and delete Azure Cache for Redis Firewall rules.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cache_name": {
          "aliases": [],
          "description": "Name of the Azure Cache for Redis.",
          "required": true,
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "end_ip_address": {
          "aliases": [],
          "description": "The end IP address of the Azure Cache for Redis Firewall rule. Must be IPv4 format.\nRequired when creating Firewall rule.",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the Firewall rule.",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Name of the resource group to which the resource belongs.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "start_ip_address": {
          "aliases": [],
          "description": "The start IP address of the Azure Cache for Redis Firewall rule. Must be IPv4 format.\nRequired when creating Firewall rule.",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Assert the state of the Firewall rule of Azure Cache for Redis.\nUse C(present) to create or update Firewall rule of Azure Cache for Redis and C(absent) to delete it.",
          "default": "present",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage Azure Cache for Redis Firewall rules",
      "version_added": "0.1.2"
    },
    "examples": "\n  - name: Create a Firewall rule for Azure Cache for Redis\n    azure_rm_rediscachefirewallrule:\n        resource_group: myResourceGroup\n        cache_name: myRedisCache\n        name: myRule\n        start_ip_address: 192.168.1.1\n        end_ip_address: 192.168.1.4\n\n  - name: Update a Firewall rule for Azure Cache for Redis\n    azure_rm_rediscachefirewallrule:\n        resource_group: myResourceGroup\n        cache_name: myRedisCache\n        name: myRule\n        end_ip_address: 192.168.1.5\n"
  },
  "azure.azcollection.azure_rm_registrationassignment": {
    "doc": {
      "description": "Create and delete instance of Azure RegistrationAssignment.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "properties": {
          "aliases": [],
          "description": "Properties of a registration assignment.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "registration_definition_id": {
              "aliases": [],
              "description": "Fully qualified path of the registration definition.",
              "type": "str",
              "required": true,
              "suboptions": {}
            }
          }
        },
        "registration_assignment_id": {
          "aliases": [],
          "description": "ID of the registration assignment.\nIf is not specified, an UUID will be generated for it.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scope": {
          "aliases": [],
          "description": "Scope of the registration assignment. Can be in subscription or group level.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Assert the state of the RegistrationAssignment.\nUse C(present) to create or update an RegistrationAssignment and C(absent) to delete it.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage Azure RegistrationAssignment instance",
      "version_added": "1.3.0"
    },
    "examples": "\n    - name: Delete Registration Assignment\n      azure_rm_registrationassignment:\n        scope: subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n        registration_assignment_id: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n        state: absent\n\n\n    - name: Create Registration Assignment in subscription level\n      azure_rm_registrationassignment:\n        scope: subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n        registration_assignment_id: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n        properties:\n          registration_definition_id: /subscriptions/xxx-xxx/providers/Microsoft.ManagedServices/registrationDefinitions/xxx-xxx\n\n\n    - name: Create Registration Assignment in resourcegroup level with randomly generating registration_assignment_id\n      azure_rm_registrationassignment:\n        scope: subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/myResourceGroup\n        properties:\n          registration_definition_id: /subscriptions/xxx-xxx/providers/Microsoft.ManagedServices/registrationDefinitions/xxx-xxx\n\n"
  },
  "azure.azcollection.azure_rm_registrationassignment_info": {
    "doc": {
      "description": "Get info of RegistrationAssignment.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "registration_assignment_id": {
          "aliases": [],
          "description": "ID of the registration assignment.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scope": {
          "aliases": [],
          "description": "Scope of the registration assignment.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get RegistrationAssignment info",
      "version_added": "1.3.0"
    },
    "examples": "\n    - name: Get Registration Assignment\n      azure_rm_registrationassignment_info:\n        registration_assignment_id: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n        scope: subscription/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/myResourceGroup\n\n\n    - name: Get All Registration Assignments in scope(subscription)\n      azure_rm_registrationassignment_info:\n        scope: subscription/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n\n\n"
  },
  "azure.azcollection.azure_rm_registrationdefinition": {
    "doc": {
      "description": "Create, update and delete instance of Azure RegistrationDefinition.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "plan": {
          "aliases": [],
          "description": "Plan details for the managed services.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "name": {
              "aliases": [],
              "description": "The plan name.",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "product": {
              "aliases": [],
              "description": "The product code.",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "publisher": {
              "aliases": [],
              "description": "The publisher ID.",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "version": {
              "aliases": [],
              "description": "The plan's version.",
              "type": "str",
              "required": true,
              "suboptions": {}
            }
          }
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "properties": {
          "aliases": [],
          "description": "Properties of a registration definition.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "authorizations": {
              "aliases": [],
              "description": "Authorization tuple containing principal ID of the user/security group or service principal and ID of the build-in role.",
              "type": "list",
              "required": true,
              "suboptions": {
                "principal_id": {
                  "aliases": [],
                  "description": "Principal ID of the security group/service principal/user that would be assigned permissions to the projected subscription.",
                  "type": "str",
                  "required": true,
                  "suboptions": {}
                },
                "role_definition_id": {
                  "aliases": [],
                  "description": "The role definition identifier.\nThis role will define all the permissions that the security group/service principal/user must have on the projected subscription.\nThis role cannot be an owner role.",
                  "type": "str",
                  "required": true,
                  "suboptions": {}
                }
              }
            },
            "description": {
              "aliases": [],
              "description": "Description of the registration definition.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "managed_by_tenant_id": {
              "aliases": [],
              "description": "ID of the managedBy tenant.",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "registration_definition_name": {
              "aliases": [],
              "description": "Name of the registration definition.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "registration_definition_id": {
          "aliases": [],
          "description": "ID of the registration definition.\nIf is not specified, an UUID will be generated for it.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scope": {
          "aliases": [],
          "description": "The subscription ID defines the subscription in which the registration definition will be created.\nIf not specified, will use the subscription derived from AzureRMAuth.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Assert the state of the RegistrationDefinition.\nUse C(present) to create or update an RegistrationDefinition and C(absent) to delete it.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage Azure RegistrationDefinition instance",
      "version_added": "1.3.0"
    },
    "examples": "\n    - name: Create Registration Definition without scope\n      azure_rm_registrationdefinition:\n        registration_definition_id: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n        properties:\n          description: test\n          authorizations:\n            - principal_id: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n              role_definition_id: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n          managed_by_tenant_id: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n          registration_definition_name: def4\n\n    - name: Create Registration Definition with scope\n      azure_rm_registrationdefinition:\n        scope: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n        registration_definition_id: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n        properties:\n          description: test\n          authorizations:\n            - principal_id: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n              role_definition_id: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n          managed_by_tenant_id: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n          registration_definition_name: def5\n\n    - name: Delete Registration Definition\n      azure_rm_registrationdefinition:\n        registration_definition_id: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n        state: absent\n\n"
  },
  "azure.azcollection.azure_rm_registrationdefinition_info": {
    "doc": {
      "description": "Get info of RegistrationDefinition.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "registration_definition_id": {
          "aliases": [],
          "description": "ID of the registration definition.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scope": {
          "aliases": [],
          "description": "The subscription ID defines the subscription in which the registration definition will be retrieved.\nIf not specified, will use the subscription derived from AzureRMAuth.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get RegistrationDefinition info",
      "version_added": "1.3.0"
    },
    "examples": "\n    - name: Get Registration Definition\n      azure_rm_registrationdefinition_info:\n        registration_definition_id: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n\n    - name: Get All Registration Definitions from AzureRMAuth's subscription\n      azure_rm_registrationdefinition_info:\n\n    - name: Get All Registration Definitions in the subscription levle\n      azure_rm_registrationdefinition_info:\n          scope: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n\n"
  },
  "azure.azcollection.azure_rm_resource": {
    "doc": {
      "description": "Create, update or delete any Azure resource using Azure REST API.\nThis module gives access to resources that are not supported via Ansible modules.\nRefer to U(https://docs.microsoft.com/en-us/rest/api/) regarding details related to specific resource REST API.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_version": {
          "aliases": [],
          "description": "Specific API version to be used.",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "body": {
          "aliases": [],
          "description": "The body of the HTTP request/response to the web service.",
          "required": false,
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "idempotency": {
          "aliases": [],
          "description": "If enabled, idempotency check will be done by using I(method=GET) first and then comparing with I(body).",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "method": {
          "aliases": [],
          "description": "The HTTP method of the request or response. It must be uppercase.",
          "default": "PUT",
          "required": false,
          "choices": [
            "GET",
            "PUT",
            "POST",
            "HEAD",
            "PATCH",
            "DELETE",
            "MERGE"
          ],
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "polling_interval": {
          "aliases": [],
          "description": "If enabled, idempotency check will be done by using I(method=GET) first and then comparing with I(body).",
          "default": "60",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "polling_timeout": {
          "aliases": [],
          "description": "If enabled, idempotency check will be done by using I(method=GET) first and then comparing with I(body).",
          "default": "0",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "Provider type.\nRequired if URL is not specified.",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Resource group to be used.\nRequired if URL is not specified.",
          "required": false,
          "suboptions": {}
        },
        "resource_name": {
          "aliases": [],
          "description": "Resource name.\nRequired if URL Is not specified.",
          "required": false,
          "suboptions": {}
        },
        "resource_type": {
          "aliases": [],
          "description": "Resource type.\nRequired if URL is not specified.",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Assert the state of the resource. Use C(present) to create or update resource or C(absent) to delete resource.",
          "default": "present",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "status_code": {
          "aliases": [],
          "description": "A valid, numeric, HTTP status code that signifies success of the request. Can also be comma separated list of status codes.",
          "default": "[200, 201, 202]",
          "type": "list",
          "required": false,
          "suboptions": {}
        },
        "subresource": {
          "aliases": [],
          "description": "List of subresources.",
          "required": false,
          "suboptions": {
            "name": {
              "aliases": [],
              "description": "Subresource name.",
              "required": false,
              "suboptions": {}
            },
            "namespace": {
              "aliases": [],
              "description": "Subresource namespace.",
              "required": false,
              "suboptions": {}
            },
            "type": {
              "aliases": [],
              "description": "Subresource type.",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "url": {
          "aliases": [],
          "description": "Azure RM Resource URL.",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Create any Azure resource",
      "version_added": "0.1.2"
    },
    "examples": "\n  - name: Update scaleset info using azure_rm_resource\n    azure_rm_resource:\n      resource_group: myResourceGroup\n      provider: compute\n      resource_type: virtualmachinescalesets\n      resource_name: myVmss\n      api_version: \"2017-12-01\"\n      body: { body }\n"
  },
  "azure.azcollection.azure_rm_resource_info": {
    "doc": {
      "description": "Obtain facts of any resource using Azure REST API.\nThis module gives access to resources that are not supported via Ansible modules.\nRefer to U(https://docs.microsoft.com/en-us/rest/api/) regarding details related to specific resource REST API.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_version": {
          "aliases": [],
          "description": "Specific API version to be used.",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "Provider type, should be specified in no URL is given.",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Resource group to be used.\nRequired if URL is not specified.",
          "required": false,
          "suboptions": {}
        },
        "resource_name": {
          "aliases": [],
          "description": "Resource name.",
          "required": false,
          "suboptions": {}
        },
        "resource_type": {
          "aliases": [],
          "description": "Resource type.",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subresource": {
          "aliases": [],
          "description": "List of subresources.",
          "required": false,
          "suboptions": {
            "name": {
              "aliases": [],
              "description": "Subresource name.",
              "required": false,
              "suboptions": {}
            },
            "namespace": {
              "aliases": [],
              "description": "Subresource namespace.",
              "required": false,
              "suboptions": {}
            },
            "type": {
              "aliases": [],
              "description": "Subresource type.",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "url": {
          "aliases": [],
          "description": "Azure RM Resource URL.",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Generic facts of Azure resources",
      "version_added": "0.1.2"
    },
    "examples": "\n  - name: Get scaleset info\n    azure_rm_resource_info:\n      resource_group: myResourceGroup\n      provider: compute\n      resource_type: virtualmachinescalesets\n      resource_name: myVmss\n      api_version: \"2017-12-01\"\n\n  - name: Query all the resources in the resource group\n    azure_rm_resource_info:\n      resource_group: \"{{ resource_group }}\"\n      resource_type: resources\n"
  },
  "azure.azcollection.azure_rm_resourcegroup": {
    "doc": {
      "description": "Create, update and delete a resource group.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "force_delete_nonempty": {
          "aliases": [
            "force"
          ],
          "description": "Remove a resource group and all associated resources.\nUse with I(state=absent) to delete a resource group that contains resources.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "location": {
          "aliases": [],
          "description": "Azure location for the resource group. Required when creating a new resource group.\nCannot be changed once resource group is created.",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the resource group.",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Assert the state of the resource group. Use C(present) to create or update and C(absent) to delete.\nWhen C(absent) a resource group containing resources will not be removed unless the I(force) option is used.",
          "default": "present",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage Azure resource groups",
      "version_added": "0.1.2"
    },
    "examples": "\n    - name: Create a resource group\n      azure_rm_resourcegroup:\n        name: myResourceGroup\n        location: westus\n        tags:\n            testing: testing\n            delete: never\n\n    - name: Delete a resource group\n      azure_rm_resourcegroup:\n        name: myResourceGroup\n        state: absent\n\n    - name: Delete a resource group including resources it contains\n      azure_rm_resourcegroup:\n        name: myResourceGroup\n        force_delete_nonempty: yes\n        state: absent\n"
  },
  "azure.azcollection.azure_rm_resourcegroup_info": {
    "doc": {
      "description": "Get facts for a specific resource group or all resource groups.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "list_resources": {
          "aliases": [],
          "description": "List all resources under the resource group.\nNote this will cost network overhead for each resource group. Suggest use this when I(name) set.",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Limit results to a specific resource group.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get resource group facts",
      "version_added": "0.1.2"
    },
    "examples": "\n    - name: Get facts for one resource group\n      azure_rm_resourcegroup_info:\n        name: myResourceGroup\n\n    - name: Get facts for all resource groups\n      azure_rm_resourcegroup_info:\n\n    - name: Get facts by tags\n      azure_rm_resourcegroup_info:\n        tags:\n          - testing\n          - foo:bar\n\n    - name: Get facts for one resource group including resources it contains\n      azure_rm_resourcegroup_info:\n        name: myResourceGroup\n        list_resources: yes\n"
  },
  "azure.azcollection.azure_rm_roleassignment": {
    "doc": {
      "description": "Create and delete instance of Azure Role Assignment.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "assignee_object_id": {
          "aliases": [
            "assignee"
          ],
          "description": "The object id of assignee. This maps to the ID inside the Active Directory.\nIt can point to a user, service principal or security group.\nRequired when creating role assignment.",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "id": {
          "aliases": [],
          "description": "Fully qualified id of assignment to delete or create.\nMutually Exclusive with I(scope) and I(name)",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Unique name of role assignment.\nThe role assignment name must be a GUID, sample as \"3ce0cbb0-58c4-4e6d-a16d-99d86a78b3ca\".\nMutually Exclusive with I(id)",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "role_definition_id": {
          "aliases": [],
          "description": "The role definition id used in the role assignment.\nRequired when creating role assignment.",
          "required": false,
          "suboptions": {}
        },
        "scope": {
          "aliases": [],
          "description": "The scope of the role assignment to create.\nFor example, use /subscriptions/{subscription-id}/ for subscription.\n/subscriptions/{subscription-id}/resourceGroups/{resource-group-name} for resource group.\n/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}/providers/{resource-provider}/{resource-type}/{resource-name} for resource.\nMutually Exclusive with I(id)",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Assert the state of the role assignment.\nUse C(present) to create or update a role assignment and C(absent) to delete it.\nIf C(present), then I(role_definition_id) and I(assignee_object_id) are both required",
          "default": "present",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage Azure Role Assignment",
      "version_added": "0.1.2"
    },
    "examples": "\n    - name: Create a role assignment\n      azure_rm_roleassignment:\n        scope: /subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n        assignee_object_id: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n        role_definition_id:\n          \"/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/providers/Microsoft.Authorization/roleDefinitions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"\n\n    - name: Create a role assignment\n      azure_rm_roleassignment:\n        name: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n        scope: /subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n        assignee_object_id: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n        role_definition_id:\n          \"/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/providers/Microsoft.Authorization/roleDefinitions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"\n\n    - name: Delete a role assignment\n      azure_rm_roleassignment:\n        name: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n        scope: /subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n        state: absent\n\n    - name: Delete a role assignment\n      azure_rm_roleassignment:\n        id: /subscriptions/xxx-sub-guid-xxx/resourceGroups/rgname/providers/Microsoft.Authorization/roleAssignments/xxx-assign-guid-xxx\"\n\n    - name: Delete a role assignment\n      azure_rm_roleassignment:\n        scope: /subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n        assignee_object_id: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n        role_definition_id:\n          \"/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/providers/Microsoft.Authorization/roleDefinitions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"\n"
  },
  "azure.azcollection.azure_rm_roleassignment_info": {
    "doc": {
      "description": "Gets facts of Azure Role Assignment.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "assignee": {
          "aliases": [
            "assignee_object_id"
          ],
          "description": "Object id of a user, group or service principal.\nMutually exclusive with I(name) and I(id).",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "id": {
          "aliases": [],
          "description": "Fqid of role assignment to look up.\nIf set, I(role_definition_id) and I(scope) will be silently ignored.\nMutually exclusive with I(assignee) and I(name).",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of role assignment.\nRequires that I(scope) also be set.\nMutual exclusive with I(assignee) and I(id).",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "role_definition_id": {
          "aliases": [],
          "description": "Resource id of role definition.",
          "required": false,
          "suboptions": {}
        },
        "scope": {
          "aliases": [],
          "description": "The scope to query for role assignments.\nFor example, use /subscriptions/{subscription-id}/ for a subscription.\n/subscriptions/{subscription-id}/resourceGroups/{resourcegroup-name} for a resource group.\n/subscriptions/{subscription-id}/resourceGroups/{resourcegroup-name}/providers/{resource-provider}/{resource-type}/{resource-name} for a resource.\nBy default will return all inhereted assignments from parent scopes, see I(strict_scope_match).",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "strict_scope_match": {
          "aliases": [],
          "description": "If strict_scope_match is True, role assignments will only be returned for the exact scope defined.\nInherited role assignments will be excluded from results.\nOption will be silently ignored if no scope is provided.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Gets Azure Role Assignment facts",
      "version_added": "0.1.2"
    },
    "examples": "\n    - name: Get role assignments for specific service principal\n      azure_rm_roleassignment_info:\n        assignee: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n\n    - name: Get role assignments for specific scope that matches specific role definition\n      azure_rm_roleassignment_info:\n        scope: /subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n        role_definition_id: /subscriptions/xxx-sub-guid-xxx/providers/Microsoft.Authorization/roleDefinitions/xxx-role-guid-xxxx\n\n    - name: Get role assignments for specific scope with no inherited assignments\n      azure_rm_roleassignment_info:\n        scope: /subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n        strict_scope_match: True\n\n    - name: Get role assignments by name\n      azure_rm_roleassignment_info:\n        scope: /subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n        name: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n\n    - name: Get role assignments by id\n      azure_rm_roleassignment_info:\n        id: /subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/providers/Microsoft.Authorization/roleAssignments/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n"
  },
  "azure.azcollection.azure_rm_roledefinition": {
    "doc": {
      "description": "Create, update and delete instance of Azure Role Definition.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "assignable_scopes": {
          "aliases": [],
          "description": "List of assignable scopes of this definition.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "The role definition description.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Unique name of role definition.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "permissions": {
          "aliases": [],
          "description": "Set of role definition permissions.\nSee U(https://docs.microsoft.com/en-us/azure/app-service/app-service-web-overview) for more info.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "actions": {
              "aliases": [],
              "description": "List of allowed actions.",
              "type": "list",
              "required": false,
              "elements": "str",
              "suboptions": {}
            },
            "data_actions": {
              "aliases": [],
              "description": "List of allowed data actions.",
              "type": "list",
              "required": false,
              "elements": "str",
              "suboptions": {}
            },
            "not_actions": {
              "aliases": [],
              "description": "List of denied actions.",
              "type": "list",
              "required": false,
              "elements": "str",
              "suboptions": {}
            },
            "not_data_actions": {
              "aliases": [],
              "description": "List of denied data actions.",
              "type": "list",
              "required": false,
              "elements": "str",
              "suboptions": {}
            }
          }
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scope": {
          "aliases": [],
          "description": "The scope of the role definition.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Assert the state of the role definition.\nUse C(present) to create or update a role definition; use C(absent) to delete it.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage Azure Role Definition",
      "version_added": "0.1.2"
    },
    "examples": "\n    - name: Create a role definition\n      azure_rm_roledefinition:\n        name: myTestRole\n        scope: /subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/myresourceGroup\n        permissions:\n            - actions:\n                - \"Microsoft.Compute/virtualMachines/read\"\n              data_actions:\n                - \"Microsoft.Storage/storageAccounts/blobServices/containers/blobs/write\"\n        assignable_scopes:\n            - \"/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"\n"
  },
  "azure.azcollection.azure_rm_roledefinition_info": {
    "doc": {
      "description": "Get facts of Azure Role Definition.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "id": {
          "aliases": [],
          "description": "Role definition id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "role_name": {
          "aliases": [],
          "description": "Role name.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scope": {
          "aliases": [],
          "description": "The scope of role definition.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "type": {
          "aliases": [],
          "description": "Type of role.",
          "type": "str",
          "required": false,
          "choices": [
            "system",
            "custom"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure Role Definition facts",
      "version_added": "0.1.2"
    },
    "examples": "\n    - name: List Role Definitions in scope\n      azure_rm_roledefinition_info:\n        scope: /subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/myResourceGroup\n\n    - name: Get Role Definition by name\n      azure_rm_roledefinition_info:\n        scope: /subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/myResourceGroup\n        role_name: myRoleDefinition\n"
  },
  "azure.azcollection.azure_rm_route": {
    "doc": {
      "description": "Create, update or delete a route.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "address_prefix": {
          "aliases": [],
          "description": "The destination CIDR to which the route applies.",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the route.",
          "required": true,
          "suboptions": {}
        },
        "next_hop_ip_address": {
          "aliases": [],
          "description": "The IP address packets should be forwarded to.\nNext hop values are only allowed in routes where the next hop type is VirtualAppliance.",
          "required": false,
          "suboptions": {}
        },
        "next_hop_type": {
          "aliases": [],
          "description": "The type of Azure hop the packet should be sent to.",
          "default": "none",
          "required": false,
          "choices": [
            "virtual_network_gateway",
            "vnet_local",
            "internet",
            "virtual_appliance",
            "none"
          ],
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Name of resource group.",
          "required": true,
          "suboptions": {}
        },
        "route_table_name": {
          "aliases": [],
          "description": "The name of the route table.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Assert the state of the route. Use C(present) to create or update and C(absent) to delete.",
          "default": "present",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage Azure route resource",
      "version_added": "0.1.2"
    },
    "examples": "\n    - name: Create a route\n      azure_rm_route:\n        resource_group: myResourceGroup\n        name: myRoute\n        address_prefix: 10.1.0.0/16\n        next_hop_type: virtual_network_gateway\n        route_table_name: table\n\n    - name: Delete a route\n      azure_rm_route:\n        resource_group: myResourceGroup\n        name: myRoute\n        route_table_name: table\n        state: absent\n"
  },
  "azure.azcollection.azure_rm_route_info": {
    "doc": {
      "description": "Get info of Route.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the route.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "route_table_name": {
          "aliases": [],
          "description": "The name of the route table.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Route info",
      "version_added": "2.0.0"
    },
    "examples": "\n    - name: Get route\n      azure_rm_route_info:\n        resource_group: myResourceGroup\n        name: routename\n        route_table_name: routetabename\n\n\n    - name: List routes\n      azure_rm_route_info:\n        resource_group: myResourceGroup\n        route_table_name: routetabename\n\n"
  },
  "azure.azcollection.azure_rm_routetable": {
    "doc": {
      "description": "Create, update or delete a route table.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "disable_bgp_route_propagation": {
          "aliases": [],
          "description": "Specified whether to disable the routes learned by BGP on that route table.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "location": {
          "aliases": [],
          "description": "Region of the resource.\nDerived from I(resource_group) if not specified.",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the route table.",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Name of resource group.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Assert the state of the route table. Use C(present) to create or update and C(absent) to delete.",
          "default": "present",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage Azure route table resource",
      "version_added": "0.1.2"
    },
    "examples": "\n    - name: Create a route table\n      azure_rm_routetable:\n        resource_group: myResourceGroup\n        name: myRouteTable\n        disable_bgp_route_propagation: False\n        tags:\n          purpose: testing\n\n    - name: Delete a route table\n      azure_rm_routetable:\n        resource_group: myResourceGroup\n        name: myRouteTable\n        state: absent\n"
  },
  "azure.azcollection.azure_rm_routetable_info": {
    "doc": {
      "description": "Get facts for a specific route table or all route table in a resource group or subscription.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Limit results to a specific route table.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Limit results in a specific resource group.",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get route table facts",
      "version_added": "0.1.2"
    },
    "examples": "\n    - name: Get facts for one route table\n      azure_rm_routetable_info:\n        name: Testing\n        resource_group: myResourceGroup\n\n    - name: Get facts for all route tables\n      azure_rm_routetable_info:\n        resource_group: myResourceGroup\n\n    - name: Get facts by tags\n      azure_rm_routetable_info:\n        tags:\n          - testing\n          - foo:bar\n"
  },
  "azure.azcollection.azure_rm_securitygroup": {
    "doc": {
      "description": "Create, update or delete a network security group.\nA security group contains Access Control List (ACL) rules that allow or deny network traffic to subnets or individual network interfaces.\nA security group is created with a set of default security rules and an empty set of security rules.\nShape traffic flow by adding rules to the empty set of security rules.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "default_rules": {
          "aliases": [],
          "description": "The set of default rules automatically added to a security group at creation.\nIn general default rules will not be modified. Modify rules to shape the flow of traffic to or from a subnet or NIC.\nSee rules below for the makeup of a rule dict.",
          "required": false,
          "suboptions": {}
        },
        "location": {
          "aliases": [],
          "description": "Valid azure location. Defaults to location of the resource group.",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the security group to operate on.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "purge_default_rules": {
          "aliases": [],
          "description": "Remove any existing rules not matching those defined in the default_rules parameter.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "purge_rules": {
          "aliases": [],
          "description": "Remove any existing rules not matching those defined in the rules parameters.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Name of the resource group the security group belongs to.",
          "required": true,
          "suboptions": {}
        },
        "rules": {
          "aliases": [],
          "description": "Set of rules shaping traffic flow to or from a subnet or NIC. Each rule is a dictionary.",
          "required": false,
          "suboptions": {
            "access": {
              "aliases": [],
              "description": "Whether or not to allow the traffic flow.",
              "default": "Allow",
              "required": false,
              "choices": [
                "Allow",
                "Deny"
              ],
              "suboptions": {}
            },
            "description": {
              "aliases": [],
              "description": "Short description of the rule's purpose.",
              "required": false,
              "suboptions": {}
            },
            "destination_address_prefix": {
              "aliases": [],
              "description": "The destination address prefix.\nCIDR or destination IP range.\nAsterisk C(*) can also be used to match all source IPs.\nDefault tags such as C(VirtualNetwork), C(AzureLoadBalancer) and C(Internet) can also be used.\nIt can accept string type or a list of string type.\nAsterisk C(*) and default tags can only be specified as single string type, not as a list of string.",
              "default": "*",
              "required": false,
              "suboptions": {}
            },
            "destination_application_security_groups": {
              "aliases": [],
              "description": "List of the destination application security groups.\nIt could be list of resource id.\nIt could be list of names in same resource group.\nIt could be list of dict containing I(resource_group) and I(name).\nIt is mutually exclusive with C(destination_address_prefix) and C(destination_address_prefixes).",
              "type": "list",
              "required": false,
              "suboptions": {}
            },
            "destination_port_range": {
              "aliases": [],
              "description": "Port or range of ports to which traffic is headed.\nIt can accept string type or a list of string type.",
              "default": "*",
              "required": false,
              "suboptions": {}
            },
            "direction": {
              "aliases": [],
              "description": "Indicates the direction of the traffic flow.",
              "default": "Inbound",
              "required": false,
              "choices": [
                "Inbound",
                "Outbound"
              ],
              "suboptions": {}
            },
            "name": {
              "aliases": [],
              "description": "Unique name for the rule.",
              "required": true,
              "suboptions": {}
            },
            "priority": {
              "aliases": [],
              "description": "Order in which to apply the rule. Must a unique integer between 100 and 4096 inclusive.",
              "required": true,
              "suboptions": {}
            },
            "protocol": {
              "aliases": [],
              "description": "Accepted traffic protocol.",
              "default": "*",
              "required": false,
              "choices": [
                "Udp",
                "Tcp",
                "Icmp",
                "*"
              ],
              "suboptions": {}
            },
            "source_address_prefix": {
              "aliases": [],
              "description": "The CIDR or source IP range.\nAsterisk C(*) can also be used to match all source IPs.\nDefault tags such as C(VirtualNetwork), C(AzureLoadBalancer) and C(Internet) can also be used.\nIf this is an ingress rule, specifies where network traffic originates from.\nIt can accept string type or a list of string type.\nAsterisk C(*) and default tags can only be specified as single string type, not as a list of string.",
              "default": "*",
              "required": false,
              "suboptions": {}
            },
            "source_application_security_groups": {
              "aliases": [],
              "description": "List of the source application security groups.\nIt could be list of resource id.\nIt could be list of names in same resource group.\nIt could be list of dict containing resource_group and name.\nIt is mutually exclusive with C(source_address_prefix) and C(source_address_prefixes).",
              "type": "list",
              "required": false,
              "suboptions": {}
            },
            "source_port_range": {
              "aliases": [],
              "description": "Port or range of ports from which traffic originates.\nIt can accept string type or a list of string type.",
              "default": "*",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Assert the state of the security group. Set to C(present) to create or update a security group. Set to C(absent) to remove a security group.",
          "default": "present",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage Azure network security groups",
      "version_added": "0.1.0"
    },
    "examples": "\n\n# Create a security group\n- azure_rm_securitygroup:\n      resource_group: myResourceGroup\n      name: mysecgroup\n      purge_rules: yes\n      rules:\n          - name: DenySSH\n            protocol: Tcp\n            destination_port_range: 22\n            access: Deny\n            priority: 100\n            direction: Inbound\n          - name: 'AllowSSH'\n            protocol: Tcp\n            source_address_prefix:\n              - '174.109.158.0/24'\n              - '174.109.159.0/24'\n            destination_port_range: 22\n            access: Allow\n            priority: 101\n            direction: Inbound\n          - name: 'AllowMultiplePorts'\n            protocol: Tcp\n            source_address_prefix:\n              - '174.109.158.0/24'\n              - '174.109.159.0/24'\n            destination_port_range:\n              - 80\n              - 443\n            access: Allow\n            priority: 102\n\n# Update rules on existing security group\n- azure_rm_securitygroup:\n      resource_group: myResourceGroup\n      name: mysecgroup\n      rules:\n          - name: DenySSH\n            protocol: Tcp\n            destination_port_range: 22-23\n            access: Deny\n            priority: 100\n            direction: Inbound\n          - name: AllowSSHFromHome\n            protocol: Tcp\n            source_address_prefix: '174.109.158.0/24'\n            destination_port_range: 22-23\n            access: Allow\n            priority: 102\n            direction: Inbound\n      tags:\n          testing: testing\n          delete: on-exit\n\n# Create a securiy group with I(protocol=Icmp)\n- azure_rm_securitygroup:\n    name: mysecgroup\n    resource_group: myResourceGroup\n    rules:\n      - name: SSH\n        protocol: Tcp\n        destination_port_range: 22\n        access: Allow\n        priority: 105\n        direction: Inbound\n      - name: ICMP\n        protocol: Icmp\n        priority: 106\n\n# Delete security group\n- azure_rm_securitygroup:\n      resource_group: myResourceGroup\n      name: mysecgroup\n      state: absent\n"
  },
  "azure.azcollection.azure_rm_securitygroup_info": {
    "doc": {
      "description": "Get facts for a specific security group or all security groups within a resource group.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Only show results for a specific security group.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Name of the resource group to use.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get security group facts",
      "version_added": "0.1.2"
    },
    "examples": "\n    - name: Get facts for one security group\n      azure_rm_securitygroup_info:\n        resource_group: myResourceGroup\n        name: secgroup001\n\n    - name: Get facts for all security groups\n      azure_rm_securitygroup_info:\n        resource_group: myResourceGroup\n\n"
  },
  "azure.azcollection.azure_rm_servicebus": {
    "doc": {
      "description": "Create, update or delete an Azure Service Bus namespaces.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "location": {
          "aliases": [],
          "description": "The servicebus's location.",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the servicebus namespace.",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Name of resource group.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "sku": {
          "aliases": [],
          "description": "Namespace SKU.",
          "default": "standard",
          "required": false,
          "choices": [
            "standard",
            "basic",
            "premium"
          ],
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Assert the state of the servicebus. Use C(present) to create or update and use C(absen) to delete.",
          "default": "present",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage Azure Service Bus",
      "version_added": "0.1.2"
    },
    "examples": "\n- name: Create a namespace\n  azure_rm_servicebus:\n      name: deadbeef\n      location: eastus\n"
  },
  "azure.azcollection.azure_rm_servicebus_info": {
    "doc": {
      "description": "Get facts for a specific servicebus or all servicebus in a resource group or subscription.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Limit results to a specific servicebus.",
          "required": false,
          "suboptions": {}
        },
        "namespace": {
          "aliases": [],
          "description": "Servicebus namespace name.\nA namespace is a scoping container for all messaging components.\nMultiple queues and topics can reside within a single namespace, and namespaces often serve as application containers.\nRequired when I(type=namespace).",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Limit results in a specific resource group.",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "show_sas_policies": {
          "aliases": [],
          "description": "Whether to show the SAS policies.\nNot support when I(type=subscription).\nNote if enable this option, the facts module will raise two more HTTP call for each resources, need more network overhead.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "topic": {
          "aliases": [],
          "description": "Topic name.\nRequired when I(type=subscription).",
          "required": false,
          "suboptions": {}
        },
        "type": {
          "aliases": [],
          "description": "Type of the resource.",
          "required": false,
          "choices": [
            "namespace",
            "queue",
            "topic",
            "subscription"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get servicebus facts",
      "version_added": "0.1.2"
    },
    "examples": "\n- name: Get all namespaces under a resource group\n  azure_rm_servicebus_info:\n    resource_group: myResourceGroup\n    type: namespace\n\n- name: Get all topics under a namespace\n  azure_rm_servicebus_info:\n    resource_group: myResourceGroup\n    namespace: bar\n    type: topic\n\n- name: Get a single queue with SAS policies\n  azure_rm_servicebus_info:\n    resource_group: myResourceGroup\n    namespace: bar\n    type: queue\n    name: sbqueue\n    show_sas_policies: true\n\n- name: Get all subscriptions under a resource group\n  azure_rm_servicebus_info:\n    resource_group: myResourceGroup\n    type: subscription\n    namespace: bar\n    topic: sbtopic\n"
  },
  "azure.azcollection.azure_rm_servicebusqueue": {
    "doc": {
      "description": "Create, update or delete an Azure Service Bus queue.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auto_delete_on_idle_in_seconds": {
          "aliases": [],
          "description": "Time idle interval after which a queue is automatically deleted.\nThe minimum duration is 5 minutes.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "dead_lettering_on_message_expiration": {
          "aliases": [],
          "description": "A value that indicates whether a queue has dead letter support when a message expires.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "default_message_time_to_live_seconds": {
          "aliases": [],
          "description": "Default message timespan to live value.\nThis is the duration after which the message expires, starting from when the message is sent to Service Bus.\nThis is the default value used when TimeToLive is not set on a message itself.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "duplicate_detection_time_in_seconds": {
          "aliases": [],
          "description": "TimeSpan structure that defines the duration of the duplicate detection history.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "enable_batched_operations": {
          "aliases": [],
          "description": "Value that indicates whether server-side batched operations are enabled.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "enable_express": {
          "aliases": [],
          "description": "Value that indicates whether Express Entities are enabled.\nAn express topic or queue holds a message in memory temporarily before writing it to persistent storage.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "enable_partitioning": {
          "aliases": [],
          "description": "A value that indicates whether the topic or queue is to be partitioned across multiple message brokers.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "forward_dead_lettered_messages_to": {
          "aliases": [],
          "description": "Queue or topic name to forward the Dead Letter message for a queue.",
          "required": false,
          "suboptions": {}
        },
        "forward_to": {
          "aliases": [],
          "description": "Queue or topic name to forward the messages for a queue.",
          "required": false,
          "suboptions": {}
        },
        "lock_duration_in_seconds": {
          "aliases": [],
          "description": "Timespan duration of a peek-lock.\nThe amount of time that the message is locked for other receivers.\nThe maximum value for LockDuration is 5 minutes.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "max_delivery_count": {
          "aliases": [],
          "description": "The maximum delivery count.\nA message is automatically deadlettered after this number of deliveries.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "max_size_in_mb": {
          "aliases": [],
          "description": "The maximum size of the queue in megabytes, which is the size of memory allocated for the queue.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the queue.",
          "required": true,
          "suboptions": {}
        },
        "namespace": {
          "aliases": [],
          "description": "Servicebus namespace name.\nA namespace is a scoping container for all messaging components.\nMultiple queues and topics can reside within a single namespace, and namespaces often serve as application containers.",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "requires_duplicate_detection": {
          "aliases": [],
          "description": "A value indicating if this queue or topic requires duplicate detection.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "requires_session": {
          "aliases": [],
          "description": "A value that indicates whether the queue supports the concept of sessions.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Name of resource group.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Assert the state of the queue. Use C(present) to create or update and use C(absent) to delete.",
          "default": "present",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "status": {
          "aliases": [],
          "description": "Status of the entity.",
          "required": false,
          "choices": [
            "active",
            "disabled",
            "send_disabled",
            "receive_disabled"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage Azure Service Bus queue",
      "version_added": "0.1.2"
    },
    "examples": "\n- name: Create a queue\n  azure_rm_servicebusqueue:\n      name: subqueue\n      resource_group: myResourceGroup\n      namespace: bar\n      duplicate_detection_time_in_seconds: 600\n"
  },
  "azure.azcollection.azure_rm_servicebussaspolicy": {
    "doc": {
      "description": "Create, update or delete an Azure Service Bus SAS policy.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the SAS policy.",
          "required": true,
          "suboptions": {}
        },
        "namespace": {
          "aliases": [],
          "description": "Manage SAS policy for a namespace without C(queue) or C(topic) set.\nManage SAS policy for a queue or topic under this namespace.",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "queue": {
          "aliases": [],
          "description": "Type of the messaging queue.\nCannot set C(topc) when this field set.",
          "required": false,
          "suboptions": {}
        },
        "regenerate_primary_key": {
          "aliases": [],
          "description": "Regenerate the SAS policy primary key.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "regenerate_secondary_key": {
          "aliases": [],
          "description": "Regenerate the SAS policy secondary key.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Name of resource group.",
          "required": true,
          "suboptions": {}
        },
        "rights": {
          "aliases": [],
          "description": "Claim rights of the SAS policy.",
          "required": true,
          "choices": [
            "manage",
            "listen",
            "send",
            "listen_send"
          ],
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Assert the state of the route. Use C(present) to create or update and C(absent) to delete.",
          "default": "present",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "topic": {
          "aliases": [],
          "description": "Name of the messaging topic.\nCannot set C(queue) when this field set.",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage Azure Service Bus SAS policy",
      "version_added": "0.1.2"
    },
    "examples": "\n- name: Create a namespace\n  azure_rm_servicebussaspolicy:\n      name: deadbeef\n      queue: qux\n      namespace: bar\n      resource_group: myResourceGroup\n      rights: send\n"
  },
  "azure.azcollection.azure_rm_servicebustopic": {
    "doc": {
      "description": "Create, update or delete an Azure Service Bus topics.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auto_delete_on_idle_in_seconds": {
          "aliases": [],
          "description": "Time idle interval after which a topic is automatically deleted.\nThe minimum duration is 5 minutes.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "default_message_time_to_live_seconds": {
          "aliases": [],
          "description": "Default message timespan to live value.\nThis is the duration after which the message expires, starting from when the message is sent to Service Bus.\nThis is the default value used when TimeToLive is not set on a message itself.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "duplicate_detection_time_in_seconds": {
          "aliases": [],
          "description": "TimeSpan structure that defines the duration of the duplicate detection history.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "enable_batched_operations": {
          "aliases": [],
          "description": "Value that indicates whether server-side batched operations are enabled.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "enable_express": {
          "aliases": [],
          "description": "Value that indicates whether Express Entities are enabled.\nAn express topic holds a message in memory temporarily before writing it to persistent storage.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "enable_partitioning": {
          "aliases": [],
          "description": "A value that indicates whether the topic is to be partitioned across multiple message brokers.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "max_size_in_mb": {
          "aliases": [],
          "description": "The maximum size of the topic in megabytes, which is the size of memory allocated for the topic.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the topic.",
          "required": true,
          "suboptions": {}
        },
        "namespace": {
          "aliases": [],
          "description": "Servicebus namespace name.\nA namespace is a scoping container for all messaging components.\nMultipletopics can reside within a single namespace.",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "requires_duplicate_detection": {
          "aliases": [],
          "description": "A value indicating if this topic requires duplicate detection.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Name of resource group.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Assert the state of the topic. Use C(present) to create or update and use C(absent) to delete.",
          "default": "present",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "status": {
          "aliases": [],
          "description": "Status of the entity.",
          "required": false,
          "choices": [
            "active",
            "disabled",
            "send_disabled",
            "receive_disabled"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "support_ordering": {
          "aliases": [],
          "description": "Value that indicates whether the topic supports ordering.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage Azure Service Bus",
      "version_added": "0.1.2"
    },
    "examples": "\n- name: Create a topic\n  azure_rm_servicebustopic:\n      name: subtopic\n      resource_group: myResourceGroup\n      namespace: bar\n      duplicate_detection_time_in_seconds: 600\n"
  },
  "azure.azcollection.azure_rm_servicebustopicsubscription": {
    "doc": {
      "description": "Create, update or delete an Azure Service Bus subscriptions.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auto_delete_on_idle_in_seconds": {
          "aliases": [],
          "description": "Time idle interval after which a subscription is automatically deleted.\nThe minimum duration is 5 minutes.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "dead_lettering_on_filter_evaluation_exceptions": {
          "aliases": [],
          "description": "Value that indicates whether a subscription has dead letter support on filter evaluation exceptions.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "dead_lettering_on_message_expiration": {
          "aliases": [],
          "description": "A value that indicates whether a subscription has dead letter support when a message expires.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "default_message_time_to_live_seconds": {
          "aliases": [],
          "description": "Default message timespan to live value.\nThis is the duration after which the message expires, starting from when the message is sent to Service Bus.\nThis is the default value used when TimeToLive is not set on a message itself.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "duplicate_detection_time_in_seconds": {
          "aliases": [],
          "description": "TimeSpan structure that defines the duration of the duplicate detection history.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "enable_batched_operations": {
          "aliases": [],
          "description": "Value that indicates whether server-side batched operations are enabled.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "forward_dead_lettered_messages_to": {
          "aliases": [],
          "description": "Queue or topic name to forward the Dead Letter message for a subscription.",
          "required": false,
          "suboptions": {}
        },
        "forward_to": {
          "aliases": [],
          "description": "Queue or topic name to forward the messages for a subscription.",
          "required": false,
          "suboptions": {}
        },
        "lock_duration_in_seconds": {
          "aliases": [],
          "description": "Timespan duration of a peek-lock.\nThe amount of time that the message is locked for other receivers.\nThe maximum value for LockDuration is 5 minutes.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "max_delivery_count": {
          "aliases": [],
          "description": "he maximum delivery count.\nA message is automatically deadlettered after this number of deliveries.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the servicebus subscription.",
          "required": true,
          "suboptions": {}
        },
        "namespace": {
          "aliases": [],
          "description": "Servicebus namespace name.\nA namespace is a scoping container for all messaging components.\nMultiple subscriptions and topics can reside within a single namespace, and namespaces often serve as application containers.",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "requires_session": {
          "aliases": [],
          "description": "A value that indicates whether the subscription supports the concept of sessions.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Name of resource group.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Assert the state of the servicebus subscription. Use C(present) to create or update and use C(absent) to delete.",
          "default": "present",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "status": {
          "aliases": [],
          "description": "Status of the entity.",
          "required": false,
          "choices": [
            "active",
            "disabled",
            "send_disabled",
            "receive_disabled"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "topic": {
          "aliases": [],
          "description": "Topic name which the subscription subscribe to.",
          "required": true,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage Azure Service Bus subscription",
      "version_added": "0.1.2"
    },
    "examples": "\n- name: Create a subscription\n  azure_rm_servicebustopicsubscription:\n      name: sbsub\n      resource_group: myResourceGroup\n      namespace: bar\n      topic: subtopic\n"
  },
  "azure.azcollection.azure_rm_snapshot": {
    "doc": {
      "description": "Create, update and delete instance of Azure Snapshot.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "creation_data": {
          "aliases": [],
          "description": "Disk source information.\nCreationData information cannot be changed after the disk has been created.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "create_option": {
              "aliases": [],
              "description": "This enumerates the possible sources of a disk's creation.",
              "type": "str",
              "required": false,
              "choices": [
                "Import",
                "Copy"
              ],
              "suboptions": {}
            },
            "source_id": {
              "aliases": [],
              "description": "If I(createOption=Copy), this is the resource ID of a managed disk to be copied from.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "source_uri": {
              "aliases": [],
              "description": "If I(createOption=Import), this is the URI of a blob to be imported into a managed disk.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "location": {
          "aliases": [],
          "description": "Resource location.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Resource name.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "os_type": {
          "aliases": [],
          "description": "The Operating System type.",
          "type": "str",
          "required": false,
          "choices": [
            "Linux",
            "Windows"
          ],
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "sku": {
          "aliases": [],
          "description": "The snapshots SKU.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "name": {
              "aliases": [],
              "description": "The sku name.",
              "type": "str",
              "required": false,
              "choices": [
                "Standard_LRS",
                "Premium_LRS",
                "Standard_ZRS"
              ],
              "suboptions": {}
            },
            "tier": {
              "aliases": [],
              "description": "The sku tier.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "Assert the state of the Snapshot.\nUse C(present) to create or update an Snapshot and C(absent) to delete it.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage Azure Snapshot instance.",
      "version_added": "0.1.2"
    },
    "examples": "\n- name: Create a snapshot by importing an unmanaged blob from the same subscription.\n  azure_rm_snapshot:\n    resource_group: myResourceGroup\n    name: mySnapshot\n    location: eastus\n    creation_data:\n      create_option: Import\n      source_uri: 'https://mystorageaccount.blob.core.windows.net/osimages/osimage.vhd'\n\n- name: Create a snapshot by copying an existing managed disk.\n  azure_rm_snapshot:\n    resource_group: myResourceGroup\n    name: mySnapshot\n    location: eastus\n    creation_data:\n      create_option: Copy\n      source_id: '/subscriptions/sub123/resourceGroups/group123/providers/Microsoft.Compute/disks/disk123'\n"
  },
  "azure.azcollection.azure_rm_sqldatabase": {
    "doc": {
      "description": "Create, update and delete instance of SQL Database.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "collation": {
          "aliases": [],
          "description": "The collation of the database. If not I(create_mode=default), this value is ignored.",
          "required": false,
          "suboptions": {}
        },
        "create_mode": {
          "aliases": [],
          "description": "Specifies the mode of database creation.\nC(default), regular database creation.\nC(copy), creates a database as a copy of an existing database.\nC(online_secondary)/C(non_readable_secondary), creates a database as a (readable or nonreadable) secondary replica of an existing database.\nC(point_in_time_restore), Creates a database by restoring a point in time backup of an existing database.\nC(recovery), Creates a database by restoring a geo-replicated backup.\nC(restore), Creates a database by restoring a backup of a deleted database.\nC(restore_long_term_retention_backup), Creates a database by restoring from a long term retention vault.\nC(copy), C(non_readable_secondary), C(online_secondary) and C(restore_long_term_retention_backup) are not supported for C(data_warehouse) edition.",
          "required": false,
          "choices": [
            "copy",
            "default",
            "non_readable_secondary",
            "online_secondary",
            "point_in_time_restore",
            "recovery",
            "restore",
            "restore_long_term_retention_backup"
          ],
          "suboptions": {}
        },
        "edition": {
          "aliases": [],
          "description": "(Deprecate)The edition of the database. The DatabaseEditions enumeration contains all the valid editions.\nThis option will be deprecated in 2.11, use I(sku) instead.\nCannot set C(sku) when this field set.",
          "required": false,
          "choices": [
            "web",
            "business",
            "basic",
            "standard",
            "premium",
            "free",
            "stretch",
            "data_warehouse",
            "system",
            "system2"
          ],
          "suboptions": {}
        },
        "elastic_pool_name": {
          "aliases": [],
          "description": "The name of the elastic pool the database is in. Not supported for I(edition=data_warehouse).",
          "required": false,
          "suboptions": {}
        },
        "force_update": {
          "aliases": [],
          "description": "SQL Database will be updated if given parameters differ from existing resource state.\nTo force SQL Database update in any circumstances set this parameter to True.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "location": {
          "aliases": [],
          "description": "Resource location. If not set, location from the resource group will be used as default.",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "max_size_bytes": {
          "aliases": [],
          "description": "The max size of the database expressed in bytes.\nIf not I(create_mode=default), this value is ignored.\nTo see possible values, query the capabilities API (/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationID}/capabilities). referred to by operationId:'Capabilities_ListByLocation'.",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the database to be operated on (updated or created).",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "read_scale": {
          "aliases": [],
          "description": "If the database is a geo-secondary, indicates whether read-only connections are allowed to this database or not.\nNot supported for I(edition=data_warehouse).",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "recovery_services_recovery_point_resource_id": {
          "aliases": [],
          "description": "Required if I(create_mode=restore_long_term_retention_backup), then this value is required.\nSpecifies the resource ID of the recovery point to restore from.",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "required": true,
          "suboptions": {}
        },
        "restore_point_in_time": {
          "aliases": [],
          "description": "Required if I(create_mode=point_in_time_restore), this value is required. If I(create_mode=restore), this value is optional.\nSpecifies the point in time (ISO8601 format) of the source database that will be restored to create the new database.\nMust be greater than or equal to the source database's earliestRestoreDate value.",
          "required": false,
          "suboptions": {}
        },
        "sample_name": {
          "aliases": [],
          "description": "Indicates the name of the sample schema to apply when creating this database.\nIf not I(create_mode=default), this value is ignored.\nNot supported for I(edition=data_warehouse).",
          "required": false,
          "choices": [
            "adventure_works_lt"
          ],
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "server_name": {
          "aliases": [],
          "description": "The name of the server.",
          "required": true,
          "suboptions": {}
        },
        "sku": {
          "aliases": [],
          "description": "The sku of the database. The DatabaseEditions enumeration contains all the valid sku.\nIf I(create_mode=non_readable_secondary) or I(create_mode=online_secondary), this value is ignored.\nTo see possible values, query the capabilities API (/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationID}/capabilities) referred to by operationId:'Capabilities_ListByLocation'.\nCannot set C(edition) when this field set.",
          "required": false,
          "suboptions": {
            "capacity": {
              "aliases": [],
              "description": "Capacity of the particular SKU.",
              "required": false,
              "suboptions": {}
            },
            "family": {
              "aliases": [],
              "description": "If the service has different generations of hardware, for the same SKU, then that can be used here",
              "required": false,
              "suboptions": {}
            },
            "name": {
              "aliases": [],
              "description": "Name of the database SKU, typically, a letter + Number code, e.g. P3",
              "required": true,
              "suboptions": {}
            },
            "size": {
              "aliases": [],
              "description": "Size of the particular SKU",
              "required": false,
              "suboptions": {}
            },
            "tier": {
              "aliases": [],
              "description": "The tier or edition of the particular SKU, e.g. Basic, Premium",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "source_database_deletion_date": {
          "aliases": [],
          "description": "Required if I(create_mode=restore) and I(source_database_id) is the deleted database's original resource id when it existed (as opposed to its current restorable dropped database ID), then this value is required. Specifies the time that the database was deleted.",
          "required": false,
          "suboptions": {}
        },
        "source_database_id": {
          "aliases": [],
          "description": "Required unless I(create_mode=default) or I(create_mode=restore_long_term_retention_backup).\nSpecifies the resource ID of the source database.",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Assert the state of the SQL Database. Use C(present) to create or update an SQL Database and C(absent) to delete it.",
          "default": "present",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "zone_redundant": {
          "aliases": [],
          "description": "Is this database is zone redundant? It means the replicas of this database will be spread across multiple availability zones.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage SQL Database instance",
      "version_added": "0.1.2"
    },
    "examples": "\n  - name: Create (or update) SQL Database\n    azure_rm_sqldatabase:\n      resource_group: myResourceGroup\n      server_name: sqlcrudtest-5961\n      name: testdb\n      location: eastus\n\n  - name: Restore SQL Database\n    azure_rm_sqldatabase:\n      resource_group: myResourceGroup\n      server_name: sqlcrudtest-5961\n      name: restoreddb\n      location: eastus\n      create_mode: restore\n      restorable_dropped_database_id: \"/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/myResourceGroup/providers/Microsoft.Sql/s\n                                       ervers/testsvr/restorableDroppedDatabases/testdb2,131444841315030000\"\n\n  - name: Create SQL Database in Copy Mode\n    azure_rm_sqldatabase:\n      resource_group: myResourceGroup\n      server_name: sqlcrudtest-5961\n      name: copydb\n      location: eastus\n      create_mode: copy\n      source_database_id: \"/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/myResourceGroup/providers/Microsoft.Sql/servers/tests\n                           vr/databases/testdb\"\n\n  - name: Create (or update) SQL Database with SKU\n    azure_rm_sqldatabase:\n      resource_group: myResourceGroup\n      server_name: sqlcrudtest-5961\n      name: testdb\n      location: eastus\n      sku:\n        name: S0\n\n"
  },
  "azure.azcollection.azure_rm_sqldatabase_info": {
    "doc": {
      "description": "Get facts of Azure SQL Database.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "elastic_pool_name": {
          "aliases": [],
          "description": "The name of the elastic pool.",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the database.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "server_name": {
          "aliases": [],
          "description": "The name of the server.",
          "required": true,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure SQL Database facts",
      "version_added": "0.1.2"
    },
    "examples": "\n  - name: Get instance of SQL Database\n    azure_rm_sqldatabase_info:\n      resource_group: testrg\n      server_name: testserver\n      name: testdb\n\n  - name: List instances of SQL Database\n    azure_rm_sqldatabase_info:\n      resource_group: testrg\n      server_name: testserver\n      elastic_pool_name: testep\n\n  - name: List instances of SQL Database\n    azure_rm_sqldatabase_info:\n      resource_group: testrg\n      server_name: testserver\n"
  },
  "azure.azcollection.azure_rm_sqlfirewallrule": {
    "doc": {
      "description": "Create, update and delete instance of Firewall Rule.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "end_ip_address": {
          "aliases": [],
          "description": "The end IP address of the firewall rule.\nMust be IPv4 format. Must be greater than or equal to I(start_ip_address). Use value C(0.0.0.0) to represent all Azure-internal IP addresses.",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the firewall rule.",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "server_name": {
          "aliases": [],
          "description": "The name of the server.",
          "required": true,
          "suboptions": {}
        },
        "start_ip_address": {
          "aliases": [],
          "description": "The start IP address of the firewall rule.\nMust be IPv4 format. Use value C(0.0.0.0) to represent all Azure-internal IP addresses.",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "State of the SQL Database. Use C(present) to create or update an SQL Database and C(absent) to delete it.",
          "default": "present",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage Firewall Rule instance",
      "version_added": "0.1.2"
    },
    "examples": "\n  - name: Create (or update) Firewall Rule\n    azure_rm_sqlfirewallrule:\n      resource_group: myResourceGroup\n      server_name: firewallrulecrudtest-6285\n      name: firewallrulecrudtest-5370\n      start_ip_address: 172.28.10.136\n      end_ip_address: 172.28.10.138\n"
  },
  "azure.azcollection.azure_rm_sqlfirewallrule_info": {
    "doc": {
      "description": "Get facts of SQL Firewall Rule.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the firewall rule.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group that contains the server.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "server_name": {
          "aliases": [],
          "description": "The name of the server.",
          "required": true,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure SQL Firewall Rule facts",
      "version_added": "0.1.2"
    },
    "examples": "\n  - name: Get instance of SQL Firewall Rule\n    azure_rm_sqlfirewallrule_info:\n      resource_group: myResourceGroup\n      server_name: testserver\n      name: testrule\n\n  - name: List instances of SQL Firewall Rule\n    azure_rm_sqlfirewallrule_info:\n      resource_group: myResourceGroup\n      server_name: testserver\n"
  },
  "azure.azcollection.azure_rm_sqlserver": {
    "doc": {
      "description": "Create, update and delete instance of SQL Server.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "admin_password": {
          "aliases": [],
          "description": "The administrator login password (required for server creation).",
          "required": false,
          "suboptions": {}
        },
        "admin_username": {
          "aliases": [],
          "description": "Administrator username for the server. Once created it cannot be changed.",
          "required": false,
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "identity": {
          "aliases": [],
          "description": "The identity type. Set this to C(SystemAssigned) in order to automatically create and assign an Azure Active Directory principal for the resource.\nPossible values include C(SystemAssigned).",
          "required": false,
          "suboptions": {}
        },
        "location": {
          "aliases": [],
          "description": "Resource location.",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the server.",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "State of the SQL server. Use C(present) to create or update a server and use C(absent) to delete a server.",
          "default": "present",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "version": {
          "aliases": [],
          "description": "The version of the server. For example C(12.0).",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage SQL Server instance",
      "version_added": "0.1.2"
    },
    "examples": "\n  - name: Create (or update) SQL Server\n    azure_rm_sqlserver:\n      resource_group: myResourceGroup\n      name: server_name\n      location: westus\n      admin_username: mylogin\n      admin_password: Testpasswordxyz12!\n"
  },
  "azure.azcollection.azure_rm_sqlserver_info": {
    "doc": {
      "description": "Get facts of SQL Server.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "server_name": {
          "aliases": [],
          "description": "The name of the server.",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get SQL Server facts",
      "version_added": "0.1.2"
    },
    "examples": "\n  - name: Get instance of SQL Server\n    azure_rm_sqlserver_info:\n      resource_group: myResourceGroup\n      server_name: server_name\n\n  - name: List instances of SQL Server\n    azure_rm_sqlserver_info:\n      resource_group: myResourceGroup\n"
  },
  "azure.azcollection.azure_rm_storageaccount": {
    "doc": {
      "description": "Create, update or delete a storage account.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "access_tier": {
          "aliases": [],
          "description": "The access tier for this storage account. Required when I(kind=BlobStorage).",
          "required": false,
          "choices": [
            "Hot",
            "Cool"
          ],
          "suboptions": {}
        },
        "account_type": {
          "aliases": [
            "type"
          ],
          "description": "Type of storage account. Required when creating a storage account.\nC(Standard_ZRS) and C(Premium_LRS) accounts cannot be changed to other account types.\nOther account types cannot be changed to C(Standard_ZRS) or C(Premium_LRS).",
          "required": false,
          "choices": [
            "Premium_LRS",
            "Standard_GRS",
            "Standard_LRS",
            "Standard_RAGRS",
            "Standard_ZRS",
            "Premium_ZRS"
          ],
          "suboptions": {}
        },
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "allow_blob_public_access": {
          "aliases": [],
          "description": "Allows blob containers in account to be set for anonymous public access.\nIf set to false, no containers in this account will be able to allow anonymous public access.\nIf omitted, new account creation will default to null which is currently interpreted to True. Existing accounts will not be modified.",
          "type": "bool",
          "required": false,
          "version_added": "1.1.0",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "blob_cors": {
          "aliases": [],
          "description": "Specifies CORS rules for the Blob service.\nYou can include up to five CorsRule elements in the request.\nIf no blob_cors elements are included in the argument list, nothing about CORS will be changed.\nIf you want to delete all CORS rules and disable CORS for the Blob service, explicitly set I(blob_cors=[]).",
          "type": "list",
          "required": false,
          "suboptions": {
            "allowed_headers": {
              "aliases": [],
              "description": "A list of headers allowed to be part of the cross-origin request.",
              "type": "list",
              "required": true,
              "suboptions": {}
            },
            "allowed_methods": {
              "aliases": [],
              "description": "A list of HTTP methods that are allowed to be executed by the origin.",
              "type": "list",
              "required": true,
              "suboptions": {}
            },
            "allowed_origins": {
              "aliases": [],
              "description": "A list of origin domains that will be allowed via CORS, or \"*\" to allow all domains.",
              "type": "list",
              "required": true,
              "suboptions": {}
            },
            "exposed_headers": {
              "aliases": [],
              "description": "A list of response headers to expose to CORS clients.",
              "type": "list",
              "required": true,
              "suboptions": {}
            },
            "max_age_in_seconds": {
              "aliases": [],
              "description": "The number of seconds that the client/browser should cache a preflight response.",
              "type": "int",
              "required": true,
              "suboptions": {}
            }
          }
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "custom_domain": {
          "aliases": [
            "custom_dns_domain_suffix"
          ],
          "description": "User domain assigned to the storage account.\nMust be a dictionary with I(name) and I(use_sub_domain) keys where I(name) is the CNAME source.\nOnly one custom domain is supported per storage account at this time.\nTo clear the existing custom domain, use an empty string for the custom domain name property.\nCan be added to an existing storage account. Will be ignored during storage account creation.",
          "required": false,
          "suboptions": {}
        },
        "force_delete_nonempty": {
          "aliases": [
            "force"
          ],
          "description": "Attempt deletion if resource already exists and cannot be updated.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "https_only": {
          "aliases": [],
          "description": "Allows https traffic only to storage service when set to C(True).\nIf omitted, new account creation will default to True, while existing accounts will not be change.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "kind": {
          "aliases": [],
          "description": "The kind of storage.\nThe C(FileStorage) and (BlockBlobStorage) only used when I(account_type=Premium_LRS) or I(account_type=Premium_ZRS).",
          "default": "Storage",
          "required": false,
          "choices": [
            "Storage",
            "StorageV2",
            "BlobStorage",
            "BlockBlobStorage",
            "FileStorage"
          ],
          "suboptions": {}
        },
        "location": {
          "aliases": [],
          "description": "Valid Azure location. Defaults to location of the resource group.",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "minimum_tls_version": {
          "aliases": [],
          "description": "The minimum required version of Transport Layer Security (TLS) for requests to a storage account.\nIf omitted, new account creation will default to null which is currently interpreted to TLS1_0. Existing accounts will not be modified.",
          "required": false,
          "choices": [
            "TLS1_0",
            "TLS1_1",
            "TLS1_2"
          ],
          "version_added": "1.0.0",
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the storage account to update or create.",
          "required": false,
          "suboptions": {}
        },
        "network_acls": {
          "aliases": [],
          "description": "Manages the Firewall and virtual networks settings of the storage account.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "bypass": {
              "aliases": [],
              "description": "When I(default_action=Deny) this controls which Azure components can still reach the Storage Account.\nThe list is comma separated.\nIt can be any combination of the example C(AzureServices), C(Logging), C(Metrics).\nIf no Azure components are allowed, explicitly set I(bypass=\"\").",
              "default": "AzureServices",
              "required": false,
              "suboptions": {}
            },
            "default_action": {
              "aliases": [],
              "description": "Default firewall traffic rule.\nIf I(default_action=Allow) no other settings have effect.",
              "default": "Allow",
              "required": false,
              "choices": [
                "Allow",
                "Deny"
              ],
              "suboptions": {}
            },
            "ip_rules": {
              "aliases": [],
              "description": "A list of IP addresses or ranges in CIDR format.",
              "required": false,
              "suboptions": {
                "action": {
                  "aliases": [],
                  "description": "The only logical I(action=Allow) because this setting is only accessible when I(default_action=Deny).",
                  "default": "Allow",
                  "required": false,
                  "suboptions": {}
                },
                "value": {
                  "aliases": [],
                  "description": "The IP address or range.",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "virtual_network_rules": {
              "aliases": [],
              "description": "A list of subnets and their actions.",
              "required": false,
              "suboptions": {
                "action": {
                  "aliases": [],
                  "description": "The only logical I(action=Allow) because this setting is only accessible when I(default_action=Deny).",
                  "default": "Allow",
                  "required": false,
                  "suboptions": {}
                },
                "id": {
                  "aliases": [],
                  "description": "The complete path to the subnet.",
                  "required": false,
                  "suboptions": {}
                }
              }
            }
          }
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [
            "resource_group_name"
          ],
          "description": "Name of the resource group to use.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "State of the storage account. Use C(present) to create or update a storage account and use C(absent) to delete an account.",
          "default": "present",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage Azure storage accounts",
      "version_added": "0.1.0"
    },
    "examples": "\n    - name: remove account, if it exists\n      azure_rm_storageaccount:\n        resource_group: myResourceGroup\n        name: clh0002\n        state: absent\n\n    - name: create an account\n      azure_rm_storageaccount:\n        resource_group: myResourceGroup\n        name: clh0002\n        type: Standard_RAGRS\n        tags:\n          testing: testing\n          delete: on-exit\n\n    - name: Create an account with kind of FileStorage\n      azure_rm_storageaccount:\n        resource_group: myResourceGroup\n        name: c1h0002\n        type: Premium_LRS\n        kind: FileStorage\n        tags:\n          testing: testing\n\n    - name: configure firewall and virtual networks\n      azure_rm_storageaccount:\n        resource_group: myResourceGroup\n        name: clh0002\n        type: Standard_RAGRS\n        network_acls:\n          bypass: AzureServices,Metrics\n          default_action: Deny\n          virtual_network_rules:\n            - id: /subscriptions/mySubscriptionId/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/myVnet/subnets/mySubnet\n              action: Allow\n          ip_rules:\n            - value: 1.2.3.4\n              action: Allow\n            - value: 123.234.123.0/24\n              action: Allow\n\n    - name: create an account with blob CORS\n      azure_rm_storageaccount:\n        resource_group: myResourceGroup\n        name: clh002\n        type: Standard_RAGRS\n        blob_cors:\n            - allowed_origins:\n                - http://www.example.com/\n              allowed_methods:\n                - GET\n                - POST\n              allowed_headers:\n                - x-ms-meta-data*\n                - x-ms-meta-target*\n                - x-ms-meta-abc\n              exposed_headers:\n                - x-ms-meta-*\n              max_age_in_seconds: 200\n"
  },
  "azure.azcollection.azure_rm_storageaccount_info": {
    "doc": {
      "description": "Get facts for one storage account or all storage accounts within a resource group.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Only show results for a specific account.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [
            "resource_group_name"
          ],
          "description": "Limit results to a resource group. Required when filtering by name.",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "show_blob_cors": {
          "aliases": [],
          "description": "Show the blob CORS settings for each blob related to the storage account.\nQuerying all storage accounts will take a long time.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "show_connection_string": {
          "aliases": [],
          "description": "Show the connection string for each of the storageaccount's endpoints.\nFor convenient usage, C(show_connection_string) will also show the access keys for each of the storageaccount's endpoints.\nNote that it will cost a lot of time when list all storageaccount rather than query a single one.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get storage account facts",
      "version_added": "0.1.2"
    },
    "examples": "\n    - name: Get facts for one account\n      azure_rm_storageaccount_info:\n        resource_group: myResourceGroup\n        name: clh0002\n\n    - name: Get facts for all accounts in a resource group\n      azure_rm_storageaccount_info:\n        resource_group: myResourceGroup\n\n    - name: Get facts for all accounts by tags\n      azure_rm_storageaccount_info:\n        tags:\n          - testing\n          - foo:bar\n"
  },
  "azure.azcollection.azure_rm_storageblob": {
    "doc": {
      "description": "Create, update and delete blob containers and blob objects.\nUse to upload a file and store it as a blob object, or download a blob object to a file(upload and download mode)\nUse to upload a batch of files under a given directory(batch upload mode)\nIn the batch upload mode, the existing blob object will be overwritten if a blob object with the same name is to be created.\nthe module can work exclusively in three modes, when C(batch_upload_src) is set, it is working in batch upload mode; when C(src) is set, it is working in upload mode and when C(dst) is set, it is working in dowload mode.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "batch_upload_dst": {
          "aliases": [],
          "description": "Base directory in container when upload batch of files.",
          "required": false,
          "suboptions": {}
        },
        "batch_upload_src": {
          "aliases": [],
          "description": "Batch upload source directory. Use with state C(present) to upload batch of files under the directory.",
          "required": false,
          "suboptions": {}
        },
        "blob": {
          "aliases": [
            "blob_name"
          ],
          "description": "Name of a blob object within the container.",
          "required": false,
          "suboptions": {}
        },
        "blob_type": {
          "aliases": [],
          "description": "Type of blob object.",
          "default": "block",
          "required": false,
          "choices": [
            "block",
            "page"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cache_control": {
          "aliases": [],
          "description": "Set the blob cache-control header.",
          "required": false,
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "container": {
          "aliases": [
            "container_name"
          ],
          "description": "Name of a blob container within the storage account.",
          "required": true,
          "suboptions": {}
        },
        "content_disposition": {
          "aliases": [],
          "description": "Set the blob content-disposition header.",
          "required": false,
          "suboptions": {}
        },
        "content_encoding": {
          "aliases": [],
          "description": "Set the blob encoding header.",
          "required": false,
          "suboptions": {}
        },
        "content_language": {
          "aliases": [],
          "description": "Set the blob content-language header.",
          "required": false,
          "suboptions": {}
        },
        "content_md5": {
          "aliases": [],
          "description": "Set the blob md5 hash value.",
          "required": false,
          "suboptions": {}
        },
        "content_type": {
          "aliases": [],
          "description": "Set the blob content-type header. For example C(image/png).",
          "required": false,
          "suboptions": {}
        },
        "dest": {
          "aliases": [
            "destination"
          ],
          "description": "Destination file path. Use with state C(present) to download a blob.",
          "required": false,
          "suboptions": {}
        },
        "force": {
          "aliases": [],
          "description": "Overwrite existing blob or file when uploading or downloading. Force deletion of a container that contains blobs.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "public_access": {
          "aliases": [],
          "description": "A container's level of public access. By default containers are private.\nCan only be set at time of container creation.",
          "required": false,
          "choices": [
            "container",
            "blob"
          ],
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [
            "resource_group_name"
          ],
          "description": "Name of the resource group to use.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "src": {
          "aliases": [
            "source"
          ],
          "description": "Source file path. Use with state C(present) to upload a blob.",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "State of a container or blob.\nUse state C(absent) with a container value only to delete a container. Include a blob value to remove a specific blob. A container will not be deleted, if it contains blobs. Use the I(force) option to override, deleting the container and all associated blobs.\nUse state C(present) to create or update a container and upload or download a blob. If the container does not exist, it will be created. If it exists, it will be updated with configuration options. Provide a blob name and either src or dest to upload or download. Provide a src path to upload and a dest path to download. If a blob (uploading) or a file (downloading) already exists, it will not be overwritten unless I(force=true).",
          "default": "present",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "storage_account_name": {
          "aliases": [
            "account_name",
            "storage_account"
          ],
          "description": "Name of the storage account to use.",
          "required": true,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage blob containers and blob objects",
      "version_added": "0.0.1"
    },
    "examples": "\n- name: Remove container foo\n  azure_rm_storageblob:\n    resource_group: myResourceGroup\n    storage_account_name: clh0002\n    container: foo\n    state: absent\n\n- name: Create container foo and upload a file\n  azure_rm_storageblob:\n    resource_group: myResourceGroup\n    storage_account_name: clh0002\n    container: foo\n    blob: graylog.png\n    src: ./files/graylog.png\n    public_access: container\n    content_type: 'application/image'\n\n- name: Download the file\n  azure_rm_storageblob:\n    resource_group: myResourceGroup\n    storage_account_name: clh0002\n    container: foo\n    blob: graylog.png\n    dest: ~/tmp/images/graylog.png\n"
  },
  "azure.azcollection.azure_rm_subnet": {
    "doc": {
      "description": "Create, update or delete a subnet within a given virtual network.\nAllows setting and updating the address prefix CIDR, which must be valid within the context of the virtual network.\nUse the M(azure_rm_networkinterface) module to associate interfaces with the subnet and assign specific IP addresses.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "address_prefix_cidr": {
          "aliases": [
            "address_prefix"
          ],
          "description": "CIDR defining the IPv4 address space of the subnet. Must be valid within the context of the virtual network.",
          "required": false,
          "suboptions": {}
        },
        "address_prefixes_cidr": {
          "aliases": [
            "address_prefixes"
          ],
          "description": "CIDR defining the IPv4 and IPv6 address space of the subnet. Must be valid within the context of the virtual network.\nIf set I(address_prefix), It will not set.",
          "type": "list",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "delegations": {
          "aliases": [],
          "description": "An array of delegations.",
          "type": "list",
          "required": false,
          "suboptions": {
            "actions": {
              "aliases": [],
              "description": "A list of actions.",
              "type": "list",
              "required": false,
              "suboptions": {}
            },
            "name": {
              "aliases": [],
              "description": "The name of delegation.",
              "required": true,
              "suboptions": {}
            },
            "serviceName": {
              "aliases": [],
              "description": "The type of the endpoint service.",
              "required": true,
              "choices": [
                "Microsoft.Web/serverFarms",
                "Microsoft.ContainerInstance/containerGroups",
                "Microsoft.Netapp/volumes",
                "Microsoft.HardwareSecurityModules/dedicatedHSMs",
                "Microsoft.ServiceFabricMesh/networks",
                "Microsoft.Logic/integrationServiceEnvironments",
                "Microsoft.Batch/batchAccounts",
                "Microsoft.Sql/managedInstances",
                "Microsoft.Web/hostingEnvironments",
                "Microsoft.BareMetal/CrayServers",
                "Microsoft.BareMetal/MonitoringServers",
                "Microsoft.Databricks/workspaces",
                "Microsoft.BareMetal/AzureHostedService",
                "Microsoft.BareMetal/AzureVMware",
                "Microsoft.BareMetal/AzureHPC",
                "Microsoft.BareMetal/AzurePaymentHSM",
                "Microsoft.StreamAnalytics/streamingJobs",
                "Microsoft.DBforPostgreSQL/serversv2",
                "Microsoft.AzureCosmosDB/clusters",
                "Microsoft.MachineLearningServices/workspaces",
                "Microsoft.DBforPostgreSQL/singleServers",
                "Microsoft.DBforPostgreSQL/flexibleServers",
                "Microsoft.DBforMySQL/serversv2",
                "Microsoft.DBforMySQL/flexibleServers",
                "Microsoft.ApiManagement/service",
                "Microsoft.Synapse/workspaces",
                "Microsoft.PowerPlatform/vnetaccesslinks",
                "Microsoft.Network/managedResolvers",
                "Microsoft.Kusto/clusters"
              ],
              "suboptions": {}
            }
          }
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the subnet.",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "private_endpoint_network_policies": {
          "aliases": [],
          "description": "C(Enabled) or C(Disabled) apply network policies on private endpoints in the subnet.",
          "default": "Enabled",
          "type": "str",
          "required": false,
          "choices": [
            "Enabled",
            "Disabled"
          ],
          "suboptions": {}
        },
        "private_link_service_network_policies": {
          "aliases": [],
          "description": "C(Enabled) or C(Disabled) apply network policies on private link service in the subnet.",
          "default": "Enabled",
          "type": "str",
          "required": false,
          "choices": [
            "Enabled",
            "Disabled"
          ],
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Name of resource group.",
          "required": true,
          "suboptions": {}
        },
        "route_table": {
          "aliases": [],
          "description": "The reference of the RouteTable resource.\nCan be the name or resource ID of the route table.\nCan be a dict containing the I(name) and I(resource_group) of the route table.",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_group": {
          "aliases": [
            "security_group_name"
          ],
          "description": "Existing security group with which to associate the subnet.\nIt can be the security group name which is in the same resource group.\nCan be the resource ID of the security group.\nCan be a dict containing the I(name) and I(resource_group) of the security group.",
          "required": false,
          "suboptions": {}
        },
        "service_endpoints": {
          "aliases": [],
          "description": "An array of service endpoints.",
          "type": "list",
          "required": false,
          "suboptions": {
            "locations": {
              "aliases": [],
              "description": "A list of locations.",
              "type": "list",
              "required": false,
              "suboptions": {}
            },
            "service": {
              "aliases": [],
              "description": "The type of the endpoint service.",
              "required": true,
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "Assert the state of the subnet. Use C(present) to create or update a subnet and use C(absent) to delete a subnet.",
          "default": "present",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "virtual_network_name": {
          "aliases": [
            "virtual_network"
          ],
          "description": "Name of an existing virtual network with which the subnet is or will be associated.",
          "required": true,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage Azure subnets",
      "version_added": "0.1.0"
    },
    "examples": "\n    - name: Create a subnet\n      azure_rm_subnet:\n        resource_group: myResourceGroup\n        virtual_network_name: myVirtualNetwork\n        name: mySubnet\n        address_prefix_cidr: \"10.1.0.0/24\"\n\n    - name: Create a subnet refer nsg from other resource group\n      azure_rm_subnet:\n        resource_group: myResourceGroup\n        virtual_network_name: myVirtualNetwork\n        name: mySubnet\n        address_prefix_cidr: \"10.1.0.0/16\"\n        security_group:\n          name: secgroupfoo\n          resource_group: mySecondResourceGroup\n        route_table: route\n\n    - name: Create a subnet with service endpoint\n      azure_rm_subnet:\n        resource_group: myResourceGroup\n        virtual_network_name: myVirtualNetwork\n        name: mySubnet\n        address_prefix_cidr: \"10.1.0.0/16\"\n        service_endpoints:\n          - service: \"Microsoft.Sql\"\n            locations:\n              - \"eastus\"\n\n    - name: Create a subnet with delegations\n      azure_rm_subnet:\n        resource_group: myResourceGroup\n        virtual_network_name: myVirtualNetwork\n        name: mySubnet\n        address_prefix_cidr: \"10.1.0.0/16\"\n        delegations:\n          - name: 'mydeleg'\n            serviceName: 'Microsoft.ContainerInstance/containerGroups'\n\n    - name: Delete a subnet\n      azure_rm_subnet:\n        resource_group: myResourceGroup\n        virtual_network_name: myVirtualNetwork\n        name: mySubnet\n        state: absent\n"
  },
  "azure.azcollection.azure_rm_subnet_info": {
    "doc": {
      "description": "Get facts of Azure Subnet.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the subnet.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "virtual_network_name": {
          "aliases": [],
          "description": "The name of the virtual network.",
          "required": true,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure Subnet facts",
      "version_added": "0.1.2"
    },
    "examples": "\n  - name: Get facts of specific subnet\n    azure_rm_subnet_info:\n      resource_group: myResourceGroup\n      virtual_network_name: myVirtualNetwork\n      name: mySubnet\n\n  - name: List facts for all subnets in virtual network\n    azure_rm_subnet_info:\n      resource_group: myResourceGroup\n      virtual_network_name: myVirtualNetwork\n      name: mySubnet\n"
  },
  "azure.azcollection.azure_rm_subscription_info": {
    "doc": {
      "description": "Get facts for a specific subscription or all subscriptions.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "all": {
          "aliases": [],
          "description": "If true, will return all subscriptions.\nIf false will omit disabled subscriptions (default).\nOption has no effect when searching by id or name, and will be silently ignored.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "id": {
          "aliases": [],
          "description": "Limit results to a specific subscription by id.\nMutually exclusive with I(name).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [
            "subscription_name"
          ],
          "description": "Limit results to a specific subscription by name.\nMutually exclusive with I(id).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.\nOption has no effect when searching by id or name, and will be silently ignored.",
          "type": "list",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure Subscription facts",
      "version_added": "1.2.0"
    },
    "examples": "\n- name: Get facts for one subscription by id\n  azure_rm_subscription_info:\n    id: 00000000-0000-0000-0000-000000000000\n\n- name: Get facts for one subscription by name\n  azure_rm_subscription_info:\n    name: \"my-subscription\"\n\n- name: Get facts for all subscriptions, including ones that are disabled.\n  azure_rm_subscription_info:\n    all: True\n\n- name: Get facts for subscriptions containing tags provided.\n  azure_rm_subscription_info:\n    tags:\n        - testing\n        - foo:bar\n"
  },
  "azure.azcollection.azure_rm_trafficmanager": {
    "doc": {
      "description": "Create, update and delete a Traffic Manager profile.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "dns_config": {
          "aliases": [],
          "description": "The DNS settings of the Traffic Manager profile.",
          "required": false,
          "suboptions": {
            "relative_name": {
              "aliases": [],
              "description": "The relative DNS name provided by this Traffic Manager profile.\nIf no provided, name of the Traffic Manager will be used",
              "required": false,
              "suboptions": {}
            },
            "ttl": {
              "aliases": [],
              "description": "The DNS Time-To-Live (TTL), in seconds.",
              "default": "60",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "endpoints": {
          "aliases": [],
          "description": "The list of endpoints in the Traffic Manager profile.",
          "required": false,
          "suboptions": {
            "endpoint_location": {
              "aliases": [],
              "description": "Specifies the location of the external or nested endpoints when using the 'Performance' traffic routing method.",
              "required": false,
              "suboptions": {}
            },
            "endpoint_status": {
              "aliases": [],
              "description": "The status of the endpoint.",
              "required": false,
              "choices": [
                "Enabled",
                "Disabled"
              ],
              "suboptions": {}
            },
            "geo_mapping": {
              "aliases": [],
              "description": "The list of countries/regions mapped to this endpoint when using the 'Geographic' traffic routing method.",
              "required": false,
              "suboptions": {}
            },
            "id": {
              "aliases": [],
              "description": "Fully qualified resource Id for the resource.",
              "required": false,
              "suboptions": {}
            },
            "min_child_endpoints": {
              "aliases": [],
              "description": "The minimum number of endpoints that must be available in the child profile in order for the parent profile to be considered available.\nOnly applicable to endpoint of type 'NestedEndpoints'.",
              "required": false,
              "suboptions": {}
            },
            "name": {
              "aliases": [],
              "description": "The name of the endpoint.",
              "required": true,
              "suboptions": {}
            },
            "priority": {
              "aliases": [],
              "description": "The priority of this endpoint when using the 'Priority' traffic routing method.\nPossible values are from 1 to 1000, lower values represent higher priority.\nThis is an optional parameter. If specified, it must be specified on all endpoints.\nNo two endpoints can share the same priority value.",
              "required": false,
              "suboptions": {}
            },
            "target": {
              "aliases": [],
              "description": "The fully-qualified DNS name of the endpoint.",
              "required": false,
              "suboptions": {}
            },
            "target_resource_id": {
              "aliases": [],
              "description": "The Azure Resource URI of the of the endpoint.\nNot applicable to endpoints of type 'ExternalEndpoints'.",
              "required": false,
              "suboptions": {}
            },
            "type": {
              "aliases": [],
              "description": "The type of the endpoint. Ex- Microsoft.network/TrafficManagerProfiles/ExternalEndpoints.",
              "required": true,
              "suboptions": {}
            },
            "weight": {
              "aliases": [],
              "description": "The weight of this endpoint when using the 'Weighted' traffic routing method.\nPossible values are from 1 to 1000.",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "location": {
          "aliases": [],
          "description": "Valid azure location. Defaults to 'global'.",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "monitor_config": {
          "aliases": [],
          "description": "The endpoint monitoring settings of the Traffic Manager profile.",
          "default": "{'path': '/', 'port': 80, 'protocol': 'HTTP'}",
          "required": false,
          "suboptions": {
            "interval_in_seconds": {
              "aliases": [],
              "description": "The monitor interval for endpoints in this profile.",
              "required": false,
              "suboptions": {}
            },
            "path": {
              "aliases": [],
              "description": "The path relative to the endpoint domain name used to probe for endpoint health.",
              "required": false,
              "suboptions": {}
            },
            "port": {
              "aliases": [],
              "description": "The TCP port used to probe for endpoint health.",
              "required": false,
              "suboptions": {}
            },
            "protocol": {
              "aliases": [],
              "description": "The protocol (HTTP, HTTPS or TCP) used to probe for endpoint health.",
              "required": false,
              "choices": [
                "HTTP",
                "HTTPS",
                "TCP"
              ],
              "suboptions": {}
            },
            "timeout_in_seconds": {
              "aliases": [],
              "description": "The monitor timeout for endpoints in this profile.",
              "required": false,
              "suboptions": {}
            },
            "tolerated_number_of_failures": {
              "aliases": [],
              "description": "The number of consecutive failed health check before declaring an endpoint in this profile Degraded after the next failed health check.",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "name": {
          "aliases": [],
          "description": "Name of the Traffic Manager profile.",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile_status": {
          "aliases": [],
          "description": "The status of the Traffic Manager profile.",
          "default": "Enabled",
          "required": false,
          "choices": [
            "Enabled",
            "Disabled"
          ],
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Name of a resource group where the Traffic Manager profile exists or will be created.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Assert the state of the Traffic Manager profile. Use C(present) to create or update a Traffic Manager profile and C(absent) to delete it.",
          "default": "present",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "traffic_routing_method": {
          "aliases": [],
          "description": "The traffic routing method of the Traffic Manager profile.",
          "default": "Performance",
          "required": false,
          "choices": [
            "Performance",
            "Priority",
            "Weighted",
            "Geographic"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage a Traffic Manager profile.",
      "version_added": "0.1.2"
    },
    "examples": "\n    - name: Create a Traffic Manager Profile\n      azure_rm_trafficmanager:\n        name: tmtest\n        resource_group: tmt\n        location: global\n        profile_status: Enabled\n        traffic_routing_method: Priority\n        dns_config:\n          relative_name: tmtest\n          ttl: 60\n        monitor_config:\n          protocol: HTTPS\n          port: 80\n          path: '/'\n        endpoints:\n          - name: e1\n            type: Microsoft.network/TrafficManagerProfiles/ExternalEndpoints\n            endpoint_location: West US 2\n            endpoint_status: Enabled\n            priority: 2\n            target: 1.2.3.4\n            weight: 1\n        tags:\n          Environment: Test\n\n    - name: Delete a Traffic Manager Profile\n      azure_rm_trafficmanager:\n        state: absent\n        name: tmtest\n        resource_group: tmt\n"
  },
  "azure.azcollection.azure_rm_trafficmanagerendpoint": {
    "doc": {
      "description": "Create, update and delete Azure Traffic Manager endpoint.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "enabled": {
          "aliases": [],
          "description": "The status of the endpoint.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "geo_mapping": {
          "aliases": [],
          "description": "The list of countries/regions mapped to this endpoint when traffic manager profile has routing_method of C(geographic).",
          "type": "list",
          "required": false,
          "suboptions": {}
        },
        "location": {
          "aliases": [],
          "description": "Specifies the location of the external or nested endpoints when using the 'Performance' traffic routing method.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "min_child_endpoints": {
          "aliases": [],
          "description": "The minimum number of endpoints that must be available in the child profile in order for the parent profile to be considered available.\nOnly applicable to endpoint of I(type=nested_endpoints).",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the endpoint.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "priority": {
          "aliases": [],
          "description": "The priority of this endpoint when traffic manager profile has routing_method of I(priority).\nPossible values are from 1 to 1000, lower values represent higher priority.\nThis is an optional parameter. If specified, it must be specified on all endpoints.\nNo two endpoints can share the same priority value.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile_name": {
          "aliases": [],
          "description": "Name of Traffic Manager profile where this endpoints attaches to.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Name of a resource group where the Traffic Manager endpoint exists or will be created.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Assert the state of the Traffic Manager endpoint. Use C(present) to create or update a Traffic Manager endpoint and C(absent) to delete it.",
          "default": "present",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "target": {
          "aliases": [],
          "description": "The fully-qualified DNS name of the endpoint.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "target_resource_id": {
          "aliases": [],
          "description": "The Azure Resource URI of the of the endpoint.\nNot applicable to endpoints of I(type=external_endpoints).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "type": {
          "aliases": [],
          "description": "The type of the endpoint.",
          "required": true,
          "choices": [
            "azure_endpoints",
            "external_endpoints",
            "nested_endpoints"
          ],
          "suboptions": {}
        },
        "weight": {
          "aliases": [],
          "description": "The weight of this endpoint when traffic manager profile has routing_method of C(weighted).\nPossible values are from 1 to 1000.",
          "type": "int",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage Azure Traffic Manager endpoint",
      "version_added": "0.1.2"
    },
    "examples": "\n  - name: create a endpoint for a traffic manager profile\n    azure_rm_trafficmanagerendpoint:\n        resource_group: testresourcegroup\n        profile_name: myprofilename\n        name: testendpoint1\n        type: external_endpoints\n        location: westus\n        priority: 2\n        weight: 1\n        target: 1.2.3.4\n"
  },
  "azure.azcollection.azure_rm_trafficmanagerendpoint_info": {
    "doc": {
      "description": "Get facts for a specific Traffic Manager endpoints or all endpoints  in a Traffic Manager profile.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Limit results to a specific Traffic Manager endpoint.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile_name": {
          "aliases": [],
          "description": "Name of Traffic Manager Profile.",
          "required": true,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The resource group to search for the desired Traffic Manager profile.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "type": {
          "aliases": [],
          "description": "Type of endpoint.",
          "required": false,
          "choices": [
            "azure_endpoints",
            "external_endpoints",
            "nested_endpoints"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure Traffic Manager endpoint facts",
      "version_added": "0.1.2"
    },
    "examples": "\n    - name: Get endpoints facts of a Traffic Manager profile\n      azure_rm_trafficmanagerendpoint_info:\n        resource_group: myResourceGroup\n        profile_name: Testing\n\n    - name: Get specific endpoint of a Traffic Manager profile\n      azure_rm_trafficmanager_info:\n        resource_group: myResourceGroup\n        profile_name: Testing\n        name: test_external_endpoint\n\n"
  },
  "azure.azcollection.azure_rm_trafficmanagerprofile": {
    "doc": {
      "description": "Create, update and delete a Traffic Manager profile.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "dns_config": {
          "aliases": [],
          "description": "The DNS settings of the Traffic Manager profile.",
          "required": false,
          "suboptions": {
            "relative_name": {
              "aliases": [],
              "description": "The relative DNS name provided by this Traffic Manager profile.\nIf not provided, name of the Traffic Manager will be used.",
              "required": false,
              "suboptions": {}
            },
            "ttl": {
              "aliases": [],
              "description": "The DNS Time-To-Live (TTL), in seconds.",
              "default": "60",
              "type": "int",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "location": {
          "aliases": [],
          "description": "Valid Azure location. Defaults to C(global) because in default public Azure cloud, Traffic Manager profile can only be deployed globally.\nReference U(https://docs.microsoft.com/en-us/azure/traffic-manager/quickstart-create-traffic-manager-profile#create-a-traffic-manager-profile).",
          "default": "global",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "monitor_config": {
          "aliases": [],
          "description": "The endpoint monitoring settings of the Traffic Manager profile.",
          "default": "{'path': '/', 'port': 80, 'protocol': 'HTTP'}",
          "required": false,
          "suboptions": {
            "interval": {
              "aliases": [],
              "description": "The monitor interval for endpoints in this profile in seconds.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "path": {
              "aliases": [],
              "description": "The path relative to the endpoint domain name used to probe for endpoint health.",
              "required": false,
              "suboptions": {}
            },
            "port": {
              "aliases": [],
              "description": "The TCP port used to probe for endpoint health.",
              "required": false,
              "suboptions": {}
            },
            "protocol": {
              "aliases": [],
              "description": "The protocol C(HTTP), C(HTTPS) or C(TCP) used to probe for endpoint health.",
              "required": false,
              "choices": [
                "HTTP",
                "HTTPS",
                "TCP"
              ],
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "The monitor timeout for endpoints in this profile in seconds.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "tolerated_failures": {
              "aliases": [],
              "description": "The number of consecutive failed health check before declaring an endpoint in this profile Degraded after the next failed health check.",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "name": {
          "aliases": [],
          "description": "Name of the Traffic Manager profile.",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile_status": {
          "aliases": [],
          "description": "The status of the Traffic Manager profile.",
          "default": "enabled",
          "required": false,
          "choices": [
            "enabled",
            "disabled"
          ],
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Name of a resource group where the Traffic Manager profile exists or will be created.",
          "required": true,
          "suboptions": {}
        },
        "routing_method": {
          "aliases": [],
          "description": "The traffic routing method of the Traffic Manager profile.",
          "default": "performance",
          "required": false,
          "choices": [
            "performance",
            "priority",
            "weighted",
            "geographic"
          ],
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Assert the state of the Traffic Manager profile. Use C(present) to create or update a Traffic Manager profile and C(absent) to delete it.",
          "default": "present",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage Azure Traffic Manager profile",
      "version_added": "0.1.2"
    },
    "examples": "\n    - name: Create a Traffic Manager Profile\n      azure_rm_trafficmanagerprofile:\n        name: tmtest\n        resource_group: myResourceGroup\n        location: global\n        profile_status: enabled\n        routing_method: priority\n        dns_config:\n          relative_name: tmtest\n          ttl: 60\n        monitor_config:\n          protocol: HTTPS\n          port: 80\n          path: '/'\n        tags:\n          Environment: Test\n\n    - name: Delete a Traffic Manager Profile\n      azure_rm_trafficmanagerprofile:\n        state: absent\n        name: tmtest\n        resource_group: myResourceGroup\n"
  },
  "azure.azcollection.azure_rm_trafficmanagerprofile_info": {
    "doc": {
      "description": "Get facts for a Azure specific Traffic Manager profile or all Traffic Manager profiles.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Limit results to a specific Traffic Manager profile.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The resource group to search for the desired Traffic Manager profile.",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure Traffic Manager profile facts",
      "version_added": "0.1.2"
    },
    "examples": "\n    - name: Get facts for one Traffic Manager profile\n      azure_rm_trafficmanager_info:\n        name: Testing\n        resource_group: myResourceGroup\n\n    - name: Get facts for all Traffic Manager profiles\n      azure_rm_trafficmanager_info:\n\n    - name: Get facts by tags\n      azure_rm_trafficmanager_info:\n        tags:\n          - Environment:Test\n"
  },
  "azure.azcollection.azure_rm_virtualmachine": {
    "doc": {
      "description": "Manage and configure virtual machines (VMs) and associated resources on Azure.\nRequires a resource group containing at least one virtual network with at least one subnet.\nSupports images from the Azure Marketplace, which can be discovered with M(azure_rm_virtualmachineimage_info).\nSupports custom images since Ansible 2.5.\nTo use I(custom_data) on a Linux image, the image must have cloud-init enabled. If cloud-init is not enabled, I(custom_data) is ignored.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "accept_terms": {
          "aliases": [],
          "description": "Accept terms for Marketplace images that require it.\nOnly Azure service admin/account admin users can purchase images from the Marketplace.\nOnly valid when a I(plan) is specified.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "admin_password": {
          "aliases": [],
          "description": "Password for the admin username.\nNot required if the I(os_type=Linux) and SSH password authentication is disabled by setting I(ssh_password_enabled=false).",
          "required": false,
          "suboptions": {}
        },
        "admin_username": {
          "aliases": [],
          "description": "Admin username used to access the VM after it is created.\nRequired when creating a VM.",
          "required": false,
          "suboptions": {}
        },
        "allocated": {
          "aliases": [],
          "description": "Whether the VM is allocated or deallocated, only useful with I(state=present).",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "availability_set": {
          "aliases": [],
          "description": "Name or ID of an existing availability set to add the VM to. The I(availability_set) should be in the same resource group as VM.",
          "required": false,
          "suboptions": {}
        },
        "boot_diagnostics": {
          "aliases": [],
          "description": "Manage boot diagnostics settings for a VM.\nBoot diagnostics includes a serial console and remote console screenshots.",
          "required": false,
          "suboptions": {
            "enabled": {
              "aliases": [],
              "description": "Flag indicating if boot diagnostics are enabled.",
              "type": "bool",
              "required": true,
              "suboptions": {}
            },
            "resource_group": {
              "aliases": [],
              "description": "Resource group where the storage account is located.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "storage_account": {
              "aliases": [],
              "description": "The name of an existing storage account to use for boot diagnostics.\nIf not specified, uses I(storage_account_name) defined one level up.\nIf storage account is not specified anywhere, and C(enabled) is C(true), a default storage account is created for boot diagnostics data.",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "custom_data": {
          "aliases": [],
          "description": "Data made available to the VM and used by C(cloud-init).\nOnly used on Linux images with C(cloud-init) enabled.\nConsult U(https://docs.microsoft.com/en-us/azure/virtual-machines/linux/using-cloud-init#cloud-init-overview) for cloud-init ready images.\nTo enable cloud-init on a Linux image, follow U(https://docs.microsoft.com/en-us/azure/virtual-machines/linux/cloudinit-prepare-custom-image).",
          "required": false,
          "suboptions": {}
        },
        "data_disks": {
          "aliases": [],
          "description": "Describes list of data disks.\nUse M(azure_rm_mangeddisk) to manage the specific disk.",
          "required": false,
          "suboptions": {
            "caching": {
              "aliases": [],
              "description": "Type of data disk caching.",
              "default": "ReadOnly",
              "required": false,
              "choices": [
                "ReadOnly",
                "ReadWrite"
              ],
              "suboptions": {}
            },
            "disk_size_gb": {
              "aliases": [],
              "description": "The initial disk size in GB for blank data disks.\nThis value cannot be larger than C(1023) GB.\nSize can be changed only when the virtual machine is deallocated.\nNot sure when I(managed_disk_id) defined.",
              "required": false,
              "suboptions": {}
            },
            "lun": {
              "aliases": [],
              "description": "The logical unit number for data disk.\nThis value is used to identify data disks within the VM and therefore must be unique for each data disk attached to a VM.",
              "required": true,
              "suboptions": {}
            },
            "managed_disk_type": {
              "aliases": [],
              "description": "Managed data disk type.\nOnly used when OS disk created with managed disk.",
              "required": false,
              "choices": [
                "Standard_LRS",
                "StandardSSD_LRS",
                "Premium_LRS"
              ],
              "suboptions": {}
            },
            "storage_account_name": {
              "aliases": [],
              "description": "Name of an existing storage account that supports creation of VHD blobs.\nIf not specified for a new VM, a new storage account started with I(name) will be created using storage type C(Standard_LRS).\nOnly used when OS disk created with virtual hard disk (VHD).\nUsed when I(managed_disk_type) not defined.\nCannot be updated unless I(lun) updated.",
              "required": false,
              "suboptions": {}
            },
            "storage_blob_name": {
              "aliases": [],
              "description": "Name of the storage blob used to hold the OS disk image of the VM.\nMust end with '.vhd'.\nDefault to the I(name) + timestamp + I(lun) + '.vhd'.\nOnly used when OS disk created with virtual hard disk (VHD).\nUsed when I(managed_disk_type) not defined.\nCannot be updated unless I(lun) updated.",
              "required": false,
              "suboptions": {}
            },
            "storage_container_name": {
              "aliases": [],
              "description": "Name of the container to use within the storage account to store VHD blobs.\nIf no name is specified a default container named 'vhds' will created.\nOnly used when OS disk created with virtual hard disk (VHD).\nUsed when I(managed_disk_type) not defined.\nCannot be updated unless I(lun) updated.",
              "default": "vhds",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "ephemeral_os_disk": {
          "aliases": [],
          "description": "Parameters of ephemeral disk settings that can be specified for operating system disk.\nEphemeral OS disk is only supported for VMS Instances using Managed Disk.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "eviction_policy": {
          "aliases": [],
          "description": "Specifies the eviction policy for the Azure Spot virtual machine.\nRequires priority to be set to Spot.",
          "required": false,
          "choices": [
            "Deallocate",
            "Delete"
          ],
          "suboptions": {}
        },
        "generalized": {
          "aliases": [],
          "description": "Whether the VM is generalized or not.\nSet to C(true) with I(state=present) to generalize the VM.\nGeneralizing a VM is irreversible.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "image": {
          "aliases": [],
          "description": "The image used to build the VM.\nFor custom images, the name of the image. To narrow the search to a specific resource group, a dict with the keys I(name) and I(resource_group).\nFor Marketplace images, a dict with the keys I(publisher), I(offer), I(sku), and I(version).\nSet I(version=latest) to get the most recent version of a given image.",
          "required": true,
          "suboptions": {}
        },
        "license_type": {
          "aliases": [],
          "description": "On-premise license for the image or disk.\nOnly used for images that contain the Windows Server operating system.\nTo remove all license type settings, set to the string C(None).",
          "required": false,
          "choices": [
            "Windows_Server",
            "Windows_Client"
          ],
          "suboptions": {}
        },
        "location": {
          "aliases": [],
          "description": "Valid Azure location for the VM. Defaults to location of the resource group.",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "managed_disk_type": {
          "aliases": [],
          "description": "Managed OS disk type.\nCreate OS disk with managed disk if defined.\nIf not defined, the OS disk will be created with virtual hard disk (VHD).",
          "required": false,
          "choices": [
            "Standard_LRS",
            "StandardSSD_LRS",
            "Premium_LRS"
          ],
          "suboptions": {}
        },
        "max_price": {
          "aliases": [],
          "description": "Specifies the maximum price you are willing to pay for a Azure Spot VM/VMSS.\nThis price is in US Dollars.\nC(-1) indicates default price to be up-to on-demand.\nRequires priority to be set to Spot.",
          "default": "-1",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the VM.",
          "required": true,
          "suboptions": {}
        },
        "network_interface_names": {
          "aliases": [
            "network_interfaces"
          ],
          "description": "Network interface names to add to the VM.\nCan be a string of name or resource ID of the network interface.\nCan be a dict containing I(resource_group) and I(name) of the network interface.\nIf a network interface name is not provided when the VM is created, a default network interface will be created.\nTo create a new network interface, at least one Virtual Network with one Subnet must exist.",
          "type": "list",
          "required": false,
          "suboptions": {}
        },
        "open_ports": {
          "aliases": [],
          "description": "List of ports to open in the security group for the VM, when a security group and network interface are created with a VM.\nFor Linux hosts, defaults to allowing inbound TCP connections to port 22.\nFor Windows hosts, defaults to opening ports 3389 and 5986.",
          "required": false,
          "suboptions": {}
        },
        "os_disk_caching": {
          "aliases": [
            "disk_caching"
          ],
          "description": "Type of OS disk caching.",
          "required": false,
          "choices": [
            "ReadOnly",
            "ReadWrite"
          ],
          "suboptions": {}
        },
        "os_disk_name": {
          "aliases": [],
          "description": "OS disk name.",
          "required": false,
          "suboptions": {}
        },
        "os_disk_size_gb": {
          "aliases": [],
          "description": "Type of OS disk size in GB.",
          "required": false,
          "suboptions": {}
        },
        "os_type": {
          "aliases": [],
          "description": "Base type of operating system.",
          "default": "Linux",
          "required": false,
          "choices": [
            "Windows",
            "Linux"
          ],
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "plan": {
          "aliases": [],
          "description": "Third-party billing plan for the VM.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "name": {
              "aliases": [],
              "description": "Billing plan name.",
              "required": true,
              "suboptions": {}
            },
            "product": {
              "aliases": [],
              "description": "Product name.",
              "required": true,
              "suboptions": {}
            },
            "promotion_code": {
              "aliases": [],
              "description": "Optional promotion code.",
              "required": false,
              "suboptions": {}
            },
            "publisher": {
              "aliases": [],
              "description": "Publisher offering the plan.",
              "required": true,
              "suboptions": {}
            }
          }
        },
        "priority": {
          "aliases": [],
          "description": "Priority of the VM.\nC(None) is the equivalent of Regular VM.",
          "required": false,
          "choices": [
            "None",
            "Spot"
          ],
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "public_ip_allocation_method": {
          "aliases": [
            "public_ip_allocation"
          ],
          "description": "Allocation method for the public IP of the VM.\nUsed only if a network interface is not specified.\nWhen set to C(Dynamic), the public IP address may change any time the VM is rebooted or power cycled.\nThe C(Disabled) choice was added in Ansible 2.6.",
          "default": "Static",
          "required": false,
          "choices": [
            "Dynamic",
            "Static",
            "Disabled"
          ],
          "suboptions": {}
        },
        "remove_on_absent": {
          "aliases": [],
          "description": "Associated resources to remove when removing a VM using I(state=absent).\nTo remove all resources related to the VM being removed, including auto-created resources, set to C(all).\nTo remove only resources that were automatically created while provisioning the VM being removed, set to C(all_autocreated).\nTo remove only specific resources, set to C(network_interfaces), C(virtual_storage) or C(public_ips).\nAny other input will be ignored.",
          "default": "['all']",
          "type": "list",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Name of the resource group containing the VM.",
          "required": true,
          "suboptions": {}
        },
        "restarted": {
          "aliases": [],
          "description": "Set to C(true) with I(state=present) to restart a running VM.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "short_hostname": {
          "aliases": [],
          "description": "Name assigned internally to the host. On a Linux VM this is the name returned by the C(hostname) command.\nWhen creating a VM, short_hostname defaults to I(name).",
          "required": false,
          "suboptions": {}
        },
        "ssh_password_enabled": {
          "aliases": [],
          "description": "Whether to enable or disable SSH passwords.\nWhen I(os_type=Linux), set to C(false) to disable SSH password authentication and require use of SSH keys.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ssh_public_keys": {
          "aliases": [],
          "description": "For I(os_type=Linux) provide a list of SSH keys.\nAccepts a list of dicts where each dictionary contains two keys, I(path) and I(key_data).\nSet I(path) to the default location of the authorized_keys files. For example, I(path=/home/<admin username>/.ssh/authorized_keys).\nSet I(key_data) to the actual value of the public key.",
          "required": false,
          "suboptions": {}
        },
        "started": {
          "aliases": [],
          "description": "Whether the VM is started or stopped.\nSet to (true) with I(state=present) to start the VM.\nSet to C(false) to stop the VM.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "State of the VM.\nSet to C(present) to create a VM with the configuration specified by other options, or to update the configuration of an existing VM.\nSet to C(absent) to remove a VM.\nDoes not affect power state. Use I(started)/I(allocated)/I(restarted) parameters to change the power state of a VM.",
          "default": "present",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "storage_account_name": {
          "aliases": [
            "storage_account"
          ],
          "description": "Name of a storage account that supports creation of VHD blobs.\nIf not specified for a new VM, a new storage account named <vm name>01 will be created using storage type C(Standard_LRS).",
          "required": false,
          "suboptions": {}
        },
        "storage_blob_name": {
          "aliases": [
            "storage_blob"
          ],
          "description": "Name of the storage blob used to hold the OS disk image of the VM.\nMust end with '.vhd'.\nIf not specified, defaults to the VM name + '.vhd'.",
          "required": false,
          "suboptions": {}
        },
        "storage_container_name": {
          "aliases": [
            "storage_container"
          ],
          "description": "Name of the container to use within the storage account to store VHD blobs.\nIf not specified, a default container will be created.",
          "default": "vhds",
          "required": false,
          "suboptions": {}
        },
        "subnet_name": {
          "aliases": [
            "subnet"
          ],
          "description": "Subnet for the VM.\nDefaults to the first subnet found in the virtual network or the subnet of the I(network_interface_name), if provided.\nIf the subnet is in another resource group, specify the resource group with I(virtual_network_resource_group).",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "virtual_network_name": {
          "aliases": [
            "virtual_network"
          ],
          "description": "The virtual network to use when creating a VM.\nIf not specified, a new network interface will be created and assigned to the first virtual network found in the resource group.\nUse with I(virtual_network_resource_group) to place the virtual network in another resource group.",
          "required": false,
          "suboptions": {}
        },
        "virtual_network_resource_group": {
          "aliases": [],
          "description": "The resource group to use when creating a VM with another resource group's virtual network.",
          "required": false,
          "suboptions": {}
        },
        "vm_identity": {
          "aliases": [],
          "description": "Identity for the VM.",
          "required": false,
          "choices": [
            "SystemAssigned"
          ],
          "suboptions": {}
        },
        "vm_size": {
          "aliases": [],
          "description": "A valid Azure VM size value. For example, C(Standard_D4).\nChoices vary depending on the subscription and location. Check your subscription for available choices.\nRequired when creating a VM.",
          "required": false,
          "suboptions": {}
        },
        "winrm": {
          "aliases": [],
          "description": "List of Windows Remote Management configurations of the VM.",
          "required": false,
          "suboptions": {
            "certificate_store": {
              "aliases": [],
              "description": "The certificate store on the VM to which the certificate should be added.\nThe specified certificate store is implicitly in the LocalMachine account.",
              "required": false,
              "suboptions": {}
            },
            "certificate_url": {
              "aliases": [],
              "description": "The URL of a certificate that has been uploaded to Key Vault as a secret.",
              "required": false,
              "suboptions": {}
            },
            "protocol": {
              "aliases": [],
              "description": "The protocol of the winrm listener.",
              "required": true,
              "choices": [
                "http",
                "https"
              ],
              "suboptions": {}
            },
            "source_vault": {
              "aliases": [],
              "description": "The relative URL of the Key Vault containing the certificate.",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "zones": {
          "aliases": [],
          "description": "A list of Availability Zones for your VM.",
          "type": "list",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage Azure virtual machines",
      "version_added": "0.1.2"
    },
    "examples": "\n\n- name: Create VM with defaults\n  azure_rm_virtualmachine:\n    resource_group: myResourceGroup\n    name: testvm10\n    admin_username: \"{{ username }}\"\n    admin_password: \"{{ password }}\"\n    image:\n      offer: CentOS\n      publisher: OpenLogic\n      sku: '7.1'\n      version: latest\n\n- name: Create an availability set for managed disk vm\n  azure_rm_availabilityset:\n    name: avs-managed-disk\n    resource_group: myResourceGroup\n    platform_update_domain_count: 5\n    platform_fault_domain_count: 2\n    sku: Aligned\n\n- name: Create a VM with managed disk\n  azure_rm_virtualmachine:\n    resource_group: myResourceGroup\n    name: vm-managed-disk\n    admin_username: \"{{ username }}\"\n    availability_set: avs-managed-disk\n    managed_disk_type: Standard_LRS\n    image:\n      offer: CoreOS\n      publisher: CoreOS\n      sku: Stable\n      version: latest\n    vm_size: Standard_D4\n\n- name: Create a VM with existing storage account and NIC\n  azure_rm_virtualmachine:\n    resource_group: myResourceGroup\n    name: testvm002\n    vm_size: Standard_D4\n    storage_account: testaccount001\n    admin_username: \"{{ username }}\"\n    ssh_public_keys:\n      - path: /home/adminUser/.ssh/authorized_keys\n        key_data: < insert yor ssh public key here... >\n    network_interfaces: testvm001\n    image:\n      offer: CentOS\n      publisher: OpenLogic\n      sku: '7.1'\n      version: latest\n\n- name: Create a VM with OS and multiple data managed disks\n  azure_rm_virtualmachine:\n    resource_group: myResourceGroup\n    name: testvm001\n    vm_size: Standard_D4\n    managed_disk_type: Standard_LRS\n    admin_username: \"{{ username }}\"\n    ssh_public_keys:\n      - path: /home/adminUser/.ssh/authorized_keys\n        key_data: < insert yor ssh public key here... >\n    image:\n      offer: CoreOS\n      publisher: CoreOS\n      sku: Stable\n      version: latest\n    data_disks:\n      - lun: 0\n        managed_disk_id: \"/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxxxxxx/resourceGroups/myResourceGroup/providers/Microsoft.Compute/disks/myDisk\"\n      - lun: 1\n        disk_size_gb: 128\n        managed_disk_type: Premium_LRS\n\n- name: Create a VM with OS and multiple data storage accounts\n  azure_rm_virtualmachine:\n    resource_group: myResourceGroup\n    name: testvm001\n    vm_size: Standard_DS1_v2\n    admin_username: \"{{ username }}\"\n    ssh_password_enabled: false\n    ssh_public_keys:\n      - path: /home/adminUser/.ssh/authorized_keys\n        key_data: < insert yor ssh public key here... >\n    network_interfaces: testvm001\n    storage_container: osdisk\n    storage_blob: osdisk.vhd\n    boot_diagnostics:\n      enabled: yes\n    image:\n      offer: CoreOS\n      publisher: CoreOS\n      sku: Stable\n      version: latest\n    data_disks:\n      - lun: 0\n        disk_size_gb: 64\n        storage_container_name: datadisk1\n        storage_blob_name: datadisk1.vhd\n      - lun: 1\n        disk_size_gb: 128\n        storage_container_name: datadisk2\n        storage_blob_name: datadisk2.vhd\n\n- name: Create a VM with a custom image\n  azure_rm_virtualmachine:\n    resource_group: myResourceGroup\n    name: testvm001\n    vm_size: Standard_DS1_v2\n    admin_username: \"{{ username }}\"\n    admin_password: \"{{ password }}\"\n    image: customimage001\n\n- name: Create a VM with a custom image from a particular resource group\n  azure_rm_virtualmachine:\n    resource_group: myResourceGroup\n    name: testvm001\n    vm_size: Standard_DS1_v2\n    admin_username: \"{{ username }}\"\n    admin_password: \"{{ password }}\"\n    image:\n      name: customimage001\n      resource_group: myResourceGroup\n\n- name: Create a VM with an image id\n  azure_rm_virtualmachine:\n    resource_group: myResourceGroup\n    name: testvm001\n    vm_size: Standard_DS1_v2\n    admin_username: \"{{ username }}\"\n    admin_password: \"{{ password }}\"\n    image:\n      id: '{{image_id}}'\n\n- name: Create VM with spcified OS disk size\n  azure_rm_virtualmachine:\n    resource_group: myResourceGroup\n    name: big-os-disk\n    admin_username: \"{{ username }}\"\n    admin_password: \"{{ password }}\"\n    os_disk_size_gb: 512\n    image:\n      offer: CentOS\n      publisher: OpenLogic\n      sku: '7.1'\n      version: latest\n\n- name: Create VM with OS and Plan, accepting the terms\n  azure_rm_virtualmachine:\n    resource_group: myResourceGroup\n    name: f5-nva\n    admin_username: \"{{ username }}\"\n    admin_password: \"{{ password }}\"\n    image:\n      publisher: f5-networks\n      offer: f5-big-ip-best\n      sku: f5-bigip-virtual-edition-200m-best-hourly\n      version: latest\n    plan:\n      name: f5-bigip-virtual-edition-200m-best-hourly\n      product: f5-big-ip-best\n      publisher: f5-networks\n\n- name: Create a VM with Spot Instance\n  azure_rm_virtualmachine:\n    resource_group: myResourceGroup\n    name: testvm10\n    vm_size: Standard_D4\n    priority: Spot\n    eviction_policy: Deallocate\n    admin_username: \"{{ username }}\"\n    admin_password: \"{{ password }}\"\n    image:\n      offer: CentOS\n      publisher: OpenLogic\n      sku: '7.1'\n      version: latest\n\n- name: Power Off\n  azure_rm_virtualmachine:\n    resource_group: myResourceGroup\n    name: testvm002\n    started: no\n\n- name: Deallocate\n  azure_rm_virtualmachine:\n    resource_group: myResourceGroup\n    name: testvm002\n    allocated: no\n\n- name: Power On\n  azure_rm_virtualmachine:\n    resource_group: myResourceGroup\n    name: testvm002\n\n- name: Restart\n  azure_rm_virtualmachine:\n    resource_group: myResourceGroup\n    name: testvm002\n    restarted: yes\n\n- name: Create a VM with an Availability Zone\n  azure_rm_virtualmachine:\n    resource_group: myResourceGroup\n    name: testvm001\n    vm_size: Standard_DS1_v2\n    admin_username: \"{{ username }}\"\n    admin_password: \"{{ password }}\"\n    image: customimage001\n    zones: [1]\n\n- name: Remove a VM and all resources that were autocreated\n  azure_rm_virtualmachine:\n    resource_group: myResourceGroup\n    name: testvm002\n    remove_on_absent: all_autocreated\n    state: absent\n"
  },
  "azure.azcollection.azure_rm_virtualmachine_info": {
    "doc": {
      "description": "Get facts for one or all virtual machines in a resource group.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the virtual machine.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Name of the resource group containing the virtual machines (required when filtering by vm name).",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get virtual machine facts",
      "version_added": "0.1.2"
    },
    "examples": "\n  - name: Get facts for all virtual machines of a resource group\n    azure_rm_virtualmachine_info:\n      resource_group: myResourceGroup\n\n  - name: Get facts by name\n    azure_rm_virtualmachine_info:\n      resource_group: myResourceGroup\n      name: myVm\n\n  - name: Get facts by tags\n    azure_rm_virtualmachine_info:\n      resource_group: myResourceGroup\n      tags:\n        - testing\n        - foo:bar\n"
  },
  "azure.azcollection.azure_rm_virtualmachineextension": {
    "doc": {
      "description": "Create, update and delete Azure Virtual Machine Extension.\nNote that this module was called M(azure_rm_virtualmachine_extension) before Ansible 2.8. The usage did not change.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auto_upgrade_minor_version": {
          "aliases": [],
          "description": "Whether the extension handler should be automatically upgraded across minor versions.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "location": {
          "aliases": [],
          "description": "Valid Azure location. Defaults to location of the resource group.",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the vm extension.",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "protected_settings": {
          "aliases": [],
          "description": "Json formatted protected settings for the extension.",
          "required": false,
          "suboptions": {}
        },
        "publisher": {
          "aliases": [],
          "description": "The name of the extension handler publisher.",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Name of a resource group where the vm extension exists or will be created.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "settings": {
          "aliases": [],
          "description": "Json formatted public settings for the extension.",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "State of the vm extension. Use C(present) to create or update a vm extension and C(absent) to delete a vm extension.",
          "default": "present",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "type_handler_version": {
          "aliases": [],
          "description": "The type version of the extension handler.",
          "required": false,
          "suboptions": {}
        },
        "virtual_machine_extension_type": {
          "aliases": [],
          "description": "The type of the extension handler.",
          "required": false,
          "suboptions": {}
        },
        "virtual_machine_name": {
          "aliases": [],
          "description": "The name of the virtual machine where the extension should be create or updated.",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Managed Azure Virtual Machine extension",
      "version_added": "0.1.2"
    },
    "examples": "\n    - name: Create VM Extension\n      azure_rm_virtualmachineextension:\n        name: myvmextension\n        location: eastus\n        resource_group: myResourceGroup\n        virtual_machine_name: myvm\n        publisher: Microsoft.Azure.Extensions\n        virtual_machine_extension_type: CustomScript\n        type_handler_version: 2.0\n        settings: '{\"commandToExecute\": \"hostname\"}'\n        auto_upgrade_minor_version: true\n\n    - name: Delete VM Extension\n      azure_rm_virtualmachineextension:\n        name: myvmextension\n        location: eastus\n        resource_group: myResourceGroup\n        virtual_machine_name: myvm\n        state: absent\n"
  },
  "azure.azcollection.azure_rm_virtualmachineextension_info": {
    "doc": {
      "description": "Get facts of Azure Virtual Machine Extension.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the virtual machine extension.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "virtual_machine_name": {
          "aliases": [],
          "description": "The name of the virtual machine containing the extension.",
          "required": true,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure Virtual Machine Extension facts",
      "version_added": "0.1.2"
    },
    "examples": "\n  - name: Get information on specific Virtual Machine Extension\n    azure_rm_virtualmachineextension_info:\n      resource_group: myResourceGroup\n      virtual_machine_name: myvm\n      name: myextension\n\n  - name: List installed Virtual Machine Extensions\n    azure_rm_virtualmachineextension_info:\n      resource_group: myResourceGroup\n      virtual_machine_name: myvm\n"
  },
  "azure.azcollection.azure_rm_virtualmachineimage_info": {
    "doc": {
      "description": "Get facts for virtual machine images.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "location": {
          "aliases": [],
          "description": "Azure location value, for example C(westus), C(eastus), C(eastus2), C(northcentralus), etc.\nSupplying only a location value will yield a list of available publishers for the location.",
          "required": true,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "offer": {
          "aliases": [],
          "description": "Name of an image offering. Combine with SKU to see a list of available image versions.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "publisher": {
          "aliases": [],
          "description": "Name of an image publisher. List image offerings associated with a particular publisher.",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "sku": {
          "aliases": [],
          "description": "Image offering SKU. Combine with offer to see a list of available versions.",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "version": {
          "aliases": [],
          "description": "Specific version number of an image.",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get virtual machine image facts",
      "version_added": "0.1.2"
    },
    "examples": "\n    - name: Get facts for a specific image\n      azure_rm_virtualmachineimage_info:\n        location: eastus\n        publisher: OpenLogic\n        offer: CentOS\n        sku: '7.1'\n        version: '7.1.20160308'\n\n    - name: List available versions\n      azure_rm_virtualmachineimage_info:\n        location: eastus\n        publisher: OpenLogic\n        offer: CentOS\n        sku: '7.1'\n\n    - name: List available offers\n      azure_rm_virtualmachineimage_info:\n        location: eastus\n        publisher: OpenLogic\n\n    - name: List available publishers\n      azure_rm_virtualmachineimage_info:\n        location: eastus\n\n"
  },
  "azure.azcollection.azure_rm_virtualmachinescaleset": {
    "doc": {
      "description": "Create and update a virtual machine scale set.\nNote that this module was called M(azure_rm_virtualmachine_scaleset) before Ansible 2.8. The usage did not change.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "admin_password": {
          "aliases": [],
          "description": "Password for the admin username.\nNot required if the os_type is Linux and SSH password authentication is disabled by setting I(ssh_password_enabled=false).",
          "required": false,
          "suboptions": {}
        },
        "admin_username": {
          "aliases": [],
          "description": "Admin username used to access the host after it is created. Required when creating a VM.",
          "required": false,
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "application_gateway": {
          "aliases": [],
          "description": "Application gateway name.",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "capacity": {
          "aliases": [],
          "description": "Capacity of VMSS.",
          "default": "1",
          "required": false,
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "custom_data": {
          "aliases": [],
          "description": "Data which is made available to the virtual machine and used by e.g., C(cloud-init).\nMany images in the marketplace are not cloud-init ready. Thus, data sent to I(custom_data) would be ignored.\nIf the image you are attempting to use is not listed in U(https://docs.microsoft.com/en-us/azure/virtual-machines/linux/using-cloud-init#cloud-init-overview), follow these steps U(https://docs.microsoft.com/en-us/azure/virtual-machines/linux/cloudinit-prepare-custom-image).",
          "required": false,
          "suboptions": {}
        },
        "data_disks": {
          "aliases": [],
          "description": "Describes list of data disks.",
          "required": false,
          "suboptions": {
            "caching": {
              "aliases": [],
              "description": "Type of data disk caching.",
              "default": "ReadOnly",
              "required": false,
              "choices": [
                "ReadOnly",
                "ReadWrite"
              ],
              "suboptions": {}
            },
            "disk_size_gb": {
              "aliases": [],
              "description": "The initial disk size in GB for blank data disks.",
              "required": false,
              "suboptions": {}
            },
            "lun": {
              "aliases": [],
              "description": "The logical unit number for data disk.",
              "default": "0",
              "required": false,
              "suboptions": {}
            },
            "managed_disk_type": {
              "aliases": [],
              "description": "Managed data disk type.",
              "required": false,
              "choices": [
                "Standard_LRS",
                "Premium_LRS"
              ],
              "suboptions": {}
            }
          }
        },
        "enable_accelerated_networking": {
          "aliases": [],
          "description": "Indicates whether user wants to allow accelerated networking for virtual machines in scaleset being created.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ephemeral_os_disk": {
          "aliases": [],
          "description": "Parameters of ephemeral disk settings that can be specified for operating system disk.\nEphemeral OS disk is only supported for VMS Instances using Managed Disk.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "eviction_policy": {
          "aliases": [],
          "description": "Specifies the eviction policy for the Azure Spot virtual machine.\nRequires priority to be set to Spot.",
          "required": false,
          "choices": [
            "Deallocate",
            "Delete"
          ],
          "suboptions": {}
        },
        "image": {
          "aliases": [],
          "description": "Specifies the image used to build the VM.\nIf a string, the image is sourced from a custom image based on the name.\nIf a dict with the keys I(publisher), I(offer), I(sku), and I(version), the image is sourced from a Marketplace image. Note that set I(version=latest) to get the most recent version of a given image.\nIf a dict with the keys I(name) and I(resource_group), the image is sourced from a custom image based on the I(name) and I(resource_group) set. Note that the key I(resource_group) is optional and if omitted, all images in the subscription will be searched for by I(name).\nCustom image support was added in Ansible 2.5.",
          "required": true,
          "suboptions": {}
        },
        "load_balancer": {
          "aliases": [],
          "description": "Load balancer name.",
          "required": false,
          "suboptions": {}
        },
        "location": {
          "aliases": [],
          "description": "Valid Azure location. Defaults to location of the resource group.",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "managed_disk_type": {
          "aliases": [],
          "description": "Managed disk type.",
          "required": false,
          "choices": [
            "Standard_LRS",
            "Premium_LRS"
          ],
          "suboptions": {}
        },
        "max_price": {
          "aliases": [],
          "description": "Specifies the maximum price you are willing to pay for a Azure Spot VM/VMSS.\nThis price is in US Dollars.\nC(-1) indicates default price to be up-to on-demand.\nRequires priority to be set to Spot.",
          "default": "-1",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the virtual machine.",
          "required": true,
          "suboptions": {}
        },
        "os_disk_caching": {
          "aliases": [
            "disk_caching"
          ],
          "description": "Type of OS disk caching.",
          "default": "ReadOnly",
          "required": false,
          "choices": [
            "ReadOnly",
            "ReadWrite"
          ],
          "suboptions": {}
        },
        "os_type": {
          "aliases": [],
          "description": "Base type of operating system.",
          "default": "Linux",
          "required": false,
          "choices": [
            "Windows",
            "Linux"
          ],
          "suboptions": {}
        },
        "overprovision": {
          "aliases": [],
          "description": "Specifies whether the Virtual Machine Scale Set should be overprovisioned.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "plan": {
          "aliases": [],
          "description": "Third-party billing plan for the VM.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "name": {
              "aliases": [],
              "description": "Billing plan name.",
              "required": true,
              "suboptions": {}
            },
            "product": {
              "aliases": [],
              "description": "Product name.",
              "required": true,
              "suboptions": {}
            },
            "promotion_code": {
              "aliases": [],
              "description": "Optional promotion code.",
              "required": false,
              "suboptions": {}
            },
            "publisher": {
              "aliases": [],
              "description": "Publisher offering the plan.",
              "required": true,
              "suboptions": {}
            }
          }
        },
        "priority": {
          "aliases": [],
          "description": "Priority of the VMSS.\nC(None) is the equivalent of Regular VM.",
          "required": false,
          "choices": [
            "None",
            "Spot"
          ],
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "public_ip_per_vm": {
          "aliases": [],
          "description": "Assign a public IP to each virtual machine of the scale set",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "remove_on_absent": {
          "aliases": [],
          "description": "When removing a VM using I(state=absent), also remove associated resources.\nIt can be C(all) or a list with any of the following ['network_interfaces', 'virtual_storage', 'public_ips'].\nAny other input will be ignored.",
          "default": "['all']",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Name of the resource group containing the virtual machine scale set.",
          "required": true,
          "suboptions": {}
        },
        "scale_in_policy": {
          "aliases": [],
          "description": "define the order in which vmss instances are scaled-in",
          "required": false,
          "choices": [
            "Default",
            "NewestVM",
            "OldestVM"
          ],
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_group": {
          "aliases": [
            "security_group_name"
          ],
          "description": "Existing security group with which to associate the subnet.\nIt can be the security group name which is in the same resource group.\nIt can be the resource ID.\nIt can be a dict which contains I(name) and I(resource_group) of the security group.",
          "required": false,
          "suboptions": {}
        },
        "short_hostname": {
          "aliases": [],
          "description": "Short host name.",
          "required": false,
          "suboptions": {}
        },
        "single_placement_group": {
          "aliases": [],
          "description": "When true this limits the scale set to a single placement group, of max size 100 virtual machines.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ssh_password_enabled": {
          "aliases": [],
          "description": "When the os_type is Linux, setting I(ssh_password_enabled=false) will disable SSH password authentication and require use of SSH keys.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ssh_public_keys": {
          "aliases": [],
          "description": "For I(os_type=Linux) provide a list of SSH keys.\nEach item in the list should be a dictionary where the dictionary contains two keys, C(path) and C(key_data).\nSet the C(path) to the default location of the authorized_keys files.\nOn an Enterprise Linux host, for example, the I(path=/home/<admin username>/.ssh/authorized_keys). Set C(key_data) to the actual value of the public key.",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Assert the state of the virtual machine scale set.\nState C(present) will check that the machine exists with the requested configuration. If the configuration of the existing machine does not match, the machine will be updated.\nState C(absent) will remove the virtual machine scale set.",
          "default": "present",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "subnet_name": {
          "aliases": [
            "subnet"
          ],
          "description": "Subnet name.",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "terminate_event_timeout_minutes": {
          "aliases": [],
          "description": "timeout time for termination notification event\nin range between 5 and 15",
          "required": false,
          "suboptions": {}
        },
        "tier": {
          "aliases": [],
          "description": "SKU Tier.",
          "required": false,
          "choices": [
            "Basic",
            "Standard"
          ],
          "suboptions": {}
        },
        "upgrade_policy": {
          "aliases": [],
          "description": "Upgrade policy.\nRequired when creating the Azure virtual machine scale sets.",
          "required": false,
          "choices": [
            "Manual",
            "Automatic"
          ],
          "suboptions": {}
        },
        "virtual_network_name": {
          "aliases": [
            "virtual_network"
          ],
          "description": "Virtual Network name.",
          "required": false,
          "suboptions": {}
        },
        "virtual_network_resource_group": {
          "aliases": [],
          "description": "When creating a virtual machine, if a specific virtual network from another resource group should be used.\nUse this parameter to specify the resource group to use.",
          "required": false,
          "suboptions": {}
        },
        "vm_size": {
          "aliases": [],
          "description": "A valid Azure VM size value. For example, C(Standard_D4).\nThe list of choices varies depending on the subscription and location. Check your subscription for available choices.",
          "required": false,
          "suboptions": {}
        },
        "zones": {
          "aliases": [],
          "description": "A list of Availability Zones for your virtual machine scale set.",
          "type": "list",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage Azure virtual machine scale sets",
      "version_added": "0.1.2"
    },
    "examples": "\n\n- name: Create VMSS\n  azure_rm_virtualmachinescaleset:\n    resource_group: myResourceGroup\n    name: testvmss\n    vm_size: Standard_DS1_v2\n    capacity: 2\n    virtual_network_name: testvnet\n    upgrade_policy: Manual\n    subnet_name: testsubnet\n    terminate_event_timeout_minutes: 10\n    scale_in_policy: NewestVM\n    admin_username: \"{{ username }}\"\n    ssh_password_enabled: false\n    ssh_public_keys:\n      - path: /home/adminUser/.ssh/authorized_keys\n        key_data: < insert yor ssh public key here... >\n    managed_disk_type: Standard_LRS\n    image:\n      offer: CoreOS\n      publisher: CoreOS\n      sku: Stable\n      version: latest\n    data_disks:\n      - lun: 0\n        disk_size_gb: 64\n        caching: ReadWrite\n        managed_disk_type: Standard_LRS\n\n- name: Create VMSS with an image that requires plan information\n  azure_rm_virtualmachinescaleset:\n    resource_group: myResourceGroup\n    name: testvmss\n    vm_size: Standard_DS1_v2\n    capacity: 3\n    virtual_network_name: testvnet\n    upgrade_policy: Manual\n    subnet_name: testsubnet\n    admin_username: \"{{ username }}\"\n    ssh_password_enabled: false\n    ssh_public_keys:\n      - path: /home/adminUser/.ssh/authorized_keys\n        key_data: < insert yor ssh public key here... >\n    managed_disk_type: Standard_LRS\n    image:\n      offer: cis-ubuntu-linux-1804-l1\n      publisher: center-for-internet-security-inc\n      sku: Stable\n      version: latest\n    plan:\n      name: cis-ubuntu-linux-1804-l1\n      product: cis-ubuntu-linux-1804-l1\n      publisher: center-for-internet-security-inc\n    data_disks:\n      - lun: 0\n        disk_size_gb: 64\n        caching: ReadWrite\n        managed_disk_type: Standard_LRS\n\n- name: Create a VMSS with a custom image\n  azure_rm_virtualmachinescaleset:\n    resource_group: myResourceGroup\n    name: testvmss\n    vm_size: Standard_DS1_v2\n    capacity: 2\n    virtual_network_name: testvnet\n    upgrade_policy: Manual\n    subnet_name: testsubnet\n    admin_username: \"{{ username }}\"\n    admin_password: \"{{ password }}\"\n    managed_disk_type: Standard_LRS\n    image: customimage001\n\n- name: Create a VMSS with over 100 instances\n  azure_rm_virtualmachinescaleset:\n    resource_group: myResourceGroup\n    name: testvmss\n    vm_size: Standard_DS1_v2\n    capacity: 120\n    single_placement_group: False\n    virtual_network_name: testvnet\n    upgrade_policy: Manual\n    subnet_name: testsubnet\n    admin_username: \"{{ username }}\"\n    admin_password: \"{{ password }}\"\n    managed_disk_type: Standard_LRS\n    image: customimage001\n\n- name: Create a VMSS with a custom image from a particular resource group\n  azure_rm_virtualmachinescaleset:\n    resource_group: myResourceGroup\n    name: testvmss\n    vm_size: Standard_DS1_v2\n    capacity: 2\n    virtual_network_name: testvnet\n    upgrade_policy: Manual\n    subnet_name: testsubnet\n    admin_username: \"{{ username }}\"\n    admin_password: \"{{ password }}\"\n    managed_disk_type: Standard_LRS\n    image:\n      name: customimage001\n      resource_group: myResourceGroup\n\n- name: Create a VMSS with Spot Instance\n  azure_rm_virtualmachinescaleset:\n    resource_group: myResourceGroup\n    name: testvmss\n    vm_size: Standard_DS1_v2\n    capacity: 5\n    priority: Spot\n    eviction_policy: Deallocate\n    virtual_network_name: testvnet\n    upgrade_policy: Manual\n    subnet_name: testsubnet\n    admin_username: \"{{ username }}\"\n    admin_password: \"{{ password }}\"\n    managed_disk_type: Standard_LRS\n    image: customimage001\n\n"
  },
  "azure.azcollection.azure_rm_virtualmachinescaleset_info": {
    "doc": {
      "description": "Get facts for a virtual machine scale set.\nNote that this module was called M(azure_rm_virtualmachine_scaleset_facts) before Ansible 2.8. The usage did not change.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "format": {
          "aliases": [],
          "description": "Format of the data returned.\nIf C(raw) is selected information will be returned in raw format from Azure Python SDK.\nIf C(curated) is selected the structure will be identical to input parameters of M(azure_rm_virtualmachinescaleset) module.\nIn Ansible 2.5 and lower facts are always returned in raw format.\nPlease note that this option will be deprecated in 2.10 when curated format will become the only supported format.",
          "default": "raw",
          "required": false,
          "choices": [
            "curated",
            "raw"
          ],
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Limit results to a specific virtual machine scale set.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The resource group to search for the desired virtual machine scale set.",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "List of tags to be matched.",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Virtual Machine Scale Set facts",
      "version_added": "0.1.2"
    },
    "examples": "\n    - name: Get facts for a virtual machine scale set\n      azure_rm_virtualmachinescaleset_info:\n        resource_group: myResourceGroup\n        name: testvmss001\n        format: curated\n\n    - name: Get facts for all virtual networks\n      azure_rm_virtualmachinescaleset_info:\n        resource_group: myResourceGroup\n\n    - name: Get facts by tags\n      azure_rm_virtualmachinescaleset_info:\n        resource_group: myResourceGroup\n        tags:\n          - testing\n"
  },
  "azure.azcollection.azure_rm_virtualmachinescalesetextension": {
    "doc": {
      "description": "Create, update and delete Azure Virtual Machine Scale Set (VMSS) extensions.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auto_upgrade_minor_version": {
          "aliases": [],
          "description": "Whether the extension handler should be automatically upgraded across minor versions.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "location": {
          "aliases": [],
          "description": "Valid Azure location. Defaults to location of the resource group.",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the VMSS extension.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "protected_settings": {
          "aliases": [],
          "description": "A dictionary containing protected extension settings.\nSettings depend on extension type.\nRefer to U(https://docs.microsoft.com/en-us/azure/virtual-machines/extensions/overview) for more information.",
          "required": false,
          "suboptions": {}
        },
        "publisher": {
          "aliases": [],
          "description": "The name of the extension handler publisher.",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Name of a resource group where the VMSS extension exists or will be created.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "settings": {
          "aliases": [],
          "description": "A dictionary containing extension settings.\nSettings depend on extension type.\nRefer to U(https://docs.microsoft.com/en-us/azure/virtual-machines/extensions/overview) for more information.",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Assert the state of the extension.\nUse C(present) to create or update an extension and C(absent) to delete it.",
          "default": "present",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "type": {
          "aliases": [],
          "description": "The type of the extension handler.",
          "required": false,
          "suboptions": {}
        },
        "type_handler_version": {
          "aliases": [],
          "description": "The type version of the extension handler.",
          "required": false,
          "suboptions": {}
        },
        "vmss_name": {
          "aliases": [],
          "description": "The name of the virtual machine where the extension should be create or updated.",
          "required": true,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage Azure Virtual Machine Scale Set (VMSS) extensions",
      "version_added": "0.1.2"
    },
    "examples": "\n    - name: Install VMSS Extension\n      azure_rm_virtualmachinescalesetextension:\n        name: myvmssextension\n        location: eastus\n        resource_group: myResourceGroup\n        vmss_name: myvm\n        publisher: Microsoft.Azure.Extensions\n        type: CustomScript\n        type_handler_version: 2.0\n        settings: '{\"commandToExecute\": \"hostname\"}'\n        auto_upgrade_minor_version: true\n\n    - name: Remove VMSS Extension\n      azure_rm_virtualmachinescalesetextension:\n        name: myvmssextension\n        location: eastus\n        resource_group: myResourceGroup\n        vmss_name: myvm\n        state: absent\n"
  },
  "azure.azcollection.azure_rm_virtualmachinescalesetextension_info": {
    "doc": {
      "description": "Get facts of Azure Virtual Machine Scale Set Extension.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the virtual machine extension.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "vmss_name": {
          "aliases": [],
          "description": "The name of VMSS containing the extension.",
          "required": true,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure Virtual Machine Scale Set Extension facts",
      "version_added": "0.1.2"
    },
    "examples": "\n  - name: Get information on specific Virtual Machine Scale Set Extension\n    azure_rm_virtualmachineextension_info:\n      resource_group: myResourceGroup\n      vmss_name: myvmss\n      name: myextension\n\n  - name: List installed Virtual Machine Scale Set Extensions\n    azure_rm_virtualmachineextension_info:\n      resource_group: myrg\n      vmss_name: myvmss\n"
  },
  "azure.azcollection.azure_rm_virtualmachinescalesetinstance": {
    "doc": {
      "description": "Get facts of Azure Virtual Machine Scale Set VMs.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "instance_id": {
          "aliases": [],
          "description": "The instance ID of the virtual machine.",
          "required": true,
          "suboptions": {}
        },
        "latest_model": {
          "aliases": [],
          "description": "Set to C(yes) to upgrade to the latest model.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "power_state": {
          "aliases": [],
          "description": "Use this option to change power state of the instance.",
          "required": false,
          "choices": [
            "running",
            "stopped",
            "deallocated"
          ],
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "protect_from_scale_in": {
          "aliases": [],
          "description": "turn on/off instance protection from scale in",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "protect_from_scale_set_actions": {
          "aliases": [],
          "description": "tun on/off instance protection from scale set actions",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "State of the VMSS instance. Use C(present) to update an instance and C(absent) to delete an instance.",
          "default": "present",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "vmss_name": {
          "aliases": [],
          "description": "The name of the VM scale set.",
          "required": true,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure Virtual Machine Scale Set Instance facts",
      "version_added": "0.1.2"
    },
    "examples": "\n  - name: Upgrade instance to the latest image\n    azure_rm_virtualmachinescalesetinstance:\n      resource_group: myResourceGroup\n      vmss_name: myVMSS\n      instance_id: \"2\"\n      latest_model: yes\n\n  - name: Turn on protect from scale in\n    azure_rm_virtualmachinescalesetinstance:\n        resource_group: myResourceGroup\n        vmss_name: myVMSS\n        instance_id: \"2\"\n        protect_from_scale_in: true\n"
  },
  "azure.azcollection.azure_rm_virtualmachinescalesetinstance_info": {
    "doc": {
      "description": "Get facts of Azure Virtual Machine Scale Set VMs.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "instance_id": {
          "aliases": [],
          "description": "The instance ID of the virtual machine.",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "vmss_name": {
          "aliases": [],
          "description": "The name of the VM scale set.",
          "required": true,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure Virtual Machine Scale Set Instance facts",
      "version_added": "0.1.2"
    },
    "examples": "\n  - name: List VM instances in Virtual Machine ScaleSet\n    azure_rm_virtualmachinescalesetinstance_info:\n      resource_group: myResourceGroup\n      vmss_name: myVMSS\n"
  },
  "azure.azcollection.azure_rm_virtualmachinesize_info": {
    "doc": {
      "description": "Get available virtual machine size profiles for a location",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "location": {
          "aliases": [],
          "description": "Location for which to list the available virtual machine size profiles",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of a size to get information about",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get facts for virtual machine sizes",
      "version_added": "1.8.0"
    },
    "examples": "\n  - name: Get all virtual machine size info in eastus\n    azure_rm_virtualmachinesize_info:\n      location: eastus\n\n  - name: Get virtual machine size info for eastus for Standard_A1_v2\n    azure_rm_virtualmachinesize_info:\n      location: eastus\n      name: Standard_A1_v2\n"
  },
  "azure.azcollection.azure_rm_virtualnetwork": {
    "doc": {
      "description": "Create, update or delete a virtual networks. Allows setting and updating the available IPv4 address ranges and setting custom DNS servers. Use the M(azure_rm_subnet) module to associate subnets with a virtual network.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "address_prefixes_cidr": {
          "aliases": [
            "address_prefixes"
          ],
          "description": "List of IPv4 address ranges where each is formatted using CIDR notation.\nRequired when creating a new virtual network or using I(purge_address_prefixes).",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "dns_servers": {
          "aliases": [],
          "description": "Custom list of DNS servers. Maximum length of two.\nThe first server in the list will be treated as the Primary server. This is an explicit list.\nExisting DNS servers will be replaced with the specified list.\nUse the I(purge_dns_servers) option to remove all custom DNS servers and revert to default Azure servers.",
          "required": false,
          "suboptions": {}
        },
        "location": {
          "aliases": [],
          "description": "Valid Azure location. Defaults to location of the resource group.",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the virtual network.",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "purge_address_prefixes": {
          "aliases": [
            "purge"
          ],
          "description": "Use with I(state=present) to remove any existing I(address_prefixes).",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "purge_dns_servers": {
          "aliases": [],
          "description": "Use with I(state=present) to remove existing DNS servers, reverting to default Azure servers. Mutually exclusive with DNS servers.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Name of resource group.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "State of the virtual network. Use C(present) to create or update and C(absent) to delete.",
          "default": "present",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage Azure virtual networks",
      "version_added": "0.1.0"
    },
    "examples": "\n    - name: Create a virtual network\n      azure_rm_virtualnetwork:\n        resource_group: myResourceGroup\n        name: myVirtualNetwork\n        address_prefixes_cidr:\n            - \"10.1.0.0/16\"\n            - \"172.100.0.0/16\"\n        dns_servers:\n            - \"127.0.0.1\"\n            - \"127.0.0.2\"\n        tags:\n            testing: testing\n            delete: on-exit\n\n    - name: Delete a virtual network\n      azure_rm_virtualnetwork:\n        resource_group: myResourceGroup\n        name: myVirtualNetwork\n        state: absent\n"
  },
  "azure.azcollection.azure_rm_virtualnetwork_info": {
    "doc": {
      "description": "Get facts for a specific virtual network or all virtual networks within a resource group.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Only show results for a specific security group.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Limit results by resource group. Required when filtering by name.",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get virtual network facts",
      "version_added": "0.0.1"
    },
    "examples": "\n    - name: Get facts for one virtual network\n      azure_rm_virtualnetwork_info:\n        resource_group: myResourceGroup\n        name: secgroup001\n\n    - name: Get facts for all virtual networks\n      azure_rm_virtualnetwork_info:\n        resource_group: myResourceGroup\n\n    - name: Get facts by tags\n      azure_rm_virtualnetwork_info:\n        tags:\n          - testing\n"
  },
  "azure.azcollection.azure_rm_virtualnetworkgateway": {
    "doc": {
      "description": "Create, update or delete a virtual network gateway(VPN Gateway).\nWhen creating a VPN Gateway you must provide the name of an existing virtual network.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "bgp_settings": {
          "aliases": [],
          "description": "Virtual network gateway's BGP speaker settings.",
          "required": false,
          "suboptions": {
            "asn": {
              "aliases": [],
              "description": "The BGP speaker's ASN.",
              "required": true,
              "suboptions": {}
            }
          }
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "enable_bgp": {
          "aliases": [],
          "description": "Whether BGP is enabled for this virtual network gateway or not.",
          "default": "False",
          "required": false,
          "suboptions": {}
        },
        "gateway_type": {
          "aliases": [],
          "description": "The type of this virtual network gateway.",
          "default": "vpn",
          "required": false,
          "choices": [
            "vpn",
            "express_route"
          ],
          "suboptions": {}
        },
        "ip_configurations": {
          "aliases": [],
          "description": "List of IP configurations.",
          "required": false,
          "suboptions": {
            "name": {
              "aliases": [],
              "description": "Name of the IP configuration.",
              "required": true,
              "suboptions": {}
            },
            "private_ip_allocation_method": {
              "aliases": [],
              "description": "Private IP allocation method.",
              "default": "dynamic",
              "required": false,
              "choices": [
                "dynamic",
                "static"
              ],
              "suboptions": {}
            },
            "public_ip_address_name": {
              "aliases": [],
              "description": "Name of the public IP address. Use 'None' to disable the public IP address.",
              "required": false,
              "suboptions": {}
            },
            "subnet": {
              "aliases": [],
              "description": "ID of the gateway subnet for VPN.",
              "default": "GatewaySubnet",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "location": {
          "aliases": [],
          "description": "Valid Azure location. Defaults to location of the resource group.",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of VPN Gateway.",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Name of a resource group where VPN Gateway exists or will be created.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "sku": {
          "aliases": [],
          "description": "The reference of the VirtualNetworkGatewaySku resource which represents the SKU selected for Virtual network gateway.",
          "default": "VpnGw1",
          "required": false,
          "choices": [
            "VpnGw1",
            "VpnGw2",
            "VpnGw3",
            "Standard",
            "Basic",
            "HighPerformance"
          ],
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "State of the VPN Gateway. Use C(present) to create or update VPN gateway and C(absent) to delete VPN gateway.",
          "default": "present",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "virtual_network": {
          "aliases": [
            "virtual_network_name"
          ],
          "description": "An existing virtual network with which the VPN Gateway will be associated.\nRequired when creating a VPN Gateway.\nCan be the name of the virtual network.\nMust be in the same resource group as VPN gateway when specified by name.\nCan be the resource ID of the virtual network.\nCan be a dict which contains I(name) and I(resource_group) of the virtual network.",
          "required": true,
          "suboptions": {}
        },
        "vpn_type": {
          "aliases": [],
          "description": "The type of this virtual private network.",
          "default": "route_based",
          "required": false,
          "choices": [
            "route_based",
            "policy_based"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage Azure virtual network gateways",
      "version_added": "0.0.1"
    },
    "examples": "\n    - name: Create virtual network gateway without bgp settings\n      azure_rm_virtualnetworkgateway:\n        resource_group: myResourceGroup\n        name: myVirtualNetworkGateway\n        ip_configurations:\n          - name: testipconfig\n            private_ip_allocation_method: Dynamic\n            public_ip_address_name: testipaddr\n        virtual_network: myVirtualNetwork\n        tags:\n          common: \"xyz\"\n\n    - name: Create virtual network gateway with bgp\n      azure_rm_virtualnetworkgateway:\n        resource_group: myResourceGroup\n        name: myVirtualNetworkGateway\n        sku: vpn_gw1\n        ip_configurations:\n          - name: testipconfig\n            private_ip_allocation_method: Dynamic\n            public_ip_address_name: testipaddr\n        enable_bgp: yes\n        virtual_network: myVirtualNetwork\n        bgp_settings:\n          asn: 65515\n          bgp_peering_address: \"169.254.54.209\"\n        tags:\n          common: \"xyz\"\n\n    - name: Delete instance of virtual network gateway\n      azure_rm_virtualnetworkgateway:\n        resource_group: myResourceGroup\n        name: myVirtualNetworkGateway\n        state: absent\n"
  },
  "azure.azcollection.azure_rm_virtualnetworkpeering": {
    "doc": {
      "description": "Create, update and delete Azure Virtual Network Peering.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "allow_forwarded_traffic": {
          "aliases": [],
          "description": "Allows forwarded traffic from the VMs in the remote VNet.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "allow_gateway_transit": {
          "aliases": [],
          "description": "Allows VNet to use the remote VNet's gateway. Remote VNet gateway must have --allow-gateway-transit enabled for remote peering.\nOnly 1 peering can have this flag enabled. Cannot be set if the VNet already has a gateway.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "allow_virtual_network_access": {
          "aliases": [],
          "description": "Allows VMs in the remote VNet to access all VMs in the local VNet.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the virtual network peering.",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "remote_virtual_network": {
          "aliases": [],
          "description": "Remote virtual network to be peered.\nIt can be name of remote virtual network in same resource group.\nIt can be remote virtual network resource ID.\nIt can be a dict which contains I(name) and I(resource_group) of remote virtual network.\nRequired when creating.",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Name of a resource group where the vnet exists.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "State of the virtual network peering. Use C(present) to create or update a peering and C(absent) to delete it.",
          "default": "present",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "use_remote_gateways": {
          "aliases": [],
          "description": "If remote gateways can be used on this virtual network.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "virtual_network": {
          "aliases": [],
          "description": "Name or resource ID of the virtual network to be peered.",
          "required": true,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage Azure Virtual Network Peering",
      "version_added": "0.0.1"
    },
    "examples": "\n    - name: Create virtual network peering\n      azure_rm_virtualnetworkpeering:\n        resource_group: myResourceGroup\n        virtual_network: myVirtualNetwork\n        name: myPeering\n        remote_virtual_network:\n          resource_group: mySecondResourceGroup\n          name: myRemoteVirtualNetwork\n        allow_virtual_network_access: false\n        allow_forwarded_traffic: true\n\n    - name: Delete the virtual network peering\n      azure_rm_virtualnetworkpeering:\n        resource_group: myResourceGroup\n        virtual_network: myVirtualNetwork\n        name: myPeering\n        state: absent\n"
  },
  "azure.azcollection.azure_rm_virtualnetworkpeering_info": {
    "doc": {
      "description": "Get facts of Azure Virtual Network Peering.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the virtual network peering.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Name of a resource group where the vnet exists.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "virtual_network": {
          "aliases": [],
          "description": "Name or resource ID of a virtual network.",
          "required": true,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get facts of Azure Virtual Network Peering",
      "version_added": "0.0.1"
    },
    "examples": "\n    - name: Get virtual network peering by name\n      azure_rm_virtualnetworkpeering_info:\n        resource_group: myResourceGroup\n        virtual_network: myVnet1\n        name: myVnetPeer\n\n    - name: List virtual network peering of virtual network\n      azure_rm_virtualnetworkpeering:\n        resource_group: myResourceGroup\n        virtual_network: myVnet1\n"
  },
  "azure.azcollection.azure_rm_virtualwan": {
    "doc": {
      "description": "Create, update and delete instance of Azure VirtualWan.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "allow_branch_to_branch_traffic": {
          "aliases": [],
          "description": "True if branch to branch traffic is allowed.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "allow_vnet_to_vnet_traffic": {
          "aliases": [],
          "description": "True if Vnet to Vnet traffic is allowed.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "disable_vpn_encryption": {
          "aliases": [],
          "description": "Vpn encryption to be disabled or not.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "location": {
          "aliases": [],
          "description": "The virtual wan location.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the VirtualWAN being retrieved.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "office365_local_breakout_category": {
          "aliases": [],
          "description": "Specifies the Office365 local breakout category.\nDefault value is C(None).",
          "type": "str",
          "required": false,
          "choices": [
            "Optimize",
            "OptimizeAndAllow",
            "All",
            "None"
          ],
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The resource group name of the VirtualWan.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Assert the state of the VirtualWan.\nUse C(present) to create or update an VirtualWan and C(absent) to delete it.",
          "default": "present",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "virtual_hubs": {
          "aliases": [],
          "description": "List of VirtualHubs in the VirtualWAN.",
          "type": "list",
          "required": false,
          "suboptions": {
            "id": {
              "aliases": [],
              "description": "The virtual hub resource ID.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "virtual_wan_type": {
          "aliases": [],
          "description": "The type of the VirtualWAN.",
          "type": "str",
          "required": false,
          "choices": [
            "Basic",
            "Standard"
          ],
          "suboptions": {}
        },
        "vpn_sites": {
          "aliases": [],
          "description": "List of VpnSites in the VirtualWAN.",
          "type": "list",
          "required": false,
          "suboptions": {
            "id": {
              "aliases": [],
              "description": "The vpn site resource ID.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage Azure VirtualWan instance",
      "version_added": "1.5.0"
    },
    "examples": "\n - name: Create a VirtualWan\n   azure_rm_virtualwan:\n     resource_group: myResouceGroup\n     name: testwan\n     disable_vpn_encryption: true\n     allow_branch_to_branch_traffic: true\n     allow_vnet_to_vnet_traffic: true\n     virtual_wan_type: Standard\n\n - name: Delete the VirtualWan\n   azure_rm_virtualwan:\n     resource_group: myResouceGroup\n     name: testwan\n     state: absent\n\n"
  },
  "azure.azcollection.azure_rm_virtualwan_info": {
    "doc": {
      "description": "Get info of VirtualWan.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the VirtualWAN being retrieved.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The resource group name of the VirtualWan.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get VirtualWan info",
      "version_added": "1.5.0"
    },
    "examples": "\n    - name: Get Virtual WAN by name\n      azure_rm_virtualwan_info:\n        resource_group: myResouceGroup\n        name: testwan\n\n    - name: List all Virtual WANLs by resource group\n      azure_rm_virtualwan_info:\n        resource_group: myResourceGroup\n\n    - name: List all Virtual WANs by subscription_id\n      azure_rm_virtualwan_info:\n\n"
  },
  "azure.azcollection.azure_rm_vmbackuppolicy": {
    "doc": {
      "description": "Create or Delete Azure VM Backup Policy.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "count": {
          "aliases": [],
          "description": "Count of duration types. Retention duration is obtained by the counting the duration type Count times.",
          "default": "1",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "months": {
          "aliases": [],
          "description": "List of months of year of yearly retention policy.",
          "default": "['January']",
          "type": "list",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Policy Name.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Assert the state of the protection item.\nUse C(present) for Creating Backup Policy.\nUse C(absent) for Deleting Backup Policy.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "time": {
          "aliases": [],
          "description": "Retention times of retention policy in UTC.",
          "default": "12:00",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "vault_name": {
          "aliases": [],
          "description": "Recovery Service Vault Name.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "weekdays": {
          "aliases": [],
          "description": "List of days of the week.",
          "default": "['Monday']",
          "type": "list",
          "required": false,
          "suboptions": {}
        },
        "weeks": {
          "aliases": [],
          "description": "List of weeks of month.",
          "default": "['First']",
          "type": "list",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Create or Delete Azure VM Backup Policy",
      "version_added": "1.1.0"
    },
    "examples": "\n- name: Create VM Backup Policy\n  azure_rm_backvmuppolicy:\n     name: 'myBackupPolicy'\n     vault_name: 'myVault'\n     resource_group: 'myResourceGroup'\n     time: '18:00'\n     weekdays: ['Monday', 'Thursday', 'Friday']\n     weeks: ['First', 'Fourth']\n     months: ['February', 'November']\n     count: 4\n     state: present\n- name: Delete VM Backup Policy\n  azure_rm_backvmuppolicy:\n     name: 'myBackupPolicy'\n     vault_name: 'myVault'\n     resource_group: 'myResourceGroup'\n     state: absent\n"
  },
  "azure.azcollection.azure_rm_vmbackuppolicy_info": {
    "doc": {
      "description": "Get Backup Policy Details.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Policy Name.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "vault_name": {
          "aliases": [],
          "description": "Recovery Service Vault Name.",
          "type": "str",
          "required": true,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Fetch Backup Policy Details",
      "version_added": "1.1.0"
    },
    "examples": "\n   azure_rm_backvmuppolicy_info:\n     name: 'myBackupPolicy'\n     vault_name: 'myVault'\n     resource_group: 'myResourceGroup'\n"
  },
  "azure.azcollection.azure_rm_vpnsite": {
    "doc": {
      "description": "Create, update and delete instance of Azure VpnSite.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "address_space": {
          "aliases": [],
          "description": "The AddressSpace that contains an array of IP address ranges.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "address_prefixes": {
              "aliases": [],
              "description": "A list of address blocks reserved for this virtual network in CIDR notation.",
              "type": "list",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "bgp_properties": {
          "aliases": [],
          "description": "The set of bgp properties.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "asn": {
              "aliases": [],
              "description": "The BGP speaker's ASN.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "bgp_peering_address": {
              "aliases": [],
              "description": "The BGP peering address and BGP identifier of this BGP speaker.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "bgp_peering_addresses": {
              "aliases": [],
              "description": "BGP peering address with IP configuration ID for virtual network gateway.",
              "type": "list",
              "required": false,
              "suboptions": {
                "custom_bgp_ip_addresses": {
                  "aliases": [],
                  "description": "The list of custom BGP peering addresses which belong to IP configuration.",
                  "type": "list",
                  "required": false,
                  "suboptions": {}
                },
                "default_bgp_ip_addresses": {
                  "aliases": [],
                  "description": "The list of default BGP peering addresses which belong to IP configuration.",
                  "type": "list",
                  "required": false,
                  "suboptions": {}
                },
                "ipconfiguration_id": {
                  "aliases": [],
                  "description": "The ID of IP configuration which belongs to gateway.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "tunnel_ip_addresses": {
                  "aliases": [],
                  "description": "The list of tunnel public IP addresses which belong to IP configuration.",
                  "type": "list",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "peer_weight": {
              "aliases": [],
              "description": "The weight added to routes learned from this BGP speaker.",
              "type": "int",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "device_properties": {
          "aliases": [],
          "description": "The device properties.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "device_model": {
              "aliases": [],
              "description": "Model of the device.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "device_vendor": {
              "aliases": [],
              "description": "Name of the device Vendor.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "link_speed_in_mbps": {
              "aliases": [],
              "description": "Link speed.",
              "type": "int",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "ip_address": {
          "aliases": [],
          "description": "The ip-address for the vpn-site.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "is_security_site": {
          "aliases": [],
          "description": "IsSecuritySite flag.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "location": {
          "aliases": [],
          "description": "The location of the VpnSite",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the VpnSite.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "o365_policy": {
          "aliases": [],
          "description": "Office365 Policy.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "break_out_categories": {
              "aliases": [],
              "description": "Office365 breakout categories.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "allow": {
                  "aliases": [],
                  "description": "Flag to control allow category.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "default": {
                  "aliases": [],
                  "description": "Flag to control default category.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "optimize": {
                  "aliases": [],
                  "description": "Flag to control optimize category.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                }
              }
            }
          }
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The resource group name of the VpnSite.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "site_key": {
          "aliases": [],
          "description": "The key for vpn-site that can be used for connections.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Assert the state of the VpnSite.\nUse C(present) to create or update an VpnSite and C(absent) to delete it.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "virtual_wan": {
          "aliases": [],
          "description": "The VirtualWAN to which the vpnSite belongs.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "id": {
              "aliases": [],
              "description": "The resource ID of the related virtual wan.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "vpn_site_links": {
          "aliases": [],
          "description": "List of all vpn site links.",
          "type": "list",
          "required": false,
          "suboptions": {
            "bgp_properties": {
              "aliases": [],
              "description": "The set of bgp properties.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "asn": {
                  "aliases": [],
                  "description": "The BGP speaker's ASN.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "bgp_peering_address": {
                  "aliases": [],
                  "description": "The BGP peering address and BGP identifier of this BGP speaker.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "fqdn": {
              "aliases": [],
              "description": "FQDN of vpn-site-link.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "ip_address": {
              "aliases": [],
              "description": "The IP address for the vpn site link.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "link_properties": {
              "aliases": [],
              "description": "The link provider properties.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "link_provider_name": {
                  "aliases": [],
                  "description": "Name of the link provider.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "link_speed_in_mbps": {
                  "aliases": [],
                  "description": "Link speed.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "name": {
              "aliases": [],
              "description": "The name of the resource that is unique within a resource group.\nThis name can be used to access the resource.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage Azure VpnSite instance",
      "version_added": "1.5.0"
    },
    "examples": "\n    - name: Create VpnSite\n      azure_rm_vpnsite:\n        resource_group: myResourceGroup\n        name: vpnSite_name\n\n    - name: Delete Vpn Site\n      azure_rm_vpnsite:\n        resource_group: myResourceGroup\n        name: vpnSite_name\n\n"
  },
  "azure.azcollection.azure_rm_vpnsite_info": {
    "doc": {
      "description": "Get info of VpnSite.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the VpnSite being retrieved.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The resource group name of the VpnSite.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get VpnSite info",
      "version_added": "1.5.0"
    },
    "examples": "\n    - name: Get Vpn Site Info by name\n      azure_rm_vpnsite_info:\n        resource_group: myResourceGroup\n        name: vwan_site_name\n\n    - name: Get Vpn Site List By ResourceGroup\n      azure_rm_vpnsite_info:\n        resource_group: myResourceGroup\n\n    - name: Get Vpn Site List By Subscription\n      azure_rm_vpnsite_info:\n\n"
  },
  "azure.azcollection.azure_rm_vpnsitelink_info": {
    "doc": {
      "description": "Get info of Vpn Site Link relate infomation.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the VpnSiteLink being retrieved.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The resource group name of the VpnSite.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "vpn_site_name": {
          "aliases": [],
          "description": "The name of the Vpn Site.",
          "type": "str",
          "required": true,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get VpnSiteLink info",
      "version_added": "1.5.0"
    },
    "examples": "\n    - name: Get Vpn Site Link info by the name\n      azure_rm_vpnsitelink_info:\n        resource_group: myResourceGroup\n        name: vpnSiteLink1\n        vpn_site_name: vpnSite1\n\n\n    - name: Get Vpn Site Links by the Vpn Site\n      azure_rm_vpnsitelink_info:\n        resource_group: myResourceGroup\n        vpn_site_name: vpnSite1\n"
  },
  "azure.azcollection.azure_rm_webapp": {
    "doc": {
      "description": "Create, update and delete instance of Web App.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "app_settings": {
          "aliases": [],
          "description": "Configure web app application settings. Suboptions are in key value pair format.",
          "required": false,
          "suboptions": {}
        },
        "app_state": {
          "aliases": [],
          "description": "Start/Stop/Restart the web app.",
          "default": "started",
          "type": "str",
          "required": false,
          "choices": [
            "started",
            "stopped",
            "restarted"
          ],
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_affinity_enabled": {
          "aliases": [],
          "description": "Whether or not to send session affinity cookies, which route client requests in the same session to the same instance.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "container_settings": {
          "aliases": [],
          "description": "Web app container settings.",
          "required": false,
          "suboptions": {
            "name": {
              "aliases": [],
              "description": "Name of the container, for example C(imagename:tag).\nTo create a multi-container app, the name should be 'COMPOSE|' or 'KUBE|' followed by base64 encoded configuration.",
              "required": false,
              "suboptions": {}
            },
            "registry_server_password": {
              "aliases": [],
              "description": "The container registry server password.",
              "required": false,
              "suboptions": {}
            },
            "registry_server_url": {
              "aliases": [],
              "description": "Container registry server URL, for example C(mydockerregistry.io).",
              "required": false,
              "suboptions": {}
            },
            "registry_server_user": {
              "aliases": [],
              "description": "The container registry server user name.",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "deployment_source": {
          "aliases": [],
          "description": "Deployment source for git.",
          "required": false,
          "suboptions": {
            "branch": {
              "aliases": [],
              "description": "The branch name of the repository.",
              "required": false,
              "suboptions": {}
            },
            "url": {
              "aliases": [],
              "description": "Repository url of deployment source.",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "dns_registration": {
          "aliases": [],
          "description": "Whether or not the web app hostname is registered with DNS on creation. Set to C(false) to register.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "frameworks": {
          "aliases": [],
          "description": "Set of run time framework settings. Each setting is a dictionary.\nSee U(https://docs.microsoft.com/en-us/azure/app-service/app-service-web-overview) for more info.",
          "required": false,
          "suboptions": {
            "name": {
              "aliases": [],
              "description": "Name of the framework.\nSupported framework list for Windows web app and Linux web app is different.\nWindows web apps support C(java), C(net_framework), C(php), C(python), and C(node) from June 2018.\nWindows web apps support multiple framework at the same time.\nLinux web apps support C(java), C(ruby), C(php), C(dotnetcore), and C(node) from June 2018.\nLinux web apps support only one framework.\nJava framework is mutually exclusive with others.",
              "required": false,
              "choices": [
                "java",
                "net_framework",
                "php",
                "python",
                "ruby",
                "dotnetcore",
                "node"
              ],
              "suboptions": {}
            },
            "settings": {
              "aliases": [],
              "description": "List of settings of the framework.",
              "required": false,
              "suboptions": {
                "java_container": {
                  "aliases": [],
                  "description": "Name of Java container.\nSupported only when I(frameworks=java). Sample values C(Tomcat), C(Jetty).",
                  "required": false,
                  "suboptions": {}
                },
                "java_container_version": {
                  "aliases": [],
                  "description": "Version of Java container.\nSupported only when I(frameworks=java).\nSample values for C(Tomcat), C(8.0), C(8.5), C(9.0). For C(Jetty,), C(9.1), C(9.3).",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "version": {
              "aliases": [],
              "description": "Version of the framework. For Linux web app supported value, see U(https://aka.ms/linux-stacks) for more info.\nC(net_framework) supported value sample, C(v4.0) for .NET 4.6 and C(v3.0) for .NET 3.5.\nC(php) supported value sample, C(5.5), C(5.6), C(7.0).\nC(python) supported value sample, C(5.5), C(5.6), C(7.0).\nC(node) supported value sample, C(6.6), C(6.9).\nC(dotnetcore) supported value sample, C(1.0), C(1.1), C(1.2).\nC(ruby) supported value sample, C(2.3).\nC(java) supported value sample, C(1.9) for Windows web app. C(1.8) for Linux web app.",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "https_only": {
          "aliases": [],
          "description": "Configures web site to accept only https requests.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "location": {
          "aliases": [],
          "description": "Resource location. If not set, location from the resource group will be used as default.",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Unique name of the app to create or update. To create or update a deployment slot, use the {slot} parameter.",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "plan": {
          "aliases": [],
          "description": "App service plan. Required for creation.\nCan be name of existing app service plan in same resource group as web app.\nCan be the resource ID of an existing app service plan. For example /subscriptions/<subs_id>/resourceGroups/<resource_group>/providers/Microsoft.Web/serverFarms/<plan_name>.\nCan be a dict containing five parameters, defined below.\nC(name), name of app service plan.\nC(resource_group), resource group of the app service plan.\nC(sku), SKU of app service plan, allowed values listed on U(https://azure.microsoft.com/en-us/pricing/details/app-service/linux/).\nC(is_linux), whether or not the app service plan is Linux. defaults to C(False).\nC(number_of_workers), number of workers for app service plan.",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "purge_app_settings": {
          "aliases": [],
          "description": "Purge any existing application settings. Replace web app application settings with app_settings.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Name of the resource group to which the resource belongs.",
          "required": true,
          "suboptions": {}
        },
        "scm_type": {
          "aliases": [],
          "description": "Repository type of deployment source, for example C(LocalGit), C(GitHub).\nList of supported values maintained at U(https://docs.microsoft.com/en-us/rest/api/appservice/webapps/createorupdate#scmtype).",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "skip_custom_domain_verification": {
          "aliases": [],
          "description": "Whether or not to skip verification of custom (non *.azurewebsites.net) domains associated with web app. Set to C(true) to skip.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "startup_file": {
          "aliases": [],
          "description": "The web's startup file.\nUsed only for Linux web apps.",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "State of the Web App.\nUse C(present) to create or update a Web App and C(absent) to delete it.",
          "default": "present",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ttl_in_seconds": {
          "aliases": [],
          "description": "Time to live in seconds for web app default domain name.",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage Web App instances",
      "version_added": "0.1.2"
    },
    "examples": "\n    - name: Create a windows web app with non-exist app service plan\n      azure_rm_webapp:\n        resource_group: myResourceGroup\n        name: myWinWebapp\n        plan:\n          resource_group: myAppServicePlan_rg\n          name: myAppServicePlan\n          is_linux: false\n          sku: S1\n\n    - name: Create a docker web app with some app settings, with docker image\n      azure_rm_webapp:\n        resource_group: myResourceGroup\n        name: myDockerWebapp\n        plan:\n          resource_group: myAppServicePlan_rg\n          name: myAppServicePlan\n          is_linux: true\n          sku: S1\n          number_of_workers: 2\n        app_settings:\n          testkey: testvalue\n          testkey2: testvalue2\n        container_settings:\n          name: ansible/ansible:ubuntu1404\n\n    - name: Create a docker web app with private acr registry\n      azure_rm_webapp:\n        resource_group: myResourceGroup\n        name: myDockerWebapp\n        plan: myAppServicePlan\n        app_settings:\n          testkey: testvalue\n        container_settings:\n          name: ansible/ubuntu1404\n          registry_server_url: myregistry.io\n          registry_server_user: user\n          registry_server_password: pass\n\n    - name: Create a multi-container web app\n      azure_rm_webapp:\n        resource_group: myResourceGroup\n        name: myMultiContainerWebapp\n        plan: myAppServicePlan\n        app_settings:\n          testkey: testvalue\n        container_settings:\n          name: \"COMPOSE|{{ lookup('file', 'docker-compose.yml') | b64encode }}\"\n\n    - name: Create a linux web app with Node 6.6 framework\n      azure_rm_webapp:\n        resource_group: myResourceGroup\n        name: myLinuxWebapp\n        plan:\n          resource_group: myAppServicePlan_rg\n          name: myAppServicePlan\n        app_settings:\n          testkey: testvalue\n        frameworks:\n          - name: \"node\"\n            version: \"6.6\"\n\n    - name: Create a windows web app with node, php\n      azure_rm_webapp:\n        resource_group: myResourceGroup\n        name: myWinWebapp\n        plan:\n          resource_group: myAppServicePlan_rg\n          name: myAppServicePlan\n        app_settings:\n          testkey: testvalue\n        frameworks:\n          - name: \"node\"\n            version: 6.6\n          - name: \"php\"\n            version: \"7.0\"\n\n    - name: Create a stage deployment slot for an existing web app\n      azure_rm_webapp:\n        resource_group: myResourceGroup\n        name: myWebapp/slots/stage\n        plan:\n          resource_group: myAppServicePlan_rg\n          name: myAppServicePlan\n        app_settings:\n          testkey:testvalue\n\n    - name: Create a linux web app with java framework\n      azure_rm_webapp:\n        resource_group: myResourceGroup\n        name: myLinuxWebapp\n        plan:\n          resource_group: myAppServicePlan_rg\n          name: myAppServicePlan\n        app_settings:\n          testkey: testvalue\n        frameworks:\n          - name: \"java\"\n            version: \"8\"\n            settings:\n              java_container: \"Tomcat\"\n              java_container_version: \"8.5\"\n"
  },
  "azure.azcollection.azure_rm_webapp_info": {
    "doc": {
      "description": "Get facts for a specific web app or all web app in a resource group, or all web app in current subscription.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Only show results for a specific web app.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Limit results by resource group.",
          "required": false,
          "suboptions": {}
        },
        "return_publish_profile": {
          "aliases": [],
          "description": "Indicate whether to return publishing profile of the web app.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure web app facts",
      "version_added": "0.1.2"
    },
    "examples": "\n    - name: Get facts for web app by name\n      azure_rm_webapp_info:\n        resource_group: myResourceGroup\n        name: winwebapp1\n\n    - name: Get facts for web apps in resource group\n      azure_rm_webapp_info:\n        resource_group: myResourceGroup\n\n    - name: Get facts for web apps with tags\n      azure_rm_webapp_info:\n        tags:\n          - testtag\n          - foo:bar\n"
  },
  "azure.azcollection.azure_rm_webappaccessrestriction": {
    "doc": {
      "description": "Add, remove, or update network access restrictions for a web app.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "ip_security_restrictions": {
          "aliases": [],
          "description": "The web app's HTTP access restrictions.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "action": {
              "aliases": [],
              "description": "Traffic action for the access restriction.",
              "default": "Allow",
              "type": "str",
              "required": false,
              "choices": [
                "Allow",
                "Deny"
              ],
              "suboptions": {}
            },
            "description": {
              "aliases": [],
              "description": "Description of the access restriction.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "ip_address": {
              "aliases": [],
              "description": "IPv4 address (with subnet mask) of the access restriction.",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "name": {
              "aliases": [],
              "description": "Name of the access restriction.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "priority": {
              "aliases": [],
              "description": "Numerical priority of the access restriction.",
              "type": "int",
              "required": true,
              "suboptions": {}
            }
          }
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the web app.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Resource group of the web app.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "scm_ip_security_restrictions": {
          "aliases": [],
          "description": "The web app's SCM access restrictions. If C(scm_ip_security_restrictions_use_main) is set to C(true), the SCM restrictions will be configured but not used.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "action": {
              "aliases": [],
              "description": "Traffic action for the access restriction.",
              "default": "Allow",
              "type": "str",
              "required": false,
              "choices": [
                "Allow",
                "Deny"
              ],
              "suboptions": {}
            },
            "description": {
              "aliases": [],
              "description": "Description of the access restriction.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "ip_address": {
              "aliases": [],
              "description": "IPv4 address (with subnet mask) of the access restriction.",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "name": {
              "aliases": [],
              "description": "Name of the access restriction.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "priority": {
              "aliases": [],
              "description": "Numerical priority of the access restriction.",
              "type": "int",
              "required": true,
              "suboptions": {}
            }
          }
        },
        "scm_ip_security_restrictions_use_main": {
          "aliases": [],
          "description": "Set to C(true) to have the HTTP access restrictions also apply to the SCM site. If C(scm_ip_security_restrictions) are also applied, they will configured but not used.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "State of the access restrictions. Use C(present) to create or update and C(absent) to delete.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage web app network access restrictions",
      "version_added": "1.8.0"
    },
    "examples": "\n    - name: Configure web app access restrictions.\n      azure.azcollection.azure_rm_webappaccessrestriction:\n        name: \"MyWebapp\"\n        resource_group: \"MyResourceGroup\"\n        ip_security_restrictions:\n          - name: \"Datacenter 1\"\n            action: \"Allow\"\n            ip_address: \"1.1.1.1/24\"\n            priority: 1\n          - name: \"Datacenter 2\"\n            action: \"Allow\"\n            ip_address: \"2.2.2.2/24\"\n            priority: 2\n        scm_ip_security_restrictions_use_main: true\n\n    - name: Delete web app network access restrictions.\n      azure.azcollection.azure_rm_webappaccessrestriction:\n        name: \"MyWebapp\"\n        resource_group: \"MyResourceGroup\"\n        state: \"absent\"\n"
  },
  "azure.azcollection.azure_rm_webappaccessrestriction_info": {
    "doc": {
      "description": "Get facts for a web app's network access restrictions.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the web app.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Resource group of the web app.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Retrieve web app network access restriction facts",
      "version_added": "1.8.0"
    },
    "examples": "\n    - name: View web app access restrictions.\n      azure.azcollection.azure_rm_webappaccessrestriction_info:\n        name: \"MyWebapp\"\n        resource_group: \"MyResourceGroup\"\n"
  },
  "azure.azcollection.azure_rm_webappslot": {
    "doc": {
      "description": "Create, update and delete Azure Web App slot.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "app_settings": {
          "aliases": [],
          "description": "Configure web app slot application settings. Suboptions are in key value pair format.",
          "required": false,
          "suboptions": {}
        },
        "app_state": {
          "aliases": [],
          "description": "Start/Stop/Restart the slot.",
          "default": "started",
          "type": "str",
          "required": false,
          "choices": [
            "started",
            "stopped",
            "restarted"
          ],
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auto_swap_slot_name": {
          "aliases": [],
          "description": "Used to configure target slot name to auto swap, or disable auto swap.\nSet it target slot name to auto swap.\nSet it to False to disable auto slot swap.",
          "required": false,
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "configuration_source": {
          "aliases": [],
          "description": "Source slot to clone configurations from when creating slot. Use webapp's name to refer to the production slot.",
          "required": false,
          "suboptions": {}
        },
        "container_settings": {
          "aliases": [],
          "description": "Web app slot container settings.",
          "required": false,
          "suboptions": {
            "name": {
              "aliases": [],
              "description": "Name of container, for example C(imagename:tag).",
              "required": false,
              "suboptions": {}
            },
            "registry_server_password": {
              "aliases": [],
              "description": "The container registry server password.",
              "required": false,
              "suboptions": {}
            },
            "registry_server_url": {
              "aliases": [],
              "description": "Container registry server URL, for example C(mydockerregistry.io).",
              "required": false,
              "suboptions": {}
            },
            "registry_server_user": {
              "aliases": [],
              "description": "The container registry server user name.",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "deployment_source": {
          "aliases": [],
          "description": "Deployment source for git.",
          "required": false,
          "suboptions": {
            "branch": {
              "aliases": [],
              "description": "The branch name of the repository.",
              "required": false,
              "suboptions": {}
            },
            "url": {
              "aliases": [],
              "description": "Repository URL of deployment source.",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "frameworks": {
          "aliases": [],
          "description": "Set of run time framework settings. Each setting is a dictionary.\nSee U(https://docs.microsoft.com/en-us/azure/app-service/app-service-web-overview) for more info.",
          "required": false,
          "suboptions": {
            "name": {
              "aliases": [],
              "description": "Name of the framework.\nSupported framework list for Windows web app and Linux web app is different.\nWindows web apps support C(java), C(net_framework), C(php), C(python), and C(node) from June 2018.\nWindows web apps support multiple framework at same time.\nLinux web apps support C(java), C(ruby), C(php), C(dotnetcore), and C(node) from June 2018.\nLinux web apps support only one framework.\nJava framework is mutually exclusive with others.",
              "required": false,
              "choices": [
                "java",
                "net_framework",
                "php",
                "python",
                "ruby",
                "dotnetcore",
                "node"
              ],
              "suboptions": {}
            },
            "settings": {
              "aliases": [],
              "description": "List of settings of the framework.",
              "required": false,
              "suboptions": {
                "java_container": {
                  "aliases": [],
                  "description": "Name of Java container. This is supported by specific framework C(java) onlys, for example C(Tomcat), C(Jetty).",
                  "required": false,
                  "suboptions": {}
                },
                "java_container_version": {
                  "aliases": [],
                  "description": "Version of Java container. This is supported by specific framework C(java) only.\nFor C(Tomcat), for example C(8.0), C(8.5), C(9.0). For C(Jetty), for example C(9.1), C(9.3).",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "version": {
              "aliases": [],
              "description": "Version of the framework. For Linux web app supported value, see U(https://aka.ms/linux-stacks) for more info.\nC(net_framework) supported value sample, C(v4.0) for .NET 4.6 and C(v3.0) for .NET 3.5.\nC(php) supported value sample, C(5.5), C(5.6), C(7.0).\nC(python) supported value sample, C(5.5), C(5.6), C(7.0).\nC(node) supported value sample, C(6.6), C(6.9).\nC(dotnetcore) supported value sample, C(1.0), C(1.1), C(1.2).\nC(ruby) supported value sample, 2.3.\nC(java) supported value sample, C(1.9) for Windows web app. C(1.8) for Linux web app.",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "location": {
          "aliases": [],
          "description": "Resource location. If not set, location from the resource group will be used as default.",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Unique name of the deployment slot to create or update.",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "purge_app_settings": {
          "aliases": [],
          "description": "Purge any existing application settings. Replace slot application settings with app_settings.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Name of the resource group to which the resource belongs.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "startup_file": {
          "aliases": [],
          "description": "The slot startup file.\nThis only applies for Linux web app slot.",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "State of the Web App deployment slot.\nUse C(present) to create or update a  slot and C(absent) to delete it.",
          "default": "present",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "swap": {
          "aliases": [],
          "description": "Swap deployment slots of a web app.",
          "required": false,
          "suboptions": {
            "action": {
              "aliases": [],
              "description": "Swap types.\nC(preview) is to apply target slot settings on source slot first.\nC(swap) is to complete swapping.\nC(reset) is to reset the swap.",
              "default": "preview",
              "required": false,
              "choices": [
                "preview",
                "swap",
                "reset"
              ],
              "suboptions": {}
            },
            "preserve_vnet": {
              "aliases": [],
              "description": "C(True) to preserve virtual network to the slot during swap. Otherwise C(False).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "target_slot": {
              "aliases": [],
              "description": "Name of target slot to swap. If set to None, then swap with production slot.",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "webapp_name": {
          "aliases": [],
          "description": "Web app name which this deployment slot belongs to.",
          "required": true,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage Azure Web App slot",
      "version_added": "0.1.2"
    },
    "examples": "\n  - name: Create a webapp slot\n    azure_rm_webappslot:\n      resource_group: myResourceGroup\n      webapp_name: myJavaWebApp\n      name: stage\n      configuration_source: myJavaWebApp\n      app_settings:\n        testkey: testvalue\n\n  - name: swap the slot with production slot\n    azure_rm_webappslot:\n      resource_group: myResourceGroup\n      webapp_name: myJavaWebApp\n      name: stage\n      swap:\n        action: swap\n\n  - name: stop the slot\n    azure_rm_webappslot:\n      resource_group: myResourceGroup\n      webapp_name: myJavaWebApp\n      name: stage\n      app_state: stopped\n\n  - name: udpate a webapp slot app settings\n    azure_rm_webappslot:\n      resource_group: myResourceGroup\n      webapp_name: myJavaWebApp\n      name: stage\n      app_settings:\n        testkey: testvalue2\n\n  - name: udpate a webapp slot frameworks\n    azure_rm_webappslot:\n      resource_group: myResourceGroup\n      webapp_name: myJavaWebApp\n      name: stage\n      frameworks:\n        - name: \"node\"\n          version: \"10.1\"\n"
  },
  "azure.azcollection.azure_rm_webappvnetconnection": {
    "doc": {
      "description": "Add, remove, or update the virtual network connection for a web app.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the web app.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Resource group of the web app.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "State of the virtual network connection. Use C(present) to create or update and C(absent) to delete.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "subnet": {
          "aliases": [],
          "description": "Name of the virtual network's subnet. Required if adding or updating.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "vnet_name": {
          "aliases": [],
          "description": "Name of the virtual network. Required if adding or updating.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "vnet_resource_group": {
          "aliases": [],
          "description": "Name of the resource group for the virtual network. Defaults to main C(resource_group) value.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage web app virtual network connection",
      "version_added": "1.8.0"
    },
    "examples": "\n    - name: Configure web app with virtual network\n      azure.azcollection.azure_rm_webappvnetconnection:\n        name: \"MyWebapp\"\n        resource_group: \"MyResourceGroup\"\n        vnet_name: \"MyVnetName\"\n        subnet: \"MySubnetName\"\n\n    - name: Configure web app with virtual network in different resource group\n      azure.azcollection.azure_rm_webappvnetconnection:\n        name: \"MyWebapp\"\n        resource_group: \"MyResourceGroup\"\n        vnet_name: \"MyVnetName\"\n        subnet: \"MySubnetName\"\n        vnet_resource_group: \"MyOtherResourceGroup\"\n\n    - name: Delete web app virtual network\n      azure.azcollection.azure_rm_webappvnetconnection:\n        name: \"MyWebapp\"\n        resource_group: \"MyResourceGroup\"\n        state: \"absent\"\n"
  },
  "azure.azcollection.azure_rm_webappvnetconnection_info": {
    "doc": {
      "description": "Get facts for a web app's virtual network connection.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the web app.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Resource group of the web app.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure web app virtual network connection facts",
      "version_added": "1.8.0"
    },
    "examples": "\n    - name: Get web app virtual network connection\n      azure_rm_webappvnetconnection_info:\n        name: \"MyWebapp\"\n        resource_group: \"MyResourceGroup\"\n"
  }
}