{
  "amazon.aws.aws_az_facts": {
    "doc": {
      "description": "Gather information about availability zones in AWS.\nThis module was called M(amazon.aws.aws_az_facts) before Ansible 2.9. The usage did not change.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filters": {
          "aliases": [],
          "description": "A dict of filters to apply.\nEach dict item consists of a filter key and a filter value.\nSee U(https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeAvailabilityZones.html) for possible filters.\nFilter names and values are case sensitive.\nYou can use underscores instead of dashes (-) in the filter keys.\nFilter keys with underscores will take precedence in case of conflict.",
          "default": "{}",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Gather information about availability zones in AWS.",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n- name: Gather information about all availability zones\n  amazon.aws.aws_az_info:\n\n- name: Gather information about a single availability zone\n  amazon.aws.aws_az_info:\n    filters:\n      zone-name: eu-west-1a\n"
  },
  "amazon.aws.aws_az_info": {
    "doc": {
      "description": "Gather information about availability zones in AWS.\nThis module was called M(amazon.aws.aws_az_facts) before Ansible 2.9. The usage did not change.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filters": {
          "aliases": [],
          "description": "A dict of filters to apply.\nEach dict item consists of a filter key and a filter value.\nSee U(https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeAvailabilityZones.html) for possible filters.\nFilter names and values are case sensitive.\nYou can use underscores instead of dashes (-) in the filter keys.\nFilter keys with underscores will take precedence in case of conflict.",
          "default": "{}",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Gather information about availability zones in AWS.",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n- name: Gather information about all availability zones\n  amazon.aws.aws_az_info:\n\n- name: Gather information about a single availability zone\n  amazon.aws.aws_az_info:\n    filters:\n      zone-name: eu-west-1a\n"
  },
  "amazon.aws.aws_caller_facts": {
    "doc": {
      "description": "This module returns information about the account and user / role from which the AWS access tokens originate.\nThe primary use of this is to get the account id for templating into ARNs or similar to avoid needing to specify this information in inventory.\nThis module was called M(amazon.aws.aws_caller_facts) before Ansible 2.9. The usage did not change.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Get information about the user and account being used to make AWS calls.",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n- name: Get the current caller identity information\n  amazon.aws.aws_caller_info:\n  register: caller_info\n"
  },
  "amazon.aws.aws_caller_info": {
    "doc": {
      "description": "This module returns information about the account and user / role from which the AWS access tokens originate.\nThe primary use of this is to get the account id for templating into ARNs or similar to avoid needing to specify this information in inventory.\nThis module was called M(amazon.aws.aws_caller_facts) before Ansible 2.9. The usage did not change.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Get information about the user and account being used to make AWS calls.",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n- name: Get the current caller identity information\n  amazon.aws.aws_caller_info:\n  register: caller_info\n"
  },
  "amazon.aws.aws_s3": {
    "doc": {
      "description": "This module allows the user to manage S3 buckets and the objects within them. Includes support for creating and deleting both objects and buckets, retrieving objects as files or strings, generating download links and copy of an object that is already stored in Amazon S3.",
      "has_action": true,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "bucket": {
          "aliases": [],
          "description": "Bucket name.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "content": {
          "aliases": [],
          "description": "The content to C(PUT) into an object.\nThe parameter value will be treated as a string and converted to UTF-8 before sending it to S3. To send binary data, use the I(content_base64) parameter instead.\nEither I(content), I(content_base64) or I(src) must be specified for a C(PUT) operation. Ignored otherwise.",
          "type": "str",
          "required": false,
          "version_added": "1.3.0",
          "suboptions": {}
        },
        "content_base64": {
          "aliases": [],
          "description": "The base64-encoded binary data to C(PUT) into an object.\nUse this if you need to put raw binary data, and don't forget to encode in base64.\nEither I(content), I(content_base64) or I(src) must be specified for a C(PUT) operation. Ignored otherwise.",
          "type": "str",
          "required": false,
          "version_added": "1.3.0",
          "suboptions": {}
        },
        "copy_src": {
          "aliases": [],
          "description": "The source details of the object to copy.\nRequired if I(mode) is C(copy).",
          "type": "dict",
          "required": false,
          "version_added": "2.0.0",
          "suboptions": {
            "bucket": {
              "aliases": [],
              "description": "The name of the source bucket.",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "object": {
              "aliases": [],
              "description": "key name of the source object.",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "version_id": {
              "aliases": [],
              "description": "version ID of the source object.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "dest": {
          "aliases": [],
          "description": "The destination file path when downloading an object/key with a C(GET) operation.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "dualstack": {
          "aliases": [],
          "description": "Enables Amazon S3 Dual-Stack Endpoints, allowing S3 communications using both IPv4 and IPv6.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "encrypt": {
          "aliases": [],
          "description": "When set for PUT/COPY mode, asks for server-side encryption.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "encryption_kms_key_id": {
          "aliases": [],
          "description": "KMS key id to use when encrypting objects using I(encrypting=aws:kms). Ignored if I(encryption) is not C(aws:kms).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "encryption_mode": {
          "aliases": [],
          "description": "What encryption mode to use if I(encrypt=true).",
          "default": "AES256",
          "type": "str",
          "required": false,
          "choices": [
            "AES256",
            "aws:kms"
          ],
          "suboptions": {}
        },
        "expiry": {
          "aliases": [
            "expiration"
          ],
          "description": "Time limit (in seconds) for the URL generated and returned by S3/Walrus when performing a I(mode=put) or I(mode=geturl) operation.",
          "default": "600",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "headers": {
          "aliases": [],
          "description": "Custom headers for C(PUT) operation, as a dictionary of C(key=value) and C(key=value,key=value).",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "ignore_nonexistent_bucket": {
          "aliases": [],
          "description": "Overrides initial bucket lookups in case bucket or iam policies are restrictive. Example: a user may have the C(GetObject) permission but no other permissions. In this case using the option mode: get will fail without specifying I(ignore_nonexistent_bucket=true).",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "marker": {
          "aliases": [],
          "description": "Specifies the key to start with when using list mode. Object keys are returned in alphabetical order, starting with key after the marker in order.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "max_keys": {
          "aliases": [],
          "description": "Max number of results to return in list mode, set this if you want to retrieve fewer than the default 1000 keys.",
          "default": "1000",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "metadata": {
          "aliases": [],
          "description": "Metadata for PUT/COPY operation, as a dictionary of C(key=value) and C(key=value,key=value).",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "mode": {
          "aliases": [],
          "description": "Switches the module behaviour between\nC(PUT): upload\nC(GET): download\nC(geturl): return download URL\nC(getstr): download object as string\nC(list): list keys\nC(create): create bucket\nC(delete): delete bucket\nC(delobj): delete object\nC(copy): copy object that is already stored in another bucket",
          "type": "str",
          "required": true,
          "choices": [
            "get",
            "put",
            "delete",
            "create",
            "geturl",
            "getstr",
            "delobj",
            "list",
            "copy"
          ],
          "suboptions": {}
        },
        "object": {
          "aliases": [],
          "description": "Keyname of the object inside the bucket. Can be used to create \"virtual directories\", see examples.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "overwrite": {
          "aliases": [
            "force"
          ],
          "description": "Force overwrite either locally on the filesystem or remotely with the object/key. Used with C(PUT) and C(GET) operations.\nMust be a Boolean, C(always), C(never) or C(different).\nC(true) is the same as C(always).\nC(false) is equal to C(never).\nWhen this is set to C(different) the MD5 sum of the local file is compared with the 'ETag' of the object/key in S3. The ETag may or may not be an MD5 digest of the object data. See the ETag response header here U(https://docs.aws.amazon.com/AmazonS3/latest/API/RESTCommonResponseHeaders.html).",
          "default": "always",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "permission": {
          "aliases": [],
          "description": "This option lets the user set the canned permissions on the object/bucket that are created. The permissions that can be set are C(private), C(public-read), C(public-read-write), C(authenticated-read) for a bucket or C(private), C(public-read), C(public-read-write), C(aws-exec-read), C(authenticated-read), C(bucket-owner-read), C(bucket-owner-full-control) for an object. Multiple permissions can be specified as a list; although only the first one will be used during the initial upload of the file",
          "default": "['private']",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "prefix": {
          "aliases": [],
          "description": "Limits the response to keys that begin with the specified prefix for list mode.",
          "default": "",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "purge_tags": {
          "aliases": [],
          "description": "Whether or not to remove tags assigned to the S3 object if not specified in the playbook.\nTo remove all tags set I(tags) to an empty dictionary in conjunction with this.",
          "default": "True",
          "type": "bool",
          "required": false,
          "version_added": "2.0.0",
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "retries": {
          "aliases": [
            "retry"
          ],
          "description": "On recoverable failure, how many times to retry before actually failing.",
          "default": "0",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "rgw": {
          "aliases": [],
          "description": "Enable Ceph RGW S3 support. This option requires an explicit url via I(s3_url).",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "s3_url": {
          "aliases": [
            "S3_URL"
          ],
          "description": "S3 URL endpoint for usage with Ceph, Eucalyptus and fakes3 etc. Otherwise assumes AWS.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "src": {
          "aliases": [],
          "description": "The source file path when performing a C(PUT) operation.\nEither I(content), I(content_base64) or I(src) must be specified for a C(PUT) operation. Ignored otherwise.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Tags dict to apply to the S3 object.",
          "type": "dict",
          "required": false,
          "version_added": "2.0.0",
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "version": {
          "aliases": [],
          "description": "Version ID of the object inside the bucket. Can be used to get a specific version of a file if versioning is enabled in the target bucket.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "manage objects in S3.",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Simple PUT operation\n  amazon.aws.aws_s3:\n    bucket: mybucket\n    object: /my/desired/key.txt\n    src: /usr/local/myfile.txt\n    mode: put\n\n- name: PUT operation from a rendered template\n  amazon.aws.aws_s3:\n    bucket: mybucket\n    object: /object.yaml\n    content: \"{{ lookup('template', 'templates/object.yaml.j2') }}\"\n    mode: put\n\n- name: Simple PUT operation in Ceph RGW S3\n  amazon.aws.aws_s3:\n    bucket: mybucket\n    object: /my/desired/key.txt\n    src: /usr/local/myfile.txt\n    mode: put\n    rgw: true\n    s3_url: \"http://localhost:8000\"\n\n- name: Simple GET operation\n  amazon.aws.aws_s3:\n    bucket: mybucket\n    object: /my/desired/key.txt\n    dest: /usr/local/myfile.txt\n    mode: get\n\n- name: Get a specific version of an object.\n  amazon.aws.aws_s3:\n    bucket: mybucket\n    object: /my/desired/key.txt\n    version: 48c9ee5131af7a716edc22df9772aa6f\n    dest: /usr/local/myfile.txt\n    mode: get\n\n- name: PUT/upload with metadata\n  amazon.aws.aws_s3:\n    bucket: mybucket\n    object: /my/desired/key.txt\n    src: /usr/local/myfile.txt\n    mode: put\n    metadata: 'Content-Encoding=gzip,Cache-Control=no-cache'\n\n- name: PUT/upload with custom headers\n  amazon.aws.aws_s3:\n    bucket: mybucket\n    object: /my/desired/key.txt\n    src: /usr/local/myfile.txt\n    mode: put\n    headers: 'x-amz-grant-full-control=emailAddress=owner@example.com'\n\n- name: List keys simple\n  amazon.aws.aws_s3:\n    bucket: mybucket\n    mode: list\n\n- name: List keys all options\n  amazon.aws.aws_s3:\n    bucket: mybucket\n    mode: list\n    prefix: /my/desired/\n    marker: /my/desired/0023.txt\n    max_keys: 472\n\n- name: Create an empty bucket\n  amazon.aws.aws_s3:\n    bucket: mybucket\n    mode: create\n    permission: public-read\n\n- name: Create a bucket with key as directory, in the EU region\n  amazon.aws.aws_s3:\n    bucket: mybucket\n    object: /my/directory/path\n    mode: create\n    region: eu-west-1\n\n- name: Delete a bucket and all contents\n  amazon.aws.aws_s3:\n    bucket: mybucket\n    mode: delete\n\n- name: GET an object but don't download if the file checksums match. New in 2.0\n  amazon.aws.aws_s3:\n    bucket: mybucket\n    object: /my/desired/key.txt\n    dest: /usr/local/myfile.txt\n    mode: get\n    overwrite: different\n\n- name: Delete an object from a bucket\n  amazon.aws.aws_s3:\n    bucket: mybucket\n    object: /my/desired/key.txt\n    mode: delobj\n\n- name: Copy an object already stored in another bucket\n  amazon.aws.aws_s3:\n    bucket: mybucket\n    object: /my/desired/key.txt\n    mode: copy\n    copy_src:\n        bucket: srcbucket\n        object: /source/key.txt\n"
  },
  "amazon.aws.cloudformation": {
    "doc": {
      "description": "Launches or updates an AWS CloudFormation stack and waits for it complete.",
      "has_action": false,
      "notes": "CloudFormation features change often, and this module tries to keep up. That means your botocore version should be fresh. The version listed in the requirements is the oldest version that works with the module as a whole. Some features may require recent versions, and we do not pinpoint a minimum version for each feature. Instead of relying on the minimum version, keep botocore up to date. AWS is always releasing features and fixing bugs.\nIf parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "backoff_delay": {
          "aliases": [],
          "description": "Number of seconds to wait for the next retry.",
          "default": "3",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "backoff_max_delay": {
          "aliases": [],
          "description": "Maximum amount of time to wait between retries.",
          "default": "30",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "backoff_retries": {
          "aliases": [],
          "description": "Number of times to retry operation.\nAWS API throttling mechanism fails CloudFormation module so we have to retry a couple of times.",
          "default": "10",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "capabilities": {
          "aliases": [],
          "description": "Specify capabilities that stack template contains.\nValid values are C(CAPABILITY_IAM), C(CAPABILITY_NAMED_IAM) and C(CAPABILITY_AUTO_EXPAND).",
          "default": "['CAPABILITY_IAM', 'CAPABILITY_NAMED_IAM']",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "changeset_name": {
          "aliases": [],
          "description": "Name given to the changeset when creating a changeset.\nOnly used when I(create_changeset=true).\nBy default a name prefixed with Ansible-STACKNAME is generated based on input parameters. See the AWS Change Sets docs for more information U(https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-changesets.html)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "create_changeset": {
          "aliases": [],
          "description": "If stack already exists create a changeset instead of directly applying changes.  See the AWS Change Sets docs U(https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-changesets.html).\nWARNING: if the stack does not exist, it will be created without changeset. If I(state=absent), the stack will be deleted immediately with no changeset.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "create_timeout": {
          "aliases": [],
          "description": "The amount of time (in minutes) that can pass before the stack status becomes CREATE_FAILED",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "disable_rollback": {
          "aliases": [],
          "description": "If a stacks fails to form, rollback will remove the stack.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "events_limit": {
          "aliases": [],
          "description": "Maximum number of CloudFormation events to fetch from a stack when creating or updating it.",
          "default": "200",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "notification_arns": {
          "aliases": [],
          "description": "A comma separated list of Simple Notification Service (SNS) topic ARNs to publish stack related events.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "on_create_failure": {
          "aliases": [],
          "description": "Action to take upon failure of stack creation. Incompatible with the I(disable_rollback) option.",
          "type": "str",
          "required": false,
          "choices": [
            "DO_NOTHING",
            "ROLLBACK",
            "DELETE"
          ],
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "role_arn": {
          "aliases": [],
          "description": "The role that AWS CloudFormation assumes to create the stack. See the AWS CloudFormation Service Role docs U(https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-servicerole.html)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "stack_name": {
          "aliases": [],
          "description": "Name of the CloudFormation stack.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "stack_policy": {
          "aliases": [],
          "description": "The path of the file containing the CloudFormation stack policy. A policy cannot be removed once placed, but it can be modified. for instance, allow all updates U(https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/protect-stack-resources.html#d0e9051)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "stack_policy_body": {
          "aliases": [],
          "description": "The CloudFormation stack policy in JSON. A policy cannot be removed once placed, but it can be modified. for instance, allow all updates U(https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/protect-stack-resources.html#d0e9051)",
          "type": "json",
          "required": false,
          "version_added": "1.5.0",
          "suboptions": {}
        },
        "stack_policy_on_update_body": {
          "aliases": [],
          "description": "the body of the cloudformation stack policy only applied during this update.",
          "type": "json",
          "required": false,
          "version_added": "1.5.0",
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "If I(state=present), stack will be created.\nIf I(state=present) and if stack exists and template has changed, it will be updated.\nIf I(state=absent), stack will be removed.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of tags to associate with stack and its resources during stack creation.\nCan be updated later, updating tags removes previous entries.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "template": {
          "aliases": [],
          "description": "The local path of the CloudFormation template.\nThis must be the full path to the file, relative to the working directory. If using roles this may look like C(roles/cloudformation/files/cloudformation-example.json).\nIf I(state=present) and the stack does not exist yet, either I(template), I(template_body) or I(template_url) must be specified (but only one of them).\nIf I(state=present), the stack does exist, and neither I(template), I(template_body) nor I(template_url) are specified, the previous template will be reused.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "template_body": {
          "aliases": [],
          "description": "Template body. Use this to pass in the actual body of the CloudFormation template.\nIf I(state=present) and the stack does not exist yet, either I(template), I(template_body) or I(template_url) must be specified (but only one of them).\nIf I(state=present), the stack does exist, and neither I(template), I(template_body) nor I(template_url) are specified, the previous template will be reused.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "template_format": {
          "aliases": [],
          "description": "This parameter is ignored since Ansible 2.3 and will be removed after 2022-06-01.\nTemplates are now passed raw to CloudFormation regardless of format.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "template_parameters": {
          "aliases": [],
          "description": "A list of hashes of all the template variables for the stack. The value can be a string or a dict.\nDict can be used to set additional template parameter attributes like UsePreviousValue (see example).",
          "default": "{}",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "template_url": {
          "aliases": [],
          "description": "Location of file containing the template body. The URL must point to a template (max size 307,200 bytes) located in an S3 bucket in the same region as the stack.\nIf I(state=present) and the stack does not exist yet, either I(template), I(template_body) or I(template_url) must be specified (but only one of them).\nIf I(state=present), the stack does exist, and neither I(template), I(template_body) nor I(template_url) are specified, the previous template will be reused.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "termination_protection": {
          "aliases": [],
          "description": "Enable or disable termination protection on the stack.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Create or delete an AWS CloudFormation stack",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: create a cloudformation stack\n  amazon.aws.cloudformation:\n    stack_name: \"ansible-cloudformation\"\n    state: \"present\"\n    region: \"us-east-1\"\n    disable_rollback: true\n    template: \"files/cloudformation-example.json\"\n    template_parameters:\n      KeyName: \"jmartin\"\n      DiskType: \"ephemeral\"\n      InstanceType: \"m1.small\"\n      ClusterSize: 3\n    tags:\n      Stack: \"ansible-cloudformation\"\n\n# Basic role example\n- name: create a stack, specify role that cloudformation assumes\n  amazon.aws.cloudformation:\n    stack_name: \"ansible-cloudformation\"\n    state: \"present\"\n    region: \"us-east-1\"\n    disable_rollback: true\n    template: \"roles/cloudformation/files/cloudformation-example.json\"\n    role_arn: 'arn:aws:iam::123456789012:role/cloudformation-iam-role'\n\n- name: delete a stack\n  amazon.aws.cloudformation:\n    stack_name: \"ansible-cloudformation-old\"\n    state: \"absent\"\n\n# Create a stack, pass in template from a URL, disable rollback if stack creation fails,\n# pass in some parameters to the template, provide tags for resources created\n- name: create a stack, pass in the template via an URL\n  amazon.aws.cloudformation:\n    stack_name: \"ansible-cloudformation\"\n    state: present\n    region: us-east-1\n    disable_rollback: true\n    template_url: https://s3.amazonaws.com/my-bucket/cloudformation.template\n    template_parameters:\n      KeyName: jmartin\n      DiskType: ephemeral\n      InstanceType: m1.small\n      ClusterSize: 3\n    tags:\n      Stack: ansible-cloudformation\n\n# Create a stack, passing in template body using lookup of Jinja2 template, disable rollback if stack creation fails,\n# pass in some parameters to the template, provide tags for resources created\n- name: create a stack, pass in the template body via lookup template\n  amazon.aws.cloudformation:\n    stack_name: \"ansible-cloudformation\"\n    state: present\n    region: us-east-1\n    disable_rollback: true\n    template_body: \"{{ lookup('template', 'cloudformation.j2') }}\"\n    template_parameters:\n      KeyName: jmartin\n      DiskType: ephemeral\n      InstanceType: m1.small\n      ClusterSize: 3\n    tags:\n      Stack: ansible-cloudformation\n\n# Pass a template parameter which uses CloudFormation's UsePreviousValue attribute\n# When use_previous_value is set to True, the given value will be ignored and\n# CloudFormation will use the value from a previously submitted template.\n# If use_previous_value is set to False (default) the given value is used.\n- amazon.aws.cloudformation:\n    stack_name: \"ansible-cloudformation\"\n    state: \"present\"\n    region: \"us-east-1\"\n    template: \"files/cloudformation-example.json\"\n    template_parameters:\n      DBSnapshotIdentifier:\n        use_previous_value: True\n        value: arn:aws:rds:es-east-1:000000000000:snapshot:rds:my-db-snapshot\n      DBName:\n        use_previous_value: True\n    tags:\n      Stack: \"ansible-cloudformation\"\n\n# Enable termination protection on a stack.\n# If the stack already exists, this will update its termination protection\n- name: enable termination protection during stack creation\n  amazon.aws.cloudformation:\n    stack_name: my_stack\n    state: present\n    template_url: https://s3.amazonaws.com/my-bucket/cloudformation.template\n    termination_protection: yes\n\n# Configure TimeoutInMinutes before the stack status becomes CREATE_FAILED\n# In this case, if disable_rollback is not set or is set to false, the stack will be rolled back.\n- name: enable termination protection during stack creation\n  amazon.aws.cloudformation:\n    stack_name: my_stack\n    state: present\n    template_url: https://s3.amazonaws.com/my-bucket/cloudformation.template\n    create_timeout: 5\n\n# Configure rollback behaviour on the unsuccessful creation of a stack allowing\n# CloudFormation to clean up, or do nothing in the event of an unsuccessful\n# deployment\n# In this case, if on_create_failure is set to \"DELETE\", it will clean up the stack if\n# it fails to create\n- name: create stack which will delete on creation failure\n  amazon.aws.cloudformation:\n    stack_name: my_stack\n    state: present\n    template_url: https://s3.amazonaws.com/my-bucket/cloudformation.template\n    on_create_failure: DELETE\n"
  },
  "amazon.aws.cloudformation_facts": {
    "doc": {
      "description": "Gets information about an AWS CloudFormation stack.\nThis module was called C(amazon.aws.cloudformation_facts) before Ansible 2.9, returning C(ansible_facts). Note that the M(amazon.aws.cloudformation_info) module no longer returns C(ansible_facts)!",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "all_facts": {
          "aliases": [],
          "description": "Get all stack information for the stack.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "stack_change_sets": {
          "aliases": [],
          "description": "Get stack change sets for the stack",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "stack_events": {
          "aliases": [],
          "description": "Get stack events for the stack.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "stack_name": {
          "aliases": [],
          "description": "The name or id of the CloudFormation stack. Gathers information on all stacks by default.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "stack_policy": {
          "aliases": [],
          "description": "Get stack policy for the stack.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "stack_resources": {
          "aliases": [],
          "description": "Get stack resources for the stack.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "stack_template": {
          "aliases": [],
          "description": "Get stack template body for the stack.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Obtain information about an AWS CloudFormation stack",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n- name: Get summary information about a stack\n  amazon.aws.cloudformation_info:\n    stack_name: my-cloudformation-stack\n  register: output\n\n- debug:\n    msg: \"{{ output['cloudformation']['my-cloudformation-stack'] }}\"\n\n# When the module is called as cloudformation_facts, return values are published\n# in ansible_facts['cloudformation'][<stack_name>] and can be used as follows.\n# Note that this is deprecated and will stop working in Ansible after 2021-12-01.\n\n- amazon.aws.cloudformation_facts:\n    stack_name: my-cloudformation-stack\n\n- debug:\n    msg: \"{{ ansible_facts['cloudformation']['my-cloudformation-stack'] }}\"\n\n# Get stack outputs, when you have the stack name available as a fact\n- set_fact:\n    stack_name: my-awesome-stack\n\n- amazon.aws.cloudformation_info:\n    stack_name: \"{{ stack_name }}\"\n  register: my_stack\n\n- debug:\n    msg: \"{{ my_stack.cloudformation[stack_name].stack_outputs }}\"\n\n# Get all stack information about a stack\n- amazon.aws.cloudformation_info:\n    stack_name: my-cloudformation-stack\n    all_facts: true\n\n# Get stack resource and stack policy information about a stack\n- amazon.aws.cloudformation_info:\n    stack_name: my-cloudformation-stack\n    stack_resources: true\n    stack_policy: true\n\n# Fail if the stack doesn't exist\n- name: try to get facts about a stack but fail if it doesn't exist\n  amazon.aws.cloudformation_info:\n    stack_name: nonexistent-stack\n    all_facts: yes\n  failed_when: cloudformation['nonexistent-stack'] is undefined\n"
  },
  "amazon.aws.cloudformation_info": {
    "doc": {
      "description": "Gets information about an AWS CloudFormation stack.\nThis module was called C(amazon.aws.cloudformation_facts) before Ansible 2.9, returning C(ansible_facts). Note that the M(amazon.aws.cloudformation_info) module no longer returns C(ansible_facts)!",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "all_facts": {
          "aliases": [],
          "description": "Get all stack information for the stack.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "stack_change_sets": {
          "aliases": [],
          "description": "Get stack change sets for the stack",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "stack_events": {
          "aliases": [],
          "description": "Get stack events for the stack.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "stack_name": {
          "aliases": [],
          "description": "The name or id of the CloudFormation stack. Gathers information on all stacks by default.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "stack_policy": {
          "aliases": [],
          "description": "Get stack policy for the stack.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "stack_resources": {
          "aliases": [],
          "description": "Get stack resources for the stack.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "stack_template": {
          "aliases": [],
          "description": "Get stack template body for the stack.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Obtain information about an AWS CloudFormation stack",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n- name: Get summary information about a stack\n  amazon.aws.cloudformation_info:\n    stack_name: my-cloudformation-stack\n  register: output\n\n- debug:\n    msg: \"{{ output['cloudformation']['my-cloudformation-stack'] }}\"\n\n# When the module is called as cloudformation_facts, return values are published\n# in ansible_facts['cloudformation'][<stack_name>] and can be used as follows.\n# Note that this is deprecated and will stop working in Ansible after 2021-12-01.\n\n- amazon.aws.cloudformation_facts:\n    stack_name: my-cloudformation-stack\n\n- debug:\n    msg: \"{{ ansible_facts['cloudformation']['my-cloudformation-stack'] }}\"\n\n# Get stack outputs, when you have the stack name available as a fact\n- set_fact:\n    stack_name: my-awesome-stack\n\n- amazon.aws.cloudformation_info:\n    stack_name: \"{{ stack_name }}\"\n  register: my_stack\n\n- debug:\n    msg: \"{{ my_stack.cloudformation[stack_name].stack_outputs }}\"\n\n# Get all stack information about a stack\n- amazon.aws.cloudformation_info:\n    stack_name: my-cloudformation-stack\n    all_facts: true\n\n# Get stack resource and stack policy information about a stack\n- amazon.aws.cloudformation_info:\n    stack_name: my-cloudformation-stack\n    stack_resources: true\n    stack_policy: true\n\n# Fail if the stack doesn't exist\n- name: try to get facts about a stack but fail if it doesn't exist\n  amazon.aws.cloudformation_info:\n    stack_name: nonexistent-stack\n    all_facts: yes\n  failed_when: cloudformation['nonexistent-stack'] is undefined\n"
  },
  "amazon.aws.ec2": {
    "doc": {
      "description": "Creates or terminates ec2 instances.\nNote: This module uses the older boto Python module to interact with the EC2 API. M(amazon.aws.ec2) will still receive bug fixes, but no new features. Consider using the M(amazon.aws.ec2_instance) module instead. If M(amazon.aws.ec2_instance) does not support a feature you need that is available in M(amazon.aws.ec2), please file a feature request.\n",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "assign_public_ip": {
          "aliases": [],
          "description": "When provisioning within vpc, assign a public IP address. Boto library must be 2.13.0+.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "count": {
          "aliases": [],
          "description": "Number of instances to launch.",
          "default": "1",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "count_tag": {
          "aliases": [],
          "description": "Used with I(exact_count) to determine how many nodes based on a specific tag criteria should be running. This can be expressed in multiple ways and is shown in the EXAMPLES section.  For instance, one can request 25 servers that are tagged with C(class=webserver). The specified tag must already exist or be passed in as the I(instance_tags) option.",
          "type": "raw",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ebs_optimized": {
          "aliases": [],
          "description": "Whether instance is using optimized EBS volumes, see U(https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSOptimized.html).",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "exact_count": {
          "aliases": [],
          "description": "An integer value which indicates how many instances that match the 'count_tag' parameter should be running. Instances are either created or terminated based on this value.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "group": {
          "aliases": [
            "groups"
          ],
          "description": "Security group (or list of groups) to use with the instance.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "group_id": {
          "aliases": [],
          "description": "Security group id (or list of ids) to use with the instance.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "id": {
          "aliases": [],
          "description": "Identifier for this instance or set of instances, so that the module will be idempotent with respect to EC2 instances.\nThis identifier is valid for at least 24 hours after the termination of the instance, and should not be reused for another call later on.\nFor details, see the description of client token at U(https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "image": {
          "aliases": [],
          "description": "I(ami) ID to use for the instance.\nRequired when I(state=present).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "instance_ids": {
          "aliases": [
            "instance_id"
          ],
          "description": "list of instance ids, currently used for states: absent, running, stopped",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "instance_initiated_shutdown_behavior": {
          "aliases": [],
          "description": "Set whether AWS will Stop or Terminate an instance on shutdown. This parameter is ignored when using instance-store. images (which require termination on shutdown).",
          "default": "stop",
          "type": "str",
          "required": false,
          "choices": [
            "stop",
            "terminate"
          ],
          "suboptions": {}
        },
        "instance_profile_name": {
          "aliases": [],
          "description": "Name of the IAM instance profile (i.e. what the EC2 console refers to as an \"IAM Role\") to use. Boto library must be 2.5.0+.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "instance_tags": {
          "aliases": [],
          "description": "A hash/dictionary of tags to add to the new instance or for instances to start/stop by tag.  For example C({\"key\":\"value\"}) or C({\"key\":\"value\",\"key2\":\"value2\"}).\n",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "instance_type": {
          "aliases": [
            "type"
          ],
          "description": "Instance type to use for the instance, see U(https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html).\nRequired when creating a new instance.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "kernel": {
          "aliases": [],
          "description": "Kernel eki to use for the instance.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "key_name": {
          "aliases": [
            "keypair"
          ],
          "description": "Key pair to use on the instance.\nThe SSH key must already exist in AWS in order to use this argument.\nKeys can be created / deleted using the M(amazon.aws.ec2_key) module.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "monitoring": {
          "aliases": [],
          "description": "Enable detailed monitoring (CloudWatch) for the instance.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "network_interfaces": {
          "aliases": [
            "network_interface"
          ],
          "description": "A list of existing network interfaces to attach to the instance at launch. When specifying existing network interfaces, none of the I(assign_public_ip), I(private_ip), I(vpc_subnet_id), I(group), or I(group_id) parameters may be used. (Those parameters are for creating a new network interface at launch.)",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "placement_group": {
          "aliases": [],
          "description": "Placement group for the instance when using EC2 Clustered Compute.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "private_ip": {
          "aliases": [],
          "description": "The private ip address to assign the instance (from the vpc subnet).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ramdisk": {
          "aliases": [],
          "description": "Ramdisk eri to use for the instance.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "source_dest_check": {
          "aliases": [],
          "description": "Enable or Disable the Source/Destination checks (for NAT instances and Virtual Routers). When initially creating an instance the EC2 API defaults this to C(True).",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "spot_launch_group": {
          "aliases": [],
          "description": "Launch group for spot requests, see U(https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/how-spot-instances-work.html#spot-launch-group).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "spot_price": {
          "aliases": [],
          "description": "Maximum spot price to bid. If not set, a regular on-demand instance is requested.\nA spot request is made with this maximum bid. When it is filled, the instance is started.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "spot_type": {
          "aliases": [],
          "description": "The type of spot request.\nAfter being interrupted a C(persistent) spot instance will be started once there is capacity to fill the request again.",
          "default": "one-time",
          "type": "str",
          "required": false,
          "choices": [
            "one-time",
            "persistent"
          ],
          "suboptions": {}
        },
        "spot_wait_timeout": {
          "aliases": [],
          "description": "How long to wait for the spot instance request to be fulfilled. Affects 'Request valid until' for setting spot request lifespan.",
          "default": "600",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Create, terminate, start, stop or restart instances.\nWhen I(state=absent), I(instance_ids) is required.\nWhen I(state=running), I(state=stopped) or I(state=restarted) then either I(instance_ids) or I(instance_tags) is required.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present",
            "restarted",
            "running",
            "stopped"
          ],
          "suboptions": {}
        },
        "tenancy": {
          "aliases": [],
          "description": "An instance with a tenancy of C(dedicated) runs on single-tenant hardware and can only be launched into a VPC.\nNote that to use dedicated tenancy you MUST specify a I(vpc_subnet_id) as well.\nDedicated tenancy is not available for EC2 \"micro\" instances.",
          "default": "default",
          "type": "str",
          "required": false,
          "choices": [
            "default",
            "dedicated"
          ],
          "suboptions": {}
        },
        "termination_protection": {
          "aliases": [],
          "description": "Enable or Disable the Termination Protection.\nDefaults to C(false).",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "user_data": {
          "aliases": [],
          "description": "Opaque blob of data which is made available to the EC2 instance.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "volumes": {
          "aliases": [],
          "description": "A list of hash/dictionaries of volumes to add to the new instance.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "delete_on_termination": {
              "aliases": [],
              "description": "Whether the volume should be automatically deleted when the instance is terminated.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "device_name": {
              "aliases": [],
              "description": "A name for the device (For example C(/dev/sda)).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "encrypted": {
              "aliases": [],
              "description": "Whether the volume should be encrypted using the 'aws/ebs' KMS CMK.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "ephemeral": {
              "aliases": [],
              "description": "Whether the volume should be ephemeral.\nData on ephemeral volumes is lost when the instance is stopped.\nMutually exclusive with the I(snapshot) parameter.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "iops": {
              "aliases": [],
              "description": "The number of IOPS per second to provision for the volume.\nRequired when I(volume_type=io1).",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "snapshot": {
              "aliases": [],
              "description": "The ID of an EBS snapshot to copy when creating the volume.\nMutually exclusive with the I(ephemeral) parameter.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "volume_size": {
              "aliases": [],
              "description": "The size of the volume (in GiB).",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "volume_type": {
              "aliases": [],
              "description": "The type of volume to create.\nSee U(https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html) for more information on the available volume types.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "vpc_subnet_id": {
          "aliases": [],
          "description": "The subnet ID in which to launch the instance (VPC).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "wait": {
          "aliases": [],
          "description": "Wait for the instance to reach its desired state before returning.\nDoes not wait for SSH, see the 'wait_for_connection' example for details.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "wait_timeout": {
          "aliases": [],
          "description": "How long before wait gives up, in seconds.",
          "default": "300",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "zone": {
          "aliases": [
            "aws_zone",
            "ec2_zone"
          ],
          "description": "AWS availability zone in which to launch the instance.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "boto",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0",
        "python >= 2.6",
        "python >= 3.6"
      ],
      "short_description": "create, terminate, start or stop an instance in ec2",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n# Basic provisioning example\n- amazon.aws.ec2:\n    key_name: mykey\n    instance_type: t2.micro\n    image: ami-123456\n    wait: yes\n    group: webserver\n    count: 3\n    vpc_subnet_id: subnet-29e63245\n    assign_public_ip: yes\n\n# Advanced example with tagging and CloudWatch\n- amazon.aws.ec2:\n    key_name: mykey\n    group: databases\n    instance_type: t2.micro\n    image: ami-123456\n    wait: yes\n    wait_timeout: 500\n    count: 5\n    instance_tags:\n       db: postgres\n    monitoring: yes\n    vpc_subnet_id: subnet-29e63245\n    assign_public_ip: yes\n\n# Single instance with additional IOPS volume from snapshot and volume delete on termination\n- amazon.aws.ec2:\n    key_name: mykey\n    group: webserver\n    instance_type: c3.medium\n    image: ami-123456\n    wait: yes\n    wait_timeout: 500\n    volumes:\n      - device_name: /dev/sdb\n        snapshot: snap-abcdef12\n        volume_type: io1\n        iops: 1000\n        volume_size: 100\n        delete_on_termination: true\n    monitoring: yes\n    vpc_subnet_id: subnet-29e63245\n    assign_public_ip: yes\n\n# Single instance with ssd gp2 root volume\n- amazon.aws.ec2:\n    key_name: mykey\n    group: webserver\n    instance_type: c3.medium\n    image: ami-123456\n    wait: yes\n    wait_timeout: 500\n    volumes:\n      - device_name: /dev/xvda\n        volume_type: gp2\n        volume_size: 8\n    vpc_subnet_id: subnet-29e63245\n    assign_public_ip: yes\n    count_tag:\n      Name: dbserver\n    exact_count: 1\n\n# Multiple groups example\n- amazon.aws.ec2:\n    key_name: mykey\n    group: ['databases', 'internal-services', 'sshable', 'and-so-forth']\n    instance_type: m1.large\n    image: ami-6e649707\n    wait: yes\n    wait_timeout: 500\n    count: 5\n    instance_tags:\n        db: postgres\n    monitoring: yes\n    vpc_subnet_id: subnet-29e63245\n    assign_public_ip: yes\n\n# Multiple instances with additional volume from snapshot\n- amazon.aws.ec2:\n    key_name: mykey\n    group: webserver\n    instance_type: m1.large\n    image: ami-6e649707\n    wait: yes\n    wait_timeout: 500\n    count: 5\n    volumes:\n    - device_name: /dev/sdb\n      snapshot: snap-abcdef12\n      volume_size: 10\n    monitoring: yes\n    vpc_subnet_id: subnet-29e63245\n    assign_public_ip: yes\n\n# Dedicated tenancy example\n- amazon.aws.ec2:\n    assign_public_ip: yes\n    group_id: sg-1dc53f72\n    key_name: mykey\n    image: ami-6e649707\n    instance_type: m1.small\n    tenancy: dedicated\n    vpc_subnet_id: subnet-29e63245\n    wait: yes\n\n# Spot instance example\n- amazon.aws.ec2:\n    spot_price: 0.24\n    spot_wait_timeout: 600\n    keypair: mykey\n    group_id: sg-1dc53f72\n    instance_type: m1.small\n    image: ami-6e649707\n    wait: yes\n    vpc_subnet_id: subnet-29e63245\n    assign_public_ip: yes\n    spot_launch_group: report_generators\n    instance_initiated_shutdown_behavior: terminate\n\n# Examples using pre-existing network interfaces\n- amazon.aws.ec2:\n    key_name: mykey\n    instance_type: t2.small\n    image: ami-f005ba11\n    network_interface: eni-deadbeef\n\n- amazon.aws.ec2:\n    key_name: mykey\n    instance_type: t2.small\n    image: ami-f005ba11\n    network_interfaces: ['eni-deadbeef', 'eni-5ca1ab1e']\n\n# Launch instances, runs some tasks\n# and then terminate them\n\n- name: Create a sandbox instance\n  hosts: localhost\n  gather_facts: False\n  vars:\n    keypair: my_keypair\n    instance_type: m1.small\n    security_group: my_securitygroup\n    image: my_ami_id\n    region: us-east-1\n  tasks:\n    - name: Launch instance\n      amazon.aws.ec2:\n         key_name: \"{{ keypair }}\"\n         group: \"{{ security_group }}\"\n         instance_type: \"{{ instance_type }}\"\n         image: \"{{ image }}\"\n         wait: true\n         region: \"{{ region }}\"\n         vpc_subnet_id: subnet-29e63245\n         assign_public_ip: yes\n      register: ec2\n\n    - name: Add new instance to host group\n      add_host:\n        hostname: \"{{ item.public_ip }}\"\n        groupname: launched\n      loop: \"{{ ec2.instances }}\"\n\n    - name: Wait for SSH to come up\n      delegate_to: \"{{ item.public_dns_name }}\"\n      wait_for_connection:\n        delay: 60\n        timeout: 320\n      loop: \"{{ ec2.instances }}\"\n\n- name: Configure instance(s)\n  hosts: launched\n  become: True\n  gather_facts: True\n  roles:\n    - my_awesome_role\n    - my_awesome_test\n\n- name: Terminate instances\n  hosts: localhost\n  tasks:\n    - name: Terminate instances that were previously launched\n      amazon.aws.ec2:\n        state: 'absent'\n        instance_ids: '{{ ec2.instance_ids }}'\n\n# Start a few existing instances, run some tasks\n# and stop the instances\n\n- name: Start sandbox instances\n  hosts: localhost\n  gather_facts: false\n  vars:\n    instance_ids:\n      - 'i-xxxxxx'\n      - 'i-xxxxxx'\n      - 'i-xxxxxx'\n    region: us-east-1\n  tasks:\n    - name: Start the sandbox instances\n      amazon.aws.ec2:\n        instance_ids: '{{ instance_ids }}'\n        region: '{{ region }}'\n        state: running\n        wait: True\n        vpc_subnet_id: subnet-29e63245\n        assign_public_ip: yes\n  roles:\n    - do_neat_stuff\n    - do_more_neat_stuff\n\n- name: Stop sandbox instances\n  hosts: localhost\n  gather_facts: false\n  vars:\n    instance_ids:\n      - 'i-xxxxxx'\n      - 'i-xxxxxx'\n      - 'i-xxxxxx'\n    region: us-east-1\n  tasks:\n    - name: Stop the sandbox instances\n      amazon.aws.ec2:\n        instance_ids: '{{ instance_ids }}'\n        region: '{{ region }}'\n        state: stopped\n        wait: True\n        vpc_subnet_id: subnet-29e63245\n        assign_public_ip: yes\n\n#\n# Start stopped instances specified by tag\n#\n- amazon.aws.ec2:\n    instance_tags:\n        Name: ExtraPower\n    state: running\n\n#\n# Restart instances specified by tag\n#\n- amazon.aws.ec2:\n    instance_tags:\n        Name: ExtraPower\n    state: restarted\n\n#\n# Enforce that 5 instances with a tag \"foo\" are running\n# (Highly recommended!)\n#\n\n- amazon.aws.ec2:\n    key_name: mykey\n    instance_type: c1.medium\n    image: ami-40603AD1\n    wait: yes\n    group: webserver\n    instance_tags:\n        foo: bar\n    exact_count: 5\n    count_tag: foo\n    vpc_subnet_id: subnet-29e63245\n    assign_public_ip: yes\n\n#\n# Enforce that 5 running instances named \"database\" with a \"dbtype\" of \"postgres\"\n#\n\n- amazon.aws.ec2:\n    key_name: mykey\n    instance_type: c1.medium\n    image: ami-40603AD1\n    wait: yes\n    group: webserver\n    instance_tags:\n        Name: database\n        dbtype: postgres\n    exact_count: 5\n    count_tag:\n        Name: database\n        dbtype: postgres\n    vpc_subnet_id: subnet-29e63245\n    assign_public_ip: yes\n\n#\n# count_tag complex argument examples\n#\n\n    # instances with tag foo\n- amazon.aws.ec2:\n    count_tag:\n        foo:\n\n    # instances with tag foo=bar\n- amazon.aws.ec2:\n    count_tag:\n        foo: bar\n\n    # instances with tags foo=bar & baz\n- amazon.aws.ec2:\n    count_tag:\n        foo: bar\n        baz:\n\n    # instances with tags foo & bar & baz=bang\n- amazon.aws.ec2:\n    count_tag:\n        - foo\n        - bar\n        - baz: bang\n\n"
  },
  "amazon.aws.ec2_ami": {
    "doc": {
      "description": "Registers or deregisters ec2 images.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "architecture": {
          "aliases": [],
          "description": "The target architecture of the image to register",
          "default": "x86_64",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "billing_products": {
          "aliases": [],
          "description": "A list of valid billing codes. To be used with valid accounts by aws marketplace vendors.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "delete_snapshot": {
          "aliases": [],
          "description": "Delete snapshots when deregistering the AMI.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "Human-readable string describing the contents and purpose of the AMI.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "device_mapping": {
          "aliases": [],
          "description": "List of device hashes/dictionaries with custom configurations (same block-device-mapping parameters).",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "delete_on_termination": {
              "aliases": [],
              "description": "Whether the device should be automatically deleted when the Instance is terminated.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "device_name": {
              "aliases": [
                "DeviceName"
              ],
              "description": "The device name. For example C(/dev/sda).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "encrypted": {
              "aliases": [],
              "description": "Whether the volume should be encrypted.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "iops": {
              "aliases": [],
              "description": "When using an C(io1) I(volume_type) this sets the number of IOPS provisioned for the volume",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "no_device": {
              "aliases": [
                "NoDevice"
              ],
              "description": "Suppresses the specified device included in the block device mapping of the AMI.\nAlias C(NoDevice) has been deprecated and will be removed after 2022-06-01.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "snapshot_id": {
              "aliases": [],
              "description": "The ID of the Snapshot.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "virtual_name": {
              "aliases": [
                "VirtualName"
              ],
              "description": "The virtual name for the device.\nSee the AWS documentation for more detail U(https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_BlockDeviceMapping.html).\nAlias C(VirtualName) has been deprecated and will be removed after 2022-06-01.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "volume_size": {
              "aliases": [
                "size"
              ],
              "description": "The size of the volume (in GiB)",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "volume_type": {
              "aliases": [],
              "description": "The volume type.  Defaults to C(gp2) when not set.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "enhanced_networking": {
          "aliases": [],
          "description": "A boolean representing whether enhanced networking with ENA is enabled or not.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "image_id": {
          "aliases": [],
          "description": "Image ID to be deregistered.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "image_location": {
          "aliases": [],
          "description": "The s3 location of an image to use for the AMI.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "instance_id": {
          "aliases": [],
          "description": "Instance ID to create the AMI from.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "kernel_id": {
          "aliases": [],
          "description": "The target kernel id of the image to register.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "launch_permissions": {
          "aliases": [],
          "description": "Users and groups that should be able to launch the AMI. Expects dictionary with a key of user_ids and/or group_names. user_ids should be a list of account ids. group_name should be a list of groups, \"all\" is the only acceptable value currently.\nYou must pass all desired launch permissions if you wish to modify existing launch permissions (passing just groups will remove all users)",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the new AMI.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "no_reboot": {
          "aliases": [],
          "description": "Flag indicating that the bundling process should not attempt to shutdown the instance before bundling. If this flag is True, the responsibility of maintaining file system integrity is left to the owner of the instance.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "purge_tags": {
          "aliases": [],
          "description": "Whether to remove existing tags that aren't passed in the C(tags) parameter",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ramdisk_id": {
          "aliases": [],
          "description": "The ID of the RAM disk.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "root_device_name": {
          "aliases": [],
          "description": "The root device name of the image to register.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "sriov_net_support": {
          "aliases": [],
          "description": "Set to simple to enable enhanced networking with the Intel 82599 Virtual Function interface for the AMI and any instances that you launch from the AMI.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Register or deregister an AMI.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "A dictionary of tags to add to the new image; '{\"key\":\"value\"}' and '{\"key\":\"value\",\"key\":\"value\"}'",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "virtualization_type": {
          "aliases": [],
          "description": "The virtualization type of the image to register.",
          "default": "hvm",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "wait": {
          "aliases": [],
          "description": "Wait for the AMI to be in state 'available' before returning.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "wait_timeout": {
          "aliases": [],
          "description": "How long before wait gives up, in seconds.",
          "default": "1200",
          "type": "int",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Create or destroy an image (AMI) in ec2",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n- name: Basic AMI Creation\n  amazon.aws.ec2_ami:\n    instance_id: i-xxxxxx\n    wait: yes\n    name: newtest\n    tags:\n      Name: newtest\n      Service: TestService\n\n- name: Basic AMI Creation, without waiting\n  amazon.aws.ec2_ami:\n    instance_id: i-xxxxxx\n    wait: no\n    name: newtest\n\n- name: AMI Registration from EBS Snapshot\n  amazon.aws.ec2_ami:\n    name: newtest\n    state: present\n    architecture: x86_64\n    virtualization_type: hvm\n    root_device_name: /dev/xvda\n    device_mapping:\n      - device_name: /dev/xvda\n        volume_size: 8\n        snapshot_id: snap-xxxxxxxx\n        delete_on_termination: true\n        volume_type: gp2\n\n- name: AMI Creation, with a custom root-device size and another EBS attached\n  amazon.aws.ec2_ami:\n    instance_id: i-xxxxxx\n    name: newtest\n    device_mapping:\n        - device_name: /dev/sda1\n          size: XXX\n          delete_on_termination: true\n          volume_type: gp2\n        - device_name: /dev/sdb\n          size: YYY\n          delete_on_termination: false\n          volume_type: gp2\n\n- name: AMI Creation, excluding a volume attached at /dev/sdb\n  amazon.aws.ec2_ami:\n    instance_id: i-xxxxxx\n    name: newtest\n    device_mapping:\n        - device_name: /dev/sda1\n          size: XXX\n          delete_on_termination: true\n          volume_type: gp2\n        - device_name: /dev/sdb\n          no_device: yes\n\n- name: Deregister/Delete AMI (keep associated snapshots)\n  amazon.aws.ec2_ami:\n    image_id: \"{{ instance.image_id }}\"\n    delete_snapshot: False\n    state: absent\n\n- name: Deregister AMI (delete associated snapshots too)\n  amazon.aws.ec2_ami:\n    image_id: \"{{ instance.image_id }}\"\n    delete_snapshot: True\n    state: absent\n\n- name: Update AMI Launch Permissions, making it public\n  amazon.aws.ec2_ami:\n    image_id: \"{{ instance.image_id }}\"\n    state: present\n    launch_permissions:\n      group_names: ['all']\n\n- name: Allow AMI to be launched by another account\n  amazon.aws.ec2_ami:\n    image_id: \"{{ instance.image_id }}\"\n    state: present\n    launch_permissions:\n      user_ids: ['123456789012']\n"
  },
  "amazon.aws.ec2_ami_facts": {
    "doc": {
      "description": "Gather information about ec2 AMIs\nThis module was called C(amazon.aws.ec2_ami_facts) before Ansible 2.9. The usage did not change.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "describe_image_attributes": {
          "aliases": [],
          "description": "Describe attributes (like launchPermission) of the images found.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "executable_users": {
          "aliases": [
            "executable_user"
          ],
          "description": "Filter images by users with explicit launch permissions. Valid options are an AWS account ID, self, or all (public AMIs).",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "filters": {
          "aliases": [],
          "description": "A dict of filters to apply. Each dict item consists of a filter key and a filter value.\nSee U(https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeImages.html) for possible filters.\nFilter names and values are case sensitive.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "image_ids": {
          "aliases": [
            "image_id"
          ],
          "description": "One or more image IDs.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "owners": {
          "aliases": [
            "owner"
          ],
          "description": "Filter the images by the owner. Valid options are an AWS account ID, self, or an AWS owner alias ( amazon | aws-marketplace | microsoft ).",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Gather information about ec2 AMIs",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n- name: gather information about an AMI using ami-id\n  amazon.aws.ec2_ami_info:\n    image_ids: ami-5b488823\n\n- name: gather information about all AMIs with tag key Name and value webapp\n  amazon.aws.ec2_ami_info:\n    filters:\n      \"tag:Name\": webapp\n\n- name: gather information about an AMI with 'AMI Name' equal to foobar\n  amazon.aws.ec2_ami_info:\n    filters:\n      name: foobar\n\n- name: gather information about Ubuntu 17.04 AMIs published by Canonical (099720109477)\n  amazon.aws.ec2_ami_info:\n    owners: 099720109477\n    filters:\n      name: \"ubuntu/images/ubuntu-zesty-17.04-*\"\n"
  },
  "amazon.aws.ec2_ami_info": {
    "doc": {
      "description": "Gather information about ec2 AMIs\nThis module was called C(amazon.aws.ec2_ami_facts) before Ansible 2.9. The usage did not change.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "describe_image_attributes": {
          "aliases": [],
          "description": "Describe attributes (like launchPermission) of the images found.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "executable_users": {
          "aliases": [
            "executable_user"
          ],
          "description": "Filter images by users with explicit launch permissions. Valid options are an AWS account ID, self, or all (public AMIs).",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "filters": {
          "aliases": [],
          "description": "A dict of filters to apply. Each dict item consists of a filter key and a filter value.\nSee U(https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeImages.html) for possible filters.\nFilter names and values are case sensitive.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "image_ids": {
          "aliases": [
            "image_id"
          ],
          "description": "One or more image IDs.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "owners": {
          "aliases": [
            "owner"
          ],
          "description": "Filter the images by the owner. Valid options are an AWS account ID, self, or an AWS owner alias ( amazon | aws-marketplace | microsoft ).",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Gather information about ec2 AMIs",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n- name: gather information about an AMI using ami-id\n  amazon.aws.ec2_ami_info:\n    image_ids: ami-5b488823\n\n- name: gather information about all AMIs with tag key Name and value webapp\n  amazon.aws.ec2_ami_info:\n    filters:\n      \"tag:Name\": webapp\n\n- name: gather information about an AMI with 'AMI Name' equal to foobar\n  amazon.aws.ec2_ami_info:\n    filters:\n      name: foobar\n\n- name: gather information about Ubuntu 17.04 AMIs published by Canonical (099720109477)\n  amazon.aws.ec2_ami_info:\n    owners: 099720109477\n    filters:\n      name: \"ubuntu/images/ubuntu-zesty-17.04-*\"\n"
  },
  "amazon.aws.ec2_eni": {
    "doc": {
      "description": "Create and optionally attach an Elastic Network Interface (ENI) to an instance. If an ENI ID or private_ip is provided, the existing ENI (if any) will be modified. The 'attached' parameter controls the attachment status of the network interface.",
      "has_action": false,
      "notes": "This module identifies and ENI based on either the I(eni_id), a combination of I(private_ip_address) and I(subnet_id), or a combination of I(instance_id) and I(device_id). Any of these options will let you specify a particular ENI.\nIf parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "allow_reassignment": {
          "aliases": [],
          "description": "Indicates whether to allow an IP address that is already assigned to another network interface or instance to be reassigned to the specified network interface.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "attached": {
          "aliases": [],
          "description": "Specifies if network interface should be attached or detached from instance. If omitted, attachment status won't change",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "delete_on_termination": {
          "aliases": [],
          "description": "Delete the interface when the instance it is attached to is terminated. You can only specify this flag when the interface is being modified, not on creation.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "Optional description of the ENI.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "device_index": {
          "aliases": [],
          "description": "The index of the device for the network interface attachment on the instance.",
          "default": "0",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "eni_id": {
          "aliases": [],
          "description": "The ID of the ENI (to modify).\nIf I(eni_id=None) and I(state=present), a new eni will be created.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "force_detach": {
          "aliases": [],
          "description": "Force detachment of the interface. This applies either when explicitly detaching the interface by setting I(instance_id=None) or when deleting an interface with I(state=absent).",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "instance_id": {
          "aliases": [],
          "description": "Instance ID that you wish to attach ENI to.\nSince version 2.2, use the I(attached) parameter to attach or detach an ENI. Prior to 2.2, to detach an ENI from an instance, use C(None).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name for the ENI. This will create a tag called \"Name\" with the value assigned here.\nThis can be used in conjunction with I(subnet_id) as another means of identifiying a network interface.\nAWS does not enforce unique Name tags, so duplicate names are possible if you configure it that way. If that is the case, you will need to provide other identifying information such as I(private_ip_address) or I(eni_id).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "private_ip_address": {
          "aliases": [],
          "description": "Private IP address.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "purge_secondary_private_ip_addresses": {
          "aliases": [],
          "description": "To be used with I(secondary_private_ip_addresses) to determine whether or not to remove any secondary IP addresses other than those specified.\nSet I(secondary_private_ip_addresses=[]) to purge all secondary addresses.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "purge_tags": {
          "aliases": [],
          "description": "Indicates whether to remove tags not specified in I(tags) or I(name). This means you have to specify all the desired tags on each task affecting a network interface.\nIf I(tags) is omitted or None this option is disregarded.",
          "default": "True",
          "type": "bool",
          "required": false,
          "version_added": "1.3.0",
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "secondary_private_ip_address_count": {
          "aliases": [],
          "description": "The number of secondary IP addresses to assign to the network interface. This option is mutually exclusive of I(secondary_private_ip_addresses)",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "secondary_private_ip_addresses": {
          "aliases": [],
          "description": "A list of IP addresses to assign as secondary IP addresses to the network interface. This option is mutually exclusive of I(secondary_private_ip_address_count)",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "security_groups": {
          "aliases": [],
          "description": "List of security groups associated with the interface. Only used when I(state=present).\nSince version 2.2, you can specify security groups by ID or by name or a combination of both. Prior to 2.2, you can specify only by ID.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "source_dest_check": {
          "aliases": [],
          "description": "By default, interfaces perform source/destination checks. NAT instances however need this check to be disabled. You can only specify this flag when the interface is being modified, not on creation.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Create or delete ENI.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "subnet_id": {
          "aliases": [],
          "description": "ID of subnet in which to create the ENI.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "A hash/dictionary of tags to add to the new ENI or to add/remove from an existing one. Please note that the name field sets the \"Name\" tag.\nTo clear all tags, set this option to an empty dictionary to use in conjunction with I(purge_tags). If you provide I(name), that tag will not be removed.\nTo prevent removing any tags set I(purge_tags) to false.",
          "type": "dict",
          "required": false,
          "version_added": "1.3.0",
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Create and optionally attach an Elastic Network Interface (ENI) to an instance",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n# Create an ENI. As no security group is defined, ENI will be created in default security group\n- amazon.aws.ec2_eni:\n    private_ip_address: 172.31.0.20\n    subnet_id: subnet-xxxxxxxx\n    state: present\n\n# Create an ENI and attach it to an instance\n- amazon.aws.ec2_eni:\n    instance_id: i-xxxxxxx\n    device_index: 1\n    private_ip_address: 172.31.0.20\n    subnet_id: subnet-xxxxxxxx\n    state: present\n\n# Create an ENI with two secondary addresses\n- amazon.aws.ec2_eni:\n    subnet_id: subnet-xxxxxxxx\n    state: present\n    secondary_private_ip_address_count: 2\n\n# Assign a secondary IP address to an existing ENI\n# This will purge any existing IPs\n- amazon.aws.ec2_eni:\n    subnet_id: subnet-xxxxxxxx\n    eni_id: eni-yyyyyyyy\n    state: present\n    secondary_private_ip_addresses:\n      - 172.16.1.1\n\n# Remove any secondary IP addresses from an existing ENI\n- amazon.aws.ec2_eni:\n    subnet_id: subnet-xxxxxxxx\n    eni_id: eni-yyyyyyyy\n    state: present\n    secondary_private_ip_address_count: 0\n\n# Destroy an ENI, detaching it from any instance if necessary\n- amazon.aws.ec2_eni:\n    eni_id: eni-xxxxxxx\n    force_detach: true\n    state: absent\n\n# Update an ENI\n- amazon.aws.ec2_eni:\n    eni_id: eni-xxxxxxx\n    description: \"My new description\"\n    state: present\n\n# Update an ENI using name and subnet_id\n- amazon.aws.ec2_eni:\n    name: eni-20\n    subnet_id: subnet-xxxxxxx\n    description: \"My new description\"\n    state: present\n\n# Update an ENI identifying it by private_ip_address and subnet_id\n- amazon.aws.ec2_eni:\n    subnet_id: subnet-xxxxxxx\n    private_ip_address: 172.16.1.1\n    description: \"My new description\"\n\n# Detach an ENI from an instance\n- amazon.aws.ec2_eni:\n    eni_id: eni-xxxxxxx\n    instance_id: None\n    state: present\n\n### Delete an interface on termination\n# First create the interface\n- amazon.aws.ec2_eni:\n    instance_id: i-xxxxxxx\n    device_index: 1\n    private_ip_address: 172.31.0.20\n    subnet_id: subnet-xxxxxxxx\n    state: present\n  register: eni\n\n# Modify the interface to enable the delete_on_terminaton flag\n- amazon.aws.ec2_eni:\n    eni_id: \"{{ eni.interface.id }}\"\n    delete_on_termination: true\n\n"
  },
  "amazon.aws.ec2_eni_facts": {
    "doc": {
      "description": "Gather information about ec2 ENI interfaces in AWS.\nThis module was called C(ec2_eni_facts) before Ansible 2.9. The usage did not change.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "eni_id": {
          "aliases": [],
          "description": "The ID of the ENI.\nThis option is mutually exclusive of I(filters).",
          "type": "str",
          "required": false,
          "version_added": "1.3.0",
          "suboptions": {}
        },
        "filters": {
          "aliases": [],
          "description": "A dict of filters to apply. Each dict item consists of a filter key and a filter value. See U(https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInterfaces.html) for possible filters.\nThis option is mutually exclusive of I(eni_id).",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Gather information about ec2 ENI interfaces in AWS",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n# Gather information about all ENIs\n- amazon.aws.ec2_eni_info:\n\n# Gather information about a particular ENI\n- amazon.aws.ec2_eni_info:\n    filters:\n      network-interface-id: eni-xxxxxxx\n\n"
  },
  "amazon.aws.ec2_eni_info": {
    "doc": {
      "description": "Gather information about ec2 ENI interfaces in AWS.\nThis module was called C(ec2_eni_facts) before Ansible 2.9. The usage did not change.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "eni_id": {
          "aliases": [],
          "description": "The ID of the ENI.\nThis option is mutually exclusive of I(filters).",
          "type": "str",
          "required": false,
          "version_added": "1.3.0",
          "suboptions": {}
        },
        "filters": {
          "aliases": [],
          "description": "A dict of filters to apply. Each dict item consists of a filter key and a filter value. See U(https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInterfaces.html) for possible filters.\nThis option is mutually exclusive of I(eni_id).",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Gather information about ec2 ENI interfaces in AWS",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n# Gather information about all ENIs\n- amazon.aws.ec2_eni_info:\n\n# Gather information about a particular ENI\n- amazon.aws.ec2_eni_info:\n    filters:\n      network-interface-id: eni-xxxxxxx\n\n"
  },
  "amazon.aws.ec2_group": {
    "doc": {
      "description": "Maintains ec2 security groups.",
      "has_action": false,
      "notes": "If a rule declares a group_name and that group doesn't exist, it will be automatically created. In that case, group_desc should be provided as well. The module will refuse to create a depended-on group without a description.\nPreview diff mode support is added in version 2.7.\nIf parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "Description of the security group. Required when C(state) is C(present).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "group_id": {
          "aliases": [],
          "description": "Id of group to delete (works only with absent).\nOne of and only one of I(name) or I(group_id) is required.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the security group.\nOne of and only one of I(name) or I(group_id) is required.\nRequired if I(state=present).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "purge_rules": {
          "aliases": [],
          "description": "Purge existing rules on security group that are not found in rules.",
          "default": "true",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "purge_rules_egress": {
          "aliases": [],
          "description": "Purge existing rules_egress on security group that are not found in rules_egress.",
          "default": "true",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "purge_tags": {
          "aliases": [],
          "description": "If yes, existing tags will be purged from the resource to match exactly what is defined by I(tags) parameter. If the I(tags) parameter is not set then tags will not be modified.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "rules": {
          "aliases": [],
          "description": "List of firewall inbound rules to enforce in this group (see example). If none are supplied, no inbound rules will be enabled. Rules list may include its own name in `group_name`. This allows idempotent loopback additions (e.g. allow group to access itself). Rule sources list support was added in version 2.4. This allows to define multiple sources per source type as well as multiple source types per rule. Prior to 2.4 an individual source is allowed. In version 2.5 support for rule descriptions was added.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "cidr_ip": {
              "aliases": [],
              "description": "The IPv4 CIDR range traffic is coming from.\nYou can specify only one of I(cidr_ip), I(cidr_ipv6), I(ip_prefix), I(group_id) and I(group_name).",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "cidr_ipv6": {
              "aliases": [],
              "description": "The IPv6 CIDR range traffic is coming from.\nYou can specify only one of I(cidr_ip), I(cidr_ipv6), I(ip_prefix), I(group_id) and I(group_name).",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "from_port": {
              "aliases": [],
              "description": "The start of the range of ports that traffic is coming from.\nA value can be between C(0) to C(65535).\nA value of C(-1) indicates all ports (only supported when I(proto=icmp)).",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "group_desc": {
              "aliases": [],
              "description": "If the I(group_name) is set and the Security Group doesn't exist a new Security Group will be created with I(group_desc) as the description.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "group_id": {
              "aliases": [],
              "description": "The ID of the Security Group that traffic is coming from.\nYou can specify only one of I(cidr_ip), I(cidr_ipv6), I(ip_prefix), I(group_id) and I(group_name).",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "group_name": {
              "aliases": [],
              "description": "Name of the Security Group that traffic is coming from.\nIf the Security Group doesn't exist a new Security Group will be created with I(group_desc) as the description.\nYou can specify only one of I(cidr_ip), I(cidr_ipv6), I(ip_prefix), I(group_id) and I(group_name).",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "ip_prefix": {
              "aliases": [],
              "description": "The IP Prefix U(https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-prefix-lists.html) that traffic is coming from.\nYou can specify only one of I(cidr_ip), I(cidr_ipv6), I(ip_prefix), I(group_id) and I(group_name).",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "proto": {
              "aliases": [],
              "description": "The IP protocol name (C(tcp), C(udp), C(icmp), C(icmpv6)) or number (U(https://en.wikipedia.org/wiki/List_of_IP_protocol_numbers))",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "rule_desc": {
              "aliases": [],
              "description": "A description for the rule.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "to_port": {
              "aliases": [],
              "description": "The end of the range of ports that traffic is coming from.\nA value can be between C(0) to C(65535).\nA value of C(-1) indicates all ports (only supported when I(proto=icmp)).",
              "type": "int",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "rules_egress": {
          "aliases": [],
          "description": "List of firewall outbound rules to enforce in this group (see example). If none are supplied, a default all-out rule is assumed. If an empty list is supplied, no outbound rules will be enabled. Rule Egress sources list support was added in version 2.4. In version 2.5 support for rule descriptions was added.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "cidr_ip": {
              "aliases": [],
              "description": "The IPv4 CIDR range traffic is going to.\nYou can specify only one of I(cidr_ip), I(cidr_ipv6), I(ip_prefix), I(group_id) and I(group_name).",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "cidr_ipv6": {
              "aliases": [],
              "description": "The IPv6 CIDR range traffic is going to.\nYou can specify only one of I(cidr_ip), I(cidr_ipv6), I(ip_prefix), I(group_id) and I(group_name).",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "from_port": {
              "aliases": [],
              "description": "The start of the range of ports that traffic is going to.\nA value can be between C(0) to C(65535).\nA value of C(-1) indicates all ports (only supported when I(proto=icmp)).",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "group_desc": {
              "aliases": [],
              "description": "If the I(group_name) is set and the Security Group doesn't exist a new Security Group will be created with I(group_desc) as the description.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "group_id": {
              "aliases": [],
              "description": "The ID of the Security Group that traffic is going to.\nYou can specify only one of I(cidr_ip), I(cidr_ipv6), I(ip_prefix), I(group_id) and I(group_name).",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "group_name": {
              "aliases": [],
              "description": "Name of the Security Group that traffic is going to.\nIf the Security Group doesn't exist a new Security Group will be created with I(group_desc) as the description.\nYou can specify only one of I(cidr_ip), I(cidr_ipv6), I(ip_prefix), I(group_id) and I(group_name).",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "ip_prefix": {
              "aliases": [],
              "description": "The IP Prefix U(https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-prefix-lists.html) that traffic is going to.\nYou can specify only one of I(cidr_ip), I(cidr_ipv6), I(ip_prefix), I(group_id) and I(group_name).",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "proto": {
              "aliases": [],
              "description": "The IP protocol name (C(tcp), C(udp), C(icmp), C(icmpv6)) or number (U(https://en.wikipedia.org/wiki/List_of_IP_protocol_numbers))",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "rule_desc": {
              "aliases": [],
              "description": "A description for the rule.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "to_port": {
              "aliases": [],
              "description": "The end of the range of ports that traffic is going to.\nA value can be between C(0) to C(65535).\nA value of C(-1) indicates all ports (only supported when I(proto=icmp)).",
              "type": "int",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Create or delete a security group.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "tags": {
          "aliases": [
            "resource_tags"
          ],
          "description": "A dictionary of one or more tags to assign to the security group.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "vpc_id": {
          "aliases": [],
          "description": "ID of the VPC to create the group in.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "maintain an ec2 VPC security group.",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: example using security group rule descriptions\n  amazon.aws.ec2_group:\n    name: \"{{ name }}\"\n    description: sg with rule descriptions\n    vpc_id: vpc-xxxxxxxx\n    profile: \"{{ aws_profile }}\"\n    region: us-east-1\n    rules:\n      - proto: tcp\n        ports:\n        - 80\n        cidr_ip: 0.0.0.0/0\n        rule_desc: allow all on port 80\n\n- name: example ec2 group\n  amazon.aws.ec2_group:\n    name: example\n    description: an example EC2 group\n    vpc_id: 12345\n    region: eu-west-1\n    aws_secret_key: SECRET\n    aws_access_key: ACCESS\n    rules:\n      - proto: tcp\n        from_port: 80\n        to_port: 80\n        cidr_ip: 0.0.0.0/0\n      - proto: tcp\n        from_port: 22\n        to_port: 22\n        cidr_ip: 10.0.0.0/8\n      - proto: tcp\n        from_port: 443\n        to_port: 443\n        # this should only be needed for EC2 Classic security group rules\n        # because in a VPC an ELB will use a user-account security group\n        group_id: amazon-elb/sg-87654321/amazon-elb-sg\n      - proto: tcp\n        from_port: 3306\n        to_port: 3306\n        group_id: 123412341234/sg-87654321/exact-name-of-sg\n      - proto: udp\n        from_port: 10050\n        to_port: 10050\n        cidr_ip: 10.0.0.0/8\n      - proto: udp\n        from_port: 10051\n        to_port: 10051\n        group_id: sg-12345678\n      - proto: icmp\n        from_port: 8 # icmp type, -1 = any type\n        to_port:  -1 # icmp subtype, -1 = any subtype\n        cidr_ip: 10.0.0.0/8\n      - proto: all\n        # the containing group name may be specified here\n        group_name: example\n      - proto: all\n        # in the 'proto' attribute, if you specify -1 (only supported when I(proto=icmp)), all, or a protocol number other than tcp, udp, icmp, or 58 (ICMPv6),\n        # traffic on all ports is allowed, regardless of any ports you specify\n        from_port: 10050 # this value is ignored\n        to_port: 10050 # this value is ignored\n        cidr_ip: 10.0.0.0/8\n\n    rules_egress:\n      - proto: tcp\n        from_port: 80\n        to_port: 80\n        cidr_ip: 0.0.0.0/0\n        cidr_ipv6: 64:ff9b::/96\n        group_name: example-other\n        # description to use if example-other needs to be created\n        group_desc: other example EC2 group\n\n- name: example2 ec2 group\n  amazon.aws.ec2_group:\n    name: example2\n    description: an example2 EC2 group\n    vpc_id: 12345\n    region: eu-west-1\n    rules:\n      # 'ports' rule keyword was introduced in version 2.4. It accepts a single port value or a list of values including ranges (from_port-to_port).\n      - proto: tcp\n        ports: 22\n        group_name: example-vpn\n      - proto: tcp\n        ports:\n          - 80\n          - 443\n          - 8080-8099\n        cidr_ip: 0.0.0.0/0\n      # Rule sources list support was added in version 2.4. This allows to define multiple sources per source type as well as multiple source types per rule.\n      - proto: tcp\n        ports:\n          - 6379\n          - 26379\n        group_name:\n          - example-vpn\n          - example-redis\n      - proto: tcp\n        ports: 5665\n        group_name: example-vpn\n        cidr_ip:\n          - 172.16.1.0/24\n          - 172.16.17.0/24\n        cidr_ipv6:\n          - 2607:F8B0::/32\n          - 64:ff9b::/96\n        group_id:\n          - sg-edcd9784\n  diff: True\n\n- name: \"Delete group by its id\"\n  amazon.aws.ec2_group:\n    region: eu-west-1\n    group_id: sg-33b4ee5b\n    state: absent\n"
  },
  "amazon.aws.ec2_group_facts": {
    "doc": {
      "description": "Gather information about ec2 security groups in AWS.\nThis module was called C(amazon.aws.ec2_group_facts) before Ansible 2.9. The usage did not change.",
      "has_action": false,
      "notes": "By default, the module will return all security groups. To limit results use the appropriate filters.\nIf parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filters": {
          "aliases": [],
          "description": "A dict of filters to apply. Each dict item consists of a filter key and a filter value. See U(https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSecurityGroups.html) for possible filters. Filter names and values are case sensitive. You can also use underscores (_) instead of dashes (-) in the filter keys, which will take precedence in case of conflict.",
          "default": "{}",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Gather information about ec2 security groups in AWS.",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n# Gather information about all security groups\n- amazon.aws.ec2_group_info:\n\n# Gather information about all security groups in a specific VPC\n- amazon.aws.ec2_group_info:\n    filters:\n      vpc-id: vpc-12345678\n\n# Gather information about all security groups in a specific VPC\n- amazon.aws.ec2_group_info:\n    filters:\n      vpc-id: vpc-12345678\n\n# Gather information about a security group\n- amazon.aws.ec2_group_info:\n    filters:\n      group-name: example-1\n\n# Gather information about a security group by id\n- amazon.aws.ec2_group_info:\n    filters:\n      group-id: sg-12345678\n\n# Gather information about a security group with multiple filters, also mixing the use of underscores as filter keys\n- amazon.aws.ec2_group_info:\n    filters:\n      group_id: sg-12345678\n      vpc-id: vpc-12345678\n\n# Gather information about various security groups\n- amazon.aws.ec2_group_info:\n    filters:\n      group-name:\n        - example-1\n        - example-2\n        - example-3\n\n# Gather information about any security group with a tag key Name and value Example.\n# The quotes around 'tag:name' are important because of the colon in the value\n- amazon.aws.ec2_group_info:\n    filters:\n      \"tag:Name\": Example\n"
  },
  "amazon.aws.ec2_group_info": {
    "doc": {
      "description": "Gather information about ec2 security groups in AWS.\nThis module was called C(amazon.aws.ec2_group_facts) before Ansible 2.9. The usage did not change.",
      "has_action": false,
      "notes": "By default, the module will return all security groups. To limit results use the appropriate filters.\nIf parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filters": {
          "aliases": [],
          "description": "A dict of filters to apply. Each dict item consists of a filter key and a filter value. See U(https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSecurityGroups.html) for possible filters. Filter names and values are case sensitive. You can also use underscores (_) instead of dashes (-) in the filter keys, which will take precedence in case of conflict.",
          "default": "{}",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Gather information about ec2 security groups in AWS.",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n# Gather information about all security groups\n- amazon.aws.ec2_group_info:\n\n# Gather information about all security groups in a specific VPC\n- amazon.aws.ec2_group_info:\n    filters:\n      vpc-id: vpc-12345678\n\n# Gather information about all security groups in a specific VPC\n- amazon.aws.ec2_group_info:\n    filters:\n      vpc-id: vpc-12345678\n\n# Gather information about a security group\n- amazon.aws.ec2_group_info:\n    filters:\n      group-name: example-1\n\n# Gather information about a security group by id\n- amazon.aws.ec2_group_info:\n    filters:\n      group-id: sg-12345678\n\n# Gather information about a security group with multiple filters, also mixing the use of underscores as filter keys\n- amazon.aws.ec2_group_info:\n    filters:\n      group_id: sg-12345678\n      vpc-id: vpc-12345678\n\n# Gather information about various security groups\n- amazon.aws.ec2_group_info:\n    filters:\n      group-name:\n        - example-1\n        - example-2\n        - example-3\n\n# Gather information about any security group with a tag key Name and value Example.\n# The quotes around 'tag:name' are important because of the colon in the value\n- amazon.aws.ec2_group_info:\n    filters:\n      \"tag:Name\": Example\n"
  },
  "amazon.aws.ec2_instance": {
    "doc": {
      "description": "Create and manage AWS EC2 instances.\nNote: This module does not support creating L(EC2 Spot instances,https://aws.amazon.com/ec2/spot/). The M(amazon.aws.ec2) module can create and manage spot instances.\n",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "availability_zone": {
          "aliases": [],
          "description": "Specify an availability zone to use the default subnet it. Useful if not specifying the I(vpc_subnet_id) parameter.\nIf no subnet, ENI, or availability zone is provided, the default subnet in the default VPC will be used in the first AZ (alphabetically sorted).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cpu_credit_specification": {
          "aliases": [],
          "description": "For T series instances, choose whether to allow increased charges to buy CPU credits if the default pool is depleted.\nChoose I(unlimited) to enable buying additional CPU credits.",
          "type": "str",
          "required": false,
          "choices": [
            "unlimited",
            "standard"
          ],
          "suboptions": {}
        },
        "cpu_options": {
          "aliases": [],
          "description": "Reduce the number of vCPU exposed to the instance.\nThose parameters can only be set at instance launch. The two suboptions threads_per_core and core_count are mandatory.\nSee U(https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-optimize-cpu.html) for combinations available.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "core_count": {
              "aliases": [],
              "description": "Set the number of core to enable.",
              "type": "int",
              "required": true,
              "suboptions": {}
            },
            "threads_per_core": {
              "aliases": [],
              "description": "Select the number of threads per core to enable. Disable or Enable Intel HT.",
              "type": "int",
              "required": true,
              "choices": [
                "1",
                "2"
              ],
              "suboptions": {}
            }
          }
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "detailed_monitoring": {
          "aliases": [],
          "description": "Whether to allow detailed cloudwatch metrics to be collected, enabling more detailed alerting.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ebs_optimized": {
          "aliases": [],
          "description": "Whether instance is should use optimized EBS volumes, see U(https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSOptimized.html).",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filters": {
          "aliases": [],
          "description": "A dict of filters to apply when deciding whether existing instances match and should be altered. Each dict item consists of a filter key and a filter value. See U(https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInstances.html). for possible filters. Filter names and values are case sensitive.\nBy default, instances are filtered for counting by their \"Name\" tag, base AMI, state (running, by default), and subnet ID. Any queryable filter can be used. Good candidates are specific tags, SSH keys, or security groups.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "image": {
          "aliases": [],
          "description": "An image to use for the instance. The M(amazon.aws.ec2_ami_info) module may be used to retrieve images. One of I(image) or I(image_id) are required when instance is not already present.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "id": {
              "aliases": [],
              "description": "The AMI ID.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "kernel": {
              "aliases": [],
              "description": "a string AKI to override the AMI kernel.",
              "required": false,
              "suboptions": {}
            },
            "ramdisk": {
              "aliases": [],
              "description": "Overrides the AMI's default ramdisk ID.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "image_id": {
          "aliases": [],
          "description": "I(ami) ID to use for the instance. One of I(image) or I(image_id) are required when instance is not already present.\nThis is an alias for I(image.id).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "instance_ids": {
          "aliases": [],
          "description": "If you specify one or more instance IDs, only instances that have the specified IDs are returned.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "instance_initiated_shutdown_behavior": {
          "aliases": [],
          "description": "Whether to stop or terminate an instance upon shutdown.",
          "type": "str",
          "required": false,
          "choices": [
            "stop",
            "terminate"
          ],
          "suboptions": {}
        },
        "instance_role": {
          "aliases": [],
          "description": "The ARN or name of an EC2-enabled instance role to be used. If a name is not provided in arn format then the ListInstanceProfiles permission must also be granted. U(https://docs.aws.amazon.com/IAM/latest/APIReference/API_ListInstanceProfiles.html) If no full ARN is provided, the role with a matching name will be used from the active AWS account.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "instance_type": {
          "aliases": [],
          "description": "Instance type to use for the instance, see U(https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html) Only required when instance is not already present.",
          "default": "t2.micro",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "key_name": {
          "aliases": [],
          "description": "Name of the SSH access key to assign to the instance - must exist in the region the instance is created.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "launch_template": {
          "aliases": [],
          "description": "The EC2 launch template to base instance configuration on.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "id": {
              "aliases": [],
              "description": "the ID of the launch template (optional if name is specified).",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "name": {
              "aliases": [],
              "description": "the pretty name of the launch template (optional if id is specified).",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "version": {
              "aliases": [],
              "description": "the specific version of the launch template to use. If unspecified, the template default is chosen.",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "metadata_options": {
          "aliases": [],
          "description": "Modify the metadata options for the instance.\nSee U(https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html) for more information.\nThe two suboptions I(http_endpoint) and I(http_tokens) are supported.",
          "type": "dict",
          "required": false,
          "version_added": "2.0.0",
          "suboptions": {
            "http_endpoint": {
              "aliases": [],
              "description": "Enables or disables the HTTP metadata endpoint on instances.\nIf specified a value of disabled, metadata of the instance will not be accessible.",
              "default": "enabled",
              "type": "str",
              "required": false,
              "choices": [
                "enabled",
                "disabled"
              ],
              "suboptions": {}
            },
            "http_tokens": {
              "aliases": [],
              "description": "Set the state of token usage for instance metadata requests.\nIf the state is optional (v1 and v2), instance metadata can be retrieved with or without a signed token header on request.\nIf the state is required (v2), a signed token header must be sent with any instance metadata retrieval requests.",
              "default": "optional",
              "type": "str",
              "required": false,
              "choices": [
                "optional",
                "required"
              ],
              "suboptions": {}
            }
          }
        },
        "name": {
          "aliases": [],
          "description": "The Name tag for the instance.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "network": {
          "aliases": [],
          "description": "Either a dictionary containing the key 'interfaces' corresponding to a list of network interface IDs or containing specifications for a single network interface.\nUse the M(amazon.aws.ec2_eni) module to create ENIs with special settings.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "assign_public_ip": {
              "aliases": [],
              "description": "when true assigns a public IP address to the interface",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "delete_on_termination": {
              "aliases": [],
              "description": "Delete the interface when the instance it is attached to is terminated.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "description": {
              "aliases": [],
              "description": "a description for the network interface",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "device_index": {
              "aliases": [],
              "description": "The index of the interface to modify",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "groups": {
              "aliases": [],
              "description": "a list of security group IDs to attach to the interface",
              "type": "list",
              "required": false,
              "suboptions": {}
            },
            "interfaces": {
              "aliases": [],
              "description": "a list of ENI IDs (strings) or a list of objects containing the key I(id).",
              "type": "list",
              "required": false,
              "suboptions": {}
            },
            "ipv6_addresses": {
              "aliases": [],
              "description": "a list of IPv6 addresses to assign to the network interface",
              "type": "list",
              "required": false,
              "suboptions": {}
            },
            "private_ip_address": {
              "aliases": [],
              "description": "an IPv4 address to assign to the interface",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "private_ip_addresses": {
              "aliases": [],
              "description": "a list of IPv4 addresses to assign to the network interface",
              "type": "list",
              "required": false,
              "suboptions": {}
            },
            "source_dest_check": {
              "aliases": [],
              "description": "controls whether source/destination checking is enabled on the interface",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "subnet_id": {
              "aliases": [],
              "description": "the subnet to connect the network interface to",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "placement_group": {
          "aliases": [],
          "description": "The placement group that needs to be assigned to the instance",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "purge_tags": {
          "aliases": [],
          "description": "Delete any tags not specified in the task that are on the instance. This means you have to specify all the desired tags on each task affecting an instance.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_group": {
          "aliases": [],
          "description": "A security group ID or name. Mutually exclusive with I(security_groups).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_groups": {
          "aliases": [],
          "description": "A list of security group IDs or names (strings). Mutually exclusive with I(security_group).",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Goal state for the instances.\nI(state=present): ensures instances exist, but does not guarantee any state (e.g. running). Newly-launched instances will be run by EC2.\nI(state=running): I(state=present) + ensures the instances are running\nI(state=started): I(state=running) + waits for EC2 status checks to report OK if I(wait=true)\nI(state=stopped): ensures an existing instance is stopped.\nI(state=rebooted): convenience alias for I(state=stopped) immediately followed by I(state=running)\nI(state=restarted): convenience alias for I(state=stopped) immediately followed by I(state=started)\nI(state=terminated): ensures an existing instance is terminated.\nI(state=absent): alias for I(state=terminated)",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "terminated",
            "running",
            "started",
            "stopped",
            "restarted",
            "rebooted",
            "absent"
          ],
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "A hash/dictionary of tags to add to the new instance or to add/remove from an existing one.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenancy": {
          "aliases": [],
          "description": "What type of tenancy to allow an instance to use. Default is shared tenancy. Dedicated tenancy will incur additional charges.",
          "type": "str",
          "required": false,
          "choices": [
            "dedicated",
            "default"
          ],
          "suboptions": {}
        },
        "termination_protection": {
          "aliases": [],
          "description": "Whether to enable termination protection. This module will not terminate an instance with termination protection active, it must be turned off first.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "tower_callback": {
          "aliases": [],
          "description": "Preconfigured user-data to enable an instance to perform a Tower callback (Linux only).\nMutually exclusive with I(user_data).\nFor Windows instances, to enable remote access via Ansible set I(tower_callback.windows) to true, and optionally set an admin password.\nIf using 'windows' and 'set_password', callback to Tower will not be performed but the instance will be ready to receive winrm connections from Ansible.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "host_config_key": {
              "aliases": [],
              "description": "Host configuration secret key generated by the Tower job template.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "job_template_id": {
              "aliases": [],
              "description": "Either the integer ID of the Tower Job Template, or the name (name supported only for Tower 3.2+).",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "tower_address": {
              "aliases": [],
              "description": "IP address or DNS name of Tower server. Must be accessible via this address from the VPC that this instance will be launched in.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "user_data": {
          "aliases": [],
          "description": "Opaque blob of data which is made available to the ec2 instance",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "volumes": {
          "aliases": [],
          "description": "A list of block device mappings, by default this will always use the AMI root device so the volumes option is primarily for adding more storage.\nA mapping contains the (optional) keys device_name, virtual_name, ebs.volume_type, ebs.volume_size, ebs.kms_key_id, ebs.iops, and ebs.delete_on_termination.\nSet ebs.throughput value requires botocore>=1.19.27.\nFor more information about each parameter, see U(https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_BlockDeviceMapping.html).",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {}
        },
        "vpc_subnet_id": {
          "aliases": [
            "subnet_id"
          ],
          "description": "The subnet ID in which to launch the instance (VPC) If none is provided, M(amazon.aws.ec2_instance) will chose the default zone of the default VPC.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "wait": {
          "aliases": [],
          "description": "Whether or not to wait for the desired state (use wait_timeout to customize this).",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "wait_timeout": {
          "aliases": [],
          "description": "How long to wait (in seconds) for the instance to finish booting/terminating.",
          "default": "600",
          "type": "int",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Create & manage EC2 instances",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n- name: Terminate every running instance in a region. Use with EXTREME caution.\n  amazon.aws.ec2_instance:\n    state: absent\n    filters:\n      instance-state-name: running\n\n- name: restart a particular instance by its ID\n  amazon.aws.ec2_instance:\n    state: restarted\n    instance_ids:\n      - i-12345678\n\n- name: start an instance with a public IP address\n  amazon.aws.ec2_instance:\n    name: \"public-compute-instance\"\n    key_name: \"prod-ssh-key\"\n    vpc_subnet_id: subnet-5ca1ab1e\n    instance_type: c5.large\n    security_group: default\n    network:\n      assign_public_ip: true\n    image_id: ami-123456\n    tags:\n      Environment: Testing\n\n- name: start an instance and Add EBS\n  amazon.aws.ec2_instance:\n    name: \"public-withebs-instance\"\n    vpc_subnet_id: subnet-5ca1ab1e\n    instance_type: t2.micro\n    key_name: \"prod-ssh-key\"\n    security_group: default\n    volumes:\n      - device_name: /dev/sda1\n        ebs:\n          volume_size: 16\n          delete_on_termination: true\n\n- name: start an instance with a cpu_options\n  amazon.aws.ec2_instance:\n    name: \"public-cpuoption-instance\"\n    vpc_subnet_id: subnet-5ca1ab1e\n    tags:\n      Environment: Testing\n    instance_type: c4.large\n    volumes:\n    - device_name: /dev/sda1\n      ebs:\n        delete_on_termination: true\n    cpu_options:\n        core_count: 1\n        threads_per_core: 1\n\n- name: start an instance and have it begin a Tower callback on boot\n  amazon.aws.ec2_instance:\n    name: \"tower-callback-test\"\n    key_name: \"prod-ssh-key\"\n    vpc_subnet_id: subnet-5ca1ab1e\n    security_group: default\n    tower_callback:\n      # IP or hostname of tower server\n      tower_address: 1.2.3.4\n      job_template_id: 876\n      host_config_key: '[secret config key goes here]'\n    network:\n      assign_public_ip: true\n    image_id: ami-123456\n    cpu_credit_specification: unlimited\n    tags:\n      SomeThing: \"A value\"\n\n- name: start an instance with ENI (An existing ENI ID is required)\n  amazon.aws.ec2_instance:\n    name: \"public-eni-instance\"\n    key_name: \"prod-ssh-key\"\n    vpc_subnet_id: subnet-5ca1ab1e\n    network:\n      interfaces:\n        - id: \"eni-12345\"\n    tags:\n      Env: \"eni_on\"\n    volumes:\n    - device_name: /dev/sda1\n      ebs:\n        delete_on_termination: true\n    instance_type: t2.micro\n    image_id: ami-123456\n\n- name: add second ENI interface\n  amazon.aws.ec2_instance:\n    name: \"public-eni-instance\"\n    network:\n      interfaces:\n        - id: \"eni-12345\"\n        - id: \"eni-67890\"\n    image_id: ami-123456\n    tags:\n      Env: \"eni_on\"\n    instance_type: t2.micro\n- name: start an instance with metadata options\n  amazon.aws.ec2_instance:\n    name: \"public-metadataoptions-instance\"\n    vpc_subnet_id: subnet-5calable\n    instance_type: t3.small\n    image_id: ami-123456\n    tags:\n      Environment: Testing\n    metadata_options:\n      http_endpoint: enabled\n      http_tokens: optional\n"
  },
  "amazon.aws.ec2_instance_facts": {
    "doc": {
      "description": "Gather information about ec2 instances in AWS\nThis module was called C(ec2_instance_facts) before Ansible 2.9. The usage did not change.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filters": {
          "aliases": [],
          "description": "A dict of filters to apply. Each dict item consists of a filter key and a filter value. See U(https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInstances.html) for possible filters. Filter names and values are case sensitive.",
          "default": "{}",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "instance_ids": {
          "aliases": [],
          "description": "If you specify one or more instance IDs, only instances that have the specified IDs are returned.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "minimum_uptime": {
          "aliases": [
            "uptime"
          ],
          "description": "Minimum running uptime in minutes of instances.  For example if I(uptime) is C(60) return all instances that have run more than 60 minutes.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Gather information about ec2 instances in AWS",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n- name: Gather information about all instances\n  amazon.aws.ec2_instance_info:\n\n- name: Gather information about all instances in AZ ap-southeast-2a\n  amazon.aws.ec2_instance_info:\n    filters:\n      availability-zone: ap-southeast-2a\n\n- name: Gather information about a particular instance using ID\n  amazon.aws.ec2_instance_info:\n    instance_ids:\n      - i-12345678\n\n- name: Gather information about any instance with a tag key Name and value Example\n  amazon.aws.ec2_instance_info:\n    filters:\n      \"tag:Name\": Example\n\n- name: Gather information about any instance in states \"shutting-down\", \"stopping\", \"stopped\"\n  amazon.aws.ec2_instance_info:\n    filters:\n      instance-state-name: [ \"shutting-down\", \"stopping\", \"stopped\" ]\n\n- name: Gather information about any instance with Name beginning with RHEL and an uptime of at least 60 minutes\n  amazon.aws.ec2_instance_info:\n    region: \"{{ ec2_region }}\"\n    uptime: 60\n    filters:\n      \"tag:Name\": \"RHEL-*\"\n      instance-state-name: [ \"running\"]\n  register: ec2_node_info\n\n"
  },
  "amazon.aws.ec2_instance_info": {
    "doc": {
      "description": "Gather information about ec2 instances in AWS\nThis module was called C(ec2_instance_facts) before Ansible 2.9. The usage did not change.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filters": {
          "aliases": [],
          "description": "A dict of filters to apply. Each dict item consists of a filter key and a filter value. See U(https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInstances.html) for possible filters. Filter names and values are case sensitive.",
          "default": "{}",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "instance_ids": {
          "aliases": [],
          "description": "If you specify one or more instance IDs, only instances that have the specified IDs are returned.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "minimum_uptime": {
          "aliases": [
            "uptime"
          ],
          "description": "Minimum running uptime in minutes of instances.  For example if I(uptime) is C(60) return all instances that have run more than 60 minutes.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Gather information about ec2 instances in AWS",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n- name: Gather information about all instances\n  amazon.aws.ec2_instance_info:\n\n- name: Gather information about all instances in AZ ap-southeast-2a\n  amazon.aws.ec2_instance_info:\n    filters:\n      availability-zone: ap-southeast-2a\n\n- name: Gather information about a particular instance using ID\n  amazon.aws.ec2_instance_info:\n    instance_ids:\n      - i-12345678\n\n- name: Gather information about any instance with a tag key Name and value Example\n  amazon.aws.ec2_instance_info:\n    filters:\n      \"tag:Name\": Example\n\n- name: Gather information about any instance in states \"shutting-down\", \"stopping\", \"stopped\"\n  amazon.aws.ec2_instance_info:\n    filters:\n      instance-state-name: [ \"shutting-down\", \"stopping\", \"stopped\" ]\n\n- name: Gather information about any instance with Name beginning with RHEL and an uptime of at least 60 minutes\n  amazon.aws.ec2_instance_info:\n    region: \"{{ ec2_region }}\"\n    uptime: 60\n    filters:\n      \"tag:Name\": \"RHEL-*\"\n      instance-state-name: [ \"running\"]\n  register: ec2_node_info\n\n"
  },
  "amazon.aws.ec2_key": {
    "doc": {
      "description": "create or delete an ec2 key pair.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "force": {
          "aliases": [],
          "description": "Force overwrite of already existing key pair if key has changed.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "key_material": {
          "aliases": [],
          "description": "Public key material.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the key pair.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "purge_tags": {
          "aliases": [],
          "description": "Delete any tags not specified in I(tags).",
          "default": "False",
          "type": "bool",
          "required": false,
          "version_added": "2.1.0",
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "create or delete keypair",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "A dictionary of tags to set on the key pair.",
          "type": "dict",
          "required": false,
          "version_added": "2.1.0",
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "wait": {
          "aliases": [],
          "description": "This option has no effect since version 2.5 and will be removed after 2022-06-01.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "wait_timeout": {
          "aliases": [],
          "description": "This option has no effect since version 2.5 and will be removed after 2022-06-01.",
          "type": "int",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "create or delete an ec2 key pair",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n- name: create a new ec2 key pair, returns generated private key\n  amazon.aws.ec2_key:\n    name: my_keypair\n\n- name: create key pair using provided key_material\n  amazon.aws.ec2_key:\n    name: my_keypair\n    key_material: 'ssh-rsa AAAAxyz...== me@example.com'\n\n- name: create key pair using key_material obtained using 'file' lookup plugin\n  amazon.aws.ec2_key:\n    name: my_keypair\n    key_material: \"{{ lookup('file', '/path/to/public_key/id_rsa.pub') }}\"\n\n# try creating a key pair with the name of an already existing keypair\n# but don't overwrite it even if the key is different (force=false)\n- name: try creating a key pair with name of an already existing keypair\n  amazon.aws.ec2_key:\n    name: my_existing_keypair\n    key_material: 'ssh-rsa AAAAxyz...== me@example.com'\n    force: false\n\n- name: remove key pair by name\n  amazon.aws.ec2_key:\n    name: my_keypair\n    state: absent\n"
  },
  "amazon.aws.ec2_metadata_facts": {
    "doc": {
      "description": "This module fetches data from the instance metadata endpoint in EC2 as per U(https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html).\nThe module must be called from within the EC2 instance itself.\nThe module is configured to utilize the session oriented Instance Metadata Service v2 (IMDSv2) U(https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/configuring-instance-metadata-service.html).\nIf the HttpEndpoint parameter U(https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyInstanceMetadataOptions.html#API_ModifyInstanceMetadataOptions_RequestParameters) is set to disabled for the EC2 instance, the module will return an error while retrieving a session token.",
      "has_action": false,
      "notes": "Parameters to filter on ec2_metadata_facts may be added later.",
      "short_description": "gathers facts (instance metadata) about remote hosts within EC2",
      "version_added": "1.0.0"
    },
    "examples": "\n# Gather EC2 metadata facts\n- amazon.aws.ec2_metadata_facts:\n\n- debug:\n    msg: \"This instance is a t1.micro\"\n  when: ansible_ec2_instance_type == \"t1.micro\"\n"
  },
  "amazon.aws.ec2_snapshot": {
    "doc": {
      "description": "Creates an EC2 snapshot from an existing EBS volume.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "Description to be applied to the snapshot.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "device_name": {
          "aliases": [],
          "description": "Device name of a mounted volume to be snapshotted.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "instance_id": {
          "aliases": [],
          "description": "Instance that has the required volume to snapshot mounted.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "last_snapshot_min_age": {
          "aliases": [],
          "description": "If the volume's most recent snapshot has started less than `last_snapshot_min_age' minutes ago, a new snapshot will not be created.",
          "default": "0",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "snapshot_id": {
          "aliases": [],
          "description": "Snapshot id to remove.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "snapshot_tags": {
          "aliases": [],
          "description": "A dictionary of tags to add to the snapshot.\nIf the volume has a C(Name) tag this will be automatically added to the snapshot.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether to add or create a snapshot.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "volume_id": {
          "aliases": [],
          "description": "Volume from which to take the snapshot.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "wait": {
          "aliases": [],
          "description": "Wait for the snapshot to be ready.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "wait_timeout": {
          "aliases": [],
          "description": "How long before wait gives up, in seconds.",
          "default": "600",
          "type": "int",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Creates a snapshot from an existing volume",
      "version_added": "1.0.0"
    },
    "examples": "\n# Simple snapshot of volume using volume_id\n- amazon.aws.ec2_snapshot:\n    volume_id: vol-abcdef12\n    description: snapshot of /data from DB123 taken 2013/11/28 12:18:32\n\n# Snapshot of volume mounted on device_name attached to instance_id\n- amazon.aws.ec2_snapshot:\n    instance_id: i-12345678\n    device_name: /dev/sdb1\n    description: snapshot of /data from DB123 taken 2013/11/28 12:18:32\n\n# Snapshot of volume with tagging\n- amazon.aws.ec2_snapshot:\n    instance_id: i-12345678\n    device_name: /dev/sdb1\n    snapshot_tags:\n        frequency: hourly\n        source: /data\n\n# Remove a snapshot\n- amazon.aws.ec2_snapshot:\n    snapshot_id: snap-abcd1234\n    state: absent\n\n# Create a snapshot only if the most recent one is older than 1 hour\n- amazon.aws.ec2_snapshot:\n    volume_id: vol-abcdef12\n    last_snapshot_min_age: 60\n"
  },
  "amazon.aws.ec2_snapshot_facts": {
    "doc": {
      "description": "Gather information about ec2 volume snapshots in AWS.\nThis module was called C(ec2_snapshot_facts) before Ansible 2.9. The usage did not change.",
      "has_action": false,
      "notes": "By default, the module will return all snapshots, including public ones. To limit results to snapshots owned by the account use the filter 'owner-id'.\nIf parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filters": {
          "aliases": [],
          "description": "A dict of filters to apply. Each dict item consists of a filter key and a filter value. See U(https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSnapshots.html) for possible filters. Filter names and values are case sensitive.",
          "default": "{}",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "max_results": {
          "aliases": [],
          "description": "The maximum number of snapshot results returned in paginated output.\nWhen used only a single page along with a C(next_token_id) response element will be returned.\nThe remaining results of the initial request can be seen by sending another request with the returned C(next_token_id) value.\nThis value can be between 5 and 1000; if I(next_token_id) is given a value larger than 1000, only 1000 results are returned.\nIf this parameter is not used, then DescribeSnapshots returns all results.\nThis parameter is mutually exclusive with I(snapshot_ids).",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "next_token_id": {
          "aliases": [],
          "description": "Contains the value returned from a previous paginated request where I(max_results) was used and the results exceeded the value of that parameter.\nPagination continues from the end of the previous results that returned the I(next_token_id) value.\nThis parameter is mutually exclusive with I(snapshot_ids)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "owner_ids": {
          "aliases": [],
          "description": "If you specify one or more snapshot owners, only snapshots from the specified owners and for which you have access are returned.",
          "default": "[]",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "restorable_by_user_ids": {
          "aliases": [],
          "description": "If you specify a list of restorable users, only snapshots with create snapshot permissions for those users are returned.",
          "default": "[]",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "snapshot_ids": {
          "aliases": [],
          "description": "If you specify one or more snapshot IDs, only snapshots that have the specified IDs are returned.",
          "default": "[]",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Gather information about ec2 volume snapshots in AWS",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n# Gather information about all snapshots, including public ones\n- amazon.aws.ec2_snapshot_info:\n\n# Gather information about all snapshots owned by the account 0123456789\n- amazon.aws.ec2_snapshot_info:\n    filters:\n      owner-id: 0123456789\n\n# Or alternatively...\n- amazon.aws.ec2_snapshot_info:\n    owner_ids:\n      - 0123456789\n\n# Gather information about a particular snapshot using ID\n- amazon.aws.ec2_snapshot_info:\n    filters:\n      snapshot-id: snap-00112233\n\n# Or alternatively...\n- amazon.aws.ec2_snapshot_info:\n    snapshot_ids:\n      - snap-00112233\n\n# Gather information about any snapshot with a tag key Name and value Example\n- amazon.aws.ec2_snapshot_info:\n    filters:\n      \"tag:Name\": Example\n\n# Gather information about any snapshot with an error status\n- amazon.aws.ec2_snapshot_info:\n    filters:\n      status: error\n\n"
  },
  "amazon.aws.ec2_snapshot_info": {
    "doc": {
      "description": "Gather information about ec2 volume snapshots in AWS.\nThis module was called C(ec2_snapshot_facts) before Ansible 2.9. The usage did not change.",
      "has_action": false,
      "notes": "By default, the module will return all snapshots, including public ones. To limit results to snapshots owned by the account use the filter 'owner-id'.\nIf parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filters": {
          "aliases": [],
          "description": "A dict of filters to apply. Each dict item consists of a filter key and a filter value. See U(https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSnapshots.html) for possible filters. Filter names and values are case sensitive.",
          "default": "{}",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "max_results": {
          "aliases": [],
          "description": "The maximum number of snapshot results returned in paginated output.\nWhen used only a single page along with a C(next_token_id) response element will be returned.\nThe remaining results of the initial request can be seen by sending another request with the returned C(next_token_id) value.\nThis value can be between 5 and 1000; if I(next_token_id) is given a value larger than 1000, only 1000 results are returned.\nIf this parameter is not used, then DescribeSnapshots returns all results.\nThis parameter is mutually exclusive with I(snapshot_ids).",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "next_token_id": {
          "aliases": [],
          "description": "Contains the value returned from a previous paginated request where I(max_results) was used and the results exceeded the value of that parameter.\nPagination continues from the end of the previous results that returned the I(next_token_id) value.\nThis parameter is mutually exclusive with I(snapshot_ids)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "owner_ids": {
          "aliases": [],
          "description": "If you specify one or more snapshot owners, only snapshots from the specified owners and for which you have access are returned.",
          "default": "[]",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "restorable_by_user_ids": {
          "aliases": [],
          "description": "If you specify a list of restorable users, only snapshots with create snapshot permissions for those users are returned.",
          "default": "[]",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "snapshot_ids": {
          "aliases": [],
          "description": "If you specify one or more snapshot IDs, only snapshots that have the specified IDs are returned.",
          "default": "[]",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Gather information about ec2 volume snapshots in AWS",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n# Gather information about all snapshots, including public ones\n- amazon.aws.ec2_snapshot_info:\n\n# Gather information about all snapshots owned by the account 0123456789\n- amazon.aws.ec2_snapshot_info:\n    filters:\n      owner-id: 0123456789\n\n# Or alternatively...\n- amazon.aws.ec2_snapshot_info:\n    owner_ids:\n      - 0123456789\n\n# Gather information about a particular snapshot using ID\n- amazon.aws.ec2_snapshot_info:\n    filters:\n      snapshot-id: snap-00112233\n\n# Or alternatively...\n- amazon.aws.ec2_snapshot_info:\n    snapshot_ids:\n      - snap-00112233\n\n# Gather information about any snapshot with a tag key Name and value Example\n- amazon.aws.ec2_snapshot_info:\n    filters:\n      \"tag:Name\": Example\n\n# Gather information about any snapshot with an error status\n- amazon.aws.ec2_snapshot_info:\n    filters:\n      status: error\n\n"
  },
  "amazon.aws.ec2_spot_instance": {
    "doc": {
      "description": "Creates or cancels spot instance requests.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "client_token": {
          "aliases": [],
          "description": "The idempotency token you provided when you launched the instance, if applicable.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "count": {
          "aliases": [],
          "description": "Number of instances to launch.",
          "default": "1",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "interruption": {
          "aliases": [],
          "description": "The behavior when a Spot Instance is interrupted.",
          "default": "terminate",
          "type": "str",
          "required": false,
          "choices": [
            "hibernate",
            "stop",
            "terminate"
          ],
          "suboptions": {}
        },
        "launch_group": {
          "aliases": [],
          "description": "Launch group for spot requests, see U(https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/how-spot-instances-work.html#spot-launch-group).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "launch_specification": {
          "aliases": [],
          "description": "The launch specification.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "block_device_mappings": {
              "aliases": [],
              "description": "A list of hash/dictionaries of volumes to add to the new instance.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "device_name": {
                  "aliases": [],
                  "description": "The device name (for example, /dev/sdh or xvdh ).",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "ebs": {
                  "aliases": [],
                  "description": "Parameters used to automatically set up EBS volumes when the instance is launched, see U(https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/ec2.html#EC2.Client.request_spot_instances)",
                  "type": "dict",
                  "required": false,
                  "suboptions": {}
                },
                "no_device": {
                  "aliases": [],
                  "description": "To omit the device from the block device mapping, specify an empty string.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "virtual_name": {
                  "aliases": [],
                  "description": "The virtual device name",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "ebs_optimized": {
              "aliases": [],
              "description": "Whether instance is using optimized EBS volumes, see U(https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSOptimized.html).",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "iam_instance_profile": {
              "aliases": [],
              "description": "The IAM instance profile.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "arn": {
                  "aliases": [],
                  "description": "The Amazon Resource Name (ARN) of the instance profile.\nOnly one of I(arn) or I(name) may be specified.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "name": {
                  "aliases": [],
                  "description": "The name of the instance profile.\nOnly one of I(arn) or I(name) may be specified.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "image_id": {
              "aliases": [],
              "description": "The ID of the AMI.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "instance_type": {
              "aliases": [],
              "description": "Instance type to use for the instance, see U(https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html).\nRequired when creating a new instance.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "kernel_id": {
              "aliases": [],
              "description": "The ID of the kernel.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "key_name": {
              "aliases": [],
              "description": "Key to use on the instance.\nThe SSH key must already exist in AWS in order to use this argument.\nKeys can be created / deleted using the M(amazon.aws.ec2_key) module.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "monitoring": {
              "aliases": [],
              "description": "Indicates whether basic or detailed monitoring is enabled for the instance.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "enabled": {
                  "aliases": [],
                  "description": "Indicates whether detailed monitoring is enabled. Otherwise, basic monitoring is enabled.",
                  "default": "False",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "network_interfaces": {
              "aliases": [],
              "description": "One or more network interfaces. If you specify a network interface, you must specify subnet IDs and security group IDs using the network interface.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "associate_carrier_ip_address": {
                  "aliases": [],
                  "description": "Indicates whether to assign a carrier IP address to the network interface.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "associate_public_ip_address": {
                  "aliases": [],
                  "description": "Indicates whether to assign a public IPv4 address to an instance you launch in a VPC.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "delete_on_termination": {
                  "aliases": [],
                  "description": "If set to true , the interface is deleted when the instance is terminated. You can specify true only if creating a new network interface when launching an instance.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "description": {
                  "aliases": [],
                  "description": "The description of the network interface. Applies only if creating a network interface when launching an instance.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "device_index": {
                  "aliases": [],
                  "description": "The position of the network interface in the attachment order. A primary network interface has a device index of 0.\nIf you specify a network interface when launching an instance, you must specify the device index.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "groups": {
                  "aliases": [],
                  "description": "The IDs of the security groups for the network interface. Applies only if creating a network interface when launching an instance.",
                  "type": "list",
                  "required": false,
                  "elements": "str",
                  "suboptions": {}
                },
                "interface_type": {
                  "aliases": [],
                  "description": "The type of network interface.",
                  "type": "str",
                  "required": false,
                  "choices": [
                    "interface",
                    "efa"
                  ],
                  "suboptions": {}
                },
                "ipv4_prefix_count": {
                  "aliases": [],
                  "description": "The number of IPv4 delegated prefixes to be automatically assigned to the network interface",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "ipv4_prefixes": {
                  "aliases": [],
                  "description": "One or more IPv4 delegated prefixes to be assigned to the network interface.",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {}
                },
                "ipv6_address_count": {
                  "aliases": [],
                  "description": "A number of IPv6 addresses to assign to the network interface",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "ipv6_addresses": {
                  "aliases": [],
                  "description": "One or more IPv6 addresses to assign to the network interface.",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "ipv6address": {
                      "aliases": [],
                      "description": "The IPv6 address.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "ipv6_prefix_count": {
                  "aliases": [],
                  "description": "The number of IPv6 delegated prefixes to be automatically assigned to the network interface",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "ipv6_prefixes": {
                  "aliases": [],
                  "description": "One or more IPv6 delegated prefixes to be assigned to the network interface",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {}
                },
                "network_card_index": {
                  "aliases": [],
                  "description": "The index of the network card.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "network_interface_id": {
                  "aliases": [],
                  "description": "The ID of the network interface.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "private_ip_address": {
                  "aliases": [],
                  "description": "The private IPv4 address of the network interface",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "private_ip_addresses": {
                  "aliases": [],
                  "description": "One or more private IPv4 addresses to assign to the network interface",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {}
                },
                "secondary_private_ip_address_count": {
                  "aliases": [],
                  "description": "The number of secondary private IPv4 addresses.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "subnet_id": {
                  "aliases": [],
                  "description": "The ID of the subnet associated with the network interface",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "placement": {
              "aliases": [],
              "description": "The placement information for the instance.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "availability_zone": {
                  "aliases": [],
                  "description": "The Availability Zone.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "group_name": {
                  "aliases": [],
                  "description": "The name of the placement group.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "tenancy": {
                  "aliases": [],
                  "description": "the tenancy of the host",
                  "default": "default",
                  "type": "str",
                  "required": false,
                  "choices": [
                    "default",
                    "dedicated",
                    "host"
                  ],
                  "suboptions": {}
                }
              }
            },
            "ramdisk_id": {
              "aliases": [],
              "description": "The ID of the RAM disk.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "security_group_ids": {
              "aliases": [],
              "description": "Security group id (or list of ids) to use with the instance.",
              "type": "list",
              "required": false,
              "elements": "str",
              "suboptions": {}
            },
            "security_groups": {
              "aliases": [],
              "description": "Security group name (or list of group names) to use with the instance.\nOnly supported with EC2 Classic. To launch in a VPC, use C(group_id)",
              "type": "list",
              "required": false,
              "elements": "str",
              "suboptions": {}
            },
            "subnet_id": {
              "aliases": [],
              "description": "The ID of the subnet in which to launch the instance.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "user_data": {
              "aliases": [],
              "description": "The base64-encoded user data for the instance. User data is limited to 16 KB.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "spot_instance_request_ids": {
          "aliases": [],
          "description": "List of strings with IDs of spot requests to be cancelled",
          "default": "[]",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "spot_price": {
          "aliases": [],
          "description": "Maximum spot price to bid. If not set, a regular on-demand instance is requested.\nA spot request is made with this maximum bid. When it is filled, the instance is started.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "spot_type": {
          "aliases": [],
          "description": "The type of spot request.\nAfter being interrupted a C(persistent) spot instance will be started once there is capacity to fill the request again.",
          "default": "one-time",
          "type": "str",
          "required": false,
          "choices": [
            "one-time",
            "persistent"
          ],
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the spot request should be created or removed.\nWhen I(state=present), I(launch_specification) is required.\nWhen I(state=absent), I(spot_instance_request_ids) is required.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "A dictionary of key-value pairs for tagging the Spot Instance request on creation.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "zone_group": {
          "aliases": [],
          "description": "Name for logical grouping of spot requests.\nAll spot instances in the request are launched in the same availability zone.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "request, stop, reboot or cancel spot instance",
      "version_added": "2.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n- name: Simple Spot Request Creation\n  amazon.aws.ec2_spot_instance:\n    launch_specification:\n      image_id: ami-123456789\n      key_name: my-keypair\n      instance_type: t2.medium\n\n- name: Spot Request Creation with more options\n  amazon.aws.ec2_spot_instance:\n    launch_specification:\n      image_id: ami-123456789\n      key_name: my-keypair\n      instance_type: t2.medium\n      subnet_id: subnet-12345678\n      block_device_mappings:\n        - device_name: /dev/sdb\n          ebs:\n            delete_on_termination: True\n            volume_type: gp3\n            volume_size: 5\n        - device_name: /dev/sdc\n          ebs:\n            delete_on_termination: True\n            volume_type: io2\n            volume_size: 30\n      network_interfaces:\n        - associate_public_ip_address: False\n          delete_on_termination: True\n          device_index: 0\n      placement:\n        availability_zone: us-west-2a\n      monitoring:\n        enabled: False\n    spot_price: 0.002\n    tags:\n      Environment: Testing\n\n- name: Spot Request Termination\n  amazon.aws.ec2_spot_instance:\n    spot_instance_request_ids: ['sir-12345678', 'sir-abcdefgh']\n    state: absent\n"
  },
  "amazon.aws.ec2_spot_instance_info": {
    "doc": {
      "description": "Describes the specified Spot Instance requests.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filters": {
          "aliases": [],
          "description": "A dict of filters to apply. Each dict item consists of a filter key and a filter value.\nFilter names and values are case sensitive.\nSee U(https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSpotInstanceRequests.html) for possible filters.",
          "default": "{}",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "spot_instance_request_ids": {
          "aliases": [],
          "description": "One or more Spot Instance request IDs.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Gather information about ec2 spot instance requests",
      "version_added": "2.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n- name: describe the Spot Instance requests based on request IDs\n  amazon.aws.ec2_spot_instance_info:\n    spot_instance_request_ids:\n      - sir-12345678\n\n- name: describe the Spot Instance requests and filter results based on instance type\n  amazon.aws.ec2_spot_instance_info:\n    spot_instance_request_ids:\n      - sir-12345678\n      - sir-13579246\n      - sir-87654321\n    filters:\n        launch.instance-type: t3.medium\n\n- name: describe the Spot requests filtered using multiple filters\n  amazon.aws.ec2_spot_instance_info:\n    filters:\n        state: active\n        launch.block-device-mapping.device-name: /dev/sdb\n\n"
  },
  "amazon.aws.ec2_tag": {
    "doc": {
      "description": "Creates, modifies and removes tags for any EC2 resource.\nResources are referenced by their resource id (for example, an instance being i-XXXXXXX, a VPC being vpc-XXXXXXX).\nThis module is designed to be used with complex args (tags), see the examples.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "purge_tags": {
          "aliases": [],
          "description": "Whether unspecified tags should be removed from the resource.\nNote that when combined with I(state=absent), specified tags with non-matching values are not purged.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource": {
          "aliases": [],
          "description": "The EC2 resource id.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the tags should be present or absent on the resource.\nThe use of I(state=list) to interrogate the tags of an instance has been deprecated and will be removed after 2022-06-01.  The 'list' functionality has been moved to a dedicated module M(amazon.aws.ec2_tag_info).",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent",
            "list"
          ],
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "A dictionary of tags to add or remove from the resource.\nIf the value provided for a key is not set and I(state=absent), the tag will be removed regardless of its current value.\nRequired when I(state=present) or I(state=absent).",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "create and remove tags on ec2 resources",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Ensure tags are present on a resource\n  amazon.aws.ec2_tag:\n    region: eu-west-1\n    resource: vol-XXXXXX\n    state: present\n    tags:\n      Name: ubervol\n      env: prod\n\n- name: Ensure all volumes are tagged\n  amazon.aws.ec2_tag:\n    region:  eu-west-1\n    resource: '{{ item.id }}'\n    state: present\n    tags:\n      Name: dbserver\n      Env: production\n  loop: '{{ ec2_vol.volumes }}'\n\n- name: Remove the Env tag\n  amazon.aws.ec2_tag:\n    region: eu-west-1\n    resource: i-xxxxxxxxxxxxxxxxx\n    tags:\n      Env:\n    state: absent\n\n- name: Remove the Env tag if it's currently 'development'\n  amazon.aws.ec2_tag:\n    region: eu-west-1\n    resource: i-xxxxxxxxxxxxxxxxx\n    tags:\n      Env: development\n    state: absent\n\n- name: Remove all tags except for Name from an instance\n  amazon.aws.ec2_tag:\n    region: eu-west-1\n    resource: i-xxxxxxxxxxxxxxxxx\n    tags:\n        Name: ''\n    state: absent\n    purge_tags: true\n"
  },
  "amazon.aws.ec2_tag_info": {
    "doc": {
      "description": "Lists tags for any EC2 resource.\nResources are referenced by their resource id (e.g. an instance being i-XXXXXXX, a vpc being vpc-XXXXXX).\nResource tags can be managed using the M(amazon.aws.ec2_tag) module.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource": {
          "aliases": [],
          "description": "The EC2 resource id (for example i-XXXXXX or vpc-XXXXXX).",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "list tags on ec2 resources",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Retrieve all tags on an instance\n  amazon.aws.ec2_tag_info:\n    region: eu-west-1\n    resource: i-xxxxxxxxxxxxxxxxx\n  register: instance_tags\n\n- name: Retrieve all tags on a VPC\n  amazon.aws.ec2_tag_info:\n    region: eu-west-1\n    resource: vpc-xxxxxxxxxxxxxxxxx\n  register: vpc_tags\n"
  },
  "amazon.aws.ec2_vol": {
    "doc": {
      "description": "Creates an EBS volume and optionally attaches it to an instance.\nIf both I(instance) and I(name) are given and the instance has a device at the device name, then no volume is created and no attachment is made.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "delete_on_termination": {
          "aliases": [],
          "description": "When set to C(true), the volume will be deleted upon instance termination.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "device_name": {
          "aliases": [],
          "description": "Device id to override device mapping. Assumes /dev/sdf for Linux/UNIX and /dev/xvdf for Windows.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "encrypted": {
          "aliases": [],
          "description": "Enable encryption at rest for this volume.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "id": {
          "aliases": [],
          "description": "Volume id if you wish to attach an existing volume (requires instance) or remove an existing volume",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "instance": {
          "aliases": [],
          "description": "Instance ID if you wish to attach the volume. Since 1.9 you can set to None to detach.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "iops": {
          "aliases": [],
          "description": "The provisioned IOPs you want to associate with this volume (integer).",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "kms_key_id": {
          "aliases": [],
          "description": "Specify the id of the KMS key to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "modify_volume": {
          "aliases": [],
          "description": "The volume won't be modified unless this key is C(true).",
          "default": "False",
          "type": "bool",
          "required": false,
          "version_added": "1.4.0",
          "suboptions": {}
        },
        "multi_attach": {
          "aliases": [],
          "description": "If set to C(yes), Multi-Attach will be enabled when creating the volume.\nWhen you create a new volume, Multi-Attach is disabled by default.\nThis parameter is supported with io1 and io2 volumes only.",
          "type": "bool",
          "required": false,
          "version_added": "2.0.0",
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Volume Name tag if you wish to attach an existing volume (requires instance)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "purge_tags": {
          "aliases": [],
          "description": "Whether to remove existing tags that aren't passed in the I(tags) parameter",
          "default": "False",
          "type": "bool",
          "required": false,
          "version_added": "1.5.0",
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "snapshot": {
          "aliases": [],
          "description": "Snapshot ID on which to base the volume.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether to ensure the volume is present or absent.\nThe use of I(state=list) to interrogate the volume has been deprecated and will be removed after 2022-06-01.  The 'list' functionality has been moved to a dedicated module M(amazon.aws.ec2_vol_info).",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present",
            "list"
          ],
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "tag:value pairs to add to the volume after creation.",
          "default": "{}",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "throughput": {
          "aliases": [],
          "description": "Volume throughput in MB/s.\nThis parameter is only valid for gp3 volumes.\nValid range is from 125 to 1000.\nRequires at least botocore version 1.19.27.",
          "type": "int",
          "required": false,
          "version_added": "1.4.0",
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "volume_size": {
          "aliases": [],
          "description": "Size of volume (in GiB) to create.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "volume_type": {
          "aliases": [],
          "description": "Type of EBS volume; standard (magnetic), gp2 (SSD), gp3 (SSD), io1 (Provisioned IOPS), io2 (Provisioned IOPS), st1 (Throughput Optimized HDD), sc1 (Cold HDD). \"Standard\" is the old EBS default and continues to remain the Ansible default for backwards compatibility.",
          "default": "standard",
          "type": "str",
          "required": false,
          "choices": [
            "standard",
            "gp2",
            "io1",
            "st1",
            "sc1",
            "gp3",
            "io2"
          ],
          "suboptions": {}
        },
        "zone": {
          "aliases": [
            "availability_zone",
            "aws_zone",
            "ec2_zone"
          ],
          "description": "Zone in which to create the volume, if unset uses the zone the instance is in (if set).",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Create and attach a volume, return volume id and device map",
      "version_added": "1.0.0"
    },
    "examples": "\n# Simple attachment action\n- amazon.aws.ec2_vol:\n    instance: XXXXXX\n    volume_size: 5\n    device_name: sdd\n    region: us-west-2\n\n# Example using custom iops params\n- amazon.aws.ec2_vol:\n    instance: XXXXXX\n    volume_size: 5\n    iops: 100\n    device_name: sdd\n    region: us-west-2\n\n# Example using snapshot id\n- amazon.aws.ec2_vol:\n    instance: XXXXXX\n    snapshot: \"{{ snapshot }}\"\n\n# Playbook example combined with instance launch\n- amazon.aws.ec2:\n    keypair: \"{{ keypair }}\"\n    image: \"{{ image }}\"\n    wait: yes\n    count: 3\n  register: ec2\n- amazon.aws.ec2_vol:\n    instance: \"{{ item.id }}\"\n    volume_size: 5\n  loop: \"{{ ec2.instances }}\"\n  register: ec2_vol\n\n# Example: Launch an instance and then add a volume if not already attached\n#   * Volume will be created with the given name if not already created.\n#   * Nothing will happen if the volume is already attached.\n\n- amazon.aws.ec2:\n    keypair: \"{{ keypair }}\"\n    image: \"{{ image }}\"\n    zone: YYYYYY\n    id: my_instance\n    wait: yes\n    count: 1\n  register: ec2\n\n- amazon.aws.ec2_vol:\n    instance: \"{{ item.id }}\"\n    name: my_existing_volume_Name_tag\n    device_name: /dev/xvdf\n  loop: \"{{ ec2.instances }}\"\n  register: ec2_vol\n\n# Remove a volume\n- amazon.aws.ec2_vol:\n    id: vol-XXXXXXXX\n    state: absent\n\n# Detach a volume (since 1.9)\n- amazon.aws.ec2_vol:\n    id: vol-XXXXXXXX\n    instance: None\n    region: us-west-2\n\n# List volumes for an instance\n- amazon.aws.ec2_vol:\n    instance: i-XXXXXX\n    state: list\n    region: us-west-2\n\n# Create new volume using SSD storage\n- amazon.aws.ec2_vol:\n    instance: XXXXXX\n    volume_size: 50\n    volume_type: gp2\n    device_name: /dev/xvdf\n\n# Create new volume with multi-attach enabled\n- amazon.aws.ec2_vol:\n    zone: XXXXXX\n    multi_attach: true\n    volume_size: 4\n    volume_type: io1\n    iops: 102\n\n# Attach an existing volume to instance. The volume will be deleted upon instance termination.\n- amazon.aws.ec2_vol:\n    instance: XXXXXX\n    id: XXXXXX\n    device_name: /dev/sdf\n    delete_on_termination: yes\n"
  },
  "amazon.aws.ec2_vol_facts": {
    "doc": {
      "description": "Gather information about ec2 volumes in AWS.\nThis module was called C(ec2_vol_facts) before Ansible 2.9. The usage did not change.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filters": {
          "aliases": [],
          "description": "A dict of filters to apply. Each dict item consists of a filter key and a filter value.\nSee U(https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVolumes.html) for possible filters.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Gather information about ec2 volumes in AWS",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n# Gather information about all volumes\n- amazon.aws.ec2_vol_info:\n\n# Gather information about a particular volume using volume ID\n- amazon.aws.ec2_vol_info:\n    filters:\n      volume-id: vol-00112233\n\n# Gather information about any volume with a tag key Name and value Example\n- amazon.aws.ec2_vol_info:\n    filters:\n      \"tag:Name\": Example\n\n# Gather information about any volume that is attached\n- amazon.aws.ec2_vol_info:\n    filters:\n      attachment.status: attached\n\n# Gather information about all volumes related to an EC2 Instance\n# register information to `volumes` variable\n# Replaces functionality of `amazon.aws.ec2_vol` - `state: list`\n- name: get volume(s) info from EC2 Instance\n  amazon.aws.ec2_vol_info:\n    filters:\n      attachment.instance-id: \"i-000111222333\"\n  register: volumes\n\n"
  },
  "amazon.aws.ec2_vol_info": {
    "doc": {
      "description": "Gather information about ec2 volumes in AWS.\nThis module was called C(ec2_vol_facts) before Ansible 2.9. The usage did not change.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filters": {
          "aliases": [],
          "description": "A dict of filters to apply. Each dict item consists of a filter key and a filter value.\nSee U(https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVolumes.html) for possible filters.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Gather information about ec2 volumes in AWS",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n# Gather information about all volumes\n- amazon.aws.ec2_vol_info:\n\n# Gather information about a particular volume using volume ID\n- amazon.aws.ec2_vol_info:\n    filters:\n      volume-id: vol-00112233\n\n# Gather information about any volume with a tag key Name and value Example\n- amazon.aws.ec2_vol_info:\n    filters:\n      \"tag:Name\": Example\n\n# Gather information about any volume that is attached\n- amazon.aws.ec2_vol_info:\n    filters:\n      attachment.status: attached\n\n# Gather information about all volumes related to an EC2 Instance\n# register information to `volumes` variable\n# Replaces functionality of `amazon.aws.ec2_vol` - `state: list`\n- name: get volume(s) info from EC2 Instance\n  amazon.aws.ec2_vol_info:\n    filters:\n      attachment.instance-id: \"i-000111222333\"\n  register: volumes\n\n"
  },
  "amazon.aws.ec2_vpc_dhcp_option": {
    "doc": {
      "description": "This module removes, or creates DHCP option sets, and can associate them to a VPC. Optionally, a new DHCP Options set can be created that converges a VPC's existing DHCP option set with values provided. When dhcp_options_id is provided, the module will 1. remove (with state='absent') 2. ensure tags are applied (if state='present' and tags are provided 3. attach it to a VPC (if state='present' and a vpc_id is provided. If any of the optional values are missing, they will either be treated as a no-op (i.e., inherit what already exists for the VPC) To remove existing options while inheriting, supply an empty value (e.g. set ntp_servers to [] if you want to remove them from the VPC's options) Most of the options should be self-explanatory.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "delete_old": {
          "aliases": [],
          "description": "Whether to delete the old VPC DHCP option set when associating a new one. This is primarily useful for debugging/development purposes when you want to quickly roll back to the old option set. Note that this setting will be ignored, and the old DHCP option set will be preserved, if it is in use by any other VPC. (Otherwise, AWS will return an error.)",
          "default": "yes",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "dhcp_options_id": {
          "aliases": [],
          "description": "The resource_id of an existing DHCP options set. If this is specified, then it will override other settings, except tags (which will be updated to match)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "dns_servers": {
          "aliases": [],
          "description": "A list of hosts to set the DNS servers for the VPC to. (Should be a list of IP addresses rather than host names.)",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "domain_name": {
          "aliases": [],
          "description": "The domain name to set in the DHCP option sets",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "inherit_existing": {
          "aliases": [],
          "description": "For any DHCP options not specified in these parameters, whether to inherit them from the options set already applied to vpc_id, or to reset them to be empty.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "netbios_name_servers": {
          "aliases": [],
          "description": "List of hosts to advertise as NetBIOS servers.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "netbios_node_type": {
          "aliases": [],
          "description": "NetBIOS node type to advertise in the DHCP options. The AWS recommendation is to use 2 (when using netbios name services) U(https://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_DHCP_Options.html)",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "ntp_servers": {
          "aliases": [],
          "description": "List of hosts to advertise as NTP servers for the VPC.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "purge_tags": {
          "aliases": [],
          "description": "Remove tags not listed in I(tags).",
          "default": "True",
          "type": "bool",
          "required": false,
          "version_added": "2.0.0",
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "create/assign or remove the DHCP options. If state is set to absent, then a DHCP options set matched either by id, or tags and options will be removed if possible.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "tags": {
          "aliases": [
            "resource_tags"
          ],
          "description": "Tags to be applied to a VPC options set if a new one is created, or if the resource_id is provided. (options must match)",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "vpc_id": {
          "aliases": [],
          "description": "VPC ID to associate with the requested DHCP option set. If no vpc id is provided, and no matching option set is found then a new DHCP option set is created.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Manages DHCP Options, and can ensure the DHCP options for the given VPC match what's requested",
      "version_added": "1.0.0"
    },
    "examples": "\n# Completely overrides the VPC DHCP options associated with VPC vpc-123456 and deletes any existing\n# DHCP option set that may have been attached to that VPC.\n- amazon.aws.ec2_vpc_dhcp_option:\n    domain_name: \"foo.example.com\"\n    region: us-east-1\n    dns_servers:\n        - 10.0.0.1\n        - 10.0.1.1\n    ntp_servers:\n        - 10.0.0.2\n        - 10.0.1.2\n    netbios_name_servers:\n        - 10.0.0.1\n        - 10.0.1.1\n    netbios_node_type: 2\n    vpc_id: vpc-123456\n    delete_old: True\n    inherit_existing: False\n\n\n# Ensure the DHCP option set for the VPC has 10.0.0.4 and 10.0.1.4 as the specified DNS servers, but\n# keep any other existing settings. Also, keep the old DHCP option set around.\n- amazon.aws.ec2_vpc_dhcp_option:\n    region: us-east-1\n    dns_servers:\n      - \"{{groups['dns-primary']}}\"\n      - \"{{groups['dns-secondary']}}\"\n    vpc_id: vpc-123456\n    inherit_existing: True\n    delete_old: False\n\n\n## Create a DHCP option set with 4.4.4.4 and 8.8.8.8 as the specified DNS servers, with tags\n## but do not assign to a VPC\n- amazon.aws.ec2_vpc_dhcp_option:\n    region: us-east-1\n    dns_servers:\n      - 4.4.4.4\n      - 8.8.8.8\n    tags:\n      Name: google servers\n      Environment: Test\n\n## Delete a DHCP options set that matches the tags and options specified\n- amazon.aws.ec2_vpc_dhcp_option:\n    region: us-east-1\n    dns_servers:\n      - 4.4.4.4\n      - 8.8.8.8\n    tags:\n      Name: google servers\n      Environment: Test\n    state: absent\n\n## Associate a DHCP options set with a VPC by ID\n- amazon.aws.ec2_vpc_dhcp_option:\n    region: us-east-1\n    dhcp_options_id: dopt-12345678\n    vpc_id: vpc-123456\n\n"
  },
  "amazon.aws.ec2_vpc_dhcp_option_facts": {
    "doc": {
      "description": "Gather information about dhcp options sets in AWS.\nThis module was called C(ec2_vpc_dhcp_option_facts) before Ansible 2.9. The usage did not change.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "dhcp_options_ids": {
          "aliases": [
            "DhcpOptionIds"
          ],
          "description": "Get details of specific DHCP Option IDs.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "dry_run": {
          "aliases": [
            "DryRun"
          ],
          "description": "Checks whether you have the required permissions to view the DHCP Options.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filters": {
          "aliases": [],
          "description": "A dict of filters to apply. Each dict item consists of a filter key and a filter value. See U(https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeDhcpOptions.html) for possible filters.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Gather information about dhcp options sets in AWS",
      "version_added": "1.0.0"
    },
    "examples": "\n# # Note: These examples do not set authentication details, see the AWS Guide for details.\n\n- name: Gather information about all DHCP Option sets for an account or profile\n  amazon.aws.ec2_vpc_dhcp_option_info:\n    region: ap-southeast-2\n    profile: production\n  register: dhcp_info\n\n- name: Gather information about a filtered list of DHCP Option sets\n  amazon.aws.ec2_vpc_dhcp_option_info:\n    region: ap-southeast-2\n    profile: production\n    filters:\n        \"tag:Name\": \"abc-123\"\n  register: dhcp_info\n\n- name: Gather information about a specific DHCP Option set by DhcpOptionId\n  amazon.aws.ec2_vpc_dhcp_option_info:\n    region: ap-southeast-2\n    profile: production\n    DhcpOptionsIds: dopt-123fece2\n  register: dhcp_info\n\n"
  },
  "amazon.aws.ec2_vpc_dhcp_option_info": {
    "doc": {
      "description": "Gather information about dhcp options sets in AWS.\nThis module was called C(ec2_vpc_dhcp_option_facts) before Ansible 2.9. The usage did not change.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "dhcp_options_ids": {
          "aliases": [
            "DhcpOptionIds"
          ],
          "description": "Get details of specific DHCP Option IDs.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "dry_run": {
          "aliases": [
            "DryRun"
          ],
          "description": "Checks whether you have the required permissions to view the DHCP Options.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filters": {
          "aliases": [],
          "description": "A dict of filters to apply. Each dict item consists of a filter key and a filter value. See U(https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeDhcpOptions.html) for possible filters.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Gather information about dhcp options sets in AWS",
      "version_added": "1.0.0"
    },
    "examples": "\n# # Note: These examples do not set authentication details, see the AWS Guide for details.\n\n- name: Gather information about all DHCP Option sets for an account or profile\n  amazon.aws.ec2_vpc_dhcp_option_info:\n    region: ap-southeast-2\n    profile: production\n  register: dhcp_info\n\n- name: Gather information about a filtered list of DHCP Option sets\n  amazon.aws.ec2_vpc_dhcp_option_info:\n    region: ap-southeast-2\n    profile: production\n    filters:\n        \"tag:Name\": \"abc-123\"\n  register: dhcp_info\n\n- name: Gather information about a specific DHCP Option set by DhcpOptionId\n  amazon.aws.ec2_vpc_dhcp_option_info:\n    region: ap-southeast-2\n    profile: production\n    DhcpOptionsIds: dopt-123fece2\n  register: dhcp_info\n\n"
  },
  "amazon.aws.ec2_vpc_endpoint": {
    "doc": {
      "description": "Creates AWS VPC endpoints.\nDeletes AWS VPC endpoints.\nThis module supports check mode.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "client_token": {
          "aliases": [],
          "description": "Optional client token to ensure idempotency",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "policy": {
          "aliases": [],
          "description": "A properly formatted json policy as string, see U(https://github.com/ansible/ansible/issues/7005#issuecomment-42894813). Cannot be used with I(policy_file).\nOption when creating an endpoint. If not provided AWS will utilise a default policy which provides full access to the service.",
          "type": "json",
          "required": false,
          "suboptions": {}
        },
        "policy_file": {
          "aliases": [
            "policy_path"
          ],
          "description": "The path to the properly json formatted policy file, see U(https://github.com/ansible/ansible/issues/7005#issuecomment-42894813) on how to use it properly. Cannot be used with I(policy).\nOption when creating an endpoint. If not provided AWS will utilise a default policy which provides full access to the service.\nThis option has been deprecated and will be removed after 2022-12-01 to maintain the existing functionality please use the I(policy) option and a file lookup.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "purge_tags": {
          "aliases": [],
          "description": "Delete any tags not specified in the task that are on the instance. This means you have to specify all the desired tags on each task affecting an instance.",
          "default": "False",
          "type": "bool",
          "required": false,
          "version_added": "1.5.0",
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "route_table_ids": {
          "aliases": [],
          "description": "List of one or more route table ids to attach to the endpoint. A route is added to the route table with the destination of the endpoint if provided.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service": {
          "aliases": [],
          "description": "An AWS supported vpc endpoint service. Use the M(amazon.aws.ec2_vpc_endpoint_info) module to describe the supported endpoint services.\nRequired when creating an endpoint.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "present to ensure resource is created.\nabsent to remove resource",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "A dict of tags to apply to the internet gateway.\nTo remove all tags set I(tags={}) and I(purge_tags=true).",
          "type": "dict",
          "required": false,
          "version_added": "1.5.0",
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "vpc_endpoint_id": {
          "aliases": [],
          "description": "One or more vpc endpoint ids to remove from the AWS account",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "vpc_endpoint_security_groups": {
          "aliases": [],
          "description": "The list of security groups to attach to the endpoint.\nRequires I(vpc_endpoint_type=GatewayLoadBalancer) or I(vpc_endpoint_type=Interface).",
          "type": "list",
          "required": false,
          "elements": "str",
          "version_added": "2.1.0",
          "suboptions": {}
        },
        "vpc_endpoint_subnets": {
          "aliases": [],
          "description": "The list of subnets to attach to the endpoint.\nRequires I(vpc_endpoint_type=GatewayLoadBalancer) or I(vpc_endpoint_type=Interface).",
          "type": "list",
          "required": false,
          "elements": "str",
          "version_added": "2.1.0",
          "suboptions": {}
        },
        "vpc_endpoint_type": {
          "aliases": [],
          "description": "The type of endpoint.",
          "default": "Gateway",
          "type": "str",
          "required": false,
          "choices": [
            "Interface",
            "Gateway",
            "GatewayLoadBalancer"
          ],
          "version_added": "1.5.0",
          "suboptions": {}
        },
        "vpc_id": {
          "aliases": [],
          "description": "Required when creating a VPC endpoint.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "wait": {
          "aliases": [],
          "description": "When specified, will wait for either available status for state present. Unfortunately this is ignored for delete actions due to a difference in behaviour from AWS.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "wait_timeout": {
          "aliases": [],
          "description": "Used in conjunction with wait. Number of seconds to wait for status. Unfortunately this is ignored for delete actions due to a difference in behaviour from AWS.",
          "default": "320",
          "type": "int",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Create and delete AWS VPC Endpoints.",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n- name: Create new vpc endpoint with a json template for policy\n  amazon.aws.ec2_vpc_endpoint:\n    state: present\n    region: ap-southeast-2\n    vpc_id: vpc-12345678\n    service: com.amazonaws.ap-southeast-2.s3\n    policy: \" {{ lookup( 'template', 'endpoint_policy.json.j2') }} \"\n    route_table_ids:\n      - rtb-12345678\n      - rtb-87654321\n  register: new_vpc_endpoint\n\n- name: Create new vpc endpoint with the default policy\n  amazon.aws.ec2_vpc_endpoint:\n    state: present\n    region: ap-southeast-2\n    vpc_id: vpc-12345678\n    service: com.amazonaws.ap-southeast-2.s3\n    route_table_ids:\n      - rtb-12345678\n      - rtb-87654321\n  register: new_vpc_endpoint\n\n- name: Create new vpc endpoint with json file\n  amazon.aws.ec2_vpc_endpoint:\n    state: present\n    region: ap-southeast-2\n    vpc_id: vpc-12345678\n    service: com.amazonaws.ap-southeast-2.s3\n    policy_file: \"{{ role_path }}/files/endpoint_policy.json\"\n    route_table_ids:\n      - rtb-12345678\n      - rtb-87654321\n  register: new_vpc_endpoint\n\n- name: Delete newly created vpc endpoint\n  amazon.aws.ec2_vpc_endpoint:\n    state: absent\n    vpc_endpoint_id: \"{{ new_vpc_endpoint.result['VpcEndpointId'] }}\"\n    region: ap-southeast-2\n"
  },
  "amazon.aws.ec2_vpc_endpoint_facts": {
    "doc": {
      "description": "Gets various details related to AWS VPC endpoints.\nThis module was called C(ec2_vpc_endpoint_facts) before Ansible 2.9. The usage did not change.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filters": {
          "aliases": [],
          "description": "A dict of filters to apply. Each dict item consists of a filter key and a filter value. See U(https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcEndpoints.html) for possible filters.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "query": {
          "aliases": [],
          "description": "Defaults to C(endpoints).\nSpecifies the query action to take.\nI(query=endpoints) returns information about AWS VPC endpoints.\nRetrieving information about services using I(query=services) has been deprecated in favour of the M(amazon.aws.ec2_vpc_endpoint_service_info) module.\nThe I(query) option has been deprecated and will be removed after 2022-12-01.",
          "type": "str",
          "required": false,
          "choices": [
            "services",
            "endpoints"
          ],
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "vpc_endpoint_ids": {
          "aliases": [],
          "description": "The IDs of specific endpoints to retrieve the details of.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Retrieves AWS VPC endpoints details using AWS methods.",
      "version_added": "1.0.0"
    },
    "examples": "\n# Simple example of listing all support AWS services for VPC endpoints\n- name: List supported AWS endpoint services\n  amazon.aws.ec2_vpc_endpoint_info:\n    query: services\n    region: ap-southeast-2\n  register: supported_endpoint_services\n\n- name: Get all endpoints in ap-southeast-2 region\n  amazon.aws.ec2_vpc_endpoint_info:\n    query: endpoints\n    region: ap-southeast-2\n  register: existing_endpoints\n\n- name: Get all endpoints with specific filters\n  amazon.aws.ec2_vpc_endpoint_info:\n    query: endpoints\n    region: ap-southeast-2\n    filters:\n      vpc-id:\n        - vpc-12345678\n        - vpc-87654321\n      vpc-endpoint-state:\n        - available\n        - pending\n  register: existing_endpoints\n\n- name: Get details on specific endpoint\n  amazon.aws.ec2_vpc_endpoint_info:\n    query: endpoints\n    region: ap-southeast-2\n    vpc_endpoint_ids:\n      - vpce-12345678\n  register: endpoint_details\n"
  },
  "amazon.aws.ec2_vpc_endpoint_info": {
    "doc": {
      "description": "Gets various details related to AWS VPC endpoints.\nThis module was called C(ec2_vpc_endpoint_facts) before Ansible 2.9. The usage did not change.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filters": {
          "aliases": [],
          "description": "A dict of filters to apply. Each dict item consists of a filter key and a filter value. See U(https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcEndpoints.html) for possible filters.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "query": {
          "aliases": [],
          "description": "Defaults to C(endpoints).\nSpecifies the query action to take.\nI(query=endpoints) returns information about AWS VPC endpoints.\nRetrieving information about services using I(query=services) has been deprecated in favour of the M(amazon.aws.ec2_vpc_endpoint_service_info) module.\nThe I(query) option has been deprecated and will be removed after 2022-12-01.",
          "type": "str",
          "required": false,
          "choices": [
            "services",
            "endpoints"
          ],
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "vpc_endpoint_ids": {
          "aliases": [],
          "description": "The IDs of specific endpoints to retrieve the details of.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Retrieves AWS VPC endpoints details using AWS methods.",
      "version_added": "1.0.0"
    },
    "examples": "\n# Simple example of listing all support AWS services for VPC endpoints\n- name: List supported AWS endpoint services\n  amazon.aws.ec2_vpc_endpoint_info:\n    query: services\n    region: ap-southeast-2\n  register: supported_endpoint_services\n\n- name: Get all endpoints in ap-southeast-2 region\n  amazon.aws.ec2_vpc_endpoint_info:\n    query: endpoints\n    region: ap-southeast-2\n  register: existing_endpoints\n\n- name: Get all endpoints with specific filters\n  amazon.aws.ec2_vpc_endpoint_info:\n    query: endpoints\n    region: ap-southeast-2\n    filters:\n      vpc-id:\n        - vpc-12345678\n        - vpc-87654321\n      vpc-endpoint-state:\n        - available\n        - pending\n  register: existing_endpoints\n\n- name: Get details on specific endpoint\n  amazon.aws.ec2_vpc_endpoint_info:\n    query: endpoints\n    region: ap-southeast-2\n    vpc_endpoint_ids:\n      - vpce-12345678\n  register: endpoint_details\n"
  },
  "amazon.aws.ec2_vpc_endpoint_service_info": {
    "doc": {
      "description": "Gets details related to AWS VPC Endpoint Services.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filters": {
          "aliases": [],
          "description": "A dict of filters to apply.\nEach dict item consists of a filter key and a filter value. See U(https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcEndpointServices.html) for possible filters.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_names": {
          "aliases": [],
          "description": "A list of service names which can be used to narrow the search results.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "retrieves AWS VPC endpoint service details",
      "version_added": "1.5.0"
    },
    "examples": "\n# Simple example of listing all supported AWS services for VPC endpoints\n- name: List supported AWS endpoint services\n  amazon.aws.ec2_vpc_endpoint_service_info:\n    region: ap-southeast-2\n  register: supported_endpoint_services\n"
  },
  "amazon.aws.ec2_vpc_igw": {
    "doc": {
      "description": "Manage an AWS VPC Internet gateway",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "purge_tags": {
          "aliases": [],
          "description": "Remove tags not listed in I(tags).",
          "default": "True",
          "type": "bool",
          "required": false,
          "version_added": "1.3.0",
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Create or terminate the IGW",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "tags": {
          "aliases": [
            "resource_tags"
          ],
          "description": "A dict of tags to apply to the internet gateway.\nTo remove all tags set I(tags={}) and I(purge_tags=true).",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "vpc_id": {
          "aliases": [],
          "description": "The VPC ID for the VPC in which to manage the Internet Gateway.",
          "type": "str",
          "required": true,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Manage an AWS VPC Internet gateway",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n# Ensure that the VPC has an Internet Gateway.\n# The Internet Gateway ID is can be accessed via {{igw.gateway_id}} for use in setting up NATs etc.\n- name: Create Internet gateway\n  amazon.aws.ec2_vpc_igw:\n    vpc_id: vpc-abcdefgh\n    state: present\n  register: igw\n\n- name: Create Internet gateway with tags\n  amazon.aws.ec2_vpc_igw:\n    vpc_id: vpc-abcdefgh\n    state: present\n    tags:\n        Tag1: tag1\n        Tag2: tag2\n  register: igw\n\n- name: Delete Internet gateway\n  amazon.aws.ec2_vpc_igw:\n    state: absent\n    vpc_id: vpc-abcdefgh\n  register: vpc_igw_delete\n"
  },
  "amazon.aws.ec2_vpc_igw_facts": {
    "doc": {
      "description": "Gather information about internet gateways in AWS.\nThis module was called C(ec2_vpc_igw_facts) before Ansible 2.9. The usage did not change.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "convert_tags": {
          "aliases": [],
          "description": "Convert tags from boto3 format (list of dictionaries) to the standard dictionary format.\nThis currently defaults to C(False).  The default will be changed to C(True) after 2022-06-22.",
          "type": "bool",
          "required": false,
          "version_added": "1.3.0",
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filters": {
          "aliases": [],
          "description": "A dict of filters to apply. Each dict item consists of a filter key and a filter value. See U(https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInternetGateways.html) for possible filters.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "internet_gateway_ids": {
          "aliases": [],
          "description": "Get details of specific Internet Gateway ID. Provide this value as a list.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Gather information about internet gateways in AWS",
      "version_added": "1.0.0"
    },
    "examples": "\n# # Note: These examples do not set authentication details, see the AWS Guide for details.\n\n- name: Gather information about all Internet Gateways for an account or profile\n  amazon.aws.ec2_vpc_igw_info:\n    region: ap-southeast-2\n    profile: production\n  register: igw_info\n\n- name: Gather information about a filtered list of Internet Gateways\n  amazon.aws.ec2_vpc_igw_info:\n    region: ap-southeast-2\n    profile: production\n    filters:\n        \"tag:Name\": \"igw-123\"\n  register: igw_info\n\n- name: Gather information about a specific internet gateway by InternetGatewayId\n  amazon.aws.ec2_vpc_igw_info:\n    region: ap-southeast-2\n    profile: production\n    internet_gateway_ids: igw-c1231234\n  register: igw_info\n"
  },
  "amazon.aws.ec2_vpc_igw_info": {
    "doc": {
      "description": "Gather information about internet gateways in AWS.\nThis module was called C(ec2_vpc_igw_facts) before Ansible 2.9. The usage did not change.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "convert_tags": {
          "aliases": [],
          "description": "Convert tags from boto3 format (list of dictionaries) to the standard dictionary format.\nThis currently defaults to C(False).  The default will be changed to C(True) after 2022-06-22.",
          "type": "bool",
          "required": false,
          "version_added": "1.3.0",
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filters": {
          "aliases": [],
          "description": "A dict of filters to apply. Each dict item consists of a filter key and a filter value. See U(https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInternetGateways.html) for possible filters.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "internet_gateway_ids": {
          "aliases": [],
          "description": "Get details of specific Internet Gateway ID. Provide this value as a list.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Gather information about internet gateways in AWS",
      "version_added": "1.0.0"
    },
    "examples": "\n# # Note: These examples do not set authentication details, see the AWS Guide for details.\n\n- name: Gather information about all Internet Gateways for an account or profile\n  amazon.aws.ec2_vpc_igw_info:\n    region: ap-southeast-2\n    profile: production\n  register: igw_info\n\n- name: Gather information about a filtered list of Internet Gateways\n  amazon.aws.ec2_vpc_igw_info:\n    region: ap-southeast-2\n    profile: production\n    filters:\n        \"tag:Name\": \"igw-123\"\n  register: igw_info\n\n- name: Gather information about a specific internet gateway by InternetGatewayId\n  amazon.aws.ec2_vpc_igw_info:\n    region: ap-southeast-2\n    profile: production\n    internet_gateway_ids: igw-c1231234\n  register: igw_info\n"
  },
  "amazon.aws.ec2_vpc_nat_gateway": {
    "doc": {
      "description": "Ensure the state of AWS VPC NAT Gateways based on their id, allocation and subnet ids.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "allocation_id": {
          "aliases": [],
          "description": "The id of the elastic IP allocation. If this is not passed and the eip_address is not passed. An EIP is generated for this NAT Gateway.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "client_token": {
          "aliases": [],
          "description": "Optional unique token to be used during create to ensure idempotency. When specifying this option, ensure you specify the eip_address parameter as well otherwise any subsequent runs will fail.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "eip_address": {
          "aliases": [],
          "description": "The elastic IP address of the EIP you want attached to this NAT Gateway. If this is not passed and the allocation_id is not passed, an EIP is generated for this NAT Gateway.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "if_exist_do_not_create": {
          "aliases": [],
          "description": "if a NAT Gateway exists already in the subnet_id, then do not create a new one.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "nat_gateway_id": {
          "aliases": [],
          "description": "The id AWS dynamically allocates to the NAT Gateway on creation. This is required when the absent option is present.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "purge_tags": {
          "aliases": [],
          "description": "Remove tags not listed in I(tags).",
          "default": "True",
          "type": "bool",
          "required": false,
          "version_added": "1.4.0",
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "release_eip": {
          "aliases": [],
          "description": "Deallocate the EIP from the VPC.\nOption is only valid with the absent state.\nYou should use this with the wait option. Since you can not release an address while a delete operation is happening.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Ensure NAT Gateway is present or absent.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "subnet_id": {
          "aliases": [],
          "description": "The id of the subnet to create the NAT Gateway in. This is required with the present option.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [
            "resource_tags"
          ],
          "description": "A dict of tags to apply to the NAT gateway.\nTo remove all tags set I(tags={}) and I(purge_tags=true).",
          "type": "dict",
          "required": false,
          "version_added": "1.4.0",
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "wait": {
          "aliases": [],
          "description": "Wait for operation to complete before returning.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "wait_timeout": {
          "aliases": [],
          "description": "How many seconds to wait for an operation to complete before timing out.",
          "default": "320",
          "type": "int",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Manage AWS VPC NAT Gateways.",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n- name: Create new nat gateway with client token.\n  amazon.aws.ec2_vpc_nat_gateway:\n    state: present\n    subnet_id: subnet-12345678\n    eip_address: 52.1.1.1\n    region: ap-southeast-2\n    client_token: abcd-12345678\n  register: new_nat_gateway\n\n- name: Create new nat gateway using an allocation-id.\n  amazon.aws.ec2_vpc_nat_gateway:\n    state: present\n    subnet_id: subnet-12345678\n    allocation_id: eipalloc-12345678\n    region: ap-southeast-2\n  register: new_nat_gateway\n\n- name: Create new nat gateway, using an EIP address  and wait for available status.\n  amazon.aws.ec2_vpc_nat_gateway:\n    state: present\n    subnet_id: subnet-12345678\n    eip_address: 52.1.1.1\n    wait: true\n    region: ap-southeast-2\n  register: new_nat_gateway\n\n- name: Create new nat gateway and allocate new EIP.\n  amazon.aws.ec2_vpc_nat_gateway:\n    state: present\n    subnet_id: subnet-12345678\n    wait: true\n    region: ap-southeast-2\n  register: new_nat_gateway\n\n- name: Create new nat gateway and allocate new EIP if a nat gateway does not yet exist in the subnet.\n  amazon.aws.ec2_vpc_nat_gateway:\n    state: present\n    subnet_id: subnet-12345678\n    wait: true\n    region: ap-southeast-2\n    if_exist_do_not_create: true\n  register: new_nat_gateway\n\n- name: Delete nat gateway using discovered nat gateways from facts module.\n  amazon.aws.ec2_vpc_nat_gateway:\n    state: absent\n    region: ap-southeast-2\n    wait: true\n    nat_gateway_id: \"{{ item.NatGatewayId }}\"\n    release_eip: true\n  register: delete_nat_gateway_result\n  loop: \"{{ gateways_to_remove.result }}\"\n\n- name: Delete nat gateway and wait for deleted status.\n  amazon.aws.ec2_vpc_nat_gateway:\n    state: absent\n    nat_gateway_id: nat-12345678\n    wait: true\n    wait_timeout: 500\n    region: ap-southeast-2\n\n- name: Delete nat gateway and release EIP.\n  amazon.aws.ec2_vpc_nat_gateway:\n    state: absent\n    nat_gateway_id: nat-12345678\n    release_eip: true\n    wait: yes\n    wait_timeout: 300\n    region: ap-southeast-2\n\n- name: Create new nat gateway using allocation-id and tags.\n  amazon.aws.ec2_vpc_nat_gateway:\n    state: present\n    subnet_id: subnet-12345678\n    allocation_id: eipalloc-12345678\n    region: ap-southeast-2\n    tags:\n        Tag1: tag1\n        Tag2: tag2\n  register: new_nat_gateway\n\n- name: Update tags without purge\n  amazon.aws.ec2_vpc_nat_gateway:\n    subnet_id: subnet-12345678\n    allocation_id: eipalloc-12345678\n    region: ap-southeast-2\n    purge_tags: no\n    tags:\n        Tag3: tag3\n    wait: yes\n  register: update_tags_nat_gateway\n"
  },
  "amazon.aws.ec2_vpc_nat_gateway_facts": {
    "doc": {
      "description": "Gets various details related to AWS VPC Managed Nat Gateways\nThis module was called C(ec2_vpc_nat_gateway_facts) before Ansible 2.9. The usage did not change.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filters": {
          "aliases": [],
          "description": "A dict of filters to apply. Each dict item consists of a filter key and a filter value. See U(https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNatGateways.html) for possible filters.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "nat_gateway_ids": {
          "aliases": [],
          "description": "List of specific nat gateway IDs to fetch details for.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Retrieves AWS VPC Managed Nat Gateway details using AWS methods.",
      "version_added": "1.0.0"
    },
    "examples": "\n# Simple example of listing all nat gateways\n- name: List all managed nat gateways in ap-southeast-2\n  amazon.aws.ec2_vpc_nat_gateway_info:\n    region: ap-southeast-2\n  register: all_ngws\n\n- name: Debugging the result\n  ansible.builtin.debug:\n    msg: \"{{ all_ngws.result }}\"\n\n- name: Get details on specific nat gateways\n  amazon.aws.ec2_vpc_nat_gateway_info:\n    nat_gateway_ids:\n      - nat-1234567891234567\n      - nat-7654321987654321\n    region: ap-southeast-2\n  register: specific_ngws\n\n- name: Get all nat gateways with specific filters\n  amazon.aws.ec2_vpc_nat_gateway_info:\n    region: ap-southeast-2\n    filters:\n      state: ['pending']\n  register: pending_ngws\n\n- name: Get nat gateways with specific filter\n  amazon.aws.ec2_vpc_nat_gateway_info:\n    region: ap-southeast-2\n    filters:\n      subnet-id: subnet-12345678\n      state: ['available']\n  register: existing_nat_gateways\n"
  },
  "amazon.aws.ec2_vpc_nat_gateway_info": {
    "doc": {
      "description": "Gets various details related to AWS VPC Managed Nat Gateways\nThis module was called C(ec2_vpc_nat_gateway_facts) before Ansible 2.9. The usage did not change.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filters": {
          "aliases": [],
          "description": "A dict of filters to apply. Each dict item consists of a filter key and a filter value. See U(https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNatGateways.html) for possible filters.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "nat_gateway_ids": {
          "aliases": [],
          "description": "List of specific nat gateway IDs to fetch details for.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Retrieves AWS VPC Managed Nat Gateway details using AWS methods.",
      "version_added": "1.0.0"
    },
    "examples": "\n# Simple example of listing all nat gateways\n- name: List all managed nat gateways in ap-southeast-2\n  amazon.aws.ec2_vpc_nat_gateway_info:\n    region: ap-southeast-2\n  register: all_ngws\n\n- name: Debugging the result\n  ansible.builtin.debug:\n    msg: \"{{ all_ngws.result }}\"\n\n- name: Get details on specific nat gateways\n  amazon.aws.ec2_vpc_nat_gateway_info:\n    nat_gateway_ids:\n      - nat-1234567891234567\n      - nat-7654321987654321\n    region: ap-southeast-2\n  register: specific_ngws\n\n- name: Get all nat gateways with specific filters\n  amazon.aws.ec2_vpc_nat_gateway_info:\n    region: ap-southeast-2\n    filters:\n      state: ['pending']\n  register: pending_ngws\n\n- name: Get nat gateways with specific filter\n  amazon.aws.ec2_vpc_nat_gateway_info:\n    region: ap-southeast-2\n    filters:\n      subnet-id: subnet-12345678\n      state: ['available']\n  register: existing_nat_gateways\n"
  },
  "amazon.aws.ec2_vpc_net": {
    "doc": {
      "description": "Create, modify, and terminate AWS virtual private clouds.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cidr_block": {
          "aliases": [],
          "description": "The primary CIDR of the VPC. After 2.5 a list of CIDRs can be provided. The first in the list will be used as the primary CIDR and is used in conjunction with the C(name) to ensure idempotence.",
          "type": "list",
          "required": true,
          "elements": "str",
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "dhcp_opts_id": {
          "aliases": [],
          "description": "The id of the DHCP options to use for this VPC.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "dns_hostnames": {
          "aliases": [],
          "description": "Whether to enable AWS hostname support.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "dns_support": {
          "aliases": [],
          "description": "Whether to enable AWS DNS support.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ipv6_cidr": {
          "aliases": [],
          "description": "Request an Amazon-provided IPv6 CIDR block with /56 prefix length.  You cannot specify the range of IPv6 addresses, or the size of the CIDR block.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "multi_ok": {
          "aliases": [],
          "description": "By default the module will not create another VPC if there is another VPC with the same name and CIDR block. Specify this as true if you want duplicate VPCs created.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name to give your VPC. This is used in combination with C(cidr_block) to determine if a VPC already exists.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "purge_cidrs": {
          "aliases": [],
          "description": "Remove CIDRs that are associated with the VPC and are not specified in C(cidr_block).",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The state of the VPC. Either absent or present.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "tags": {
          "aliases": [
            "resource_tags"
          ],
          "description": "The tags you want attached to the VPC. This is independent of the name value, note if you pass a 'Name' key it would override the Name of the VPC if it's different.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenancy": {
          "aliases": [],
          "description": "Whether to be default or dedicated tenancy. This cannot be changed after the VPC has been created.",
          "default": "default",
          "type": "str",
          "required": false,
          "choices": [
            "default",
            "dedicated"
          ],
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Configure AWS virtual private clouds",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n- name: create a VPC with dedicated tenancy and a couple of tags\n  amazon.aws.ec2_vpc_net:\n    name: Module_dev2\n    cidr_block: 10.10.0.0/16\n    region: us-east-1\n    tags:\n      module: ec2_vpc_net\n      this: works\n    tenancy: dedicated\n\n- name: create a VPC with dedicated tenancy and request an IPv6 CIDR\n  amazon.aws.ec2_vpc_net:\n    name: Module_dev2\n    cidr_block: 10.10.0.0/16\n    ipv6_cidr: True\n    region: us-east-1\n    tenancy: dedicated\n"
  },
  "amazon.aws.ec2_vpc_net_facts": {
    "doc": {
      "description": "Gather information about ec2 VPCs in AWS\nThis module was called C(ec2_vpc_net_facts) before Ansible 2.9. The usage did not change.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filters": {
          "aliases": [],
          "description": "A dict of filters to apply. Each dict item consists of a filter key and a filter value. See U(https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcs.html) for possible filters.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "vpc_ids": {
          "aliases": [],
          "description": "A list of VPC IDs that exist in your account.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Gather information about ec2 VPCs in AWS",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n# Gather information about all VPCs\n- amazon.aws.ec2_vpc_net_info:\n\n# Gather information about a particular VPC using VPC ID\n- amazon.aws.ec2_vpc_net_info:\n    vpc_ids: vpc-00112233\n\n# Gather information about any VPC with a tag key Name and value Example\n- amazon.aws.ec2_vpc_net_info:\n    filters:\n      \"tag:Name\": Example\n\n"
  },
  "amazon.aws.ec2_vpc_net_info": {
    "doc": {
      "description": "Gather information about ec2 VPCs in AWS\nThis module was called C(ec2_vpc_net_facts) before Ansible 2.9. The usage did not change.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filters": {
          "aliases": [],
          "description": "A dict of filters to apply. Each dict item consists of a filter key and a filter value. See U(https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcs.html) for possible filters.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "vpc_ids": {
          "aliases": [],
          "description": "A list of VPC IDs that exist in your account.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Gather information about ec2 VPCs in AWS",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n# Gather information about all VPCs\n- amazon.aws.ec2_vpc_net_info:\n\n# Gather information about a particular VPC using VPC ID\n- amazon.aws.ec2_vpc_net_info:\n    vpc_ids: vpc-00112233\n\n# Gather information about any VPC with a tag key Name and value Example\n- amazon.aws.ec2_vpc_net_info:\n    filters:\n      \"tag:Name\": Example\n\n"
  },
  "amazon.aws.ec2_vpc_route_table": {
    "doc": {
      "description": "Manage route tables for AWS virtual private clouds",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "lookup": {
          "aliases": [],
          "description": "Look up route table by either tags or by route table ID. Non-unique tag lookup will fail. If no tags are specified then no lookup for an existing route table is performed and a new route table will be created. To change tags of a route table you must look up by id.",
          "default": "tag",
          "type": "str",
          "required": false,
          "choices": [
            "tag",
            "id"
          ],
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "propagating_vgw_ids": {
          "aliases": [],
          "description": "Enable route propagation from virtual gateways specified by ID.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "purge_routes": {
          "aliases": [],
          "description": "Purge existing routes that are not found in routes.",
          "default": "yes",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "purge_subnets": {
          "aliases": [],
          "description": "Purge existing subnets that are not found in subnets. Ignored unless the subnets option is supplied.",
          "default": "true",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "purge_tags": {
          "aliases": [],
          "description": "Purge existing tags that are not found in route table.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "route_table_id": {
          "aliases": [],
          "description": "The ID of the route table to update or delete.\nRequired when I(lookup=id).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "routes": {
          "aliases": [],
          "description": "List of routes in the route table. Routes are specified as dicts containing the keys 'dest' and one of 'gateway_id', 'instance_id', 'network_interface_id', or 'vpc_peering_connection_id'. If 'gateway_id' is specified, you can refer to the VPC's IGW by using the value 'igw'. Routes are required for present states.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Create or destroy the VPC route table.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "subnets": {
          "aliases": [],
          "description": "An array of subnets to add to this route table. Subnets may be specified by either subnet ID, Name tag, or by a CIDR such as '10.0.0.0/24'.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "tags": {
          "aliases": [
            "resource_tags"
          ],
          "description": "A dictionary of resource tags of the form: C({ tag1: value1, tag2: value2 }). Tags are used to uniquely identify route tables within a VPC when the route_table_id is not supplied.\n",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "vpc_id": {
          "aliases": [],
          "description": "VPC ID of the VPC in which to create the route table.\nRequired when I(state=present) or I(lookup=tag).",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Manage route tables for AWS virtual private clouds",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n# Basic creation example:\n- name: Set up public subnet route table\n  amazon.aws.ec2_vpc_route_table:\n    vpc_id: vpc-1245678\n    region: us-west-1\n    tags:\n      Name: Public\n    subnets:\n      - \"{{ jumpbox_subnet.subnet.id }}\"\n      - \"{{ frontend_subnet.subnet.id }}\"\n      - \"{{ vpn_subnet.subnet_id }}\"\n    routes:\n      - dest: 0.0.0.0/0\n        gateway_id: \"{{ igw.gateway_id }}\"\n  register: public_route_table\n\n- name: Set up NAT-protected route table\n  amazon.aws.ec2_vpc_route_table:\n    vpc_id: vpc-1245678\n    region: us-west-1\n    tags:\n      Name: Internal\n    subnets:\n      - \"{{ application_subnet.subnet.id }}\"\n      - 'Database Subnet'\n      - '10.0.0.0/8'\n    routes:\n      - dest: 0.0.0.0/0\n        instance_id: \"{{ nat.instance_id }}\"\n  register: nat_route_table\n\n- name: delete route table\n  amazon.aws.ec2_vpc_route_table:\n    vpc_id: vpc-1245678\n    region: us-west-1\n    route_table_id: \"{{ route_table.id }}\"\n    lookup: id\n    state: absent\n"
  },
  "amazon.aws.ec2_vpc_route_table_facts": {
    "doc": {
      "description": "Gather information about ec2 VPC route tables in AWS\nThis module was called C(ec2_vpc_route_table_facts) before Ansible 2.9. The usage did not change.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filters": {
          "aliases": [],
          "description": "A dict of filters to apply. Each dict item consists of a filter key and a filter value. See U(https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeRouteTables.html) for possible filters.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Gather information about ec2 VPC route tables in AWS",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n- name: Gather information about all VPC route tables\n  amazon.aws.ec2_vpc_route_table_info:\n\n- name: Gather information about a particular VPC route table using route table ID\n  amazon.aws.ec2_vpc_route_table_info:\n    filters:\n      route-table-id: rtb-00112233\n\n- name: Gather information about any VPC route table with a tag key Name and value Example\n  amazon.aws.ec2_vpc_route_table_info:\n    filters:\n      \"tag:Name\": Example\n\n- name: Gather information about any VPC route table within VPC with ID vpc-abcdef00\n  amazon.aws.ec2_vpc_route_table_info:\n    filters:\n      vpc-id: vpc-abcdef00\n"
  },
  "amazon.aws.ec2_vpc_route_table_info": {
    "doc": {
      "description": "Gather information about ec2 VPC route tables in AWS\nThis module was called C(ec2_vpc_route_table_facts) before Ansible 2.9. The usage did not change.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filters": {
          "aliases": [],
          "description": "A dict of filters to apply. Each dict item consists of a filter key and a filter value. See U(https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeRouteTables.html) for possible filters.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Gather information about ec2 VPC route tables in AWS",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n- name: Gather information about all VPC route tables\n  amazon.aws.ec2_vpc_route_table_info:\n\n- name: Gather information about a particular VPC route table using route table ID\n  amazon.aws.ec2_vpc_route_table_info:\n    filters:\n      route-table-id: rtb-00112233\n\n- name: Gather information about any VPC route table with a tag key Name and value Example\n  amazon.aws.ec2_vpc_route_table_info:\n    filters:\n      \"tag:Name\": Example\n\n- name: Gather information about any VPC route table within VPC with ID vpc-abcdef00\n  amazon.aws.ec2_vpc_route_table_info:\n    filters:\n      vpc-id: vpc-abcdef00\n"
  },
  "amazon.aws.ec2_vpc_subnet": {
    "doc": {
      "description": "Manage subnets in AWS virtual private clouds.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "assign_instances_ipv6": {
          "aliases": [],
          "description": "Specify C(yes) to indicate that instances launched into the subnet should be automatically assigned an IPv6 address.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "az": {
          "aliases": [],
          "description": "The availability zone for the subnet.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cidr": {
          "aliases": [],
          "description": "The CIDR block for the subnet. E.g. 192.0.2.0/24.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ipv6_cidr": {
          "aliases": [],
          "description": "The IPv6 CIDR block for the subnet. The VPC must have a /56 block assigned and this value must be a valid IPv6 /64 that falls in the VPC range.\nRequired if I(assign_instances_ipv6=true)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "map_public": {
          "aliases": [],
          "description": "Specify C(yes) to indicate that instances launched into the subnet should be assigned public IP address by default.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "purge_tags": {
          "aliases": [],
          "description": "Whether or not to remove tags that do not appear in the I(tags) list.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Create or remove the subnet.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "tags": {
          "aliases": [
            "resource_tags"
          ],
          "description": "A dict of tags to apply to the subnet. Any tags currently applied to the subnet and not present here will be removed.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "vpc_id": {
          "aliases": [],
          "description": "VPC ID of the VPC in which to create or delete the subnet.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "wait": {
          "aliases": [],
          "description": "When I(wait=true) and I(state=present), module will wait for subnet to be in available state before continuing.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "wait_timeout": {
          "aliases": [],
          "description": "Number of seconds to wait for subnet to become available I(wait=True).",
          "default": "300",
          "type": "int",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Manage subnets in AWS virtual private clouds",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n- name: Create subnet for database servers\n  amazon.aws.ec2_vpc_subnet:\n    state: present\n    vpc_id: vpc-123456\n    cidr: 10.0.1.16/28\n    tags:\n      Name: Database Subnet\n  register: database_subnet\n\n- name: Remove subnet for database servers\n  amazon.aws.ec2_vpc_subnet:\n    state: absent\n    vpc_id: vpc-123456\n    cidr: 10.0.1.16/28\n\n- name: Create subnet with IPv6 block assigned\n  amazon.aws.ec2_vpc_subnet:\n    state: present\n    vpc_id: vpc-123456\n    cidr: 10.1.100.0/24\n    ipv6_cidr: 2001:db8:0:102::/64\n\n- name: Remove IPv6 block assigned to subnet\n  amazon.aws.ec2_vpc_subnet:\n    state: present\n    vpc_id: vpc-123456\n    cidr: 10.1.100.0/24\n    ipv6_cidr: ''\n"
  },
  "amazon.aws.ec2_vpc_subnet_facts": {
    "doc": {
      "description": "Gather information about ec2 VPC subnets in AWS\nThis module was called C(ec2_vpc_subnet_facts) before Ansible 2.9. The usage did not change.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filters": {
          "aliases": [],
          "description": "A dict of filters to apply. Each dict item consists of a filter key and a filter value. See U(https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSubnets.html) for possible filters.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subnet_ids": {
          "aliases": [
            "subnet_id"
          ],
          "description": "A list of subnet IDs to gather information for.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Gather information about ec2 VPC subnets in AWS",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n# Gather information about all VPC subnets\n- amazon.aws.ec2_vpc_subnet_info:\n\n# Gather information about a particular VPC subnet using ID\n- amazon.aws.ec2_vpc_subnet_info:\n    subnet_ids: subnet-00112233\n\n# Gather information about any VPC subnet with a tag key Name and value Example\n- amazon.aws.ec2_vpc_subnet_info:\n    filters:\n      \"tag:Name\": Example\n\n# Gather information about any VPC subnet within VPC with ID vpc-abcdef00\n- amazon.aws.ec2_vpc_subnet_info:\n    filters:\n      vpc-id: vpc-abcdef00\n\n# Gather information about a set of VPC subnets, publicA, publicB and publicC within a\n# VPC with ID vpc-abcdef00 and then use the jinja map function to return the\n# subnet_ids as a list.\n\n- amazon.aws.ec2_vpc_subnet_info:\n    filters:\n      vpc-id: vpc-abcdef00\n      \"tag:Name\": \"{{ item }}\"\n  loop:\n    - publicA\n    - publicB\n    - publicC\n  register: subnet_info\n\n- set_fact:\n    subnet_ids: \"{{ subnet_info.subnets|map(attribute='id')|list }}\"\n"
  },
  "amazon.aws.ec2_vpc_subnet_info": {
    "doc": {
      "description": "Gather information about ec2 VPC subnets in AWS\nThis module was called C(ec2_vpc_subnet_facts) before Ansible 2.9. The usage did not change.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filters": {
          "aliases": [],
          "description": "A dict of filters to apply. Each dict item consists of a filter key and a filter value. See U(https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSubnets.html) for possible filters.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subnet_ids": {
          "aliases": [
            "subnet_id"
          ],
          "description": "A list of subnet IDs to gather information for.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Gather information about ec2 VPC subnets in AWS",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n# Gather information about all VPC subnets\n- amazon.aws.ec2_vpc_subnet_info:\n\n# Gather information about a particular VPC subnet using ID\n- amazon.aws.ec2_vpc_subnet_info:\n    subnet_ids: subnet-00112233\n\n# Gather information about any VPC subnet with a tag key Name and value Example\n- amazon.aws.ec2_vpc_subnet_info:\n    filters:\n      \"tag:Name\": Example\n\n# Gather information about any VPC subnet within VPC with ID vpc-abcdef00\n- amazon.aws.ec2_vpc_subnet_info:\n    filters:\n      vpc-id: vpc-abcdef00\n\n# Gather information about a set of VPC subnets, publicA, publicB and publicC within a\n# VPC with ID vpc-abcdef00 and then use the jinja map function to return the\n# subnet_ids as a list.\n\n- amazon.aws.ec2_vpc_subnet_info:\n    filters:\n      vpc-id: vpc-abcdef00\n      \"tag:Name\": \"{{ item }}\"\n  loop:\n    - publicA\n    - publicB\n    - publicC\n  register: subnet_info\n\n- set_fact:\n    subnet_ids: \"{{ subnet_info.subnets|map(attribute='id')|list }}\"\n"
  },
  "amazon.aws.elb_classic_lb": {
    "doc": {
      "description": "Creates, updates or destroys an Amazon Elastic Load Balancer (ELB).\nThis module was renamed from C(amazon.aws.ec2_elb_lb) to M(amazon.aws.elb_classic_lb) in version 2.1.0 of the amazon.aws collection.",
      "has_action": false,
      "notes": "The ec2_elb fact currently set by this module has been deprecated and will no longer be set after release 4.0.0 of the collection.\nIf parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "access_logs": {
          "aliases": [],
          "description": "A dictionary of access logs configuration settings (see examples).",
          "type": "dict",
          "required": false,
          "suboptions": {
            "enabled": {
              "aliases": [],
              "description": "When set to C(True) will configure delivery of access logs to an S3 bucket.\nWhen set to C(False) will disable delivery of access logs.",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "interval": {
              "aliases": [],
              "description": "The interval for publishing the access logs to S3.",
              "default": "60",
              "type": "int",
              "required": false,
              "choices": [
                "5",
                "60"
              ],
              "suboptions": {}
            },
            "s3_location": {
              "aliases": [],
              "description": "The S3 bucket to deliver access logs to.\nSee U(https://docs.aws.amazon.com/elasticloadbalancing/latest/classic/enable-access-logs.html) for more information about the necessary S3 bucket policies.\nRequired when I(enabled=True).",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "s3_prefix": {
              "aliases": [],
              "description": "Where in the S3 bucket to deliver the logs.\nIf the prefix is not provided or set to C(\"\"), the log is placed at the root level of the bucket.",
              "default": "",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "connection_draining_timeout": {
          "aliases": [],
          "description": "Wait a specified timeout allowing connections to drain before terminating an instance.\nSet to C(0) to disable connection draining.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "cross_az_load_balancing": {
          "aliases": [],
          "description": "Distribute load across all configured Availability Zones.\nDefaults to C(false).",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "health_check": {
          "aliases": [],
          "description": "A dictionary of health check configuration settings (see examples).",
          "type": "dict",
          "required": false,
          "suboptions": {
            "healthy_threshold": {
              "aliases": [],
              "description": "The number of consecutive health checks successes required before moving the instance to the Healthy state.",
              "type": "int",
              "required": true,
              "suboptions": {}
            },
            "interval": {
              "aliases": [],
              "description": "The approximate interval, in seconds, between health checks of an individual instance.",
              "type": "int",
              "required": true,
              "suboptions": {}
            },
            "ping_path": {
              "aliases": [],
              "description": "The URI path which the ELB health check will query when performing a health check.\nRequired when I(ping_protocol=HTTP) or I(ping_protocol=HTTPS).",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "ping_port": {
              "aliases": [],
              "description": "The TCP port to which the ELB will connect when performing a health check.",
              "type": "int",
              "required": true,
              "suboptions": {}
            },
            "ping_protocol": {
              "aliases": [],
              "description": "The protocol which the ELB health check will use when performing a health check.\nValid values are C('HTTP'), C('HTTPS'), C('TCP') and C('SSL').",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [
                "response_timeout"
              ],
              "description": "The amount of time, in seconds, after which no response means a failed health check.",
              "type": "int",
              "required": true,
              "suboptions": {}
            },
            "unhealthy_threshold": {
              "aliases": [],
              "description": "The number of consecutive health check failures required before moving the instance to the Unhealthy state.",
              "type": "int",
              "required": true,
              "suboptions": {}
            }
          }
        },
        "idle_timeout": {
          "aliases": [],
          "description": "ELB connections from clients and to servers are timed out after this amount of time.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "instance_ids": {
          "aliases": [],
          "description": "List of instance ids to attach to this ELB.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "listeners": {
          "aliases": [],
          "description": "List of ports/protocols for this ELB to listen on (see examples).\nRequired when I(state=present) and the ELB doesn't exist.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "instance_port": {
              "aliases": [],
              "description": "The port on which the instance is listening.",
              "type": "int",
              "required": true,
              "suboptions": {}
            },
            "instance_protocol": {
              "aliases": [],
              "description": "The protocol to use for routing traffic to instances.\nValid values are C(HTTP), C(HTTPS), C(TCP), or C(SSL),",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "load_balancer_port": {
              "aliases": [],
              "description": "The port on which the load balancer will listen.",
              "type": "int",
              "required": true,
              "suboptions": {}
            },
            "protocol": {
              "aliases": [],
              "description": "The transport protocol to use for routing.\nValid values are C(HTTP), C(HTTPS), C(TCP), or C(SSL).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "proxy_protocol": {
              "aliases": [],
              "description": "Enable proxy protocol for the listener.\nBeware, ELB controls for the proxy protocol are based on the I(instance_port).  If you have multiple listeners talking to the same I(instance_port), this will affect all of them.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "ssl_certificate_id": {
              "aliases": [],
              "description": "The Amazon Resource Name (ARN) of the SSL certificate.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "name": {
          "aliases": [],
          "description": "The name of the ELB.\nThe name of an ELB must be less than 32 characters and unique per-region per-account.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "purge_instance_ids": {
          "aliases": [],
          "description": "Purge existing instance ids on ELB that are not found in I(instance_ids).",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "purge_listeners": {
          "aliases": [],
          "description": "Purge existing listeners on ELB that are not found in listeners.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "purge_subnets": {
          "aliases": [],
          "description": "Purge existing subnets on the ELB that are not found in I(subnets).\nBecause it is not permitted to add multiple subnets from the same availability zone, subnets to be purged will be removed before new subnets are added.  This may cause a brief outage if you try to replace all subnets at once.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "purge_tags": {
          "aliases": [],
          "description": "Whether to remove existing tags that aren't passed in the I(tags) parameter.",
          "default": "True",
          "type": "bool",
          "required": false,
          "version_added": "2.1.0",
          "suboptions": {}
        },
        "purge_zones": {
          "aliases": [],
          "description": "Purge existing availability zones on ELB that are not found in I(zones).",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scheme": {
          "aliases": [],
          "description": "The scheme to use when creating the ELB.\nFor a private VPC-visible ELB use C(internal).\nIf you choose to update your scheme with a different value the ELB will be destroyed and a new ELB created.\nDefaults to I(scheme=internet-facing).",
          "type": "str",
          "required": false,
          "choices": [
            "internal",
            "internet-facing"
          ],
          "suboptions": {}
        },
        "security_group_ids": {
          "aliases": [],
          "description": "A list of security groups to apply to the ELB.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "security_group_names": {
          "aliases": [],
          "description": "A list of security group names to apply to the ELB.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Create or destroy the ELB.",
          "type": "str",
          "required": true,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "stickiness": {
          "aliases": [],
          "description": "A dictionary of stickiness policy settings.\nPolicy will be applied to all listeners (see examples).",
          "type": "dict",
          "required": false,
          "suboptions": {
            "cookie": {
              "aliases": [],
              "description": "The name of the application cookie used for stickiness.\nRequired if I(enabled=true) and I(type=application).\nIgnored if I(enabled=false).",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "enabled": {
              "aliases": [],
              "description": "When I(enabled=false) session stickiness will be disabled for all listeners.",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "expiration": {
              "aliases": [],
              "description": "The time period, in seconds, after which the cookie should be considered stale.\nIf this parameter is not specified, the stickiness session lasts for the duration of the browser session.\nIgnored if I(enabled=false).",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "type": {
              "aliases": [],
              "description": "The type of stickiness policy to apply.\nRequired if I(enabled=true).\nIgnored if I(enabled=false).",
              "type": "str",
              "required": false,
              "choices": [
                "application",
                "loadbalancer"
              ],
              "suboptions": {}
            }
          }
        },
        "subnets": {
          "aliases": [],
          "description": "A list of VPC subnets to use when creating the ELB.\nMutually exclusive with I(zones).",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "A dictionary of tags to apply to the ELB.\nTo delete all tags supply an empty dict (C({})) and set I(purge_tags=true).",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "wait": {
          "aliases": [],
          "description": "When creating, deleting, or adding instances to an ELB, if I(wait=true) Ansible will wait for both the load balancer and related network interfaces to finish creating/deleting.\nSupport for waiting when adding instances was added in release 2.1.0.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "wait_timeout": {
          "aliases": [],
          "description": "Used in conjunction with wait. Number of seconds to wait for the ELB to be terminated.\nA maximum of 600 seconds (10 minutes) is allowed.",
          "default": "180",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "zones": {
          "aliases": [],
          "description": "List of availability zones to enable on this ELB.\nMutually exclusive with I(subnets).",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "creates, updates or destroys an Amazon ELB.",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: None of these examples set aws_access_key, aws_secret_key, or region.\n# It is assumed that their matching environment variables are set.\n\n# Basic provisioning example (non-VPC)\n\n- amazon.aws.elb_classic_lb:\n    name: \"test-please-delete\"\n    state: present\n    zones:\n      - us-east-1a\n      - us-east-1d\n    listeners:\n      - protocol: http # options are http, https, ssl, tcp\n        load_balancer_port: 80\n        instance_port: 80\n        proxy_protocol: True\n      - protocol: https\n        load_balancer_port: 443\n        instance_protocol: http # optional, defaults to value of protocol setting\n        instance_port: 80\n        # ssl certificate required for https or ssl\n        ssl_certificate_id: \"arn:aws:iam::123456789012:server-certificate/company/servercerts/ProdServerCert\"\n\n# Internal ELB example\n\n- amazon.aws.elb_classic_lb:\n    name: \"test-vpc\"\n    scheme: internal\n    state: present\n    instance_ids:\n      - i-abcd1234\n    purge_instance_ids: true\n    subnets:\n      - subnet-abcd1234\n      - subnet-1a2b3c4d\n    listeners:\n      - protocol: http # options are http, https, ssl, tcp\n        load_balancer_port: 80\n        instance_port: 80\n\n# Configure a health check and the access logs\n- amazon.aws.elb_classic_lb:\n    name: \"test-please-delete\"\n    state: present\n    zones:\n      - us-east-1d\n    listeners:\n      - protocol: http\n        load_balancer_port: 80\n        instance_port: 80\n    health_check:\n        ping_protocol: http # options are http, https, ssl, tcp\n        ping_port: 80\n        ping_path: \"/index.html\" # not required for tcp or ssl\n        response_timeout: 5 # seconds\n        interval: 30 # seconds\n        unhealthy_threshold: 2\n        healthy_threshold: 10\n    access_logs:\n        interval: 5 # minutes (defaults to 60)\n        s3_location: \"my-bucket\" # This value is required if access_logs is set\n        s3_prefix: \"logs\"\n\n# Ensure ELB is gone\n- amazon.aws.elb_classic_lb:\n    name: \"test-please-delete\"\n    state: absent\n\n# Ensure ELB is gone and wait for check (for default timeout)\n- amazon.aws.elb_classic_lb:\n    name: \"test-please-delete\"\n    state: absent\n    wait: yes\n\n# Ensure ELB is gone and wait for check with timeout value\n- amazon.aws.elb_classic_lb:\n    name: \"test-please-delete\"\n    state: absent\n    wait: yes\n    wait_timeout: 600\n\n# Normally, this module will purge any listeners that exist on the ELB\n# but aren't specified in the listeners parameter. If purge_listeners is\n# false it leaves them alone\n- amazon.aws.elb_classic_lb:\n    name: \"test-please-delete\"\n    state: present\n    zones:\n      - us-east-1a\n      - us-east-1d\n    listeners:\n      - protocol: http\n        load_balancer_port: 80\n        instance_port: 80\n    purge_listeners: no\n\n# Normally, this module will leave availability zones that are enabled\n# on the ELB alone. If purge_zones is true, then any extraneous zones\n# will be removed\n- amazon.aws.elb_classic_lb:\n    name: \"test-please-delete\"\n    state: present\n    zones:\n      - us-east-1a\n      - us-east-1d\n    listeners:\n      - protocol: http\n        load_balancer_port: 80\n        instance_port: 80\n    purge_zones: yes\n\n# Creates a ELB and assigns a list of subnets to it.\n- amazon.aws.elb_classic_lb:\n    state: present\n    name: 'New ELB'\n    security_group_ids: 'sg-123456, sg-67890'\n    subnets: 'subnet-123456,subnet-67890'\n    purge_subnets: yes\n    listeners:\n      - protocol: http\n        load_balancer_port: 80\n        instance_port: 80\n\n# Create an ELB with connection draining, increased idle timeout and cross availability\n# zone load balancing\n- amazon.aws.elb_classic_lb:\n    name: \"New ELB\"\n    state: present\n    connection_draining_timeout: 60\n    idle_timeout: 300\n    cross_az_load_balancing: \"yes\"\n    zones:\n      - us-east-1a\n      - us-east-1d\n    listeners:\n      - protocol: http\n        load_balancer_port: 80\n        instance_port: 80\n\n# Create an ELB with load balancer stickiness enabled\n- amazon.aws.elb_classic_lb:\n    name: \"New ELB\"\n    state: present\n    zones:\n      - us-east-1a\n      - us-east-1d\n    listeners:\n      - protocol: http\n        load_balancer_port: 80\n        instance_port: 80\n    stickiness:\n      type: loadbalancer\n      enabled: yes\n      expiration: 300\n\n# Create an ELB with application stickiness enabled\n- amazon.aws.elb_classic_lb:\n    name: \"New ELB\"\n    state: present\n    zones:\n      - us-east-1a\n      - us-east-1d\n    listeners:\n      - protocol: http\n        load_balancer_port: 80\n        instance_port: 80\n    stickiness:\n      type: application\n      enabled: yes\n      cookie: SESSIONID\n\n# Create an ELB and add tags\n- amazon.aws.elb_classic_lb:\n    name: \"New ELB\"\n    state: present\n    zones:\n      - us-east-1a\n      - us-east-1d\n    listeners:\n      - protocol: http\n        load_balancer_port: 80\n        instance_port: 80\n    tags:\n      Name: \"New ELB\"\n      stack: \"production\"\n      client: \"Bob\"\n\n# Delete all tags from an ELB\n- amazon.aws.elb_classic_lb:\n    name: \"New ELB\"\n    state: present\n    zones:\n      - us-east-1a\n      - us-east-1d\n    listeners:\n      - protocol: http\n        load_balancer_port: 80\n        instance_port: 80\n    tags: {}\n"
  },
  "amazon.aws.s3_bucket": {
    "doc": {
      "description": "Manage S3 buckets in AWS, DigitalOcean, Ceph, Walrus, FakeS3 and StorageGRID.",
      "has_action": false,
      "notes": "If C(requestPayment), C(policy), C(tagging) or C(versioning) operations/API aren't implemented by the endpoint, module doesn't fail if each parameter satisfies the following condition. I(requester_pays) is C(False), I(policy), I(tags), and I(versioning) are C(None).\nIf parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ceph": {
          "aliases": [],
          "description": "Enable API compatibility with Ceph. It takes into account the S3 API subset working with Ceph in order to provide the same module behaviour where possible.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "delete_object_ownership": {
          "aliases": [],
          "description": "Delete bucket's ownership controls.\nThis option cannot be used together with a I(object_ownership) definition.\nManagement of bucket ownership controls requires botocore>=1.18.11.",
          "default": "False",
          "type": "bool",
          "required": false,
          "version_added": "2.0.0",
          "suboptions": {}
        },
        "delete_public_access": {
          "aliases": [],
          "description": "Delete public access block configuration from bucket.\nThis option cannot be used together with a I(public_access) definition.",
          "default": "False",
          "type": "bool",
          "required": false,
          "version_added": "1.3.0",
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "encryption": {
          "aliases": [],
          "description": "Describes the default server-side encryption to apply to new objects in the bucket. In order to remove the server-side encryption, the encryption needs to be set to 'none' explicitly.",
          "type": "str",
          "required": false,
          "choices": [
            "none",
            "AES256",
            "aws:kms"
          ],
          "suboptions": {}
        },
        "encryption_key_id": {
          "aliases": [],
          "description": "KMS master key ID to use for the default encryption. This parameter is allowed if I(encryption) is C(aws:kms). If not specified then it will default to the AWS provided KMS key.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "force": {
          "aliases": [],
          "description": "When trying to delete a bucket, delete all keys (including versions and delete markers) in the bucket first (an S3 bucket must be empty for a successful deletion).",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the S3 bucket.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "object_ownership": {
          "aliases": [],
          "description": "Allow bucket's ownership controls.\nC(BucketOwnerPreferred) - Objects uploaded to the bucket change ownership to the bucket owner if the objects are uploaded with the bucket-owner-full-control canned ACL.\nC(ObjectWriter) - The uploading account will own the object if the object is uploaded with the bucket-owner-full-control canned ACL.\nThis option cannot be used together with a I(delete_object_ownership) definition.\nManagement of bucket ownership controls requires botocore>=1.18.11.",
          "type": "str",
          "required": false,
          "choices": [
            "BucketOwnerPreferred",
            "ObjectWriter"
          ],
          "version_added": "2.0.0",
          "suboptions": {}
        },
        "policy": {
          "aliases": [],
          "description": "The JSON policy as a string. Set to the string C(\"null\") to force the absence of a policy.",
          "type": "json",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "public_access": {
          "aliases": [],
          "description": "Configure public access block for S3 bucket.\nThis option cannot be used together with I(delete_public_access).",
          "type": "dict",
          "required": false,
          "version_added": "1.3.0",
          "suboptions": {
            "block_public_acls": {
              "aliases": [],
              "description": "Sets BlockPublicAcls value.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "block_public_policy": {
              "aliases": [],
              "description": "Sets BlockPublicPolicy value.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "ignore_public_acls": {
              "aliases": [],
              "description": "Sets IgnorePublicAcls value.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "restrict_public_buckets": {
              "aliases": [],
              "description": "Sets RestrictPublicAcls value.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "purge_tags": {
          "aliases": [],
          "description": "Whether to remove tags that aren't present in the I(tags) parameter.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "requester_pays": {
          "aliases": [],
          "description": "With Requester Pays buckets, the requester instead of the bucket owner pays the cost of the request and the data download from the bucket.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "s3_url": {
          "aliases": [
            "S3_URL"
          ],
          "description": "S3 URL endpoint for usage with DigitalOcean, Ceph, Eucalyptus and FakeS3 etc.\nAssumes AWS if not specified.\nFor Walrus, use FQDN of the endpoint without scheme nor path.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Create or remove the S3 bucket.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Tags dict to apply to bucket.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "versioning": {
          "aliases": [],
          "description": "Whether versioning is enabled or disabled (note that once versioning is enabled, it can only be suspended).",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Manage S3 buckets in AWS, DigitalOcean, Ceph, Walrus, FakeS3 and StorageGRID",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n# Create a simple S3 bucket\n- amazon.aws.s3_bucket:\n    name: mys3bucket\n    state: present\n\n# Create a simple S3 bucket on Ceph Rados Gateway\n- amazon.aws.s3_bucket:\n    name: mys3bucket\n    s3_url: http://your-ceph-rados-gateway-server.xxx\n    ceph: true\n\n# Remove an S3 bucket and any keys it contains\n- amazon.aws.s3_bucket:\n    name: mys3bucket\n    state: absent\n    force: yes\n\n# Create a bucket, add a policy from a file, enable requester pays, enable versioning and tag\n- amazon.aws.s3_bucket:\n    name: mys3bucket\n    policy: \"{{ lookup('file','policy.json') }}\"\n    requester_pays: yes\n    versioning: yes\n    tags:\n      example: tag1\n      another: tag2\n\n# Create a simple DigitalOcean Spaces bucket using their provided regional endpoint\n- amazon.aws.s3_bucket:\n    name: mydobucket\n    s3_url: 'https://nyc3.digitaloceanspaces.com'\n\n# Create a bucket with AES256 encryption\n- amazon.aws.s3_bucket:\n    name: mys3bucket\n    state: present\n    encryption: \"AES256\"\n\n# Create a bucket with aws:kms encryption, KMS key\n- amazon.aws.s3_bucket:\n    name: mys3bucket\n    state: present\n    encryption: \"aws:kms\"\n    encryption_key_id: \"arn:aws:kms:us-east-1:1234/5678example\"\n\n# Create a bucket with aws:kms encryption, default key\n- amazon.aws.s3_bucket:\n    name: mys3bucket\n    state: present\n    encryption: \"aws:kms\"\n\n# Create a bucket with public policy block configuration\n- amazon.aws.s3_bucket:\n    name: mys3bucket\n    state: present\n    public_access:\n        block_public_acls: true\n        ignore_public_acls: true\n        ## keys == 'false' can be omitted, undefined keys defaults to 'false'\n        # block_public_policy: false\n        # restrict_public_buckets: false\n\n# Delete public policy block from bucket\n- amazon.aws.s3_bucket:\n    name: mys3bucket\n    state: present\n    delete_public_access: true\n\n# Create a bucket with object ownership controls set to ObjectWriter\n- amazon.aws.s3_bucket:\n    name: mys3bucket\n    state: present\n    object_ownership: ObjectWriter\n\n# Delete onwership controls from bucket\n- amazon.aws.s3_bucket:\n    name: mys3bucket\n    state: present\n    delete_object_ownership: true\n\n# Delete a bucket policy from bucket\n- amazon.aws.s3_bucket:\n    name: mys3bucket\n    state: present\n    policy: \"null\"\n"
  }
}