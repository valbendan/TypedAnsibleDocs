{
  "cisco.iosxr.iosxr_acl_interfaces": {
    "doc": {
      "description": "This module manages adding and removing Access Control Lists (ACLs) from interfaces on devices running IOS-XR software.",
      "has_action": true,
      "options": {
        "config": {
          "aliases": [],
          "description": "A dictionary of ACL options for interfaces.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "access_groups": {
              "aliases": [],
              "description": "Specifies ACLs attached to the interfaces.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "acls": {
                  "aliases": [],
                  "description": "Specifies the ACLs for the provided AFI.",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "direction": {
                      "aliases": [],
                      "description": "Specifies the direction of packets that the ACL will be applied on.",
                      "type": "str",
                      "required": true,
                      "choices": [
                        "in",
                        "out"
                      ],
                      "suboptions": {}
                    },
                    "name": {
                      "aliases": [],
                      "description": "Specifies the name of the IPv4/IPv6 ACL for the interface.",
                      "type": "str",
                      "required": true,
                      "suboptions": {}
                    }
                  }
                },
                "afi": {
                  "aliases": [],
                  "description": "Specifies the AFI for the ACL(s) to be configured on this interface.",
                  "type": "str",
                  "required": true,
                  "choices": [
                    "ipv4",
                    "ipv6"
                  ],
                  "suboptions": {}
                }
              }
            },
            "name": {
              "aliases": [],
              "description": "Name/Identifier for the interface",
              "type": "str",
              "required": true,
              "suboptions": {}
            }
          }
        },
        "running_config": {
          "aliases": [],
          "description": "This option is used only with state I(parsed).\nThe value of this option should be the output received from the IOS-XR device by executing the command B(show running-config interface).\nThe state I(parsed) reads the configuration from C(running_config) option and transforms it into Ansible structured data as per the resource module's argspec and the value is then returned in the I(parsed) key within the result.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The state the configuration should be left in.",
          "default": "merged",
          "type": "str",
          "required": false,
          "choices": [
            "merged",
            "replaced",
            "overridden",
            "deleted",
            "gathered",
            "parsed",
            "rendered"
          ],
          "suboptions": {}
        }
      },
      "short_description": "ACL interfaces resource module",
      "version_added": "1.0.0"
    },
    "examples": "\n# Using merged\n\n# Before state:\n# -------------\n#\n# RP/0/RP0/CPU0:ios#sh running-config interface\n# Wed Jan 15 12:22:32.911 UTC\n# interface MgmtEth0/RP0/CPU0/0\n#  ipv4 address dhcp\n# !\n# interface GigabitEthernet0/0/0/0\n#  shutdown\n# !\n# interface GigabitEthernet0/0/0/1\n#  shutdown\n# !\n\n- name: Merge the provided configuration with the existing running configuration\n  cisco.iosxr.iosxr_acl_interfaces:\n    config:\n    - name: GigabitEthernet0/0/0/0\n      access_groups:\n      - afi: ipv4\n        acls:\n        - name: acl_1\n          direction: in\n        - name: acl_2\n          direction: out\n      - afi: ipv6\n        acls:\n        - name: acl6_1\n          direction: in\n        - name: acl6_2\n          direction: out\n\n    - name: GigabitEthernet0/0/0/1\n      access_groups:\n      - afi: ipv4\n        acls:\n        - name: acl_1\n          direction: out\n    state: merged\n\n# After state:\n# -------------\n#\n# RP/0/RP0/CPU0:ios#sh running-config interface\n# Wed Jan 15 12:27:49.378 UTC\n# interface MgmtEth0/RP0/CPU0/0\n#  ipv4 address dhcp\n# !\n# interface GigabitEthernet0/0/0/0\n#  shutdown\n#  ipv4 access-group acl_1 ingress\n#  ipv4 access-group acl_2 egress\n#  ipv6 access-group acl6_1 ingress\n#  ipv6 access-group acl6_2 egress\n# !\n# interface GigabitEthernet0/0/0/1\n#  shutdown\n#  ipv4 access-group acl_1 egress\n# !\n\n# Using merged to update interface ACL configuration\n\n# Before state:\n# -------------\n#\n# RP/0/RP0/CPU0:ios#sh running-config interface\n# Wed Jan 15 12:27:49.378 UTC\n# interface MgmtEth0/RP0/CPU0/0\n#  ipv4 address dhcp\n# !\n# interface GigabitEthernet0/0/0/0\n#  shutdown\n#  ipv4 access-group acl_1 ingress\n#  ipv4 access-group acl_2 egress\n#  ipv6 access-group acl6_1 ingress\n#  ipv6 access-group acl6_2 egress\n# !\n# interface GigabitEthernet0/0/0/1\n#  shutdown\n#  ipv4 access-group acl_1 egress\n# !\n#\n\n- name: Update acl_interfaces configuration using merged\n  cisco.iosxr.iosxr_acl_interfaces:\n    config:\n    - name: GigabitEthernet0/0/0/1\n      access_groups:\n      - afi: ipv4\n        acls:\n        - name: acl_2\n          direction: out\n        - name: acl_1\n          direction: in\n    state: merged\n\n# After state:\n# -------------\n#\n# RP/0/RP0/CPU0:ios#sh running-config interface\n# Wed Jan 15 12:27:49.378 UTC\n# interface MgmtEth0/RP0/CPU0/0\n#  ipv4 address dhcp\n# !\n# interface GigabitEthernet0/0/0/0\n#  shutdown\n#  ipv4 access-group acl_1 ingress\n#  ipv4 access-group acl_2 egress\n#  ipv6 access-group acl6_1 ingress\n#  ipv6 access-group acl6_2 egress\n# !\n# interface GigabitEthernet0/0/0/1\n#  shutdown\n#  ipv4 access-group acl_1 ingress\n#  ipv4 access-group acl_2 egress\n# !\n#\n\n# Using replaced\n\n# Before state:\n# -------------\n#\n# RP/0/RP0/CPU0:ios#sh running-config interface\n# Wed Jan 15 12:34:56.689 UTC\n# interface MgmtEth0/RP0/CPU0/0\n#  ipv4 address dhcp\n# !\n# interface GigabitEthernet0/0/0/0\n#  shutdown\n#  ipv4 access-group acl_1 ingress\n#  ipv4 access-group acl_2 egress\n#  ipv6 access-group acl6_1 ingress\n#  ipv6 access-group acl6_2 egress\n# !\n# interface GigabitEthernet0/0/0/1\n#  shutdown\n#  ipv4 access-group acl_1 egress\n# !\n\n- name: Replace device configurations of listed interface with provided configurations\n  cisco.iosxr.iosxr_acl_interfaces:\n    config:\n    - name: GigabitEthernet0/0/0/0\n      access_groups:\n      - afi: ipv6\n        acls:\n        - name: acl6_3\n          direction: in\n    state: replaced\n\n# After state:\n# -------------\n#\n# RP/0/RP0/CPU0:ios#sh running-config interface\n# Wed Jan 15 12:34:56.689 UTC\n# interface MgmtEth0/RP0/CPU0/0\n#  ipv4 address dhcp\n# !\n# interface GigabitEthernet0/0/0/0\n#  shutdown\n#  ipv6 access-group acl6_3 ingress\n# !\n# interface GigabitEthernet0/0/0/1\n#  shutdown\n#  ipv4 access-group acl_1 egress\n# !\n#\n\n# Using overridden\n\n# Before state:\n# -------------\n#\n# RP/0/RP0/CPU0:ios#sh running-config interface\n# Wed Jan 15 12:34:56.689 UTC\n# interface MgmtEth0/RP0/CPU0/0\n#  ipv4 address dhcp\n# !\n# interface GigabitEthernet0/0/0/0\n#  shutdown\n#  ipv4 access-group acl_1 ingress\n#  ipv4 access-group acl_2 egress\n#  ipv6 access-group acl6_1 ingress\n#  ipv6 access-group acl6_2 egress\n# !\n# interface GigabitEthernet0/0/0/1\n#  shutdown\n#  ipv4 access-group acl_1 egress\n# !\n#\n\n- name: Overridde all interface ACL configuration with provided configuration\n  cisco.iosxr.iosxr_acl_interfaces:\n    config:\n    - name: GigabitEthernet0/0/0/1\n      access_groups:\n      - afi: ipv4\n        acls:\n        - name: acl_2\n          direction: in\n      - afi: ipv6\n        acls:\n        - name: acl6_3\n          direction: out\n    state: overridden\n\n# After state:\n# -------------\n#\n# RP/0/RP0/CPU0:ios#sh running-config interface\n# Wed Jan 15 12:34:56.689 UTC\n# interface MgmtEth0/RP0/CPU0/0\n#  ipv4 address dhcp\n# !\n# interface GigabitEthernet0/0/0/0\n#  shutdown\n# !\n# interface GigabitEthernet0/0/0/1\n#  shutdown\n#  ipv4 access-group acl_2 ingress\n#  ipv6 access-group acl6_3 egress\n# !\n#\n\n# Using 'deleted' to delete all ACL attributes of a single interface\n\n# Before state:\n# -------------\n#\n# RP/0/RP0/CPU0:ios#sh running-config interface\n# Wed Jan 15 12:34:56.689 UTC\n# interface MgmtEth0/RP0/CPU0/0\n#  ipv4 address dhcp\n# !\n# interface GigabitEthernet0/0/0/0\n#  shutdown\n#  ipv4 access-group acl_1 ingress\n#  ipv4 access-group acl_2 egress\n#  ipv6 access-group acl6_1 ingress\n#  ipv6 access-group acl6_2 egress\n# !\n# interface GigabitEthernet0/0/0/1\n#  shutdown\n#  ipv4 access-group acl_1 egress\n# !\n#\n\n- name: Delete all ACL attributes of GigabitEthernet0/0/0/1\n  cisco.iosxr.iosxr_acl_interfaces:\n    config:\n    - name: GigabitEthernet0/0/0/1\n    state: deleted\n\n# After state:\n# -------------\n#\n# RP/0/RP0/CPU0:ios#sh running-config interface\n# Wed Jan 15 12:34:56.689 UTC\n# interface MgmtEth0/RP0/CPU0/0\n#  ipv4 address dhcp\n# !\n# interface GigabitEthernet0/0/0/0\n#  shutdown\n#  ipv4 access-group acl_1 ingress\n#  ipv4 access-group acl_2 egress\n#  ipv6 access-group acl6_1 ingress\n#  ipv6 access-group acl6_2 egress\n# !\n# interface GigabitEthernet0/0/0/1\n#  shutdown\n# !\n#\n\n# Using 'deleted' to remove all ACLs attached to all the interfaces in the device\n\n# Before state:\n# -------------\n#\n# RP/0/RP0/CPU0:ios#sh running-config interface\n# Wed Jan 15 12:34:56.689 UTC\n# interface MgmtEth0/RP0/CPU0/0\n#  ipv4 address dhcp\n# !\n# interface GigabitEthernet0/0/0/0\n#  shutdown\n#  ipv4 access-group acl_1 ingress\n#  ipv4 access-group acl_2 egress\n#  ipv6 access-group acl6_1 ingress\n#  ipv6 access-group acl6_2 egress\n# !\n# interface GigabitEthernet0/0/0/1\n#  shutdown\n#  ipv4 access-group acl_1 egress\n# !\n#\n\n- name: Delete all ACL interfaces configuration from the device\n  cisco.iosxr.iosxr_acl_interfaces:\n    state: deleted\n\n# After state:\n# -------------\n#\n# RP/0/RP0/CPU0:ios#sh running-config interface\n# Wed Jan 15 12:34:56.689 UTC\n# interface MgmtEth0/RP0/CPU0/0\n#  ipv4 address dhcp\n# !\n# interface GigabitEthernet0/0/0/0\n#  shutdown\n# !\n# interface GigabitEthernet0/0/0/1\n#  shutdown\n# !\n#\n\n# Using parsed\n\n# parsed.cfg\n# ------------\n#\n# interface MgmtEth0/RP0/CPU0/0\n#  ipv4 address dhcp\n# !\n# interface GigabitEthernet0/0/0/0\n#  shutdown\n#  ipv4 access-group acl_1 ingress\n#  ipv4 access-group acl_2 egress\n#  ipv6 access-group acl6_1 ingress\n#  ipv6 access-group acl6_2 egress\n# !\n# interface GigabitEthernet0/0/0/1\n#  shutdown\n#  ipv4 access-group acl_1 egress\n# !\n\n# - name: Convert ACL interfaces config to argspec without connecting to the appliance\n#   cisco.iosxr.iosxr_acl_interfaces:\n#     running_config: \"{{ lookup('file', './parsed.cfg') }}\"\n#     state: parsed\n\n\n# Task Output (redacted)\n# -----------------------\n\n# \"parsed\": [\n#        {\n#            \"name\": \"MgmtEth0/RP0/CPU0/0\"\n#        },\n#        {\n#            \"access_groups\": [\n#                {\n#                    \"acls\": [\n#                        {\n#                            \"direction\": \"in\",\n#                            \"name\": \"acl_1\"\n#                        },\n#                        {\n#                            \"direction\": \"out\",\n#                            \"name\": \"acl_2\"\n#                        }\n#                    ],\n#                    \"afi\": \"ipv4\"\n#                },\n#                {\n#                    \"acls\": [\n#                        {\n#                            \"direction\": \"in\",\n#                            \"name\": \"acl6_1\"\n#                        },\n#                        {\n#                            \"direction\": \"out\",\n#                            \"name\": \"acl6_2\"\n#                        }\n#                    ],\n#                    \"afi\": \"ipv6\"\n#                }\n#            ],\n#            \"name\": \"GigabitEthernet0/0/0/0\"\n#        },\n#        {\n#            \"access_groups\": [\n#                {\n#                    \"acls\": [\n#                        {\n#                            \"direction\": \"out\",\n#                            \"name\": \"acl_1\"\n#                        }\n#                    ],\n#                    \"afi\": \"ipv4\"\n#                }\n#            ],\n#            \"name\": \"GigabitEthernet0/0/0/1\"\n#        }\n#    ]\n# }\n\n\n# Using gathered\n\n- name: Gather ACL interfaces facts using gathered state\n  cisco.iosxr.iosxr_acl_interfaces:\n    state: gathered\n\n\n# Task Output (redacted)\n# -----------------------\n#\n# \"gathered\": [\n#   {\n#      \"name\": \"MgmtEth0/RP0/CPU0/0\"\n#   },\n#   {\n#      \"access_groups\": [\n#          {\n#              \"acls\": [\n#                  {\n#                      \"direction\": \"in\",\n#                      \"name\": \"acl_1\"\n#                  },\n#                  {\n#                      \"direction\": \"out\",\n#                      \"name\": \"acl_2\"\n#                  }\n#              ],\n#              \"afi\": \"ipv4\"\n#          }\n#      \"name\": \"GigabitEthernet0/0/0/0\"\n#  },\n#  {\n#      \"access_groups\": [\n#          {\n#              \"acls\": [\n#                  {\n#                      \"direction\": \"in\",\n#                      \"name\": \"acl6_1\"\n#                  }\n#              ],\n#              \"afi\": \"ipv6\"\n#          }\n#       \"name\": \"GigabitEthernet0/0/0/1\"\n#   }\n# ]\n\n\n# Using rendered\n\n- name: Render platform specific commands from task input using rendered state\n  cisco.iosxr.iosxr_acl_interfaces:\n    config:\n    - name: GigabitEthernet0/0/0/0\n      access_groups:\n      - afi: ipv4\n        acls:\n        - name: acl_1\n          direction: in\n        - name: acl_2\n          direction: out\n    state: rendered\n\n# Task Output (redacted)\n# -----------------------\n\n# \"rendered\": [\n#     \"interface GigabitEthernet0/0/0/0\",\n#     \"ipv4 access-group acl_1 ingress\",\n#     \"ipv4 access-group acl_2 egress\"\n# ]\n"
  },
  "cisco.iosxr.iosxr_acls": {
    "doc": {
      "description": "This module manages Access Control Lists (ACLs) on devices running IOS-XR.",
      "has_action": true,
      "options": {
        "config": {
          "aliases": [],
          "description": "A list of dictionaries specifying ACL configurations.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "acls": {
              "aliases": [],
              "description": "A list of Access Control Lists (ACLs).",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "aces": {
                  "aliases": [],
                  "description": "List of Access Control Entries (ACEs) for this Access Control List (ACL).",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "authen": {
                      "aliases": [],
                      "description": "Match if authentication header is present.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "capture": {
                      "aliases": [],
                      "description": "Capture matched packet.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "destination": {
                      "aliases": [],
                      "description": "Specifies the packet destination.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "address": {
                          "aliases": [],
                          "description": "The destination IP address to match.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "any": {
                          "aliases": [],
                          "description": "Match any destination address.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "host": {
                          "aliases": [],
                          "description": "The host IP address to match.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "net_group": {
                          "aliases": [],
                          "description": "Name of net-group.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "port_group": {
                          "aliases": [],
                          "description": "Name of port-group.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "port_protocol": {
                          "aliases": [],
                          "description": "Specify the source port or protocol.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "eq": {
                              "aliases": [],
                              "description": "Match only packets on a given port number.",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            },
                            "gt": {
                              "aliases": [],
                              "description": "Match only packets with a greater port number.",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            },
                            "lt": {
                              "aliases": [],
                              "description": "Match only packets with a lower port number.",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            },
                            "neq": {
                              "aliases": [],
                              "description": "Match only packets not on a given port number.",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            },
                            "range": {
                              "aliases": [],
                              "description": "Match only packets in the range of port numbers",
                              "type": "dict",
                              "required": false,
                              "suboptions": {
                                "end": {
                                  "aliases": [],
                                  "description": "Specify the end of the port range",
                                  "type": "str",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "start": {
                                  "aliases": [],
                                  "description": "Specify the start of the port range",
                                  "type": "str",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            }
                          }
                        },
                        "prefix": {
                          "aliases": [],
                          "description": "Destination network prefix.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "wildcard_bits": {
                          "aliases": [],
                          "description": "The Wildcard bits to apply to destination address.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "destopts": {
                      "aliases": [],
                      "description": "Match if destination opts header is present.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "dscp": {
                      "aliases": [],
                      "description": "Match packets with given DSCP value.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "eq": {
                          "aliases": [],
                          "description": "Match only packets on a given dscp value",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "gt": {
                          "aliases": [],
                          "description": "Match only packets with a greater dscp value",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "lt": {
                          "aliases": [],
                          "description": "Match only packets with a lower dscp value",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "neq": {
                          "aliases": [],
                          "description": "Match only packets not on a given dscp value",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "range": {
                          "aliases": [],
                          "description": "Match only packets in the range of dscp values",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "end": {
                              "aliases": [],
                              "description": "End of the dscp range",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            },
                            "start": {
                              "aliases": [],
                              "description": "Start of the dscp range",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        }
                      }
                    },
                    "fragments": {
                      "aliases": [],
                      "description": "Check non-intial fragments.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "grant": {
                      "aliases": [],
                      "description": "Forward or drop packets matching the Access Control Entry (ACE).",
                      "type": "str",
                      "required": false,
                      "choices": [
                        "permit",
                        "deny"
                      ],
                      "suboptions": {}
                    },
                    "hop_by_hop": {
                      "aliases": [],
                      "description": "Match if hop-by-hop opts header is present.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "icmp_off": {
                      "aliases": [],
                      "description": "Enable/disable the ICMP message for this entry.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "line": {
                      "aliases": [
                        "ace"
                      ],
                      "description": "An ACE excluding the sequence number.\nThis key is mutually exclusive with all the other attributes except 'sequence'.\nWhen used with other attributes, the value of this key will get precedence and the other keys will be ignored.\nThis should only be used when an attribute doesn't exist in the argspec but is valid for the device.\nFor fact gathering, any ACE that is not fully parsed, will show up as a value of this attribute, excluding the sequence number, which will be populated as value of the sequence key.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "log": {
                      "aliases": [],
                      "description": "Enable/disable log matches against this entry.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "log_input": {
                      "aliases": [],
                      "description": "Enable/disable log matches against this entry, including input interface.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "packet_length": {
                      "aliases": [],
                      "description": "Match packets given packet length.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "eq": {
                          "aliases": [],
                          "description": "Match only packets on a given packet length",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "gt": {
                          "aliases": [],
                          "description": "Match only packets with a greater packet length",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "lt": {
                          "aliases": [],
                          "description": "Match only packets with a lower packet length",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "neq": {
                          "aliases": [],
                          "description": "Match only packets not on a given packet length",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "range": {
                          "aliases": [],
                          "description": "Match only packets in the range of packet lengths",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "end": {
                              "aliases": [],
                              "description": "End of the packet length range",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "start": {
                              "aliases": [],
                              "description": "Start of the packet length range",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        }
                      }
                    },
                    "precedence": {
                      "aliases": [],
                      "description": "Match packets with given precedence value",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "protocol": {
                      "aliases": [],
                      "description": "Specify the protocol to match.\nRefer to vendor documentation for valid values.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "protocol_options": {
                      "aliases": [],
                      "description": "Additional suboptions for the protocol.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "icmp": {
                          "aliases": [],
                          "description": "Internet Control Message Protocol settings.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "administratively_prohibited": {
                              "aliases": [],
                              "description": "Administratively prohibited",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "alternate_address": {
                              "aliases": [],
                              "description": "Alternate address",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "conversion_error": {
                              "aliases": [],
                              "description": "Datagram conversion",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "dod_host_prohibited": {
                              "aliases": [],
                              "description": "Host prohibited",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "dod_net_prohibited": {
                              "aliases": [],
                              "description": "Net prohibited",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "echo": {
                              "aliases": [],
                              "description": "Echo (ping)",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "echo_reply": {
                              "aliases": [],
                              "description": "Echo reply",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "general_parameter_problem": {
                              "aliases": [],
                              "description": "Parameter problem",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "host_isolated": {
                              "aliases": [],
                              "description": "Host isolated",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "host_precedence_unreachable": {
                              "aliases": [],
                              "description": "Host unreachable for precedence",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "host_redirect": {
                              "aliases": [],
                              "description": "Host redirect",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "host_tos_redirect": {
                              "aliases": [],
                              "description": "Host redirect for TOS",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "host_tos_unreachable": {
                              "aliases": [],
                              "description": "Host unreachable for TOS",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "host_unknown": {
                              "aliases": [],
                              "description": "Host unknown",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "host_unreachable": {
                              "aliases": [],
                              "description": "Host unreachable",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "information_reply": {
                              "aliases": [],
                              "description": "Information replies",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "information_request": {
                              "aliases": [],
                              "description": "Information requests",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "mask_reply": {
                              "aliases": [],
                              "description": "Mask replies",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "mask_request": {
                              "aliases": [],
                              "description": "Mask requests",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "mobile_redirect": {
                              "aliases": [],
                              "description": "Mobile host redirect",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "net_redirect": {
                              "aliases": [],
                              "description": "Network redirect",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "net_tos_redirect": {
                              "aliases": [],
                              "description": "Net redirect for TOS",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "net_tos_unreachable": {
                              "aliases": [],
                              "description": "Network unreachable for TOS",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "net_unreachable": {
                              "aliases": [],
                              "description": "Net unreachable",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "network_unknown": {
                              "aliases": [],
                              "description": "Network unknown",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "no_room_for_option": {
                              "aliases": [],
                              "description": "Parameter required but no room",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "option_missing": {
                              "aliases": [],
                              "description": "Parameter required but not present",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "packet_too_big": {
                              "aliases": [],
                              "description": "Fragmentation needed and DF set",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "parameter_problem": {
                              "aliases": [],
                              "description": "All parameter problems",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "port_unreachable": {
                              "aliases": [],
                              "description": "Port unreachable",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "precedence_unreachable": {
                              "aliases": [],
                              "description": "Precedence cutoff",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "protocol_unreachable": {
                              "aliases": [],
                              "description": "Protocol unreachable",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "reassembly_timeout": {
                              "aliases": [],
                              "description": "Reassembly timeout",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "redirect": {
                              "aliases": [],
                              "description": "All redirects",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "router_advertisement": {
                              "aliases": [],
                              "description": "Router discovery advertisements",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "router_solicitation": {
                              "aliases": [],
                              "description": "Router discovery solicitations",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "source_quench": {
                              "aliases": [],
                              "description": "Source quenches",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "source_route_failed": {
                              "aliases": [],
                              "description": "Source route failed",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "time_exceeded": {
                              "aliases": [],
                              "description": "All time exceededs",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "timestamp_reply": {
                              "aliases": [],
                              "description": "Timestamp replies",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "timestamp_request": {
                              "aliases": [],
                              "description": "Timestamp requests",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "traceroute": {
                              "aliases": [],
                              "description": "Traceroute",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "ttl_exceeded": {
                              "aliases": [],
                              "description": "TTL exceeded",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "unreachable": {
                              "aliases": [],
                              "description": "All unreachables",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "icmpv6": {
                          "aliases": [],
                          "description": "Internet Control Message Protocol settings for IPv6.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "address_unreachable": {
                              "aliases": [],
                              "description": "Address Unreachable",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "administratively_prohibited": {
                              "aliases": [],
                              "description": "Administratively Prohibited",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "beyond_scope_of_source_address": {
                              "aliases": [],
                              "description": "Administratively Prohibited",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "destination_unreachable": {
                              "aliases": [],
                              "description": "Destination Unreachable",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "echo": {
                              "aliases": [],
                              "description": "Echo",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "echo_reply": {
                              "aliases": [],
                              "description": "Echo Reply",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "erroneous_header_field": {
                              "aliases": [],
                              "description": "Erroneous Header Field",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "group_membership_query": {
                              "aliases": [],
                              "description": "Group Membership Query",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "group_membership_report": {
                              "aliases": [],
                              "description": "Group Membership Report",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "group_membership_termination": {
                              "aliases": [],
                              "description": "Group Membership Termination",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "host_unreachable": {
                              "aliases": [],
                              "description": "Host Unreachable",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "nd_na": {
                              "aliases": [],
                              "description": "Neighbor Discovery - Neighbor Advertisement",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "nd_ns": {
                              "aliases": [],
                              "description": "Neighbor Discovery - Neighbor Solicitation",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "neighbor_redirect": {
                              "aliases": [],
                              "description": "Neighbor Redirect",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "no_route_to_destination": {
                              "aliases": [],
                              "description": "No Route To Destination",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "node_information_request_is_refused": {
                              "aliases": [],
                              "description": "Node Information Request Is Refused",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "node_information_successful_reply": {
                              "aliases": [],
                              "description": "Node Information Successful Reply",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "packet_too_big": {
                              "aliases": [],
                              "description": "Packet Too Big",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "parameter_problem": {
                              "aliases": [],
                              "description": "Parameter Problem",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "port_unreachable": {
                              "aliases": [],
                              "description": "Port Unreachable",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "query_subject_is_IPv4address": {
                              "aliases": [],
                              "description": "Query Subject Is IPv4 address",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "query_subject_is_IPv6address": {
                              "aliases": [],
                              "description": "Query Subject Is IPv6 address",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "query_subject_is_domainname": {
                              "aliases": [],
                              "description": "Query Subject Is Domain name",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "reassembly_timeout": {
                              "aliases": [],
                              "description": "Reassembly Timeout",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "redirect": {
                              "aliases": [],
                              "description": "Redirect",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "router_advertisement": {
                              "aliases": [],
                              "description": "Router Advertisement",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "router_renumbering": {
                              "aliases": [],
                              "description": "Router Renumbering",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "router_solicitation": {
                              "aliases": [],
                              "description": "Router Solicitation",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "rr_command": {
                              "aliases": [],
                              "description": "RR Command",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "rr_result": {
                              "aliases": [],
                              "description": "RR Result",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "rr_seqnum_reset": {
                              "aliases": [],
                              "description": "RR Seqnum Reset",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "time_exceeded": {
                              "aliases": [],
                              "description": "Time Exceeded",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "ttl_exceeded": {
                              "aliases": [],
                              "description": "TTL Exceeded",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "unknown_query_type": {
                              "aliases": [],
                              "description": "Unknown Query Type",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "unreachable": {
                              "aliases": [],
                              "description": "Unreachable",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "unrecognized_next_header": {
                              "aliases": [],
                              "description": "Unrecognized Next Header",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "unrecognized_option": {
                              "aliases": [],
                              "description": "Unrecognized Option",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "whoareyou_reply": {
                              "aliases": [],
                              "description": "Whoareyou Reply",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "whoareyou_request": {
                              "aliases": [],
                              "description": "Whoareyou Request",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "igmp": {
                          "aliases": [],
                          "description": "Internet Group Management Protocol (IGMP) settings.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "dvmrp": {
                              "aliases": [],
                              "description": "Match Distance Vector Multicast Routing Protocol",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "host_query": {
                              "aliases": [],
                              "description": "Match Host Query",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "host_report": {
                              "aliases": [],
                              "description": "Match Host Report",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "mtrace": {
                              "aliases": [],
                              "description": "Match mtrace",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "mtrace_response": {
                              "aliases": [],
                              "description": "Match mtrace response",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "pim": {
                              "aliases": [],
                              "description": "Match Protocol Independent Multicast",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "trace": {
                              "aliases": [],
                              "description": "Multicast trace",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "tcp": {
                          "aliases": [],
                          "description": "Match TCP packet flags",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "ack": {
                              "aliases": [],
                              "description": "Match on the ACK bit",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "established": {
                              "aliases": [],
                              "description": "Match established connections",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "fin": {
                              "aliases": [],
                              "description": "Match on the FIN bit",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "psh": {
                              "aliases": [],
                              "description": "Match on the PSH bit",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "rst": {
                              "aliases": [],
                              "description": "Match on the RST bit",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "syn": {
                              "aliases": [],
                              "description": "Match on the SYN bit",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "urg": {
                              "aliases": [],
                              "description": "Match on the URG bit",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        }
                      }
                    },
                    "remark": {
                      "aliases": [],
                      "description": "Comments or a description for the access list.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "routing": {
                      "aliases": [],
                      "description": "Match if routing header is present.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "sequence": {
                      "aliases": [],
                      "description": "Sequence number for the Access Control Entry (ACE).",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "source": {
                      "aliases": [],
                      "description": "Specifies the packet source.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "address": {
                          "aliases": [],
                          "description": "The source IP address to match.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "any": {
                          "aliases": [],
                          "description": "Match any source address.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "host": {
                          "aliases": [],
                          "description": "The host IP address to match.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "net_group": {
                          "aliases": [],
                          "description": "Name of net-group.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "port_group": {
                          "aliases": [],
                          "description": "Name of port-group.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "port_protocol": {
                          "aliases": [],
                          "description": "Specify the source port or protocol.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "eq": {
                              "aliases": [],
                              "description": "Match only packets on a given port number.",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            },
                            "gt": {
                              "aliases": [],
                              "description": "Match only packets with a greater port number.",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            },
                            "lt": {
                              "aliases": [],
                              "description": "Match only packets with a lower port number.",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            },
                            "neq": {
                              "aliases": [],
                              "description": "Match only packets not on a given port number.",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            },
                            "range": {
                              "aliases": [],
                              "description": "Match only packets in the range of port numbers",
                              "type": "dict",
                              "required": false,
                              "suboptions": {
                                "end": {
                                  "aliases": [],
                                  "description": "Specify the end of the port range",
                                  "type": "str",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "start": {
                                  "aliases": [],
                                  "description": "Specify the start of the port range",
                                  "type": "str",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            }
                          }
                        },
                        "prefix": {
                          "aliases": [],
                          "description": "Source network prefix.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "wildcard_bits": {
                          "aliases": [],
                          "description": "The Wildcard bits to apply to source address.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "ttl": {
                      "aliases": [],
                      "description": "Match against specified TTL value.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "eq": {
                          "aliases": [],
                          "description": "Match only packets with exact TTL value.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "gt": {
                          "aliases": [],
                          "description": "Match only packets with a greater TTL value.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "lt": {
                          "aliases": [],
                          "description": "Match only packets with a lower TTL value.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "neq": {
                          "aliases": [],
                          "description": "Match only packets that won't have the given TTL value.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "range": {
                          "aliases": [],
                          "description": "Match only packets in the range of given TTL values.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "end": {
                              "aliases": [],
                              "description": "End of the TTL range.",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "start": {
                              "aliases": [],
                              "description": "Start of the TTL range.",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "name": {
                  "aliases": [],
                  "description": "The name of the Access Control List (ACL).",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "afi": {
              "aliases": [],
              "description": "The Address Family Indicator (AFI) for the Access Control Lists (ACL).",
              "type": "str",
              "required": true,
              "choices": [
                "ipv4",
                "ipv6"
              ],
              "suboptions": {}
            }
          }
        },
        "running_config": {
          "aliases": [],
          "description": "The module, by default, will connect to the remote device and retrieve the current running-config to use as a base for comparing against the contents of source. There are times when it is not desirable to have the task get the current running-config for every task in a playbook.  The I(running_config) argument allows the implementer to pass in the configuration to use as the base config for comparison. This value of this option should be the output received from device by executing command B(show running-config router static).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The state the configuration should be left in.",
          "default": "merged",
          "type": "str",
          "required": false,
          "choices": [
            "merged",
            "replaced",
            "overridden",
            "deleted",
            "gathered",
            "rendered",
            "parsed"
          ],
          "suboptions": {}
        }
      },
      "short_description": "ACLs resource module",
      "version_added": "1.0.0"
    },
    "examples": "\n# Using merged to add new ACLs\n\n# Before state:\n# -------------\n\n# RP/0/RP0/CPU0:ios#sh access-lists afi-all\n# Thu Feb 20 05:07:45.767 UTC\n# RP/0/RP0/CPU0:ios#\n\n- name: Merge the provided configuration with the existing running configuration\n  cisco.iosxr.iosxr_acls:\n    config:\n    - afi: ipv6\n      acls:\n      - name: acl6_1\n        aces:\n        - sequence: 10\n          grant: deny\n          protocol: tcp\n          source:\n            prefix: 2001:db8:1234::/48\n            port_protocol:\n              range:\n                start: ftp\n                end: telnet\n          destination:\n            any: true\n          protocol_options:\n            tcp:\n              syn: true\n          ttl:\n            range:\n              start: 180\n              end: 250\n          routing: true\n          authen: true\n          log: true\n\n        - sequence: 20\n          grant: permit\n          protocol: icmpv6\n          source:\n            any: true\n          destination:\n            any: true\n          protocol_options:\n            icmpv6:\n              router_advertisement: true\n          precedence: network\n          destopts: true\n\n    - afi: ipv4\n      acls:\n      - name: acl_1\n        aces:\n        - sequence: 16\n          remark: TEST_ACL_1_REMARK\n\n        - sequence: 21\n          grant: permit\n          protocol: tcp\n          source:\n            host: 192.0.2.10\n            port_protocol:\n              range:\n                start: pop3\n                end: 121\n          destination:\n            address: 198.51.100.0\n            wildcard_bits: 0.0.0.15\n          protocol_options:\n            tcp:\n              rst: true\n\n        - sequence: 23\n          grant: deny\n          protocol: icmp\n          source:\n            any: true\n          destination:\n            prefix: 198.51.100.0/28\n          protocol_options:\n            icmp:\n              reassembly_timeout: true\n          dscp:\n            lt: af12\n\n      - name: acl_2\n        aces:\n        - sequence: 10\n          remark: TEST_ACL_2_REMARK\n    state: merged\n\n# After state:\n# -------------\n\n# RP/0/RP0/CPU0:ios#sh access-lists afi-all\n# Thu Feb 20 05:22:57.021 UTC\n# ipv4 access-list acl_1\n#  16 remark TEST_ACL_1_REMARK\n#  21 permit tcp host 192.0.2.10 range pop3 121 198.51.100.0 0.0.0.15 rst\n#  23 deny icmp any 198.51.100.0 0.0.0.15 reassembly-timeout dscp lt af12\n# ipv4 access-list acl_2\n#  10 remark TEST_ACL_2_REMARK\n# ipv6 access-list acl6_1\n#  10 deny tcp 2001:db8:1234::/48 range ftp telnet any syn ttl range 180 250 routing authen log\n#  20 permit icmpv6 any any router-advertisement precedence network destopts\n\n# Using merged to update existing ACLs\n\n# Before state:\n# -------------\n\n# RP/0/RP0/CPU0:ios#sh access-lists afi-all\n# Thu Feb 20 05:22:57.021 UTC\n# ipv4 access-list acl_1\n#  16 remark TEST_ACL_1_REMARK\n#  21 permit tcp host 192.0.2.10 range pop3 121 198.51.100.0 0.0.0.15 rst\n#  23 deny icmp any 198.51.100.0 0.0.0.15 reassembly-timeout dscp lt af12\n# ipv4 access-list acl_2\n#  10 remark TEST_ACL_2_REMARK\n# ipv6 access-list acl6_1\n#  10 deny tcp 2001:db8:1234::/48 range ftp telnet any syn ttl range 180 250 routing authen log\n#  20 permit icmpv6 any any router-advertisement precedence network destopts\n\n- name: Update existing ACEs\n  cisco.iosxr.iosxr_acls:\n    config:\n    - afi: ipv4\n      acls:\n      - name: acl_1\n        aces:\n        - sequence: 21\n          source:\n            prefix: 198.51.100.32/28\n            port_protocol:\n              range:\n                start: pop3\n                end: 121\n          protocol_options:\n            tcp:\n              syn: true\n\n        - sequence: 23\n          protocol_options:\n            icmp:\n              router_advertisement: true\n          dscp:\n            eq: af23\n\n# After state:\n# -------------\n\n# RP/0/RP0/CPU0:ios#sh access-lists afi-all\n# Thu Feb 20 05:47:18.711 UTC\n# ipv4 access-list acl_1\n#  16 remark TEST_ACL_1_REMARK\n#  21 permit tcp 198.51.100.32 0.0.0.15 range pop3 121 198.51.100.0 0.0.0.15 syn\n#  23 deny icmp any 198.51.100.0 0.0.0.15 router-advertisement dscp eq af23\n# ipv4 access-list acl_2\n#  10 remark TEST_ACL_2_REMARK\n# ipv6 access-list acl6_1\n#  10 deny tcp 2001:db8:1234::/48 range ftp telnet any syn ttl range 180 250 routing authen log\n#  20 permit icmpv6 any any router-advertisement precedence network destopts\n\n# Using replaced to replace a whole ACL\n\n# Before state:\n# -------------\n\n# RP/0/RP0/CPU0:ios#sh access-lists afi-all\n# Thu Feb 20 05:22:57.021 UTC\n# ipv4 access-list acl_1\n#  16 remark TEST_ACL_1_REMARK\n#  21 permit tcp host 192.0.2.10 range pop3 121 198.51.100.0 0.0.0.15 rst\n#  23 deny icmp any 198.51.100.0 0.0.0.15 reassembly-timeout dscp lt af12\n# ipv4 access-list acl_2\n#  10 remark TEST_ACL_2_REMARK\n# ipv6 access-list acl6_1\n#  10 deny tcp 2001:db8:1234::/48 range ftp telnet any syn ttl range 180 250 routing authen log\n#  20 permit icmpv6 any any router-advertisement precedence network destopts\n\n- name: Replace device configurations of listed ACL with provided configurations\n  cisco.iosxr.iosxr_acls:\n    config:\n    - afi: ipv4\n      acls:\n      - name: acl_2\n        aces:\n        - sequence: 11\n          grant: permit\n          protocol: igmp\n          source:\n            host: 198.51.100.130\n          destination:\n            any: true\n          ttl:\n            eq: 100\n\n        - sequence: 12\n          grant: deny\n          source:\n            any: true\n          destination:\n            any: true\n          protocol: icmp\n    state: replaced\n\n# After state:\n# -------------\n\n# RP/0/RP0/CPU0:ios#sh access-lists afi-all\n# Thu Feb 20 06:19:51.496 UTC\n# ipv4 access-list acl_1\n#  16 remark TEST_ACL_1_REMARK\n#  21 permit tcp 198.51.100.32 0.0.0.15 range pop3 121 198.51.100.0 0.0.0.15 syn\n#  23 deny icmp any 198.51.100.0 0.0.0.15 router-advertisement dscp eq af23\n# ipv4 access-list acl_2\n#  11 permit igmp host 198.51.100.130 any ttl eq 100\n#  12 deny icmp any any\n# ipv6 access-list acl6_1\n#  10 deny tcp 2001:db8:1234::/48 range ftp telnet any syn ttl range 180 250 routing authen log\n#  20 permit icmpv6 any any router-advertisement precedence network destopts\n\n# Using overridden to override all ACLs in the device\n\n# Before state:\n# -------------\n\n# RP/0/RP0/CPU0:ios#sh access-lists afi-all\n# Thu Feb 20 05:22:57.021 UTC\n# ipv4 access-list acl_1\n#  16 remark TEST_ACL_1_REMARK\n#  21 permit tcp host 192.0.2.10 range pop3 121 198.51.100.0 0.0.0.15 rst\n#  23 deny icmp any 198.51.100.0 0.0.0.15 reassembly-timeout dscp lt af12\n# ipv4 access-list acl_2\n#  10 remark TEST_ACL_2_REMARK\n# ipv6 access-list acl6_1\n#  10 deny tcp 2001:db8:1234::/48 range ftp telnet any syn ttl range 180 250 routing authen log\n#  20 permit icmpv6 any any router-advertisement precedence network destopts\n\n- name: Overridde all ACLs configuration with provided configuration\n  cisco.iosxr.iosxr_acls:\n    config:\n    - afi: ipv4\n      acls:\n      - name: acl_1\n        aces:\n        - sequence: 10\n          grant: permit\n          source:\n            any: true\n          destination:\n            any: true\n          protocol: tcp\n\n      - name: acl_2\n        aces:\n        - sequence: 20\n          grant: permit\n          source:\n            any: true\n          destination:\n            any: true\n          protocol: igmp\n    state: overridden\n\n# After state:\n# -------------\n\n# RP/0/RP0/CPU0:ios#sh access-lists afi-all\n# Thu Feb 20 06:31:22.178 UTC\n# ipv4 access-list acl_1\n#  10 permit tcp any any\n# ipv4 access-list acl_2\n#  20 permit igmp any any\n\n# Using deleted to delete an entire ACL\n\n# Before state:\n# -------------\n\n# RP/0/RP0/CPU0:ios#sh access-lists afi-all\n# Thu Feb 20 05:22:57.021 UTC\n# ipv4 access-list acl_1\n#  16 remark TEST_ACL_1_REMARK\n#  21 permit tcp host 192.0.2.10 range pop3 121 198.51.100.0 0.0.0.15 rst\n#  23 deny icmp any 198.51.100.0 0.0.0.15 reassembly-timeout dscp lt af12\n# ipv4 access-list acl_2\n#  10 remark TEST_ACL_2_REMARK\n# ipv6 access-list acl6_1\n#  10 deny tcp 2001:db8:1234::/48 range ftp telnet any syn ttl range 180 250 routing authen log\n#  20 permit icmpv6 any any router-advertisement precedence network destopts\n\n- name: Delete a single ACL\n  cisco.iosxr.iosxr_acls:\n    config:\n    - afi: ipv6\n      acls:\n      - name: acl6_1\n    state: deleted\n\n# After state:\n# -------------\n\n# RP/0/RP0/CPU0:ios#sh access-lists afi-all\n# Thu Feb 20 05:22:57.021 UTC\n# ipv4 access-list acl_1\n#  16 remark TEST_ACL_1_REMARK\n#  21 permit tcp host 192.0.2.10 range pop3 121 198.51.100.0 0.0.0.15 rst\n#  23 deny icmp any 198.51.100.0 0.0.0.15 reassembly-timeout dscp lt af12\n# ipv4 access-list acl_2\n#  10 remark TEST_ACL_2_REMARK\n\n# Using deleted to delete all ACLs under one AFI\n\n# Before state:\n# -------------\n\n# RP/0/RP0/CPU0:ios#sh access-lists afi-all\n# Thu Feb 20 05:22:57.021 UTC\n# ipv4 access-list acl_1\n#  16 remark TEST_ACL_1_REMARK\n#  21 permit tcp host 192.0.2.10 range pop3 121 198.51.100.0 0.0.0.15 rst\n#  23 deny icmp any 198.51.100.0 0.0.0.15 reassembly-timeout dscp lt af12\n# ipv4 access-list acl_2\n#  10 remark TEST_ACL_2_REMARK\n# ipv6 access-list acl6_1\n#  10 deny tcp 2001:db8:1234::/48 range ftp telnet any syn ttl range 180 250 routing authen log\n#  20 permit icmpv6 any any router-advertisement precedence network destopts\n\n- name: Delete all ACLs under one AFI\n  cisco.iosxr.iosxr_acls:\n    config:\n    - afi: ipv4\n    state: deleted\n\n# After state:\n# -------------\n\n# RP/0/RP0/CPU0:ios#sh access-lists afi-all\n# Thu Feb 20 05:22:57.021 UTC\n# ipv6 access-list acl6_1\n#  10 deny tcp 2001:db8:1234::/48 range ftp telnet any syn ttl range 180 250 routing authen log\n#  20 permit icmpv6 any any router-advertisement precedence network destopts\n\n# Using deleted to delete all ACLs from the device\n\n# Before state:\n# -------------\n\n# RP/0/RP0/CPU0:ios#sh access-lists afi-all\n# Thu Feb 20 05:22:57.021 UTC\n# ipv4 access-list acl_1\n#  16 remark TEST_ACL_1_REMARK\n#  21 permit tcp host 192.0.2.10 range pop3 121 198.51.100.0 0.0.0.15 rst\n#  23 deny icmp any 198.51.100.0 0.0.0.15 reassembly-timeout dscp lt af12\n# ipv4 access-list acl_2\n#  10 remark TEST_ACL_2_REMARK\n# ipv6 access-list acl6_1\n#  10 deny tcp 2001:db8:1234::/48 range ftp telnet any syn ttl range 180 250 routing authen log\n#  20 permit icmpv6 any any router-advertisement precedence network destopts\n\n- name: Delete all ACLs from the device\n  cisco.iosxr.iosxr_acls:\n    state: deleted\n\n# After state:\n# -------------\n\n# RP/0/RP0/CPU0:ios#sh access-lists afi-all\n# Thu Feb 20 05:07:45.767 UTC\n# RP/0/RP0/CPU0:ios#\n\n# Using gathered to gather ACL facts from the device\n\n- name: Gather ACL interfaces facts using gathered state\n  cisco.iosxr.iosxr_acls:\n    state: gathered\n\n# Task Output (redacted)\n# -----------------------\n#\n\n# \"gathered\": [\n#    {\n#        \"acls\": [\n#            {\n#                \"aces\": [\n#                    {\n#                        \"remark\": \"TEST_ACL_1_REMARK\",\n#                        \"sequence\": 16\n#                    },\n#                    {\n#                        \"destination\": {\n#                            \"address\": \"198.51.100.0\",\n#                            \"wildcard_bits\": \"0.0.0.15\"\n#                        },\n#                        \"grant\": \"permit\",\n#                        \"protocol\": \"tcp\",\n#                        \"protocol_options\": {\n#                            \"tcp\": {\n#                                \"rst\": true\n#                            }\n#                        },\n#                        \"sequence\": 21,\n#                        \"source\": {\n#                            \"host\": \"192.0.2.10\",\n#                            \"port_protocol\": {\n#                                \"range\": {\n#                                    \"end\": \"121\",\n#                                    \"start\": \"pop3\"\n#                                }\n#                            }\n#                        }\n#                    },\n#                    {\n#                        \"destination\": {\n#                            \"address\": \"198.51.100.0\",\n#                            \"wildcard_bits\": \"0.0.0.15\"\n#                        },\n#                        \"dscp\": {\n#                            \"lt\": \"af12\"\n#                        },\n#                        \"grant\": \"deny\",\n#                        \"protocol\": \"icmp\",\n#                        \"protocol_options\": {\n#                            \"icmp\": {\n#                                \"reassembly_timeout\": true\n#                            }\n#                        },\n#                        \"sequence\": 23,\n#                        \"source\": {\n#                            \"any\": true\n#                        }\n#                    }\n#                ],\n#                \"name\": \"acl_1\"\n#            },\n#            {\n#                \"aces\": [\n#                    {\n#                        \"remark\": \"TEST_ACL_2_REMARK\",\n#                        \"sequence\": 10\n#                    }\n#                ],\n#                \"name\": \"acl_2\"\n#            }\n#        ],\n#        \"afi\": \"ipv4\"\n#    },\n#    {\n#        \"acls\": [\n#            {\n#                \"aces\": [\n#                    {\n#                        \"authen\": true,\n#                        \"destination\": {\n#                            \"any\": true\n#                        },\n#                        \"grant\": \"deny\",\n#                        \"log\": true,\n#                        \"protocol\": \"tcp\",\n#                        \"protocol_options\": {\n#                            \"tcp\": {\n#                                \"syn\": true\n#                            }\n#                        },\n#                        \"routing\": true,\n#                        \"sequence\": 10,\n#                        \"source\": {\n#                            \"port_protocol\": {\n#                                \"range\": {\n#                                   \"end\": \"telnet\",\n#                                   \"start\": \"ftp\"\n#                                }\n#                            },\n#                            \"prefix\": \"2001:db8:1234::/48\"\n#                        },\n#                        \"ttl\": {\n#                            \"range\": {\n#                                \"end\": 250,\n#                                \"start\": 180\n#                            }\n#                        }\n#                    },\n#                    {\n#                        \"destination\": {\n#                            \"any\": true\n#                        },\n#                        \"destopts\": true,\n#                        \"grant\": \"permit\",\n#                        \"precedence\": \"network\",\n#                        \"protocol\": \"icmpv6\",\n#                        \"protocol_options\": {\n#                            \"icmpv6\": {\n#                                \"router_advertisement\": true\n#                            }\n#                        },\n#                        \"sequence\": 20,\n#                        \"source\": {\n#                            \"any\": true\n#                        }\n#                    }\n#                ],\n#                \"name\": \"acl6_1\"\n#            }\n#        ],\n#        \"afi\": \"ipv6\"\n#    }\n#  ]\n\n# Using rendered\n\n- name: Render platform specific commands (without connecting to the device)\n  cisco.iosxr.iosxr_acls:\n    config:\n    - afi: ipv4\n      acls:\n      - name: acl_2\n        aces:\n        - sequence: 11\n          grant: permit\n          protocol: igmp\n          source:\n            host: 198.51.100.130\n          destination:\n            any: true\n          ttl:\n            eq: 100\n\n        - sequence: 12\n          grant: deny\n          source:\n            any: true\n          destination:\n            any: true\n          protocol: icmp\n    state: rendered\n\n# Task Output (redacted)\n# -----------------------\n\n# \"rendered\": [\n#    \"ipv4 access-list acl_2\",\n#    \"11 permit igmp host 198.51.100.130 any ttl eq 100\",\n#    \"12 deny icmp any any\"\n\n# Using parsed\n\n# parsed.cfg\n# ------------\n#\n# ipv4 access-list acl_1\n#  10 remark TEST_ACL_2_REMARK\n# ipv4 access-list acl_2\n#  11 deny tcp 2001:db8:1234::/48 range ftp telnet any syn ttl range 180 250 authen routing log\n#  21 permit icmpv6 any any router-advertisement precedence network packet-length eq 576 destopts\n# ipv6 access-list acl6_1\n#  10 deny tcp 2001:db8:1234::/48 range ftp telnet any syn ttl range 180 250 routing authen log\n#  20 permit icmpv6 any any router-advertisement precedence network packet-length eq 576 destopts\n\n- name: Parse externally provided ACL config to agnostic model\n  cisco.iosxr.iosxr_acls:\n    running_config: \"{{ lookup('file', 'parsed.cfg') }}\"\n    state: parsed\n\n# Task Output (redacted)\n# -----------------------\n#  \"parsed\": [\n#        {\n#            \"acls\": [\n#                {\n#                    \"aces\": [\n#                      {\n#                            \"remark\": \"TEST_ACL_2_REMARK\",\n#                            \"sequence\": 10\n#                        }\n#                    ],\n#                   \"name\": \"acl_1\"\n#                },\n#                {\n#                    \"aces\": [\n#                        {\n#                            \"authen\": true,\n#                            \"destination\": {\n#                                \"any\": true\n#                            },\n#                            \"grant\": \"deny\",\n#                            \"log\": true,\n#                            \"protocol\": \"tcp\",\n#                            \"protocol_options\": {\n#                                \"tcp\": {\n#                                    \"syn\": true\n#                                }\n#                            },\n#                            \"routing\": true,\n#                            \"sequence\": 11,\n#                            \"source\": {\n#                                \"port_protocol\": {\n#                                    \"range\": {\n#                                        \"end\": \"telnet\",\n#                                        \"start\": \"ftp\"\n#                                    }\n#                                },\n#                                \"prefix\": \"2001:db8:1234::/48\"\n#                            },\n#                            \"ttl\": {\n#                                \"range\": {\n#                                    \"end\": 250,\n#                                    \"start\": 180\n#                                }\n#                            }\n#                        },\n#                        {\n#                            \"destination\": {\n#                                \"any\": true\n#                            },\n#                            \"destopts\": true,\n#                            \"grant\": \"permit\",\n#                            \"packet_length\": {\n#                                \"eq\": 576\n#                            },\n#                            \"precedence\": \"network\",\n#                            \"protocol\": \"icmpv6\",\n#                            \"protocol_options\": {\n#                                \"icmpv6\": {\n#                                    \"router_advertisement\": true\n#                                }\n#                            },\n#                            \"sequence\": 21,\n#                            \"source\": {\n#                                \"any\": true\n#                            }\n#                        }\n#                    ],\n#                    \"name\": \"acl_2\"\n#                }\n#            ],\n#            \"afi\": \"ipv4\"\n#        },\n#        {\n#            \"acls\": [\n#                {\n#                    \"aces\": [\n#                        {\n#                            \"authen\": true,\n#                            \"destination\": {\n#                                \"any\": true\n#                            },\n#                            \"grant\": \"deny\",\n#                            \"log\": true,\n#                            \"protocol\": \"tcp\",\n#                            \"protocol_options\": {\n#                                \"tcp\": {\n#                                    \"syn\": true\n#                                }\n#                            },\n#                            \"routing\": true,\n#                            \"sequence\": 10,\n#                            \"source\": {\n#                                \"port_protocol\": {\n#                                    \"range\": {\n#                                        \"end\": \"telnet\",\n#                                        \"start\": \"ftp\"\n#                                    }\n#                                },\n#                                \"prefix\": \"2001:db8:1234::/48\"\n#                            },\n#                            \"ttl\": {\n#                                \"range\": {\n#                                    \"end\": 250,\n#                                    \"start\": 180\n#                                }\n#                            }\n#                        },\n#                        {\n#                            \"destination\": {\n#                                \"any\": true\n#                            },\n#                            \"destopts\": true,\n#                            \"grant\": \"permit\",\n#                            \"packet_length\": {\n#                                \"eq\": 576\n#                            },\n#                            \"precedence\": \"network\",\n#                            \"protocol\": \"icmpv6\",\n#                            \"protocol_options\": {\n#                                \"icmpv6\": {\n#                                    \"router_advertisement\": true\n#                                }\n#                            },\n#                            \"sequence\": 20,\n#                            \"source\": {\n#                                \"any\": true\n#                            }\n#                        }\n#                    ],\n#                    \"name\": \"acl6_1\"\n#                }\n#            ],\n#            \"afi\": \"ipv6\"\n#        }\n#    ]\n"
  },
  "cisco.iosxr.iosxr_banner": {
    "doc": {
      "description": "This module will configure both exec and motd banners on remote device running Cisco IOS XR. It allows playbooks to add or remove banner text from the running configuration.",
      "has_action": true,
      "notes": "This module works with connection C(network_cli) and C(netconf). See L(the IOS-XR Platform Options,../network/user_guide/platform_iosxr.html).\nFor more information on using Ansible to manage network devices see the :ref:`Ansible Network Guide <network_guide>`\nFor more information on using Ansible to manage Cisco devices see the `Cisco integration page <https://www.ansible.com/integrations/networks/cisco>`_.",
      "options": {
        "banner": {
          "aliases": [],
          "description": "Specifies the type of banner to configure on remote device.",
          "type": "str",
          "required": true,
          "choices": [
            "login",
            "motd"
          ],
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "B(Deprecated)\nStarting with Ansible 2.5 we recommend using C(connection: network_cli).\nFor more information please see the L(Network Guide, ../network/getting_started/network_differences.html#multiple-communication-protocols).\nHORIZONTALLINE\nA dict object containing connection details.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "host": {
              "aliases": [],
              "description": "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [],
              "description": "Specifies the password to use to authenticate the connection to the remote device.   This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "port": {
              "aliases": [],
              "description": "Specifies the port to use when building the connection to the remote device.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "ssh_keyfile": {
              "aliases": [],
              "description": "Specifies the SSH key to use to authenticate the connection to the remote device.   This value is the path to the key used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead.",
              "type": "path",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Specifies the type of connection based transport.",
              "default": "cli",
              "type": "str",
              "required": false,
              "choices": [
                "cli",
                "netconf"
              ],
              "suboptions": {}
            },
            "username": {
              "aliases": [],
              "description": "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "Existential state of the configuration on the device.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "text": {
          "aliases": [],
          "description": "Banner text to be configured. Accepts multi line string, without empty lines. When using a multi line string, the first and last characters must be the start and end delimiters for the banner Requires I(state=present).",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "ncclient >= 0.5.3 when using netconf",
        "lxml >= 4.1.1 when using netconf"
      ],
      "short_description": "Manage multiline banners on Cisco IOS XR devices",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: configure the login banner\n  cisco.iosxr.iosxr_banner:\n    banner: login\n    text: |\n      @this is my login banner\n      that contains a multiline\n      string@\n    state: present\n- name: remove the motd banner\n  cisco.iosxr.iosxr_banner:\n    banner: motd\n    state: absent\n- name: Configure banner from file\n  cisco.iosxr.iosxr_banner:\n    banner: motd\n    text: \"{{ lookup('file', './config_partial/raw_banner.cfg') }}\"\n    state: present\n"
  },
  "cisco.iosxr.iosxr_bgp": {
    "doc": {
      "description": "This module provides configuration management of global BGP parameters on devices running Cisco IOS-XR",
      "has_action": true,
      "notes": "This module works with connection C(network_cli). See L(the IOS-XR Platform Options,../network/user_guide/platform_iosxr.html).",
      "options": {
        "config": {
          "aliases": [],
          "description": "Specifies the BGP related configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "address_family": {
              "aliases": [],
              "description": "Specifies BGP address family related configurations.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "afi": {
                  "aliases": [],
                  "description": "Type of address family to configure.",
                  "type": "str",
                  "required": true,
                  "choices": [
                    "ipv4",
                    "ipv6"
                  ],
                  "suboptions": {}
                },
                "networks": {
                  "aliases": [],
                  "description": "Specify networks to announce via BGP.\nFor operation replace, this option is mutually exclusive with root level networks option.",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "masklen": {
                      "aliases": [],
                      "description": "Subnet mask length for the network to announce(e.g, 8, 16, 24, etc.).",
                      "type": "int",
                      "required": true,
                      "suboptions": {}
                    },
                    "network": {
                      "aliases": [
                        "prefix"
                      ],
                      "description": "Network ID to announce via BGP.",
                      "type": "str",
                      "required": true,
                      "suboptions": {}
                    },
                    "route_map": {
                      "aliases": [],
                      "description": "Route map to modify the attributes.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "redistribute": {
                  "aliases": [],
                  "description": "Specifies the redistribute information from another routing protocol.",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "id": {
                      "aliases": [],
                      "description": "Identifier for the routing protocol for configuring redistribute information.\nValid for protocols 'ospf', 'eigrp', 'isis' and 'ospfv3'.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "metric": {
                      "aliases": [],
                      "description": "Specifies the metric for redistributed routes.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "protocol": {
                      "aliases": [],
                      "description": "Specifies the protocol for configuring redistribute information.",
                      "type": "str",
                      "required": true,
                      "choices": [
                        "ospf",
                        "ospfv3",
                        "eigrp",
                        "isis",
                        "static",
                        "connected",
                        "lisp",
                        "mobile",
                        "rip",
                        "subscriber"
                      ],
                      "suboptions": {}
                    },
                    "route_map": {
                      "aliases": [],
                      "description": "Specifies the route map reference.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "safi": {
                  "aliases": [],
                  "description": "Specifies the type of cast for the address family.",
                  "default": "unicast",
                  "type": "str",
                  "required": false,
                  "choices": [
                    "flowspec",
                    "unicast",
                    "multicast",
                    "labeled-unicast"
                  ],
                  "suboptions": {}
                }
              }
            },
            "bgp_as": {
              "aliases": [],
              "description": "Specifies the BGP Autonomous System (AS) number to configure on the device.",
              "type": "int",
              "required": true,
              "suboptions": {}
            },
            "log_neighbor_changes": {
              "aliases": [],
              "description": "Enable/disable logging neighbor up/down and reset reason.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "neighbors": {
              "aliases": [],
              "description": "Specifies BGP neighbor related configurations.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "advertisement_interval": {
                  "aliases": [],
                  "description": "Specifies the minimum interval (in seconds) between sending BGP routing updates.\nThe range is from 0 to 600.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "description": {
                  "aliases": [],
                  "description": "Neighbor specific description.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "ebgp_multihop": {
                  "aliases": [],
                  "description": "Specifies the maximum hop count for EBGP neighbors not on directly connected networks.\nThe range is from 0 to 255.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "enabled": {
                  "aliases": [],
                  "description": "Administratively shutdown or enable a neighbor.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "neighbor": {
                  "aliases": [],
                  "description": "Neighbor router address.",
                  "type": "str",
                  "required": true,
                  "suboptions": {}
                },
                "password": {
                  "aliases": [],
                  "description": "Password to authenticate the BGP peer connection.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "remote_as": {
                  "aliases": [],
                  "description": "Remote AS of the BGP neighbor to configure.",
                  "type": "int",
                  "required": true,
                  "suboptions": {}
                },
                "tcp_mss": {
                  "aliases": [],
                  "description": "Specifies the TCP initial maximum segment size to use.\nThe range is from 68 to 10000.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "timers": {
                  "aliases": [],
                  "description": "Specifies BGP neighbor timer related configurations.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "holdtime": {
                      "aliases": [],
                      "description": "Interval after not receiving a keepalive message that the software declares a peer dead.\nThe range is from 3 to 65535.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "keepalive": {
                      "aliases": [],
                      "description": "Frequency with which the Cisco IOS-XR software sends keepalive messages to its peer.\nThe range is from 0 to 65535.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "min_neighbor_holdtime": {
                      "aliases": [],
                      "description": "Interval specifying the minimum acceptable hold-time from a BGP neighbor.\nThe minimum acceptable hold-time must be less than, or equal to, the interval specified in the holdtime argument.\nThe range is from 3 to 65535.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "update_source": {
                  "aliases": [],
                  "description": "Source of the routing updates.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "router_id": {
              "aliases": [],
              "description": "Configures the BGP routing process router-id value.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "operation": {
          "aliases": [],
          "description": "Specifies the operation to be performed on the BGP process configured on the device.\nIn case of merge, the input configuration will be merged with the existing BGP configuration on the device.\nIn case of replace, if there is a diff between the existing configuration and the input configuration, the existing configuration will be replaced by the input configuration for every option that has the diff.\nIn case of override, all the existing BGP configuration will be removed from the device and replaced with the input configuration.\nIn case of delete the existing BGP configuration will be removed from the device.",
          "default": "merge",
          "type": "str",
          "required": false,
          "choices": [
            "merge",
            "replace",
            "override",
            "delete"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Configure global BGP protocol settings on Cisco IOS-XR",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: configure global bgp as 65000\n  cisco.iosxr.iosxr_bgp:\n    bgp_as: 65000\n    router_id: 1.1.1.1\n    neighbors:\n    - neighbor: 182.168.10.1\n      remote_as: 500\n      description: PEER_1\n    - neighbor: 192.168.20.1\n      remote_as: 500\n      update_source: GigabitEthernet 0/0/0/0\n    address_family:\n    - name: ipv4\n      cast: unicast\n      networks:\n      - network: 192.168.2.0/23\n      - network: 10.0.0.0/8\n      redistribute:\n      - protocol: ospf\n        id: 400\n        metric: 110\n\n- name: remove bgp as 65000 from config\n  ios_bgp:\n    bgp_as: 65000\n    state: absent\n"
  },
  "cisco.iosxr.iosxr_bgp_address_family": {
    "doc": {
      "description": "This module configures and manages the attributes of BGP address family on Cisco IOS-XR platforms.",
      "has_action": true,
      "notes": "This module works with connection C(network_cli).",
      "options": {
        "config": {
          "aliases": [],
          "description": "A list of configurations for BGP address family.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "address_family": {
              "aliases": [],
              "description": "Enable address family and enter its config mode",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "additional_paths": {
                  "aliases": [],
                  "description": "BGP additional-paths commands",
                  "type": "str",
                  "required": false,
                  "choices": [
                    "send",
                    "receive"
                  ],
                  "suboptions": {}
                },
                "advertise_best_external": {
                  "aliases": [],
                  "description": "Advertise best-external path.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "afi": {
                  "aliases": [],
                  "description": "address family.",
                  "type": "str",
                  "required": false,
                  "choices": [
                    "ipv4",
                    "ipv6",
                    "l2vpn",
                    "link-state",
                    "vpnv4",
                    "vpnv6"
                  ],
                  "suboptions": {}
                },
                "aggregate_address": {
                  "aliases": [],
                  "description": "Configure BGP aggregate entries.",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "as_confed_set": {
                      "aliases": [],
                      "description": "Generate AS confed set path information.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "as_set": {
                      "aliases": [],
                      "description": "Generate AS set path information.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "route_policy": {
                      "aliases": [],
                      "description": "Policy to condition advertisement, suppression, and attributes.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "summary_only": {
                      "aliases": [],
                      "description": "Filter more specific routes from updates.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "value": {
                      "aliases": [],
                      "description": "IPv4 Aggregate address and mask or masklength.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "allocate_label": {
                  "aliases": [],
                  "description": "Allocate labels.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "all": {
                      "aliases": [],
                      "description": "Allocate labels for all prefixes.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "route_policy": {
                      "aliases": [],
                      "description": "Use a route policy to select prefixes for label allocation.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "allow_vpn_default_originate": {
                  "aliases": [],
                  "description": "Allow sending default originate route to VPN neighbor.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "as_path_loopcheck_out_disable": {
                  "aliases": [],
                  "description": "Configure AS Path loop checking for outbound updates.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "bgp": {
                  "aliases": [],
                  "description": "BGP Commands.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "attribute_download": {
                      "aliases": [],
                      "description": "Configure attribute download for this address-family.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "bestpath": {
                      "aliases": [],
                      "description": "Change default route selection criteria.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "origin_as": {
                          "aliases": [],
                          "description": "BGP origin-AS knobs.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "allow": {
                              "aliases": [],
                              "description": "BGP origin-AS knobs.",
                              "type": "dict",
                              "required": false,
                              "suboptions": {
                                "invalid": {
                                  "aliases": [],
                                  "description": "BGP bestpath selection will allow 'invalid' origin-AS",
                                  "type": "bool",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            },
                            "use": {
                              "aliases": [],
                              "description": "BGP origin-AS knobs.",
                              "type": "dict",
                              "required": false,
                              "suboptions": {
                                "validity": {
                                  "aliases": [],
                                  "description": "BGP bestpath selection will use origin-AS validity",
                                  "type": "bool",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "client_to_client": {
                      "aliases": [],
                      "description": "Configure client to client route reflection.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "reflection": {
                          "aliases": [],
                          "description": "disable client to client reflection of cluster id.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "cluster_id_disable": {
                              "aliases": [],
                              "description": "ID of Cluster for which reflection is to be disabled.",
                              "type": "dict",
                              "required": false,
                              "suboptions": {
                                "cluster_id": {
                                  "aliases": [],
                                  "description": "ID of Cluster for which reflection is to be disabled.",
                                  "type": "str",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "disable": {
                                  "aliases": [],
                                  "description": "disable cluster id.",
                                  "type": "bool",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            },
                            "disable": {
                              "aliases": [],
                              "description": "disable reflection.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        }
                      }
                    },
                    "dampening": {
                      "aliases": [],
                      "description": "Enable route-flap dampening",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "route_policy": {
                          "aliases": [],
                          "description": "Route policy to specify criteria for dampening.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "set": {
                          "aliases": [],
                          "description": "Enable dampening.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "value": {
                          "aliases": [],
                          "description": "Half-life time for the penalty",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "import_delay": {
                      "aliases": [],
                      "description": "Specify delay for batching import processing.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "delay_ms_parts": {
                          "aliases": [],
                          "description": "milliseconds part <0-999>.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "delay_second_parts": {
                          "aliases": [],
                          "description": "Delay, seconds part <0-10>.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "label_delay": {
                      "aliases": [],
                      "description": "Specify delay for batching label processing",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "delay_ms_parts": {
                          "aliases": [],
                          "description": "milliseconds part <0-999>.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "delay_second_parts": {
                          "aliases": [],
                          "description": "Delay, seconds part <0-10>.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "origin_as": {
                      "aliases": [],
                      "description": "BGP origin-AS knobs.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "validation": {
                          "aliases": [],
                          "description": "BGP origin-AS validation knobs.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "disable": {
                              "aliases": [],
                              "description": "Disable RPKI origin-AS validation.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "signal": {
                              "aliases": [],
                              "description": "Signal origin-AS validity towards peers.",
                              "type": "dict",
                              "required": false,
                              "suboptions": {
                                "ibgp": {
                                  "aliases": [],
                                  "description": "Signal origin-AS validity towards iBGP peers",
                                  "type": "bool",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "scan_time": {
                      "aliases": [],
                      "description": "Configure background scanner interval for this address-family Example- <5-3600>.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "default_martian_check_disable": {
                  "aliases": [],
                  "description": "Martian check default",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "distance": {
                  "aliases": [],
                  "description": "Define an administrative distance.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "local_routes": {
                      "aliases": [],
                      "description": "Distance for local routes <1-255>.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "routes_external_to_as": {
                      "aliases": [],
                      "description": "Distance for routes external to the AS <1-255>.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "routes_internal_to_as": {
                      "aliases": [],
                      "description": "Distance for routes internal to the AS <1-255>.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "dynamic_med": {
                  "aliases": [],
                  "description": "Dynamic MED Interval.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "global_table_multicast": {
                  "aliases": [],
                  "description": "Enable global table multicast.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "inter_as_install": {
                  "aliases": [],
                  "description": "Install remote mvpn routes in default vrf.This is applicable for mvpn afi.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "label_mode": {
                  "aliases": [],
                  "description": "label configuration.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "per_ce": {
                      "aliases": [],
                      "description": "Set per CE label mode",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "per_prefix": {
                      "aliases": [],
                      "description": "Set per perfix label mode.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "per_vrf": {
                      "aliases": [],
                      "description": "Set per VRF label mode.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "route_policy": {
                      "aliases": [],
                      "description": "Use a route policy to select prefixes for label allocation mode.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "maximum_paths": {
                  "aliases": [],
                  "description": "Forward packets over multiple paths.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "ebgp": {
                      "aliases": [],
                      "description": "ebgp-multipath.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "max_path_value": {
                          "aliases": [],
                          "description": "<2-64>  Number of paths (limit includes backup path).",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "order_igp_metric": {
                          "aliases": [],
                          "description": "Order candidate multipaths for selection as per configured number(cisco-support).",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "selective_order_igp_metric": {
                          "aliases": [],
                          "description": "Allow multipaths only from marked neighbors",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "eibgp": {
                      "aliases": [],
                      "description": "eiBGP-multipath.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "max_path_value": {
                          "aliases": [],
                          "description": "<2-64>  Number of paths (limit includes backup path).",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "order_igp_metric": {
                          "aliases": [],
                          "description": "Order candidate multipaths for selection as per configured number(cisco-support).",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "selective_order_igp_metric": {
                          "aliases": [],
                          "description": "Allow multipaths only from marked neighbors",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "ibgp": {
                      "aliases": [],
                      "description": "iBGP-multipath.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "max_path_value": {
                          "aliases": [],
                          "description": "<2-64>  Number of paths (limit includes backup path).",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "order_igp_metric": {
                          "aliases": [],
                          "description": "Order candidate multipaths for selection as per configured number(cisco-support).",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "selective_order_igp_metric": {
                          "aliases": [],
                          "description": "Allow multipaths only from marked neighbors",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "unequal_cost": {
                          "aliases": [],
                          "description": "Allow multipaths to have different BGP nexthop IGP metrics.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "order_igp_metric": {
                              "aliases": [],
                              "description": "Order candidate multipaths for selection as per configured number(cisco-support).",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "selective_order_igp_metric": {
                              "aliases": [],
                              "description": "Allow multipaths only from marked neighbors",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "set": {
                              "aliases": [],
                              "description": "set unequal_cost.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "mvpn_single_forwarder_selection_all": {
                  "aliases": [],
                  "description": "Enable single forwarder selection  for all",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "mvpn_single_forwarder_selection_highest_ip_address": {
                  "aliases": [],
                  "description": "Enable single forwarder selection  for PE with highest ip address.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "networks": {
                  "aliases": [],
                  "description": "Specify a network to announce via BGP.",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "backdoor_route_policy": {
                      "aliases": [],
                      "description": "Specify a BGP backdoor route.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "network": {
                      "aliases": [],
                      "description": "Specify a network to announce via BGP.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "route_policy": {
                      "aliases": [],
                      "description": "Route-policy to modify the attributes.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "nexthop": {
                  "aliases": [],
                  "description": "Nexthop",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "resolution_prefix_length_minimum": {
                      "aliases": [],
                      "description": "Set minimum prefix-length for nexthop resolution.",
                      "type": "int",
                      "required": false,
                      "choices": [
                        "0",
                        "32"
                      ],
                      "suboptions": {}
                    },
                    "route_policy": {
                      "aliases": [],
                      "description": "Policy to filter out nexthop notification.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "trigger_delay_critical": {
                      "aliases": [],
                      "description": "For critical notification",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "trigger_delay_non_critical": {
                      "aliases": [],
                      "description": "For non critical notification.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "optimal_route_reflection": {
                  "aliases": [],
                  "description": "Configure optimal-route-reflection group.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "group_name": {
                      "aliases": [],
                      "description": "ORR group name - maximum 32 characters.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "primary_address": {
                      "aliases": [],
                      "description": "IPv4 primary address.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "secondary_address": {
                      "aliases": [],
                      "description": "IPv4 secondary address",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "permanent_network_route_policy": {
                  "aliases": [],
                  "description": "Name of the policy.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "redistribute": {
                  "aliases": [],
                  "description": "Redistribute information from another routing protocol.",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "external": {
                      "aliases": [],
                      "description": "Redistribute EIGRP external routes.applicable for eigrp.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "external_ospf": {
                      "aliases": [],
                      "description": "Redistribute OSPF external routes.applicable for ospf.",
                      "type": "int",
                      "required": false,
                      "choices": [
                        "1",
                        "2"
                      ],
                      "suboptions": {}
                    },
                    "id": {
                      "aliases": [],
                      "description": "Identifier for the routing protocol for configuring redistribute information. Example-application name, eigrp/is-is instance name, ospf tag\nValid for protocols 'ospf', 'eigrp', 'isis' and 'application'.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "internal": {
                      "aliases": [],
                      "description": "Redistribute EIGRP internal routes.applicable for eigrp.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "level": {
                      "aliases": [],
                      "description": "Redistribute routes from the specified ISIS levels.\nRedistribute ISIS level 1 routes\nRedistribute ISIS level 1 inter-area routes\nRedistribute ISIS level 2 ISIS routes",
                      "type": "str",
                      "required": false,
                      "choices": [
                        "1",
                        "2",
                        "1-inter-area"
                      ],
                      "suboptions": {}
                    },
                    "metric": {
                      "aliases": [],
                      "description": "Specifies the metric for redistributed routes.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "nssa_external": {
                      "aliases": [],
                      "description": "Redistribute OSPF NSSA external routes.applicable for ospf.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "protocol": {
                      "aliases": [],
                      "description": "Specifies the protocol for configuring redistribute information.",
                      "type": "str",
                      "required": true,
                      "choices": [
                        "ospf",
                        "application",
                        "eigrp",
                        "isis",
                        "static",
                        "connected",
                        "lisp",
                        "mobile",
                        "rip",
                        "subscriber"
                      ],
                      "suboptions": {}
                    },
                    "route_policy": {
                      "aliases": [],
                      "description": "Specifies the route policy reference.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "retain_local_label": {
                  "aliases": [],
                  "description": "Label retention time in minutes <3-60>.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "route_target_download": {
                  "aliases": [],
                  "description": "Route target RIB installation.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "safi": {
                  "aliases": [],
                  "description": "Address Family modifier",
                  "type": "str",
                  "required": false,
                  "choices": [
                    "flowspec",
                    "mdt",
                    "multicast",
                    "mvpn",
                    "rt-filter",
                    "tunnel",
                    "unicast",
                    "evpn",
                    "mspw",
                    "vpls-vpws",
                    "link-state"
                  ],
                  "suboptions": {}
                },
                "segmented_multicast": {
                  "aliases": [],
                  "description": "Enable segmented multicast.This is applicable for mvpn afi.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "table_policy": {
                  "aliases": [],
                  "description": "Configure policy for installation of routes to RIB.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "update": {
                  "aliases": [],
                  "description": "BGP Update generation configuration.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "limit": {
                      "aliases": [],
                      "description": "Update limit.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "address_family": {
                          "aliases": [],
                          "description": "Update limit for sub-groups.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "sub_group": {
                          "aliases": [],
                          "description": "Update limit for address-family.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "ebgp": {
                              "aliases": [],
                              "description": "Update limit for eBGP sub-groups<1-512.",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "ibgp": {
                              "aliases": [],
                              "description": "Update limit for iBGP sub-groups<1-512.",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        }
                      }
                    },
                    "wait_install": {
                      "aliases": [],
                      "description": "Wait for route install.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "vrf": {
                  "aliases": [],
                  "description": "VRF name.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "vrf_all_conf": {
                  "aliases": [],
                  "description": "configuration is for all vrfs and its applicable for afi vpn6 and modifier unicast.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "label_mode": {
                      "aliases": [],
                      "description": "Label-related configuration.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "per_ce": {
                          "aliases": [],
                          "description": "Set per CE label mode",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "per_vrf": {
                          "aliases": [],
                          "description": "Set per VRF label mode.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "route_policy": {
                          "aliases": [],
                          "description": "Use a route policy to select prefixes for label allocation mode.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "source_rt_import_policy": {
                      "aliases": [],
                      "description": "Source import route-targets from import-policy.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "table_policy": {
                      "aliases": [],
                      "description": "Configure policy for installation of routes to RIB.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "weight": {
                  "aliases": [],
                  "description": "Define or modify weight.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "reset_on_import": {
                      "aliases": [],
                      "description": "set reset_on_import.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "reset_on_import_disable": {
                      "aliases": [],
                      "description": "disable reset_on_import.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                }
              }
            },
            "as_number": {
              "aliases": [],
              "description": "Autonomous system number.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "running_config": {
          "aliases": [],
          "description": "This option is used only with state I(parsed).\nThe value of this option should be the output received from the Iosxr device by executing the command B(show running-config router bgp).\nThe state I(parsed) reads the configuration from C(running_config) option and transforms it into Ansible structured data as per the resource module's argspec and the value is then returned in the I(parsed) key within the result.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The state the configuration should be left in.",
          "default": "merged",
          "type": "str",
          "required": false,
          "choices": [
            "deleted",
            "merged",
            "overridden",
            "replaced",
            "gathered",
            "rendered",
            "parsed"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manages BGP Address Family resource module.",
      "version_added": "2.0.0"
    },
    "examples": "\n# Using merged\n# Before state:\n# -------------\n# RP/0/0/CPU0:iosxr-02#show running-config router bgp\n# Sat Feb 20 03:49:43.618 UTC\n# router bgp 65536\n#  bgp router-id 192.0.2.1\n#  address-family vpnv4 unicast\n#  vrf vrf1\n#   rd auto\n- name: Merge the provided configuration with the existing running configuration\n  cisco.iosxr.iosxr_bgp_address_family:\n    state: merged\n    config:\n      as_number: \"65536\"\n      address_family:\n        - afi: \"ipv4\"\n          safi: \"unicast\"\n          vrf: vrf1\n          dynamic_med: 9\n          redistribute:\n            - protocol: connected\n              metric: 10\n        - afi: \"ipv4\"\n          safi: \"unicast\"\n          dynamic_med: 10\n          redistribute:\n            - protocol: application\n              id: test1\n              metric: 10\n          bgp:\n            scan_time: 20\n            attribute_download: true\n          advertise_best_external: true\n          allocate_label:\n            all: true\n# Task output\n# -------------\n# commands:\n# - router bgp 65536\n# - address-family ipv4 unicast\n# - advertise best-external\n# - allocate-label all\n# - bgp attribute-download\n# - bgp scan-time 20\n# - dynamic-med interval 10\n# - redistribute application test1 metric 10\n# - vrf vrf1\n# - address-family ipv4 unicast\n# - dynamic-med interval 9\n# - redistribute connected metric 10\n#\n#\n# after:\n#   as_number: \"65536\"\n#   address_family:\n#     - afi: \"ipv4\"\n#       safi: \"unicast\"\n#       vrf: vrf1\n#       dynamic_med: 9\n#       redistribute:\n#         - protocol: connected\n#           metric: 10\n#     - afi: \"ipv4\"\n#       safi: \"unicast\"\n#       dynamic_med: 10\n#       redistribute:\n#         - protocol: application\n#           id: \"test1\"\n#           metric: 10\n#       bgp:\n#         scan_time: 20\n#         attribute_download: true\n#       advertise_best_external: true\n#       allocate_label:\n#         all: true\n#\n# After state:\n# -------------\n# RP/0/0/CPU0:iosxr-02#show running-config router bgp\n# Sat Feb 20 03:49:43.618 UTC\n# router bgp 65536\n#  bgp router-id 192.0.1.1\n#  address-family ipv4 unicast\n#    advertise best-external\n#    allocate-label all\n#    bgp attribute-download\n#    bgp scan-time 20\n#  address-family vpnv4 unicast\n#  vrf vrf1\n#   rd auto\n#   address-family ipv4 unicast\n#     dynamic-med interval 9\n#     redistribute connected metric 10\n#\n# Using replaced\n# Before state:\n# -------------\n# RP/0/0/CPU0:iosxr-02#show running-config router bgp\n# Sat Feb 20 03:49:43.618 UTC\n# router bgp 65536\n#  bgp router-id 192.0.1.1\n#  address-family ipv4 unicast\n#    advertise best-external\n#    allocate-label all\n#    bgp attribute-download\n#    bgp scan-time 20\n#  address-family vpnv4 unicast\n#  vrf vrf1\n#   rd auto\n#   address-family ipv4 unicast\n#     dynamic-med interval 9\n#     redistribute connected metric 10\n#\n#\n- name: Replace the provided configuration with the existing running configuration\n  cisco.iosxr.iosxr_bgp_address_family:\n    state: replaced\n    config:\n      as_number: \"65536\"\n      address_family:\n        - afi: \"ipv4\"\n          safi: \"unicast\"\n          vrf: vrf1\n          dynamic_med: 10\n# Task output\n# -------------\n# commands:\n# - router bgp 65536\n# - vrf vrf1\n# - address-family ipv4 unicast\n# - dynamic-med interval 10\n# - no redistribute connected metric 10\n#\n# after:\n#   as_number: \"65536\"\n#   address_family:\n#     - afi: \"ipv4\"\n#       safi: \"unicast\"\n#       vrf: vrf1\n#       dynamic_med: 10\n#     - afi: \"ipv4\"\n#       safi: \"unicast\"\n#       dynamic_med: 10\n#       redistribute:\n#         - protocol: application\n#           id: \"test1\"\n#           metric: 10\n#       bgp:\n#         scan_time: 20\n#         attribute_download: true\n#       advertise_best_external: true\n#       allocate_label:\n#         all: true\n# After state:\n# -------------\n# RP/0/0/CPU0:iosxr-02#show running-config router bgp\n# Sat Feb 20 03:49:43.618 UTC\n# router bgp 65536\n#  bgp router-id 192.0.1.1\n#  address-family ipv4 unicast\n#    advertise best-external\n#    allocate-label all\n#    bgp attribute-download\n#    bgp scan-time 20\n#  address-family vpnv4 unicast\n#  vrf vrf1\n#   rd auto\n#   address-family ipv4 unicast\n#     dynamic-med interval 10\n#\n#\n# Using overridden\n# Before state:\n# -------------\n# RP/0/0/CPU0:iosxr-02#show running-config router bgp\n# Sat Feb 20 03:49:43.618 UTC\n# router bgp 65536\n#  bgp router-id 192.0.1.1\n#  address-family ipv4 unicast\n#    advertise best-external\n#    allocate-label all\n#    bgp attribute-download\n#    bgp scan-time 20\n#  address-family vpnv4 unicast\n#  vrf vrf1\n#   rd auto\n#   address-family ipv4 unicast\n#     dynamic-med interval 9\n#     redistribute connected metric 10\n#\n#\n- name: Override the provided configuration with the existing running configuration\n  cisco.iosxr.iosxr_bgp_address_family:\n    state: overridden\n    config:\n      as_number: \"65536\"\n      address_family:\n        - afi: \"ipv4\"\n          safi: \"unicast\"\n          vrf: vrf1\n          dynamic_med: 10\n\n# Task output\n# -------------\n# commands:\n# - router bgp 65536\n# - no address-family ipv4 unicast\n# - vrf vrf1\n# - address-family ipv4 unicast\n# - dynamic-med interval 10\n# - no redistribute connected metric 10\n#\n#\n# after:\n#   as_number: \"65536\"\n#   address_family:\n#     - afi: \"ipv4\"\n#       safi: \"unicast\"\n#       vrf: vrf1\n#       dynamic_med: 10\n#\n# After state:\n# -------------\n# RP/0/0/CPU0:iosxr-02#show running-config router bgp\n# Sat Feb 20 03:49:43.618 UTC\n# router bgp 65536\n#  bgp router-id 192.0.1.1\n#  address-family vpnv4 unicast\n#  vrf vrf1\n#   rd auto\n#   address-family ipv4 unicast\n#     dynamic-med interval 10\n#\n#\n# Using deleted\n# Before state:\n# -------------\n# RP/0/0/CPU0:iosxr-02#show running-config router bgp\n# Sat Feb 20 03:49:43.618 UTC\n# router bgp 65536\n#  bgp router-id 192.0.1.1\n#  address-family ipv4 unicast\n#    advertise best-external\n#    allocate-label all\n#    bgp attribute-download\n#    bgp scan-time 20\n#  address-family vpnv4 unicast\n#  vrf vrf1\n#   rd auto\n#   address-family ipv4 unicast\n#     dynamic-med interval 9\n#     redistribute connected metric 10\n#\n#\n- name: Delete the provided configuration\n  cisco.iosxr.iosxr_bgp_address_family:\n    state: deleted\n    config:\n\n# Task output\n# -------------\n# commands:\n# - router bgp 65536\n# - no address-family ipv4 unicast\n# - vrf vrf1\n# - no address-family ipv4 unicast\n#\n#\n# after:\n#   as_number: \"65536\"\n#\n#\n# After state:\n# -------------\n# RP/0/0/CPU0:iosxr-02#show running-config router bgp\n# Sat Feb 20 03:49:43.618 UTC\n# router bgp 65536\n#  bgp router-id 192.0.1.1\n#  address-family vpnv4 unicast\n#  vrf vrf1\n#   rd auto\n#\n# Using rendered\n# -------------\n#\n- name: rendered state example\n  cisco.iosxr.iosxr_bgp_address_family:\n    state: rendered\n    config:\n      as_number: \"65536\"\n      address_family:\n        - afi: \"ipv4\"\n          safi: \"unicast\"\n          vrf: vrf1\n          dynamic_med: 9\n          redistribute:\n            - protocol: connected\n              metric: 10\n        - afi: \"ipv4\"\n          safi: \"unicast\"\n          dynamic_med: 10\n          redistribute:\n            - protocol: application\n              id: test1\n              metric: 10\n          bgp:\n            scan_time: 20\n            attribute_download: true\n          advertise_best_external: true\n          allocate_label:\n            all: true\n# Task output\n# -------------\n# commands:\n# - router bgp 65536\n# - address-family ipv4 unicast\n# - advertise best-external\n# - allocate-label all\n# - bgp attribute-download\n# - bgp scan-time 20\n# - dynamic-med interval 10\n# - redistribute application test1 metric 10\n# - vrf vrf1\n# - address-family ipv4 unicast\n# - dynamic-med interval 9\n# - redistribute connected metric 10\n#\n# Using gathered\n# -------------\n- name: Merge the provided configuration with the existing running configuration\n  cisco.iosxr.iosxr_bgp_address_family:\n    state: gathered\n    config:\n      as_number: \"65536\"\n      address_family:\n        - afi: \"ipv4\"\n          safi: \"unicast\"\n          vrf: vrf1\n          dynamic_med: 9\n          redistribute:\n            - protocol: connected\n              metric: 10\n        - afi: \"ipv4\"\n          safi: \"unicast\"\n          dynamic_med: 10\n          redistribute:\n            - protocol: application\n              id: test1\n              metric: 10\n          bgp:\n            scan_time: 20\n            attribute_download: true\n          advertise_best_external: true\n          allocate_label:\n            all: true\n# gathered:\n#   as_number: \"65536\"\n#   address_family:\n#     - afi: \"ipv4\"\n#       safi: \"unicast\"\n#       vrf: vrf1\n#       dynamic_med: 9\n#       redistribute:\n#         - protocol: connected\n#           metric: 10\n#     - afi: \"ipv4\"\n#       safi: \"unicast\"\n#       dynamic_med: 10\n#       redistribute:\n#         - protocol: application\n#           id: \"test1\"\n#           metric: 10\n#       bgp:\n#         scan_time: 20\n#         attribute_download: true\n#       advertise_best_external: true\n#       allocate_label:\n#         all: true\n#\n# Using parsed\n#\n#parsed.cfg\n#------------\n# router bgp 65536\n#  bgp router-id 192.0.1.1\n#  address-family ipv4 unicast\n#    advertise best-external\n#    allocate-label all\n#    bgp attribute-download\n#    bgp scan-time 20\n#  address-family vpnv4 unicast\n#  vrf vrf1\n#   rd auto\n#   address-family ipv4 unicast\n#     dynamic-med interval 9\n#     redistribute connected metric 10\n#\n- name: Parse externally provided BGP neighbor AF config\n  cisco.iosxr.iosxr_bgp_address_family:\n    running_config: \"{{ lookup('file', 'parsed.cfg') }}\"\n    state: parsed\n\n# Task output (redacted)\n# -----------------------\n# parsed:\n#   as_number: \"65536\"\n#   address_family:\n#     - afi: \"ipv4\"\n#       safi: \"unicast\"\n#       vrf: vrf1\n#       dynamic_med: 9\n#       redistribute:\n#         - protocol: connected\n#           metric: 10\n#     - afi: \"ipv4\"\n#       safi: \"unicast\"\n#       dynamic_med: 10\n#       redistribute:\n#         - protocol: application\n#           id: \"test1\"\n#           metric: 10\n#       bgp:\n#         scan_time: 20\n#         attribute_download: true\n#       advertise_best_external: true\n#       allocate_label:\n#         all: true\n"
  },
  "cisco.iosxr.iosxr_bgp_global": {
    "doc": {
      "description": "This module configures and manages the attributes of BGP global on Cisco IOS-XR platforms.",
      "has_action": true,
      "notes": "This module works with connection C(network_cli).",
      "options": {
        "config": {
          "aliases": [],
          "description": "A list of configurations for BGP global.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "as_number": {
              "aliases": [],
              "description": "Autonomous system number of the router.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "bfd": {
              "aliases": [],
              "description": "Configure BFD parameters.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "minimum_interval": {
                  "aliases": [],
                  "description": "Specifies the BFD session's minimum-interval value for the neighbor.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "multiplier": {
                  "aliases": [],
                  "description": "Specifies the BFD session's multiplier value for the neighbor.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "bgp": {
              "aliases": [],
              "description": "BGP parameters.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "as_path_loopcheck": {
                  "aliases": [],
                  "description": "Enable AS-path loop checking for iBGP peers.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "auto_policy_soft_reset": {
                  "aliases": [],
                  "description": "Enable automatic soft peer reset on policy reconfiguration.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "disable": {
                      "aliases": [],
                      "description": "Disable an automatic soft reset of Border Gateway Protocol (BGP) peers.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "bestpath": {
                  "aliases": [],
                  "description": "Select the bestpath selection algorithim for BGP routes.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "aigp": {
                      "aliases": [],
                      "description": "AIGP attribute",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "ignore": {
                          "aliases": [],
                          "description": "Ignore AIGP attribute.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "as_path": {
                      "aliases": [],
                      "description": "Select the bestpath selection based on as-path.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "ignore": {
                          "aliases": [],
                          "description": "ignore",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "multipath_relax": {
                          "aliases": [],
                          "description": "multipath-relax",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "compare_routerid": {
                      "aliases": [],
                      "description": "Compare router-id for identical EBGP paths.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "cost_community": {
                      "aliases": [],
                      "description": "Cost community.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "ignore": {
                          "aliases": [],
                          "description": "ignore cost_community",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "med": {
                      "aliases": [],
                      "description": "MED attribute",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "always": {
                          "aliases": [],
                          "description": "Allow comparing MED from different neighbors.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "confed": {
                          "aliases": [],
                          "description": "Compare MED among confederation paths.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "missing_as_worst": {
                          "aliases": [],
                          "description": "Treat missing MED as the least preferred one.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "origin_as": {
                      "aliases": [],
                      "description": "BGP origin-AS knobs.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "allow": {
                          "aliases": [],
                          "description": "BGP origin-AS knobs.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "invalid": {
                              "aliases": [],
                              "description": "BGP bestpath selection will allow 'invalid' origin-AS",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "use": {
                          "aliases": [],
                          "description": "BGP origin-AS knobs.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "validity": {
                              "aliases": [],
                              "description": "BGP bestpath selection will use origin-AS validity",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "cluster_id": {
                  "aliases": [],
                  "description": "Cluster ID of this router acting as a route reflector.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "confederation": {
                  "aliases": [],
                  "description": "confederation.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "identifier": {
                      "aliases": [],
                      "description": "Set routing domain confederation AS.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "peers": {
                      "aliases": [],
                      "description": "Enter peer ASs in BGP confederation mode.",
                      "type": "list",
                      "required": false,
                      "elements": "int",
                      "suboptions": {}
                    }
                  }
                },
                "default": {
                  "aliases": [],
                  "description": "Configure default value.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "local_preference": {
                      "aliases": [],
                      "description": "local preferance.\nPlease refer vendor documentation for valid values",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "enforce_first_as": {
                  "aliases": [],
                  "description": "Enforce the first AS for EBGP routes",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "disable": {
                      "aliases": [],
                      "description": "disable enforce 1st as",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "fast_external_fallover": {
                  "aliases": [],
                  "description": "Immediately reset session if a link to a directly connected external peer goes down.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "disable": {
                      "aliases": [],
                      "description": "disable fast external fallover.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "graceful_restart": {
                  "aliases": [],
                  "description": "Enable graceful restart support.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "graceful_reset": {
                      "aliases": [],
                      "description": "Reset gracefully if configuration change forces a peer reset.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "purge_time": {
                      "aliases": [],
                      "description": "Time before stale routes are purged in seconds <1-6000>.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "restart_time": {
                      "aliases": [],
                      "description": "Restart time advertised to neighbors in seconds <1-4095>.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "set": {
                      "aliases": [],
                      "description": "Enable graceful-restart.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "stalepath_time": {
                      "aliases": [],
                      "description": "Maximum time to wait for restart of GR capable peers in seconds <1-4095>.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "install": {
                  "aliases": [],
                  "description": "Install diversion path to RIB/CEF.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "diversion": {
                      "aliases": [],
                      "description": "Install diversion path to RIB/CEF.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "log": {
                  "aliases": [],
                  "description": "Log bgp info",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "log_message": {
                      "aliases": [],
                      "description": "Log neighbor inbound/outbound message.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "disable": {
                          "aliases": [],
                          "description": "disable inbound outbound messages.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "neighbor": {
                      "aliases": [],
                      "description": "Log neighbor state info.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "changes": {
                          "aliases": [],
                          "description": "Log neighbor up/down and reset reason.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "detail": {
                              "aliases": [],
                              "description": "detail",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "disable": {
                              "aliases": [],
                              "description": "disable",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "maximum": {
                  "aliases": [],
                  "description": "Maximum number of neighbors that can be configured",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "neighbor": {
                      "aliases": [],
                      "description": "Maximum number of neighbors <1-15000>.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "multipath": {
                  "aliases": [],
                  "description": "Change multipath selection criteria",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "as_path": {
                      "aliases": [],
                      "description": "AS path",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "ignore": {
                          "aliases": [],
                          "description": "Ignore as-path related check for multipath selection.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "onwards": {
                              "aliases": [],
                              "description": "Ignore everything onwards as-path for multipath selection.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "origin_as": {
                  "aliases": [],
                  "description": "BGP origin-AS knobs.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "validation": {
                      "aliases": [],
                      "description": "BGP origin-AS validation knobs.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "disable": {
                          "aliases": [],
                          "description": "Disable RPKI origin-AS validation.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "signal": {
                          "aliases": [],
                          "description": "Signal origin-AS validity towards peers.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "ibgp": {
                              "aliases": [],
                              "description": "Signal origin-AS validity towards iBGP peers",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "time": {
                          "aliases": [],
                          "description": "Time to wait between an RPKI update and a BGP table walk.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "time_in_second": {
                              "aliases": [],
                              "description": "Prefix validation time (in seconds).",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "time_off": {
                              "aliases": [],
                              "description": "No automatic prefix validation after an RPKI update.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "redistribute_internal": {
                  "aliases": [],
                  "description": "Redistribute internal BGP routes.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "router_id": {
                  "aliases": [],
                  "description": "Configure Router-id. Example- A.B.C.D  IPv4 address.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "scan_time": {
                  "aliases": [],
                  "description": "Configure background scanner interval for generic scanner Example- <5-3600>.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "unsafe_ebgp_policy": {
                  "aliases": [],
                  "description": "Make eBGP neighbors with no policy pass all routes(cisco-support).",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "update_delay": {
                  "aliases": [],
                  "description": "Set the max initial delay for sending updates Example-<0-3600> in secs.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "default_information": {
              "aliases": [],
              "description": "Control distribution of default information.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "originate": {
                  "aliases": [],
                  "description": "Distribute a default route",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "default_metric": {
              "aliases": [],
              "description": "Default metric. Example-<1-4294967295>.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "graceful_maintenance": {
              "aliases": [],
              "description": "This allows the router to be brought in or out of service gracefully.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "activate": {
                  "aliases": [],
                  "description": "All neighbors with graceful-maintenance config",
                  "type": "str",
                  "required": false,
                  "choices": [
                    "all-neighbors",
                    "retain-routes",
                    "all-neighbors retain-routes"
                  ],
                  "suboptions": {}
                }
              }
            },
            "ibgp": {
              "aliases": [],
              "description": "Set options for iBGP peers.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "policy": {
                  "aliases": [],
                  "description": "Set options for route-policy.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "out": {
                      "aliases": [],
                      "description": "Set options for outbound policy.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "enforce_modifications": {
                          "aliases": [],
                          "description": "Allow policy to modify all attributes.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    }
                  }
                }
              }
            },
            "mpls": {
              "aliases": [],
              "description": "Enable mpls parameters.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "activate": {
                  "aliases": [],
                  "description": "Enter mpls interfaces in BGP mpls activate mode.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "interface": {
                      "aliases": [],
                      "description": "Name of interface to enable mpls.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                }
              }
            },
            "mvpn": {
              "aliases": [],
              "description": "Connect to PIM/PIM6.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "neighbors": {
              "aliases": [],
              "description": "Specify a neighbor router.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "advertisement_interval": {
                  "aliases": [],
                  "description": "Minimum interval between sending BGP routing updates.Example-<0-600>.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "bfd": {
                  "aliases": [],
                  "description": "Configure BFD parameters.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "fast_detect": {
                      "aliases": [],
                      "description": "Enable Fast detection",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "disable": {
                          "aliases": [],
                          "description": "Prevent bfd settings from being inherited from the parent.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "strict_mode": {
                          "aliases": [],
                          "description": "Hold down neighbor session until BFD session is up",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "minimum_interval": {
                      "aliases": [],
                      "description": "Specifies the BFD session's minimum-interval value for the neighbor.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "multiplier": {
                      "aliases": [],
                      "description": "Specifies the BFD session's multiplier value for the neighbor.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "bmp_activate": {
                  "aliases": [],
                  "description": "Enable BMP logging for this neighbor.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "server": {
                      "aliases": [],
                      "description": "Enable BMP connection to particular server.Example-<1-8>.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "capability": {
                  "aliases": [],
                  "description": "Advertise capability to the peer.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "additional_paths": {
                      "aliases": [],
                      "description": "BGP additional-paths commands.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "receive": {
                          "aliases": [],
                          "description": "Additional paths receive capability",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "disable": {
                              "aliases": [],
                              "description": "set receive capability",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "set": {
                              "aliases": [],
                              "description": "set receive capability",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "send": {
                          "aliases": [],
                          "description": "Additional paths Send capability",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "disable": {
                              "aliases": [],
                              "description": "set send capability",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "set": {
                              "aliases": [],
                              "description": "set send capability",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        }
                      }
                    },
                    "suppress": {
                      "aliases": [],
                      "description": "Suppress advertising capability to the peer.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "all": {
                          "aliases": [],
                          "description": "all capability",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "inheritance_disable": {
                              "aliases": [],
                              "description": "Do not inherit this configuration from parent group.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "set": {
                              "aliases": [],
                              "description": "set all.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "four_byte_AS": {
                          "aliases": [],
                          "description": "4-byte-as capability",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "set": {
                              "aliases": [],
                              "description": "set 4_byte_as.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "cluster_id": {
                  "aliases": [],
                  "description": "Cluster ID of this router acting as a route reflector.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "description": {
                  "aliases": [],
                  "description": "Neighbor specific description.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "dmz_link_bandwidth": {
                  "aliases": [],
                  "description": "Propagate the DMZ link bandwidth.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "inheritance_disable": {
                      "aliases": [],
                      "description": "Do not inherit this configuration from parent group.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "set": {
                      "aliases": [],
                      "description": "set dmz-link-bandwidth.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "dscp": {
                  "aliases": [],
                  "description": "Set IP DSCP (DiffServ CodePoint).Please refer vendor document for valid entries.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "ebgp_multihop": {
                  "aliases": [],
                  "description": "Allow EBGP neighbors not on directly connected networks.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "mpls": {
                      "aliases": [],
                      "description": "Disable BGP MPLS forwarding.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "value": {
                      "aliases": [],
                      "description": "maximum hop count.Example-<1-255>.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "ebgp_recv_extcommunity_dmz": {
                  "aliases": [],
                  "description": "Receive extcommunity dmz link bandwidth from ebgp neighbor.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "inheritance_disable": {
                      "aliases": [],
                      "description": "Prevent ebgp-recv-community-dmz from being inherited from parent",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "set": {
                      "aliases": [],
                      "description": "set ebgp-recv-community-dmz.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "ebgp_send_extcommunity_dmz": {
                  "aliases": [],
                  "description": "Send extcommunity dmz link bandwidth from ebgp neighbor.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "cumulatie": {
                      "aliases": [],
                      "description": "Send cumulative community dmz link bandwidth of all multipaths to ebgp neighbor.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "inheritance_disable": {
                      "aliases": [],
                      "description": "Prevent ebgp-send-community-dmz from being inherited from parent",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "set": {
                      "aliases": [],
                      "description": "set ebgp-send-community-dmz.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "egress_engineering": {
                  "aliases": [],
                  "description": "Enable egress peer engineering for this neighbor.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "inheritance_disable": {
                      "aliases": [],
                      "description": "Prevent egress-engineering from being inherited from parent",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "set": {
                      "aliases": [],
                      "description": "set egress-engineering.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "enforce_first_as": {
                  "aliases": [],
                  "description": "Enforce the first AS for EBGP routes",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "disable": {
                      "aliases": [],
                      "description": "disable enforce 1st as",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "graceful_maintenance": {
                  "aliases": [],
                  "description": "Attributes for Graceful Maintenance. This will cause neighbors to de-prefer routes from this router and choose alternates. This allows the router to be brought in or out of service gracefully.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "activate": {
                      "aliases": [],
                      "description": "Routes will be announced with the graceful maintenance attributes while activated either here or under router bgp configuration.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "inheritance_disable": {
                          "aliases": [],
                          "description": "Prevent activate from being inherited from the parent.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "set": {
                          "aliases": [],
                          "description": "activate.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "as_prepends": {
                      "aliases": [],
                      "description": "Number of times to prepend the local AS number to the AS path of routes. Default=0",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "inheritance_disable": {
                          "aliases": [],
                          "description": "Prevent as prepends from being inherited from the parent.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "value": {
                          "aliases": [],
                          "description": "Range of values for as prepends.Example-<0-6> .",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "local_preference": {
                      "aliases": [],
                      "description": "local preference with which to advertise routes to ibgp neigbors. Default=No Touch",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "inheritance_disable": {
                          "aliases": [],
                          "description": "Prevent local preference from being inherited from the parent.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "value": {
                          "aliases": [],
                          "description": "Range of values for Local Preference.Example-<0-4294967295> .",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "set": {
                      "aliases": [],
                      "description": "set graceful maintenance.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "graceful_restart": {
                  "aliases": [],
                  "description": "Enable graceful restart support for this neighbor.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "restart_time": {
                      "aliases": [],
                      "description": "Restart time advertised to neighbors in seconds <1-4095>.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "stalepath_time": {
                      "aliases": [],
                      "description": "Maximum time to wait for restart of GR capable peers in seconds <1-4095>.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "ignore_connected_check": {
                  "aliases": [],
                  "description": "Bypass the directly connected nexthop check for single-hop eBGP peering",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "inheritance_disable": {
                      "aliases": [],
                      "description": "Prevent ignore-connected-check from being inherited from the parent",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "set": {
                      "aliases": [],
                      "description": "set ignore-connected-check.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "keychain": {
                  "aliases": [],
                  "description": "Set keychain based authentication.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "inheritance_disable": {
                      "aliases": [],
                      "description": "Prevent keychain from being inherited from parent.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "name": {
                      "aliases": [],
                      "description": "Name of the key chain - maximum 32 characters.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "local": {
                  "aliases": [],
                  "description": "Configure local parameter",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "address": {
                      "aliases": [],
                      "description": "IPv4 address",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "inheritance_disable": {
                          "aliases": [],
                          "description": "Prevent local address from being inherited from parent.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "ipv4_address": {
                          "aliases": [],
                          "description": "IPv4 address <A.B.C.D>.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    }
                  }
                },
                "local_as": {
                  "aliases": [],
                  "description": "Specify local AS number.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "inheritance_disable": {
                      "aliases": [],
                      "description": "Prevent local AS from being inherited from parent.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "value": {
                      "aliases": [],
                      "description": "2 byte, 4 byte As number",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "log": {
                  "aliases": [],
                  "description": "Logging update messages per neighbor.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "log_message": {
                      "aliases": [],
                      "description": "Logging update/notification messages per neighbor.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "in": {
                          "aliases": [],
                          "description": "Inbound log messages",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "disable": {
                              "aliases": [],
                              "description": "Disable inbound message logging.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "inheritance_disable": {
                              "aliases": [],
                              "description": "Prevents the msg log from being inherited from the parent.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "value": {
                              "aliases": [],
                              "description": "Range for message log buffer size <1-100>.",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "out": {
                          "aliases": [],
                          "description": "Outbound log messages",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "disable": {
                              "aliases": [],
                              "description": "Disable inbound message logging.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "inheritance_disable": {
                              "aliases": [],
                              "description": "Prevents the msg log from being inherited from the parent.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "value": {
                              "aliases": [],
                              "description": "Range for message log buffer size <1-100>.",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "neighbor": {
                  "aliases": [],
                  "description": "Neighbor router address.",
                  "type": "str",
                  "required": true,
                  "suboptions": {}
                },
                "origin_as": {
                  "aliases": [],
                  "description": "BGP origin-AS knobs.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "validation": {
                      "aliases": [],
                      "description": "BGP origin-AS validation knobs.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "disable": {
                          "aliases": [],
                          "description": "Disable RPKI origin-AS validation.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    }
                  }
                },
                "receive_buffer_size": {
                  "aliases": [],
                  "description": "Set socket and BGP receive buffer size.Example <512-131072>.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "remote_as": {
                  "aliases": [],
                  "description": "Neighbor Autonomous System.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "send_buffer_size": {
                  "aliases": [],
                  "description": "Set socket and BGP send buffer size.Example  <4096-131072>.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "session_open_mode": {
                  "aliases": [],
                  "description": "Establish BGP session using this TCP open mode.",
                  "type": "str",
                  "required": false,
                  "choices": [
                    "active-only",
                    "both",
                    "passive-only"
                  ],
                  "suboptions": {}
                },
                "shutdown": {
                  "aliases": [],
                  "description": "Administratively shut down this neighbor.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "inheritance_disable": {
                      "aliases": [],
                      "description": "Prevent shutdown from being inherited from parent",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "set": {
                      "aliases": [],
                      "description": "shutdown.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "tcp": {
                  "aliases": [],
                  "description": "TCP session configuration commands.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "mss": {
                      "aliases": [],
                      "description": "Maximum Segment Size.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "inheritance_disable": {
                          "aliases": [],
                          "description": "Prevent mss from being inherited from parent",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "value": {
                          "aliases": [],
                          "description": "TCP initial maximum segment size.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    }
                  }
                },
                "timers": {
                  "aliases": [],
                  "description": "BGP per neighbor timers.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "holdtime": {
                      "aliases": [],
                      "description": "hold time <3-65535> or 0 Disable hold time.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "keepalive_time": {
                      "aliases": [],
                      "description": "keepalive interval <0-65535>.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "ttl_security": {
                  "aliases": [],
                  "description": "Enable EBGP TTL security.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "inheritance_disable": {
                      "aliases": [],
                      "description": "Prevent ttl-security from being inherited from parent",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "set": {
                      "aliases": [],
                      "description": "set ttl-security",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "update": {
                  "aliases": [],
                  "description": "BGP Update configuration.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "in": {
                      "aliases": [],
                      "description": "Inbound update message handling.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "filtering": {
                          "aliases": [],
                          "description": "Inbound update message filtering",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "attribute_filter": {
                              "aliases": [],
                              "description": "Attribute-filter configuration.",
                              "type": "dict",
                              "required": false,
                              "suboptions": {
                                "group": {
                                  "aliases": [],
                                  "description": "Name of group.",
                                  "type": "str",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            },
                            "logging": {
                              "aliases": [],
                              "description": "Update filtering syslog message.",
                              "type": "dict",
                              "required": false,
                              "suboptions": {
                                "disable": {
                                  "aliases": [],
                                  "description": "Disable update filtering syslog message.",
                                  "type": "bool",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            },
                            "update_message": {
                              "aliases": [],
                              "description": "Filtered update messages.",
                              "type": "dict",
                              "required": false,
                              "suboptions": {
                                "buffers": {
                                  "aliases": [],
                                  "description": "Number of buffers to store filtered update messages.",
                                  "type": "int",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "update_source": {
                  "aliases": [],
                  "description": "Source of routing updates.Refer vendor document for valid values.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "nsr": {
              "aliases": [],
              "description": "Enable non-stop-routing support for all neighbors.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "disable": {
                  "aliases": [],
                  "description": "disable nsr",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "set": {
                  "aliases": [],
                  "description": "set nsr",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "rpki": {
              "aliases": [],
              "description": "Configure RPKI.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "route": {
                  "aliases": [],
                  "description": "Configure an RPKI route.A.B.C.D/length or X:X::X/length  Network/Minimum prefix length",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "max": {
                      "aliases": [],
                      "description": "Maximum prefix length. Example- <1-128>  .",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "origin": {
                      "aliases": [],
                      "description": "Origin Autonomous System number (in asplain format) Example-<1-4294967295>.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "value": {
                      "aliases": [],
                      "description": "A.B.C.D/length or X:X::X/length  Network/Minimum prefix length.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "servers": {
                  "aliases": [],
                  "description": "Configure RPKI cache-servers.",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "name": {
                      "aliases": [],
                      "description": "address of rpki server.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "purge_time": {
                      "aliases": [],
                      "description": "Time to wait after a cache goes down to clean up stale routes",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "refresh_time": {
                      "aliases": [],
                      "description": "Time between sending serial-queries for the RPKI cache-server",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "time_off": {
                          "aliases": [],
                          "description": "Do not send serial-queries periodically",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "value": {
                          "aliases": [],
                          "description": "Purge time (in seconds) <30-360>",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "response_time": {
                      "aliases": [],
                      "description": "Time to wait for a response from the RPKI cache-server",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "time_off": {
                          "aliases": [],
                          "description": "Wait indefinitely for a response",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "value": {
                          "aliases": [],
                          "description": "Purge time (in seconds) <15-3600>",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "shutdown": {
                      "aliases": [],
                      "description": "Shutdown the RPKI cache-server",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "transport": {
                      "aliases": [],
                      "description": "Specify a transport method for the RPKI cache-server",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "ssh": {
                          "aliases": [],
                          "description": "Connect to the RPKI cache-server using SSH",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "port": {
                              "aliases": [],
                              "description": "Specify a port number for the RPKI cache-server transport",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "tcp": {
                          "aliases": [],
                          "description": "Connect to the RPKI cache-server using TCP (unencrypted)",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "port": {
                              "aliases": [],
                              "description": "Specify a port number for the RPKI cache-server transport",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "socket": {
              "aliases": [],
              "description": "set socket parameters.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "receive_buffer_size": {
                  "aliases": [],
                  "description": "socket receive buffer size.Example-<512-131072>.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "send_buffer_size": {
                  "aliases": [],
                  "description": "socket send buffer size.Example- <4096-131072>.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "timers": {
              "aliases": [],
              "description": "BGP per neighbor timers.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "holdtime": {
                  "aliases": [],
                  "description": "hold time <3-65535> or 0 Disable hold time.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "keepalive_time": {
                  "aliases": [],
                  "description": "keepalive interval <0-65535>.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "update": {
              "aliases": [],
              "description": "BGP Update configuration.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "in": {
                  "aliases": [],
                  "description": "Inbound update message handling",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "error_handling": {
                      "aliases": [],
                      "description": "Inbound update message error handling.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "basic": {
                          "aliases": [],
                          "description": "Inbound update message basic error handling",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "ebgp": {
                              "aliases": [],
                              "description": "Inbound update message basic error handling for EBGP neighbors",
                              "type": "dict",
                              "required": false,
                              "suboptions": {
                                "disable": {
                                  "aliases": [],
                                  "description": "disable",
                                  "type": "bool",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            },
                            "ibgp": {
                              "aliases": [],
                              "description": "Inbound update message basic error handling for ibgp neighbors",
                              "type": "dict",
                              "required": false,
                              "suboptions": {
                                "disable": {
                                  "aliases": [],
                                  "description": "disable",
                                  "type": "bool",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            }
                          }
                        },
                        "extended": {
                          "aliases": [],
                          "description": "Inbound update message extended error handling",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "ebgp": {
                              "aliases": [],
                              "description": "Inbound update message extended error handling for EBGP neighbors",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "ibgp": {
                              "aliases": [],
                              "description": "Inbound update message extended error handling for ibgp neighbors",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "limit": {
                  "aliases": [],
                  "description": "Upper bound on transient memory usage for update generation.Example-<16-2048>.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "out": {
                  "aliases": [],
                  "description": "BGP Update generation configuration.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "logging": {
                      "aliases": [],
                      "description": "Enable logging of update generation events.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                }
              }
            },
            "vrfs": {
              "aliases": [],
              "description": "Specify a vrf name.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "bfd": {
                  "aliases": [],
                  "description": "Configure BFD parameters.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "minimum_interval": {
                      "aliases": [],
                      "description": "Specifies the BFD session's minimum-interval value for the neighbor.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "multiplier": {
                      "aliases": [],
                      "description": "Specifies the BFD session's multiplier value for the neighbor.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "bgp": {
                  "aliases": [],
                  "description": "BGP commands.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "auto_policy_soft_reset": {
                      "aliases": [],
                      "description": "Enable automatic soft peer reset on policy reconfiguration.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "disable": {
                          "aliases": [],
                          "description": "Disable an automatic soft reset of Border Gateway Protocol (BGP) peers.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "bestpath": {
                      "aliases": [],
                      "description": "Select the bestpath selection algorithim for BGP routes.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "aigp": {
                          "aliases": [],
                          "description": "AIGP attribute",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "ignore": {
                              "aliases": [],
                              "description": "Ignore AIGP attribute.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "as_path": {
                          "aliases": [],
                          "description": "Select the bestpath selection based on as-path.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "ignore": {
                              "aliases": [],
                              "description": "ignore",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "multipath_relax": {
                              "aliases": [],
                              "description": "multipath-relax",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "compare_routerid": {
                          "aliases": [],
                          "description": "Compare router-id for identical EBGP paths.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "cost_community": {
                          "aliases": [],
                          "description": "Cost community.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "ignore": {
                              "aliases": [],
                              "description": "ignore cost_community",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "med": {
                          "aliases": [],
                          "description": "MED attribute",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "always": {
                              "aliases": [],
                              "description": "Allow comparing MED from different neighbors.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "confed": {
                              "aliases": [],
                              "description": "Compare MED among confederation paths.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "missing_as_worst": {
                              "aliases": [],
                              "description": "Treat missing MED as the least preferred one.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "origin_as": {
                          "aliases": [],
                          "description": "BGP origin-AS knobs.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "allow": {
                              "aliases": [],
                              "description": "BGP origin-AS knobs.",
                              "type": "dict",
                              "required": false,
                              "suboptions": {
                                "invalid": {
                                  "aliases": [],
                                  "description": "BGP bestpath selection will allow 'invalid' origin-AS",
                                  "type": "bool",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            },
                            "use": {
                              "aliases": [],
                              "description": "BGP origin-AS knobs.",
                              "type": "dict",
                              "required": false,
                              "suboptions": {
                                "validity": {
                                  "aliases": [],
                                  "description": "BGP bestpath selection will use origin-AS validity",
                                  "type": "bool",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "default": {
                      "aliases": [],
                      "description": "Configure default value.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "local_preference": {
                          "aliases": [],
                          "description": "local preferance.\nPlease refer vendor documentation for valid values",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "enforce_first_as": {
                      "aliases": [],
                      "description": "Enforce the first AS for EBGP routes",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "disable": {
                          "aliases": [],
                          "description": "disable enforce 1st as",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "fast_external_fallover": {
                      "aliases": [],
                      "description": "Immediately reset session if a link to a directly connected external peer goes down.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "disable": {
                          "aliases": [],
                          "description": "disable fast external fallover.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "log": {
                      "aliases": [],
                      "description": "Log bgp info",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "log_message": {
                          "aliases": [],
                          "description": "Log neighbor inbound/outbound message.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "disable": {
                              "aliases": [],
                              "description": "disable inbound outbound messages.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "neighbor": {
                          "aliases": [],
                          "description": "Log neighbor state info.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "changes": {
                              "aliases": [],
                              "description": "Log neighbor up/down and reset reason.",
                              "type": "dict",
                              "required": false,
                              "suboptions": {
                                "detail": {
                                  "aliases": [],
                                  "description": "detail",
                                  "type": "bool",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "disable": {
                                  "aliases": [],
                                  "description": "disable",
                                  "type": "bool",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "multipath": {
                      "aliases": [],
                      "description": "Change multipath selection criteria",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "as_path": {
                          "aliases": [],
                          "description": "AS path",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "ignore": {
                              "aliases": [],
                              "description": "Ignore as-path related check for multipath selection.",
                              "type": "dict",
                              "required": false,
                              "suboptions": {
                                "onwards": {
                                  "aliases": [],
                                  "description": "Ignore everything onwards as-path for multipath selection.",
                                  "type": "bool",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "redistribute_internal": {
                      "aliases": [],
                      "description": "Redistribute internal BGP routes.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "router_id": {
                      "aliases": [],
                      "description": "Configure Router-id. Example- A.B.C.D  IPv4 address.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "unsafe_ebgp_policy": {
                      "aliases": [],
                      "description": "Make eBGP neighbors with no policy pass all routes(cisco-support).",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "default_information": {
                  "aliases": [],
                  "description": "Control distribution of default information.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "originate": {
                      "aliases": [],
                      "description": "Distribute a default route",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "default_metric": {
                  "aliases": [],
                  "description": "Default metric. Example-<1-4294967295>.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "mpls": {
                  "aliases": [],
                  "description": "Enable mpls parameters.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "activate": {
                      "aliases": [],
                      "description": "Enter mpls interfaces in BGP mpls activate mode.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "interface": {
                          "aliases": [],
                          "description": "Name of interface to enable mpls.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    }
                  }
                },
                "neighbors": {
                  "aliases": [],
                  "description": "Specify a neighbor router.",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "advertisement_interval": {
                      "aliases": [],
                      "description": "Minimum interval between sending BGP routing updates.Example-<0-600>.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "bfd": {
                      "aliases": [],
                      "description": "Configure BFD parameters.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "fast_detect": {
                          "aliases": [],
                          "description": "Enable Fast detection",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "disable": {
                              "aliases": [],
                              "description": "Prevent bfd settings from being inherited from the parent.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "strict_mode": {
                              "aliases": [],
                              "description": "Hold down neighbor session until BFD session is up",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "minimum_interval": {
                          "aliases": [],
                          "description": "Specifies the BFD session's minimum-interval value for the neighbor.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "multiplier": {
                          "aliases": [],
                          "description": "Specifies the BFD session's multiplier value for the neighbor.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "bmp_activate": {
                      "aliases": [],
                      "description": "Enable BMP logging for this neighbor.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "server": {
                          "aliases": [],
                          "description": "Enable BMP connection to particular server.Example-<1-8>.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "capability": {
                      "aliases": [],
                      "description": "Advertise capability to the peer.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "additional_paths": {
                          "aliases": [],
                          "description": "BGP additional-paths commands.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "receive": {
                              "aliases": [],
                              "description": "Additional paths receive capability",
                              "type": "dict",
                              "required": false,
                              "suboptions": {
                                "disable": {
                                  "aliases": [],
                                  "description": "set receive capability",
                                  "type": "bool",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "set": {
                                  "aliases": [],
                                  "description": "set receive capability",
                                  "type": "bool",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            },
                            "send": {
                              "aliases": [],
                              "description": "Additional paths Send capability",
                              "type": "dict",
                              "required": false,
                              "suboptions": {
                                "disable": {
                                  "aliases": [],
                                  "description": "set send capability",
                                  "type": "bool",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "set": {
                                  "aliases": [],
                                  "description": "set send capability",
                                  "type": "bool",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            }
                          }
                        },
                        "suppress": {
                          "aliases": [],
                          "description": "Suppress advertising capability to the peer.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "all": {
                              "aliases": [],
                              "description": "all capability",
                              "type": "dict",
                              "required": false,
                              "suboptions": {
                                "inheritance_disable": {
                                  "aliases": [],
                                  "description": "Do not inherit this configuration from parent group.",
                                  "type": "bool",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "set": {
                                  "aliases": [],
                                  "description": "set all.",
                                  "type": "bool",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            },
                            "four_byte_AS": {
                              "aliases": [],
                              "description": "4-byte-as capability",
                              "type": "dict",
                              "required": false,
                              "suboptions": {
                                "set": {
                                  "aliases": [],
                                  "description": "set 4_byte_as.",
                                  "type": "bool",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "cluster_id": {
                      "aliases": [],
                      "description": "Cluster ID of this router acting as a route reflector.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "description": {
                      "aliases": [],
                      "description": "Neighbor specific description.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "dmz_link_bandwidth": {
                      "aliases": [],
                      "description": "Propagate the DMZ link bandwidth.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "inheritance_disable": {
                          "aliases": [],
                          "description": "Do not inherit this configuration from parent group.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "set": {
                          "aliases": [],
                          "description": "set dmz-link-bandwidth.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "dscp": {
                      "aliases": [],
                      "description": "Set IP DSCP (DiffServ CodePoint).Please refer vendor document for valid entries.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "ebgp_multihop": {
                      "aliases": [],
                      "description": "Allow EBGP neighbors not on directly connected networks.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "mpls": {
                          "aliases": [],
                          "description": "Disable BGP MPLS forwarding.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "value": {
                          "aliases": [],
                          "description": "maximum hop count.Example-<1-255>.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "ebgp_recv_extcommunity_dmz": {
                      "aliases": [],
                      "description": "Receive extcommunity dmz link bandwidth from ebgp neighbor.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "inheritance_disable": {
                          "aliases": [],
                          "description": "Prevent ebgp-recv-community-dmz from being inherited from parent",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "set": {
                          "aliases": [],
                          "description": "set ebgp-recv-community-dmz.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "ebgp_send_extcommunity_dmz": {
                      "aliases": [],
                      "description": "Send extcommunity dmz link bandwidth from ebgp neighbor.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "cumulatie": {
                          "aliases": [],
                          "description": "Send cumulative community dmz link bandwidth of all multipaths to ebgp neighbor.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "inheritance_disable": {
                          "aliases": [],
                          "description": "Prevent ebgp-send-community-dmz from being inherited from parent",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "set": {
                          "aliases": [],
                          "description": "set ebgp-send-community-dmz.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "egress_engineering": {
                      "aliases": [],
                      "description": "Enable egress peer engineering for this neighbor.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "inheritance_disable": {
                          "aliases": [],
                          "description": "Prevent egress-engineering from being inherited from parent",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "set": {
                          "aliases": [],
                          "description": "set egress-engineering.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "enforce_first_as": {
                      "aliases": [],
                      "description": "Enforce the first AS for EBGP routes",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "disable": {
                          "aliases": [],
                          "description": "disable enforce 1st as",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "graceful_maintenance": {
                      "aliases": [],
                      "description": "Attributes for Graceful Maintenance. This will cause neighbors to de-prefer routes from this router and choose alternates. This allows the router to be brought in or out of service gracefully.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "activate": {
                          "aliases": [],
                          "description": "Routes will be announced with the graceful maintenance attributes while activated either here or under router bgp configuration.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "inheritance_disable": {
                              "aliases": [],
                              "description": "Prevent activate from being inherited from the parent.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "set": {
                              "aliases": [],
                              "description": "activate.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "as_prepends": {
                          "aliases": [],
                          "description": "Number of times to prepend the local AS number to the AS path of routes. Default=0",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "inheritance_disable": {
                              "aliases": [],
                              "description": "Prevent as prepends from being inherited from the parent.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "value": {
                              "aliases": [],
                              "description": "Range of values for as prepends.Example-<0-6> .",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "local_preference": {
                          "aliases": [],
                          "description": "local preference with which to advertise routes to ibgp neigbors. Default=No Touch",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "inheritance_disable": {
                              "aliases": [],
                              "description": "Prevent local preference from being inherited from the parent.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "value": {
                              "aliases": [],
                              "description": "Range of values for Local Preference.Example-<0-4294967295> .",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "set": {
                          "aliases": [],
                          "description": "set graceful maintenance.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "graceful_restart": {
                      "aliases": [],
                      "description": "Enable graceful restart support for this neighbor.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "restart_time": {
                          "aliases": [],
                          "description": "Restart time advertised to neighbors in seconds <1-4095>.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "stalepath_time": {
                          "aliases": [],
                          "description": "Maximum time to wait for restart of GR capable peers in seconds <1-4095>.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "ignore_connected_check": {
                      "aliases": [],
                      "description": "Bypass the directly connected nexthop check for single-hop eBGP peering",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "inheritance_disable": {
                          "aliases": [],
                          "description": "Prevent ignore-connected-check from being inherited from the parent",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "set": {
                          "aliases": [],
                          "description": "set ignore-connected-check.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "keychain": {
                      "aliases": [],
                      "description": "Set keychain based authentication.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "inheritance_disable": {
                          "aliases": [],
                          "description": "Prevent keychain from being inherited from parent.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "name": {
                          "aliases": [],
                          "description": "Name of the key chain - maximum 32 characters.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "local": {
                      "aliases": [],
                      "description": "Configure local parameter",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "address": {
                          "aliases": [],
                          "description": "IPv4 address",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "inheritance_disable": {
                              "aliases": [],
                              "description": "Prevent local address from being inherited from parent.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "ipv4_address": {
                              "aliases": [],
                              "description": "IPv4 address <A.B.C.D>.",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        }
                      }
                    },
                    "local_as": {
                      "aliases": [],
                      "description": "Specify local AS number.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "inheritance_disable": {
                          "aliases": [],
                          "description": "Prevent local AS from being inherited from parent.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "value": {
                          "aliases": [],
                          "description": "2 byte, 4 byte As number",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "log": {
                      "aliases": [],
                      "description": "Logging update messages per neighbor.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "log_message": {
                          "aliases": [],
                          "description": "Logging update/notification messages per neighbor.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "in": {
                              "aliases": [],
                              "description": "Inbound log messages",
                              "type": "dict",
                              "required": false,
                              "suboptions": {
                                "disable": {
                                  "aliases": [],
                                  "description": "Disable inbound message logging.",
                                  "type": "bool",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "inheritance_disable": {
                                  "aliases": [],
                                  "description": "Prevents the msg log from being inherited from the parent.",
                                  "type": "bool",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "value": {
                                  "aliases": [],
                                  "description": "Range for message log buffer size <1-100>.",
                                  "type": "int",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            },
                            "out": {
                              "aliases": [],
                              "description": "Outbound log messages",
                              "type": "dict",
                              "required": false,
                              "suboptions": {
                                "disable": {
                                  "aliases": [],
                                  "description": "Disable inbound message logging.",
                                  "type": "bool",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "inheritance_disable": {
                                  "aliases": [],
                                  "description": "Prevents the msg log from being inherited from the parent.",
                                  "type": "bool",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "value": {
                                  "aliases": [],
                                  "description": "Range for message log buffer size <1-100>.",
                                  "type": "int",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "neighbor": {
                      "aliases": [],
                      "description": "Neighbor router address.",
                      "type": "str",
                      "required": true,
                      "suboptions": {}
                    },
                    "origin_as": {
                      "aliases": [],
                      "description": "BGP origin-AS knobs.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "validation": {
                          "aliases": [],
                          "description": "BGP origin-AS validation knobs.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "disable": {
                              "aliases": [],
                              "description": "Disable RPKI origin-AS validation.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        }
                      }
                    },
                    "receive_buffer_size": {
                      "aliases": [],
                      "description": "Set socket and BGP receive buffer size.Example <512-131072>.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "remote_as": {
                      "aliases": [],
                      "description": "Neighbor Autonomous System.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "send_buffer_size": {
                      "aliases": [],
                      "description": "Set socket and BGP send buffer size.Example  <4096-131072>.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "session_open_mode": {
                      "aliases": [],
                      "description": "Establish BGP session using this TCP open mode.",
                      "type": "str",
                      "required": false,
                      "choices": [
                        "active-only",
                        "both",
                        "passive-only"
                      ],
                      "suboptions": {}
                    },
                    "shutdown": {
                      "aliases": [],
                      "description": "Administratively shut down this neighbor.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "inheritance_disable": {
                          "aliases": [],
                          "description": "Prevent shutdown from being inherited from parent",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "set": {
                          "aliases": [],
                          "description": "shutdown.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "tcp": {
                      "aliases": [],
                      "description": "TCP session configuration commands.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "mss": {
                          "aliases": [],
                          "description": "Maximum Segment Size.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "inheritance_disable": {
                              "aliases": [],
                              "description": "Prevent mss from being inherited from parent",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "value": {
                              "aliases": [],
                              "description": "TCP initial maximum segment size.",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        }
                      }
                    },
                    "timers": {
                      "aliases": [],
                      "description": "BGP per neighbor timers.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "holdtime": {
                          "aliases": [],
                          "description": "hold time <3-65535> or 0 Disable hold time.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "keepalive_time": {
                          "aliases": [],
                          "description": "keepalive interval <0-65535>.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "ttl_security": {
                      "aliases": [],
                      "description": "Enable EBGP TTL security.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "inheritance_disable": {
                          "aliases": [],
                          "description": "Prevent ttl-security from being inherited from parent",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "set": {
                          "aliases": [],
                          "description": "set ttl-security",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "update": {
                      "aliases": [],
                      "description": "BGP Update configuration.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "in": {
                          "aliases": [],
                          "description": "Inbound update message handling.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "filtering": {
                              "aliases": [],
                              "description": "Inbound update message filtering",
                              "type": "dict",
                              "required": false,
                              "suboptions": {
                                "attribute_filter": {
                                  "aliases": [],
                                  "description": "Attribute-filter configuration.",
                                  "type": "dict",
                                  "required": false,
                                  "suboptions": {
                                    "group": {
                                      "aliases": [],
                                      "description": "Name of group.",
                                      "type": "str",
                                      "required": false,
                                      "suboptions": {}
                                    }
                                  }
                                },
                                "logging": {
                                  "aliases": [],
                                  "description": "Update filtering syslog message.",
                                  "type": "dict",
                                  "required": false,
                                  "suboptions": {
                                    "disable": {
                                      "aliases": [],
                                      "description": "Disable update filtering syslog message.",
                                      "type": "bool",
                                      "required": false,
                                      "suboptions": {}
                                    }
                                  }
                                },
                                "update_message": {
                                  "aliases": [],
                                  "description": "Filtered update messages.",
                                  "type": "dict",
                                  "required": false,
                                  "suboptions": {
                                    "buffers": {
                                      "aliases": [],
                                      "description": "Number of buffers to store filtered update messages.",
                                      "type": "int",
                                      "required": false,
                                      "suboptions": {}
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "update_source": {
                      "aliases": [],
                      "description": "Source of routing updates.Refer vendor document for valid values.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "rd": {
                  "aliases": [],
                  "description": "route distinguisher.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "auto": {
                      "aliases": [],
                      "description": "Automatic route distinguisher.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "socket": {
                  "aliases": [],
                  "description": "set socket parameters.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "receive_buffer_size": {
                      "aliases": [],
                      "description": "socket receive buffer size.Example-<512-131072>.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "send_buffer_size": {
                      "aliases": [],
                      "description": "socket send buffer size.Example- <4096-131072>.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "timers": {
                  "aliases": [],
                  "description": "BGP per neighbor timers.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "holdtime": {
                      "aliases": [],
                      "description": "hold time <3-65535> or 0 Disable hold time.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "keepalive_time": {
                      "aliases": [],
                      "description": "keepalive interval <0-65535>.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "vrf": {
                  "aliases": [],
                  "description": "VRF name.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            }
          }
        },
        "running_config": {
          "aliases": [],
          "description": "The state the configuration should be left in. - State I(purged) removes all the BGP configurations from the target device. Use caution with this state. - State I(deleted) only removes BGP attributes that this modules manages and does not negate the BGP process completely. Thereby, preserving address-family related configurations under BGP context. - Running states I(deleted) and I(replaced) will result in an error if there are address-family configuration lines present under a neighbor, or a vrf context that is to be removed. Please use the M(cisco.iosxr.iosxr_bgp_address_family) or M(cisco.iosxr.iosxr_bgp_neighbor_address_family) modules for prior cleanup. - Refer to examples for more details.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The state the configuration should be left in.",
          "default": "merged",
          "type": "str",
          "required": false,
          "choices": [
            "deleted",
            "merged",
            "replaced",
            "gathered",
            "rendered",
            "parsed",
            "purged"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manages BGP global resource module.",
      "version_added": "2.0.0"
    },
    "examples": "\n\n##### Using Merged ##########################################\n-----------------------------------------------------------------\n\n# configuration on device  Before merge state:\n\n\n#RP/0/0/CPU0:10#show running-config router bgp\n#Thu Feb  4 09:38:36.245 UTC\n#% No such configuration item(s)\n#RP/0/0/CPU0:10#\n\n# --------------Merge state---------------\n#  - name: Merge the following configuration\n#       cisco.iosxr.iosxr_bgp_global:\n#         config:\n#             as_number: 65536\n#             default_metric: 5\n#             socket:\n#               receive_buffer_size: 514\n#               send_buffer_size: 4098\n#             bgp:\n#               confederation:\n#                 identifier: 4\n#               bestpath:\n#                 med:\n#                   confed: True\n#               cluster_id: 5\n#               router_id: 192.0.2.10\n#             neighbors:\n#               - neighbor: 192.0.2.13\n#                 remote_as: 65538\n#                 bfd:\n#                   fast_detect:\n#                     strict_mode: True\n#                   multiplier: 6\n#                   minimum_interval: 20\n#             vrfs:\n#               - vrf: vrf1\n#                 default_metric: 5\n# ----------------------------------------\n#\n\n\n# commands:\n# - \"router bgp 65536\",\n# - \"bgp cluster-id 5\",\n# - \"bgp router-id 192.0.2.10\",\n# - \"bgp bestpath med confed\",\n# - \"bgp confederation identifier 4\",\n# - \"default-metric 5\",\n# - \"socket receive-buffer-size 514\",\n# - \"socket send-buffer-size 4098\",\n# - \"neighbor 192.0.2.13\",\n# - \"bfd fast-detect strict-mode\",\n# - \"bfd minimum-interval 20\",\n# - \"bfd multiplier 6\",\n# - \"remote-as 65538\",\n# - \"vrf vrf1\",\n# - \"default-metric 5\"\n\n# Configuration on device After Merge state:\n# --------------------------------------------\n\n# RP/0/0/CPU0:10#show running-config router bgp\n# Thu Feb  4 09:44:32.480 UTC\n# router bgp 65536\n#  bgp confederation identifier 4\n#  bgp router-id 192.0.2.10\n#  bgp cluster-id 5\n#  default-metric 5\n#  socket send-buffer-size 4098\n#  bgp bestpath med confed\n#  socket receive-buffer-size 514\n#  neighbor 192.0.2.13\n#   remote-as 65538\n#   bfd fast-detect strict-mode\n#   bfd multiplier 6\n#   bfd minimum-interval 20\n#  !\n#  vrf vrf1\n#   default-metric 5\n#  !\n# !\n\n##### Using replaced ###########################################\n\n# configuration on device before replaced\n# --------------------------------------------\n#\n# RP/0/0/CPU0:10#show running-config router bgp\n# Thu Feb  4 09:44:32.480 UTC\n# router bgp 65536\n#  bgp confederation identifier 4\n#  bgp router-id 192.0.2.10\n#  bgp cluster-id 5\n#  default-metric 5\n#  socket send-buffer-size 4098\n#  bgp bestpath med confed\n#  socket receive-buffer-size 514\n#  neighbor 192.0.2.13\n#   remote-as 65538\n#   bfd fast-detect strict-mode\n#   bfd multiplier 6\n#   bfd minimum-interval 20\n#  !\n#  vrf vrf1\n#   default-metric 5\n#  !\n# !\n# --------------Replace state---------------\n# - name: Replace the following configuration\n#       cisco.iosxr.iosxr_bgp_global:\n#         state: replaced\n#         config:\n#             as_number: 65536\n#             default_metric: 4\n#             socket:\n#               receive_buffer_size: 514\n#               send_buffer_size: 4098\n#             bgp:\n#               confederation:\n#                 identifier: 4\n#               bestpath:\n#                 med:\n#                   confed: True\n#               cluster_id: 5\n#               router_id: 192.0.2.10\n#             neighbors:\n#               - neighbor: 192.0.2.14\n#                 remote_as: 65538\n#                 bfd:\n#                   fast_detect:\n#                     strict_mode: True\n#                   multiplier: 6\n#                   minimum_interval: 20\n#             vrfs:\n#               - vrf: vrf1\n#                 default_metric: 5\n# -------------------------------------------\n# commands:\n# - \"router bgp 65536\",\n# - \"default-metric 4\",\n# - \"neighbor 192.0.2.14\",\n# - \"bfd fast-detect strict-mode\",\n# - \"bfd minimum-interval 20\",\n# - \"bfd multiplier 6\",\n# - \"remote-as 65538\",\n# - \"no neighbor 192.0.2.13\"\n\n# configuration on device After Replaced  state:\n# ----------------------------------------------\n\n# RP/0/0/CPU0:10#show running-config router bgp\n# Thu Feb  4 09:54:11.161 UTC\n# router bgp 65536\n#  bgp confederation identifier 4\n#  bgp router-id 192.0.2.10\n#  bgp cluster-id 5\n#  default-metric 4\n#  socket send-buffer-size 4098\n#  bgp bestpath med confed\n#  socket receive-buffer-size 514\n#  neighbor 192.0.2.14\n#   remote-as 65538\n#   bfd fast-detect strict-mode\n#   bfd multiplier 6\n#   bfd minimum-interval 20\n#  !\n#  vrf vrf1\n#   default-metric 5\n#  !\n# !\n\n\n##### Using deleted ############################################\n\n# configuration on device Before deleted state\n# ---------------------------------------------\n#\n# RP/0/0/CPU0:10#show running-config router bgp\n# Thu Feb  4 09:54:11.161 UTC\n# router bgp 65536\n#  bgp confederation identifier 4\n#  bgp router-id 192.0.2.10\n#  bgp cluster-id 5\n#  default-metric 4\n#  socket send-buffer-size 4098\n#  bgp bestpath med confed\n#  socket receive-buffer-size 514\n#  neighbor 192.0.2.14\n#   remote-as 65538\n#   bfd fast-detect strict-mode\n#   bfd multiplier 6\n#   bfd minimum-interval 20\n#  !\n#  vrf vrf1\n#   default-metric 5\n#  !\n# !\n#\n# --------------------------------------------------------\n# - name: Delete BGP configurations handled by this module\n#  cisco.iosxr.iosxr_bgp_global:\n#         state: deleted\n#         config:\n#             as_number: 65536\n#\n# commands:\n# \"router bgp 65536\",\n# \"no bgp cluster-id 5\",\n# \"no bgp router-id 192.0.2.10\",\n# \"no bgp bestpath med confed\",\n# \"no bgp confederation identifier 4\",\n# \"no default-metric 4\",\n# \"no socket receive-buffer-size 514\",\n# \"no socket send-buffer-size 4098\",\n# \"no neighbor 192.0.2.14\",\n# \"no vrf vrf1\"\n#\n# configuration on device after delete\n# -------------------------------------------\n#\n# RP/0/0/CPU0:10#show running-config router bgp\n# Thu Feb  4 10:01:08.232 UTC\n# router bgp 65536\n# !\n#\n\n\n################# Using Purged ########################################\n\n# configuration on device Before Purged state\n# --------------------------------------------\n#\n# RP/0/0/CPU0:10#show running-config router bgp\n# Thu Feb  4 09:54:11.161 UTC\n# router bgp 65536\n#  bgp confederation identifier 4\n#  bgp router-id 192.0.2.10\n#  bgp cluster-id 5\n#  default-metric 4\n#  socket send-buffer-size 4098\n#  bgp bestpath med confed\n#  socket receive-buffer-size 514\n#  address-family ipv4 unicast\n#  neighbor 192.0.2.14\n#   remote-as 65538\n#   bfd fast-detect strict-mode\n#   bfd multiplier 6\n#   bfd minimum-interval 20\n#   address-family ipv4 unicast\n#  !\n#  vrf vrf1\n#   default-metric 5\n#  !\n# !\n#\n# - name: Purge all BGP configurations from the device\n#   cisco.iosxr.iosxr_bgp_global:\n#     state: purged\n#\n#  commands:\n# - no router bgp 65563\n#\n# configuration on device After purged state:\n# ---------------------------------------------\n#\n# #RP/0/0/CPU0:10#show running-config router bgp\n# #Thu Feb  4 09:38:36.245 UTC\n# #% No such configuration item(s)\n# #RP/0/0/CPU0:10#\n#\n#\n# ################# Using Rendred #######################################################\n#\n# - name: Render platform specific configuration lines (without connecting to the device)\n#   cisco.iosxr.iosxr_bgp_global:\n#         state: rendered\n#         config:\n#             as_number: 1\n#             default_metric: 4\n#             vrfs:\n#               - vrf: vrf3\n#                 bfd:\n#                   minimum_interval: 20\n#                   multiplier: 10\n#                 bgp:\n#                   fast_external_fallover:\n#                     disable: True\n#                   router_id: 1.2.3.4\n#                   auto_policy_soft_reset:\n#                     disable: True\n#                 #rd:\n#                 #  auto: True\n#                 #  #value: 1\n#                 timers:\n#                   keepalive_time: 20\n#                   holdtime: 30\n#               - vrf: vrf2\n#                 bgp:\n#                   enforce_first_as:\n#                     disable: True\n#                 default_metric: 4\n#                 neighbors:\n#                   - neighbor: 1.1.1.3\n#                     remote_as: 2\n#                     graceful_maintenance:\n#                       set: True\n#                       activate:\n#                         #set: True\n#                         inheritance_disable: True\n#                       local_preference:\n#                         value: 1\n#                         #inheritance_disable: True\n#                       as_prepends:\n#                         value: 2\n# rendered output\n# ------------------------------------\n#   \"router bgp 1\",\n#   \"default-metric 4\",\n#   \"vrf vrf3\",\n#   \"bfd multiplier 10\",\n#   \"bfd minimum-interval 20\",\n#   \"bgp auto-policy-soft-reset disable\",\n#   \"bgp fast-external-fallover disable\",\n#   \"bgp router-id 1.2.3.4\",\n#   \"timers bgp 20 30\",\n#   \"vrf vrf2\",\n#   \"neighbor 1.1.1.3\",\n#   \"remote-as 2\",\n#   \"graceful-maintenance\",\n#   \"graceful-maintenance activate inheritance-disable\",\n#   \"graceful-maintenance local-preference 1\",\n#   \"graceful-maintenance as-prepends 2\",\n#   \"bgp enforce-first-as disable\",\n#   \"default-metric 4\"\n#\n# ############## Using parsed #####################\n#  parsed.cfg\n#  ------------\n# router bgp 65536\n#  bgp confederation identifier 4\n#  bgp router-id 192.0.2.10\n#  bgp cluster-id 5\n#  default-metric 4\n#  socket send-buffer-size 4098\n#  bgp bestpath med confed\n#  socket receive-buffer-size 514\n#  neighbor 192.0.2.11\n#   remote-as 65537\n#   cluster-id 3\n#  !\n#  neighbor 192.0.2.14\n#   remote-as 65538\n#   bfd fast-detect strict-mode\n#   bfd multiplier 6\n#   bfd minimum-interval 20\n#  !\n# !\n# ------------------------------------\n#\n# - name: Parse externally provided BGP config\n#   cisco.iosxr.iosxr_bgp_global:\n#     running_config: \"{{ lookup('file', 'parsed.cfg') }}\"\n#     state: parsed\n#\n# #Task output using parsed\n#     as_number: \"65536\"\n#     default_metric: 4\n#     socket:\n#       receive_buffer_size: 514\n#       send_buffer_size: 4098\n#     bgp:\n#       confederation:\n#         identifier: 4\n#       bestpath:\n#         med:\n#           confed: true\n#       cluster_id: \"5\"\n#       router_id: \"192.0.2.10\"\n#     neighbors:\n#       - neighbor: 192.0.2.11\n#         remote_as: 65537\n#         cluster_id: \"3\"\n#       - neighbor: \"192.0.2.14\"\n#         remote_as: 65538\n#         bfd:\n#           fast_detect:\n#             strict_mode: true\n#           multiplier: 6\n#           minimum_interval: 20\n"
  },
  "cisco.iosxr.iosxr_bgp_neighbor_address_family": {
    "doc": {
      "description": "This module configures and manages the attributes of BGP global on Cisco IOS-XR platforms.",
      "has_action": true,
      "notes": "This module works with connection C(network_cli).",
      "options": {
        "config": {
          "aliases": [],
          "description": "BGP neighbor address family configurations.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "as_number": {
              "aliases": [],
              "description": "Autonomous system number.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "neighbors": {
              "aliases": [],
              "description": "A list of BGP neighbor address family configurations.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "address_family": {
                  "aliases": [],
                  "description": "Enable address family and enter its config mode",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "afi": {
                      "aliases": [],
                      "description": "address family.",
                      "type": "str",
                      "required": false,
                      "choices": [
                        "ipv4",
                        "ipv6"
                      ],
                      "suboptions": {}
                    },
                    "aigp": {
                      "aliases": [],
                      "description": "AIGP attribute",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "disable": {
                          "aliases": [],
                          "description": "Ignore AIGP attribute.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "send_cost_community_disable": {
                          "aliases": [],
                          "description": "send AIGP attribute.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "send_med": {
                          "aliases": [],
                          "description": "send med options.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "disable": {
                              "aliases": [],
                              "description": "disable Send AIGP value in MED.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "set": {
                              "aliases": [],
                              "description": "set Send AIGP value in MED.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "set": {
                          "aliases": [],
                          "description": "Set AIGP attribute.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "allowas_in": {
                      "aliases": [],
                      "description": "Allow as-path with my AS present in it.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "set": {
                          "aliases": [],
                          "description": "set allowas_in",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "value": {
                          "aliases": [],
                          "description": "Number of occurences of AS number 1-10.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "as_override": {
                      "aliases": [],
                      "description": "Override matching AS-number while sending update",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "inheritance_disable": {
                          "aliases": [],
                          "description": "Prevent as-override from being inherited from the parent.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "set": {
                          "aliases": [],
                          "description": "set as_override",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "bestpath_origin_as_allow_invalid": {
                      "aliases": [],
                      "description": "Change default route selection criteria.Allow BGP origin-AS knobs.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "capability_orf_prefix": {
                      "aliases": [],
                      "description": "Advertise address prefix ORF capability to this neighbor.",
                      "type": "str",
                      "required": false,
                      "choices": [
                        "both",
                        "send",
                        "none",
                        "receive"
                      ],
                      "suboptions": {}
                    },
                    "default_originate": {
                      "aliases": [],
                      "description": "Originate default route to this neighbor.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "inheritance_disable": {
                          "aliases": [],
                          "description": "Prevent default-originate from being inherited from the parent.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "route_policy": {
                          "aliases": [],
                          "description": "Route policy to specify criteria to originate default",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "set": {
                          "aliases": [],
                          "description": "set default route.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "long_lived_graceful_restart": {
                      "aliases": [],
                      "description": "Enable long lived graceful restart support.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "capable": {
                          "aliases": [],
                          "description": "Treat neighbor as LLGR capable.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "stale_time": {
                          "aliases": [],
                          "description": "Maximum time to wait before purging long-lived stale routes.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "accept": {
                              "aliases": [],
                              "description": "max accept time",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "send": {
                              "aliases": [],
                              "description": "max send time",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        }
                      }
                    },
                    "maximum_prefix": {
                      "aliases": [],
                      "description": "Maximum number of prefixes to accept from this peer.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "discard_extra_paths": {
                          "aliases": [],
                          "description": "Discard extra paths when limit is exceeded.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "max_limit": {
                          "aliases": [],
                          "description": "maximum no. of prefix limit.<1-4294967295.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "restart": {
                          "aliases": [],
                          "description": "Restart time interval.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "threshold_value": {
                          "aliases": [],
                          "description": "hreshold value (%) at which to generate a warning msg <1-100>.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "warning_only": {
                          "aliases": [],
                          "description": "Only give warning message when limit is exceeded.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "multipath": {
                      "aliases": [],
                      "description": "Paths from this neighbor is eligible for multipath.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "next_hop_self": {
                      "aliases": [],
                      "description": "Disable the next hop calculation for this neighbor.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "inheritance_disable": {
                          "aliases": [],
                          "description": "Prevent next_hop_self from being inherited from the parent.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "set": {
                          "aliases": [],
                          "description": "set next hop self.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "next_hop_unchanged": {
                      "aliases": [],
                      "description": "Disable the next hop calculation for this neighbor.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "inheritance_disable": {
                          "aliases": [],
                          "description": "Prevent next_hop_unchanged from being inherited from the parent.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "multipath": {
                          "aliases": [],
                          "description": "Do not overwrite nexthop before advertising multipaths.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "set": {
                          "aliases": [],
                          "description": "set next hop unchanged.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "optimal_route_reflection_group_name": {
                      "aliases": [],
                      "description": "Configure optimal-route-reflection group.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "orf_route_policy": {
                      "aliases": [],
                      "description": "Specify ORF and inbound filtering criteria.'",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "origin_as": {
                      "aliases": [],
                      "description": "BGP origin-AS knobs.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "validation": {
                          "aliases": [],
                          "description": "BGP origin-AS validation knobs.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "disable": {
                              "aliases": [],
                              "description": "Disable RPKI origin-AS validation.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        }
                      }
                    },
                    "remove_private_AS": {
                      "aliases": [],
                      "description": "Remove private AS number from outbound updates.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "entire_aspath": {
                          "aliases": [],
                          "description": "remove only if all ASes in the path are private.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "inbound": {
                          "aliases": [],
                          "description": "Remove private AS number from inbound updates.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "inheritance_disable": {
                          "aliases": [],
                          "description": "Prevent remove-private-AS from being inherited from the parent.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "set": {
                          "aliases": [],
                          "description": "set remove private As.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "route_policy": {
                      "aliases": [],
                      "description": "Apply route policy to neighbor.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "inbound": {
                          "aliases": [],
                          "description": "Apply route policy to inbound routes.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "outbound": {
                          "aliases": [],
                          "description": "Apply route policy to outbound routes.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "route_reflector_client": {
                      "aliases": [],
                      "description": "Configure a neighbor as Route Reflector client.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "inheritance_disable": {
                          "aliases": [],
                          "description": "Prevent route-reflector-client from being inherited from the parent.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "set": {
                          "aliases": [],
                          "description": "set route-reflector-client.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "safi": {
                      "aliases": [],
                      "description": "Address Family modifier",
                      "type": "str",
                      "required": false,
                      "choices": [
                        "flowspec",
                        "mdt",
                        "multicast",
                        "mvpn",
                        "rt-filter",
                        "tunnel",
                        "unicast",
                        "labeled-unicast"
                      ],
                      "suboptions": {}
                    },
                    "send_community_ebgp": {
                      "aliases": [],
                      "description": "Send community attribute to this external neighbor.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "inheritance_disable": {
                          "aliases": [],
                          "description": "Prevent send_community_ebgp from being inherited from the parent.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "set": {
                          "aliases": [],
                          "description": "set send_community_ebgp.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "send_community_gshut_ebgp": {
                      "aliases": [],
                      "description": "Allow the g-shut community to be sent to this external neighbor.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "inheritance_disable": {
                          "aliases": [],
                          "description": "Prevent send_community_gshut_ebgp from being inherited from the parent.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "set": {
                          "aliases": [],
                          "description": "set send_community_gshut_ebgp.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "send_extended_community_ebgp": {
                      "aliases": [],
                      "description": "Send extended community attribute to this external neighbor.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "inheritance_disable": {
                          "aliases": [],
                          "description": "Prevent send_extended_community_ebgp from being inherited from the parent.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "set": {
                          "aliases": [],
                          "description": "set send_extended_community_ebgp.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "send_multicast_attributes": {
                      "aliases": [],
                      "description": "Send multicast attributes to this neighbor .",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "disable": {
                          "aliases": [],
                          "description": "Disable send multicast attributes.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "set": {
                          "aliases": [],
                          "description": "set send_multicast_attributes.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "soft_reconfiguration": {
                      "aliases": [],
                      "description": "Per neighbor soft reconfiguration.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "inbound": {
                          "aliases": [],
                          "description": "inbound soft reconfiguration",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "always": {
                              "aliases": [],
                              "description": "Allow inbound soft reconfiguration for this neighbor. Always use soft reconfig, even if route refresh is supported.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "inheritance_disable": {
                              "aliases": [],
                              "description": "Prevent soft_reconfiguration from being inherited from the parent.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "set": {
                              "aliases": [],
                              "description": "set inbound",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        }
                      }
                    },
                    "validation": {
                      "aliases": [],
                      "description": "Flowspec Validation for this neighbor.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "disable": {
                          "aliases": [],
                          "description": "disable validation.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "redirect": {
                          "aliases": [],
                          "description": "Flowspec Redirect nexthop Validation.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "set": {
                          "aliases": [],
                          "description": "set validation.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "weight": {
                      "aliases": [],
                      "description": "Set default weight for routes from this neighbor.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "neighbor_address": {
                  "aliases": [],
                  "description": "Neighbor router address.",
                  "type": "str",
                  "required": true,
                  "suboptions": {}
                }
              }
            },
            "vrfs": {
              "aliases": [],
              "description": "Configure BGP neighbor afin a VRF.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "neighbors": {
                  "aliases": [],
                  "description": "A list of BGP neighbor address family configurations.",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "address_family": {
                      "aliases": [],
                      "description": "Enable address family and enter its config mode",
                      "type": "list",
                      "required": false,
                      "elements": "dict",
                      "suboptions": {
                        "afi": {
                          "aliases": [],
                          "description": "address family.",
                          "type": "str",
                          "required": false,
                          "choices": [
                            "ipv4",
                            "ipv6"
                          ],
                          "suboptions": {}
                        },
                        "aigp": {
                          "aliases": [],
                          "description": "AIGP attribute",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "disable": {
                              "aliases": [],
                              "description": "Ignore AIGP attribute.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "send_cost_community_disable": {
                              "aliases": [],
                              "description": "send AIGP attribute.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "send_med": {
                              "aliases": [],
                              "description": "send med options.",
                              "type": "dict",
                              "required": false,
                              "suboptions": {
                                "disable": {
                                  "aliases": [],
                                  "description": "disable Send AIGP value in MED.",
                                  "type": "bool",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "set": {
                                  "aliases": [],
                                  "description": "set Send AIGP value in MED.",
                                  "type": "bool",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            },
                            "set": {
                              "aliases": [],
                              "description": "Set AIGP attribute.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "allowas_in": {
                          "aliases": [],
                          "description": "Allow as-path with my AS present in it.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "set": {
                              "aliases": [],
                              "description": "set allowas_in",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "value": {
                              "aliases": [],
                              "description": "Number of occurences of AS number 1-10.",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "as_overrride": {
                          "aliases": [],
                          "description": "Override matching AS-number while sending update",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "inheritance_disable": {
                              "aliases": [],
                              "description": "Prevent as-override from being inherited from the parent.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "set": {
                              "aliases": [],
                              "description": "set as_override",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "capability_orf_prefix": {
                          "aliases": [],
                          "description": "Advertise address prefix ORF capability to this neighbor.",
                          "type": "str",
                          "required": false,
                          "choices": [
                            "both",
                            "send",
                            "none",
                            "receive"
                          ],
                          "suboptions": {}
                        },
                        "default_originate": {
                          "aliases": [],
                          "description": "Originate default route to this neighbor.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "inheritance_disable": {
                              "aliases": [],
                              "description": "Prevent default-originate from being inherited from the parent.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "route_policy": {
                              "aliases": [],
                              "description": "Route policy to specify criteria to originate default",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            },
                            "set": {
                              "aliases": [],
                              "description": "set default route.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "long_lived_graceful_restart": {
                          "aliases": [],
                          "description": "Enable long lived graceful restart support.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "capable": {
                              "aliases": [],
                              "description": "Treat neighbor as LLGR capable.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "stale_time": {
                              "aliases": [],
                              "description": "Maximum time to wait before purging long-lived stale routes.",
                              "type": "dict",
                              "required": false,
                              "suboptions": {
                                "accept": {
                                  "aliases": [],
                                  "description": "max accept time",
                                  "type": "int",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "send": {
                                  "aliases": [],
                                  "description": "max send time",
                                  "type": "int",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            }
                          }
                        },
                        "maximum_prefix": {
                          "aliases": [],
                          "description": "Maximum number of prefixes to accept from this peer.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "discard_extra_paths": {
                              "aliases": [],
                              "description": "Discard extra paths when limit is exceeded.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "max_limit": {
                              "aliases": [],
                              "description": "maximum no. of prefix limit.<1-4294967295.",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "restart": {
                              "aliases": [],
                              "description": "Restart time interval.",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "threshold_value": {
                              "aliases": [],
                              "description": "hreshold value (%) at which to generate a warning msg <1-100>.",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "warning_only": {
                              "aliases": [],
                              "description": "Only give warning message when limit is exceeded.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "multipath": {
                          "aliases": [],
                          "description": "Paths from this neighbor is eligible for multipath.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "next_hop_self": {
                          "aliases": [],
                          "description": "Disable the next hop calculation for this neighbor.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "inheritance_disable": {
                              "aliases": [],
                              "description": "Prevent next_hop_self from being inherited from the parent.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "set": {
                              "aliases": [],
                              "description": "set next hop self.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "next_hop_unchanged": {
                          "aliases": [],
                          "description": "Disable the next hop calculation for this neighbor.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "inheritance_disable": {
                              "aliases": [],
                              "description": "Prevent next_hop_unchanged from being inherited from the parent.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "multipath": {
                              "aliases": [],
                              "description": "Do not overwrite nexthop before advertising multipaths.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "set": {
                              "aliases": [],
                              "description": "set next hop unchanged.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "optimal_route_reflection_group_name": {
                          "aliases": [],
                          "description": "Configure optimal-route-reflection group.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "orf_route_policy": {
                          "aliases": [],
                          "description": "Specify ORF and inbound filtering criteria.'",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "remove_private_AS": {
                          "aliases": [],
                          "description": "Remove private AS number from outbound updates.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "entire_aspath": {
                              "aliases": [],
                              "description": "remove only if all ASes in the path are private.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "inbound": {
                              "aliases": [],
                              "description": "Remove private AS number from inbound updates.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "inheritance_disable": {
                              "aliases": [],
                              "description": "Prevent remove-private-AS from being inherited from the parent.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "set": {
                              "aliases": [],
                              "description": "set remove private As.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "route_policy": {
                          "aliases": [],
                          "description": "Apply route policy to neighbor.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "inbound": {
                              "aliases": [],
                              "description": "Apply route policy to inbound routes.",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            },
                            "outbound": {
                              "aliases": [],
                              "description": "Apply route policy to outbound routes.",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "route_reflector_client": {
                          "aliases": [],
                          "description": "Configure a neighbor as Route Reflector client.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "inheritance_disable": {
                              "aliases": [],
                              "description": "Prevent route-reflector-client from being inherited from the parent.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "set": {
                              "aliases": [],
                              "description": "set route-reflector-client.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "safi": {
                          "aliases": [],
                          "description": "Address Family modifier",
                          "type": "str",
                          "required": false,
                          "choices": [
                            "flowspec",
                            "multicast",
                            "mvpn",
                            "unicast",
                            "labeled-unicast"
                          ],
                          "suboptions": {}
                        },
                        "send_community_ebgp": {
                          "aliases": [],
                          "description": "Send community attribute to this external neighbor.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "inheritance_disable": {
                              "aliases": [],
                              "description": "Prevent send_community_ebgp from being inherited from the parent.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "set": {
                              "aliases": [],
                              "description": "set send_community_ebgp.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "send_community_gshut_ebgp": {
                          "aliases": [],
                          "description": "Allow the g-shut community to be sent to this external neighbor.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "inheritance_disable": {
                              "aliases": [],
                              "description": "Prevent send_community_gshut_ebgp from being inherited from the parent.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "set": {
                              "aliases": [],
                              "description": "set send_community_gshut_ebgp.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "send_extended_community_ebgp": {
                          "aliases": [],
                          "description": "Send extended community attribute to this external neighbor.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "inheritance_disable": {
                              "aliases": [],
                              "description": "Prevent send_extended_community_ebgp from being inherited from the parent.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "set": {
                              "aliases": [],
                              "description": "set send_extended_community_ebgp.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "site_of_origin": {
                          "aliases": [],
                          "description": "Site-of-Origin extended community associated with the neighbor.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "soft_reconfiguration": {
                          "aliases": [],
                          "description": "Per neighbor soft reconfiguration.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "inbound": {
                              "aliases": [],
                              "description": "inbound soft reconfiguration",
                              "type": "dict",
                              "required": false,
                              "suboptions": {
                                "always": {
                                  "aliases": [],
                                  "description": "Allow inbound soft reconfiguration for this neighbor. Always use soft reconfig, even if route refresh is supported.",
                                  "type": "bool",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "inheritance_disable": {
                                  "aliases": [],
                                  "description": "Prevent soft_reconfiguration from being inherited from the parent.",
                                  "type": "bool",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "set": {
                                  "aliases": [],
                                  "description": "set inbound",
                                  "type": "bool",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            }
                          }
                        },
                        "validation": {
                          "aliases": [],
                          "description": "Flowspec Validation for this neighbor.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "disable": {
                              "aliases": [],
                              "description": "disable validation.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "redirect": {
                              "aliases": [],
                              "description": "Flowspec Redirect nexthop Validation.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "set": {
                              "aliases": [],
                              "description": "set validation.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "weight": {
                          "aliases": [],
                          "description": "Set default weight for routes from this neighbor.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "neighbor_address": {
                      "aliases": [],
                      "description": "Neighbor router address.",
                      "type": "str",
                      "required": true,
                      "suboptions": {}
                    }
                  }
                },
                "vrf": {
                  "aliases": [],
                  "description": "VRF name.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            }
          }
        },
        "running_config": {
          "aliases": [],
          "description": "This option is used only with state I(parsed).\nThe value of this option should be the output received from the Iosxr device by executing the command B(show running-config router bgp).\nThe state I(parsed) reads the configuration from C(running_config) option and transforms it into Ansible structured data as per the resource module's argspec and the value is then returned in the I(parsed) key within the result.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The state the configuration should be left in.",
          "default": "merged",
          "type": "str",
          "required": false,
          "choices": [
            "deleted",
            "merged",
            "overridden",
            "replaced",
            "gathered",
            "rendered",
            "parsed"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manages BGP neighbor address family resource module.",
      "version_added": "2.0.0"
    },
    "examples": "\n# Using merged\n# Before state:\n# -------------\n# RP/0/0/CPU0:iosxr-02#show running-config router bgp\n# Sat Feb 20 03:49:43.618 UTC\n# router bgp 65536\n#  bgp router-id 192.0.2.1\n#  address-family ipv4 unicast\n#  address-family vpnv4 unicast\n#  neighbor 192.0.2.2\n#   remote-as 65537\n#  neighbor 192.0.2.3\n#   remote-as 65538\n#  vrf vrf1\n#   rd auto\n#   neighbor 192.0.2.4\n#    remote-as 65539\n#  vrf vrf2\n#   rd auto\n#   neighbor 192.0.2.5\n#    remote-as 65540\n\n- name: Merge the provided configuration with the existing running configuration\n  cisco.iosxr.iosxr_bgp_neighbor_address_family:\n    state: merged\n    config:\n      as_number: 65536\n      neighbors:\n        - neighbor_address: 192.0.2.2\n          address_family:\n            - afi: \"ipv4\"\n              safi: \"unicast\"\n              multipath: true\n              default_originate:\n                set: true\n              weight: 5\n        - neighbor_address: 192.0.2.3\n          address_family:\n            - afi: \"ipv4\"\n              safi: \"unicast\"\n              multipath: true\n              default_originate:\n                set: true\n              weight: 4\n      vrfs:\n        - vrf: vrf1\n          neighbors:\n            - neighbor_address: 192.0.2.4\n              address_family:\n                - afi: \"ipv4\"\n                  safi: \"unicast\"\n                  multipath: true\n                  default_originate:\n                    set: true\n                  capability_orf_prefix: both\n        - vrf: vrf2\n          neighbors:\n            - neighbor_address: 192.0.2.5\n              address_family:\n                - afi: \"ipv4\"\n                  safi: \"unicast\"\n                  multipath: true\n                  default_originate:\n                    set: true\n                  capability_orf_prefix: both\n# Task output\n# -------------\n# commands:\n# - router bgp 65536\n# - neighbor 192.0.2.2\n# - address-family ipv4 unicast\n# - default-originate\n# - multipath\n# - weight 5\n# - neighbor 192.0.2.3\n# - address-family ipv4 unicast\n# - default-originate\n# - multipath\n# - weight 4\n# - vrf vrf1\n# - neighbor 192.0.2.4\n# - address-family ipv4 unicast\n# - capability orf prefix both\n# - default-originate\n# - multipath\n# - vrf vrf2\n# - neighbor 192.0.2.5\n# - address-family ipv4 unicast\n# - capability orf prefix both\n# - default-originate\n# - multipath\n#\n#\n# after:\n#   as_number: 65536\n#   neighbors:\n#     - neighbor_address: 192.0.2.2\n#       address_family:\n#         - afi: \"ipv4\"\n#           safi: \"unicast\"\n#           multipath: true\n#           default_originate:\n#             set: true\n#           weight: 5\n#     - neighbor_address: 192.0.2.3\n#       address_family:\n#         - afi: \"ipv4\"\n#           safi: \"unicast\"\n#           multipath: true\n#           default_originate:\n#             set: true\n#           weight: 4\n#   vrfs:\n#     - vrf: vrf1\n#       neighbors:\n#         - neighbor_address: 192.0.2.4\n#           address_family:\n#             - afi: \"ipv4\"\n#               safi: \"unicast\"\n#               multipath: true\n#               default_originate:\n#                 set: true\n#               capability_orf_prefix: both\n#     - vrf: vrf2\n#       neighbors:\n#         - neighbor_address: 192.0.2.5\n#           address_family:\n#             - afi: \"ipv4\"\n#               safi: \"unicast\"\n#               multipath: true\n#               default_originate:\n#                 set: true\n#               capability_orf_prefix: both\n#\n#\n# After state:\n# -------------\n# RP/0/0/CPU0:iosxr-02#show running-config router bgp\n# Sat Feb 20 03:49:43.618 UTC\n# router bgp 65536\n#  bgp router-id 192.0.1.1\n#  address-family ipv4 unicast\n#  address-family vpnv4 unicast\n#  neighbor 192.0.2.2\n#   remote-as 65537\n#   address-family ipv4 unicast\n#     multipath\n#     weight 5\n#     default-originate\n#  neighbor 1.1.1.2\n#   remote-as 65538\n#   address-family ipv4 unicast\n#     multipath\n#     weight 5\n#     default-originate\n#  vrf vrf1\n#   rd auto\n#   neighbor 192.0.2.4\n#    remote-as 65539\n#    address-family ipv4 unicast\n#     multipath\n#     capability orf prefix both\n#     default-originate\n#  vrf vrf2\n#   rd auto\n#   neighbor 192.0.2.5\n#    remote-as 65540\n#    address-family ipv4 unicast\n#     multipath\n#     capability orf prefix both\n#     default-originate\n#\n#\n# Using delete\n# Before state:\n# -------------\n#\n# RP/0/0/CPU0:iosxr-02#show running-config router bgp\n# Sat Feb 20 03:49:43.618 UTC\n# router bgp 65536\n#  bgp router-id 192.0.1.1\n#  address-family ipv4 unicast\n#  address-family vpnv4 unicast\n#  neighbor 192.0.2.2\n#   remote-as 65537\n#   address-family ipv4 unicast\n#     multipath\n#     weight 5\n#     default-originate\n#  neighbor 192.0.2.3\n#   remote-as 65538\n#   address-family ipv4 unicast\n#     multipath\n#     weight 5\n#     default-originate\n#  vrf vrf1\n#   rd auto\n#   neighbor 192.0.2.4\n#    remote-as 65539\n#    address-family ipv4 unicast\n#     multipath\n#     capability orf prefix both\n#     default-originate\n#  vrf vrf2\n#   rd auto\n#   neighbor 192.0.2.5\n#    remote-as 65540\n#    address-family ipv4 unicast\n#     multipath\n#     capability orf prefix both\n#     default-originate\n\n- name:  Delete the provided configuration\n  cisco.iosxr.iosxr_bgp_neighbor_address_family:\n    state: deleted\n    config:\n      as_number: 65536\n      neighbors:\n        - neighbor_address: 192.0.2.2\n          address_family:\n            - afi: \"ipv4\"\n              safi: \"unicast\"\n              multipath: true\n              default_originate:\n                set: true\n              weight: 5\n\n# Task output\n# -------------\n#\n# commands:\n# - router bgp 65536\n# - neighbor 192.0.2.2\n# - no address-family ipv4 unicast\n#\n#\n# after:\n#   as_number: 65536\n#   neighbors:\n#     - neighbor_address: 192.0.2.3\n#       address_family:\n#         - afi: \"ipv4\"\n#           safi: \"unicast\"\n#           multipath: true\n#           default_originate:\n#             set: true\n#           weight: 4\n#   vrfs:\n#     - vrf: vrf1\n#       neighbors:\n#         - neighbor_address: 192.0.2.4\n#           address_family:\n#             - afi: \"ipv4\"\n#               safi: \"unicast\"\n#               multipath: true\n#               default_originate:\n#                 set: true\n#               capability_orf_prefix: both\n#         - neighbor_address: 192.0.2.5\n#           address_family:\n#             - afi: \"ipv4\"\n#               safi: \"unicast\"\n#               multipath: true\n#               default_originate:\n#                 set: true\n#               capability_orf_prefix: both\n#\n#\n# Using Replaced\n# Before state:\n# -------------\n#\n# RP/0/0/CPU0:iosxr-02#show running-config router bgp\n# Sat Feb 20 03:49:43.618 UTC\n# router bgp 65536\n#  bgp router-id 192.0.1.1\n#  address-family ipv4 unicast\n#  address-family vpnv4 unicast\n#  neighbor 192.0.2.2\n#   remote-as 65537\n#   address-family ipv4 unicast\n#     multipath\n#     weight 5\n#     default-originate\n#  neighbor 192.0.2.3\n#   remote-as 65538\n#   address-family ipv4 unicast\n#     multipath\n#     weight 5\n#     default-originate\n#  vrf vrf1\n#   rd auto\n#   neighbor 192.0.2.4\n#    remote-as 65539\n#    address-family ipv4 unicast\n#     multipath\n#     capability orf prefix both\n#     default-originate\n#  vrf vrf2\n#   rd auto\n#   neighbor 192.0.2.5\n#    remote-as 65540\n#    address-family ipv4 unicast\n#     multipath\n#     capability orf prefix both\n#     default-originate\n\n- name: Replace the provided configuration with the existing running configuration\n  cisco.iosxr.iosxr_bgp_neighbor_address_family:\n    state: replaced\n    config:\n      as_number: 65536\n      neighbors:\n        - neighbor_address: 192.0.2.2\n          address_family:\n            - afi: \"ipv4\"\n              safi: \"unicast\"\n              default_originate:\n                set: true\n              weight: 4\n# Task output\n# -------------\n# commands:\n# - router bgp 65536\n# - neighbor 192.0.2.2\n# - address-family ipv4 unicast\n# - no multipath\n# - weight 4\n#\n# after:\n#   as_number: 65536\n#   neighbors:\n#     - neighbor_address: 192.0.2.2\n#       address_family:\n#         - afi: \"ipv4\"\n#           safi: \"unicast\"\n#           multipath: true\n#           default_originate:\n#             set: true\n#           weight: 4\n#     - neighbor_address: 192.0.2.3\n#       address_family:\n#         - afi: \"ipv4\"\n#           safi: \"unicast\"\n#           multipath: true\n#           default_originate:\n#             set: true\n#           weight: 5\n#   vrfs:\n#     - vrf: vrf1\n#       neighbors:\n#         - neighbor_address: 192.0.2.4\n#           address_family:\n#             - afi: \"ipv4\"\n#               safi: \"unicast\"\n#               multipath: true\n#               default_originate:\n#                 set: true\n#               capability_orf_prefix: both\n#         - neighbor_address: 192.0.2.5\n#           address_family:\n#             - afi: \"ipv4\"\n#               safi: \"unicast\"\n#               multipath: true\n#               default_originate:\n#                 set: true\n#               capability_orf_prefix: both\n#\n# After state:\n# -------------\n# Nexus9000v# show running-config router bgp\n# router bgp 65536\n#  bgp router-id 192.0.1.1\n#  address-family ipv4 unicast\n#  address-family vpnv4 unicast\n#  neighbor 192.0.2.2\n#   remote-as 65537\n#   address-family ipv4 unicast\n#     multipath\n#     weight 4\n#     default-originate\n#  neighbor 192.0.2.3\n#   remote-as 65538\n#   address-family ipv4 unicast\n#     multipath\n#     weight 5\n#     default-originate\n#  vrf vrf1\n#   rd auto\n#   neighbor 192.0.2.4\n#    remote-as 65539\n#    address-family ipv4 unicast\n#     multipath\n#     capability orf prefix both\n#     default-originate\n#  vrf vrf2\n#   rd auto\n#   neighbor 192.0.2.5\n#    remote-as 65540\n#    address-family ipv4 unicast\n#     multipath\n#     capability orf prefix both\n#     default-originate\n#\n#\n# Using overridden\n# Before state:\n# -------------\n# RP/0/0/CPU0:iosxr-02#show running-config router bgp\n# Sat Feb 20 03:49:43.618 UTC\n# router bgp 65536\n#  bgp router-id 192.0.1.1\n#  address-family ipv4 unicast\n#  address-family vpnv4 unicast\n#  neighbor 192.0.2.2\n#   remote-as 65537\n#   address-family ipv4 unicast\n#     multipath\n#     weight 5\n#     default-originate\n#  neighbor 192.0.2.3\n#   remote-as 65538\n#   address-family ipv4 unicast\n#     multipath\n#     weight 5\n#     default-originate\n#  vrf vrf1\n#   rd auto\n#   neighbor 192.0.2.4\n#    remote-as 65539\n#    address-family ipv4 unicast\n#     multipath\n#     capability orf prefix both\n#     default-originate\n#  vrf vrf2\n#   rd auto\n#   neighbor 192.0.2.5\n#    remote-as 65540\n#    address-family ipv4 unicast\n#     multipath\n#     capability orf prefix both\n#     default-originate\n\n- name:  override the provided configuration\n  cisco.iosxr.iosxr_bgp_neighbor_address_family:\n    state: overridden\n    config:\n      as_number: 65536\n      neighbors:\n        - neighbor_address: 192.0.2.2\n          address_family:\n            - afi: \"ipv4\"\n              safi: \"unicast\"\n              multipath: true\n              default_originate:\n                set: true\n              weight: 5\n# Task output\n# -------------\n#\n# commands:\n# - router bgp 65536\n# - neighbor 192.0.2.3\n# - no address-family ipv4 unicast\n# - vrf vrf1\n# - neighbor 192.0.2.4\n# - no address-family ipv4 unicast\n# - vrf vrf1\n# - neighbor 192.0.2.5\n# - no address-family ipv4 unicast\n#\n#\n#\n# after:\n#   as_number: 65536\n#   neighbors:\n#     - neighbor_address: 192.0.2.2\n#       address_family:\n#         - afi: \"ipv4\"\n#           safi: \"unicast\"\n#           multipath: true\n#           default_originate:\n#             set: true\n#           weight: 5\n#\n# After state:\n# -------------\n# RP/0/0/CPU0:iosxr-02#show running-config router bgp\n# Sat Feb 20 03:49:43.618 UTC\n# router bgp 65536\n#  bgp router-id 192.0.1.1\n#  address-family ipv4 unicast\n#  address-family vpnv4 unicast\n#  neighbor 192.0.2.2\n#   remote-as 65537\n#   address-family ipv4 unicast\n#     multipath\n#     weight 5\n#     default-originate\n#\n#\n#\n# Using rendered\n# Before state:\n# -------------\n# RP/0/0/CPU0:iosxr-02#show running-config router bgp\n# Sat Feb 20 03:49:43.618 UTC\n# router bgp 65536\n#  bgp router-id 192.0.2.1\n#  address-family ipv4 unicast\n#  address-family vpnv4 unicast\n#  neighbor 192.0.2.2\n#   remote-as 65537\n#  neighbor 192.0.2.3\n#   remote-as 65538\n#  vrf vrf1\n#   rd auto\n#   neighbor 192.0.2.4\n#    remote-as 65539\n#  vrf vrf2\n#   rd auto\n#   neighbor 192.0.2.5\n#    remote-as 65540\n\n- name: Render platform specific configuration lines with state rendered (without connecting to the device)\n  cisco.iosxr.iosxr_bgp_neighbor_address_family:\n    state: rendered\n    config:\n      as_number: 65536\n      neighbors:\n        - neighbor_address: 192.0.2.2\n          address_family:\n            - afi: \"ipv4\"\n              safi: \"unicast\"\n              multipath: true\n              default_originate:\n                set: true\n              weight: 5\n        - neighbor_address: 192.0.2.3\n          address_family:\n            - afi: \"ipv4\"\n              safi: \"unicast\"\n              multipath: true\n              default_originate:\n                set: true\n              weight: 4\n      vrfs:\n        - vrf: vrf1\n          neighbors:\n            - neighbor_address: 192.0.2.4\n              address_family:\n                - afi: \"ipv4\"\n                  safi: \"unicast\"\n                  multipath: true\n                  default_originate:\n                    set: true\n                  capability_orf_prefix: both\n        - vrf: vrf2\n          neighbors:\n            - neighbor_address: 192.0.2.5\n              address_family:\n                - afi: \"ipv4\"\n                  safi: \"unicast\"\n                  multipath: true\n                  default_originate:\n                    set: true\n                  capability_orf_prefix: both\n# Task output\n# -------------\n# commands:\n# - router bgp 65536\n# - neighbor 192.0.2.2\n# - address-family ipv4 unicast\n# - default-originate\n# - multipath\n# - weight 5\n# - neighbor 192.0.2.3\n# - address-family ipv4 unicast\n# - default-originate\n# - multipath\n# - weight 4\n# - vrf vrf1\n# - neighbor 192.0.2.4\n# - address-family ipv4 unicast\n# - capability orf prefix both\n# - default-originate\n# - multipath\n# - vrf vrf2\n# - neighbor 192.0.2.5\n# - address-family ipv4 unicast\n# - capability orf prefix both\n# - default-originate\n# - multipath\n#\n# Using parsed\n#\n#parsed.cfg\n#------------\n# router bgp 65536\n#  bgp router-id 192.0.1.1\n#  address-family ipv4 unicast\n#  address-family vpnv4 unicast\n#  neighbor 192.0.2.2\n#   remote-as 65537\n#   address-family ipv4 unicast\n#     multipath\n#     weight 5\n#     default-originate\n#  neighbor 1.1.1.2\n#   remote-as 65538\n#   address-family ipv4 unicast\n#     multipath\n#     weight 5\n#     default-originate\n#  vrf vrf1\n#   rd auto\n#   neighbor 192.0.2.4\n#    remote-as 65539\n#    address-family ipv4 unicast\n#     multipath\n#     capability orf prefix both\n#     default-originate\n#  vrf vrf2\n#   rd auto\n#   neighbor 192.0.2.5\n#    remote-as 65540\n#    address-family ipv4 unicast\n#     multipath\n#     capability orf prefix both\n#     default-originate\n\n- name: Parse externally provided BGP neighbor AF config\n  cisco.iosxr.iosxr_bgp_neighbor_address_family:\n    running_config: \"{{ lookup('file', 'parsed.cfg') }}\"\n    state: parsed\n# Task output (redacted)\n# -----------------------\n# parsed:\n#   as_number: 65536\n#   neighbors:\n#     - neighbor_address: 192.0.2.2\n#       address_family:\n#         - afi: \"ipv4\"\n#           safi: \"unicast\"\n#           multipath: true\n#           default_originate:\n#             set: true\n#           weight: 5\n#     - neighbor_address: 192.0.2.3\n#       address_family:\n#         - afi: \"ipv4\"\n#           safi: \"unicast\"\n#           multipath: true\n#           default_originate:\n#             set: true\n#           weight: 4\n#   vrfs:\n#     - vrf: vrf1\n#       neighbors:\n#         - neighbor_address: 192.0.2.4\n#           address_family:\n#             - afi: \"ipv4\"\n#               safi: \"unicast\"\n#               multipath: true\n#               default_originate:\n#                 set: true\n#               capability_orf_prefix: both\n#     - vrf: vrf2\n#       neighbors:\n#         - neighbor_address: 192.0.2.5\n#           address_family:\n#             - afi: \"ipv4\"\n#               safi: \"unicast\"\n#               multipath: true\n#               default_originate:\n#                 set: true\n#               capability_orf_prefix: both\n#\n#\n#Using Gathered\n#-----------------\n# Before state state:\n# -------------\n# RP/0/0/CPU0:iosxr-02#show running-config router bgp\n# Sat Feb 20 03:49:43.618 UTC\n# router bgp 65536\n#  bgp router-id 192.0.1.1\n#  address-family ipv4 unicast\n#  address-family vpnv4 unicast\n#  neighbor 192.0.2.2\n#   remote-as 65537\n#   address-family ipv4 unicast\n#     multipath\n#     weight 5\n#     default-originate\n#  neighbor 1.1.1.2\n#   remote-as 65538\n#   address-family ipv4 unicast\n#     multipath\n#     weight 5\n#     default-originate\n#  vrf vrf1\n#   rd auto\n#   neighbor 192.0.2.4\n#    remote-as 65539\n#    address-family ipv4 unicast\n#     multipath\n#     capability orf prefix both\n#     default-originate\n#  vrf vrf2\n#   rd auto\n#   neighbor 192.0.2.5\n#    remote-as 65540\n#    address-family ipv4 unicast\n#     multipath\n#     capability orf prefix both\n#     default-originate\n#\n#\n#\n- name: Gathered the provided configuration with the existing running configuration\n  cisco.iosxr.iosxr_bgp_neighbor_address_family:\n        config:\n        state: gathered\n\n\n# Task output\n# -----------------------\n# gathered:\n#   as_number: 65536\n#   neighbors:\n#     - neighbor_address: 192.0.2.2\n#       address_family:\n#         - afi: \"ipv4\"\n#           safi: \"unicast\"\n#           multipath: true\n#           default_originate:\n#             set: true\n#           weight: 5\n#     - neighbor_address: 192.0.2.3\n#       address_family:\n#         - afi: \"ipv4\"\n#           safi: \"unicast\"\n#           multipath: true\n#           default_originate:\n#             set: true\n#           weight: 4\n#   vrfs:\n#     - vrf: vrf1\n#       neighbors:\n#         - neighbor_address: 192.0.2.4\n#           address_family:\n#             - afi: \"ipv4\"\n#               safi: \"unicast\"\n#               multipath: true\n#               default_originate:\n#                 set: true\n#               capability_orf_prefix: both\n#     - vrf: vrf2\n#       neighbors:\n#         - neighbor_address: 192.0.2.5\n#           address_family:\n#             - afi: \"ipv4\"\n#               safi: \"unicast\"\n#               multipath: true\n#               default_originate:\n#                 set: true\n#               capability_orf_prefix: both\n#\n\n"
  },
  "cisco.iosxr.iosxr_command": {
    "doc": {
      "description": "Sends arbitrary commands to an IOS XR node and returns the results read from the device. This module includes an argument that will cause the module to wait for a specific condition before returning or timing out if the condition is not met.\nThis module does not support running commands in configuration mode. Please use M(cisco.iosxr.iosxr_config) to configure iosxr devices.",
      "has_action": true,
      "notes": "Make sure the user has been authorized to execute commands terminal length 0, terminal width 512 and terminal exec prompt no-timestamp.\nThis module works with C(network_cli). See L(the IOS-XR Platform Options,../network/user_guide/platform_iosxr.html).\nThis module does not support C(netconf) connection.\nFor more information on using Ansible to manage network devices see the :ref:`Ansible Network Guide <network_guide>`\nFor more information on using Ansible to manage Cisco devices see the `Cisco integration page <https://www.ansible.com/integrations/networks/cisco>`_.",
      "options": {
        "commands": {
          "aliases": [],
          "description": "List of commands to send to the remote iosxr device over the configured provider. The resulting output from the command is returned. If the I(wait_for) argument is provided, the module is not returned until the condition is satisfied or the number of retries has expired.\nIf a command sent to the device requires answering a prompt, it is possible to pass a dict containing command, answer and prompt. Common answers are 'y' or \"\\r\" (carriage return, must be double quotes). See examples",
          "type": "list",
          "required": true,
          "elements": "raw",
          "suboptions": {}
        },
        "interval": {
          "aliases": [],
          "description": "Configures the interval in seconds to wait between retries of the command. If the command does not pass the specified conditions, the interval indicates how long to wait before trying the command again.",
          "default": "1",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "match": {
          "aliases": [],
          "description": "The I(match) argument is used in conjunction with the I(wait_for) argument to specify the match policy.  Valid values are C(all) or C(any).  If the value is set to C(all) then all conditionals in the wait_for must be satisfied.  If the value is set to C(any) then only one of the values must be satisfied.",
          "default": "all",
          "type": "str",
          "required": false,
          "choices": [
            "any",
            "all"
          ],
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "B(Deprecated)\nStarting with Ansible 2.5 we recommend using C(connection: network_cli).\nFor more information please see the L(Network Guide, ../network/getting_started/network_differences.html#multiple-communication-protocols).\nHORIZONTALLINE\nA dict object containing connection details.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "host": {
              "aliases": [],
              "description": "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [],
              "description": "Specifies the password to use to authenticate the connection to the remote device.   This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "port": {
              "aliases": [],
              "description": "Specifies the port to use when building the connection to the remote device.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "ssh_keyfile": {
              "aliases": [],
              "description": "Specifies the SSH key to use to authenticate the connection to the remote device.   This value is the path to the key used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead.",
              "type": "path",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Specifies the type of connection based transport.",
              "default": "cli",
              "type": "str",
              "required": false,
              "choices": [
                "cli",
                "netconf"
              ],
              "suboptions": {}
            },
            "username": {
              "aliases": [],
              "description": "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "retries": {
          "aliases": [],
          "description": "Specifies the number of retries a command should by tried before it is considered failed. The command is run on the target device every retry and evaluated against the I(wait_for) conditions.",
          "default": "10",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "wait_for": {
          "aliases": [
            "waitfor"
          ],
          "description": "List of conditions to evaluate against the output of the command. The task will wait for each condition to be true before moving forward. If the conditional is not true within the configured number of retries, the task fails. See examples.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        }
      },
      "short_description": "Run commands on remote devices running Cisco IOS XR",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: run show version on remote devices\n  cisco.iosxr.iosxr_command:\n    commands: show version\n\n- name: run show version and check to see if output contains iosxr\n  cisco.iosxr.iosxr_command:\n    commands: show version\n    wait_for: result[0] contains IOS-XR\n\n- name: run multiple commands on remote nodes\n  cisco.iosxr.iosxr_command:\n    commands:\n    - show version\n    - show interfaces\n    - {command: example command that prompts, prompt: expected prompt, answer: yes}\n\n- name: run multiple commands and evaluate the output\n  cisco.iosxr.iosxr_command:\n    commands:\n    - show version\n    - show interfaces\n    wait_for:\n    - result[0] contains IOS-XR\n    - result[1] contains Loopback0\n"
  },
  "cisco.iosxr.iosxr_config": {
    "doc": {
      "description": "Cisco IOS XR configurations use a simple block indent file syntax for segmenting configuration into sections.  This module provides an implementation for working with IOS XR configuration sections in a deterministic way.",
      "has_action": true,
      "notes": "This module works with connection C(network_cli). See L(the IOS-XR Platform Options,../network/user_guide/platform_iosxr.html).\nThis module does not support C(netconf) connection\nAbbreviated commands are NOT idempotent, see L(Network FAQ,../network/user_guide/faq.html\nAvoid service disrupting changes (viz. Management IP) from config replace.\nDo not use C(end) in the replace config file.\nTo ensure idempotency and correct diff the configuration lines in the relevant module options should be similar to how they appear if present in the running configuration on device including the indentation.\nFor more information on using Ansible to manage network devices see the :ref:`Ansible Network Guide <network_guide>`\nFor more information on using Ansible to manage Cisco devices see the `Cisco integration page <https://www.ansible.com/integrations/networks/cisco>`_.",
      "options": {
        "admin": {
          "aliases": [],
          "description": "Enters into administration configuration mode for making config changes to the device.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "after": {
          "aliases": [],
          "description": "The ordered set of commands to append to the end of the command stack if a change needs to be made.  Just like with I(before) this allows the playbook designer to append a set of commands to be executed after the command set.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "backup": {
          "aliases": [],
          "description": "This argument will cause the module to create a full backup of the current C(running-config) from the remote device before any changes are made. If the C(backup_options) value is not given, the backup file is written to the C(backup) folder in the playbook root directory or role root directory, if playbook is part of an ansible role. If the directory does not exist, it is created.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "backup_options": {
          "aliases": [],
          "description": "This is a dict object containing configurable options related to backup file path. The value of this option is read only when C(backup) is set to I(yes), if C(backup) is set to I(no) this option will be silently ignored.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "dir_path": {
              "aliases": [],
              "description": "This option provides the path ending with directory name in which the backup configuration file will be stored. If the directory does not exist it will be first created and the filename is either the value of C(filename) or default filename as described in C(filename) options description. If the path value is not given in that case a I(backup) directory will be created in the current working directory and backup configuration will be copied in C(filename) within I(backup) directory.",
              "type": "path",
              "required": false,
              "suboptions": {}
            },
            "filename": {
              "aliases": [],
              "description": "The filename to be used to store the backup configuration. If the filename is not given it will be generated based on the hostname, current time and date in format defined by <hostname>_config.<current-date>@<current-time>",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "before": {
          "aliases": [],
          "description": "The ordered set of commands to push on to the command stack if a change needs to be made.  This allows the playbook designer the opportunity to perform configuration commands prior to pushing any changes without affecting how the set of commands are matched against the system.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "comment": {
          "aliases": [],
          "description": "Allows a commit description to be specified to be included when the configuration is committed.  If the configuration is not changed or committed, this argument is ignored.",
          "default": "configured by iosxr_config",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "config": {
          "aliases": [],
          "description": "The module, by default, will connect to the remote device and retrieve the current running-config to use as a base for comparing against the contents of source.  There are times when it is not desirable to have the task get the current running-config for every task in a playbook.  The I(config) argument allows the implementer to pass in the configuration to use as the base config for comparison. The configuration lines for this option should be similar to how it will appear if present in the running-configuration of the device to ensure idempotency and correct diff.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "disable_default_comment": {
          "aliases": [],
          "description": "disable default comment when set to True.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "exclusive": {
          "aliases": [],
          "description": "Enters into exclusive configuration mode that locks out all users from committing configuration changes until the exclusive session ends.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "force": {
          "aliases": [],
          "description": "The force argument instructs the module to not consider the current devices running-config.  When set to true, this will cause the module to push the contents of I(src) into the device without first checking if already configured.\nNote this argument should be considered deprecated.  To achieve the equivalent, set the C(match=none) which is idempotent.  This argument will be removed in a future release.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "label": {
          "aliases": [],
          "description": "Allows a commit label to be specified to be included when the configuration is committed. A valid label must begin with an alphabet and not exceed 30 characters, only alphabets, digits, hyphens and underscores are allowed. If the configuration is not changed or committed, this argument is ignored.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "lines": {
          "aliases": [
            "commands"
          ],
          "description": "The ordered set of commands that should be configured in the section. The commands must be the exact same commands as found in the device running-config as found in the device running-config to ensure idempotency and correct diff. Be sure to note the configuration command syntax as some commands are automatically modified by the device config parser.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "match": {
          "aliases": [],
          "description": "Instructs the module on the way to perform the matching of the set of commands against the current device config.  If match is set to I(line), commands are matched line by line.  If match is set to I(strict), command lines are matched with respect to position.  If match is set to I(exact), command lines must be an equal match.  Finally, if match is set to I(none), the module will not attempt to compare the source configuration with the running configuration on the remote device.",
          "default": "line",
          "type": "str",
          "required": false,
          "choices": [
            "line",
            "strict",
            "exact",
            "none"
          ],
          "suboptions": {}
        },
        "parents": {
          "aliases": [],
          "description": "The ordered set of parents that uniquely identify the section or hierarchy the commands should be checked against.  If the parents argument is omitted, the commands are checked against the set of top level or global commands.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "B(Deprecated)\nStarting with Ansible 2.5 we recommend using C(connection: network_cli).\nFor more information please see the L(Network Guide, ../network/getting_started/network_differences.html#multiple-communication-protocols).\nHORIZONTALLINE\nA dict object containing connection details.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "host": {
              "aliases": [],
              "description": "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [],
              "description": "Specifies the password to use to authenticate the connection to the remote device.   This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "port": {
              "aliases": [],
              "description": "Specifies the port to use when building the connection to the remote device.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "ssh_keyfile": {
              "aliases": [],
              "description": "Specifies the SSH key to use to authenticate the connection to the remote device.   This value is the path to the key used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead.",
              "type": "path",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Specifies the type of connection based transport.",
              "default": "cli",
              "type": "str",
              "required": false,
              "choices": [
                "cli",
                "netconf"
              ],
              "suboptions": {}
            },
            "username": {
              "aliases": [],
              "description": "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "replace": {
          "aliases": [],
          "description": "Instructs the module on the way to perform the configuration on the device.  If the replace argument is set to I(line) then the modified lines are pushed to the device in configuration mode.  If the replace argument is set to I(block) then the entire command block is pushed to the device in configuration mode if any line is not correct.",
          "default": "line",
          "type": "str",
          "required": false,
          "choices": [
            "line",
            "block",
            "config"
          ],
          "suboptions": {}
        },
        "src": {
          "aliases": [],
          "description": "Specifies the source path to the file that contains the configuration or configuration template to load. The path to the source file can either be the full path on the Ansible control host or a relative path from the playbook or role root directory.  This argument is mutually exclusive with I(lines), I(parents). The configuration lines in the source file should be similar to how it will appear if present in the running-configuration of the device to ensure idempotency and correct diff.",
          "type": "path",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Manage Cisco IOS XR configuration sections",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: configure top level configuration\n  cisco.iosxr.iosxr_config:\n    lines: hostname {{ inventory_hostname }}\n\n- name: configure interface settings\n  cisco.iosxr.iosxr_config:\n    lines:\n    - description test interface\n    - ip address 172.31.1.1 255.255.255.0\n    parents: interface GigabitEthernet0/0/0/0\n\n- name: load a config from disk and replace the current config\n  cisco.iosxr.iosxr_config:\n    src: config.cfg\n    replace: config\n    backup: yes\n\n- name: for idempotency, use full-form commands\n  cisco.iosxr.iosxr_config:\n    lines:\n      # - shut\n    - shutdown\n    # parents: int g0/0/0/1\n    parents: interface GigabitEthernet0/0/0/1\n\n- name: configurable backup path\n  cisco.iosxr.iosxr_config:\n    src: config.cfg\n    backup: yes\n    backup_options:\n      filename: backup.cfg\n      dir_path: /home/user\n"
  },
  "cisco.iosxr.iosxr_facts": {
    "doc": {
      "description": "Collects facts from network devices running the iosxr operating system. This module places the facts gathered in the fact tree keyed by the respective resource name.  The facts module will always collect a base set of facts from the device and can enable or disable collection of additional facts.",
      "has_action": true,
      "notes": "This module works with connection C(network_cli). See L(the IOS-XR Platform Options,../network/user_guide/platform_iosxr.html).\nFor more information on using Ansible to manage network devices see the :ref:`Ansible Network Guide <network_guide>`\nFor more information on using Ansible to manage Cisco devices see the `Cisco integration page <https://www.ansible.com/integrations/networks/cisco>`_.",
      "options": {
        "available_network_resources": {
          "aliases": [],
          "description": "When 'True' a list of network resources for which resource modules are available will be provided.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "gather_network_resources": {
          "aliases": [],
          "description": "When supplied, this argument will restrict the facts collected to a given subset. Possible values for this argument include all and the resources like interfaces, lacp etc. Can specify a list of values to include a larger subset. Values can also be used with an initial C(!) to specify that a specific subset should not be collected. Valid subsets are 'all', 'lacp', 'lacp_interfaces', 'lldp_global', 'lldp_interfaces', 'interfaces', 'l2_interfaces', 'l3_interfaces', 'lag_interfaces', 'acls', 'acl_interfaces', 'static_routes', 'ospfv2'.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "gather_subset": {
          "aliases": [],
          "description": "When supplied, this argument will restrict the facts collected to a given subset.  Possible values for this argument include all, hardware, config, and interfaces.  Can specify a list of values to include a larger subset.  Values can also be used with an initial C(!) to specify that a specific subset should not be collected.",
          "default": "!config",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "B(Deprecated)\nStarting with Ansible 2.5 we recommend using C(connection: network_cli).\nFor more information please see the L(Network Guide, ../network/getting_started/network_differences.html#multiple-communication-protocols).\nHORIZONTALLINE\nA dict object containing connection details.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "host": {
              "aliases": [],
              "description": "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [],
              "description": "Specifies the password to use to authenticate the connection to the remote device.   This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "port": {
              "aliases": [],
              "description": "Specifies the port to use when building the connection to the remote device.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "ssh_keyfile": {
              "aliases": [],
              "description": "Specifies the SSH key to use to authenticate the connection to the remote device.   This value is the path to the key used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead.",
              "type": "path",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Specifies the type of connection based transport.",
              "default": "cli",
              "type": "str",
              "required": false,
              "choices": [
                "cli",
                "netconf"
              ],
              "suboptions": {}
            },
            "username": {
              "aliases": [],
              "description": "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        }
      },
      "short_description": "Get facts about iosxr devices.",
      "version_added": "1.0.0"
    },
    "examples": "\n# Gather all facts\n- cisco.iosxr.iosxr_facts:\n    gather_subset: all\n    gather_network_resources: all\n\n# Collect only the config and default facts\n- cisco.iosxr.iosxr_facts:\n    gather_subset:\n    - config\n\n# Do not collect hardware facts\n- cisco.iosxr.iosxr_facts:\n    gather_subset:\n    - '!hardware'\n\n# Collect only the lacp facts\n- cisco.iosxr.iosxr_facts:\n    gather_subset:\n    - '!all'\n    - '!min'\n    gather_network_resources:\n    - lacp\n\n# Do not collect lacp_interfaces facts\n- cisco.iosxr.iosxr_facts:\n    gather_network_resources:\n    - '!lacp_interfaces'\n\n# Collect lacp and minimal default facts\n- cisco.iosxr.iosxr_facts:\n    gather_subset: min\n    gather_network_resources: lacp\n\n# Collect only the interfaces facts\n- cisco.iosxr.iosxr_facts:\n    gather_subset:\n    - '!all'\n    - '!min'\n    gather_network_resources:\n    - interfaces\n    - l2_interfaces\n"
  },
  "cisco.iosxr.iosxr_hostname": {
    "doc": {
      "description": "This module configures and manages the attributes of hostname on Cisco IOSXR platforms.",
      "has_action": true,
      "notes": "Tested against Cisco Iosxr 7.0.2\nThis module works with connection C(network_cli).",
      "options": {
        "config": {
          "aliases": [],
          "description": "Hostname configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "hostname": {
              "aliases": [],
              "description": "hostname of iosxr box.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "running_config": {
          "aliases": [],
          "description": "This option is used only with state I(parsed).\nThe value of this option should be the output received from the IOSXR device by executing the command B(show running-config hostname).\nThe state I(parsed) reads the configuration from C(running_config) option and transforms it into Ansible structured data as per the resource module's argspec and the value is then returned in the I(parsed) key within the result.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The state the configuration should be left in\nThe states I(rendered), I(gathered) and I(parsed) does not perform any change on the device.\nThe state I(rendered) will transform the configuration in C(config) option to platform specific CLI commands which will be returned in the I(rendered) key within the result. For state I(rendered) active connection to remote host is not required.\nThe states I(merged), I(replaced) and I(overridden) have identical behaviour for this module.\nThe state I(gathered) will fetch the running configuration from device and transform it into structured data in the format as per the resource module argspec and the value is returned in the I(gathered) key within the result.\nThe state I(parsed) reads the configuration from C(running_config) option and transforms it into JSON format as per the resource module parameters and the value is returned in the I(parsed) key within the result. The value of C(running_config) option should be the same format as the output of command I(show running-config hostname) executed on device. For state I(parsed) active connection to remote host is not required.",
          "default": "merged",
          "type": "str",
          "required": false,
          "choices": [
            "deleted",
            "merged",
            "overridden",
            "replaced",
            "gathered",
            "rendered",
            "parsed"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manages hostname resource module",
      "version_added": "2.7.0"
    },
    "examples": "\n# Using state: merged\n# Before state:\n# -------------\n\n#RP/0/RP0/CPU0:ios#show running-config hostname\n#Thu Jan 20 19:48:56.011 UTC\n#hostname ios\n\n# Merged play:\n# ------------\n\n- name: Apply the provided configuration\n  cisco.iosxr.iosxr_hostname:\n    config:\n      hostname: Router1\n    state: merged\n\n# Commands Fired:\n# ---------------\n# \"commands\": [\n#         \"hostname Router1\",\n# ],\n\n# After state:\n# ------------\n\n# RP/0/0/CPU0:Router1#show running-config hostname\n#Thu Jan 20 19:48:56.011 UTC\n# hostname Router1\n\n\n# Using state: deleted\n# Before state:\n# -------------\n\n# RP/0/0/CPU0:Router1#show running-config hostname\n#Thu Jan 20 19:48:56.011 UTC\n# hostname Router1\n\n# Deleted play:\n# -------------\n\n- name: Remove all existing configuration\n  cisco.iosxr.iosxr_hostname:\n    state: deleted\n\n# Commands Fired:\n# ---------------\n\n# \"commands\": [\n#     \"no hostname Router1\",\n# ],\n\n# After state:\n# ------------\n#RP/0/RP0/CPU0:ios#show running-config hostname\n#Thu Jan 20 19:55:12.971 UTC\n#hostname ios\n\n# Using state: overridden\n# Before state:\n# -------------\n\n# RP/0/0/CPU0:ios#show running-config hostname\n# hostname ios\n\n# Overridden play:\n# ----------------\n\n- name: Override commands with provided configuration\n  cisco.iosxr.iosxr_hostname:\n    config:\n      hostname: RouterTest\n    state: overridden\n\n# Commands Fired:\n# ---------------\n# \"commands\": [\n#       \"hostname RouterTest\",\n#     ],\n\n# After state:\n# ------------\n\n#RP/0/RP0/CPU0:RouterTest#show running-config hostname\n#Thu Jan 20 19:48:56.011 UTC\n#hostname RouterTest\n\n# Using state: replaced\n# Before state:\n# -------------\n\n#RP/0/RP0/CPU0:RouterTest#show running-config hostname\n#Thu Jan 20 19:48:56.011 UTC\n#hostname RouterTest\n\n# Replaced play:\n# --------------\n\n- name: Replace commands with provided configuration\n  cisco.iosxr.iosxr_hostname:\n    config:\n      hostname: RouterTest\n    state: replaced\n\n# Commands Fired:\n# ---------------\n# \"commands\": [],\n\n# After state:\n# ------------\n# RP/0/0/CPU0:RouterTest#show running-config hostname\n# hostname RouterTest\n\n# Using state: gathered\n# Before state:\n# -------------\n\n#RP/0/RP0/CPU0:RouterTest#show running-config hostname\n#Thu Jan 20 19:48:56.011 UTC\n#hostname RouterTest\n\n# Gathered play:\n# --------------\n\n- name: Gather listed hostname config\n  cisco.iosxr.iosxr_hostname:\n    state: gathered\n\n# Module Execution Result:\n# ------------------------\n#   \"gathered\": {\n#      \"hostname\": \"RouterTest\"\n#     },\n\n# Using state: rendered\n# Rendered play:\n# --------------\n\n- name: Render the commands for provided configuration\n  cisco.iosxr.iosxr_hostname:\n    config:\n      hostname: RouterTest\n    state: rendered\n\n# Module Execution Result:\n# ------------------------\n# \"rendered\": [\n#     \"hostname RouterTest\",\n# ]\n\n# Using state: parsed\n# File: parsed.cfg\n# ----------------\n\n# hostname RouterTest\n# Parsed play:\n# ------------\n\n- name: Parse the provided configuration with the existing running configuration\n  cisco.iosxr.iosxr_hostname:\n    running_config: \"{{ lookup('file', 'parsed.cfg') }}\"\n    state: parsed\n\n# Module Execution Result:\n# ------------------------\n#  \"parsed\": {\n#     \"hostname\": \"RouterTest\"\n# }\n"
  },
  "cisco.iosxr.iosxr_interface": {
    "doc": {
      "description": "This module provides declarative management of Interfaces on Cisco IOS XR network devices.",
      "has_action": true,
      "notes": "This module works with connection C(network_cli) and C(netconf). See L(the IOS-XR Platform Options,../network/user_guide/platform_iosxr.html).\nTested against IOS XRv 6.1.3.\nPreconfiguration of physical interfaces is not supported with C(netconf) transport.\nFor more information on using Ansible to manage network devices see the :ref:`Ansible Network Guide <network_guide>`\nFor more information on using Ansible to manage Cisco devices see the `Cisco integration page <https://www.ansible.com/integrations/networks/cisco>`_.",
      "options": {
        "active": {
          "aliases": [],
          "description": "Whether the interface is C(active) or C(preconfigured). Preconfiguration allows you to configure modular services cards before they are inserted into the router. When the cards are inserted, they are instantly configured. Active cards are the ones already inserted.",
          "default": "active",
          "type": "str",
          "required": false,
          "choices": [
            "active",
            "preconfigure"
          ],
          "suboptions": {}
        },
        "aggregate": {
          "aliases": [],
          "description": "List of interfaces definition",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "active": {
              "aliases": [],
              "description": "Whether the interface is C(active) or C(preconfigured). Preconfiguration allows you to configure modular services cards before they are inserted into the router. When the cards are inserted, they are instantly configured. Active cards are the ones already inserted.",
              "type": "str",
              "required": false,
              "choices": [
                "active",
                "preconfigure"
              ],
              "suboptions": {}
            },
            "delay": {
              "aliases": [],
              "description": "Time in seconds to wait before checking for the operational state on remote device. This wait is applicable for operational state argument which are I(state) with values C(up)/C(down), I(tx_rate) and I(rx_rate).",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "description": {
              "aliases": [],
              "description": "Description of Interface being configured.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "duplex": {
              "aliases": [],
              "description": "Configures the interface duplex mode. Default is auto-negotiation when not configured.",
              "type": "str",
              "required": false,
              "choices": [
                "full",
                "half"
              ],
              "suboptions": {}
            },
            "enabled": {
              "aliases": [],
              "description": "Removes the shutdown configuration, which removes the forced administrative down on the interface, enabling it to move to an up or down state.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "mtu": {
              "aliases": [],
              "description": "Sets the MTU value for the interface. Range is between 64 and 65535'",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "name": {
              "aliases": [],
              "description": "Name of the interface to configure in C(type + path) format. e.g. C(GigabitEthernet0/0/0/0)",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "rx_rate": {
              "aliases": [],
              "description": "Receiver rate in bits per second (bps).\nThis is state check parameter only.\nSupports conditionals, see L(Conditionals in Networking Modules,../network/user_guide/network_working_with_command_output.html)",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "speed": {
              "aliases": [],
              "description": "Configure the speed for an interface. Default is auto-negotiation when not configured.",
              "type": "str",
              "required": false,
              "choices": [
                "10",
                "100",
                "1000"
              ],
              "suboptions": {}
            },
            "state": {
              "aliases": [],
              "description": "State of the Interface configuration, C(up) means present and operationally up and C(down) means present and operationally C(down)",
              "type": "str",
              "required": false,
              "choices": [
                "present",
                "absent",
                "up",
                "down"
              ],
              "suboptions": {}
            },
            "tx_rate": {
              "aliases": [],
              "description": "Transmit rate in bits per second (bps).\nThis is state check parameter only.\nSupports conditionals, see L(Conditionals in Networking Modules,../network/user_guide/network_working_with_command_output.html)",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "delay": {
          "aliases": [],
          "description": "Time in seconds to wait before checking for the operational state on remote device. This wait is applicable for operational state argument which are I(state) with values C(up)/C(down), I(tx_rate) and I(rx_rate).",
          "default": "10",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "Description of Interface being configured.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "duplex": {
          "aliases": [],
          "description": "Configures the interface duplex mode. Default is auto-negotiation when not configured.",
          "type": "str",
          "required": false,
          "choices": [
            "full",
            "half"
          ],
          "suboptions": {}
        },
        "enabled": {
          "aliases": [],
          "description": "Removes the shutdown configuration, which removes the forced administrative down on the interface, enabling it to move to an up or down state.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "mtu": {
          "aliases": [],
          "description": "Sets the MTU value for the interface. Range is between 64 and 65535'",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the interface to configure in C(type + path) format. e.g. C(GigabitEthernet0/0/0/0)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "B(Deprecated)\nStarting with Ansible 2.5 we recommend using C(connection: network_cli).\nFor more information please see the L(Network Guide, ../network/getting_started/network_differences.html#multiple-communication-protocols).\nHORIZONTALLINE\nA dict object containing connection details.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "host": {
              "aliases": [],
              "description": "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [],
              "description": "Specifies the password to use to authenticate the connection to the remote device.   This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "port": {
              "aliases": [],
              "description": "Specifies the port to use when building the connection to the remote device.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "ssh_keyfile": {
              "aliases": [],
              "description": "Specifies the SSH key to use to authenticate the connection to the remote device.   This value is the path to the key used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead.",
              "type": "path",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Specifies the type of connection based transport.",
              "default": "cli",
              "type": "str",
              "required": false,
              "choices": [
                "cli",
                "netconf"
              ],
              "suboptions": {}
            },
            "username": {
              "aliases": [],
              "description": "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "rx_rate": {
          "aliases": [],
          "description": "Receiver rate in bits per second (bps).\nThis is state check parameter only.\nSupports conditionals, see L(Conditionals in Networking Modules,../network/user_guide/network_working_with_command_output.html)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "speed": {
          "aliases": [],
          "description": "Configure the speed for an interface. Default is auto-negotiation when not configured.",
          "type": "str",
          "required": false,
          "choices": [
            "10",
            "100",
            "1000"
          ],
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "State of the Interface configuration, C(up) means present and operationally up and C(down) means present and operationally C(down)",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent",
            "up",
            "down"
          ],
          "suboptions": {}
        },
        "tx_rate": {
          "aliases": [],
          "description": "Transmit rate in bits per second (bps).\nThis is state check parameter only.\nSupports conditionals, see L(Conditionals in Networking Modules,../network/user_guide/network_working_with_command_output.html)",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "ncclient >= 0.5.3 when using netconf",
        "lxml >= 4.1.1 when using netconf"
      ],
      "short_description": "(deprecated, removed after 2022-06-01) Manage Interface on Cisco IOS XR network devices",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: configure interface\n  cisco.iosxr.iosxr_interface:\n    name: GigabitEthernet0/0/0/2\n    description: test-interface\n    speed: 100\n    duplex: half\n    mtu: 512\n\n- name: remove interface\n  cisco.iosxr.iosxr_interface:\n    name: GigabitEthernet0/0/0/2\n    state: absent\n\n- name: make interface up\n  cisco.iosxr.iosxr_interface:\n    name: GigabitEthernet0/0/0/2\n    enabled: true\n\n- name: make interface down\n  cisco.iosxr.iosxr_interface:\n    name: GigabitEthernet0/0/0/2\n    enabled: false\n\n- name: Create interface using aggregate\n  cisco.iosxr.iosxr_interface:\n    aggregate:\n    - name: GigabitEthernet0/0/0/3\n    - name: GigabitEthernet0/0/0/2\n    speed: 100\n    duplex: full\n    mtu: 512\n    state: present\n\n- name: Create interface using aggregate along with additional params in aggregate\n  cisco.iosxr.iosxr_interface:\n    aggregate:\n    - {name: GigabitEthernet0/0/0/3, description: test-interface 3}\n    - {name: GigabitEthernet0/0/0/2, description: test-interface 2}\n    speed: 100\n    duplex: full\n    mtu: 512\n    state: present\n\n- name: Delete interface using aggregate\n  cisco.iosxr.iosxr_interface:\n    aggregate:\n    - name: GigabitEthernet0/0/0/3\n    - name: GigabitEthernet0/0/0/2\n    state: absent\n\n- name: Check intent arguments\n  cisco.iosxr.iosxr_interface:\n    name: GigabitEthernet0/0/0/5\n    state: up\n    delay: 20\n\n- name: Config + intent\n  cisco.iosxr.iosxr_interface:\n    name: GigabitEthernet0/0/0/5\n    enabled: false\n    state: down\n    delay: 20\n"
  },
  "cisco.iosxr.iosxr_interfaces": {
    "doc": {
      "description": "This module manages the interface attributes on Cisco IOS-XR network devices.",
      "has_action": true,
      "notes": "This module works with connection C(network_cli). See L(the IOS-XR Platform Options,../network/user_guide/platform_iosxr.html).",
      "options": {
        "config": {
          "aliases": [],
          "description": "A dictionary of interface options",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "description": {
              "aliases": [],
              "description": "Interface description.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "duplex": {
              "aliases": [],
              "description": "Configures the interface duplex mode. Default is auto-negotiation when not configured.",
              "type": "str",
              "required": false,
              "choices": [
                "full",
                "half"
              ],
              "suboptions": {}
            },
            "enabled": {
              "aliases": [],
              "description": "Administrative state of the interface.\nSet the value to C(True) to administratively enable the interface or C(False) to disable it.",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "mtu": {
              "aliases": [],
              "description": "Sets the MTU value for the interface. Applicable for Ethernet interfaces only.\nRefer to vendor documentation for valid values.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "name": {
              "aliases": [],
              "description": "Full name of the interface to configure in C(type + path) format. e.g. C(GigabitEthernet0/0/0/0)",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "speed": {
              "aliases": [],
              "description": "Configure the speed for an interface. Default is auto-negotiation when not configured.",
              "type": "int",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "running_config": {
          "aliases": [],
          "description": "This option is used only with state I(parsed).\nThe value of this option should be the output received from the IOS-XR device by executing the command B(show running-config interface).\nThe state I(parsed) reads the configuration from C(running_config) option and transforms it into Ansible structured data as per the resource module's argspec and the value is then returned in the I(parsed) key within the result.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The state of the configuration after module completion",
          "default": "merged",
          "type": "str",
          "required": false,
          "choices": [
            "merged",
            "parsed",
            "deleted",
            "replaced",
            "rendered",
            "gathered",
            "overridden"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Interfaces resource module",
      "version_added": "1.0.0"
    },
    "examples": "\n# Using merged\n# Before state:\n# -------------\n#\n# viosxr#show running-config interface\n# interface GigabitEthernet0/0/0/1\n#  shutdown\n# !\n# interface GigabitEthernet0/0/0/2\n#  vrf custB\n#  ipv4 address 178.18.169.23 255.255.255.0\n#  dot1q native vlan 30\n# !\n# interface GigabitEthernet0/0/0/3\n#  description Replaced by Ansible Team\n#  mtu 2000\n#  vrf custB\n#  ipv4 address 10.10.0.2 255.255.255.0\n#  dot1q native vlan 1021\n# !\n- name: Configure Ethernet interfaces\n  cisco.iosxr.iosxr_interfaces:\n    config:\n    - name: GigabitEthernet0/0/0/2\n      description: Configured by Ansible\n      enabled: true\n    - name: GigabitEthernet0/0/0/3\n      description: Configured by Ansible Network\n      enabled: false\n      duplex: full\n    state: merged\n# After state:\n# ------------\n#\n# viosxr#show running-config interface\n# interface GigabitEthernet0/0/0/1\n#  shutdown\n# !\n# interface GigabitEthernet0/0/0/2\n#  description Configured and Merged by Ansible Network\n#  vrf custB\n#  ipv4 address 178.18.169.23 255.255.255.0\n#  dot1q native vlan 30\n# !\n# interface GigabitEthernet0/0/0/3\n#  description Configured and Merged by Ansible Network\n#  mtu 2600\n#  vrf custB\n#  ipv4 address 10.10.0.2 255.255.255.0\n#  duplex full\n#  shutdown\n#  dot1q native vlan 1021\n# !\n# Using replaced\n# Before state:\n# ------------\n#\n# viosxr#show running-config interface\n# interface GigabitEthernet0/0/0/1\n#  description Configured by Ansible\n#  shutdown\n# !\n# interface GigabitEthernet0/0/0/2\n#  description Test\n#  vrf custB\n#  ipv4 address 178.18.169.23 255.255.255.0\n#  dot1q native vlan 30\n# !\n# interface GigabitEthernet0/0/0/3\n#  vrf custB\n#  ipv4 address 10.10.0.2 255.255.255.0\n#  dot1q native vlan 1021\n# !\n- name: Configure following interfaces and replace their existing config\n  cisco.iosxr.iosxr_interfaces:\n    config:\n    - name: GigabitEthernet0/0/0/2\n      description: Configured by Ansible\n      enabled: true\n      mtu: 2000\n    - name: GigabitEthernet0/0/0/3\n      description: Configured by Ansible Network\n      enabled: false\n      duplex: auto\n    state: replaced\n# After state:\n# ------------\n#\n# viosxr#show running-config interface\n# interface GigabitEthernet0/0/0/1\n#  description Configured by Ansible\n#  shutdown\n# !\n# interface GigabitEthernet0/0/0/2\n#  description Configured and Replaced by Ansible\n#  mtu 2000\n#  vrf custB\n#  ipv4 address 178.18.169.23 255.255.255.0\n#  dot1q native vlan 30\n# !\n# interface GigabitEthernet0/0/0/3\n#  description Configured and Replaced by Ansible Network\n#  vrf custB\n#  ipv4 address 10.10.0.2 255.255.255.0\n#  duplex half\n#  shutdown\n#  dot1q native vlan 1021\n# !\n# Using overridden\n# Before state:\n# ------------\n#\n# viosxr#show running-config interface\n# interface GigabitEthernet0/0/0/1\n#  shutdown\n# !\n# interface GigabitEthernet0/0/0/2\n#  description Configured by Ansible\n#  vrf custB\n#  ipv4 address 178.18.169.23 255.255.255.0\n#  dot1q native vlan 30\n# !\n# interface GigabitEthernet0/0/0/3\n#  description Configured by Ansible\n#  mtu 2600\n#  vrf custB\n#  ipv4 address 10.10.0.2 255.255.255.0\n#  duplex full\n#  shutdown\n#  dot1q native vlan 1021\n# !\n- name: Override interfaces\n  cisco.iosxr.iosxr_interfaces:\n    config:\n    - name: GigabitEthernet0/0/0/2\n      description: Configured by Ansible\n      enabled: true\n      duplex: auto\n    - name: GigabitEthernet0/0/0/3\n      description: Configured by Ansible Network\n      enabled: false\n      speed: 1000\n    state: overridden\n# After state:\n# ------------\n#\n# viosxr#show running-config interface\n# interface GigabitEthernet0/0/0/1\n#  shutdown\n# !\n# interface GigabitEthernet0/0/0/2\n#  description Configured and Overridden by Ansible Network\n#  vrf custB\n#  ipv4 address 178.18.169.23 255.255.255.0\n#  speed 1000\n#  dot1q native vlan 30\n# !\n# interface GigabitEthernet0/0/0/3\n#  description Configured and Overridden by Ansible Network\n#  mtu 2000\n#  vrf custB\n#  ipv4 address 10.10.0.2 255.255.255.0\n#  duplex full\n#  shutdown\n#  dot1q native vlan 1021\n# !\n# Using deleted\n# Before state:\n# ------------\n#\n# viosxr#show running-config interface\n# interface GigabitEthernet0/0/0/1\n#  shutdown\n# !\n# interface GigabitEthernet0/0/0/2\n#  description Configured and Overridden by Ansible Network\n#  vrf custB\n#  ipv4 address 178.18.169.23 255.255.255.0\n#  speed 1000\n#  dot1q native vlan 30\n# !\n# interface GigabitEthernet0/0/0/3\n#  description Configured and Overridden by Ansible Network\n#  mtu 2000\n#  vrf custB\n#  ipv4 address 10.10.0.2 255.255.255.0\n#  duplex full\n#  shutdown\n#  dot1q native vlan 1021\n# !\n- name: Delete IOSXR interfaces as in given arguments\n  cisco.iosxr.iosxr_interfaces:\n    config:\n    - name: GigabitEthernet0/0/0/2\n    - name: GigabitEthernet0/0/0/3\n    state: deleted\n# After state:\n# ------------\n#\n# viosxr#show running-config interface\n# interface GigabitEthernet0/0/0/1\n#  shutdown\n# !\n# interface GigabitEthernet0/0/0/2\n#  vrf custB\n#  ipv4 address 178.18.169.23 255.255.255.0\n#  dot1q native vlan 30\n# !\n# interface GigabitEthernet0/0/0/3\n#  vrf custB\n#  ipv4 address 10.10.0.2 255.255.255.0\n#  dot1q native vlan 1021\n# !\n# Using parsed\n# parsed.cfg\n# ------------\n#\n# interface Loopback888\n#  description test for ansible\n#  shutdown\n# !\n# interface MgmtEth0/0/CPU0/0\n#  ipv4 address 10.8.38.70 255.255.255.0\n# !\n# interface GigabitEthernet0/0/0/0\n#  description Configured and Merged by Ansible-Network\n#  mtu 110\n#  ipv4 address 172.31.1.1 255.255.255.0\n#  duplex half\n# !\n# interface GigabitEthernet0/0/0/3\n#  shutdown\n# !\n# interface GigabitEthernet0/0/0/4\n#  shutdown\n# !\n# - name: Convert ACL interfaces config to argspec without connecting to the appliance\n#   cisco.iosxr.iosxr_interfaces:\n#     running_config: \"{{ lookup('file', './parsed.cfg') }}\"\n#     state: parsed\n# Task Output (redacted)\n# -----------------------\n# \"parsed\": [\n#        {\n#            \"name\": \"MgmtEth0/RP0/CPU0/0\"\n#        },\n#        {\n#            \"access_groups\": [\n#                {\n#                    \"acls\": [\n#                        {\n#                            \"direction\": \"in\",\n#                            \"name\": \"acl_1\"\n#                        },\n#                        {\n#                            \"direction\": \"out\",\n#                            \"name\": \"acl_2\"\n#                        }\n#                    ],\n#                    \"afi\": \"ipv4\"\n#                },\n#                {\n#                    \"acls\": [\n#                        {\n#                            \"direction\": \"in\",\n#                            \"name\": \"acl6_1\"\n#                        },\n#                        {\n#                            \"direction\": \"out\",\n#                            \"name\": \"acl6_2\"\n#                        }\n#                    ],\n#                    \"afi\": \"ipv6\"\n#                }\n#            ],\n#            \"name\": \"GigabitEthernet0/0/0/0\"\n#        },\n#        {\n#            \"access_groups\": [\n#                {\n#                    \"acls\": [\n#                        {\n#                            \"direction\": \"out\",\n#                            \"name\": \"acl_1\"\n#                        }\n#                    ],\n#                    \"afi\": \"ipv4\"\n#                }\n#            ],\n#            \"name\": \"GigabitEthernet0/0/0/1\"\n#        }\n#    ]\n# }\n# Using rendered\n- name: Render platform specific commands from task input using rendered state\n  cisco.iosxr.iosxr_interfaces:\n    config:\n    - name: GigabitEthernet0/0/0/0\n      description: Configured and Merged by Ansible-Network\n      mtu: 110\n      enabled: true\n      duplex: half\n    - name: GigabitEthernet0/0/0/1\n      description: Configured and Merged by Ansible-Network\n      mtu: 2800\n      enabled: false\n      speed: 100\n      duplex: full\n    state: rendered\n# Task Output (redacted)\n# -----------------------\n# \"rendered\": [\n#         \"interface GigabitEthernet0/0/0/0\",\n#         \"description Configured and Merged by Ansible-Network\",\n#         \"mtu 110\",\n#         \"duplex half\",\n#         \"no shutdown\",\n#         \"interface GigabitEthernet0/0/0/1\",\n#         \"description Configured and Merged by Ansible-Network\",\n#         \"mtu 2800\",\n#         \"speed 100\",\n#         \"duplex full\",\n#         \"shutdown\"\n#     ]\n# Using gathered\n# Before state:\n# ------------\n#\n# RP/0/0/CPU0:an-iosxr-02#show running-config  interface\n# interface Loopback888\n# description test for ansible\n# shutdown\n# !\n# interface MgmtEth0/0/CPU0/0\n# ipv4 address 10.8.38.70 255.255.255.0\n# !\n# interface GigabitEthernet0/0/0/0\n# description Configured and Merged by Ansible-Network\n# mtu 110\n# ipv4 address 172.31.1.1 255.255.255.0\n# duplex half\n# !\n# interface GigabitEthernet0/0/0/3\n# shutdown\n# !\n# interface GigabitEthernet0/0/0/4\n# shutdown\n# !\n- name: Gather IOSXR interfaces as in given arguments\n  cisco.iosxr.iosxr_interfaces:\n    config:\n    state: gathered\n# Task Output (redacted)\n# -----------------------\n#\n# \"gathered\": [\n#         {\n#             \"description\": \"test for ansible\",\n#             \"enabled\": false,\n#             \"name\": \"Loopback888\"\n#         },\n#         {\n#             \"description\": \"Configured and Merged by Ansible-Network\",\n#             \"duplex\": \"half\",\n#             \"enabled\": true,\n#             \"mtu\": 110,\n#             \"name\": \"GigabitEthernet0/0/0/0\"\n#         },\n#         {\n#             \"enabled\": false,\n#             \"name\": \"GigabitEthernet0/0/0/3\"\n#         },\n#         {\n#             \"enabled\": false,\n#             \"name\": \"GigabitEthernet0/0/0/4\"\n#         }\n#     ]\n# After state:\n# ------------\n#\n# RP/0/0/CPU0:an-iosxr-02#show running-config  interface\n# interface Loopback888\n# description test for ansible\n# shutdown\n# !\n# interface MgmtEth0/0/CPU0/0\n# ipv4 address 10.8.38.70 255.255.255.0\n# !\n# interface GigabitEthernet0/0/0/0\n# description Configured and Merged by Ansible-Network\n# mtu 110\n# ipv4 address 172.31.1.1 255.255.255.0\n# duplex half\n# !\n# interface GigabitEthernet0/0/0/3\n# shutdown\n# !\n# interface GigabitEthernet0/0/0/4\n# shutdown\n# !\n"
  },
  "cisco.iosxr.iosxr_l2_interfaces": {
    "doc": {
      "description": "This module manages the Layer-2 interface attributes on Cisco IOS-XR devices.",
      "has_action": true,
      "notes": "This module works with connection C(network_cli). See L(the IOS-XR Platform Options,../network/user_guide/platform_iosxr.html).",
      "options": {
        "config": {
          "aliases": [],
          "description": "A dictionary of Layer-2 interface options",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "encapsulation": {
              "aliases": [],
              "description": "Specify which packets will be matched by this sub-interface.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "dot1q": {
                  "aliases": [],
                  "description": "IEEE 802.1Q VLAN-tagged packets.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "second_dot1q": {
                  "aliases": [],
                  "description": "IEEE 802.1Q VLAN-tagged packets.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "l2protocol": {
              "aliases": [],
              "description": "Configures Layer 2 protocol tunneling and protocol data unit (PDU) filtering on an interface.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "cdp": {
                  "aliases": [],
                  "description": "Cisco Discovery Protocol (CDP) tunneling and data unit parameters.",
                  "type": "str",
                  "required": false,
                  "choices": [
                    "drop",
                    "forward",
                    "tunnel"
                  ],
                  "suboptions": {}
                },
                "cpsv": {
                  "aliases": [],
                  "description": "CDP, PVST+, STP, and VTP protocols.",
                  "type": "str",
                  "required": false,
                  "choices": [
                    "drop",
                    "reverse-tunnel",
                    "tunnel"
                  ],
                  "suboptions": {}
                },
                "pvst": {
                  "aliases": [],
                  "description": "Configures the per-VLAN Spanning Tree Protocol (PVST) tunneling and data unit parameters.",
                  "type": "str",
                  "required": false,
                  "choices": [
                    "drop",
                    "forward",
                    "tunnel"
                  ],
                  "suboptions": {}
                },
                "stp": {
                  "aliases": [],
                  "description": "Spanning Tree Protocol (STP) tunneling and data unit parameters.",
                  "type": "str",
                  "required": false,
                  "choices": [
                    "drop",
                    "forward",
                    "tunnel"
                  ],
                  "suboptions": {}
                },
                "vtp": {
                  "aliases": [],
                  "description": "VLAN Trunk Protocol (VTP) tunneling and data unit parameters.",
                  "type": "str",
                  "required": false,
                  "choices": [
                    "drop",
                    "forward",
                    "tunnel"
                  ],
                  "suboptions": {}
                }
              }
            },
            "l2transport": {
              "aliases": [],
              "description": "Switchport mode access command to configure the interface as a layer 2 access",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "name": {
              "aliases": [],
              "description": "Full name of the interface/sub-interface excluding any logical unit number, e.g. GigabitEthernet0/0/0/1 or GigabitEthernet0/0/0/1.100.",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "native_vlan": {
              "aliases": [],
              "description": "Configure a native VLAN ID for the trunk",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "propagate": {
              "aliases": [],
              "description": "Propagate Layer 2 transport events. Note that it will work only when the I(l2tranport) option is set to TRUE",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "q_vlan": {
              "aliases": [],
              "description": "802.1Q VLAN configuration. Note that it can accept either 2 VLAN IDs when configuring Q-in-Q VLAN, or it will accept 1 VLAN ID and 'any' as input list when configuring Q-in-any vlan as input. Note, that this option is valid only with respect to Sub-Interface and is not valid when configuring for Interface.",
              "type": "list",
              "required": false,
              "elements": "int",
              "suboptions": {}
            }
          }
        },
        "running_config": {
          "aliases": [],
          "description": "This option is used only with state I(parsed).\nThe value of this option should be the output received from the IOS-XR device by executing the command B(show running-config interface).\nThe state I(parsed) reads the configuration from C(running_config) option and transforms it into Ansible structured data as per the resource module's argspec and the value is then returned in the I(parsed) key within the result.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The state of the configuration after module completion",
          "default": "merged",
          "type": "str",
          "required": false,
          "choices": [
            "merged",
            "replaced",
            "overridden",
            "deleted",
            "rendered",
            "gathered",
            "parsed"
          ],
          "suboptions": {}
        }
      },
      "short_description": "L2 interfaces resource module",
      "version_added": "1.0.0"
    },
    "examples": "\n# Using merged\n#\n# Before state:\n# -------------\n#\n# viosxr#show running-config interface\n# interface GigabitEthernet0/0/0/3\n#  description Ansible Network\n#  vrf custB\n#  ipv4 address 10.10.0.2 255.255.255.0\n#  duplex half\n#  shutdown\n# !\n# interface GigabitEthernet0/0/0/4\n#  description Test description\n# !\n\n- name: Merge provided configuration with device configuration\n  cisco.iosxr.iosxr_l2_interfaces:\n    config:\n    - name: GigabitEthernet0/0/0/3\n      native_vlan: 20\n    - name: GigabitEthernet0/0/0/4\n      native_vlan: 40\n      l2transport: true\n      l2protocol:\n      - stp: tunnel\n    - name: GigabitEthernet0/0/0/3.900\n      l2transport: true\n      q_vlan:\n      - 20\n      - 40\n    state: merged\n\n# After state:\n# ------------\n#\n# viosxr#show running-config interface\n# interface GigabitEthernet0/0/0/3\n#  description Ansible Network\n#  vrf custB\n#  ipv4 address 10.10.0.2 255.255.255.0\n#  duplex half\n#  shutdown\n#  dot1q native vlan 20\n# !\n# interface GigabitEthernet0/0/0/4\n# description Test description\n#  dot1q native vlan 10\n#  l2transport\n#   l2protocol stp tunnel\n#  !\n# !\n# interface GigabitEthernet0/0/0/3.900 l2transport\n#  dot1q vlan 20 40\n# !\n\n# Using replaced\n#\n# Before state:\n# -------------\n#\n# viosxr#show running-config interface\n# interface GigabitEthernet0/0/0/3\n#  description Ansible Network\n#  vrf custB\n#  ipv4 address 10.10.0.2 255.255.255.0\n#  duplex half\n#  shutdown\n#  dot1q native vlan 20\n# !\n# interface GigabitEthernet0/0/0/4\n# description Test description\n#  dot1q native vlan 10\n#  l2transport\n#   l2protocol stp tunnel\n#  !\n# !\n# interface GigabitEthernet0/0/0/3.900 l2transport\n#  dot1q vlan 20 40\n# !\n\n- name: Replaces device configuration of listed interfaces with provided configuration\n  cisco.iosxr.iosxr_l2_interfaces:\n    config:\n    - name: GigabitEthernet0/0/0/4\n      native_vlan: 40\n      l2transport: true\n      l2protocol:\n      - stp: forward\n    - name: GigabitEthernet0/0/0/3.900\n      q_vlan:\n      - 20\n      - any\n    state: replaced\n\n# After state:\n# -------------\n#\n# viosxr#show running-config interface\n# interface GigabitEthernet0/0/0/3\n#  description Ansible Network\n#  vrf custB\n#  ipv4 address 10.10.0.2 255.255.255.0\n#  duplex half\n#  shutdown\n#  dot1q native vlan 20\n# !\n# interface GigabitEthernet0/0/0/4\n# description Test description\n#  dot1q native vlan 40\n#  l2transport\n#   l2protocol stp forward\n#  !\n# !\n# interface GigabitEthernet0/0/0/3.900 l2transport\n#  dot1q vlan 20 any\n# !\n\n# Using overridden\n#\n# Before state:\n# -------------\n#\n# viosxr#show running-config interface\n# interface GigabitEthernet0/0/0/3\n#  description Ansible Network\n#  vrf custB\n#  ipv4 address 10.10.0.2 255.255.255.0\n#  duplex half\n#  shutdown\n#  dot1q native vlan 20\n# !\n# interface GigabitEthernet0/0/0/4\n# description Test description\n#  dot1q native vlan 10\n#  l2transport\n#   l2protocol stp tunnel\n#  !\n# !\n# interface GigabitEthernet0/0/0/3.900 l2transport\n#  dot1q vlan 20 40\n# !\n\n- name: Override device configuration of all interfaces with provided configuration\n  cisco.iosxr.iosxr_l2_interfaces:\n    config:\n    - name: GigabitEthernet0/0/0/4\n      native_vlan: 40\n      l2transport: true\n      l2protocol:\n      - stp: forward\n    - name: GigabitEthernet0/0/0/3.900\n      q_vlan:\n      - 20\n      - any\n    state: overridden\n\n# After state:\n# -------------\n#\n# viosxr#show running-config interface\n# interface GigabitEthernet0/0/0/3\n#  description Ansible Network\n#  vrf custB\n#  ipv4 address 10.10.0.2 255.255.255.0\n#  duplex half\n#  shutdown\n# !\n# interface GigabitEthernet0/0/0/4\n# description Test description\n#  dot1q native vlan 40\n#  l2transport\n#   l2protocol stp forward\n#  !\n# !\n# interface GigabitEthernet0/0/0/3.900\n#  dot1q vlan 20 any\n# !\n\n# Using deleted\n#\n# Before state:\n# -------------\n#\n# viosxr#show running-config interface\n# interface GigabitEthernet0/0/0/3\n#  description Ansible Network\n#  vrf custB\n#  ipv4 address 10.10.0.2 255.255.255.0\n#  duplex half\n#  shutdown\n#  dot1q native vlan 20\n# !\n# interface GigabitEthernet0/0/0/4\n#  description Test description\n#  dot1q native vlan 10\n#  l2transport\n#   l2protocol stp tunnel\n#  !\n# !\n#\n\n- name: \"Delete L2 attributes of given interfaces (Note: This won't delete the interface itself)\"\n  cisco.iosxr.iosxr_l2_interfaces:\n    config:\n    - name: GigabitEthernet0/0/0/4\n    state: deleted\n\n# After state:\n# ------------\n#\n# viosxr#show running-config interface\n# interface GigabitEthernet0/0/0/3\n#  description Ansible Network\n#  vrf custB\n#  ipv4 address 10.10.0.2 255.255.255.0\n#  duplex half\n#  shutdown\n#  dot1q native vlan 20\n# !\n# interface GigabitEthernet0/0/0/4\n#  description Test description\n# !\n\n# Using Deleted without any config passed\n# \"(NOTE: This will delete all of configured resource module attributes from each configured interface)\"\n#\n# Before state:\n# -------------\n#\n# viosxr#show running-config interface\n# interface GigabitEthernet0/0/0/3\n#  description Ansible Network\n#  vrf custB\n#  ipv4 address 10.10.0.2 255.255.255.0\n#  duplex half\n#  shutdown\n#  dot1q native vlan 20\n# !\n# interface GigabitEthernet0/0/0/4\n#  description Test description\n#  dot1q native vlan 10\n#  l2transport\n#   l2protocol stp tunnel\n#  !\n# !\n\n- name: \"Delete L2 attributes of all interfaces (Note: This won't delete the interface itself)\"\n  cisco.iosxr.iosxr_l2_interfaces:\n    state: deleted\n\n# After state:\n# ------------\n#\n# viosxr#show running-config interface\n# interface GigabitEthernet0/0/0/3\n#  description Ansible Network\n#  vrf custB\n#  ipv4 address 10.10.0.2 255.255.255.0\n#  duplex half\n#  shutdown\n# !\n# interface GigabitEthernet0/0/0/4\n#  description Test description\n# !\n\n\n# Using parsed\n# parsed.cfg\n# ------------\n#\n# interface Loopback888\n#  description test for ansible\n#  shutdown\n# !\n# interface MgmtEth0/0/CPU0/0\n#  ipv4 address 10.8.38.70 255.255.255.0\n# !\n# interface GigabitEthernet0/0/0/0\n#  description Configured and Merged by Ansible-Network\n#  mtu 110\n#  ipv4 address 172.31.1.1 255.255.255.0\n#  duplex half\n# !\n# interface GigabitEthernet0/0/0/1\n#  dot1q native vlan 10\n#  l2transport\n#   l2protocol cdp forward\n#   l2protocol pvst tunnel\n#   propagate remote-status\n#  !\n# !\n# interface GigabitEthernet0/0/0/3\n#  shutdown\n# !\n# interface GigabitEthernet0/0/0/3.900\n#  encapsulation dot1q 20 second-dot1q 40\n# !\n# interface GigabitEthernet0/0/0/4\n#  shutdown\n#  dot1q native vlan 40\n# !\n- name: Convert L2 interfaces config to argspec without connecting to the appliance\n  cisco.iosxr.iosxr_l2_interfaces:\n    running_config: \"{{ lookup('file', './parsed.cfg') }}\"\n    state: parsed\n# Task Output (redacted)\n# -----------------------\n# \"parsed\": [\n#         {\n#             \"name\": \"GigabitEthernet0/0/0/0\"\n#         },\n#         {\n#             \"l2protocol\": [\n#                 {\n#                     \"cdp\": \"forward\"\n#                 },\n#                 {\n#                     \"pvst\": \"tunnel\"\n#                 }\n#             ],\n#             \"l2transport\": true,\n#             \"name\": \"GigabitEthernet0/0/0/1\",\n#             \"native_vlan\": 10,\n#             \"propagate\": true\n#         },\n#         {\n#             \"name\": \"GigabitEthernet0/0/0/3\"\n#         },\n#         {\n#             \"name\": \"GigabitEthernet0/0/0/3.900\",\n#             \"q_vlan\": [\n#                 20,\n#                 40\n#             ]\n#         },\n#         {\n#             \"name\": \"GigabitEthernet0/0/0/4\",\n#             \"native_vlan\": 40\n#         }\n#     ]\n\n\n# Using rendered\n- name: Render platform specific commands from task input using rendered state\n  cisco.iosxr.iosxr_l2_interfaces:\n    config:\n\n    - name: GigabitEthernet0/0/0/1\n      native_vlan: 10\n      l2transport: true\n      l2protocol:\n\n      - pvst: tunnel\n\n      - cdp: forward\n      propagate: true\n\n    - name: GigabitEthernet0/0/0/3.900\n      q_vlan:\n      - 20\n      - 40\n\n    - name: GigabitEthernet0/0/0/4\n      native_vlan: 40\n    state: rendered\n# Task Output (redacted)\n# -----------------------\n# \"rendered\": [\n#         \"interface GigabitEthernet0/0/0/1\",\n#         \"dot1q native vlan 10\",\n#         \"l2transport l2protocol pvst tunnel\",\n#         \"l2transport l2protocol cdp forward\",\n#         \"l2transport propagate remote-status\",\n#         \"interface GigabitEthernet0/0/0/3.900\",\n#         \"dot1q vlan 20 40\",\n#         \"interface GigabitEthernet0/0/0/4\",\n#         \"dot1q native vlan 40\"\n#     ]\n\n\n# Using gathered\n# Before state:\n# ------------\n#\n# RP/0/0/CPU0:an-iosxr-02#show running-config  interface\n# interface Loopback888\n#  description test for ansible\n#  shutdown\n# !\n# interface MgmtEth0/0/CPU0/0\n#  ipv4 address 10.8.38.70 255.255.255.0\n# !\n# interface GigabitEthernet0/0/0/0\n#  description Configured and Merged by Ansible-Network\n#  mtu 110\n#  ipv4 address 172.31.1.1 255.255.255.0\n#  duplex half\n# !\n# interface GigabitEthernet0/0/0/1\n#  dot1q native vlan 10\n#  l2transport\n#   l2protocol cdp forward\n#   l2protocol pvst tunnel\n#   propagate remote-status\n#  !\n# !\n# interface GigabitEthernet0/0/0/3\n#  shutdown\n# !\n# interface GigabitEthernet0/0/0/3.900\n#  encapsulation dot1q 20 second-dot1q 40\n# !\n# interface GigabitEthernet0/0/0/4\n#  shutdown\n#  dot1q native vlan 40\n# !\n- name: Gather IOSXR l2 interfaces as in given arguments\n  cisco.iosxr.iosxr_l2_interfaces:\n    config:\n    state: gathered\n# Task Output (redacted)\n# -----------------------\n#\n# \"gathered\": [\n#         {\n#             \"name\": \"GigabitEthernet0/0/0/0\"\n#         },\n#         {\n#             \"l2protocol\": [\n#                 {\n#                     \"cdp\": \"forward\"\n#                 },\n#                 {\n#                     \"pvst\": \"tunnel\"\n#                 }\n#             ],\n#             \"l2transport\": true,\n#             \"name\": \"GigabitEthernet0/0/0/1\",\n#             \"native_vlan\": 10,\n#             \"propagate\": true\n#         },\n#         {\n#             \"name\": \"GigabitEthernet0/0/0/3\"\n#         },\n#         {\n#             \"name\": \"GigabitEthernet0/0/0/3.900\",\n#             \"q_vlan\": [\n#                 20,\n#                 40\n#             ]\n#         },\n#         {\n#             \"name\": \"GigabitEthernet0/0/0/4\",\n#             \"native_vlan\": 40\n#         }\n#     ]\n# After state:\n# ------------\n#\n# RP/0/0/CPU0:an-iosxr-02#show running-config  interface\n# interface Loopback888\n#  description test for ansible\n#  shutdown\n# !\n# interface MgmtEth0/0/CPU0/0\n#  ipv4 address 10.8.38.70 255.255.255.0\n# !\n# interface GigabitEthernet0/0/0/0\n#  description Configured and Merged by Ansible-Network\n#  mtu 110\n#  ipv4 address 172.31.1.1 255.255.255.0\n#  duplex half\n# !\n# interface GigabitEthernet0/0/0/1\n#  dot1q native vlan 10\n#  l2transport\n#   l2protocol cdp forward\n#   l2protocol pvst tunnel\n#   propagate remote-status\n#  !\n# !\n# interface GigabitEthernet0/0/0/3\n#  shutdown\n# !\n# interface GigabitEthernet0/0/0/3.900\n#  encapsulation dot1q 20 second-dot1q 40\n# !\n# interface GigabitEthernet0/0/0/4\n#  shutdown\n#  dot1q native vlan 40\n# !\n\n\n\n"
  },
  "cisco.iosxr.iosxr_l3_interfaces": {
    "doc": {
      "description": "This module provides declarative management of Layer-3 interface on Cisco IOS-XR devices.",
      "has_action": true,
      "notes": "This module works with connection C(network_cli). See L(the IOS-XR Platform Options,../network/user_guide/platform_iosxr.html).",
      "options": {
        "config": {
          "aliases": [],
          "description": "A dictionary of Layer-3 interface options",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "ipv4": {
              "aliases": [],
              "description": "IPv4 address to be set for the Layer-3 interface mentioned in I(name) option.\nThe address format is <ipv4 address>/<mask>, the mask is number in range 0-32 eg. 192.168.0.1/24",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "address": {
                  "aliases": [],
                  "description": "Configures the IPv4 address for Interface.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "secondary": {
                  "aliases": [],
                  "description": "Configures the IP address as a secondary address.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "ipv6": {
              "aliases": [],
              "description": "IPv6 address to be set for the Layer-3 interface mentioned in I(name) option.\nThe address format is <ipv6 address>/<mask>, the mask is number in range 0-128 eg. fd5d:12c9:2201:1::1/64",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "address": {
                  "aliases": [],
                  "description": "Configures the IPv6 address for Interface.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "name": {
              "aliases": [],
              "description": "Full name of the interface excluding any logical unit number, i.e. GigabitEthernet0/1.",
              "type": "str",
              "required": true,
              "suboptions": {}
            }
          }
        },
        "running_config": {
          "aliases": [],
          "description": "This option is used only with state I(parsed).\nThe value of this option should be the output received from the IOS-XR device by executing the command B(show running-config interface).\nThe state I(parsed) reads the configuration from C(running_config) option and transforms it into Ansible structured data as per the resource module's argspec and the value is then returned in the I(parsed) key within the result.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The state of the configuration after module completion",
          "default": "merged",
          "type": "str",
          "required": false,
          "choices": [
            "merged",
            "replaced",
            "overridden",
            "deleted",
            "parsed",
            "rendered",
            "gathered"
          ],
          "suboptions": {}
        }
      },
      "short_description": "L3 interfaces resource module",
      "version_added": "1.0.0"
    },
    "examples": "\n# Using merged\n\n# Before state:\n# -------------\n#\n# viosxr#show running-config interface\n# interface GigabitEthernet0/0/0/1\n#  shutdown\n# !\n# interface GigabitEthernet0/0/0/2\n#  shutdown\n# !\n# interface GigabitEthernet0/0/0/3\n#  ipv4 address 192.168.0.2 255.255.255.0\n#  shutdown\n# !\n# interface GigabitEthernet0/0/0/3.700\n# !\n# interface GigabitEthernet0/0/0/4\n#  ipv6 address fd5d:12c9:2201:1::1/64\n#  shutdown\n# !\n\n- name: Merge provided configuration with device configuration\n  cisco.iosxr.iosxr_l3_interfaces:\n    config:\n    - name: GigabitEthernet0/0/0/2\n      ipv4:\n      - address: 192.168.0.1/24\n    - name: GigabitEthernet0/0/0/3\n      ipv4:\n      - address: 192.168.2.1/24\n        secondary: true\n    state: merged\n\n# After state:\n# ------------\n#\n# viosxr#show running-config interface\n# interface GigabitEthernet0/0/0/1\n#  shutdown\n# !\n# interface GigabitEthernet0/0/0/2\n#  ipv4 address 192.168.0.1 255.255.255.0\n#  shutdown\n# !\n# interface GigabitEthernet0/0/0/3\n#  ipv4 address 192.168.1.0 255.255.255.0\n#  ipv4 address 192.168.2.1 255.255.255.0 secondary\n#  shutdown\n# !\n# interface GigabitEthernet0/0/0/3.700\n# !\n# interface GigabitEthernet0/0/0/4\n#  ipv6 address fd5d:12c9:2201:1::1/64\n#  shutdown\n# !\n\n# Using overridden\n\n# Before state:\n# -------------\n#\n# viosxr#show running-config interface\n# interface GigabitEthernet0/0/0/1\n#  shutdown\n# !\n# interface GigabitEthernet0/0/0/2\n#  ipv4 address 192.168.0.1 255.255.255.0\n#  shutdown\n# !\n# interface GigabitEthernet0/0/0/3\n#  ipv4 address 192.168.1.0 255.255.255.0\n#  shutdown\n# !\n# interface GigabitEthernet0/0/0/3.700\n# !\n# interface GigabitEthernet0/0/0/4\n#  ipv6 address fd5d:12c9:2201:1::1/64\n#  shutdown\n# !\n\n- name: Override device configuration of all interfaces with provided configuration\n  cisco.iosxr.iosxr_l3_interfaces:\n    config:\n    - name: GigabitEthernet0/0/0/3\n      ipv4:\n      - address: 192.168.0.1/24\n    - name: GigabitEthernet0/0/0/3.700\n      ipv4:\n      - address: 192.168.0.2/24\n      - address: 192.168.2.1/24\n        secondary: true\n    state: overridden\n\n# After state:\n# -------------\n#\n# viosxr#show running-config interface\n# interface GigabitEthernet0/0/0/1\n#  shutdown\n# !\n# interface GigabitEthernet0/0/0/2\n#  shutdown\n# !\n# interface GigabitEthernet0/0/0/3\n#  ipv4 address 192.168.0.1 255.255.255.0\n#  shutdown\n# !\n# interface GigabitEthernet0/0/0/3.700\n#  ipv4 address 192.168.0.2 255.255.255.0\n#  ipv4 address 192.168.2.1 255.255.255.0 secondary\n# !\n# interface GigabitEthernet0/0/0/4\n#  shutdown\n# !\n\n# Using replaced\n\n# Before state:\n# -------------\n#\n# viosxr#show running-config interface\n# interface GigabitEthernet0/0/0/1\n#  shutdown\n# !\n# interface GigabitEthernet0/0/0/2\n#  shutdown\n# !\n# interface GigabitEthernet0/0/0/3\n#  ipv4 address 192.168.0.2 255.255.255.0\n#  shutdown\n# !\n# interface GigabitEthernet0/0/0/3.700\n#  ipv4 address 192.168.0.1 255.255.255.0\n# !\n# interface GigabitEthernet0/0/0/4\n#  ipv6 address fd5d:12c9:2201:1::1/64\n#  shutdown\n# !\n\n- name: Replaces device configuration of listed interfaces with provided configuration\n  cisco.iosxr.iosxr_l3_interfaces:\n    config:\n    - name: GigabitEthernet0/0/0/3\n      ipv6:\n      - address: fd5d:12c9:2201:1::1/64\n    - name: GigabitEthernet0/0/0/4\n      ipv4:\n      - address: 192.168.0.2/24\n    state: replaced\n\n# After state:\n# -------------\n#\n# viosxr#show running-config interface\n# interface GigabitEthernet0/0/0/1\n#  shutdown\n# !\n# interface GigabitEthernet0/0/0/2\n#  shutdown\n# !\n# interface GigabitEthernet0/0/0/3\n#  ipv6 address fd5d:12c9:2201:1::1/64\n#  shutdown\n# !\n# interface GigabitEthernet0/0/0/3.700\n#  ipv4 address 192.168.0.1 255.255.255.0\n# !\n# interface GigabitEthernet0/0/0/4\n#  ipv4 address 192.168.0.2 255.255.255.0\n#  shutdown\n# !\n\n# Using deleted\n\n# Before state:\n# -------------\n#\n# viosxr#show running-config interface\n# interface GigabitEthernet0/0/0/1\n#  ipv4 address 192.168.2.1 255.255.255.0\n#  shutdown\n# !\n# interface GigabitEthernet0/0/0/2\n#  ipv4 address 192.168.3.1 255.255.255.0\n#  shutdown\n# !\n# interface GigabitEthernet0/0/0/3\n#  ipv4 address 192.168.0.2 255.255.255.0\n#  shutdown\n# !\n# interface GigabitEthernet0/0/0/3.700\n#  ipv4 address 192.168.0.1 255.255.255.0\n# !\n# interface GigabitEthernet0/0/0/4\n#  ipv6 address fd5d:12c9:2201:1::1/64\n#  shutdown\n# !\n\n- name: \"Delete L3 attributes of given interfaces (Note: This won't delete the interface itself)\"\n  cisco.iosxr.iosxr_l3_interfaces:\n    config:\n    - name: GigabitEthernet0/0/0/3\n    - name: GigabitEthernet0/0/0/4\n    - name: GigabitEthernet0/0/0/3.700\n    state: deleted\n\n# After state:\n# -------------\n#\n# viosxr#show running-config interface\n# interface GigabitEthernet0/0/0/1\n#  ipv4 address 192.168.2.1 255.255.255.0\n#  shutdown\n# !\n# interface GigabitEthernet0/0/0/2\n#  ipv4 address 192.168.3.1 255.255.255.0\n#  shutdown\n# !\n# interface GigabitEthernet0/0/0/3\n#  shutdown\n# !\n# interface GigabitEthernet0/0/0/3.700\n# !\n# interface GigabitEthernet0/0/0/4\n#  shutdown\n# !\n\n# Using Deleted without any config passed\n# \"(NOTE: This will delete all of configured resource module attributes from each configured interface)\"\n\n# Before state:\n# -------------\n#\n# viosxr#show running-config interface\n# interface GigabitEthernet0/0/0/1\n#  ipv4 address 192.168.2.1 255.255.255.0\n#  shutdown\n# !\n# interface GigabitEthernet0/0/0/2\n#  ipv4 address 192.168.3.1 255.255.255.0\n#  shutdown\n# !\n# interface GigabitEthernet0/0/0/3\n#  ipv4 address 192.168.0.2 255.255.255.0\n#  shutdown\n# !\n# interface GigabitEthernet0/0/0/3.700\n#  ipv4 address 192.168.0.1 255.255.255.0\n# !\n# interface GigabitEthernet0/0/0/4\n#  ipv6 address fd5d:12c9:2201:1::1/64\n#  shutdown\n# !\n\n\n- name: \"Delete L3 attributes of all interfaces (Note: This won't delete the interface itself)\"\n  cisco.iosxr.iosxr_l3_interfaces:\n    state: deleted\n\n# After state:\n# -------------\n#\n# viosxr#show running-config interface\n# interface GigabitEthernet0/0/0/1\n#  shutdown\n# !\n# interface GigabitEthernet0/0/0/2\n#  shutdown\n# !\n# interface GigabitEthernet0/0/0/3\n#  shutdown\n# !\n# interface GigabitEthernet0/0/0/3.700\n# !\n# interface GigabitEthernet0/0/0/4\n#  shutdown\n# !\n\n\n# Using parsed\n# parsed.cfg\n# ------------\n#\n# nterface Loopback888\n#  description test for ansible\n#  shutdown\n# !\n# interface MgmtEth0/0/CPU0/0\n#  ipv4 address 10.8.38.70 255.255.255.0\n# !\n# interface GigabitEthernet0/0/0/0\n#  description Configured and Merged by Ansible-Network\n#  mtu 66\n#  ipv4 address 192.0.2.1 255.255.255.0\n#  ipv4 address 192.0.2.2 255.255.255.0 secondary\n#  ipv6 address 2001:db8:0:3::/64\n#  duplex half\n# !\n# interface GigabitEthernet0/0/0/1\n#  description Configured and Merged by Ansible-Network\n#  mtu 66\n#  speed 100\n#  duplex full\n#  dot1q native vlan 10\n#  l2transport\n#   l2protocol cdp forward\n#   l2protocol pvst tunnel\n#   propagate remote-status\n#  !\n# !\n# interface GigabitEthernet0/0/0/3\n#  ipv4 address 192.0.22.1 255.255.255.0\n#  ipv4 address 192.0.23.1 255.255.255.0\n# !\n# - name: Convert L3 interfaces config to argspec without connecting to the appliance\n#   cisco.iosxr.iosxr_l3_interfaces:\n#     running_config: \"{{ lookup('file', './parsed.cfg') }}\"\n#     state: parsed\n# Task Output (redacted)\n# -----------------------\n# \"parsed\": [\n#         {\n#             \"ipv4\": [\n#                 {\n#                     \"address\": \"192.0.2.1 255.255.255.0\"\n#                 },\n#                 {\n#                     \"address\": \"192.0.2.2 255.255.255.0\",\n#                     \"secondary\": true\n#                 }\n#             ],\n#             \"ipv6\": [\n#                 {\n#                     \"address\": \"2001:db8:0:3::/64\"\n#                 }\n#             ],\n#             \"name\": \"GigabitEthernet0/0/0/0\"\n#         },\n#         {\n#             \"name\": \"GigabitEthernet0/0/0/1\"\n#         },\n#         {\n#             \"ipv4\": [\n#                 {\n#                     \"address\": \"192.0.22.1 255.255.255.0\"\n#                 },\n#                 {\n#                     \"address\": \"192.0.23.1 255.255.255.0\"\n#                 }\n#             ],\n#             \"name\": \"GigabitEthernet0/0/0/3\"\n#         }\n#     ]\n\n\n# Using rendered\n- name: Render platform specific commands from task input using rendered state\n  cisco.iosxr.iosxr_l3_interfaces:\n    config:\n\n    - name: GigabitEthernet0/0/0/0\n      ipv4:\n\n      - address: 198.51.100.1/24\n\n    - name: GigabitEthernet0/0/0/1\n      ipv6:\n\n      - address: 2001:db8:0:3::/64\n      ipv4:\n\n      - address: 192.0.2.1/24\n\n      - address: 192.0.2.2/24\n        secondary: true\n    state: rendered\n# Task Output (redacted)\n# -----------------------\n# \"rendered\": [\n#         \"interface GigabitEthernet0/0/0/0\",\n#         \"ipv4 address 198.51.100.1 255.255.255.0\",\n#         \"interface GigabitEthernet0/0/0/1\",\n#         \"ipv4 address 192.0.2.2 255.255.255.0 secondary\",\n#         \"ipv4 address 192.0.2.1 255.255.255.0\",\n#         \"ipv6 address 2001:db8:0:3::/64\"\n#     ]\n# Using gathered\n# Before state:\n# ------------\n#\n# RP/0/0/CPU0:an-iosxr-02#show running-config  interface\n# interface Loopback888\n#  description test for ansible\n#  shutdown\n# !\n# interface MgmtEth0/0/CPU0/0\n#  ipv4 address 10.8.38.70 255.255.255.0\n# !\n# interface GigabitEthernet0/0/0/0\n#  description Configured and Merged by Ansible-Network\n#  mtu 66\n#  ipv4 address 192.0.2.1 255.255.255.0\n#  ipv4 address 192.0.2.2 255.255.255.0 secondary\n#  ipv6 address 2001:db8:0:3::/64\n#  duplex half\n# !\n# interface GigabitEthernet0/0/0/1\n#  description Configured and Merged by Ansible-Network\n#  mtu 66\n#  speed 100\n#  duplex full\n#  dot1q native vlan 10\n#  l2transport\n#   l2protocol cdp forward\n#   l2protocol pvst tunnel\n#   propagate remote-status\n#  !\n# !\n# interface GigabitEthernet0/0/0/3\n#  shutdown\n# !\n# interface GigabitEthernet0/0/0/4\n#  shutdown\n#  dot1q native vlan 40\n# !\n- name: Gather IOSXR l3 interfaces as in given arguments\n  cisco.iosxr.iosxr_l3_interfaces:\n    config:\n    state: gathered\n# Task Output (redacted)\n# -----------------------\n#\n# \"gathered\": [\n#         {\n#             \"name\": \"Loopback888\"\n#         },\n#         {\n#             \"ipv4\": [\n#                 {\n#                     \"address\": \"192.0.2.1 255.255.255.0\"\n#                 },\n#                 {\n#                     \"address\": \"192.0.2.2 255.255.255.0\",\n#                     \"secondary\": true\n#                 }\n#             ],\n#             \"ipv6\": [\n#                 {\n#                     \"address\": \"2001:db8:0:3::/64\"\n#                 }\n#             ],\n#             \"name\": \"GigabitEthernet0/0/0/0\"\n#         },\n#         {\n#             \"name\": \"GigabitEthernet0/0/0/1\"\n#         },\n#         {\n#             \"name\": \"GigabitEthernet0/0/0/3\"\n#         },\n#         {\n#             \"name\": \"GigabitEthernet0/0/0/4\"\n#         }\n#     ]\n# After state:\n# ------------\n#\n# RP/0/0/CPU0:an-iosxr-02#show running-config  interface\n# interface Loopback888\n#  description test for ansible\n#  shutdown\n# !\n# interface MgmtEth0/0/CPU0/0\n#  ipv4 address 10.8.38.70 255.255.255.0\n# !\n# interface GigabitEthernet0/0/0/0\n#  description Configured and Merged by Ansible-Network\n#  mtu 66\n#  ipv4 address 192.0.2.1 255.255.255.0\n#  ipv4 address 192.0.2.2 255.255.255.0 secondary\n#  ipv6 address 2001:db8:0:3::/64\n#  duplex half\n# !\n# interface GigabitEthernet0/0/0/1\n#  description Configured and Merged by Ansible-Network\n#  mtu 66\n#  speed 100\n#  duplex full\n#  dot1q native vlan 10\n#  l2transport\n#   l2protocol cdp forward\n#   l2protocol pvst tunnel\n#   propagate remote-status\n#  !\n# !\n# interface GigabitEthernet0/0/0/3\n#  shutdown\n# !\n# interface GigabitEthernet0/0/0/4\n#  shutdown\n#  dot1q native vlan 40\n# !\n\n\n"
  },
  "cisco.iosxr.iosxr_lacp": {
    "doc": {
      "description": "This module manages Global Link Aggregation Control Protocol (LACP) on IOS-XR devices.",
      "has_action": true,
      "notes": "This module works with connection C(network_cli). See L(the IOS-XR Platform Options,../network/user_guide/platform_iosxr.html).",
      "options": {
        "config": {
          "aliases": [],
          "description": "The provided configurations.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "system": {
              "aliases": [],
              "description": "This option sets the default system parameters for LACP bundles.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "mac": {
                  "aliases": [],
                  "description": "The system MAC related configuration for LACP.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "address": {
                      "aliases": [],
                      "description": "The system ID to use in LACP negotiations.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "priority": {
                  "aliases": [],
                  "description": "The system priority to use in LACP negotiations.\nLower value is higher priority.\nRefer to vendor documentation for valid values.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                }
              }
            }
          }
        },
        "running_config": {
          "aliases": [],
          "description": "This option is used only with state I(parsed).\nThe value of this option should be the output received from the IOS-XR device by executing the command B(show running-config lacp).\nThe state I(parsed) reads the configuration from C(running_config) option and transforms it into Ansible structured data as per the resource module's argspec and the value is then returned in the I(parsed) key within the result.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The state of the configuration after module completion.",
          "default": "merged",
          "type": "str",
          "required": false,
          "choices": [
            "merged",
            "replaced",
            "deleted",
            "parsed",
            "rendered",
            "gathered"
          ],
          "suboptions": {}
        }
      },
      "short_description": "LACP resource module",
      "version_added": "1.0.0"
    },
    "examples": "\n# Using merged\n#\n#\n# ------------\n# Before state\n# ------------\n#\n#\n# RP/0/0/CPU0:iosxr01#show running-config lacp\n# Tue Jul 16 17:46:08.147 UTC\n# % No such configuration item(s)\n#\n#\n\n- name: Merge provided configuration with device configuration\n  cisco.iosxr.iosxr_lacp:\n    config:\n      system:\n        priority: 10\n        mac:\n          address: 00c1.4c00.bd15\n    state: merged\n\n#\n#\n# -----------------------\n# Module Execution Result\n# -----------------------\n#\n# \"before\": {}\n#\n#\n# \"commands\": [\n#    \"lacp system priority 10\",\n#    \"lacp system mac 00c1.4c00.bd15\"\n#  ]\n#\n#\n# \"after\": {\n#    \"system\": {\n#       \"mac\": {\n#          \"address\": \"00c1.4c00.bd15\"\n#       },\n#       \"priority\": 10\n#     }\n#  }\n#\n# -----------\n# After state\n# -----------\n#\n#\n# RP/0/0/CPU0:iosxr01#sh run lacp\n# Tue Jul 16 17:51:29.365 UTC\n# lacp system mac 00c1.4c00.bd15\n# lacp system priority 10\n#\n#\n\n# Using replaced\n#\n#\n# -------------\n# Before state\n# -------------\n#\n#\n# RP/0/0/CPU0:iosxr01#sh run lacp\n# Tue Jul 16 17:53:59.904 UTC\n# lacp system mac 00c1.4c00.bd15\n# lacp system priority 10\n#\n\n- name: Replace device global lacp configuration with the given configuration\n  cisco.iosxr.iosxr_lacp:\n    config:\n      system:\n        priority: 11\n    state: replaced\n#\n#\n# -----------------------\n# Module Execution Result\n# -----------------------\n# \"before\": {\n#    \"system\": {\n#       \"mac\": {\n#         \"address\": \"00c1.4c00.bd15\"\n#       },\n#       \"priority\": 10\n#    }\n#  }\n#\n#\n# \"commands\": [\n#    \"no lacp system mac\",\n#    \"lacp system priority 11\"\n#  ]\n#\n#\n# \"after\": {\n#    \"system\": {\n#       \"priority\": 11\n#    }\n# }\n#\n# -----------\n# After state\n# -----------\n#\n#\n# RP/0/0/CPU0:iosxr01#sh run lacp\n# Tue Jul 16 18:02:40.379 UTC\n# lacp system priority 11\n#\n#\n\n# Using deleted\n#\n#\n# ------------\n# Before state\n# ------------\n#\n#\n# RP/0/0/CPU0:iosxr01#sh run lacp\n# Tue Jul 16 18:37:09.727 UTC\n# lacp system mac 00c1.4c00.bd15\n# lacp system priority 11\n#\n#\n\n- name: Delete global LACP configurations from the device\n  cisco.iosxr.iosxr_lacp:\n    state: deleted\n\n#\n#\n# -----------------------\n# Module Execution Result\n# -----------------------\n# \"before\": {\n#    \"system\": {\n#       \"mac\": {\n#         \"address\": \"00c1.4c00.bd15\"\n#       },\n#       \"priority\": 11\n#    }\n# }\n#\n#\n# \"commands\": [\n#     \"no lacp system mac\",\n#     \"no lacp system priority\"\n# ]\n#\n#\n# \"after\": {}\n#\n# ------------\n# After state\n# ------------\n#\n#\n# RP/0/0/CPU0:iosxr01#sh run lacp\n# Tue Jul 16 18:39:44.116 UTC\n# % No such configuration item(s)\n#\n#\n\n\n# Using parsed\n# parsed.cfg\n# ------------\n#\n# lacp system mac 00c1.4c00.bd15\n# lacp system priority 11\n# - name: Convert LACP config to argspec without connecting to the appliance\n#   cisco.iosxr.iosxr_lacp:\n#     running_config: \"{{ lookup('file', './parsed.cfg') }}\"\n#     state: parsed\n# Task Output (redacted)\n# -----------------------\n# \"parsed\": {\n#         \"system\": {\n#             \"mac\": {\n#                 \"address\": \"00c1.4c00.bd15\"\n#             },\n#             \"priority\": 11\n#         }\n#     }\n\n\n# Using rendered\n- name: Render platform specific commands from task input using rendered state\n  cisco.iosxr.iosxr_lacp:\n    config:\n      system:\n        priority: 11\n        mac:\n          address: 00c1.4c00.bd15\n    state: rendered\n# Task Output (redacted)\n# -----------------------\n# \"rendered\": [\n#         \"lacp system priority 11\",\n#         \"lacp system mac 00c1.4c00.bd15\"\n#     ]\n\n\n# Using gathered\n# Before state:\n# ------------\n#\n# RP/0/0/CPU0:an-iosxr-02#show running-config lacp\n# lacp system mac 00c1.4c00.bd15\n# lacp system priority 11\n- name: Gather IOSXR LACP configuration\n  cisco.iosxr.iosxr_lacp:\n    config:\n    state: gathered\n# Task Output (redacted)\n# -----------------------\n#\n# \"gathered\": {\n#         \"system\": {\n#             \"mac\": {\n#                 \"address\": \"00c1.4c00.bd15\"\n#             },\n#             \"priority\": 11\n#         }\n#     }\n# After state:\n# ------------\n#\n# RP/0/0/CPU0:an-iosxr-02#show running-config lacp\n# lacp system mac 00c1.4c00.bd15\n# lacp system priority\n\n\n"
  },
  "cisco.iosxr.iosxr_lacp_interfaces": {
    "doc": {
      "description": "This module manages Link Aggregation Control Protocol (LACP) attributes of interfaces on IOS-XR devices.",
      "has_action": true,
      "notes": "This module works with connection C(network_cli). See L(the IOS-XR Platform Options,../network/user_guide/platform_iosxr.html).",
      "options": {
        "config": {
          "aliases": [],
          "description": "A dictionary of LACP interfaces options.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "churn_logging": {
              "aliases": [],
              "description": "Specifies the parameter for logging of LACP churn events.\nValid only for ether-bundles.\nMode 'actor' logs actor churn events only.\nMode 'partner' logs partner churn events only.\nMode 'both' logs actor and partner churn events only.",
              "type": "str",
              "required": false,
              "choices": [
                "actor",
                "partner",
                "both"
              ],
              "suboptions": {}
            },
            "collector_max_delay": {
              "aliases": [],
              "description": "Specifies the collector max delay to be signaled to the LACP partner.\nValid only for ether-bundles.\nRefer to vendor documentation for valid values.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "name": {
              "aliases": [],
              "description": "Name/Identifier of the interface or Ether-Bundle.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "period": {
              "aliases": [],
              "description": "Specifies the rate at which packets are sent or received.\nFor ether-bundles, this specifies the period to be used by its member links.\nRefer to vendor documentation for valid values.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "switchover_suppress_flaps": {
              "aliases": [],
              "description": "Specifies the time for which to suppress flaps during a LACP switchover.\nValid only for ether-bundles.\nRefer to vendor documentation for valid values.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "system": {
              "aliases": [],
              "description": "This dict object contains configurable options related to LACP system parameters for ether-bundles.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "mac": {
                  "aliases": [],
                  "description": "Specifies the system ID to use in LACP negotiations for the bundle, encoded as a MAC address.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "priority": {
                  "aliases": [],
                  "description": "Specifies the system priority to use in LACP negotiations for the bundle.\nRefer to vendor documentation for valid values.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                }
              }
            }
          }
        },
        "running_config": {
          "aliases": [],
          "description": "This option is used only with state I(parsed).\nThe value of this option should be the output received from the IOS-XR device by executing the command B(show running-config int).\nThe state I(parsed) reads the configuration from C(running_config) option and transforms it into Ansible structured data as per the resource module's argspec and the value is then returned in the I(parsed) key within the result.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The state of the configuration after module completion.",
          "default": "merged",
          "type": "str",
          "required": false,
          "choices": [
            "merged",
            "replaced",
            "overridden",
            "deleted",
            "parsed",
            "gathered",
            "rendered"
          ],
          "suboptions": {}
        }
      },
      "short_description": "LACP interfaces resource module",
      "version_added": "1.0.0"
    },
    "examples": "\n# Using merged\n#\n#\n# ------------\n# Before state\n# ------------\n#\n#\n#\n# RP/0/0/CPU0:an-iosxr#sh running-config interface\n# Sun Jul 21 18:01:35.079 UTC\n# interface Bundle-Ether10\n# !\n# interface Bundle-Ether11\n# !\n# interface Bundle-Ether12\n# !\n# interface Loopback888\n#  description test for ansible\n#  shutdown\n# !\n# interface MgmtEth0/0/CPU0/0\n#  ipv4 address 192.0.2.11 255.255.255.0\n# !\n# interface GigabitEthernet0/0/0/1\n#  description 'GigabitEthernet - 1'\n# !\n# interface GigabitEthernet0/0/0/2\n#  description \"GigabitEthernet - 2\"\n# !\n# interface GigabitEthernet0/0/0/3\n#  description \"GigabitEthernet - 3\"\n# !\n# interface GigabitEthernet0/0/0/4\n#  description \"GigabitEthernet - 4\"\n# !\n#\n#\n\n- name: Merge provided configuration with device configuration\n  cisco.iosxr.iosxr_lacp_interfaces:\n    config:\n    - name: Bundle-Ether10\n      churn_logging: actor\n      collector_max_delay: 100\n      switchover_suppress_flaps: 500\n\n    - name: Bundle-Ether11\n      system:\n        mac: 00c2.4c00.bd15\n\n    - name: GigabitEthernet0/0/0/1\n      period: 200\n    state: merged\n\n#\n#\n# -----------\n# After state\n# -----------\n#\n#\n# RP/0/0/CPU0:an-iosxr#sh run int\n# Sun Jul 21 18:24:52.413 UTC\n# interface Bundle-Ether10\n#  lacp churn logging actor\n#  lacp switchover suppress-flaps 500\n#  lacp collector-max-delay 100\n# !\n# interface Bundle-Ether11\n#  lacp system mac 00c2.4c00.bd15\n# !\n# interface Bundle-Ether12\n# !\n# interface Loopback888\n#  description test for ansible\n#  shutdown\n# !\n# interface MgmtEth0/0/CPU0/0\n#  ipv4 address 192.0.2.11 255.255.255.0\n# !\n# interface GigabitEthernet0/0/0/1\n#  description 'GigabitEthernet - 1\"\n#  lacp period 200\n# !\n# interface GigabitEthernet0/0/0/2\n#  description \"GigabitEthernet - 2\"\n# !\n# interface GigabitEthernet0/0/0/3\n#  description \"GigabitEthernet - 3\"\n# !\n# interface GigabitEthernet0/0/0/4\n#  description \"GigabitEthernet - 4\"\n# !\n#\n\n\n# Using replaced\n#\n#\n# ------------\n# Before state\n# ------------\n#\n#\n# RP/0/0/CPU0:an-iosxr#sh run int\n# Sun Jul 21 18:24:52.413 UTC\n# interface Bundle-Ether10\n#  lacp churn logging actor\n#  lacp switchover suppress-flaps 500\n#  lacp collector-max-delay 100\n# !\n# interface Bundle-Ether11\n#  lacp system mac 00c2.4c00.bd15\n# !\n# interface Bundle-Ether12\n# !\n# interface Loopback888\n#  description test for ansible\n#  shutdown\n# !\n# interface MgmtEth0/0/CPU0/0\n#  ipv4 address 192.0.2.11 255.255.255.0\n# !\n# interface GigabitEthernet0/0/0/1\n#  description 'GigabitEthernet - 1\"\n#  lacp period 200\n# !\n# interface GigabitEthernet0/0/0/2\n#  description \"GigabitEthernet - 2\"\n# !\n# interface GigabitEthernet0/0/0/3\n#  description \"GigabitEthernet - 3\"\n# !\n# interface GigabitEthernet0/0/0/4\n#  description \"GigabitEthernet - 4\"\n# !\n#\n\n- name: Replace LACP configuration of listed interfaces with provided configuration\n  cisco.iosxr.iosxr_lacp_interfaces:\n    config:\n    - name: Bundle-Ether10\n      churn_logging: partner\n\n    - name: GigabitEthernet0/0/0/2\n      period: 300\n    state: replaced\n\n#\n#\n# -----------\n# After state\n# -----------\n#\n#\n# RP/0/0/CPU0:an-iosxr#sh run int\n# Sun Jul 21 18:50:21.929 UTC\n# interface Bundle-Ether10\n#  lacp churn logging partner\n# !\n# interface Bundle-Ether11\n#  lacp system mac 00c2.4c00.bd15\n# !\n# interface Bundle-Ether12\n# !\n# interface Loopback888\n#  description test for ansible\n#  shutdown\n# !\n# interface MgmtEth0/0/CPU0/0\n#  ipv4 address 192.0.2.11 255.255.255.0\n# !\n# interface GigabitEthernet0/0/0/1\n#  description 'GigabitEthernet - 1\"\n#  lacp period 200\n# !\n# interface GigabitEthernet0/0/0/2\n#  description \"GigabitEthernet - 2\"\n#  lacp period 300\n# !\n# interface GigabitEthernet0/0/0/3\n#  description \"GigabitEthernet - 3\"\n# !\n# interface GigabitEthernet0/0/0/4\n#  description \"GigabitEthernet - 4\"\n# !\n#\n#\n\n\n# Using overridden\n#\n#\n# ------------\n# Before state\n# ------------\n#\n#\n# RP/0/0/CPU0:an-iosxr#sh run int\n# Sun Jul 21 18:24:52.413 UTC\n# interface Bundle-Ether10\n#  lacp churn logging actor\n#  lacp switchover suppress-flaps 500\n#  lacp collector-max-delay 100\n# !\n# interface Bundle-Ether11\n#  lacp system mac 00c2.4c00.bd15\n# !\n# interface Bundle-Ether12\n# !\n# interface Loopback888\n#  description test for ansible\n#  shutdown\n# !\n# interface MgmtEth0/0/CPU0/0\n#  ipv4 address 192.0.2.11 255.255.255.0\n# !\n# interface GigabitEthernet0/0/0/1\n#  description 'GigabitEthernet - 1\"\n#  lacp period 200\n# !\n# interface GigabitEthernet0/0/0/2\n#  description \"GigabitEthernet - 2\"\n#  lacp period 200\n# !\n# interface GigabitEthernet0/0/0/3\n#  description \"GigabitEthernet - 3\"\n# !\n# interface GigabitEthernet0/0/0/4\n#  description \"GigabitEthernet - 4\"\n# !\n#\n#\n\n- name: Override all interface LACP configuration with provided configuration\n  cisco.iosxr.iosxr_lacp_interfaces:\n    config:\n    - name: Bundle-Ether12\n      churn_logging: both\n      collector_max_delay: 100\n      switchover_suppress_flaps: 500\n\n    - name: GigabitEthernet0/0/0/1\n      period: 300\n    state: overridden\n\n#\n#\n# -----------\n# After state\n# -----------\n#\n#\n# RP/0/0/CPU0:an-iosxr(config-if)#do sh run int\n# Sun Jul 21 19:32:36.115 UTC\n# interface Bundle-Ether10\n# !\n# interface Bundle-Ether11\n# !\n# interface Bundle-Ether12\n#  lacp churn logging both\n#  lacp switchover suppress-flaps 500\n#  lacp collector-max-delay 100\n# !\n# interface Loopback888\n#  description test for ansible\n#  shutdown\n# !\n# interface MgmtEth0/0/CPU0/0\n#  ipv4 address 192.0.2.11 255.255.255.0\n# !\n# interface GigabitEthernet0/0/0/1\n#  description 'GigabitEthernet - 1\"\n#  lacp period 300\n# !\n# interface GigabitEthernet0/0/0/2\n#  description \"GigabitEthernet - 2\"\n# !\n# interface GigabitEthernet0/0/0/3\n#  description \"GigabitEthernet - 3\"\n# !\n# interface GigabitEthernet0/0/0/4\n#  description \"GigabitEthernet - 4\"\n# !\n#\n\n\n# Using deleted\n#\n#\n# ------------\n# Before state\n# ------------\n#\n#\n# RP/0/0/CPU0:an-iosxr#sh run int\n# Sun Jul 21 18:24:52.413 UTC\n# interface Bundle-Ether10\n#  lacp churn logging actor\n#  lacp switchover suppress-flaps 500\n#  lacp collector-max-delay 100\n# !\n# interface Bundle-Ether11\n#  lacp non-revertive\n# !\n# interface Bundle-Ether12\n# !\n# interface Loopback888\n#  description test for ansible\n#  shutdown\n# !\n# interface MgmtEth0/0/CPU0/0\n#  ipv4 address 192.0.2.11 255.255.255.0\n# !\n# interface GigabitEthernet0/0/0/1\n#  description 'GigabitEthernet - 1\"\n#  lacp period 200\n# !\n# interface GigabitEthernet0/0/0/2\n#  description \"GigabitEthernet - 2\"\n#   lacp period 300\n# !\n# interface GigabitEthernet0/0/0/3\n#  description \"GigabitEthernet - 3\"\n# !\n# interface GigabitEthernet0/0/0/4\n#  description \"GigabitEthernet - 4\"\n# !\n#\n\n- name: Deleted LACP configurations of provided interfaces (Note - This won't delete\n    the interface itself)\n  cisco.iosxr.iosxr_lacp_interfaces:\n    config:\n    - name: Bundle-Ether10\n    - name: Bundle-Ether11\n    - name: GigabitEthernet0/0/0/1\n    - name: GigabitEthernet0/0/0/2\n    state: deleted\n\n#\n#\n# -----------\n# After state\n# -----------\n#\n#\n# Using parsed:\n\n# parsed.cfg\n# interface Bundle-Ether10\n#  lacp churn logging actor\n#  lacp switchover suppress-flaps 500\n#  lacp collector-max-delay 100\n# !\n# interface Bundle-Ether11\n#  lacp system mac 00c2.4c00.bd15\n# !\n# interface MgmtEth0/0/CPU0/0\n#  ipv4 address 192.0.2.11 255.255.255.0\n# !\n# interface GigabitEthernet0/0/0/1\n#  lacp period 200\n# !\n#\n\n- name: Convert lacp interfaces config to argspec without connecting to the appliance\n  cisco.iosxr.iosxr_lacp_interfaces:\n    running_config: \"{{ lookup('file', './parsed.cfg') }}\"\n    state: parsed\n\n# --------------\n# Output:\n# --------------\n\n#    parsed:\n#      - name: Bundle-Ether10\n#        churn_logging: actor\n#        collector_max_delay: 100\n#        switchover_suppress_flaps: 500\n#\n#      - name: Bundle-Ether11\n#        system:\n#          mac: 00c2.4c00.bd15\n#\n#      - name: GigabitEthernet0/0/0/1\n#        period: 200\n#\n#\n\n# Using gathered:\n\n# Native config:\n# interface Bundle-Ether10\n#  lacp churn logging actor\n#  lacp switchover suppress-flaps 500\n#  lacp collector-max-delay 100\n# !\n# interface Bundle-Ether11\n#  lacp system mac 00c2.4c00.bd15\n# !\n# interface MgmtEth0/0/CPU0/0\n#  ipv4 address 192.0.2.11 255.255.255.0\n# !\n# interface GigabitEthernet0/0/0/1\n#  lacp period 200\n# !\n#\n\n- name: Gather IOSXR lacp interfaces configuration\n  cisco.iosxr.iosxr_lacp_interfaces:\n    config:\n    state: gathered\n\n# ----------\n# Output\n# ---------\n#    gathered:\n#      - name: Bundle-Ether10\n#        churn_logging: actor\n#        collector_max_delay: 100\n#        switchover_suppress_flaps: 500\n#\n#      - name: Bundle-Ether11\n#        system:\n#          mac: 00c2.4c00.bd15\n#\n#      - name: GigabitEthernet0/0/0/1\n#        period: 200\n\n# Using rendered:\n\n- name: Render platform specific commands from task input using rendered state\n  cisco.iosxr.iosxr_lacp_interfaces:\n    config:\n    - name: Bundle-Ether10\n      churn_logging: actor\n      collector_max_delay: 100\n      switchover_suppress_flaps: 500\n\n    - name: Bundle-Ether11\n      system:\n        mac: 00c2.4c00.bd15\n\n    - name: GigabitEthernet0/0/0/1\n      period: 200\n    state: rendered\n\n# -------------\n# Output\n# -------------\n# rendered: [\n#     - \"interface Bundle-Ether10\"\n#     - \" lacp churn logging actor\"\n#     - \" lacp switchover suppress-flaps 500\"\n#     - \" lacp collector-max-delay 100\"\n#     - \"interface Bundle-Ether11\"\n#     - \" lacp system mac 00c2.4c00.bd15\"\n#     - \"interface MgmtEth0/0/CPU0/0\"\n#     - \" ipv4 address 192.0.2.11 255.255.255.0\"\n#     - \"interface GigabitEthernet0/0/0/1\"\n#     - \" lacp period 200\"\n#\n\n\n"
  },
  "cisco.iosxr.iosxr_lag_interfaces": {
    "doc": {
      "description": "This module manages the attributes of LAG/Ether-Bundle interfaces on IOS-XR devices.",
      "has_action": true,
      "notes": "This module works with connection C(network_cli). See L(the IOS-XR Platform Options,../network/user_guide/platform_iosxr.html).",
      "options": {
        "config": {
          "aliases": [],
          "description": "A provided Link Aggregation Group (LAG) configuration.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "links": {
              "aliases": [],
              "description": "This dict contains configurable options related to LAG/Ether-Bundle links.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "max_active": {
                  "aliases": [],
                  "description": "Specifies the limit on the number of links that can be active in the LAG/Ether-Bundle.\nRefer to vendor documentation for valid values.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "min_active": {
                  "aliases": [],
                  "description": "Specifies the minimum number of active links needed to bring up the LAG/Ether-Bundle.\nRefer to vendor documentation for valid values.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "load_balancing_hash": {
              "aliases": [],
              "description": "Specifies the hash function used for traffic forwarded over the LAG/Ether-Bundle.\nOption 'dst-ip' uses the destination IP as the hash function.\nOption 'src-ip' uses the source IP as the hash function.",
              "type": "str",
              "required": false,
              "choices": [
                "dst-ip",
                "src-ip"
              ],
              "suboptions": {}
            },
            "members": {
              "aliases": [],
              "description": "List of member interfaces for the LAG/Ether-Bundle.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "member": {
                  "aliases": [],
                  "description": "Name of the member interface.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "mode": {
                  "aliases": [],
                  "description": "Specifies the mode of the operation for the member interface.\nMode 'active' runs LACP in active mode.\nMode 'on' does not run LACP over the port.\nMode 'passive' runs LACP in passive mode over the port.\nMode 'inherit' runs LACP as configured in the bundle.",
                  "type": "str",
                  "required": false,
                  "choices": [
                    "on",
                    "active",
                    "passive",
                    "inherit"
                  ],
                  "suboptions": {}
                }
              }
            },
            "mode": {
              "aliases": [],
              "description": "LAG mode.\nMode 'active' runs LACP in active mode over the port.\nMode 'on' does not run LACP over the port.\nMode 'passive' runs LACP in passive mode over the port.",
              "type": "str",
              "required": false,
              "choices": [
                "on",
                "active",
                "passive"
              ],
              "suboptions": {}
            },
            "name": {
              "aliases": [],
              "description": "Name/Identifier of the LAG/Ether-Bundle to configure.",
              "type": "str",
              "required": true,
              "suboptions": {}
            }
          }
        },
        "running_config": {
          "aliases": [],
          "description": "This option is used only with state I(parsed).\nThe value of this option should be the output received from the IOS-XR device by executing the command B(show running-config int).\nThe state I(parsed) reads the configuration from C(running_config) option and transforms it into Ansible structured data as per the resource module's argspec and the value is then returned in the I(parsed) key within the result.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The state of the configuration after module completion.",
          "default": "merged",
          "type": "str",
          "required": false,
          "choices": [
            "merged",
            "replaced",
            "overridden",
            "deleted",
            "parsed",
            "rendered",
            "gathered"
          ],
          "suboptions": {}
        }
      },
      "short_description": "LAG interfaces resource module",
      "version_added": "1.0.0"
    },
    "examples": "\n# Using merged\n#\n#\n# ------------\n# Before state\n# ------------\n#\n# RP/0/0/CPU0:iosxr01#show run int\n# Sun Jul  7 19:42:59.416 UTC\n# interface Loopback888\n#  description test for ansible\n#  shutdown\n# !\n# interface MgmtEth0/0/CPU0/0\n#  ipv4 address 192.0.2.11 255.255.255.0\n# !\n# interface GigabitEthernet0/0/0/1\n#  description \"GigabitEthernet - 1\"\n# !\n# interface GigabitEthernet0/0/0/2\n#  description \"GigabitEthernet - 2\"\n# !\n# interface GigabitEthernet0/0/0/3\n#  description \"GigabitEthernet - 3\"\n# !\n# interface GigabitEthernet0/0/0/4\n#  description \"GigabitEthernet - 4\"\n# !\n#\n#\n- name: Merge provided configuration with device configuration\n  cisco.iosxr.iosxr_lag_interfaces:\n    config:\n    - name: Bundle-Ether10\n      members:\n      - member: GigabitEthernet0/0/0/1\n        mode: inherit\n      - member: GigabitEthernet0/0/0/3\n        mode: inherit\n      mode: active\n      links:\n        max_active: 5\n        min_active: 2\n      load_balancing_hash: src-ip\n\n    - name: Bundle-Ether12\n      members:\n      - member: GigabitEthernet0/0/0/2\n        mode: passive\n      - member: GigabitEthernet0/0/0/4\n        mode: passive\n      load_balancing_hash: dst-ip\n    state: merged\n#\n#\n# -----------\n# After state\n# -----------\n#\n# RP/0/0/CPU0:iosxr01#show run int\n# Sun Jul  7 20:51:17.685 UTC\n# interface Bundle-Ether10\n#  lacp mode active\n#  bundle load-balancing hash src-ip\n#  bundle maximum-active links 5\n#  bundle minimum-active links 2\n# !\n# interface Bundle-Ether12\n#  bundle load-balancing hash dst-ip\n# !\n# interface Loopback888\n#  description test for ansible\n#  shutdown\n# !\n# interface MgmtEth0/0/CPU0/0\n#  ipv4 address 192.0.2.11 255.255.255.0\n# !\n# interface GigabitEthernet0/0/0/1\n#  description 'GigabitEthernet - 1\"\n#  bundle id 10 mode inherit\n# !\n# interface GigabitEthernet0/0/0/2\n#  description \"GigabitEthernet - 2\"\n#   bundle id 12 mode passive\n# !\n# interface GigabitEthernet0/0/0/3\n#  description \"GigabitEthernet - 3\"\n#  bundle id 10 mode inherit\n# !\n# interface GigabitEthernet0/0/0/4\n#  description \"GigabitEthernet - 4\"\n#  bundle id 12 mode passive\n# !\n#\n\n\n# Using replaced\n#\n#\n# -------------\n# Before state\n# -------------\n#\n#\n# RP/0/0/CPU0:iosxr01#sho run int\n# Sun Jul  7 20:58:06.527 UTC\n# interface Bundle-Ether10\n#  lacp mode active\n#  bundle load-balancing hash src-ip\n#  bundle maximum-active links 5\n#  bundle minimum-active links 2\n# !\n# interface Bundle-Ether12\n#  bundle load-balancing hash dst-ip\n# !\n# interface Loopback888\n#  description test for ansible\n#  shutdown\n# !\n# interface MgmtEth0/0/CPU0/0\n#  ipv4 address 192.0.2.11 255.255.255.0\n# !\n# interface GigabitEthernet0/0/0/1\n#  description 'GigabitEthernet - 1\"\n#  bundle id 10 mode inherit\n# !\n# interface GigabitEthernet0/0/0/2\n#  description \"GigabitEthernet - 2\"\n#  bundle id 12 mode passive\n# !\n# interface GigabitEthernet0/0/0/3\n#  description \"GigabitEthernet - 3\"\n#  bundle id 10 mode inherit\n# !\n# interface GigabitEthernet0/0/0/4\n#  description \"GigabitEthernet - 4\"\n#  bundle id 12 mode passive\n# !\n#\n#\n- name: Replace device configuration of listed Bundles with provided configurations\n  cisco.iosxr.iosxr_lag_interfaces:\n    config:\n    - name: Bundle-Ether12\n      members:\n      - name: GigabitEthernet0/0/0/2\n      mode: passive\n\n    - name: Bundle-Ether11\n      members:\n      - name: GigabitEthernet0/0/0/4\n      load_balancing_hash: src-ip\n    state: replaced\n#\n#\n# -----------\n# After state\n# -----------\n#\n#\n# RP/0/0/CPU0:iosxr01#sh run int\n# Sun Jul  7 21:22:27.397 UTC\n# interface Bundle-Ether10\n#  lacp mode active\n#  bundle load-balancing hash src-ip\n#  bundle maximum-active links 5\n#  bundle minimum-active links 2\n# !\n# interface Bundle-Ether11\n#  bundle load-balancing hash src-ip\n# !\n# interface Bundle-Ether12\n#  lacp mode passive\n# !\n# interface Loopback888\n#  description test for ansible\n#  shutdown\n# !\n# interface MgmtEth0/0/CPU0/0\n#  ipv4 address 192.0.2.11 255.255.255.0\n# !\n# interface GigabitEthernet0/0/0/1\n#  description 'GigabitEthernet - 1\"\n#  bundle id 10 mode inherit\n# !\n# interface GigabitEthernet0/0/0/2\n#  description \"GigabitEthernet - 2\"\n#  bundle id 12 mode on\n# !\n# interface GigabitEthernet0/0/0/3\n#  description \"GigabitEthernet - 3\"\n#  bundle id 10 mode inherit\n# !\n# interface GigabitEthernet0/0/0/4\n#  description \"GigabitEthernet - 4\"\n#  bundle id 11 mode on\n# !\n#\n#\n\n\n# Using overridden\n#\n#\n# ------------\n# Before state\n# ------------\n#\n#\n# RP/0/0/CPU0:iosxr01#sh run int\n# Sun Jul  7 21:22:27.397 UTC\n# interface Bundle-Ether10\n#  lacp mode active\n#  bundle load-balancing hash src-ip\n#  bundle maximum-active links 5\n#  bundle minimum-active links 2\n# !\n# interface Bundle-Ether11\n#  bundle load-balancing hash src-ip\n# !\n# interface Bundle-Ether12\n#  lacp mode passive\n# !\n# interface Loopback888\n#  description test for ansible\n#  shutdown\n# !\n# interface MgmtEth0/0/CPU0/0\n#  ipv4 address 192.0.2.11 255.255.255.0\n# !\n# interface GigabitEthernet0/0/0/1\n#  description 'GigabitEthernet - 1\"\n#  bundle id 10 mode inherit\n# !\n# interface GigabitEthernet0/0/0/2\n#  description \"GigabitEthernet - 2\"\n#  bundle id 12 mode on\n# !\n# interface GigabitEthernet0/0/0/3\n#  description \"GigabitEthernet - 3\"\n#  bundle id 10 mode inherit\n# !\n# interface GigabitEthernet0/0/0/4\n#  description \"GigabitEthernet - 4\"\n#  bundle id 11 mode on\n# !\n#\n#\n\n- name: Overrides all device configuration with provided configuration\n  cisco.iosxr.iosxr_lag_interfaces:\n    config:\n    - name: Bundle-Ether10\n      members:\n      - member: GigabitEthernet0/0/0/1\n        mode: inherit\n      - member: GigabitEthernet0/0/0/2\n        mode: inherit\n      mode: active\n      load_balancing_hash: dst-ip\n    state: overridden\n#\n#\n# ------------\n# After state\n# ------------\n#\n#\n# RP/0/0/CPU0:iosxr01#sh run int\n# Sun Jul  7 21:43:04.802 UTC\n# interface Bundle-Ether10\n#  lacp mode active\n#  bundle load-balancing hash dst-ip\n# !\n# interface Bundle-Ether11\n# !\n# interface Bundle-Ether12\n# !\n# interface Loopback888\n#  description test for ansible\n#  shutdown\n# !\n# interface MgmtEth0/0/CPU0/0\n#  ipv4 address 192.0.2.11 255.255.255.0\n# !\n# interface GigabitEthernet0/0/0/1\n#  description 'GigabitEthernet - 1\"\n#  bundle id 10 mode inherit\n# !\n# interface GigabitEthernet0/0/0/2\n#  description \"GigabitEthernet - 2\"\n#  bundle id 10 mode inherit\n# !\n# interface GigabitEthernet0/0/0/3\n#  description \"GigabitEthernet - 3\"\n# !\n# interface GigabitEthernet0/0/0/4\n#  description \"GigabitEthernet - 4\"\n# !\n#\n#\n\n\n# Using deleted\n#\n#\n# ------------\n# Before state\n# ------------\n#\n# RP/0/0/CPU0:iosxr01#sh run int\n# Sun Jul  7 21:22:27.397 UTC\n# interface Bundle-Ether10\n#  lacp mode active\n#  bundle load-balancing hash src-ip\n#  bundle maximum-active links 5\n#  bundle minimum-active links 2\n# !\n# interface Bundle-Ether11\n#  bundle load-balancing hash src-ip\n# !\n# interface Bundle-Ether12\n#  lacp mode passive\n# !\n# interface Loopback888\n#  description test for ansible\n#  shutdown\n# !\n# interface MgmtEth0/0/CPU0/0\n#  ipv4 address 192.0.2.11 255.255.255.0\n# !\n# interface GigabitEthernet0/0/0/1\n#  description 'GigabitEthernet - 1\"\n#  bundle id 10 mode inherit\n# !\n# interface GigabitEthernet0/0/0/2\n#  description \"GigabitEthernet - 2\"\n#  bundle id 12 mode on\n# !n\n# interface GigabitEthernet0/0/0/3\n#  description \"GigabitEthernet - 3\"\n#  bundle id 10 mode inherit\n# !\n# interface GigabitEthernet0/0/0/4\n#  description \"GigabitEthernet - 4\"\n#  bundle id 11 mode on\n# !\n#\n#\n\n- name: Delete attributes of given bundles and removes member interfaces from them\n    (Note - This won't delete the bundles themselves)\n  cisco.iosxr.iosxr_lag_interfaces:\n    config:\n    - name: Bundle-Ether10\n    - name: Bundle-Ether11\n    - name: Bundle-Ether12\n    state: deleted\n\n#\n#\n# ------------\n# After state\n# ------------\n#\n# RP/0/0/CPU0:iosxr01#sh run int\n# Sun Jul  7 21:49:50.004 UTC\n# interface Bundle-Ether10\n# !\n# interface Bundle-Ether11\n# !\n# interface Bundle-Ether12\n# !\n# interface Loopback888\n#  description test for ansible\n#  shutdown\n# !\n# interface MgmtEth0/0/CPU0/0\n#  ipv4 address 192.0.2.11 255.255.255.0\n# !\n# interface GigabitEthernet0/0/0/1\n#  description 'GigabitEthernet - 1\"\n# !\n# interface GigabitEthernet0/0/0/2\n#  description \"GigabitEthernet - 2\"\n# !\n# interface GigabitEthernet0/0/0/3\n#  description \"GigabitEthernet - 3\"\n# !\n# interface GigabitEthernet0/0/0/4\n#  description \"GigabitEthernet - 4\"\n# !\n#\n#\n\n# Using deleted (without config)\n#\n#\n# ------------\n# Before state\n# ------------\n#\n# RP/0/0/CPU0:an-iosxr#sh run int\n# Sun Aug 18 19:49:51.908 UTC\n# interface Bundle-Ether10\n#  lacp mode active\n#  bundle load-balancing hash src-ip\n#  bundle maximum-active links 10\n#  bundle minimum-active links 2\n# !\n# interface Bundle-Ether11\n#  bundle load-balancing hash dst-ip\n# !\n# interface MgmtEth0/0/CPU0/0\n#  ipv4 address 192.0.2.11 255.255.255.0\n# !\n# interface GigabitEthernet0/0/0/0\n#  shutdown\n# !\n# interface GigabitEthernet0/0/0/1\n#  bundle id 10 mode inherit\n#  shutdown\n# !\n# interface GigabitEthernet0/0/0/2\n#  bundle id 10 mode passive\n#  shutdown\n# !\n# interface GigabitEthernet0/0/0/3\n#  bundle id 11 mode passive\n#  shutdown\n# !\n# interface GigabitEthernet0/0/0/4\n#  bundle id 11 mode passive\n#  shutdown\n# !\n#\n\n- name: Delete attributes of all bundles and removes member interfaces from them (Note\n    - This won't delete the bundles themselves)\n  cisco.iosxr.iosxr_lag_interfaces:\n    state: deleted\n\n#\n#\n# ------------\n# After state\n# ------------\n#\n#\n# RP/0/0/CPU0:an-iosxr#sh run int\n# Sun Aug 18 19:54:22.389 UTC\n# interface Bundle-Ether10\n# !\n# interface Bundle-Ether11\n# !\n# interface MgmtEth0/0/CPU0/0\n#  ipv4 address 10.8.38.69 255.255.255.0\n# !\n# interface GigabitEthernet0/0/0/0\n#  shutdown\n# !\n# interface GigabitEthernet0/0/0/1\n#  shutdown\n# !\n# interface GigabitEthernet0/0/0/2\n#  shutdown\n# !\n# interface GigabitEthernet0/0/0/3\n#  shutdown\n# !\n# interface GigabitEthernet0/0/0/4\n#  shutdown\n# !\n\n# Using parsed:\n\n# parsed.cfg\n\n# interface Bundle-Ether10\n#  lacp mode active\n#  bundle load-balancing hash src-ip\n#  bundle maximum-active links 5\n#  bundle minimum-active links 2\n# !\n# interface Bundle-Ether12\n#  bundle load-balancing hash dst-ip\n# !\n# interface Loopback888\n#  description test for ansible\n#  shutdown\n# !\n# interface MgmtEth0/0/CPU0/0\n#  ipv4 address 192.0.2.11 255.255.255.0\n# !\n# interface GigabitEthernet0/0/0/1\n#  description 'GigabitEthernet - 1\"\n#  bundle id 10 mode inherit\n# !\n# interface GigabitEthernet0/0/0/2\n#  description \"GigabitEthernet - 2\"\n#   bundle id 12 mode passive\n# !\n# interface GigabitEthernet0/0/0/3\n#  description \"GigabitEthernet - 3\"\n#  bundle id 10 mode inherit\n# !\n# interface GigabitEthernet0/0/0/4\n#  description \"GigabitEthernet - 4\"\n#  bundle id 12 mode passive\n# !\n#\n- name: Convert lag interfaces config to argspec without connecting to the appliance\n  cisco.iosxr.iosxr_lag_interfaces:\n    running_config: \"{{ lookup('file', './parsed.cfg') }}\"\n    state: parsed\n\n# --------------\n# Output\n# --------------\n#   parsed:\n#     - name: Bundle-Ether10\n#       members:\n#         - member: GigabitEthernet0/0/0/1\n#           mode: inherit\n#         - member: GigabitEthernet0/0/0/3\n#           mode: inherit\n#       mode: active\n#       links:\n#         max_active: 5\n#         min_active: 2\n#       load_balancing_hash: src-ip\n\n#     - name: Bundle-Ether12\n#       members:\n#         - member: GigabitEthernet0/0/0/2\n#           mode: passive\n#         - member: GigabitEthernet0/0/0/4\n#           mode: passive\n#       load_balancing_hash: dst-ip\n\n# using gathered\n\n# Device Config:\n# -------------\n\n# interface Bundle-Ether10\n#  lacp mode active\n#  bundle load-balancing hash src-ip\n#  bundle maximum-active links 5\n#  bundle minimum-active links 2\n# !\n# interface Bundle-Ether12\n#  bundle load-balancing hash dst-ip\n# !\n# interface Loopback888\n#  description test for ansible\n#  shutdown\n# !\n# interface MgmtEth0/0/CPU0/0\n#  ipv4 address 192.0.2.11 255.255.255.0\n# !\n# interface GigabitEthernet0/0/0/1\n#  description 'GigabitEthernet - 1\"\n#  bundle id 10 mode inherit\n# !\n# interface GigabitEthernet0/0/0/2\n#  description \"GigabitEthernet - 2\"\n#   bundle id 12 mode passive\n# !\n# interface GigabitEthernet0/0/0/3\n#  description \"GigabitEthernet - 3\"\n#  bundle id 10 mode inherit\n# !\n# interface GigabitEthernet0/0/0/4\n#  description \"GigabitEthernet - 4\"\n#  bundle id 12 mode passive\n# !\n#\n\n- name: Gather IOSXR lag interfaces configuration\n  cisco.iosxr.iosxr_lag_interfaces:\n    config:\n    state: gathered\n\n# --------------\n# Output\n# --------------\n#   gathered:\n#     - name: Bundle-Ether10\n#       members:\n#         - member: GigabitEthernet0/0/0/1\n#           mode: inherit\n#         - member: GigabitEthernet0/0/0/3\n#           mode: inherit\n#       mode: active\n#       links:\n#         max_active: 5\n#         min_active: 2\n#       load_balancing_hash: src-ip\n\n#     - name: Bundle-Ether12\n#       members:\n#         - member: GigabitEthernet0/0/0/2\n#           mode: passive\n#         - member: GigabitEthernet0/0/0/4\n#           mode: passive\n#       load_balancing_hash: dst-ip\n\n# Using rendered:\n- name: Render platform specific commands from task input using rendered state\n  cisco.iosxr.iosxr_lag_interfaces:\n    config:\n    - name: Bundle-Ether10\n      members:\n      - member: GigabitEthernet0/0/0/1\n        mode: inherit\n      - member: GigabitEthernet0/0/0/3\n        mode: inherit\n      mode: active\n      links:\n        max_active: 5\n        min_active: 2\n      load_balancing_hash: src-ip\n\n    - name: Bundle-Ether12\n      members:\n      - member: GigabitEthernet0/0/0/2\n        mode: passive\n      - member: GigabitEthernet0/0/0/4\n        mode: passive\n      load_balancing_hash: dst-ip\n    state: rendered\n\n# Output:\n\n# rendered:\n#    [\n#         - \"interface Bundle-Ether10\"\n#         - \" lacp mode active\"\n#         - \" bundle load-balancing hash src-ip\"\n#         - \" bundle maximum-active links 5\"\n#         - \" bundle minimum-active links 2\"\n#         - \"interface Bundle-Ether12\"\n#         - \" bundle load-balancing hash dst-ip\"\n#         - \"interface Loopback888\"\n#         - \" description test for ansible\"\n#         - \" shutdown\"\n#         - \"interface MgmtEth0/0/CPU0/0\"\n#         - \" ipv4 address 192.0.2.11 255.255.255.0\"\n#         - \"interface GigabitEthernet0/0/0/1\"\n#         - \" description 'GigabitEthernet - 1\"\"\n#         - \" bundle id 10 mode inherit\"\n#         - \"interface GigabitEthernet0/0/0/2\"\n#         - \" description \"GigabitEthernet - 2\"\"\n#         - \"  bundle id 12 mode passive\"\n#         - \"interface GigabitEthernet0/0/0/3\"\n#         - \" description \"GigabitEthernet - 3\"\"\n#         - \" bundle id 10 mode inherit\"\n#         - \"interface GigabitEthernet0/0/0/4\"\n#         - \" description \"GigabitEthernet - 4\"\"\n#         - \" bundle id 12 mode passive\"\n#    ]\n#\n#\n\n\n"
  },
  "cisco.iosxr.iosxr_lldp_global": {
    "doc": {
      "description": "This module manages Global Link Layer Discovery Protocol (LLDP) settings on IOS-XR devices.",
      "has_action": true,
      "notes": "This module works with connection C(network_cli). See L(the IOS-XR Platform Options,../network/user_guide/platform_iosxr.html).",
      "options": {
        "config": {
          "aliases": [],
          "description": "The provided global LLDP configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "holdtime": {
              "aliases": [],
              "description": "Specifies the holdtime (in sec) to be sent in packets.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "reinit": {
              "aliases": [],
              "description": "Specifies the delay (in sec) for LLDP initialization on any interface.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "subinterfaces": {
              "aliases": [],
              "description": "Enable or disable LLDP over sub-interfaces.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "timer": {
              "aliases": [],
              "description": "Specifies the rate at which LLDP packets are sent (in sec).",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "tlv_select": {
              "aliases": [],
              "description": "Specifies the LLDP TLVs to enable or disable.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "management_address": {
                  "aliases": [],
                  "description": "Enable or disable management address TLV.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "port_description": {
                  "aliases": [],
                  "description": "Enable or disable port description TLV.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "system_capabilities": {
                  "aliases": [],
                  "description": "Enable or disable system capabilities TLV.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "system_description": {
                  "aliases": [],
                  "description": "Enable or disable system description TLV.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "system_name": {
                  "aliases": [],
                  "description": "Enable or disable system name TLV.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                }
              }
            }
          }
        },
        "running_config": {
          "aliases": [],
          "description": "This option is used only with state I(parsed).\nThe value of this option should be the output received from the IOS-XR device by executing the command B(show running-config lldp).\nThe state I(parsed) reads the configuration from C(running_config) option and transforms it into Ansible structured data as per the resource module's argspec and the value is then returned in the I(parsed) key within the result.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The state of the configuration after module completion.",
          "default": "merged",
          "type": "str",
          "required": false,
          "choices": [
            "merged",
            "replaced",
            "deleted",
            "parsed",
            "gathered",
            "rendered"
          ],
          "suboptions": {}
        }
      },
      "short_description": "LLDP resource module",
      "version_added": "1.0.0"
    },
    "examples": "\n# Using merged\n#\n#\n# -------------\n# Before State\n# -------------\n#\n#\n# RP/0/0/CPU0:an-iosxr#sh run lldp\n# Tue Aug  6 19:27:54.933 UTC\n# % No such configuration item(s)\n#\n#\n\n- name: Merge provided LLDP configuration with the existing configuration\n  cisco.iosxr.iosxr_lldp_global:\n    config:\n      holdtime: 100\n      reinit: 2\n      timer: 3000\n      subinterfaces: true\n      tlv_select:\n        management_address: false\n        system_description: false\n    state: merged\n\n#\n#\n# ------------------------\n# Module Execution Result\n# ------------------------\n#\n#  \"before\": {}\n#\n#  \"commands\": [\n#        \"lldp subinterfaces enable\",\n#        \"lldp holdtime 100\",\n#        \"lldp reinit 2\",\n#        \"lldp tlv-select system-description disable\",\n#        \"lldp tlv-select management-address disable\",\n#        \"lldp timer 3000\"\n#  ]\n#\n#  \"after\": {\n#        \"holdtime\": 100,\n#        \"reinit\": 2,\n#        \"subinterfaces\": true,\n#        \"timer\": 3000,\n#        \"tlv_select\": {\n#            \"management_address\": false,\n#            \"system_description\": false\n#        }\n#  }\n#\n#\n# ------------\n# After state\n# ------------\n#\n#\n# RP/0/0/CPU0:an-iosxr#sh run lldp\n# Tue Aug  6 21:31:10.587 UTC\n# lldp\n#  timer 3000\n#  reinit 2\n#  subinterfaces enable\n#  holdtime 100\n#  tlv-select\n#   management-address disable\n#   system-description disable\n#  !\n# !\n#\n#\n\n\n# Using replaced\n#\n#\n# -------------\n# Before State\n# -------------\n#\n# RP/0/0/CPU0:an-iosxr#sh run lldp\n# Tue Aug  6 21:31:10.587 UTC\n# lldp\n#  timer 3000\n#  reinit 2\n#  subinterfaces enable\n#  holdtime 100\n#  tlv-select\n#   management-address disable\n#   system-description disable\n#  !\n# !\n#\n#\n\n- name: Replace existing LLDP device configuration with provided configuration\n  cisco.iosxr.iosxr_lldp_global:\n    config:\n      holdtime: 100\n      tlv_select:\n        port_description: false\n        system_description: true\n        management_description: true\n    state: replaced\n\n#\n#\n# ------------------------\n# Module Execution Result\n# ------------------------\n#\n#  \"before\": {\n#        \"holdtime\": 100,\n#        \"reinit\": 2,\n#        \"subinterfaces\": true,\n#        \"timer\": 3000,\n#        \"tlv_select\": {\n#            \"management_address\": false,\n#            \"system_description\": false\n#        }\n#  }\n#\n#  \"commands\": [\n#        \"no lldp reinit 2\",\n#        \"no lldp subinterfaces enable\",\n#        \"no lldp timer 3000\",\n#        \"no lldp tlv-select management-address disable\",\n#        \"no lldp tlv-select system-description disable\",\n#        \"lldp tlv-select port-description disable\"\n#  ]\n#\n#  \"after\": {\n#        \"holdtime\": 100,\n#        \"tlv_select\": {\n#            \"port_description\": false\n#        }\n#  }\n#\n#\n# ------------\n# After state\n# ------------\n#\n# RP/0/0/CPU0:an-iosxr#sh run lldp\n# Tue Aug  6 21:53:08.407 UTC\n# lldp\n#  holdtime 100\n#  tlv-select\n#   port-description disable\n#  !\n# !\n#\n#\n\n\n# Using deleted\n#\n# ------------\n# Before state\n# ------------\n#\n#\n# RP/0/0/CPU0:an-iosxr#sh run lldp\n# Tue Aug  6 21:31:10.587 UTC\n# lldp\n#  timer 3000\n#  reinit 2\n#  subinterfaces enable\n#  holdtime 100\n#  tlv-select\n#   management-address disable\n#   system-description disable\n#  !\n# !\n#\n#\n\n- name: Deleted existing LLDP configurations from the device\n  cisco.iosxr.iosxr_lldp_global:\n    state: deleted\n\n#\n#\n# ------------------------\n# Module Execution Result\n# ------------------------\n#\n#  \"before\": {\n#        \"holdtime\": 100,\n#        \"reinit\": 2,\n#        \"subinterfaces\": true,\n#        \"timer\": 3000,\n#        \"tlv_select\": {\n#            \"management_address\": false,\n#            \"system_description\": false\n#        }\n#  },\n#\n#  \"commands\": [\n#        \"no lldp holdtime 100\",\n#        \"no lldp reinit 2\",\n#        \"no lldp subinterfaces enable\",\n#        \"no lldp timer 3000\",\n#        \"no lldp tlv-select management-address disable\",\n#        \"no lldp tlv-select system-description disable\"\n#  ]\n#\n#  \"after\": {}\n#\n#\n# -----------\n# After state\n# -----------\n#\n# RP/0/0/CPU0:an-iosxr#sh run lldp\n# Tue Aug  6 21:38:31.187 UTC\n# lldp\n# !\n#\n# Using parsed:\n\n# parsed.cfg\n# lldp\n#  timer 3000\n#  reinit 2\n#  subinterfaces enable\n#  holdtime 100\n#  tlv-select\n#   management-address disable\n#   system-description disable\n#  !\n# !\n\n- name: Convert lldp global config to argspec without connecting to the appliance\n  cisco.iosxr.iosxr_lldp_global:\n    running_config: \"{{ lookup('file', './parsed.cfg') }}\"\n    state: parsed\n\n# ------------------------\n# Module Execution Result\n# ------------------------\n# parsed:\n#     holdtime: 100\n#     reinit: 2\n#     timer: 3000\n#     subinterfaces: True\n#     tlv_select:\n#       management_address: False\n#       system_description: False\n\n# using gathered:\n\n# Device config:\n# lldp\n#  timer 3000\n#  reinit 2\n#  subinterfaces enable\n#  holdtime 100\n#  tlv-select\n#   management-address disable\n#   system-description disable\n#  !\n# !\n\n- name: Gather IOSXR lldp global configuration\n  cisco.iosxr.iosxr_lldp_global:\n    config:\n    state: gathered\n\n\n# ------------------------\n# Module Execution Result\n# ------------------------\n# gathered:\n#     holdtime: 100\n#     reinit: 2\n#     timer: 3000\n#     subinterfaces: True\n#     tlv_select:\n#       management_address: False\n#       system_description: False\n\n# using rendered:\n\n- name: Render platform specific commands from task input using rendered state\n  cisco.iosxr.iosxr_lldp_global:\n    config:\n      holdtime: 100\n      reinit: 2\n      timer: 3000\n      subinterfaces: true\n      tlv_select:\n        management_address: false\n        system_description: false\n    state: rendered\n\n#\n#\n# ------------------------\n# Module Execution Result\n# ------------------------\n#\n#  \"rendered\": [\n#        \"lldp subinterfaces enable\",\n#        \"lldp holdtime 100\",\n#        \"lldp reinit 2\",\n#        \"lldp tlv-select system-description disable\",\n#        \"lldp tlv-select management-address disable\",\n#        \"lldp timer 3000\"\n#  ]\n\n\n\n"
  },
  "cisco.iosxr.iosxr_lldp_interfaces": {
    "doc": {
      "description": "This module manages Link Layer Discovery Protocol (LLDP) attributes of interfaces on IOS-XR devices.",
      "has_action": true,
      "notes": "This module works with connection C(network_cli). See L(the IOS-XR Platform Options,../network/user_guide/platform_iosxr.html).",
      "options": {
        "config": {
          "aliases": [],
          "description": "A dictionary of LLDP interfaces options.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "destination": {
              "aliases": [],
              "description": "Specifies LLDP destination configuration on the interface.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "mac_address": {
                  "aliases": [],
                  "description": "Specifies the LLDP destination mac address on the interface.",
                  "type": "str",
                  "required": false,
                  "choices": [
                    "ieee-nearest-bridge",
                    "ieee-nearest-non-tmpr-bridge"
                  ],
                  "suboptions": {}
                }
              }
            },
            "name": {
              "aliases": [],
              "description": "Name/Identifier of the interface or Ether-Bundle.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "receive": {
              "aliases": [],
              "description": "Enable/disable LLDP RX on an interface.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "transmit": {
              "aliases": [],
              "description": "Enable/disable LLDP TX on an interface.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "running_config": {
          "aliases": [],
          "description": "This option is used only with state I(parsed).\nThe value of this option should be the output received from the IOS-XR device by executing the command B(show running-config int).\nThe state I(parsed) reads the configuration from C(running_config) option and transforms it into Ansible structured data as per the resource module's argspec and the value is then returned in the I(parsed) key within the result.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The state of the configuration after module completion.",
          "default": "merged",
          "type": "str",
          "required": false,
          "choices": [
            "merged",
            "replaced",
            "overridden",
            "deleted",
            "parsed",
            "rendered",
            "gathered"
          ],
          "suboptions": {}
        }
      },
      "short_description": "LLDP interfaces resource module",
      "version_added": "1.0.0"
    },
    "examples": "\n# Using merged\n#\n#\n# ------------\n# Before state\n# ------------\n#\n#\n# RP/0/RP0/CPU0:ios#sh run int\n# Mon Aug 12 12:40:23.104 UTC\n# interface TenGigE0/0/0/0\n#  ipv4 address 192.0.2.11 255.255.255.192\n# !\n# interface preconfigure GigabitEthernet0/0/0/1\n# !\n# interface preconfigure GigabitEthernet0/0/0/2\n# !\n#\n#\n\n- name: Merge provided configuration with running configuration\n  cisco.iosxr.iosxr_lldp_interfaces:\n    config:\n    - name: GigabitEthernet0/0/0/1\n      destination:\n        mac_address: ieee-nearest-non-tmpr-bridge\n      transmit: false\n\n    - name: GigabitEthernet0/0/0/2\n      destination:\n        mac_address: ieee-nearest-bridge\n      receive: false\n    state: merged\n\n#\n#\n# ------------------------\n# Module Execution Result\n# ------------------------\n#\n#\n# \"before\": [\n#        {\n#            \"name\": \"TenGigE0/0/0/0\"\n#        },\n#        {\n#            \"name\": \"GigabitEthernet0/0/0/1\"\n#        },\n#        {\n#            \"name\": \"GigabitEthernet0/0/0/2\"\n#        }\n# ]\n#\n# \"commands\": [\n#        \"interface GigabitEthernet0/0/0/2\",\n#        \"lldp destination mac-address ieee-nearest-non-tmpr-bridge\",\n#        \"lldp transmit disable\",\n#        \"interface GigabitEthernet0/0/0/1\",\n#        \"lldp receive disable\",\n#        \"lldp destination mac-address ieee-nearest-bridge\"\n# ]\n#\n# \"after\": [\n#        {\n#            \"name\": \"TenGigE0/0/0/0\"\n#        },\n#        {\n#            \"destination\": {\n#                \"mac_address\": \"ieee-nearest-bridge\"\n#            },\n#            \"name\": \"GigabitEthernet0/0/0/1\",\n#            \"receive\": false\n#        },\n#        {\n#            \"destination\": {\n#                \"mac_address\": \"ieee-nearest-non-tmpr-bridge\"\n#            },\n#            \"name\": \"GigabitEthernet0/0/0/2\",\n#            \"transmit\": false\n#        }\n# ]\n#\n#\n# ------------\n# After state\n# ------------\n#\n#\n# RP/0/RP0/CPU0:ios#sh run int\n# Mon Aug 12 12:49:51.517 UTC\n# interface TenGigE0/0/0/0\n#  ipv4 address 192.0.2.11 255.255.255.192\n# !\n# interface preconfigure GigabitEthernet0/0/0/1\n#  lldp\n#   receive disable\n#   destination mac-address\n#    ieee-nearest-bridge\n#   !\n#  !\n# !\n# interface preconfigure GigabitEthernet0/0/0/2\n#  lldp\n#   transmit disable\n#   destination mac-address\n#    ieee-nearest-non-tmpr-bridge\n#   !\n#  !\n# !\n#\n#\n\n\n# Using replaced\n#\n#\n# -------------\n# Before state\n# -------------\n#\n#\n# RP/0/RP0/CPU0:ios#sh run int\n# Mon Aug 12 12:49:51.517 UTC\n# interface TenGigE0/0/0/0\n#  ipv4 address 192.0.2.11 255.255.255.192\n# !\n# interface preconfigure GigabitEthernet0/0/0/1\n#  lldp\n#   receive disable\n#   destination mac-address\n#    ieee-nearest-bridge\n#   !\n#  !\n# !\n# interface preconfigure GigabitEthernet0/0/0/2\n#  lldp\n#   transmit disable\n#   destination mac-address\n#    ieee-nearest-non-tmpr-bridge\n#   !\n#  !\n# !\n#\n#\n\n- name: Replace existing LLDP configurations of specified interfaces with provided\n    configuration\n  cisco.iosxr.iosxr_lldp_interfaces:\n    config:\n    - name: GigabitEthernet0/0/0/1\n      destination:\n        mac_address: ieee-nearest-non-tmpr-bridge\n    state: replaced\n\n#\n#\n# ------------------------\n# Module Execution Result\n# ------------------------\n#\n# \"before\": [\n#        {\n#            \"name\": \"TenGigE0/0/0/0\"\n#        },\n#        {\n#            \"destination\": {\n#                \"mac_address\": \"ieee-nearest-bridge\"\n#            },\n#            \"name\": \"GigabitEthernet0/0/0/1\",\n#            \"receive\": false\n#        },\n#        {\n#            \"destination\": {\n#                \"mac_address\": \"ieee-nearest-non-tmpr-bridge\"\n#            },\n#            \"name\": \"GigabitEthernet0/0/0/2\",\n#            \"transmit\": false\n#        }\n# ]\n#\n#\n# \"commands\": [\n#        \"interface GigabitEthernet0/0/0/1\",\n#        \"no lldp receive disable\",\n#        \"lldp destination mac-address ieee-nearest-non-tmpr-bridge\"\n# ]\n#\n#\n# \"after\": [\n#        {\n#            \"name\": \"TenGigE0/0/0/0\"\n#        },\n#        {\n#            \"destination\": {\n#                \"mac_address\": \"ieee-nearest-non-tmpr-bridge\"\n#            },\n#            \"name\": \"GigabitEthernet0/0/0/1\"\n#        },\n#        {\n#            \"destination\": {\n#                \"mac_address\": \"ieee-nearest-non-tmpr-bridge\"\n#            },\n#            \"name\": \"GigabitEthernet0/0/0/2\",\n#            \"transmit\": false\n#        }\n# ]\n#\n#\n# ------------\n# After state\n# ------------\n#\n#\n# RP/0/RP0/CPU0:ios#sh run int\n# Mon Aug 12 13:02:57.062 UTC\n# interface TenGigE0/0/0/0\n#  ipv4 address 192.0.2.11 255.255.255.192\n# !\n# interface preconfigure GigabitEthernet0/0/0/1\n#  lldp\n#   destination mac-address\n#    ieee-nearest-non-tmpr-bridge\n#   !\n#  !\n# !\n# interface preconfigure GigabitEthernet0/0/0/2\n#  lldp\n#   transmit disable\n#   destination mac-address\n#    ieee-nearest-non-tmpr-bridge\n#   !\n#  !\n# !\n#\n#\n\n\n# Using overridden\n#\n#\n# -------------\n# Before state\n# -------------\n#\n#\n# RP/0/RP0/CPU0:ios#sh run int\n# Mon Aug 12 13:15:40.465 UTC\n# interface TenGigE0/0/0/0\n#  ipv4 address 192.0.2.11 255.255.255.192\n# !\n# interface preconfigure GigabitEthernet0/0/0/1\n#  lldp\n#   receive disable\n#   destination mac-address\n#    ieee-nearest-bridge\n#   !\n#  !\n# !\n# interface preconfigure GigabitEthernet0/0/0/2\n#  lldp\n#   transmit disable\n#   destination mac-address\n#    ieee-nearest-non-tmpr-bridge\n#   !\n#  !\n# !\n#\n#\n\n- name: Override the LLDP configurations of all the interfaces with provided configurations\n  cisco.iosxr.iosxr_lldp_interfaces:\n    config:\n    - name: GigabitEthernet0/0/0/1\n      transmit: false\n    state: overridden\n\n#\n#\n# ------------------------\n# Module Execution Result\n# ------------------------\n#\n#\n# \"before\": [\n#        {\n#            \"name\": \"TenGigE0/0/0/0\"\n#        },\n#        {\n#            \"destination\": {\n#                \"mac_address\": \"ieee-nearest-bridge\"\n#            },\n#            \"name\": \"GigabitEthernet0/0/0/1\",\n#            \"receive\": false\n#        },\n#        {\n#            \"destination\": {\n#                \"mac_address\": \"ieee-nearest-non-tmpr-bridge\"\n#            },\n#            \"name\": \"GigabitEthernet0/0/0/2\",\n#            \"transmit\": false\n#        }\n# ]\n#\n# \"commands\": [\n#        \"interface GigabitEthernet0/0/0/2\",\n#        \"no lldp destination mac-address ieee-nearest-non-tmpr-bridge\",\n#        \"no lldp transmit disable\",\n#        \"interface GigabitEthernet0/0/0/1\",\n#        \"no lldp destination mac-address ieee-nearest-bridge\",\n#        \"no lldp receive disable\",\n#        \"lldp transmit disable\"\n# ]\n#\n#\n# \"after\": [\n#        {\n#            \"name\": \"TenGigE0/0/0/0\"\n#        },\n#        {\n#            \"name\": \"GigabitEthernet0/0/0/1\",\n#            \"transmit\": false\n#        },\n#        {\n#            \"name\": \"GigabitEthernet0/0/0/2\"\n#        }\n# ]\n#\n#\n# ------------\n# After state\n# ------------\n#\n#\n# RP/0/RP0/CPU0:ios#sh run int\n# Mon Aug 12 13:22:25.604 UTC\n# interface TenGigE0/0/0/0\n#  ipv4 address 192.0.2.11 255.255.255.192\n# !\n# interface preconfigure GigabitEthernet0/0/0/1\n#  lldp\n#   transmit disable\n#  !\n# !\n# interface preconfigure GigabitEthernet0/0/0/2\n# !\n#\n#\n\n\n# Using deleted\n#\n#\n# -------------\n# Before state\n# -------------\n#\n#\n# RP/0/RP0/CPU0:ios#sh run int\n# Mon Aug 12 13:26:21.498 UTC\n# interface TenGigE0/0/0/0\n#  ipv4 address 192.0.2.11 255.255.255.192\n# !\n# interface preconfigure GigabitEthernet0/0/0/1\n#  lldp\n#   receive disable\n#   destination mac-address\n#    ieee-nearest-bridge\n#   !\n#  !\n# !\n# interface preconfigure GigabitEthernet0/0/0/2\n#  lldp\n#   transmit disable\n#   destination mac-address\n#    ieee-nearest-non-tmpr-bridge\n#   !\n#  !\n# !\n#\n#\n\n- name: Delete LLDP configurations of all interfaces (Note - This won't delete the\n    interfaces themselves)\n  cisco.iosxr.iosxr_lldp_interfaces:\n    state: deleted\n\n#\n#\n#\n# ------------------------\n# Module Execution Result\n# ------------------------\n#\n#\n# \"before\": [\n#        {\n#            \"name\": \"TenGigE0/0/0/0\"\n#        },\n#        {\n#            \"destination\": {\n#                \"mac_address\": \"ieee-nearest-bridge\"\n#            },\n#            \"name\": \"GigabitEthernet0/0/0/1\",\n#            \"receive\": false\n#        },\n#        {\n#            \"destination\": {\n#                \"mac_address\": \"ieee-nearest-non-tmpr-bridge\"\n#            },\n#            \"name\": \"GigabitEthernet0/0/0/2\",\n#            \"transmit\": false\n#        }\n# ]\n#\n#\n# \"commands\": [\n#        \"interface GigabitEthernet0/0/0/1\",\n#        \"no lldp destination mac-address ieee-nearest-bridge\",\n#        \"no lldp receive disable\",\n#        \"interface GigabitEthernet0/0/0/2\",\n#        \"no lldp destination mac-address ieee-nearest-non-tmpr-bridge\",\n#        \"no lldp transmit disable\"\n# ]\n#\n#\n# \"after\": [\n#        {\n#            \"name\": \"TenGigE0/0/0/0\"\n#        },\n#        {\n#            \"name\": \"GigabitEthernet0/0/0/1\"\n#        },\n#        {\n#            \"name\": \"GigabitEthernet0/0/0/2\"\n#        }\n# ]\n#\n#\n# ------------\n# After state\n# ------------\n#\n#\n# RP/0/RP0/CPU0:ios#sh run int\n# Mon Aug 12 13:30:14.618 UTC\n# interface TenGigE0/0/0/0\n#  ipv4 address 192.0.2.11 255.255.255.192\n# !\n# interface preconfigure GigabitEthernet0/0/0/1\n# !\n# interface preconfigure GigabitEthernet0/0/0/2\n# !\n#\n#\n# Using parsed:\n# parsed.cfg\n\n# interface TenGigE0/0/0/0\n#  ipv4 address 192.0.2.11 255.255.255.192\n# !\n# interface preconfigure GigabitEthernet0/0/0/1\n#  lldp\n#   receive disable\n#   destination mac-address\n#    ieee-nearest-bridge\n#   !\n#  !\n# !\n# interface preconfigure GigabitEthernet0/0/0/2\n#  lldp\n#   transmit disable\n#   destination mac-address\n#    ieee-nearest-non-tmpr-bridge\n\n- name: Convert lacp interfaces config to argspec without connecting to the appliance\n  cisco.iosxr.iosxr_lldp_interfaces:\n    running_config: \"{{ lookup('file', './parsed.cfg') }}\"\n    state: parsed\n\n# ------------------------\n# Module Execution Result\n# ------------------------\n\n# parsed: [\n#   - name: GigabitEthernet0/0/0/1\n#       destination:\n#         mac_address: ieee-nearest-non-tmpr-bridge\n#       transmit: False\n\n#     - name: GigabitEthernet0/0/0/2\n#       destination:\n#         mac_address: ieee-nearest-bridge\n#       receive: False\n#   ]\n\n# Using gathered:\n# Device config:\n\n# RP/0/RP0/CPU0:ios#sh run int\n# Mon Aug 12 12:49:51.517 UTC\n# interface TenGigE0/0/0/0\n#  ipv4 address 192.0.2.11 255.255.255.192\n# !\n# interface preconfigure GigabitEthernet0/0/0/1\n#  lldp\n#   receive disable\n#   destination mac-address\n#    ieee-nearest-bridge\n#   !\n#  !\n# !\n# interface preconfigure GigabitEthernet0/0/0/2\n#  lldp\n#   transmit disable\n#   destination mac-address\n#    ieee-nearest-non-tmpr-bridge\n\n- name: Gather IOSXR lldp interfaces configuration\n  cisco.iosxr.iosxr_lldp_interfaces:\n    config:\n    state: gathered\n\n# ------------------------\n# Module Execution Result\n# ------------------------\n\n#   gathered:\n#     - name: GigabitEthernet0/0/0/1\n#       destination:\n#         mac_address: ieee-nearest-non-tmpr-bridge\n#       transmit: False\n\n#     - name: GigabitEthernet0/0/0/2\n#       destination:\n#         mac_address: ieee-nearest-bridge\n#       receive: False\n\n# Using rendred:\n- name: Render platform specific commands from task input using rendered state\n  cisco.iosxr.iosxr_lldp_interfaces:\n    config:\n    - name: GigabitEthernet0/0/0/1\n      destination:\n        mac_address: ieee-nearest-non-tmpr-bridge\n      transmit: false\n\n    - name: GigabitEthernet0/0/0/2\n      destination:\n        mac_address: ieee-nearest-bridge\n      receive: false\n    state: rendered\n\n# ------------------------\n# Module Execution Result\n# ------------------------\n\n# \"rendered\": [\n#        \"interface GigabitEthernet0/0/0/2\",\n#        \"lldp destination mac-address ieee-nearest-non-tmpr-bridge\",\n#        \"lldp transmit disable\",\n#        \"interface GigabitEthernet0/0/0/1\",\n#        \"lldp receive disable\",\n#        \"lldp destination mac-address ieee-nearest-bridge\"\n# ]\n\n"
  },
  "cisco.iosxr.iosxr_logging": {
    "doc": {
      "description": "This module provides declarative management configuration of system logging (syslog) on Cisco IOS XR devices.",
      "has_action": true,
      "notes": "This module works with connection C(network_cli) and C(netconf). See L(the IOS-XR Platform Options,../network/user_guide/platform_iosxr.html).\nFor more information on using Ansible to manage network devices see the :ref:`Ansible Network Guide <network_guide>`\nFor more information on using Ansible to manage Cisco devices see the `Cisco integration page <https://www.ansible.com/integrations/networks/cisco>`_.",
      "options": {
        "aggregate": {
          "aliases": [],
          "description": "List of syslog logging configuration definitions.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "dest": {
              "aliases": [],
              "description": "Destination for system logging (syslog) messages.",
              "type": "str",
              "required": false,
              "choices": [
                "host",
                "console",
                "monitor",
                "buffered",
                "file"
              ],
              "suboptions": {}
            },
            "facility": {
              "aliases": [],
              "description": "To configure the type of syslog facility in which system logging (syslog) messages are sent to syslog servers Optional config for C(dest) = C(host)",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "hostnameprefix": {
              "aliases": [],
              "description": "To append a hostname prefix to system logging (syslog) messages logged to syslog servers. Optional config for C(dest) = C(host)",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "level": {
              "aliases": [
                "severity"
              ],
              "description": "Specifies the severity level for the logging.",
              "type": "str",
              "required": false,
              "choices": [
                "emergencies",
                "alerts",
                "critical",
                "errors",
                "warning",
                "notifications",
                "informational",
                "debugging"
              ],
              "suboptions": {}
            },
            "name": {
              "aliases": [],
              "description": "When C(dest) = I(file) name indicates file-name\nWhen C(dest) = I(host) name indicates the host-name or ip-address of syslog server.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "path": {
              "aliases": [],
              "description": "Set file path.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "size": {
              "aliases": [],
              "description": "Size of buffer when C(dest) = C(buffered). The acceptable value is in the range I(307200 to 125000000 bytes). Default 307200\nSize of file when C(dest) = C(file). The acceptable value is in the range I(1 to 2097152)KB. Default 2 GB",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "state": {
              "aliases": [],
              "description": "Existential state of the logging configuration on the node.",
              "type": "str",
              "required": false,
              "choices": [
                "present",
                "absent"
              ],
              "suboptions": {}
            },
            "vrf": {
              "aliases": [],
              "description": "vrf name when syslog server is configured, C(dest) = C(host)",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "dest": {
          "aliases": [],
          "description": "Destination for system logging (syslog) messages.",
          "type": "str",
          "required": false,
          "choices": [
            "host",
            "console",
            "monitor",
            "buffered",
            "file"
          ],
          "suboptions": {}
        },
        "facility": {
          "aliases": [],
          "description": "To configure the type of syslog facility in which system logging (syslog) messages are sent to syslog servers Optional config for C(dest) = C(host)",
          "default": "local7",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "hostnameprefix": {
          "aliases": [],
          "description": "To append a hostname prefix to system logging (syslog) messages logged to syslog servers. Optional config for C(dest) = C(host)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "level": {
          "aliases": [
            "severity"
          ],
          "description": "Specifies the severity level for the logging.",
          "default": "debugging",
          "type": "str",
          "required": false,
          "choices": [
            "emergencies",
            "alerts",
            "critical",
            "errors",
            "warning",
            "notifications",
            "informational",
            "debugging"
          ],
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "When C(dest) = I(file) name indicates file-name\nWhen C(dest) = I(host) name indicates the host-name or ip-address of syslog server.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "path": {
          "aliases": [],
          "description": "Set file path.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "B(Deprecated)\nStarting with Ansible 2.5 we recommend using C(connection: network_cli).\nFor more information please see the L(Network Guide, ../network/getting_started/network_differences.html#multiple-communication-protocols).\nHORIZONTALLINE\nA dict object containing connection details.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "host": {
              "aliases": [],
              "description": "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [],
              "description": "Specifies the password to use to authenticate the connection to the remote device.   This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "port": {
              "aliases": [],
              "description": "Specifies the port to use when building the connection to the remote device.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "ssh_keyfile": {
              "aliases": [],
              "description": "Specifies the SSH key to use to authenticate the connection to the remote device.   This value is the path to the key used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead.",
              "type": "path",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Specifies the type of connection based transport.",
              "default": "cli",
              "type": "str",
              "required": false,
              "choices": [
                "cli",
                "netconf"
              ],
              "suboptions": {}
            },
            "username": {
              "aliases": [],
              "description": "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "size": {
          "aliases": [],
          "description": "Size of buffer when C(dest) = C(buffered). The acceptable value is in the range I(307200 to 125000000 bytes). Default 307200\nSize of file when C(dest) = C(file). The acceptable value is in the range I(1 to 2097152)KB. Default 2 GB",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Existential state of the logging configuration on the node.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "vrf": {
          "aliases": [],
          "description": "vrf name when syslog server is configured, C(dest) = C(host)",
          "default": "default",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "ncclient >= 0.5.3 when using netconf",
        "lxml >= 4.1.1 when using netconf"
      ],
      "short_description": "Configuration management of system logging services on network devices",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: configure logging for syslog server host\n  cisco.iosxr.iosxr_logging:\n    dest: host\n    name: 10.10.10.1\n    level: critical\n    state: present\n\n- name: add hostnameprefix configuration\n  cisco.iosxr.iosxr_logging:\n    hostnameprefix: host1\n    state: absent\n\n- name: add facility configuration\n  cisco.iosxr.iosxr_logging:\n    facility: local1\n    state: present\n\n- name: configure console logging level\n  cisco.iosxr.iosxr_logging:\n    dest: console\n    level: debugging\n    state: present\n\n- name: configure monitor logging level\n  cisco.iosxr.iosxr_logging:\n    dest: monitor\n    level: errors\n    state: present\n\n- name: configure syslog to a file\n  cisco.iosxr.iosxr_logging:\n    dest: file\n    name: file_name\n    size: 2048\n    level: errors\n    state: present\n\n- name: configure buffered logging with size\n  cisco.iosxr.iosxr_logging:\n    dest: buffered\n    size: 5100000\n\n- name: Configure logging using aggregate\n  cisco.iosxr.iosxr_logging:\n    aggregate:\n    - {dest: console, level: warning}\n    - {dest: buffered, size: 4800000}\n    - {dest: file, name: file3, size: 2048}\n    - {dest: host, name: host3, level: critical}\n\n- name: Delete logging using aggregate\n  cisco.iosxr.iosxr_logging:\n    aggregate:\n    - {dest: console, level: warning}\n    - {dest: buffered, size: 4800000}\n    - {dest: file, name: file3, size: 2048}\n    - {dest: host, name: host3, level: critical}\n    state: absent\n"
  },
  "cisco.iosxr.iosxr_logging_global": {
    "doc": {
      "description": "This module manages the logging attributes of Cisco IOSXR network devices",
      "has_action": true,
      "notes": "Tested against IOSXR 7.0.2.\nThis module works with connection C(network_cli).",
      "options": {
        "config": {
          "aliases": [],
          "description": "A dictionary of logging options.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "archive": {
              "aliases": [],
              "description": "logging to a persistent device(disk/harddisk)",
              "type": "dict",
              "required": false,
              "suboptions": {
                "archive_length": {
                  "aliases": [],
                  "description": "The maximum no of weeks of log to maintain.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "archive_size": {
                  "aliases": [],
                  "description": "The total size of the archive.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "device": {
                  "aliases": [],
                  "description": "Configure the archive device",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "file_size": {
                  "aliases": [],
                  "description": "The maximum file size for a single log file..",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "frequency": {
                  "aliases": [],
                  "description": "The collection interval for logs.",
                  "type": "str",
                  "required": false,
                  "choices": [
                    "daily",
                    "weekly"
                  ],
                  "suboptions": {}
                },
                "severity": {
                  "aliases": [],
                  "description": "Logging severity level",
                  "type": "str",
                  "required": false,
                  "choices": [
                    "alerts",
                    "critical",
                    "debugging",
                    "emergencies",
                    "errors",
                    "informational",
                    "notifications",
                    "warnings"
                  ],
                  "suboptions": {}
                },
                "threshold": {
                  "aliases": [],
                  "description": "Threshold percent <1-99>.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "buffered": {
              "aliases": [],
              "description": "Set buffered logging parameters",
              "type": "dict",
              "required": false,
              "suboptions": {
                "discriminator": {
                  "aliases": [],
                  "description": "Establish MD-Buffer association",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "match_params": {
                      "aliases": [],
                      "description": "Set match/no-match discriminator.",
                      "type": "str",
                      "required": false,
                      "choices": [
                        "match1",
                        "match2",
                        "match3",
                        "nomatch1",
                        "nomatch2",
                        "nomatch3"
                      ],
                      "suboptions": {}
                    },
                    "name": {
                      "aliases": [],
                      "description": "discriminator name.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "severity": {
                  "aliases": [],
                  "description": "Logging severity level",
                  "type": "str",
                  "required": false,
                  "choices": [
                    "alerts",
                    "critical",
                    "debugging",
                    "emergencies",
                    "errors",
                    "informational",
                    "notifications",
                    "warnings"
                  ],
                  "suboptions": {}
                },
                "size": {
                  "aliases": [],
                  "description": "Logging buffer size",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "console": {
              "aliases": [],
              "description": "Set console logging parameters",
              "type": "dict",
              "required": false,
              "suboptions": {
                "discriminator": {
                  "aliases": [],
                  "description": "Establish MD-Buffer association",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "match_params": {
                      "aliases": [],
                      "description": "Set match/no-match discriminator.",
                      "type": "str",
                      "required": false,
                      "choices": [
                        "match1",
                        "match2",
                        "match3",
                        "nomatch1",
                        "nomatch2",
                        "nomatch3"
                      ],
                      "suboptions": {}
                    },
                    "name": {
                      "aliases": [],
                      "description": "discriminator name.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "severity": {
                  "aliases": [],
                  "description": "Logging severity level",
                  "type": "str",
                  "required": false,
                  "choices": [
                    "alerts",
                    "critical",
                    "debugging",
                    "emergencies",
                    "errors",
                    "informational",
                    "notifications",
                    "warning"
                  ],
                  "suboptions": {}
                },
                "state": {
                  "aliases": [],
                  "description": "Enable or disable logging.",
                  "type": "str",
                  "required": false,
                  "choices": [
                    "enabled",
                    "disabled"
                  ],
                  "suboptions": {}
                }
              }
            },
            "correlator": {
              "aliases": [],
              "description": "Configure properties of the event correlator",
              "type": "dict",
              "required": false,
              "suboptions": {
                "buffer_size": {
                  "aliases": [],
                  "description": "Configure size of the correlator buffer.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "rule_sets": {
                  "aliases": [],
                  "description": "Configure a specified correlation ruleset.",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "name": {
                      "aliases": [],
                      "description": "Name of the ruleset",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "rulename": {
                      "aliases": [],
                      "description": "Name of the rule",
                      "type": "list",
                      "required": false,
                      "elements": "str",
                      "suboptions": {}
                    }
                  }
                },
                "rules": {
                  "aliases": [],
                  "description": "Configure a specified correlation rule.",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "context_correlation": {
                      "aliases": [],
                      "description": "Specify enable correlation on context.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "reissue_nonbistate": {
                      "aliases": [],
                      "description": "Specify reissue of non-bistate alarms on parent clear.This option is allowed for the rules whose type is stateful.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "reparent": {
                      "aliases": [],
                      "description": "Specify reparent of alarm on parent clear.This option is allowed for the rules whose type is stateful.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "rule_name": {
                      "aliases": [],
                      "description": "name of rule.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "rule_type": {
                      "aliases": [],
                      "description": "type of rule - stateful or nonstateful.",
                      "type": "str",
                      "required": false,
                      "choices": [
                        "stateful",
                        "nonstateful"
                      ],
                      "suboptions": {}
                    },
                    "timeout": {
                      "aliases": [],
                      "description": "Specify timeout.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "timeout_rootcause": {
                      "aliases": [],
                      "description": "Specify timeout for root-cause.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                }
              }
            },
            "events": {
              "aliases": [],
              "description": "Configure event monitoring parameters.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "buffer_size": {
                  "aliases": [],
                  "description": "Set size of the local event buffer.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "display_location": {
                  "aliases": [],
                  "description": "Include alarm source location in message text.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "filter_match": {
                  "aliases": [],
                  "description": "Configure filter.",
                  "type": "list",
                  "required": false,
                  "elements": "str",
                  "suboptions": {}
                },
                "severity": {
                  "aliases": [],
                  "description": "Logging severity level",
                  "type": "str",
                  "required": false,
                  "choices": [
                    "alerts",
                    "critical",
                    "debugging",
                    "emergencies",
                    "errors",
                    "informational",
                    "notifications",
                    "warnings"
                  ],
                  "suboptions": {}
                },
                "threshold": {
                  "aliases": [],
                  "description": "Capacity alarm threshold.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "facility": {
              "aliases": [],
              "description": "Facility parameter for syslog messages",
              "type": "str",
              "required": false,
              "choices": [
                "auth",
                "cron",
                "daemon",
                "kern",
                "local0",
                "local1",
                "local2",
                "local3",
                "local4",
                "local5",
                "local6",
                "local7",
                "lpr",
                "mail",
                "news",
                "sys10",
                "sys11",
                "sys12",
                "sys13",
                "sys14",
                "sys9",
                "syslog",
                "user",
                "uucp"
              ],
              "suboptions": {}
            },
            "files": {
              "aliases": [],
              "description": "Set file logging.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "maxfilesize": {
                  "aliases": [],
                  "description": "Set max file size.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "name": {
                  "aliases": [],
                  "description": "name of file.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "path": {
                  "aliases": [],
                  "description": "Set file path.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "severity": {
                  "aliases": [],
                  "description": "Logging severity level",
                  "type": "str",
                  "required": false,
                  "choices": [
                    "alerts",
                    "critical",
                    "debugging",
                    "emergencies",
                    "errors",
                    "info",
                    "notifications",
                    "warning"
                  ],
                  "suboptions": {}
                }
              }
            },
            "format": {
              "aliases": [],
              "description": "Enable to send the syslog message rfc5424 format .",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "history": {
              "aliases": [],
              "description": "Configure syslog history table",
              "type": "dict",
              "required": false,
              "suboptions": {
                "severity": {
                  "aliases": [],
                  "description": "Logging severity level",
                  "type": "str",
                  "required": false,
                  "choices": [
                    "alerts",
                    "critical",
                    "debugging",
                    "emergencies",
                    "errors",
                    "informational",
                    "notifications",
                    "warnings"
                  ],
                  "suboptions": {}
                },
                "size": {
                  "aliases": [],
                  "description": "Logging buffer size",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "state": {
                  "aliases": [],
                  "description": "Enable or disable logging.",
                  "type": "str",
                  "required": false,
                  "choices": [
                    "enabled",
                    "disabled"
                  ],
                  "suboptions": {}
                }
              }
            },
            "hostnameprefix": {
              "aliases": [],
              "description": "Hostname prefix to add on msgs to servers.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "hosts": {
              "aliases": [],
              "description": "Set syslog server IP address and parameters",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "host": {
                  "aliases": [],
                  "description": "IPv4/Ipv6 address or hostname of the syslog server",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "port": {
                  "aliases": [],
                  "description": "Set <0-65535>  non-default Port.",
                  "default": "default",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "severity": {
                  "aliases": [],
                  "description": "Logging severity level",
                  "type": "str",
                  "required": false,
                  "choices": [
                    "alerts",
                    "critical",
                    "debugging",
                    "emergencies",
                    "error",
                    "info",
                    "notifications",
                    "warning"
                  ],
                  "suboptions": {}
                },
                "vrf": {
                  "aliases": [],
                  "description": "Set VRF option",
                  "default": "default",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "ipv4": {
              "aliases": [],
              "description": "Mark the dscp/precedence bit for ipv4 packets.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "dscp": {
                  "aliases": [],
                  "description": "Set IP DSCP (DiffServ CodePoint).Please refer vendor document for valid entries.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "precedence": {
                  "aliases": [],
                  "description": "Set precedence Please refer vendor document for valid entries.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "ipv6": {
              "aliases": [],
              "description": "Mark the dscp/precedence bit for ipv4 packets.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "dscp": {
                  "aliases": [],
                  "description": "Set IP DSCP (DiffServ CodePoint).Please refer vendor document for valid entries.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "precedence": {
                  "aliases": [],
                  "description": "Set precedence Please refer vendor document for valid entries.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "localfilesize": {
              "aliases": [],
              "description": "Set size of the local log file",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "monitor": {
              "aliases": [],
              "description": "Set terminal line (monitor) logging parameters",
              "type": "dict",
              "required": false,
              "suboptions": {
                "discriminator": {
                  "aliases": [],
                  "description": "Establish MD-Buffer association",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "match_params": {
                      "aliases": [],
                      "description": "Set match/no-match discriminator.",
                      "type": "str",
                      "required": false,
                      "choices": [
                        "match1",
                        "match2",
                        "match3",
                        "nomatch1",
                        "nomatch2",
                        "nomatch3"
                      ],
                      "suboptions": {}
                    },
                    "name": {
                      "aliases": [],
                      "description": "discriminator name.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "severity": {
                  "aliases": [],
                  "description": "Logging severity level",
                  "type": "str",
                  "required": false,
                  "choices": [
                    "alerts",
                    "critical",
                    "debugging",
                    "emergencies",
                    "errors",
                    "informational",
                    "notifications",
                    "warning"
                  ],
                  "suboptions": {}
                },
                "state": {
                  "aliases": [],
                  "description": "Enable or disable logging.",
                  "type": "str",
                  "required": false,
                  "choices": [
                    "enabled",
                    "disabled"
                  ],
                  "suboptions": {}
                }
              }
            },
            "source_interfaces": {
              "aliases": [],
              "description": "Specify interface for source address in logging transactions",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "interface": {
                  "aliases": [],
                  "description": "Interface name with number",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "vrf": {
                  "aliases": [],
                  "description": "VPN Routing/Forwarding instance name",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "suppress": {
              "aliases": [],
              "description": "Suppress logging behaviour.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "apply_rule": {
                  "aliases": [],
                  "description": "Apply suppression rule.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "duplicates": {
                  "aliases": [],
                  "description": "Suppress consecutive duplicate messages.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "tls_servers": {
              "aliases": [],
              "description": "Secure server over tls.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "name": {
                  "aliases": [],
                  "description": "Name for the tls peer configuration.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "severity": {
                  "aliases": [],
                  "description": "Logging severity level",
                  "type": "str",
                  "required": false,
                  "choices": [
                    "alerts",
                    "critical",
                    "debugging",
                    "emergencies",
                    "errors",
                    "informational",
                    "notifications",
                    "warnings"
                  ],
                  "suboptions": {}
                },
                "tls_hostname": {
                  "aliases": [],
                  "description": "Name of the logging host.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "trustpoint": {
                  "aliases": [],
                  "description": "Name of the trustpoint configured.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "vrf": {
                  "aliases": [],
                  "description": "name of vrf.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "trap": {
              "aliases": [],
              "description": "Set syslog server logging level",
              "type": "dict",
              "required": false,
              "suboptions": {
                "severity": {
                  "aliases": [],
                  "description": "Logging severity level",
                  "type": "str",
                  "required": false,
                  "choices": [
                    "alerts",
                    "critical",
                    "debugging",
                    "emergencies",
                    "errors",
                    "informational",
                    "notifications",
                    "warning"
                  ],
                  "suboptions": {}
                },
                "state": {
                  "aliases": [],
                  "description": "Enable or disable logging.",
                  "type": "str",
                  "required": false,
                  "choices": [
                    "enabled",
                    "disabled"
                  ],
                  "suboptions": {}
                }
              }
            }
          }
        },
        "running_config": {
          "aliases": [],
          "description": "This option is used only with state I(parsed).\nThe value of this option should be the output received from the IOS device by executing the command B(show running-config | include logging).\nThe state I(parsed) reads the configuration from C(running_config) option and transforms it into Ansible structured data as per the resource module's argspec and the value is then returned in the I(parsed) key within the result.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The state the configuration should be left in",
          "default": "merged",
          "type": "str",
          "required": false,
          "choices": [
            "merged",
            "replaced",
            "overridden",
            "deleted",
            "gathered",
            "parsed",
            "rendered"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manages logging attributes of Cisco IOSXR network devices",
      "version_added": "2.4.0"
    },
    "examples": "\n# Using merged\n#-----------------\n# Before state\n#RP/0/0/CPU0:10#show running-config logging\n#Thu Feb  4 09:38:36.245 UTC\n#% No such configuration item(s)\n#RP/0/0/CPU0:10#\n#\n#\n- name: Merge the provided configuration with the existing running configuration\n  cisco.iosxr.iosxr_logging_global:\n         config:\n           buffered:\n             size: 2097152\n             severity: warnings\n           correlator:\n             buffer_size: 1024\n           events:\n             display_location: True\n           files:\n             - maxfilesize: '1024'\n               name: test\n               path: test\n               severity: info\n           hostnameprefix: test\n           hosts:\n             - host: 1.1.1.1\n               port: default\n               severity: critical\n               vrf: default\n           ipv4:\n             dscp: af11\n           localfilesize: 1024\n           monitor:\n             severity: errors\n           source_interfaces:\n             - interface: GigabitEthernet0/0/0/0\n               vrf: test\n           tls_servers:\n             - name: test\n               tls_hostname: test2\n               trustpoint: test2\n               vrf: test\n           trap:\n             severity: informational\n         state: merged\n#\n#\n# After state:\n#-------------------------------------------\n#RP/0/0/CPU0:10#show running-config logging\n# Tue Jul 20 18:09:18.491 UTC\n# logging tls-server test\n#  vrf test\n#  trustpoint test2\n#  tls-hostname test2\n# !\n# logging file test path test maxfilesize 1024 severity info\n# logging ipv4 dscp af11\n# logging trap informational\n# logging events display-location\n# logging monitor errors\n# logging buffered 2097152\n# logging buffered warnings\n# logging 1.1.1.1 vrf default severity critical port default\n# logging correlator buffer-size 1024\n# logging localfilesize 1024\n# logging source-interface GigabitEthernet0/0/0/0 vrf test\n# logging hostnameprefix test\n#------------------------------------------------\n#Module execution\n#\n#     \"after\": {\n#         \"buffered\": {\n#             \"severity\": \"errors\"\n#         },\n#         \"correlator\": {\n#             \"buffer_size\": 1024\n#         },\n#         \"files\": [\n#             {\n#                 \"maxfilesize\": \"1024\",\n#                 \"name\": \"test\",\n#                 \"path\": \"test1\",\n#                 \"severity\": \"info\"\n#             }\n#         ],\n#         \"hostnameprefix\": \"test1\",\n#         \"hosts\": [\n#             {\n#                 \"host\": \"1.1.1.3\",\n#                 \"port\": \"default\",\n#                 \"severity\": \"critical\",\n#                 \"vrf\": \"default\"\n#             }\n#         ],\n#         \"ipv6\": {\n#             \"dscp\": \"af11\"\n#         },\n#         \"localfilesize\": 1024,\n#         \"source_interfaces\": [\n#             {\n#                 \"interface\": \"GigabitEthernet0/0/0/0\",\n#                 \"vrf\": \"test1\"\n#             }\n#         ],\n#         \"tls_servers\": [\n#             {\n#                 \"name\": \"test\",\n#                 \"tls_hostname\": \"test2\",\n#                 \"trustpoint\": \"test\",\n#                 \"vrf\": \"test\"\n#             }\n#         ]\n#     },\n#     \"before\": {},\n#     \"changed\": true,\n#     \"commands\": [\n#         \"logging buffered errors\",\n#         \"logging correlator buffer-size 1024\",\n#         \"logging hostnameprefix test1\",\n#         \"logging ipv6 dscp af11\",\n#         \"logging localfilesize 1024\",\n#         \"logging trap disable\",\n#         \"logging monitor disable\",\n#         \"logging history disable\",\n#         \"logging console disable\",\n#         \"logging 1.1.1.3 vrf default severity critical port default\",\n#         \"logging file test path test1 maxfilesize 1024 severity info\",\n#         \"logging source-interface GigabitEthernet0/0/0/0 vrf test1\",\n#         \"logging tls-server test tls-hostname test2\",\n#         \"logging tls-server test trustpoint test\",\n#         \"logging tls-server test vrf test\"\n#     ],\n#     \"invocation\": {\n#         \"module_args\": {\n#             \"config\": {\n#                 \"archive\": null,\n#                 \"buffered\": {\n#                     \"discriminator\": null,\n#                     \"severity\": \"errors\",\n#                     \"size\": null\n#                 },\n#                 \"console\": {\n#                     \"discriminator\": null,\n#                     \"severity\": null,\n#                     \"state\": \"disabled\"\n#                 },\n#                 \"correlator\": {\n#                     \"buffer_size\": 1024,\n#                     \"rule_set\": null,\n#                     \"rules\": null\n#                 },\n#                 \"events\": null,\n#                 \"facility\": null,\n#                 \"files\": [\n#                     {\n#                         \"maxfilesize\": \"1024\",\n#                         \"name\": \"test\",\n#                         \"path\": \"test1\",\n#                         \"severity\": \"info\"\n#                     }\n#                 ],\n#                 \"format\": null,\n#                 \"history\": {\n#                     \"severity\": null,\n#                     \"size\": null,\n#                     \"state\": \"disabled\"\n#                 },\n#                 \"hostnameprefix\": \"test1\",\n#                 \"hosts\": [\n#                     {\n#                         \"host\": \"1.1.1.3\",\n#                         \"port\": \"default\",\n#                         \"severity\": \"critical\",\n#                         \"vrf\": \"default\"\n#                     }\n#                 ],\n#                 \"ipv4\": null,\n#                 \"ipv6\": {\n#                     \"dscp\": \"af11\",\n#                     \"precedence\": null\n#                 },\n#                 \"localfilesize\": 1024,\n#                 \"monitor\": {\n#                     \"discriminator\": null,\n#                     \"severity\": null,\n#                     \"state\": \"disabled\"\n#                 },\n#                 \"source_interfaces\": [\n#                     {\n#                         \"interface\": \"GigabitEthernet0/0/0/0\",\n#                         \"vrf\": \"test1\"\n#                     }\n#                 ],\n#                 \"suppress\": null,\n#                 \"tls_servers\": [\n#                     {\n#                         \"name\": \"test\",\n#                         \"severity\": null,\n#                         \"tls_hostname\": \"test2\",\n#                         \"trustpoint\": \"test\",\n#                         \"vrf\": \"test\"\n#                     }\n#                 ],\n#                 \"trap\": {\n#                     \"severity\": null,\n#                     \"state\": \"disabled\"\n#                 }\n#             },\n#             \"running_config\": null,\n#             \"state\": \"merged\"\n#         }\n#     }\n# }\n#\n# Using replaced:\n# -----------------------------------------------------------\n#\n#Before state\n#RP/0/0/CPU0:10#show running-config logging\n# Tue Jul 20 18:09:18.491 UTC\n# logging tls-server test\n#  vrf test\n#  trustpoint test2\n#  tls-hostname test2\n# !\n# logging file test path test maxfilesize 1024 severity info\n# logging ipv4 dscp af11\n# logging trap informational\n# logging events display-location\n# logging monitor errors\n# logging buffered 2097152\n# logging buffered warnings\n# logging 1.1.1.1 vrf default severity critical port default\n# logging correlator buffer-size 1024\n# logging localfilesize 1024\n# logging source-interface GigabitEthernet0/0/0/0 vrf test\n# logging hostnameprefix test\n#-----------------------------------------------------------\n#\n- name: Replace BGP configuration with provided configuration\n  cisco.iosxr.iosxr_logging_global:\n     state: replaced\n     config:\n           buffered:\n             severity: errors\n           correlator:\n             buffer_size: 1024\n           files:\n             - maxfilesize: '1024'\n               name: test\n               path: test1\n               severity: info\n           hostnameprefix: test1\n           hosts:\n             - host: 1.1.1.3\n               port: default\n               severity: critical\n               vrf: default\n           ipv6:\n             dscp: af11\n           localfilesize: 1024\n           monitor:\n             severity: errors\n           tls_servers:\n             - name: test\n               tls_hostname: test2\n               trustpoint: test\n               vrf: test\n           trap:\n             severity: critical\n#\n# After state:\n#RP/0/0/CPU0:10#show running-config logging\n# Tue Jul 20 18:31:51.709 UTC\n# logging tls-server test\n#  vrf test\n#  trustpoint test\n#  tls-hostname test2\n# !\n# logging file test path test1 maxfilesize 1024 severity info\n# logging ipv6 dscp af11\n# logging trap critical\n# logging monitor errors\n# logging buffered errors\n# logging 1.1.1.3 vrf default severity critical port default\n# logging correlator buffer-size 1024\n# logging localfilesize 1024\n# logging hostnameprefix test1\n#-----------------------------------------------------------------\n#\n# Module Execution:\n# \"after\": {\n#         \"buffered\": {\n#             \"severity\": \"errors\"\n#         },\n#         \"correlator\": {\n#             \"buffer_size\": 1024\n#         },\n#         \"files\": [\n#             {\n#                 \"maxfilesize\": \"1024\",\n#                 \"name\": \"test\",\n#                 \"path\": \"test1\",\n#                 \"severity\": \"info\"\n#             }\n#         ],\n#         \"hostnameprefix\": \"test1\",\n#         \"hosts\": [\n#             {\n#                 \"host\": \"1.1.1.3\",\n#                 \"port\": \"default\",\n#                 \"severity\": \"critical\",\n#                 \"vrf\": \"default\"\n#             }\n#         ],\n#         \"ipv6\": {\n#             \"dscp\": \"af11\"\n#         },\n#         \"localfilesize\": 1024,\n#         \"monitor\": {\n#             \"severity\": \"errors\"\n#         },\n#         \"tls_servers\": [\n#             {\n#                 \"name\": \"test\",\n#                 \"tls_hostname\": \"test2\",\n#                 \"trustpoint\": \"test\",\n#                 \"vrf\": \"test\"\n#             }\n#         ],\n#         \"trap\": {\n#             \"severity\": \"critical\"\n#         }\n#     },\n#     \"before\": {\n#         \"buffered\": {\n#             \"severity\": \"warnings\",\n#             \"size\": 2097152\n#         },\n#         \"correlator\": {\n#             \"buffer_size\": 1024\n#         },\n#         \"events\": {\n#             \"display_location\": true\n#         },\n#         \"files\": [\n#             {\n#                 \"maxfilesize\": \"1024\",\n#                 \"name\": \"test\",\n#                 \"path\": \"test\",\n#                 \"severity\": \"info\"\n#             }\n#         ],\n#         \"hostnameprefix\": \"test\",\n#         \"hosts\": [\n#             {\n#                 \"host\": \"1.1.1.1\",\n#                 \"port\": \"default\",\n#                 \"severity\": \"critical\",\n#                 \"vrf\": \"default\"\n#             }\n#         ],\n#         \"ipv4\": {\n#             \"dscp\": \"af11\"\n#         },\n#         \"localfilesize\": 1024,\n#         \"monitor\": {\n#             \"severity\": \"errors\"\n#         },\n#         \"source_interfaces\": [\n#             {\n#                 \"interface\": \"GigabitEthernet0/0/0/0\",\n#                 \"vrf\": \"test\"\n#             }\n#         ],\n#         \"tls_servers\": [\n#             {\n#                 \"name\": \"test\",\n#                 \"tls_hostname\": \"test2\",\n#                 \"trustpoint\": \"test2\",\n#                 \"vrf\": \"test\"\n#             }\n#         ],\n#         \"trap\": {\n#             \"severity\": \"informational\"\n#         }\n#     },\n#     \"changed\": true,\n#     \"commands\": [\n#         \"no logging buffered 2097152\",\n#         \"no logging events display-location\",\n#         \"no logging ipv4 dscp af11\",\n#         \"no logging 1.1.1.1 vrf default severity critical port default\",\n#         \"no logging source-interface GigabitEthernet0/0/0/0 vrf test\",\n#         \"logging buffered errors\",\n#         \"logging hostnameprefix test1\",\n#         \"logging ipv6 dscp af11\",\n#         \"logging trap critical\",\n#         \"logging 1.1.1.3 vrf default severity critical port default\",\n#         \"logging file test path test1 maxfilesize 1024 severity info\",\n#         \"logging tls-server test trustpoint test\"\n#     ],\n#\n#\n#\n# Using deleted:\n# -----------------------------------------------------------\n# Before state:\n#RP/0/0/CPU0:10#show running-config logging\n# Tue Jul 20 18:09:18.491 UTC\n# logging tls-server test\n#  vrf test\n#  trustpoint test2\n#  tls-hostname test2\n# !\n# logging file test path test maxfilesize 1024 severity info\n# logging ipv4 dscp af11\n# logging trap informational\n# logging events display-location\n# logging monitor errors\n# logging buffered 2097152\n# logging buffered warnings\n# logging 1.1.1.1 vrf default severity critical port default\n# logging correlator buffer-size 1024\n# logging localfilesize 1024\n# logging source-interface GigabitEthernet0/0/0/0 vrf test\n# logging hostnameprefix test\n#\n#-----------------------------------------------------------\n- name: Delete given logging_global configuration\n  cisco.iosxr.iosxr_logging_global:\n     state: deleted\n#\n# After state:\n#RP/0/0/CPU0:10#show running-config\n#\n#-------------------------------------------------------------\n# Module Execution:\n#\n# \"after\": {},\n#     \"before\": {\n#         \"buffered\": {\n#             \"severity\": \"warnings\",\n#             \"size\": 2097152\n#         },\n#         \"correlator\": {\n#             \"buffer_size\": 1024\n#         },\n#         \"events\": {\n#             \"display_location\": true\n#         },\n#         \"files\": [\n#             {\n#                 \"maxfilesize\": \"1024\",\n#                 \"name\": \"test\",\n#                 \"path\": \"test\",\n#                 \"severity\": \"info\"\n#             }\n#         ],\n#         \"hostnameprefix\": \"test\",\n#         \"hosts\": [\n#             {\n#                 \"host\": \"1.1.1.1\",\n#                 \"port\": \"default\",\n#                 \"severity\": \"critical\",\n#                 \"vrf\": \"default\"\n#             }\n#         ],\n#         \"ipv4\": {\n#             \"dscp\": \"af11\"\n#         },\n#         \"localfilesize\": 1024,\n#         \"monitor\": {\n#             \"severity\": \"errors\"\n#         },\n#         \"source_interfaces\": [\n#             {\n#                 \"interface\": \"GigabitEthernet0/0/0/0\",\n#                 \"vrf\": \"test\"\n#             }\n#         ],\n#         \"tls_servers\": [\n#             {\n#                 \"name\": \"test\",\n#                 \"tls_hostname\": \"test2\",\n#                 \"trustpoint\": \"test2\",\n#                 \"vrf\": \"test\"\n#             }\n#         ],\n#         \"trap\": {\n#             \"severity\": \"informational\"\n#         }\n#     },\n#     \"changed\": true,\n#     \"commands\": [\n#         \"no logging buffered 2097152\",\n#         \"no logging buffered warnings\",\n#         \"no logging correlator buffer-size 1024\",\n#         \"no logging events display-location\",\n#         \"no logging hostnameprefix test\",\n#         \"no logging ipv4 dscp af11\",\n#         \"no logging localfilesize 1024\",\n#         \"no logging monitor errors\",\n#         \"no logging trap informational\",\n#         \"no logging 1.1.1.1 vrf default severity critical port default\",\n#         \"no logging file test path test maxfilesize 1024 severity info\",\n#         \"no logging source-interface GigabitEthernet0/0/0/0 vrf test\",\n#         \"no logging tls-server test\"\n#     ],\n#     \"invocation\": {\n#         \"module_args\": {\n#             \"config\": null,\n#             \"running_config\": null,\n#             \"state\": \"deleted\"\n#         }\n#     }\n#\n#\n#\n# using gathered:\n# ------------------------------------------------------------\n# Before state:\n#RP/0/0/CPU0:10#show running-config logging\n# Tue Jul 20 18:09:18.491 UTC\n# logging tls-server test\n#  vrf test\n#  trustpoint test2\n#  tls-hostname test2\n# !\n# logging file test path test maxfilesize 1024 severity info\n# logging ipv4 dscp af11\n# logging trap informational\n# logging events display-location\n# logging monitor errors\n# logging buffered 2097152\n# logging buffered warnings\n# logging 1.1.1.1 vrf default severity critical port default\n# logging correlator buffer-size 1024\n# logging localfilesize 1024\n# logging source-interface GigabitEthernet0/0/0/0 vrf test\n# logging hostnameprefix test\n#\n#\n- name: Gather iosxr_logging_global facts using gathered state\n  cisco.iosxr.iosxr_logging_global:\n     state: gathered\n#\n#-------------------------------------------------------------\n# Module Execution:\n#\n# \"changed\": false,\n# \"gathered\": {\n#         \"buffered\": {\n#             \"severity\": \"warnings\",\n#             \"size\": 2097152\n#         },\n#         \"correlator\": {\n#             \"buffer_size\": 1024\n#         },\n#         \"events\": {\n#             \"display_location\": true\n#         },\n#         \"files\": [\n#             {\n#                 \"maxfilesize\": \"1024\",\n#                 \"name\": \"test\",\n#                 \"path\": \"test\",\n#                 \"severity\": \"info\"\n#             }\n#         ],\n#         \"hostnameprefix\": \"test\",\n#         \"hosts\": [\n#             {\n#                 \"host\": \"1.1.1.1\",\n#                 \"port\": \"default\",\n#                 \"severity\": \"critical\",\n#                 \"vrf\": \"default\"\n#             }\n#         ],\n#         \"ipv4\": {\n#             \"dscp\": \"af11\"\n#         },\n#         \"localfilesize\": 1024,\n#         \"monitor\": {\n#             \"severity\": \"errors\"\n#         },\n#         \"source_interfaces\": [\n#             {\n#                 \"interface\": \"GigabitEthernet0/0/0/0\",\n#                 \"vrf\": \"test\"\n#             }\n#         ],\n#         \"tls_servers\": [\n#             {\n#                 \"name\": \"test\",\n#                 \"tls_hostname\": \"test2\",\n#                 \"trustpoint\": \"test2\",\n#                 \"vrf\": \"test\"\n#             }\n#         ],\n#         \"trap\": {\n#             \"severity\": \"informational\"\n#         }\n#     },\n#     \"invocation\": {\n#         \"module_args\": {\n#             \"config\": null,\n#             \"running_config\": null,\n#             \"state\": \"gathered\"\n#         }\n# }\n#\n#\n# Using parsed:\n#---------------------------------------------------------------\n#\n# parsed.cfg\n#\n# logging tls-server test\n#  vrf test\n#  trustpoint test2\n#  tls-hostname test2\n# !\n# logging file test path test maxfilesize 1024 severity info\n# logging ipv4 dscp af11\n# logging trap informational\n# logging events display-location\n# logging monitor errors\n# logging buffered 2097152\n# logging buffered warnings\n# logging 1.1.1.1 vrf default severity critical port default\n# logging correlator buffer-size 1024\n# logging localfilesize 1024\n# logging source-interface GigabitEthernet0/0/0/0 vrf test\n# logging hostnameprefix test\n#\n#\n- name: Parse externally provided Logging global config to agnostic model\n  cisco.iosxr.iosxr_logging_global:\n     running_config: \"{{ lookup('file', './fixtures/parsed.cfg') }}\"\n     state: parsed\n#----------------------------------------------------------------\n# Module execution:\n# \"changed\": false,\n# \"parsed\": {\n#         \"buffered\": {\n#             \"severity\": \"warnings\",\n#             \"size\": 2097152\n#         },\n#         \"correlator\": {\n#             \"buffer_size\": 1024\n#         },\n#         \"events\": {\n#             \"display_location\": true\n#         },\n#         \"files\": [\n#             {\n#                 \"maxfilesize\": \"1024\",\n#                 \"name\": \"test\",\n#                 \"path\": \"test\",\n#                 \"severity\": \"info\"\n#             }\n#         ],\n#         \"hostnameprefix\": \"test\",\n#         \"hosts\": [\n#             {\n#                 \"host\": \"1.1.1.1\",\n#                 \"port\": \"default\",\n#                 \"severity\": \"critical\",\n#                 \"vrf\": \"default\"\n#             }\n#         ],\n#         \"ipv4\": {\n#             \"dscp\": \"af11\"\n#         },\n#         \"localfilesize\": 1024,\n#         \"monitor\": {\n#             \"severity\": \"errors\"\n#         },\n#         \"source_interfaces\": [\n#             {\n#                 \"interface\": \"GigabitEthernet0/0/0/0\",\n#                 \"vrf\": \"test\"\n#             }\n#         ],\n#         \"tls_servers\": [\n#             {\n#                 \"name\": \"test\",\n#                 \"tls_hostname\": \"test2\",\n#                 \"trustpoint\": \"test2\",\n#                 \"vrf\": \"test\"\n#             }\n#         ],\n#         \"trap\": {\n#             \"severity\": \"informational\"\n#         }\n#     }\n#\n#\n# Using rendered:\n# ----------------------------------------------------------------------------\n- name: Render platform specific configuration lines with state rendered (without connecting to the device)\n  cisco.iosxr.iosxr_logging_global:\n     state: rendered\n     config:\n       buffered:\n         size: 2097152\n         severity: warnings\n       correlator:\n         buffer_size: 1024\n       events:\n         display_location: True\n       files:\n         - maxfilesize: '1024'\n           name: test\n           path: test\n           severity: info\n       hostnameprefix: test\n       hosts:\n         - host: 1.1.1.1\n           port: default\n           severity: critical\n           vrf: default\n       ipv4:\n         dscp: af11\n       localfilesize: 1024\n       monitor:\n         severity: errors\n       source_interfaces:\n         - interface: GigabitEthernet0/0/0/0\n           vrf: test\n       tls_servers:\n         - name: test\n           tls_hostname: test2\n           trustpoint: test2\n           vrf: test\n       trap:\n         severity: informational\n#----------------------------------------------------------------\n# Module Execution:\n# \"rendered\": [\n#         \"logging buffered errors\",\n#         \"logging correlator buffer-size 1024\",\n#         \"logging hostnameprefix test1\",\n#         \"logging ipv6 dscp af11\",\n#         \"logging localfilesize 1024\",\n#         \"logging trap disable\",\n#         \"logging monitor disable\",\n#         \"logging history disable\",\n#         \"logging console disable\",\n#         \"logging 1.1.1.3 vrf default severity critical port default\",\n#         \"logging file test path test1 maxfilesize 1024 severity info\",\n#         \"logging source-interface GigabitEthernet0/0/0/0 vrf test1\",\n#         \"logging tls-server test tls-hostname test2\",\n#         \"logging tls-server test trustpoint test\",\n#         \"logging tls-server test vrf test\"\n#     ]\n#\n# Using overridden:\n# ---------------------------------------------------------------------------------\n# Before state:\n#RP/0/0/CPU0:10#show running-config logging\n# Tue Jul 20 18:09:18.491 UTC\n# logging tls-server test\n#  vrf test\n#  trustpoint test2\n#  tls-hostname test2\n# !\n# logging file test path test maxfilesize 1024 severity info\n# logging ipv4 dscp af11\n# logging trap informational\n# logging events display-location\n# logging monitor errors\n# logging buffered 2097152\n# logging buffered warnings\n# logging 1.1.1.1 vrf default severity critical port default\n# logging correlator buffer-size 1024\n# logging localfilesize 1024\n# logging source-interface GigabitEthernet0/0/0/0 vrf test\n# logging hostnameprefix test\n#\n#-----------------------------------------------------------\n#\n- name: Overridde logging global configuration with provided configuration\n  cisco.iosxr.iosxr_logging_global:\n     state: overridden\n     config:\n           buffered:\n             severity: errors\n           correlator:\n             buffer_size: 1024\n           files:\n             - maxfilesize: '1024'\n               name: test\n               path: test1\n               severity: info\n           hostnameprefix: test1\n           hosts:\n             - host: 1.1.1.3\n               port: default\n               severity: critical\n               vrf: default\n           ipv6:\n             dscp: af11\n           localfilesize: 1024\n           monitor:\n             severity: errors\n           tls_servers:\n             - name: test\n               tls_hostname: test2\n               trustpoint: test\n               vrf: test\n           trap:\n             severity: critical\n#\n# After state:\n#RP/0/0/CPU0:10#show running-config logging\n# Tue Jul 20 18:31:51.709 UTC\n# logging tls-server test\n#  vrf test\n#  trustpoint test\n#  tls-hostname test2\n# !\n# logging file test path test1 maxfilesize 1024 severity info\n# logging ipv6 dscp af11\n# logging trap critical\n# logging monitor errors\n# logging buffered errors\n# logging 1.1.1.3 vrf default severity critical port default\n# logging correlator buffer-size 1024\n# logging localfilesize 1024\n# logging hostnameprefix test1\n#-----------------------------------------------------------------\n#\n# Module Execution:\n# \"after\": {\n#         \"buffered\": {\n#             \"severity\": \"errors\"\n#         },\n#         \"correlator\": {\n#             \"buffer_size\": 1024\n#         },\n#         \"files\": [\n#             {\n#                 \"maxfilesize\": \"1024\",\n#                 \"name\": \"test\",\n#                 \"path\": \"test1\",\n#                 \"severity\": \"info\"\n#             }\n#         ],\n#         \"hostnameprefix\": \"test1\",\n#         \"hosts\": [\n#             {\n#                 \"host\": \"1.1.1.3\",\n#                 \"port\": \"default\",\n#                 \"severity\": \"critical\",\n#                 \"vrf\": \"default\"\n#             }\n#         ],\n#         \"ipv6\": {\n#             \"dscp\": \"af11\"\n#         },\n#         \"localfilesize\": 1024,\n#         \"monitor\": {\n#             \"severity\": \"errors\"\n#         },\n#         \"tls_servers\": [\n#             {\n#                 \"name\": \"test\",\n#                 \"tls_hostname\": \"test2\",\n#                 \"trustpoint\": \"test\",\n#                 \"vrf\": \"test\"\n#             }\n#         ],\n#         \"trap\": {\n#             \"severity\": \"critical\"\n#         }\n#     },\n#     \"before\": {\n#         \"buffered\": {\n#             \"severity\": \"warnings\",\n#             \"size\": 2097152\n#         },\n#         \"correlator\": {\n#             \"buffer_size\": 1024\n#         },\n#         \"events\": {\n#             \"display_location\": true\n#         },\n#         \"files\": [\n#             {\n#                 \"maxfilesize\": \"1024\",\n#                 \"name\": \"test\",\n#                 \"path\": \"test\",\n#                 \"severity\": \"info\"\n#             }\n#         ],\n#         \"hostnameprefix\": \"test\",\n#         \"hosts\": [\n#             {\n#                 \"host\": \"1.1.1.1\",\n#                 \"port\": \"default\",\n#                 \"severity\": \"critical\",\n#                 \"vrf\": \"default\"\n#             }\n#         ],\n#         \"ipv4\": {\n#             \"dscp\": \"af11\"\n#         },\n#         \"localfilesize\": 1024,\n#         \"monitor\": {\n#             \"severity\": \"errors\"\n#         },\n#         \"source_interfaces\": [\n#             {\n#                 \"interface\": \"GigabitEthernet0/0/0/0\",\n#                 \"vrf\": \"test\"\n#             }\n#         ],\n#         \"tls_servers\": [\n#             {\n#                 \"name\": \"test\",\n#                 \"tls_hostname\": \"test2\",\n#                 \"trustpoint\": \"test2\",\n#                 \"vrf\": \"test\"\n#             }\n#         ],\n#         \"trap\": {\n#             \"severity\": \"informational\"\n#         }\n#     },\n#     \"changed\": true,\n#     \"commands\": [\n#         \"no logging buffered 2097152\",\n#         \"no logging events display-location\",\n#         \"no logging ipv4 dscp af11\",\n#         \"no logging 1.1.1.1 vrf default severity critical port default\",\n#         \"no logging source-interface GigabitEthernet0/0/0/0 vrf test\",\n#         \"logging buffered errors\",\n#         \"logging hostnameprefix test1\",\n#         \"logging ipv6 dscp af11\",\n#         \"logging trap critical\",\n#         \"logging 1.1.1.3 vrf default severity critical port default\",\n#         \"logging file test path test1 maxfilesize 1024 severity info\",\n#         \"logging tls-server test trustpoint test\"\n#     ],\n#\n"
  },
  "cisco.iosxr.iosxr_netconf": {
    "doc": {
      "description": "This module provides an abstraction that enables and configures the netconf system service running on Cisco IOS-XR Software. This module can be used to easily enable the Netconf API. Netconf provides a programmatic interface for working with configuration and state resources as defined in RFC 6242.",
      "has_action": true,
      "notes": "This module works with connection C(network_cli). See L(the IOS-XR Platform Options,../network/user_guide/platform_iosxr.html).\nFor more information on using Ansible to manage network devices see the :ref:`Ansible Network Guide <network_guide>`\nFor more information on using Ansible to manage Cisco devices see the `Cisco integration page <https://www.ansible.com/integrations/networks/cisco>`_.",
      "options": {
        "netconf_port": {
          "aliases": [
            "listens_on"
          ],
          "description": "This argument specifies the port the netconf service should listen on for SSH connections.  The default port as defined in RFC 6242 is 830.",
          "default": "830",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "netconf_vrf": {
          "aliases": [
            "vrf"
          ],
          "description": "netconf vrf name",
          "default": "default",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "B(Deprecated)\nStarting with Ansible 2.5 we recommend using C(connection: network_cli).\nFor more information please see the L(Network Guide, ../network/getting_started/network_differences.html#multiple-communication-protocols).\nHORIZONTALLINE\nA dict object containing connection details.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "host": {
              "aliases": [],
              "description": "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [],
              "description": "Specifies the password to use to authenticate the connection to the remote device.   This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "port": {
              "aliases": [],
              "description": "Specifies the port to use when building the connection to the remote device.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "ssh_keyfile": {
              "aliases": [],
              "description": "Specifies the SSH key to use to authenticate the connection to the remote device.   This value is the path to the key used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead.",
              "type": "path",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Specifies the type of connection based transport.",
              "default": "cli",
              "type": "str",
              "required": false,
              "choices": [
                "cli",
                "netconf"
              ],
              "suboptions": {}
            },
            "username": {
              "aliases": [],
              "description": "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "Specifies the state of the C(iosxr_netconf) resource on the remote device.  If the I(state) argument is set to I(present) the netconf service will be configured.  If the I(state) argument is set to I(absent) the netconf service will be removed from the configuration.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Configures NetConf sub-system service on Cisco IOS-XR devices",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: enable netconf service on port 830\n  cisco.iosxr.iosxr_netconf:\n    listens_on: 830\n    state: present\n\n- name: disable netconf service\n  cisco.iosxr.iosxr_netconf:\n    state: absent\n"
  },
  "cisco.iosxr.iosxr_ntp_global": {
    "doc": {
      "description": "This module configures and manages the attributes of  ntp on Cisco IOSXR platforms.",
      "has_action": true,
      "notes": "Tested against IOSXR 7.0.2.\nThis module works with connection C(network_cli).",
      "options": {
        "config": {
          "aliases": [],
          "description": "A dictionary of ntp options",
          "type": "dict",
          "required": false,
          "suboptions": {
            "access_group": {
              "aliases": [],
              "description": "Control NTP access",
              "type": "dict",
              "required": false,
              "suboptions": {
                "ipv4": {
                  "aliases": [],
                  "description": "Configure IPv4 access",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "peer": {
                      "aliases": [],
                      "description": "Provide full access",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "query_only": {
                      "aliases": [],
                      "description": "Allow only control queries.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "serve": {
                      "aliases": [],
                      "description": "Provide server and query access.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "serve_only": {
                      "aliases": [],
                      "description": "Provide only server access.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "ipv6": {
                  "aliases": [],
                  "description": "Configure IPv6 access",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "peer": {
                      "aliases": [],
                      "description": "Provide full access",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "query_only": {
                      "aliases": [],
                      "description": "Allow only control queries.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "serve": {
                      "aliases": [],
                      "description": "Provide server and query access.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "serve_only": {
                      "aliases": [],
                      "description": "Provide only server access.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "vrfs": {
                  "aliases": [],
                  "description": "Specify non-default VRF.",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "ipv4": {
                      "aliases": [],
                      "description": "Configure IPv4 access",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "peer": {
                          "aliases": [],
                          "description": "Provide full access",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "query_only": {
                          "aliases": [],
                          "description": "Allow only control queries.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "serve": {
                          "aliases": [],
                          "description": "Provide server and query access.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "serve_only": {
                          "aliases": [],
                          "description": "Provide only server access.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "ipv6": {
                      "aliases": [],
                      "description": "Configure IPv6 access",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "peer": {
                          "aliases": [],
                          "description": "Provide full access",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "query_only": {
                          "aliases": [],
                          "description": "Allow only control queries.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "serve": {
                          "aliases": [],
                          "description": "Provide server and query access.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "serve_only": {
                          "aliases": [],
                          "description": "Provide only server access.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "name": {
                      "aliases": [],
                      "description": "Specify non-default VRF.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                }
              }
            },
            "authenticate": {
              "aliases": [],
              "description": "Authenticate time sources",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "authentication_keys": {
              "aliases": [],
              "description": "Authentication key for trusted time sources",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "encryption": {
                  "aliases": [],
                  "description": "Type of key encrypted or clear-text.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "id": {
                  "aliases": [],
                  "description": "<1-65535>  Key number",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "key": {
                  "aliases": [],
                  "description": "Authentication key.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "broadcastdelay": {
              "aliases": [],
              "description": "Estimated round-trip delay in microseconds.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "drift": {
              "aliases": [],
              "description": "Drift(cisco-support)",
              "type": "dict",
              "required": false,
              "suboptions": {
                "aging_time": {
                  "aliases": [],
                  "description": "Aging time in hours.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "file": {
                  "aliases": [],
                  "description": "File for drift values.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "interfaces": {
              "aliases": [],
              "description": "Configure NTP on an interface.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "broadcast_client": {
                  "aliases": [],
                  "description": "Listen to NTP broadcasts",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "broadcast_destination": {
                  "aliases": [],
                  "description": "Configure broadcast destination address.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "broadcast_key": {
                  "aliases": [],
                  "description": "Broadcast key number.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "broadcast_version": {
                  "aliases": [],
                  "description": "<2-4>  NTP version number.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "multicast_client": {
                  "aliases": [],
                  "description": "Configure multicast client",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "multicast_destination": {
                  "aliases": [],
                  "description": "Configure multicast destination",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "multicast_key": {
                  "aliases": [],
                  "description": "Configure multicast authentication key.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "multicast_ttl": {
                  "aliases": [],
                  "description": "Configure TTL to use.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "multicast_version": {
                  "aliases": [],
                  "description": "<2-4>  NTP version number.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "name": {
                  "aliases": [],
                  "description": "Name of the interface.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "vrf": {
                  "aliases": [],
                  "description": "Name of the vrf.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "ipv4": {
              "aliases": [],
              "description": "Mark the dscp/precedence bit for ipv4 packets.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "dscp": {
                  "aliases": [],
                  "description": "Set IP DSCP (DiffServ CodePoint).Please refer vendor document for valid entries.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "precedence": {
                  "aliases": [],
                  "description": "Set precedence Please refer vendor document for valid entries.",
                  "type": "str",
                  "required": false,
                  "choices": [
                    "critical",
                    "flash",
                    "flash-override",
                    "immediate",
                    "internet",
                    "network",
                    "priority",
                    "routine"
                  ],
                  "suboptions": {}
                }
              }
            },
            "ipv6": {
              "aliases": [],
              "description": "Mark the dscp/precedence bit for ipv4 packets.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "dscp": {
                  "aliases": [],
                  "description": "Set IP DSCP (DiffServ CodePoint).Please refer vendor document for valid entries.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "precedence": {
                  "aliases": [],
                  "description": "Set precedence Please refer vendor document for valid entries.",
                  "type": "str",
                  "required": false,
                  "choices": [
                    "critical",
                    "flash",
                    "flash-override",
                    "immediate",
                    "internet",
                    "network",
                    "priority",
                    "routine"
                  ],
                  "suboptions": {}
                }
              }
            },
            "log_internal_sync": {
              "aliases": [],
              "description": "Logs internal synchronization changes.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "master": {
              "aliases": [],
              "description": "Act as NTP master clock",
              "type": "dict",
              "required": false,
              "suboptions": {
                "stratum": {
                  "aliases": [],
                  "description": "Use NTP as clock source with stratum number <1-15>",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "max_associations": {
              "aliases": [],
              "description": "<0-4294967295>  Number of associations.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "passive": {
              "aliases": [],
              "description": "Enable the passive associations.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "peers": {
              "aliases": [],
              "description": "Configure NTP peer.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "burst": {
                  "aliases": [],
                  "description": "Use burst mode.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "iburst": {
                  "aliases": [],
                  "description": "Use initial burst mode.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "key_id": {
                  "aliases": [],
                  "description": "SConfigure peer authentication key",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "maxpoll": {
                  "aliases": [],
                  "description": "configure Maximum poll interval.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "minpoll": {
                  "aliases": [],
                  "description": "configure Minimum poll interval.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "peer": {
                  "aliases": [],
                  "description": "Hostname or A.B.C.D or A:B:C:D:E:F:G:H.",
                  "type": "str",
                  "required": true,
                  "suboptions": {}
                },
                "prefer": {
                  "aliases": [],
                  "description": "Prefer this peer when possible",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "source": {
                  "aliases": [],
                  "description": "Interface for source address.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "version": {
                  "aliases": [],
                  "description": "NTP version.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "vrf": {
                  "aliases": [],
                  "description": "vrf name.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "servers": {
              "aliases": [],
              "description": "Configure NTP server.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "burst": {
                  "aliases": [],
                  "description": "Use burst mode.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "iburst": {
                  "aliases": [],
                  "description": "Use initial burst mode.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "key_id": {
                  "aliases": [],
                  "description": "SConfigure peer authentication key",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "maxpoll": {
                  "aliases": [],
                  "description": "configure Maximum poll interval.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "minpoll": {
                  "aliases": [],
                  "description": "configure Minimum poll interval.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "prefer": {
                  "aliases": [],
                  "description": "Prefer this peer when possible",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "server": {
                  "aliases": [],
                  "description": "Hostname or A.B.C.D or A:B:C:D:E:F:G:H.",
                  "type": "str",
                  "required": true,
                  "suboptions": {}
                },
                "source": {
                  "aliases": [],
                  "description": "Interface for source address.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "version": {
                  "aliases": [],
                  "description": "NTP version.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "vrf": {
                  "aliases": [],
                  "description": "vrf name.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "source_interface": {
              "aliases": [],
              "description": "Configure default interface.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "source_vrfs": {
              "aliases": [],
              "description": "Configure default interface.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "name": {
                  "aliases": [],
                  "description": "Name of source interface.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "vrf": {
                  "aliases": [],
                  "description": "vrf name.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "trusted_keys": {
              "aliases": [],
              "description": "list of Key numbers for trusted time sources.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "key_id": {
                  "aliases": [],
                  "description": "Key numbers for trusted time sources.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "update_calendar": {
              "aliases": [],
              "description": "Periodically update calendar with NTP time.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "running_config": {
          "aliases": [],
          "description": "This option is used only with state I(parsed).\nThe value of this option should be the output received from the IOSXR device by executing the command B(show running-config ntp).\nThe state I(parsed) reads the configuration from C(running_config) option and transforms it into Ansible structured data as per the resource module's argspec and the value is then returned in the I(parsed) key within the result.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The state the configuration should be left in.",
          "default": "merged",
          "type": "str",
          "required": false,
          "choices": [
            "deleted",
            "merged",
            "overridden",
            "replaced",
            "gathered",
            "rendered",
            "parsed"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manages ntp resource module",
      "version_added": "2.5.0"
    },
    "examples": "\n# Using state: merged\n# Before state:\n# -------------\n# RP/0/0/CPU0:10#show running-config ntp\n# --------------------- EMPTY -----------------\n# Merged play:\n# ------------\n- name: Merge the provided configuration with the existing running configuration\n  cisco.iosxr.iosxr_ntp_global:\n      config:\n          access_group:\n            ipv4:\n              peer: PeerAcl1\n              query_only: QueryOnlyAcl1\n              serve: ServeAcl1\n              serve_only: ServeOnlyAcl1\n            vrfs:\n              - ipv4:\n                  peer: PeerAcl3\n                  serve: ServeAcl2\n                name: siteA\n          authenticate: true\n          broadcastdelay: 1\n          drift:\n            aging_time: 0\n            file: apphost\n          interfaces:\n            - name: GigabitEthernet0/0/0/0\n              multicast_client: 224.0.0.8\n              multicast_destination: 224.0.0.8\n              broadcast_client: true\n          ipv4:\n            dscp: af11\n          ipv6:\n            precedence: routine\n          log_internal_sync: true\n          master: 1\n          max_associations: 10\n          passive: true\n          peers:\n            - iburst: true\n              peer: 192.0.2.1\n              vrf: siteC\n          servers:\n            - burst: true\n              server: 192.0.2.2\n              vrf: siteD\n          source: GigabitEthernet0/0/0/0\n          source_vrfs:\n            - name: GigabitEthernet0/0/0/0\n              vrf: siteE\n          trusted_keys:\n            - key_id: 1\n          update_calendar: true\n# Commands Fired:\n# ------------\n# \"commands\": [\n#         \"ntp peer vrf siteC 192.0.2.1 iburst \",\n#         \"ntp server vrf siteD 192.0.2.2 burst \",\n#         \"ntp trusted-key 1\",\n#         \"ntp interface GigabitEthernet0/0/0/0 broadcast client\",\n#         \"ntp interface GigabitEthernet0/0/0/0 multicast destination 224.0.0.8\",\n#         \"ntp interface GigabitEthernet0/0/0/0 multicast client 224.0.0.8\",\n#         \"ntp vrf siteE source GigabitEthernet0/0/0/0\",\n#         \"ntp access-group vrf siteA ipv4 serve ServeAcl2\",\n#         \"ntp access-group vrf siteA ipv4 peer PeerAcl3\",\n#         \"ntp access-group ipv4 peer PeerAcl1\",\n#         \"ntp access-group ipv4 serve ServeAcl1\",\n#         \"ntp access-group ipv4 serve-only ServeOnlyAcl1\",\n#         \"ntp access-group ipv4 query-only QueryOnlyAcl1\",\n#         \"ntp authenticate\",\n#         \"ntp log-internal-sync\",\n#         \"ntp broadcastdelay 1\",\n#         \"ntp drift aging time 0\",\n#         \"ntp drift file apphost\",\n#         \"ntp ipv4 dscp af11\",\n#         \"ntp ipv6 precedence routine\",\n#         \"ntp max-associations 10\",\n#         \"ntp master 1\",\n#         \"ntp passive\",\n#         \"ntp update-calendar\",\n#         \"ntp source GigabitEthernet0/0/0/0\"\n#     ],\n# After state:\n# ------------\n# RP/0/0/CPU0:10#show running-config ntp\n# ntp\n#  max-associations 10\n#  interface GigabitEthernet0/0/0/0\n#   broadcast client\n#   multicast client 224.0.0.8\n#   multicast destination 224.0.0.8\n#  !\n#  authenticate\n#  trusted-key 1\n#  ipv4 dscp af11\n#  ipv6 precedence routine\n#  peer vrf siteC 192.0.2.1 iburst\n#  server vrf siteD 192.0.2.2 burst\n#  drift file apphost\n#  drift aging time 0\n#  master 1\n#  access-group vrf siteA ipv4 peer PeerAcl3\n#  access-group vrf siteA ipv4 serve ServeAcl2\n#  access-group ipv4 peer PeerAcl1\n#  access-group ipv4 serve ServeAcl1\n#  access-group ipv4 serve-only ServeOnlyAcl1\n#  access-group ipv4 query-only QueryOnlyAcl1\n#  source vrf siteE GigabitEthernet0/0/0/0\n#  source GigabitEthernet0/0/0/0\n#  passive\n#  broadcastdelay 1\n#  update-calendar\n#  log-internal-sync\n# !\n# Using state: deleted\n# Before state:\n# -------------\n# RP/0/0/CPU0:10#show running-config ntp\n# ntp\n#  max-associations 10\n#  interface GigabitEthernet0/0/0/0\n#   broadcast client\n#   multicast client 224.0.0.8\n#   multicast destination 224.0.0.8\n#  !\n#  authenticate\n#  trusted-key 1\n#  ipv4 dscp af11\n#  ipv6 precedence routine\n#  peer vrf siteC 192.0.2.1 iburst\n#  server vrf siteD 192.0.2.2 burst\n#  drift file apphost\n#  drift aging time 0\n#  master 1\n#  access-group vrf siteA ipv4 peer PeerAcl3\n#  access-group vrf siteA ipv4 serve ServeAcl2\n#  access-group ipv4 peer PeerAcl1\n#  access-group ipv4 serve ServeAcl1\n#  access-group ipv4 serve-only ServeOnlyAcl1\n#  access-group ipv4 query-only QueryOnlyAcl1\n#  source vrf siteE GigabitEthernet0/0/0/0\n#  source GigabitEthernet0/0/0/0\n#  passive\n#  broadcastdelay 1\n#  update-calendar\n#  log-internal-sync\n# !\n# Deleted play:\n# -------------\n- name: Remove all existing configuration\n  cisco.iosxr.iosxr_ntp_global:\n    state: deleted\n# Commands Fired:\n# ---------------\n# \"commands\": [\n#         \"no ntp peer vrf siteC 192.0.2.1 iburst \",\n#         \"no ntp server vrf siteD 192.0.2.2 burst \",\n#         \"no ntp trusted-key 1\",\n#         \"no ntp interface GigabitEthernet0/0/0/0\",\n#         \"no ntp vrf siteE source GigabitEthernet0/0/0/0\",\n#         \"no ntp access-group vrf siteA ipv4 serve ServeAcl2\",\n#         \"no ntp access-group vrf siteA ipv4 peer PeerAcl3\",\n#         \"no ntp access-group ipv4 peer PeerAcl1\",\n#         \"no ntp access-group ipv4 serve ServeAcl1\",\n#         \"no ntp access-group ipv4 serve-only ServeOnlyAcl1\",\n#         \"no ntp access-group ipv4 query-only QueryOnlyAcl1\",\n#         \"no ntp authenticate\",\n#         \"no ntp log-internal-sync\",\n#         \"no ntp broadcastdelay 1\",\n#         \"no ntp drift aging time 0\",\n#         \"no ntp drift file apphost\",\n#         \"no ntp ipv4 dscp af11\",\n#         \"no ntp ipv6 precedence routine\",\n#         \"no ntp max-associations 10\",\n#         \"no ntp master 1\",\n#         \"no ntp passive\",\n#         \"no ntp update-calendar\",\n#         \"no ntp source GigabitEthernet0/0/0/0\"\n#     ],\n# After state:\n# ------------\n# RP/0/0/CPU0:10#show running-config ntp\n# --------------------- EMPTY -----------------\n# Using state: overridden\n# Before state:\n# -------------\n# RP/0/0/CPU0:10#show running-config ntp\n# ntp\n#  max-associations 10\n#  interface GigabitEthernet0/0/0/0\n#   broadcast client\n#   multicast client 224.0.0.8\n#   multicast destination 224.0.0.8\n#  !\n#  authenticate\n#  trusted-key 1\n#  ipv4 dscp af11\n#  ipv6 precedence routine\n#  peer vrf siteC 192.0.2.1 iburst\n#  server vrf siteD 192.0.2.2 burst\n#  drift file apphost\n#  drift aging time 0\n#  master 1\n#  access-group vrf siteA ipv4 peer PeerAcl3\n#  access-group vrf siteA ipv4 serve ServeAcl2\n#  access-group ipv4 peer PeerAcl1\n#  access-group ipv4 serve ServeAcl1\n#  access-group ipv4 serve-only ServeOnlyAcl1\n#  access-group ipv4 query-only QueryOnlyAcl1\n#  source vrf siteE GigabitEthernet0/0/0/0\n#  source GigabitEthernet0/0/0/0\n#  passive\n#  broadcastdelay 1\n#  update-calendar\n#  log-internal-sync\n# !\n# Overridden play:\n# ----------------\n- name: Override BGP configuration with provided configuration\n  cisco.iosxr.iosxr_ntp_global:\n        state: overridden\n        config:\n          access_group:\n            ipv4:\n              peer: PeerAcl1\n              query_only: QueryOnlyAcl1\n              serve: ServeAcl4\n              serve_only: ServeOnlyAcl1\n            vrfs:\n              - ipv4:\n                  peer: PeerAcl3\n                  serve: ServeAcl2\n                name: siteA\n          authenticate: true\n          broadcastdelay: 1\n          drift:\n            aging_time: 0\n            file: apphost\n          interfaces:\n            - name: GigabitEthernet0/0/0/1\n              multicast_client: 224.0.0.8\n              multicast_destination: 224.0.0.8\n              broadcast_client: true\n          ipv4:\n            dscp: af12\n          ipv6:\n            precedence: routine\n          log_internal_sync: true\n          master: 1\n          max_associations: 10\n          passive: true\n          peers:\n            - iburst: true\n              peer: 192.0.2.3\n              vrf: siteC\n          servers:\n            - burst: true\n              server: 192.0.2.2\n              vrf: siteD\n          source: GigabitEthernet0/0/0/1\n          source_vrfs:\n            - name: GigabitEthernet0/0/0/0\n              vrf: siteE\n          trusted_keys:\n            - key_id: 1\n          update_calendar: true\n# Commands Fired:\n# ---------------\n# \"commands\": [\n#         \"no ntp peer vrf siteC 192.0.2.1 iburst \",\n#         \"no ntp interface GigabitEthernet0/0/0/0\",\n#         \"ntp peer vrf siteC 192.0.2.3 iburst \",\n#         \"ntp interface GigabitEthernet0/0/0/1 broadcast client\",\n#         \"ntp interface GigabitEthernet0/0/0/1 multicast destination 224.0.0.8\",\n#         \"ntp interface GigabitEthernet0/0/0/1 multicast client 224.0.0.8\",\n#         \"ntp access-group ipv4 serve ServeAcl4\",\n#         \"ntp ipv4 dscp af12\",\n#         \"ntp source GigabitEthernet0/0/0/1\"\n#     ],\n# After state:\n# ------------\n# RP/0/RP0/CPU0:ios#show running-config ntp\n# Mon Sep 13 10:38:22.690 UTC\n# ntp\n#  max-associations 10\n#  interface GigabitEthernet0/0/0/1\n#   broadcast client\n#   multicast client 224.0.0.8\n#   multicast destination 224.0.0.8\n#  !\n#  authentication-key 1 md5 encrypted testkey\n#  authenticate\n#  trusted-key 1\n#  ipv4 dscp af12\n#  ipv6 precedence routine\n#  peer vrf siteC 192.0.2.3 iburst\n#  server vrf siteD 192.0.2.2 burst\n#  drift file apphost\n#  drift aging time 0\n#  master 1\n#  access-group vrf siteA ipv4 peer PeerAcl3\n#  access-group vrf siteA ipv4 serve ServeAcl2\n#  access-group ipv4 peer PeerAcl1\n#  access-group ipv4 serve ServeAcl4\n#  access-group ipv4 serve-only ServeOnlyAcl1\n#  access-group ipv4 query-only QueryOnlyAcl1\n#  source vrf siteE GigabitEthernet0/0/0/0\n#  source GigabitEthernet0/0/0/1\n#  passive\n#  broadcastdelay 1\n#  update-calendar\n#  log-internal-sync\n# !\n#\n# Using state: replaced\n# Before state:\n# -------------\n# RP/0/0/CPU0:10#show running-config ntp\n# ntp\n#  max-associations 10\n#  interface GigabitEthernet0/0/0/0\n#   broadcast client\n#   multicast client 224.0.0.8\n#   multicast destination 224.0.0.8\n#  !\n#  authenticate\n#  trusted-key 1\n#  ipv4 dscp af11\n#  ipv6 precedence routine\n#  peer vrf siteC 192.0.2.1 iburst\n#  server vrf siteD 192.0.2.2 burst\n#  drift file apphost\n#  drift aging time 0\n#  master 1\n#  access-group vrf siteA ipv4 peer PeerAcl3\n#  access-group vrf siteA ipv4 serve ServeAcl2\n#  access-group ipv4 peer PeerAcl1\n#  access-group ipv4 serve ServeAcl1\n#  access-group ipv4 serve-only ServeOnlyAcl1\n#  access-group ipv4 query-only QueryOnlyAcl1\n#  source vrf siteE GigabitEthernet0/0/0/0\n#  source GigabitEthernet0/0/0/0\n#  passive\n#  broadcastdelay 1\n#  update-calendar\n#  log-internal-sync\n# !\n# Replaced play:\n# ----------------\n- name: Replaced BGP configuration with provided configuration\n  cisco.iosxr.iosxr_ntp_global:\n        state: replaced\n        config:\n          access_group:\n            ipv4:\n              peer: PeerAcl1\n              query_only: QueryOnlyAcl1\n              serve: ServeAcl4\n              serve_only: ServeOnlyAcl1\n            vrfs:\n              - ipv4:\n                  peer: PeerAcl3\n                  serve: ServeAcl2\n                name: siteA\n          authenticate: true\n          broadcastdelay: 1\n          drift:\n            aging_time: 0\n            file: apphost\n          interfaces:\n            - name: GigabitEthernet0/0/0/1\n              multicast_client: 224.0.0.8\n              multicast_destination: 224.0.0.8\n              broadcast_client: true\n          ipv4:\n            dscp: af12\n          ipv6:\n            precedence: routine\n          log_internal_sync: true\n          master: 1\n          max_associations: 10\n          passive: true\n          peers:\n            - iburst: true\n              peer: 192.0.2.3\n              vrf: siteC\n          servers:\n            - burst: true\n              server: 192.0.2.2\n              vrf: siteD\n          source: GigabitEthernet0/0/0/1\n          source_vrfs:\n            - name: GigabitEthernet0/0/0/0\n              vrf: siteE\n          trusted_keys:\n            - key_id: 1\n          update_calendar: true\n# Commands Fired:\n# ---------------\n# \"commands\": [\n#         \"no ntp peer vrf siteC 192.0.2.1 iburst \",\n#         \"no ntp interface GigabitEthernet0/0/0/0\",\n#         \"ntp peer vrf siteC 192.0.2.3 iburst \",\n#         \"ntp interface GigabitEthernet0/0/0/1 broadcast client\",\n#         \"ntp interface GigabitEthernet0/0/0/1 multicast destination 224.0.0.8\",\n#         \"ntp interface GigabitEthernet0/0/0/1 multicast client 224.0.0.8\",\n#         \"ntp access-group ipv4 serve ServeAcl4\",\n#         \"ntp ipv4 dscp af12\",\n#         \"ntp source GigabitEthernet0/0/0/1\"\n#     ],\n# After state:\n# ------------\n# RP/0/RP0/CPU0:ios#show running-config ntp\n# Mon Sep 13 10:38:22.690 UTC\n# ntp\n#  max-associations 10\n#  interface GigabitEthernet0/0/0/1\n#   broadcast client\n#   multicast client 224.0.0.8\n#   multicast destination 224.0.0.8\n#  !\n#  authentication-key 1 md5 encrypted testkey\n#  authenticate\n#  trusted-key 1\n#  ipv4 dscp af12\n#  ipv6 precedence routine\n#  peer vrf siteC 192.0.2.3 iburst\n#  server vrf siteD 192.0.2.2 burst\n#  drift file apphost\n#  drift aging time 0\n#  master 1\n#  access-group vrf siteA ipv4 peer PeerAcl3\n#  access-group vrf siteA ipv4 serve ServeAcl2\n#  access-group ipv4 peer PeerAcl1\n#  access-group ipv4 serve ServeAcl4\n#  access-group ipv4 serve-only ServeOnlyAcl1\n#  access-group ipv4 query-only QueryOnlyAcl1\n#  source vrf siteE GigabitEthernet0/0/0/0\n#  source GigabitEthernet0/0/0/1\n#  passive\n#  broadcastdelay 1\n#  update-calendar\n#  log-internal-sync\n# !\n# Using state: gathered\n# Before state:\n# -------------\n# RP/0/0/CPU0:10#show running-config ntp\n# ntp\n#  max-associations 10\n#  interface GigabitEthernet0/0/0/0\n#   broadcast client\n#   multicast client 224.0.0.8\n#   multicast destination 224.0.0.8\n#  !\n#  authenticate\n#  trusted-key 1\n#  ipv4 dscp af11\n#  ipv6 precedence routine\n#  peer vrf siteC 192.0.2.1 iburst\n#  server vrf siteD 192.0.2.2 burst\n#  drift file apphost\n#  drift aging time 0\n#  master 1\n#  access-group vrf siteA ipv4 peer PeerAcl3\n#  access-group vrf siteA ipv4 serve ServeAcl2\n#  access-group ipv4 peer PeerAcl1\n#  access-group ipv4 serve ServeAcl1\n#  access-group ipv4 serve-only ServeOnlyAcl1\n#  access-group ipv4 query-only QueryOnlyAcl1\n#  source vrf siteE GigabitEthernet0/0/0/0\n#  source GigabitEthernet0/0/0/0\n#  passive\n#  broadcastdelay 1\n#  update-calendar\n#  log-internal-sync\n# !\n# Gathered play:\n# --------------\n- name: Gather listed ntp config\n  cisco.iosxr.iosxr_ntp_global:\n    state: gathered\n# Module Execution Result:\n# ------------------------\n# \"gathered\":{\n#         \"access_group\": {\n#             \"ipv4\": {\n#                 \"peer\": \"PeerAcl1\",\n#                 \"query_only\": \"QueryOnlyAcl1\",\n#                 \"serve\": \"ServeAcl1\",\n#                 \"serve_only\": \"ServeOnlyAcl1\"\n#             },\n#             \"vrfs\": [\n#                 {\n#                     \"ipv4\": {\n#                         \"peer\": \"PeerAcl3\",\n#                         \"serve\": \"ServeAcl2\"\n#                     },\n#                     \"name\": \"siteA\"\n#                 }\n#             ]\n#         },\n#         \"authenticate\": true,\n#         \"broadcastdelay\": 1,\n#         \"drift\": {\n#             \"aging_time\": 0,\n#             \"file\": \"apphost\"\n#         },\n#         \"interfaces\": [\n#             {\n#                 \"broadcast_client\": true,\n#                 \"multicast_client\": \"224.0.0.8\",\n#                 \"multicast_destination\": \"224.0.0.8\",\n#                 \"name\": \"GigabitEthernet0/0/0/0\"\n#             }\n#         ],\n#         \"ipv4\": {\n#             \"dscp\": \"af11\"\n#         },\n#         \"ipv6\": {\n#             \"precedence\": \"routine\"\n#         },\n#         \"log_internal_sync\": true,\n#         \"master\": 1,\n#         \"max_associations\": 10,\n#         \"passive\": true,\n#         \"peers\": [\n#             {\n#                 \"iburst\": true,\n#                 \"peer\": \"192.0.2.1\",\n#                 \"vrf\": \"siteC\"\n#             }\n#         ],\n#         \"servers\": [\n#             {\n#                 \"burst\": true,\n#                 \"server\": \"192.0.2.2\",\n#                 \"vrf\": \"siteD\"\n#             }\n#         ],\n#         \"source\": \"GigabitEthernet0/0/0/0\",\n#         \"source_vrfs\": [\n#             {\n#                 \"name\": \"GigabitEthernet0/0/0/0\",\n#                 \"vrf\": \"siteE\"\n#             }\n#         ],\n#         \"trusted_keys\": [\n#             {\n#                 \"key_id\": 1\n#             }\n#         ],\n#         \"update_calendar\": true\n#     }\n# Using state: rendered\n# Rendered play:\n# --------------\n- name: Render platform specific configuration lines with state rendered (without connecting to the device)\n  cisco.iosxr.iosxr_ntp_global:\n    state: rendered\n    config:\n      access_group:\n        ipv4:\n          peer: PeerAcl1\n          query_only: QueryOnlyAcl1\n          serve: ServeAcl1\n          serve_only: ServeOnlyAcl1\n        vrfs:\n          - ipv4:\n              peer: PeerAcl3\n              serve: ServeAcl2\n            name: siteA\n      authenticate: true\n      broadcastdelay: 1\n      drift:\n        aging_time: 0\n        file: apphost\n      interfaces:\n        - name: GigabitEthernet0/0/0/0\n          multicast_client: 224.0.0.8\n          multicast_destination: 224.0.0.8\n          broadcast_client: true\n      ipv4:\n        dscp: af11\n      ipv6:\n        precedence: routine\n      log_internal_sync: true\n      master: 1\n      max_associations: 10\n      passive: true\n      peers:\n        - iburst: true\n          peer: 192.0.2.1\n          vrf: siteC\n      servers:\n        - burst: true\n          server: 192.0.2.2\n          vrf: siteD\n      source: GigabitEthernet0/0/0/0\n      source_vrfs:\n        - name: GigabitEthernet0/0/0/0\n          vrf: siteE\n      trusted_keys:\n        - key_id: 1\n      update_calendar: true\n  register: result\n# Module Execution Result:\n# ------------------------\n# \"rendered\": [\n#         \"ntp peer vrf siteC 192.0.2.1 iburst \",\n#         \"ntp server vrf siteD 192.0.2.2 burst \",\n#         \"ntp trusted-key 1\",\n#         \"ntp interface GigabitEthernet0/0/0/0 broadcast client\",\n#         \"ntp interface GigabitEthernet0/0/0/0 multicast destination 224.0.0.8\",\n#         \"ntp interface GigabitEthernet0/0/0/0 multicast client 224.0.0.8\",\n#         \"ntp vrf siteE source GigabitEthernet0/0/0/0\",\n#         \"ntp access-group vrf siteA ipv4 serve ServeAcl2\",\n#         \"ntp access-group vrf siteA ipv4 peer PeerAcl3\",\n#         \"ntp access-group ipv4 peer PeerAcl1\",\n#         \"ntp access-group ipv4 serve ServeAcl1\",\n#         \"ntp access-group ipv4 serve-only ServeOnlyAcl1\",\n#         \"ntp access-group ipv4 query-only QueryOnlyAcl1\",\n#         \"ntp authenticate\",\n#         \"ntp log-internal-sync\",\n#         \"ntp broadcastdelay 1\",\n#         \"ntp drift aging time 0\",\n#         \"ntp drift file apphost\",\n#         \"ntp ipv4 dscp af11\",\n#         \"ntp ipv6 precedence routine\",\n#         \"ntp max-associations 10\",\n#         \"ntp master 1\",\n#         \"ntp passive\",\n#         \"ntp update-calendar\",\n#         \"ntp source GigabitEthernet0/0/0/0\"\n#     ],\n# Using state: parsed\n# File: parsed.cfg\n# ----------------\n# ntp\n#  max-associations 10\n#  interface GigabitEthernet0/0/0/0\n#   broadcast client\n#   multicast client 224.0.0.8\n#   multicast destination 224.0.0.8\n#  !\n#  authenticate\n#  trusted-key 1\n#  ipv4 dscp af11\n#  ipv6 precedence routine\n#  peer vrf siteC 192.0.2.1 iburst\n#  server vrf siteD 192.0.2.2 burst\n#  drift file apphost\n#  drift aging time 0\n#  master 1\n#  access-group vrf siteA ipv4 peer PeerAcl3\n#  access-group vrf siteA ipv4 serve ServeAcl2\n#  access-group ipv4 peer PeerAcl1\n#  access-group ipv4 serve ServeAcl1\n#  access-group ipv4 serve-only ServeOnlyAcl1\n#  access-group ipv4 query-only QueryOnlyAcl1\n#  source vrf siteE GigabitEthernet0/0/0/0\n#  source GigabitEthernet0/0/0/0\n#  passive\n#  broadcastdelay 1\n#  update-calendar\n#  log-internal-sync\n# !\n# Parsed play:\n# ------------\n- name: Parse the provided configuration with the existing running configuration\n  cisco.iosxr.iosxr_ntp_global:\n    running_config: \"{{ lookup('file', 'parsed.cfg') }}\"\n    state: parsed\n# Module Execution Result:\n# ------------------------\n# \"parsed\":{\n#         \"access_group\": {\n#             \"ipv4\": {\n#                 \"peer\": \"PeerAcl1\",\n#                 \"query_only\": \"QueryOnlyAcl1\",\n#                 \"serve\": \"ServeAcl1\",\n#                 \"serve_only\": \"ServeOnlyAcl1\"\n#             },\n#             \"vrfs\": [\n#                 {\n#                     \"ipv4\": {\n#                         \"peer\": \"PeerAcl3\",\n#                         \"serve\": \"ServeAcl2\"\n#                     },\n#                     \"name\": \"siteA\"\n#                 }\n#             ]\n#         },\n#         \"authenticate\": true,\n#         \"broadcastdelay\": 1,\n#         \"drift\": {\n#             \"aging_time\": 0,\n#             \"file\": \"apphost\"\n#         },\n#         \"interfaces\": [\n#             {\n#                 \"broadcast_client\": true,\n#                 \"multicast_client\": \"224.0.0.8\",\n#                 \"multicast_destination\": \"224.0.0.8\",\n#                 \"name\": \"GigabitEthernet0/0/0/0\"\n#             }\n#         ],\n#         \"ipv4\": {\n#             \"dscp\": \"af11\"\n#         },\n#         \"ipv6\": {\n#             \"precedence\": \"routine\"\n#         },\n#         \"log_internal_sync\": true,\n#         \"master\": 1,\n#         \"max_associations\": 10,\n#         \"passive\": true,\n#         \"peers\": [\n#             {\n#                 \"iburst\": true,\n#                 \"peer\": \"192.0.2.1\",\n#                 \"vrf\": \"siteC\"\n#             }\n#         ],\n#         \"servers\": [\n#             {\n#                 \"burst\": true,\n#                 \"server\": \"192.0.2.2\",\n#                 \"vrf\": \"siteD\"\n#             }\n#         ],\n#         \"source\": \"GigabitEthernet0/0/0/0\",\n#         \"source_vrfs\": [\n#             {\n#                 \"name\": \"GigabitEthernet0/0/0/0\",\n#                 \"vrf\": \"siteE\"\n#             }\n#         ],\n#         \"trusted_keys\": [\n#             {\n#                 \"key_id\": 1\n#             }\n#         ],\n#         \"update_calendar\": true\n#     }\n"
  },
  "cisco.iosxr.iosxr_ospf_interfaces": {
    "doc": {
      "description": "This module manages OSPF(v2/v3) configuration of interfaces on devices running Cisco IOS-XR.",
      "has_action": true,
      "notes": "This module works with connection C(network_cli). See L(the IOS-XR Platform Options,../network/user_guide/platform_iosxr.html)",
      "options": {
        "config": {
          "aliases": [],
          "description": "A list of OSPF configuration for interfaces.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "address_family": {
              "aliases": [],
              "description": "OSPF settings on the interfaces in address-family context.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "afi": {
                  "aliases": [],
                  "description": "Address Family Identifier (AFI) for OSPF settings on the interfaces.",
                  "type": "str",
                  "required": true,
                  "choices": [
                    "ipv4",
                    "ipv6"
                  ],
                  "suboptions": {}
                },
                "apply_group_option": {
                  "aliases": [],
                  "description": "Specify configuration from a group",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "group_name": {
                      "aliases": [],
                      "description": "Specify the name of the group",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "operation": {
                      "aliases": [],
                      "description": "Specify the group config operation",
                      "type": "str",
                      "required": false,
                      "choices": [
                        "add",
                        "remove",
                        "append"
                      ],
                      "suboptions": {}
                    }
                  }
                },
                "authentication": {
                  "aliases": [],
                  "description": "Enable authentication",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "message_digest": {
                      "aliases": [],
                      "description": "Use message-digest authentication",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "keychain": {
                          "aliases": [],
                          "description": "Specify keychain name",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "null_auth": {
                      "aliases": [],
                      "description": "Use no authentication",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "authentication_key": {
                  "aliases": [],
                  "description": "Specify authentication password (key)",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "clear": {
                      "aliases": [],
                      "description": "Specifies an UNENCRYPTED password (key) will follow",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "encrypted": {
                      "aliases": [],
                      "description": "Specifies an ENCRYPTED password (key) will follow",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "password": {
                      "aliases": [],
                      "description": "The OSPFv2 password (key)",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "bfd": {
                  "aliases": [],
                  "description": "Configure BFD parameters",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "fast_detect": {
                      "aliases": [],
                      "description": "Configure fast detection",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "set": {
                          "aliases": [],
                          "description": "Enable fast detection only",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "strict_mode": {
                          "aliases": [],
                          "description": "Hold down neighbor session until BFD session is up",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "minimum_interval": {
                      "aliases": [],
                      "description": "Hello interval in milli-seconds",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "multiplier": {
                      "aliases": [],
                      "description": "Detect multiplier",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "cost": {
                  "aliases": [],
                  "description": "Specify Interface cost",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "cost_fallback": {
                  "aliases": [],
                  "description": "Specify Cost when cumulative bandwidth goes below the theshold",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "cost": {
                      "aliases": [],
                      "description": "Specify cost w.r.t cummulative bandwidth",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "threshold": {
                      "aliases": [],
                      "description": "Specify threshold bandwidth when cost-fallback is applied",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "database_filter": {
                  "aliases": [],
                  "description": "Filter OSPF LSAs during synchronization and flooding",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "all_outgoing_lsa": {
                      "aliases": [],
                      "description": "Filter all outgoing LSA",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "dead_interval": {
                  "aliases": [],
                  "description": "Specify interval after which a neighbor is declared dead",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "demand_circuit": {
                  "aliases": [],
                  "description": "Enable/Disable demand circuits",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "fast_reroute": {
                  "aliases": [],
                  "description": "Specify IP Fast Reroute",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "disabled": {
                      "aliases": [],
                      "description": "Disable IP fast reroute",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "per_link": {
                      "aliases": [],
                      "description": "Specify per-prefix computation",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "information_type": {
                          "aliases": [],
                          "description": "Specify per-link LFA exclusion or FRR LFA candidate information",
                          "type": "str",
                          "required": false,
                          "choices": [
                            "exclude",
                            "lfa_candidate"
                          ],
                          "suboptions": {}
                        },
                        "interface": {
                          "aliases": [],
                          "description": "Specify Per-link LFA exclusion information",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "bundle_ether": {
                              "aliases": [],
                              "description": "Specify Aggregated Ethernet interface(s)",
                              "type": "list",
                              "required": false,
                              "elements": "dict",
                              "suboptions": {
                                "name": {
                                  "aliases": [],
                                  "description": "Specify the interface id",
                                  "type": "int",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            },
                            "bvi": {
                              "aliases": [],
                              "description": "Specify Bridge-Group Virtual Interface",
                              "type": "list",
                              "required": false,
                              "elements": "dict",
                              "suboptions": {
                                "name": {
                                  "aliases": [],
                                  "description": "Specify the interface id",
                                  "type": "int",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            },
                            "fast_ethernet": {
                              "aliases": [],
                              "description": "Specify FastEthernet/IEEE 802.3 interface(s)",
                              "type": "list",
                              "required": false,
                              "elements": "dict",
                              "suboptions": {
                                "name": {
                                  "aliases": [],
                                  "description": "Specify the interface id",
                                  "type": "str",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            },
                            "fiftygige": {
                              "aliases": [],
                              "description": "Specify FiftyGigE/IEEE 802.3 interface(s)",
                              "type": "list",
                              "required": false,
                              "elements": "dict",
                              "suboptions": {
                                "name": {
                                  "aliases": [],
                                  "description": "Specify the interface id",
                                  "type": "str",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            },
                            "fortygige": {
                              "aliases": [],
                              "description": "Specify FortyGigE/IEEE 802.3 interface(s)",
                              "type": "list",
                              "required": false,
                              "elements": "dict",
                              "suboptions": {
                                "name": {
                                  "aliases": [],
                                  "description": "Specify the interface id",
                                  "type": "str",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            },
                            "fourhundredgige": {
                              "aliases": [],
                              "description": "Specify FourHundredGigE/IEEE 802.3 interface(s)",
                              "type": "list",
                              "required": false,
                              "elements": "dict",
                              "suboptions": {
                                "name": {
                                  "aliases": [],
                                  "description": "Specify the interface id",
                                  "type": "str",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            },
                            "gigabitethernet": {
                              "aliases": [],
                              "description": "Specify GigabitEthernet/IEEE 802.3 interface(s)",
                              "type": "list",
                              "required": false,
                              "elements": "dict",
                              "suboptions": {
                                "name": {
                                  "aliases": [],
                                  "description": "Specify the interface id",
                                  "type": "str",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            },
                            "hundredgige": {
                              "aliases": [],
                              "description": "Specify HundredGigE/IEEE 802.3 interface(s)",
                              "type": "list",
                              "required": false,
                              "elements": "dict",
                              "suboptions": {
                                "name": {
                                  "aliases": [],
                                  "description": "Specify the interface id",
                                  "type": "str",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            },
                            "mgmteth": {
                              "aliases": [],
                              "description": "Specify MgmtEth/IEEE 802.3 interface(s)",
                              "type": "list",
                              "required": false,
                              "elements": "dict",
                              "suboptions": {
                                "name": {
                                  "aliases": [],
                                  "description": "Specify the interface id",
                                  "type": "str",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            },
                            "multilink": {
                              "aliases": [],
                              "description": "Specify Multilink network interface(s)",
                              "type": "list",
                              "required": false,
                              "elements": "dict",
                              "suboptions": {
                                "name": {
                                  "aliases": [],
                                  "description": "Specify the interface id",
                                  "type": "str",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            },
                            "nve": {
                              "aliases": [],
                              "description": "Specify Network Virtualization Endpoint Interface(s)",
                              "type": "list",
                              "required": false,
                              "elements": "dict",
                              "suboptions": {
                                "name": {
                                  "aliases": [],
                                  "description": "Specify the interface id",
                                  "type": "int",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            },
                            "pos_int": {
                              "aliases": [],
                              "description": "Specify Aggregated pos interface(s)",
                              "type": "list",
                              "required": false,
                              "elements": "dict",
                              "suboptions": {
                                "name": {
                                  "aliases": [],
                                  "description": "Specify the interface id",
                                  "type": "int",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            },
                            "pw_ether": {
                              "aliases": [],
                              "description": "Specify PWHE Ethernet Interface",
                              "type": "list",
                              "required": false,
                              "elements": "dict",
                              "suboptions": {
                                "name": {
                                  "aliases": [],
                                  "description": "Specify the interface id",
                                  "type": "int",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            },
                            "pw_iw": {
                              "aliases": [],
                              "description": "Specify PWHE VC11 IP Interworking Interface",
                              "type": "list",
                              "required": false,
                              "elements": "dict",
                              "suboptions": {
                                "name": {
                                  "aliases": [],
                                  "description": "Specify the interface id",
                                  "type": "int",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            },
                            "serial": {
                              "aliases": [],
                              "description": "Specify Serial network interface(s)",
                              "type": "list",
                              "required": false,
                              "elements": "dict",
                              "suboptions": {
                                "name": {
                                  "aliases": [],
                                  "description": "Specify the interface id",
                                  "type": "str",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            },
                            "srp": {
                              "aliases": [],
                              "description": "Specify SRP interface(s)",
                              "type": "list",
                              "required": false,
                              "elements": "dict",
                              "suboptions": {
                                "name": {
                                  "aliases": [],
                                  "description": "Specify the interface id",
                                  "type": "str",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            },
                            "tengige": {
                              "aliases": [],
                              "description": "Specify TenGigabitEthernet/IEEE 802.3 interface(s)",
                              "type": "list",
                              "required": false,
                              "elements": "dict",
                              "suboptions": {
                                "name": {
                                  "aliases": [],
                                  "description": "Specify the interface id",
                                  "type": "str",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            },
                            "tunnel_ip": {
                              "aliases": [],
                              "description": "Specify GRE/IPinIP Tunnel Interface(s)",
                              "type": "list",
                              "required": false,
                              "elements": "dict",
                              "suboptions": {
                                "name": {
                                  "aliases": [],
                                  "description": "Specify the interface id",
                                  "type": "int",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            },
                            "tunnel_ipsec": {
                              "aliases": [],
                              "description": "Specify IPSec Tunnel interface(s)",
                              "type": "list",
                              "required": false,
                              "elements": "dict",
                              "suboptions": {
                                "name": {
                                  "aliases": [],
                                  "description": "Specify the interface id",
                                  "type": "int",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            },
                            "tunnel_mpls": {
                              "aliases": [],
                              "description": "MPLS Transport Protocol Tunnel interface",
                              "type": "list",
                              "required": false,
                              "elements": "dict",
                              "suboptions": {
                                "name": {
                                  "aliases": [],
                                  "description": "Specify the interface id",
                                  "type": "str",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            },
                            "tunnel_mte": {
                              "aliases": [],
                              "description": "Specify MPLS Traffic Engineering P2MP Tunnel interface(s)",
                              "type": "list",
                              "required": false,
                              "elements": "dict",
                              "suboptions": {
                                "name": {
                                  "aliases": [],
                                  "description": "Specify the interface id",
                                  "type": "int",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            },
                            "twentyfivegige": {
                              "aliases": [],
                              "description": "Specify TwentyFiveGigabitEthernet/IEEE 802.3 interface(s)",
                              "type": "list",
                              "required": false,
                              "elements": "dict",
                              "suboptions": {
                                "name": {
                                  "aliases": [],
                                  "description": "Specify the interface id",
                                  "type": "str",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            },
                            "twohundredgige": {
                              "aliases": [],
                              "description": "Specify TwoHundredGigE/IEEE 802.3 interface(s)",
                              "type": "list",
                              "required": false,
                              "elements": "dict",
                              "suboptions": {
                                "name": {
                                  "aliases": [],
                                  "description": "Specify the interface id",
                                  "type": "str",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            }
                          }
                        },
                        "use_candidate_only": {
                          "aliases": [],
                          "description": "Enable/Disable backup selection from candidate-list only",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    }
                  }
                },
                "flood_reduction": {
                  "aliases": [],
                  "description": "Enable/Disable flood reduction",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "hello_interval": {
                  "aliases": [],
                  "description": "Specify Time between HELLO packets",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "link_down_fast_detect": {
                  "aliases": [],
                  "description": "Configure interface down parameters",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "message_digest_key": {
                  "aliases": [],
                  "description": "Message digest authentication password (key)",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "id": {
                      "aliases": [],
                      "description": "Key ID",
                      "type": "int",
                      "required": true,
                      "suboptions": {}
                    },
                    "md5": {
                      "aliases": [],
                      "description": "Use MD5 Algorithm",
                      "type": "dict",
                      "required": true,
                      "suboptions": {
                        "clear": {
                          "aliases": [],
                          "description": "Specifies an UNENCRYPTED password (key) will follow",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "encrypted": {
                          "aliases": [],
                          "description": "Specifies an ENCRYPTED password (key) will follow",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "password": {
                          "aliases": [],
                          "description": "The OSPFv2 password (key)",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    }
                  }
                },
                "mpls_ldp_sync": {
                  "aliases": [],
                  "description": "Enable/Disable MPLS LDP Sync",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "mtu_ignore": {
                  "aliases": [],
                  "description": "Enable/Disable ignoring of MTU in DBD packets",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "neighbors": {
                  "aliases": [],
                  "description": "Specify a neighbor routers",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "cost": {
                      "aliases": [],
                      "description": "Specify OSPF cost for point-to-multipoint neighbor",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "db_filter_all_out": {
                      "aliases": [],
                      "description": "Specify Filter OSPF LSA during synchronization and flooding for point-to-multipoint neighbor",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "neighbor_id": {
                      "aliases": [],
                      "description": "Specify Neighbor address (name)",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "poll_interval": {
                      "aliases": [],
                      "description": "Specify OSPF dead-router polling interval",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "priority": {
                      "aliases": [],
                      "description": "Specify OSPF priority of non-broadcast neighbor",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "network": {
                  "aliases": [],
                  "description": "Specify Network type",
                  "type": "str",
                  "required": false,
                  "choices": [
                    "broadcast",
                    "non-broadcast",
                    "point-to-multipoint",
                    "point-to-point"
                  ],
                  "suboptions": {}
                },
                "packet_size": {
                  "aliases": [],
                  "description": "Customize size of OSPF packets upto MTU",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "passive": {
                  "aliases": [],
                  "description": "Enable/Disable passive",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "prefix_suppression": {
                  "aliases": [],
                  "description": "Suppress advertisement of the prefixes",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "priority": {
                  "aliases": [],
                  "description": "Specify Router priority",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "processes": {
                  "aliases": [],
                  "description": "Interfaces configuration for an OSPF process.",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "area": {
                      "aliases": [],
                      "description": "Specify the area-id",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "area_id": {
                          "aliases": [],
                          "description": "OSPF interfaces area ID as a decimal value. Please refer vendor documentation of Valid values.\nOSPF interfaces area ID in IP address format(e.g. A.B.C.D)",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "process_id": {
                      "aliases": [],
                      "description": "OSPF process tag.",
                      "type": "str",
                      "required": true,
                      "suboptions": {}
                    }
                  }
                },
                "retransmit_interval": {
                  "aliases": [],
                  "description": "Specify time between retransmitting lost link state advertisements",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "security_ttl": {
                  "aliases": [],
                  "description": "Enable security",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "hops": {
                      "aliases": [],
                      "description": "Maximum number of IP hops allowed <1-254>",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "set": {
                      "aliases": [],
                      "description": "Enable ttl security",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "transmit_delay": {
                  "aliases": [],
                  "description": "Specify estimated time needed to send link-state update packet",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "name": {
              "aliases": [],
              "description": "Name/Identifier of the interface.",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "type": {
              "aliases": [],
              "description": "Type of the interface.",
              "type": "str",
              "required": true,
              "suboptions": {}
            }
          }
        },
        "running_config": {
          "aliases": [],
          "description": "This option is used only with state I(parsed).\nThe value of this option should be the output received from the IOS-XR device by executing the command B(show running-config router ospf').\nThe state I(parsed) reads the configuration from C(running_config) option and transforms it into Ansible structured data as per the resource module's argspec and the value is then returned in the I(parsed) key within the result.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The state the configuration should be left in.",
          "default": "merged",
          "type": "str",
          "required": false,
          "choices": [
            "merged",
            "replaced",
            "overridden",
            "deleted",
            "gathered",
            "parsed",
            "rendered"
          ],
          "suboptions": {}
        }
      },
      "short_description": "OSPF Interfaces Resource Module.",
      "version_added": "1.2.0"
    },
    "examples": "\n# Using merged\n\n# Before state:\n# -------------\n#\n# RP/0/RP0/CPU0:anton#show running-config router ospf\n# % No such configuration item(s)\n#\n\n- name: Merge provided OSPF interfaces configuration with the existing configuration\n  cisco.iosxr.iosxr_ospf_interfaces:\n    config:\n      - name: GigabitEthernet0/0/0/0\n        type: gigabitethernet\n        address_family:\n          - afi: ipv4\n            processes:\n              - process_id: \"LAB3\"\n                area:\n                  area_id: 0.0.0.3\n            cost: 20\n            authentication:\n              message_digest:\n                keychain: cisco\n          - afi: ipv6\n            processes:\n              - process_id: \"LAB3\"\n                area:\n                  area_id: 0.0.0.2\n            cost: 30\n    state: merged\n\n#\n#\n# ------------------------\n# Module Execution Result\n# ------------------------\n#\n#  \"before\": []\n#\n#  \"commands\": [\n#        \"router ospf LAB3 area 0.0.0.3 interface GigabitEthernet 0/0/0/0 cost 20\",\n#        \"router ospf LAB3 area 0.0.0.3 interface GigabitEthernet 0/0/0/0 authentication message-digest\",\n#        \"router ospf LAB3 area 0.0.0.3 interface GigabitEthernet 0/0/0/0 authentication message-digest keychain cisco\",\n#        \"router ospfv3 LAB3 area 0.0.0.2 interface GigabitEthernet 0/0/0/0 cost 30\"\n#     ]\n#\n#  \"after\": [\n#         {\n#             \"address_family\": [\n#                 {\n#                     \"afi\": \"ipv4\",\n#                     \"authentication\": {\n#                         \"message_digest\": {\n#                             \"keychain\": \"cisco\"\n#                         }\n#                     },\n#                     \"cost\": 20,\n#                     \"processes\": [\n#                         {\n#                             \"area\": {\n#                                 \"area_id\": \"0.0.0.3\"\n#                             },\n#                             \"process_id\": \"LAB3\"\n#                         }\n#                     ]\n#                 },\n#                 {\n#                     \"afi\": \"ipv6\",\n#                     \"cost\": 30,\n#                     \"processes\": [\n#                         {\n#                             \"area\": {\n#                                 \"area_id\": \"0.0.0.2\"\n#                             },\n#                             \"process_id\": \"LAB3\"\n#                         }\n#                     ]\n#                 }\n#             ],\n#             \"name\": \"GigabitEthernet0/0/0/0\",\n#             \"type\": \"gigabitethernet\"\n#         }\n#     ]\n#\n#\n# ------------\n# After state\n# ------------\n#\n# RP/0/0/CPU0:an-iosxr-02#show running-config router ospf\n# Thu Oct 23 06:00:57.217 UTC\n# router ospf LAB\n#  area 0.0.0.0\n#  !\n#  area 0.0.0.9\n#  !\n# !\n# router ospf LAB1\n#  area 0.0.0.1\n#  !\n#  area 0.0.0.3\n#  !\n# !\n# router ospf LAB3\n#  area 0.0.0.3\n#   interface GigabitEthernet0/0/0/0\n#    cost 20\n#    authentication message-digest keychain cisco\n#   !\n#  !\n# !\n# router ospf ipv4\n# !\n\n# Using replaced\n#\n# ------------\n# Before state\n# ------------\n#\n#\n# RP/0/0/CPU0:an-iosxr-02#show running-config router ospf\n# Thu Oct 23 06:00:57.217 UTC\n# router ospf LAB\n#  area 0.0.0.0\n#  !\n#  area 0.0.0.9\n#  !\n# !\n# router ospf LAB1\n#  area 0.0.0.1\n#  !\n#  area 0.0.0.3\n#  !\n# !\n# router ospf LAB3\n#  area 0.0.0.3\n#   interface GigabitEthernet0/0/0/0\n#    cost 20\n#    authentication message-digest keychain cisco\n#   !\n#  !\n# !\n# router ospf ipv4\n# !\n\n- name: Replace OSPF interfaces configuration\n  cisco.iosxr.iosxr_ospf_interfaces:\n    config:\n      - name: GigabitEthernet0/0/0/0\n        type: gigabitethernet\n        address_family:\n          - afi: ipv4\n            processes:\n              - process_id: \"LAB3\"\n                area:\n                  area_id: 0.0.0.3\n            cost: 30\n            authentication:\n              message_digest:\n                keychain: ciscoiosxr\n          - afi: ipv6\n            processes:\n              - process_id: \"LAB3\"\n                area:\n                  area_id: 0.0.0.2\n            cost: 30\n    state: replaced\n\n#\n#\n# ------------------------\n# Module Execution Result\n# ------------------------\n#\n#  \"before\": [\n#         {\n#             \"address_family\": [\n#                 {\n#                     \"afi\": \"ipv4\",\n#                     \"authentication\": {\n#                         \"message_digest\": {\n#                             \"keychain\": \"cisco\"\n#                         }\n#                     },\n#                     \"cost\": 20,\n#                     \"processes\": [\n#                         {\n#                             \"area\": {\n#                                 \"area_id\": \"0.0.0.3\"\n#                             },\n#                             \"process_id\": \"LAB3\"\n#                         }\n#                     ]\n#                 },\n#                 {\n#                     \"afi\": \"ipv6\",\n#                     \"cost\": 30,\n#                     \"processes\": [\n#                         {\n#                             \"area\": {\n#                                 \"area_id\": \"0.0.0.2\"\n#                             },\n#                             \"process_id\": \"LAB3\"\n#                         }\n#                     ]\n#                 }\n#             ],\n#             \"name\": \"GigabitEthernet0/0/0/0\",\n#             \"type\": \"gigabitethernet\"\n#         }\n#     ]\n#\n#  \"commands\": [\n#    \"router ospf LAB3 area 0.0.0.3 interface GigabitEthernet 0/0/0/0 cost 30\",\n#    \"router ospf LAB3 area 0.0.0.3 interface GigabitEthernet 0/0/0/0 authentication message-digest\",\n#    \"router ospf LAB3 area 0.0.0.3 interface GigabitEthernet 0/0/0/0 authentication message-digest keychain ciscoiosxr\"\n#     ]\n#\n#  \"after\": [\n#         {\n#             \"address_family\": [\n#                 {\n#                     \"afi\": \"ipv4\",\n#                     \"authentication\": {\n#                         \"message_digest\": {\n#                             \"keychain\": \"ciscoiosxr\"\n#                         }\n#                     },\n#                     \"cost\": 30,\n#                     \"processes\": [\n#                         {\n#                             \"area\": {\n#                                 \"area_id\": \"0.0.0.3\"\n#                             },\n#                             \"process_id\": \"LAB3\"\n#                         }\n#                     ]\n#                 },\n#                 {\n#                     \"afi\": \"ipv6\",\n#                     \"cost\": 30,\n#                     \"processes\": [\n#                         {\n#                             \"area\": {\n#                                 \"area_id\": \"0.0.0.2\"\n#                             },\n#                             \"process_id\": \"LAB3\"\n#                         }\n#                     ]\n#                 }\n#             ],\n#             \"name\": \"GigabitEthernet0/0/0/0\",\n#             \"type\": \"gigabitethernet\"\n#         }\n#     ]\n#\n#\n# -----------\n# After state\n# -----------\n#\n# RP/0/0/CPU0:an-iosxr-02#show running-config router ospf\n# Thu Oct 23 06:10:39.827 UTC\n# router ospf LAB\n#  area 0.0.0.0\n#  !\n#  area 0.0.0.9\n#  !\n# !\n# router ospf LAB1\n#  area 0.0.0.1\n#  !\n#  area 0.0.0.3\n#  !\n# !\n# router ospf LAB3\n#  area 0.0.0.3\n#   interface GigabitEthernet0/0/0/0\n#    cost 30\n#    authentication message-digest keychain ciscoiosxr\n#   !\n#  !\n# !\n# router ospf ipv4\n# !\n\n- name: Override existing OSPF interfaces configuration\n  cisco.iosxr.iosxr_ospf_interfaces:\n    config:\n      - name: GigabitEthernet0/0/0/1\n        type: gigabitethernet\n        address_family:\n          - afi: ipv4\n            processes:\n              - process_id: \"LAB1\"\n                area:\n                  area_id: 0.0.0.3\n            cost: 10\n            authentication:\n              message_digest:\n                keychain: iosxr\n    state: overridden\n\n#\n#\n# ------------------------\n# Module Execution Result\n# ------------------------\n#\n#  \"before\": [\n#         {\n#             \"address_family\": [\n#                 {\n#                     \"afi\": \"ipv4\",\n#                     \"authentication\": {\n#                         \"message_digest\": {\n#                             \"keychain\": \"ciscoiosxr\"\n#                         }\n#                     },\n#                     \"cost\": 30,\n#                     \"processes\": [\n#                         {\n#                             \"area\": {\n#                                 \"area_id\": \"0.0.0.3\"\n#                             },\n#                             \"process_id\": \"LAB3\"\n#                         }\n#                     ]\n#                 },\n#                 {\n#                     \"afi\": \"ipv6\",\n#                     \"cost\": 30,\n#                     \"processes\": [\n#                         {\n#                             \"area\": {\n#                                 \"area_id\": \"0.0.0.2\"\n#                             },\n#                             \"process_id\": \"LAB3\"\n#                         }\n#                     ]\n#                 }\n#             ],\n#             \"name\": \"GigabitEthernet0/0/0/0\",\n#             \"type\": \"gigabitethernet\"\n#         }\n#     ]\n#\n#  \"commands\": [\n#         \"no router ospf LAB3 area 0.0.0.3 interface GigabitEthernet 0/0/0/0\",\n#         \"no router ospfv3 LAB3 area 0.0.0.2 interface GigabitEthernet 0/0/0/0\",\n#         \"router ospf LAB1 area 0.0.0.3 interface GigabitEthernet 0/0/0/1 cost 10\",\n#         \"router ospf LAB1 area 0.0.0.3 interface GigabitEthernet 0/0/0/1 authentication message-digest\",\n#         \"router ospf LAB1 area 0.0.0.3 interface GigabitEthernet 0/0/0/1 authentication message-digest keychain iosxr\"\n#     ]\n#\n#  \"after\": [\n#         {\n#             \"address_family\": [\n#                 {\n#                     \"afi\": \"ipv4\",\n#                     \"authentication\": {\n#                         \"message_digest\": {\n#                             \"keychain\": \"iosxr\"\n#                         }\n#                     },\n#                     \"cost\": 10,\n#                     \"processes\": [\n#                         {\n#                             \"area\": {\n#                                 \"area_id\": \"0.0.0.3\"\n#                             },\n#                             \"process_id\": \"LAB1\"\n#                         }\n#                     ]\n#                 }\n#             ],\n#             \"name\": \"GigabitEthernet0/0/0/1\",\n#             \"type\": \"gigabitethernet\"\n#         }\n#     ]\n#\n#\n# -----------\n# After state\n# -----------\n#\n# RP/0/0/CPU0:an-iosxr-02#show running-config router ospf\n# Thu Oct 23 06:28:15.025 UTC\n# router ospf LAB\n#  area 0.0.0.0\n#  !\n#  area 0.0.0.9\n#  !\n# !\n# router ospf LAB1\n#  area 0.0.0.1\n#  !\n#  area 0.0.0.3\n#   interface GigabitEthernet0/0/0/1\n#    cost 10\n#    authentication message-digest keychain iosxr\n#   !\n#  !\n# !\n# router ospf LAB3\n#  area 0.0.0.3\n#  !\n# !\n# router ospf ipv4\n# !\n\n# Using deleted\n#\n# ------------\n# Before state\n# ------------\n#\n#\n# RP/0/0/CPU0:an-iosxr-02#show running-config router ospf\n# Thu Oct 23 06:28:15.025 UTC\n# router ospf LAB\n#  area 0.0.0.0\n#  !\n#  area 0.0.0.9\n#  !\n# !\n# router ospf LAB1\n#  area 0.0.0.1\n#  !\n#  area 0.0.0.3\n#   interface GigabitEthernet0/0/0/1\n#    cost 10\n#    authentication message-digest keychain iosxr\n#   !\n#  !\n# !\n# router ospf LAB3\n#  area 0.0.0.3\n#  !\n# !\n# router ospf ipv4\n# !\n\n- name: Deleted existing OSPF interfaces from the device\n  cisco.iosxr.iosxr_ospf_interfaces:\n    config:\n      - name: GigabitEthernet0/0/0/1\n        type: gigabitethernet\n    state: deleted\n\n#\n#\n# ------------------------\n# Module Execution Result\n# ------------------------\n#\n#  \"before\": [\n#         {\n#             \"address_family\": [\n#                 {\n#                     \"afi\": \"ipv4\",\n#                     \"authentication\": {\n#                         \"message_digest\": {\n#                             \"keychain\": \"iosxr\"\n#                         }\n#                     },\n#                     \"cost\": 10,\n#                     \"processes\": [\n#                         {\n#                             \"area\": {\n#                                 \"area_id\": \"0.0.0.3\"\n#                             },\n#                             \"process_id\": \"LAB1\"\n#                         }\n#                     ]\n#                 }\n#             ],\n#             \"name\": \"GigabitEthernet0/0/0/1\",\n#             \"type\": \"gigabitethernet\"\n#         }\n#     ],\n#\n#  \"commands\": [\n#         \"no router ospf LAB1 area 0.0.0.3 interface GigabitEthernet 0/0/0/1\"\n#     ]\n#\n#  \"after\": []\n#\n#\n# -----------\n# After state\n# -----------\n#\n# RP/0/0/CPU0:an-iosxr-02#show running-config router ospf\n# Thu Oct 23 06:34:38.319 UTC\n# router ospf LAB\n#  area 0.0.0.0\n#  !\n#  area 0.0.0.9\n#  !\n# !\n# router ospf LAB1\n#  area 0.0.0.1\n#  !\n#  area 0.0.0.3\n#  !\n# !\n# router ospf LAB3\n#  area 0.0.0.3\n#  !\n# !\n# router ospf ipv4\n# !\n\n# Using parsed\n# parsed.cfg\n# ------------\n# router ospf LAB\n#  area 0.0.0.0\n#  !\n#  area 0.0.0.9\n#  !\n# !\n# router ospf LAB1\n#  area 0.0.0.1\n#  !\n#  area 0.0.0.3\n#  !\n# !\n# router ospf LAB3\n#  area 0.0.0.3\n#   interface GigabitEthernet0/0/0/0\n#    cost 20\n#    authentication message-digest keychain cisco\n#   !\n#  !\n# !\n# router ospf ipv4\n# !\n- name: Parsed the device configuration to get output commands\n  cisco.iosxr.iosxr_ospf_interfaces:\n    running_config: \"{{ lookup('file', './parsed.cfg') }}\"\n    state: parsed\n#\n#\n# -------------------------\n# Module Execution Result\n# -------------------------\n#\n#\n# \"parsed\": [\n#         {\n#             \"address_family\": [\n#                 {\n#                     \"afi\": \"ipv4\",\n#                     \"authentication\": {\n#                         \"message_digest\": {\n#                             \"keychain\": \"cisco\"\n#                         }\n#                     },\n#                     \"cost\": 20,\n#                     \"processes\": [\n#                         {\n#                             \"area\": {\n#                                 \"area_id\": \"0.0.0.3\"\n#                             },\n#                             \"process_id\": \"LAB3\"\n#                         }\n#                     ]\n#                 }\n#             ],\n#             \"name\": \"GigabitEthernet0/0/0/0\",\n#             \"type\": \"gigabitethernet\"\n#         }\n#     ]\n#\n# Using rendered\n#\n#\n- name: Render the commands for provided  configuration\n  cisco.iosxr.iosxr_ospf_interfaces:\n    config:\n      - name: GigabitEthernet0/0/0/0\n        type: gigabitethernet\n        address_family:\n          - afi: ipv4\n            processes:\n             - process_id: \"LAB3\"\n               area:\n                 area_id: 0.0.0.3\n            cost: 20\n            authentication:\n              message_digest:\n                keychain: cisco\n          - afi: ipv6\n            processes:\n             - process_id: \"LAB3\"\n               area:\n                 area_id: 0.0.0.2\n            cost: 30\n    state: rendered\n\n#\n#\n# -------------------------\n# Module Execution Result\n# -------------------------\n#\n#\n# \"rendered\": [\n#        \"router ospf LAB3 area 0.0.0.3 interface GigabitEthernet 0/0/0/0 cost 20\",\n#        \"router ospf LAB3 area 0.0.0.3 interface GigabitEthernet 0/0/0/0 authentication message-digest\",\n#        \"router ospf LAB3 area 0.0.0.3 interface GigabitEthernet 0/0/0/0 authentication message-digest keychain cisco\",\n#        \"router ospfv3 LAB3 area 0.0.0.2 interface GigabitEthernet 0/0/0/0 cost 30\"\n#     ]\n\n\n# Using gathered\n#\n# Before state:\n# -------------\n#\n# RP/0/0/CPU0:an-iosxr-02#show running-config router ospf\n# Thu Oct 23 06:50:38.743 UTC\n# router ospf LAB\n#  area 0.0.0.0\n#  !\n#  area 0.0.0.9\n#  !\n# !\n# router ospf LAB1\n#  area 0.0.0.1\n#  !\n#  area 0.0.0.3\n#  !\n# !\n# router ospf LAB3\n#  area 0.0.0.3\n#   interface GigabitEthernet0/0/0/0\n#    cost 20\n#    authentication message-digest keychain cisco\n#   !\n#  !\n# !\n# router ospf ipv4\n# !\n\n\n- name: Gather ospf_interfaces routes configuration\n  cisco.iosxr.iosxr_ospf_interfaces:\n    state: gathered\n#\n#\n# -------------------------\n# Module Execution Result\n# -------------------------\n#\n#    \"gathered\": [\n#         {\n#             \"address_family\": [\n#                 {\n#                     \"afi\": \"ipv4\",\n#                     \"authentication\": {\n#                         \"message_digest\": {\n#                             \"keychain\": \"cisco\"\n#                         }\n#                     },\n#                     \"cost\": 20,\n#                     \"processes\": [\n#                         {\n#                             \"area\": {\n#                                 \"area_id\": \"0.0.0.3\"\n#                             },\n#                             \"process_id\": \"LAB3\"\n#                         }\n#                     ]\n#                 },\n#                 {\n#                     \"afi\": \"ipv6\",\n#                     \"cost\": 30,\n#                     \"processes\": [\n#                         {\n#                             \"area\": {\n#                                 \"area_id\": \"0.0.0.2\"\n#                             },\n#                             \"process_id\": \"LAB3\"\n#                         }\n#                     ]\n#                 }\n#             ],\n#             \"name\": \"GigabitEthernet0/0/0/0\",\n#             \"type\": \"gigabitethernet\"\n#         }\n#     ]\n#\n"
  },
  "cisco.iosxr.iosxr_ospfv2": {
    "doc": {
      "description": "This module manages global OSPFv2 configuration on devices running Cisco IOS-XR",
      "has_action": true,
      "notes": "This module works with connection C(network_cli). See L(the IOS-XR Platform Options,../network/user_guide/platform_iosxr.html)",
      "options": {
        "config": {
          "aliases": [],
          "description": "A list of OSPFv2 process configuration",
          "type": "dict",
          "required": false,
          "suboptions": {
            "processes": {
              "aliases": [],
              "description": "A list of OSPFv2 instances configuration",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "address_family_unicast": {
                  "aliases": [],
                  "description": "Enable unicast topology for ipv4 address family",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "adjacency_stagger": {
                  "aliases": [],
                  "description": "Stagger OSPFv2 adjacency bring up",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "disable": {
                      "aliases": [],
                      "description": "Disable stagger OSPFv2 adjacency",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "max_adjacency": {
                      "aliases": [],
                      "description": "Maximum simultaneous neighbors to bring up",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "min_adjacency": {
                      "aliases": [],
                      "description": "Initial number of neighbors to bring up per area (default 2)",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "apply_weight": {
                  "aliases": [],
                  "description": "Enable weights configured under interfaces for load sharing",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "bandwidth": {
                      "aliases": [],
                      "description": "Reference bandwidth to use for calculation (Mbits/sec)",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "default_weight": {
                      "aliases": [],
                      "description": "Specify default weight value to use when it is not configured under interface",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "areas": {
                  "aliases": [],
                  "description": "Configure OSPFv2 areas' properties",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "area_id": {
                      "aliases": [],
                      "description": "Area ID as IP address or integer",
                      "type": "str",
                      "required": true,
                      "suboptions": {}
                    },
                    "authentication": {
                      "aliases": [],
                      "description": "Enable authentication",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "keychain": {
                          "aliases": [],
                          "description": "Specify keychain name",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "message_digest": {
                          "aliases": [],
                          "description": "Use message-digest authentication",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "keychain": {
                              "aliases": [],
                              "description": "Specify keychain name",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "no_auth": {
                          "aliases": [],
                          "description": "Use no authentication",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "authentication_key": {
                      "aliases": [],
                      "description": "Used to mention authentication password (key)",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "clear": {
                          "aliases": [],
                          "description": "Specifies an UNENCRYPTED password (key) will follow",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "encrypted": {
                          "aliases": [],
                          "description": "Specifies an ENCRYPTED password (key) will follow",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "password": {
                          "aliases": [],
                          "description": "The OSPFv2 password (key)",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "bfd": {
                      "aliases": [],
                      "description": "Configure BFD parameters",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "fast_detect": {
                          "aliases": [],
                          "description": "Configure fast detection",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "set": {
                              "aliases": [],
                              "description": "Enable fast detection only",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "strict_mode": {
                              "aliases": [],
                              "description": "Hold down neighbor session until BFD session is up",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "minimum_interval": {
                          "aliases": [],
                          "description": "Hello interval in milli-seconds",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "multiplier": {
                          "aliases": [],
                          "description": "Detect multiplier",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "cost": {
                      "aliases": [],
                      "description": "Interface cost",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "dead_interval": {
                      "aliases": [],
                      "description": "Interval after which a neighbor is declared dead",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "default_cost": {
                      "aliases": [],
                      "description": "Set the summary default-cost of a NSSA/stub area. Stub's advertised external route metric",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "hello_interval": {
                      "aliases": [],
                      "description": "Time between HELLO packets",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "mpls": {
                      "aliases": [],
                      "description": "Configure MPLS routing protocol parameters",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "ldp": {
                          "aliases": [],
                          "description": "Configure LDP parameters",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "auto_config": {
                              "aliases": [],
                              "description": "Enable LDP IGP interface auto-configuration",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "sync": {
                              "aliases": [],
                              "description": "Enable LDP IGP synchronization",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "sync_igp_shortcuts": {
                              "aliases": [],
                              "description": "LDP sync for igp-shortcut tunnels",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "traffic_eng": {
                          "aliases": [],
                          "description": "Configure an ospf area to run MPLS Traffic Engineering",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "mtu_ignore": {
                      "aliases": [],
                      "description": "Enable/Disable ignoring of MTU in DBD packets",
                      "type": "str",
                      "required": false,
                      "choices": [
                        "enable",
                        "disable"
                      ],
                      "suboptions": {}
                    },
                    "nssa": {
                      "aliases": [],
                      "description": "NSSA settings for the area",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "default_information_originate": {
                          "aliases": [],
                          "description": "Originate default Type 7 LSA",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "metric": {
                              "aliases": [],
                              "description": "OSPFv2 default metric",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "metric_type": {
                              "aliases": [],
                              "description": "Metric type for default routes",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "no_redistribution": {
                          "aliases": [],
                          "description": "Do not send redistributed LSAs into NSSA area",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "no_summary": {
                          "aliases": [],
                          "description": "Do not send summary LSAs into NSSA area",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "set": {
                          "aliases": [],
                          "description": "Configure area as NSSA",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "translate": {
                          "aliases": [],
                          "description": "Translate LSA",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "type7": {
                              "aliases": [],
                              "description": "Translate from Type 7 to Type 5",
                              "type": "dict",
                              "required": false,
                              "suboptions": {
                                "always": {
                                  "aliases": [],
                                  "description": "Always translate LSAs",
                                  "type": "bool",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "ranges": {
                      "aliases": [],
                      "description": "Summarize routes matching address/mask (border routers only)",
                      "type": "list",
                      "required": false,
                      "elements": "dict",
                      "suboptions": {
                        "address": {
                          "aliases": [],
                          "description": "IP in Prefix format (x.x.x.x/len)",
                          "type": "str",
                          "required": true,
                          "suboptions": {}
                        },
                        "advertise": {
                          "aliases": [],
                          "description": "Advertise this range (default)",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "not_advertise": {
                          "aliases": [],
                          "description": "DoNotAdvertise this range",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "route_policy": {
                      "aliases": [],
                      "description": "Specify the route-policy to filter type 3 LSAs (list can have one inbound and/or one outbound policy only)",
                      "type": "list",
                      "required": false,
                      "elements": "dict",
                      "suboptions": {
                        "direction": {
                          "aliases": [],
                          "description": "Specify inbound or outbound",
                          "type": "str",
                          "required": false,
                          "choices": [
                            "in",
                            "out"
                          ],
                          "suboptions": {}
                        },
                        "parameters": {
                          "aliases": [],
                          "description": "Specify parameter values for the policy",
                          "type": "list",
                          "required": false,
                          "elements": "str",
                          "suboptions": {}
                        }
                      }
                    },
                    "stub": {
                      "aliases": [],
                      "description": "Settings for configuring the area as a stub",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "no_summary": {
                          "aliases": [],
                          "description": "Do not send summary LSA into stub area",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "set": {
                          "aliases": [],
                          "description": "Configure the area as a stub",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "transmit_delay": {
                      "aliases": [],
                      "description": "Estimated time needed to send link-state update packet",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "virtual_link": {
                      "aliases": [],
                      "description": "Define a virtual link",
                      "type": "list",
                      "required": false,
                      "elements": "dict",
                      "suboptions": {
                        "authentication": {
                          "aliases": [],
                          "description": "Enable authentication",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "keychain": {
                              "aliases": [],
                              "description": "Specify keychain name",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            },
                            "message_digest": {
                              "aliases": [],
                              "description": "Use message-digest authentication",
                              "type": "dict",
                              "required": false,
                              "suboptions": {
                                "keychain": {
                                  "aliases": [],
                                  "description": "Specify keychain name",
                                  "type": "str",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            },
                            "no_auth": {
                              "aliases": [],
                              "description": "Use no authentication",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "authentication_key": {
                          "aliases": [],
                          "description": "Used to mention authentication password (key)",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "clear": {
                              "aliases": [],
                              "description": "Specifies an UNENCRYPTED password (key) will follow",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            },
                            "encrypted": {
                              "aliases": [],
                              "description": "Specifies an ENCRYPTED password (key) will follow",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            },
                            "password": {
                              "aliases": [],
                              "description": "The OSPFv2 password (key)",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "dead_interval": {
                          "aliases": [],
                          "description": "Interval after which a neighbor is declared dead",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "hello_interval": {
                          "aliases": [],
                          "description": "Time between HELLO packets",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "id": {
                          "aliases": [],
                          "description": "Router-ID of virtual link neighbor (A.B.C.D)",
                          "type": "str",
                          "required": true,
                          "suboptions": {}
                        },
                        "message_digest_key": {
                          "aliases": [],
                          "description": "Message digest authentication password (key)",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "id": {
                              "aliases": [],
                              "description": "Key ID (1-255)",
                              "type": "int",
                              "required": true,
                              "suboptions": {}
                            },
                            "md5": {
                              "aliases": [],
                              "description": "Use MD5 Algorithm",
                              "type": "dict",
                              "required": false,
                              "suboptions": {
                                "clear": {
                                  "aliases": [],
                                  "description": "Specifies an UNENCRYPTED password (key) will follow",
                                  "type": "bool",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "encrypted": {
                                  "aliases": [],
                                  "description": "Specifies an ENCRYPTED password (key) will follow",
                                  "type": "bool",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "password": {
                                  "aliases": [],
                                  "description": "The OSPFv2 password (key)",
                                  "type": "str",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            }
                          }
                        },
                        "retransmit_interval": {
                          "aliases": [],
                          "description": "Delay between LSA retransmissions",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "transmit_delay": {
                          "aliases": [],
                          "description": "Link state transmit delay",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    }
                  }
                },
                "authentication": {
                  "aliases": [],
                  "description": "Enable authentication",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "keychain": {
                      "aliases": [],
                      "description": "Specify keychain name",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "message_digest": {
                      "aliases": [],
                      "description": "Use message-digest authentication",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "keychain": {
                          "aliases": [],
                          "description": "Specify keychain name",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "set": {
                          "aliases": [],
                          "description": "Specify message-digest selection",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "no_auth": {
                      "aliases": [],
                      "description": "Use no authentication",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "authentication_key": {
                  "aliases": [],
                  "description": "Used to mention authentication password (key)",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "clear": {
                      "aliases": [],
                      "description": "Specifies an UNENCRYPTED password (key) will follow",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "encrypted": {
                      "aliases": [],
                      "description": "Specifies an ENCRYPTED password (key) will follow",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "password": {
                      "aliases": [],
                      "description": "The OSPFv2 password (key)",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "auto_cost": {
                  "aliases": [],
                  "description": "Calculate OSPFv2 interface cost according to bandwidth",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "disable": {
                      "aliases": [],
                      "description": "Assign OSPFv2 cost based on interface type",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "reference_bandwidth": {
                      "aliases": [],
                      "description": "Specify reference bandwidth in megabits per sec",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "bfd": {
                  "aliases": [],
                  "description": "Configure BFD parameters",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "fast_detect": {
                      "aliases": [],
                      "description": "Configure fast detection",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "set": {
                          "aliases": [],
                          "description": "Enable fast detection only",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "strict_mode": {
                          "aliases": [],
                          "description": "Hold down neighbor session until BFD session is up",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "minimum_interval": {
                      "aliases": [],
                      "description": "Hello interval in milli-seconds",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "multiplier": {
                      "aliases": [],
                      "description": "Detect multiplier",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "capability": {
                  "aliases": [],
                  "description": "Enable specific OSPFv2 feature",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "opaque": {
                      "aliases": [],
                      "description": "Configure opaque LSA",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "disable": {
                          "aliases": [],
                          "description": "Disable Opaque LSA capability",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "set": {
                          "aliases": [],
                          "description": "Enable opaque LSA",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "type7": {
                      "aliases": [],
                      "description": "NSSA capability",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "cost": {
                  "aliases": [],
                  "description": "Interface cost (1-65535)",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "database_filter": {
                  "aliases": [],
                  "description": "Filter OSPFv2 LSA during synchronization and flooding (all outgoing LSA). Enable/Disable filtering",
                  "type": "str",
                  "required": false,
                  "choices": [
                    "enable",
                    "disable"
                  ],
                  "suboptions": {}
                },
                "dead_interval": {
                  "aliases": [],
                  "description": "Interval after which a neighbor is declared dead",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "default_information_originate": {
                  "aliases": [],
                  "description": "Distribute default route",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "always": {
                      "aliases": [],
                      "description": "Always advertise default route",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "metric": {
                      "aliases": [],
                      "description": "OSPFv2 default metric",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "metric_type": {
                      "aliases": [],
                      "description": "OSPFv2 metric type for default routes",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "route_policy": {
                      "aliases": [],
                      "description": "Apply route-policy to default-information origination",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "set": {
                      "aliases": [],
                      "description": "Enable distribution of default route",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "default_metric": {
                  "aliases": [],
                  "description": "Set metric of redistributed routes",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "demand_circuit": {
                  "aliases": [],
                  "description": "Enable/Disable OSPFv2 demand circuit",
                  "type": "str",
                  "required": false,
                  "choices": [
                    "enable",
                    "disable"
                  ],
                  "suboptions": {}
                },
                "distance": {
                  "aliases": [],
                  "description": "Define an administrative distance",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "admin_distance": {
                      "aliases": [],
                      "description": "Administrative distance",
                      "type": "list",
                      "required": false,
                      "elements": "dict",
                      "suboptions": {
                        "access_list": {
                          "aliases": [],
                          "description": "Access list name",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "source": {
                          "aliases": [],
                          "description": "Source IP address",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "value": {
                          "aliases": [],
                          "description": "Distance value",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "wildcard": {
                          "aliases": [],
                          "description": "IP wild card bits (A.B.C.D)",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "ospf_distance": {
                      "aliases": [],
                      "description": "OSPFv2 administrative distance",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "external": {
                          "aliases": [],
                          "description": "Distance for external routes",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "inter_area": {
                          "aliases": [],
                          "description": "Distance for inter-area routes",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "intra_area": {
                          "aliases": [],
                          "description": "Distance for intra-area routes",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    }
                  }
                },
                "distribute_bgp_ls": {
                  "aliases": [],
                  "description": "Enable Distribution of LSAs to external services",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "instance_id": {
                      "aliases": [],
                      "description": "Set distribution process instance identifier",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "throttle": {
                      "aliases": [],
                      "description": "Throttle time between successive LSA updates",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "distribute_link_state": {
                  "aliases": [],
                  "description": "Enable Distribution of LSAs to external services",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "instance_id": {
                      "aliases": [],
                      "description": "Set distribution process instance identifier",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "throttle": {
                      "aliases": [],
                      "description": "Throttle time between successive LSA updates",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "distribute_list": {
                  "aliases": [],
                  "description": "Filter networks in routing updates (list can have one inbound and/or one outbound policy only)",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "access_list": {
                      "aliases": [],
                      "description": "Inbound/outbound access-list",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "direction": {
                      "aliases": [],
                      "description": "Filter incoming/outgoing routing updates",
                      "type": "str",
                      "required": false,
                      "choices": [
                        "in",
                        "out"
                      ],
                      "suboptions": {}
                    },
                    "outgoing_params": {
                      "aliases": [],
                      "description": "Specify additional parameters for outgoing updates only",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "id": {
                          "aliases": [],
                          "description": "For BGP, specify AS number. 2-byte AS number (or) 4-byte AS number in asdot (X.Y) format (or) 4-byte AS number in asplain format\nFor OSPF, specify OSPFv2 instance name",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "route_type": {
                          "aliases": [],
                          "description": "Type of routes",
                          "type": "str",
                          "required": false,
                          "choices": [
                            "bgp",
                            "connected",
                            "dagr",
                            "ospf",
                            "static"
                          ],
                          "suboptions": {}
                        }
                      }
                    },
                    "route_policy": {
                      "aliases": [],
                      "description": "Route Policy to filter OSPFv2 prefixes (for incoming updates only)",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "external_out": {
                  "aliases": [],
                  "description": "Enable/Disable advertisement of intra-area prefixes as external",
                  "type": "str",
                  "required": false,
                  "choices": [
                    "enable",
                    "disable"
                  ],
                  "suboptions": {}
                },
                "flood_reduction": {
                  "aliases": [],
                  "description": "Enable/Disable OSPFv2 Flood Reduction",
                  "type": "str",
                  "required": false,
                  "choices": [
                    "enable",
                    "disable"
                  ],
                  "suboptions": {}
                },
                "hello_interval": {
                  "aliases": [],
                  "description": "Time between HELLO packets (<1-65535> seconds)",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "ignore_lsa_mospf": {
                  "aliases": [],
                  "description": "Do not complain upon receiving MOSPFv2 Type 6 LSA",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "link_down_fast_detect": {
                  "aliases": [],
                  "description": "Enable fast or early detection of link-down events",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "log_adjacency_changes": {
                  "aliases": [],
                  "description": "Log adjacency state changes",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "detail": {
                      "aliases": [],
                      "description": "Log all state changes",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "disable": {
                      "aliases": [],
                      "description": "Disable log adjacency changes",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "set": {
                      "aliases": [],
                      "description": "Set log adjacency",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "loopback_stub_network": {
                  "aliases": [],
                  "description": "Advertise loopback as a stub network",
                  "type": "str",
                  "required": false,
                  "choices": [
                    "enable",
                    "disable"
                  ],
                  "suboptions": {}
                },
                "max_lsa": {
                  "aliases": [],
                  "description": "Feature to limit the number of non-self-originated LSAs",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "ignore_count": {
                      "aliases": [],
                      "description": "Set count on how many times adjacencies can be suppressed",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "ignore_time": {
                      "aliases": [],
                      "description": "Set number of minutes during which all adjacencies are suppressed",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "reset_time": {
                      "aliases": [],
                      "description": "Set number of minutes after which ignore-count is reset to zero",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "threshold": {
                      "aliases": [],
                      "description": "Threshold value (%) at which to generate a warning message",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "warning_only": {
                      "aliases": [],
                      "description": "Log a warning message when limit is exceeded",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "max_metric": {
                  "aliases": [],
                  "description": "Set maximum metric",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "router_lsa": {
                      "aliases": [],
                      "description": "Maximum metric in self-originated router-LSAs",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "external_lsa": {
                          "aliases": [],
                          "description": "External LSA configuration",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "max_metric_value": {
                              "aliases": [],
                              "description": "Set max metric value for external LSAs",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "set": {
                              "aliases": [],
                              "description": "Set external-lsa attribute",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "include_stub": {
                          "aliases": [],
                          "description": "Advertise Max metric for Stub links as well",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "on_startup": {
                          "aliases": [],
                          "description": "Effective only at startup",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "set": {
                              "aliases": [],
                              "description": "Set on-startup attribute",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "wait_for_bgp_asn": {
                              "aliases": [],
                              "description": "ASN of BGP to wait for",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "wait_period": {
                              "aliases": [],
                              "description": "Wait period in seconds after startup",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "set": {
                          "aliases": [],
                          "description": "Set router-lsa attribute",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "summary_lsa": {
                          "aliases": [],
                          "description": "Summary LSAs configuration",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "max_metric_value": {
                              "aliases": [],
                              "description": "Max metric value for summary LSAs",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "set": {
                              "aliases": [],
                              "description": "Set summary-lsa attribute",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "message_digest_key": {
                  "aliases": [],
                  "description": "Message digest authentication password (key)",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "id": {
                      "aliases": [],
                      "description": "Key ID",
                      "type": "int",
                      "required": true,
                      "suboptions": {}
                    },
                    "md5": {
                      "aliases": [],
                      "description": "Use MD5 Algorithm",
                      "type": "dict",
                      "required": true,
                      "suboptions": {
                        "clear": {
                          "aliases": [],
                          "description": "Specifies an UNENCRYPTED password (key) will follow",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "encrypted": {
                          "aliases": [],
                          "description": "Specifies an ENCRYPTED password (key) will follow",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "password": {
                          "aliases": [],
                          "description": "The OSPFv2 password (key)",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    }
                  }
                },
                "microloop_avoidance": {
                  "aliases": [],
                  "description": "Avoid microloops",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "protected": {
                      "aliases": [],
                      "description": "Avoid microloops for protected prefixes only)",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "rib_update_delay": {
                      "aliases": [],
                      "description": "Delay to introduce between SPF and RIB updates",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "segment_routing": {
                      "aliases": [],
                      "description": "Enable segment routing microloop avoidance",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "monitor_convergence": {
                  "aliases": [],
                  "description": "Enables OSPFv2 route convergence monitoring",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "prefix_list": {
                      "aliases": [],
                      "description": "Enables Individual Prefix Monitoring",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "track_external_routes": {
                      "aliases": [],
                      "description": "Enables Tracking External(Type-5/7) Prefix monitoring",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "track_ip_frr": {
                      "aliases": [],
                      "description": "Enables Tracking IP-Frr Convergence",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "track_summary_routes": {
                      "aliases": [],
                      "description": "Enables Tracking Summary(Inter-Area) Prefix monitoring",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "mpls": {
                  "aliases": [],
                  "description": "Configure MPLS routing protocol parameters",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "ldp": {
                      "aliases": [],
                      "description": "Configure LDP parameters",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "auto_config": {
                          "aliases": [],
                          "description": "Enable LDP IGP interface auto-configuration",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "sync": {
                          "aliases": [],
                          "description": "Enable LDP IGP synchronization",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "sync_igp_shortcuts": {
                          "aliases": [],
                          "description": "LDP sync for igp-shortcut tunnels",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "traffic_eng": {
                      "aliases": [],
                      "description": "Routing protocol commands for MPLS Traffic Engineering",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "autoroute_exclude": {
                          "aliases": [],
                          "description": "Exclude IP address destinations from using TE tunnels",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "parameters": {
                              "aliases": [],
                              "description": "Specify parameter values for the policy",
                              "type": "list",
                              "required": false,
                              "elements": "str",
                              "suboptions": {}
                            },
                            "route_policy": {
                              "aliases": [],
                              "description": "Policy name",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "igp_intact": {
                          "aliases": [],
                          "description": "Retain one or more IPv4 nexthops with tunnel nexthops",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "ldp_sync_update": {
                          "aliases": [],
                          "description": "Enable LDP sync induced metric propagation",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "multicast_intact": {
                          "aliases": [],
                          "description": "Publish multicast-intact paths to RIB",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "router_id": {
                          "aliases": [],
                          "description": "Traffic Engineering stable IP address for system",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    }
                  }
                },
                "mtu_ignore": {
                  "aliases": [],
                  "description": "Enable/Disable ignoring of MTU in DBD packets",
                  "type": "str",
                  "required": false,
                  "choices": [
                    "enable",
                    "disable"
                  ],
                  "suboptions": {}
                },
                "network": {
                  "aliases": [],
                  "description": "Network type",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "broadcast": {
                      "aliases": [],
                      "description": "Specify OSPFv2 broadcast multi-access network",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "non_broadcast": {
                      "aliases": [],
                      "description": "Specify OSPFv2 NBMA network",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "point_to_multipoint": {
                      "aliases": [],
                      "description": "Specify OSPFv2 point-to-multipoint network",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "point_to_point": {
                      "aliases": [],
                      "description": "Specify OSPFv2 point-to-point network",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "nsf": {
                  "aliases": [],
                  "description": "Non-stop forwarding",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "cisco": {
                      "aliases": [],
                      "description": "Cisco Non-stop forwarding",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "enforce_global": {
                          "aliases": [],
                          "description": "Cancel NSF restart when non-NSF-aware neighbors detected for the whole OSPFv2 process",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "set": {
                          "aliases": [],
                          "description": "Enable Cisco NSF",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "flush_delay_time": {
                      "aliases": [],
                      "description": "Maximum time allowed for external route learning",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "ietf": {
                      "aliases": [],
                      "description": "IETF graceful restart",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "helper_disable": {
                          "aliases": [],
                          "description": "Disable router's helper support level",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "set": {
                          "aliases": [],
                          "description": "Only enable ietf option",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "interval": {
                      "aliases": [],
                      "description": "Minimum interval between NSF restarts (<90-3600> seconds)",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "lifetime": {
                      "aliases": [],
                      "description": "Maximum route lifetime following restart (<90-1800> seconds)",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "nsr": {
                  "aliases": [],
                  "description": "Enable NSR for all VRFs in this process. 'False' option to disable NSR for all VRFs in this process",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "packet_size": {
                  "aliases": [],
                  "description": "Size of OSPFv2 packets to use. min=576 max=MTU bytes",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "passive": {
                  "aliases": [],
                  "description": "Enable/Disable passive",
                  "type": "str",
                  "required": false,
                  "choices": [
                    "enable",
                    "disable"
                  ],
                  "suboptions": {}
                },
                "prefix_suppression": {
                  "aliases": [],
                  "description": "Suppress advertisement of the prefixes",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "secondary_address": {
                      "aliases": [],
                      "description": "Enable/Disable secondary address suppression",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "set": {
                      "aliases": [],
                      "description": "Set the suppression option",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "priority": {
                  "aliases": [],
                  "description": "Router priority",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "process_id": {
                  "aliases": [],
                  "description": "The OSPFv2 Process ID",
                  "type": "str",
                  "required": true,
                  "suboptions": {}
                },
                "protocol_shutdown": {
                  "aliases": [],
                  "description": "Protocol specific configuration",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "host_mode": {
                      "aliases": [],
                      "description": "Only traffic destined for this box allowed(cisco-support)",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "limit": {
                      "aliases": [],
                      "description": "High watermark for incoming priority events",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "high": {
                          "aliases": [],
                          "description": "Hello events are dropped when incoming event queue exceeds this value",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "low": {
                          "aliases": [],
                          "description": "DBD/LS Update/Req packets are dropped when incoming event queue exceeds this value",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "medium": {
                          "aliases": [],
                          "description": "LSA ACKs are dropped when incoming event queue exceeds this value",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "on_reload": {
                      "aliases": [],
                      "description": "Shutdown post reload only",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "set": {
                      "aliases": [],
                      "description": "Shutdown the OSPFv2 Protocol",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "redistribute": {
                  "aliases": [],
                  "description": "Redistribute information from another routing Protocol",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "id": {
                      "aliases": [],
                      "description": "OnePK application name for application routes (or) AS number for bgp and eigrp (or) instance name for isis and ospf",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "level": {
                      "aliases": [],
                      "description": "ISIS levels",
                      "type": "int",
                      "required": false,
                      "choices": [
                        "1",
                        "2",
                        "12"
                      ],
                      "suboptions": {}
                    },
                    "lsa_type_summary": {
                      "aliases": [],
                      "description": "LSA type 3 for redistributed routes",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "match": {
                      "aliases": [],
                      "description": "Redistribution of routes. For OSPFv2 - external/internal/nssa-external 1/2. For EIGRP - external/internal",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "metric": {
                      "aliases": [],
                      "description": "Metric for redistributed routes",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "metric_type": {
                      "aliases": [],
                      "description": "OSPFv2 exterior metric type for redistributed routes",
                      "type": "int",
                      "required": false,
                      "choices": [
                        "1",
                        "2"
                      ],
                      "suboptions": {}
                    },
                    "nssa_only": {
                      "aliases": [],
                      "description": "Redistribute to NSSA areas only",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "preserve_med": {
                      "aliases": [],
                      "description": "Preserve med of BGP routes",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "route_policy": {
                      "aliases": [],
                      "description": "Apply route-policy to redistribution",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "name": {
                          "aliases": [],
                          "description": "Name of the policy",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "parameters": {
                          "aliases": [],
                          "description": "Specify parameter values for the policy",
                          "type": "list",
                          "required": false,
                          "elements": "str",
                          "suboptions": {}
                        }
                      }
                    },
                    "route_type": {
                      "aliases": [],
                      "description": "Route type to redistribute",
                      "type": "str",
                      "required": false,
                      "choices": [
                        "application",
                        "bgp",
                        "connected",
                        "dagr",
                        "eigrp",
                        "isis",
                        "mobile",
                        "ospf",
                        "rip",
                        "static",
                        "subscriber"
                      ],
                      "suboptions": {}
                    },
                    "tag": {
                      "aliases": [],
                      "description": "Set tag for routes redistributed into OSPFv2",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "retransmit_interval": {
                  "aliases": [],
                  "description": "Delay between LSA retransmissions",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "router_id": {
                  "aliases": [],
                  "description": "OSPFv2 router-id in IPv4 address format (A.B.C.D)",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "security_ttl": {
                  "aliases": [],
                  "description": "Enable security",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "hops": {
                      "aliases": [],
                      "description": "Maximum number of IP hops allowed <1-254>",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "set": {
                      "aliases": [],
                      "description": "Enable ttl security",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "summary_in": {
                  "aliases": [],
                  "description": "Enable/Disable advertisement of external prefixes as inter-area",
                  "type": "str",
                  "required": false,
                  "choices": [
                    "enable",
                    "disable"
                  ],
                  "suboptions": {}
                },
                "summary_prefix": {
                  "aliases": [],
                  "description": "Configure IP address summaries",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "not_advertise": {
                      "aliases": [],
                      "description": "Suppress routes that match the specified prefix/mask pair",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "prefix": {
                      "aliases": [],
                      "description": "IP summary address/mask (A.B.C.D/prefix)",
                      "type": "str",
                      "required": true,
                      "suboptions": {}
                    },
                    "tag": {
                      "aliases": [],
                      "description": "Set tag",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "timers": {
                  "aliases": [],
                  "description": "Configure timer related constants",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "graceful_shutdown": {
                      "aliases": [],
                      "description": "Timers for graceful shutdown(cisco-support)",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "initial_delay": {
                          "aliases": [],
                          "description": "Delay before starting graceful shutdown",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "retain_routes": {
                          "aliases": [],
                          "description": "Time to keep routes active after graceful shutdown",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "lsa": {
                      "aliases": [],
                      "description": "OSPFv2 global LSA timers",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "group_pacing": {
                          "aliases": [],
                          "description": "OSPFv2 LSA group pacing timer. Interval between group of LSA being refreshed or maxaged",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "min_arrival": {
                          "aliases": [],
                          "description": "OSPFv2 MinLSArrival timer. The minimum interval in millisec between accepting the same LSA",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "refresh": {
                          "aliases": [],
                          "description": "OSPFv2 LSA refresh interval. How often self-originated LSAs should be refreshed, in seconds",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "pacing_flood": {
                      "aliases": [],
                      "description": "OSPFv2 flood pacing timer. Interval in msec to pace flooding on all interfaces",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "throttle": {
                      "aliases": [],
                      "description": "OSPFv2 throttle timers",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "fast_reroute": {
                          "aliases": [],
                          "description": "Fast-reroute throttle timer. Delay between end of SPF and start of the fast-reroute computation in milliseconds",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "lsa_all": {
                          "aliases": [],
                          "description": "LSA throttle timers for all types of OSPFv2 LSAs",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "initial_delay": {
                              "aliases": [],
                              "description": "Delay to generate first occurance of LSA in milliseconds",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "max_delay": {
                              "aliases": [],
                              "description": "Maximum delay between originating the same LSA in milliseconds",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "min_delay": {
                              "aliases": [],
                              "description": "Minimum delay between originating the same LSA in milliseconds",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "spf": {
                          "aliases": [],
                          "description": "OSPFv2 SPF throttle timers",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "change_delay": {
                              "aliases": [],
                              "description": "Delay between receiving a change to SPF calculation in milliseconds",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "max_wait": {
                              "aliases": [],
                              "description": "Maximum wait time in milliseconds for SPF calculations",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "second_delay": {
                              "aliases": [],
                              "description": "Delay between first and second SPF calculation in milliseconds",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "transmit_delay": {
                  "aliases": [],
                  "description": "Estimated time needed to send link-state update packet",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "weight": {
                  "aliases": [],
                  "description": "Interface weight",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                }
              }
            }
          }
        },
        "running_config": {
          "aliases": [],
          "description": "This option is used only with state I(parsed).\nThe value of this option should be the output received from the IOS-XR device by executing the command B(show running-config router ospf).\nThe state I(parsed) reads the configuration from C(running_config) option and transforms it into Ansible structured data as per the resource module's argspec and the value is then returned in the I(parsed) key within the result.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The state the configuration should be left in.",
          "default": "merged",
          "type": "str",
          "required": false,
          "choices": [
            "merged",
            "replaced",
            "deleted",
            "parsed",
            "gathered",
            "rendered",
            "overridden"
          ],
          "suboptions": {}
        }
      },
      "short_description": "OSPFv2 resource module",
      "version_added": "1.0.0"
    },
    "examples": "\n# Using merged\n\n# Before state:\n# -------------\n#\n# RP/0/RP0/CPU0:anton#show running-config router ospf\n# Thu Jun 11 15:54:44.569 UTC\n# % No such configuration item(s)\n#\n\n- name: Merge provided OSPFv2 configuration with the existing configuration\n  cisco.iosxr.iosxr_ospfv2:\n    config:\n      processes:\n      - process_id: '27'\n        areas:\n        - area_id: '10'\n          hello_interval: 2\n          authentication:\n            keychain: ansi11393\n      - process_id: '26'\n        adjacency_stagger:\n          max_adjacency: 20\n          min_adjacency: 10\n      - process_id: '10'\n        authentication:\n          keychain: ansible_test1102\n        areas:\n        - area_id: '11'\n          default_cost: 5\n          cost: 11\n        - area_id: 22\n          default_cost: 6\n      - process_id: '30'\n        areas:\n        - area_id: 11\n          default_cost: 5\n        - area_id: 22\n          default_cost: 6\n\n        cost: 2\n        default_metric: 10\n        transmit_delay: 2\n        hello_interval: 1\n        dead_interval: 2\n        retransmit_interval: 2\n        weight: 2\n        packet_size: 577\n        priority: 1\n        router_id: 2.2.2.2\n        demand_circuit: enable\n        passive: disable\n        summary_in: enable\n        flood_reduction: disable\n        mtu_ignore: enable\n        external_out: disable\n    state: merged\n\n#\n#\n# ------------------------\n# Module Execution Result\n# ------------------------\n#\n#  \"before\": {}\n#\n#  \"commands\": [\n#        \"router ospf 30\",\n#        \"cost 2\",\n#        \"weight 2\",\n#        \"passive disable\",\n#        \"priority 1\",\n#        \"flood-reduction disable\",\n#        \"default-metric 10\",\n#        \"router-id 2.2.2.2\",\n#        \"demand-circuit enable\",\n#        \"packet-size 577\",\n#        \"transmit-delay 2\",\n#        \"summary-in enable\",\n#        \"external-out disable\",\n#        \"dead-interval 2\",\n#        \"hello-interval 1\",\n#        \"retransmit-interval 2\",\n#        \"mtu-ignore enable\",\n#        \"area 11 default-cost 5\",\n#        \"area 22 default-cost 6\",\n#        \"router ospf 26\",\n#        \"adjacency stagger 10 20\",\n#        \"authentication message-digest keychain ansible1101pass\",\n#        \"router ospf 27\",\n#        \"area 10 authentication keychain ansi11393\",\n#        \"area 10 hello-interval 2\",\n#        \"router ospf 10\",\n#        \"authentication keychain ansible_test1102\",\n#        \"area 11 default-cost 5\",\n#        \"area 11 cost 11\",\n#        \"area 22 default-cost 6\"\n#    ]\n#\n#  \"after\": {\n#        \"processes\": [\n#            {\n#                \"areas\": [\n#                    {\n#                        \"area_id\": \"11\",\n#                        \"cost\": 11,\n#                        \"default_cost\": 5\n#                    },\n#                    {\n#                        \"area_id\": \"22\",\n#                        \"default_cost\": 6\n#                    }\n#                ],\n#                \"authentication\": {\n#                    \"keychain\": \"ansible_test1102\"\n#                },\n#                \"process_id\": \"10\"\n#            },\n#            {\n#                \"adjacency_stagger\": {\n#                    \"max_adjacency\": 20,\n#                    \"min_adjacency\": 10\n#                },\n#                \"authentication\": {\n#                    \"message_digest\": {\n#                        \"keychain\": \"ansible1101pass\"\n#                    }\n#                },\n#                \"process_id\": \"26\"\n#            },\n#            {\n#                \"areas\": [\n#                    {\n#                        \"area_id\": \"10\",\n#                        \"authentication\": {\n#                            \"keychain\": \"ansi11393\"\n#                        },\n#                        \"hello_interval\": 2\n#                    }\n#                ],\n#                \"process_id\": \"27\"\n#            },\n#            {\n#                \"areas\": [\n#                    {\n#                        \"area_id\": \"11\",\n#                        \"default_cost\": 5\n#                    },\n#                    {\n#                        \"area_id\": \"22\",\n#                        \"default_cost\": 6\n#                    }\n#                ],\n#                \"cost\": 2,\n#                \"dead_interval\": 2,\n#                \"default_metric\": 10,\n#                \"demand_circuit\": \"enable\",\n#                \"external_out\": \"disable\",\n#                \"flood_reduction\": \"disable\",\n#                \"hello_interval\": 1,\n#                \"mtu_ignore\": \"enable\",\n#                \"packet_size\": 577,\n#                \"passive\": \"disable\",\n#                \"priority\": 1,\n#                \"process_id\": \"30\",\n#                \"retransmit_interval\": 2,\n#                \"router_id\": \"2.2.2.2\",\n#                \"summary_in\": \"enable\",\n#                \"transmit_delay\": 2,\n#                \"weight\": 2\n#            }\n#        ]\n#    }\n#\n#\n# ------------\n# After state\n# ------------\n#\n# RP/0/RP0/CPU0:anton#show running-config router ospf\n# Thu Jun 11 16:06:44.406 UTC\n# router ospf 10\n#  authentication keychain ansible_test1102\n#  area 11\n#   cost 11\n#   default-cost 5\n#  !\n#  area 22\n#   default-cost 6\n#  !\n# !\n# router ospf 26\n#  authentication message-digest keychain ansible1101pass\n#  adjacency stagger 10 20\n# !\n# router ospf 27\n#  area 10\n#  authentication keychain ansi11393\n#   hello-interval 2\n# !\n# !\n# router ospf 30\n#  router-id 2.2.2.2\n#  summary-in enable\n#  external-out disable\n#  cost 2\n#  packet-size 577\n#  weight 2\n#  passive disable\n#  priority 1\n#  mtu-ignore enable\n#  flood-reduction disable\n#  dead-interval 2\n#  retransmit-interval 2\n#  demand-circuit enable\n#  hello-interval 1\n#  transmit-delay 2\n#  default-metric 10\n#  area 11\n#   default-cost 5\n#  !\n#  area 22\n#   default-cost 6\n#  !\n# !\n#\n\n\n# Using replaced\n#\n# ------------\n# Before state\n# ------------\n#\n#\n# RP/0/RP0/CPU0:anton#show running-config router ospf\n# Thu Jun 11 16:06:44.406 UTC\n# router ospf 10\n#  authentication keychain ansible_test1102\n#  area 11\n#   cost 11\n#   default-cost 5\n#  !\n#  area 22\n#   default-cost 6\n#  !\n# !\n# router ospf 26\n#  authentication message-digest keychain ansible1101pass\n#  adjacency stagger 10 20\n# !\n# router ospf 27\n#  area 10\n#  authentication keychain ansi11393\n#   hello-interval 2\n# !\n# !\n# router ospf 30\n#  router-id 2.2.2.2\n#  summary-in enable\n#  external-out disable\n#  cost 2\n#  packet-size 577\n#  weight 2\n#  passive disable\n#  priority 1\n#  mtu-ignore enable\n#  flood-reduction disable\n#  dead-interval 2\n#  retransmit-interval 2\n#  demand-circuit enable\n#  hello-interval 1\n#  transmit-delay 2\n#  default-metric 10\n#  area 11\n#   default-cost 5\n#  !\n#  area 22\n#   default-cost 6\n#  !\n# !\n#\n\n- name: Replace OSPFv2 routes configurations from the device\n  cisco.iosxr.iosxr_ospfv2:\n    config:\n      processes:\n      - process_id: 27\n        areas:\n        - area_id: 10\n          hello_interval: 2\n        - area_id: 20\n          cost: 2\n          default_cost: 2\n          authentication:\n            keychain: ansi11393\n      - process_id: 26\n        adjacency_stagger:\n          min_adjacency: 10\n          max_adjacency: 20\n    state: replaced\n\n#\n#\n# ------------------------\n# Module Execution Result\n# ------------------------\n#\n#  \"before\": {\n#        \"processes\": [\n#            {\n#                \"areas\": [\n#                    {\n#                        \"area_id\": \"11\",\n#                        \"cost\": 11,\n#                        \"default_cost\": 5\n#                    },\n#                    {\n#                        \"area_id\": \"22\",\n#                        \"default_cost\": 6\n#                    }\n#                ],\n#                \"authentication\": {\n#                    \"keychain\": \"ansible_test1102\"\n#                },\n#                \"process_id\": \"10\"\n#            },\n#            {\n#                \"adjacency_stagger\": {\n#                    \"max_adjacency\": 20,\n#                    \"min_adjacency\": 10\n#                },\n#                \"authentication\": {\n#                    \"message_digest\": {\n#                        \"keychain\": \"ansible1101pass\"\n#                    }\n#                },\n#                \"process_id\": \"26\"\n#            },\n#            {\n#                \"areas\": [\n#                    {\n#                        \"area_id\": \"10\",\n#                        \"authentication\": {\n#                            \"keychain\": \"ansi11393\"\n#                        },\n#                        \"hello_interval\": 2\n#                    }\n#                ],\n#                \"process_id\": \"27\"\n#            },\n#            {\n#                \"areas\": [\n#                    {\n#                        \"area_id\": \"11\",\n#                        \"default_cost\": 5\n#                    },\n#                    {\n#                        \"area_id\": \"22\",\n#                        \"default_cost\": 6\n#                    }\n#                ],\n#                \"cost\": 2,\n#                \"dead_interval\": 2,\n#                \"default_metric\": 10,\n#                \"demand_circuit\": \"enable\",\n#                \"external_out\": \"disable\",\n#                \"flood_reduction\": \"disable\",\n#                \"hello_interval\": 1,\n#                \"mtu_ignore\": \"enable\",\n#                \"packet_size\": 577,\n#                \"passive\": \"disable\",\n#                \"priority\": 1,\n#                \"process_id\": \"30\",\n#                \"retransmit_interval\": 2,\n#                \"router_id\": \"2.2.2.2\",\n#                \"summary_in\": \"enable\",\n#                \"transmit_delay\": 2,\n#                \"weight\": 2\n#            }\n#        ]\n#    }\n#\n#  \"commands\": [\n#        \"router ospf 27\",\n#        \"no area 10 authentication keychain ansi11393\",\n#        \"area 20 authentication keychain ansi11393\",\n#        \"area 20 default-cost 2\",\n#        \"area 20 cost 2\"\n#    ]\n#\n#  \"after\": {\n#        \"processes\": [\n#            {\n#                \"areas\": [\n#                    {\n#                        \"area_id\": \"11\",\n#                        \"cost\": 11,\n#                        \"default_cost\": 5\n#                    },\n#                    {\n#                        \"area_id\": \"22\",\n#                        \"default_cost\": 6\n#                    }\n#                ],\n#                \"authentication\": {\n#                    \"keychain\": \"ansible_test1102\"\n#                },\n#                \"process_id\": \"10\"\n#            },\n#            {\n#                \"adjacency_stagger\": {\n#                    \"max_adjacency\": 20,\n#                    \"min_adjacency\": 10\n#                },\n#                \"authentication\": {\n#                    \"message_digest\": {\n#                        \"keychain\": \"ansible1101pass\"\n#                    }\n#                },\n#                \"process_id\": \"26\"\n#            },\n#            {\n#                \"areas\": [\n#                    {\n#                        \"area_id\": \"10\",\n#                        \"hello_interval\": 2\n#                    },\n#                    {\n#                        \"area_id\": \"20\",\n#                        \"authentication\": {\n#                            \"keychain\": \"ansi11393\"\n#                        },\n#                        \"cost\": 2,\n#                        \"default_cost\": 2\n#                    }\n#                ],\n#                \"process_id\": \"27\"\n#            },\n#            {\n#                \"areas\": [\n#                    {\n#                        \"area_id\": \"11\",\n#                        \"default_cost\": 5\n#                    },\n#                    {\n#                        \"area_id\": \"22\",\n#                        \"default_cost\": 6\n#                    }\n#                ],\n#                \"cost\": 2,\n#                \"dead_interval\": 2,\n#                \"default_metric\": 10,\n#                \"demand_circuit\": \"enable\",\n#                \"external_out\": \"disable\",\n#                \"flood_reduction\": \"disable\",\n#                \"hello_interval\": 1,\n#                \"mtu_ignore\": \"enable\",\n#                \"packet_size\": 577,\n#                \"passive\": \"disable\",\n#                \"priority\": 1,\n#                \"process_id\": \"30\",\n#                \"retransmit_interval\": 2,\n#                \"router_id\": \"2.2.2.2\",\n#                \"summary_in\": \"enable\",\n#                \"transmit_delay\": 2,\n#                \"weight\": 2\n#            }\n#        ]\n#    }\n#\n#\n# -----------\n# After state\n# -----------\n#\n# RP/0/RP0/CPU0:anton(config)#do show running-config router ospf\n# Thu Jun 11 16:40:31.038 UTC\n# router ospf 10\n#  authentication keychain ansible_test1102\n#  area 11\n#   cost 11\n#   default-cost 5\n#  !\n#  area 22\n#   default-cost 6\n#  !\n# !\n# router ospf 26\n#  authentication message-digest keychain ansible1101pass\n#  adjacency stagger 10 20\n# !\n# router ospf 27\n#  area 10\n#   hello-interval 2\n#  !\n#  area 20\n#   cost 2\n#   authentication keychain ansi11393\n#   default-cost 2\n#  !\n# !\n# router ospf 30\n#  router-id 2.2.2.2\n#  summary-in enable\n#  external-out disable\n#  cost 2\n#  packet-size 577\n#  weight 2\n#  passive disable\n#  priority 1\n#  mtu-ignore enable\n#  flood-reduction disable\n#  dead-interval 2\n#  retransmit-interval 2\n#  demand-circuit enable\n#  hello-interval 1\n#  transmit-delay 2\n#  default-metric 10\n#  area 11\n#   default-cost 5\n#  !\n#  area 22\n#   default-cost 6\n#  !\n# !\n#\n\n\n# Using overridden\n#\n# ------------\n# Before state\n# ------------\n#\n#\n# RP/0/RP0/CPU0:anton#show running-config router ospf\n# Thu Jun 11 16:06:44.406 UTC\n# router ospf 10\n#  authentication keychain ansible_test1102\n#  area 11\n#   cost 11\n#   default-cost 5\n#  !\n#  area 22\n#   default-cost 6\n#  !\n# !\n# router ospf 26\n#  authentication message-digest keychain ansible1101pass\n#  adjacency stagger 10 20\n# !\n# router ospf 27\n#  area 10\n#  authentication keychain ansi11393\n#   hello-interval 2\n# !\n# !\n# router ospf 30\n#  router-id 2.2.2.2\n#  summary-in enable\n#  external-out disable\n#  cost 2\n#  packet-size 577\n#  weight 2\n#  passive disable\n#  priority 1\n#  mtu-ignore enable\n#  flood-reduction disable\n#  dead-interval 2\n#  retransmit-interval 2\n#  demand-circuit enable\n#  hello-interval 1\n#  transmit-delay 2\n#  default-metric 10\n#  area 11\n#   default-cost 5\n#  !\n#  area 22\n#   default-cost 6\n#  !\n# !\n#\n\n- name: Override existing OSPFv2 configurations from the device\n  cisco.iosxr.iosxr_ospfv2:\n    config:\n      processes:\n      - process_id: 27\n        areas:\n        - area_id: 10\n          hello_interval: 2\n          authentication:\n            keychain: ansi11393\n        - area_id: 20\n          cost: 2\n          default_cost: 2\n          authentication:\n            keychain: ansi11393\n      - process_id: 26\n        adjacency_stagger:\n          min_adjacency: 10\n          max_adjacency: 20\n    state: overridden\n\n#\n#\n# ------------------------\n# Module Execution Result\n# ------------------------\n#\n#  \"before\": {\n#        \"processes\": [\n#            {\n#                \"areas\": [\n#                    {\n#                        \"area_id\": \"11\",\n#                        \"cost\": 11,\n#                        \"default_cost\": 5\n#                    },\n#                    {\n#                        \"area_id\": \"22\",\n#                        \"default_cost\": 6\n#                    }\n#                ],\n#                \"authentication\": {\n#                    \"keychain\": \"ansible_test1102\"\n#                },\n#                \"process_id\": \"10\"\n#            },\n#            {\n#                \"adjacency_stagger\": {\n#                    \"max_adjacency\": 20,\n#                    \"min_adjacency\": 10\n#                },\n#                \"authentication\": {\n#                    \"message_digest\": {\n#                        \"keychain\": \"ansible1101pass\"\n#                    }\n#                },\n#                \"process_id\": \"26\"\n#            },\n#            {\n#                \"areas\": [\n#                    {\n#                        \"area_id\": \"10\",\n#                        \"authentication\": {\n#                            \"keychain\": \"ansi11393\"\n#                        },\n#                        \"hello_interval\": 2\n#                    }\n#                ],\n#                \"process_id\": \"27\"\n#            },\n#            {\n#                \"areas\": [\n#                    {\n#                        \"area_id\": \"11\",\n#                        \"default_cost\": 5\n#                    },\n#                    {\n#                        \"area_id\": \"22\",\n#                        \"default_cost\": 6\n#                    }\n#                ],\n#                \"cost\": 2,\n#                \"dead_interval\": 2,\n#                \"default_metric\": 10,\n#                \"demand_circuit\": \"enable\",\n#                \"external_out\": \"disable\",\n#                \"flood_reduction\": \"disable\",\n#                \"hello_interval\": 1,\n#                \"mtu_ignore\": \"enable\",\n#                \"packet_size\": 577,\n#                \"passive\": \"disable\",\n#                \"priority\": 1,\n#                \"process_id\": \"30\",\n#                \"retransmit_interval\": 2,\n#                \"router_id\": \"2.2.2.2\",\n#                \"summary_in\": \"enable\",\n#                \"transmit_delay\": 2,\n#                \"weight\": 2\n#            }\n#        ]\n#    }\n#\n#  \"commands\": [\n#        \"router ospf 10\",\n#        \"no authentication keychain ansible_test1102\",\n#        \"no area 11 default-cost 5\",\n#        \"no area 11 cost 11\",\n#        \"no area 22 default-cost 6\",\n#        \"router ospf 30\",\n#        \"no cost 2\",\n#        \"no weight 2\",\n#        \"no passive disable\",\n#        \"no priority 1\",\n#        \"no flood-reduction disable\",\n#        \"no default-metric 10\",\n#        \"no router-id 2.2.2.2\",\n#        \"no demand-circuit enable\",\n#        \"no packet-size 577\",\n#        \"no transmit-delay 2\",\n#        \"no summary-in enable\",\n#        \"no external-out disable\",\n#        \"no dead-interval 2\",\n#        \"no hello-interval 1\",\n#        \"no retransmit-interval 2\",\n#        \"no mtu-ignore enable\",\n#        \"no area 11 default-cost 5\",\n#        \"no area 22 default-cost 6\",\n#        \"router ospf 27\",\n#        \"area 20 authentication keychain ansi11393\",\n#        \"area 20 default-cost 2\",\n#        \"area 20 cost 2\"\n#    ]\n#\n#  \"after\": {\n#        \"processes\": [\n#            {\n#                \"process_id\": \"10\"\n#            },\n#            {\n#                \"adjacency_stagger\": {\n#                    \"max_adjacency\": 20,\n#                    \"min_adjacency\": 10\n#                },\n#                \"authentication\": {\n#                    \"message_digest\": {\n#                        \"keychain\": \"ansible1101pass\"\n#                    }\n#                },\n#                \"process_id\": \"26\"\n#            },\n#            {\n#                \"areas\": [\n#                    {\n#                        \"area_id\": \"10\",\n#                        \"authentication\": {\n#                            \"keychain\": \"ansi11393\"\n#                        },\n#                        \"hello_interval\": 2\n#                    },\n#                    {\n#                        \"area_id\": \"20\",\n#                        \"authentication\": {\n#                            \"keychain\": \"ansi11393\"\n#                        },\n#                        \"cost\": 2,\n#                        \"default_cost\": 2\n#                    }\n#                ],\n#                \"process_id\": \"27\"\n#            },\n#            {\n#                \"process_id\": \"30\"\n#            }\n#        ]\n#    }\n#\n#\n# -----------\n# After state\n# -----------\n#\n# RP/0/RP0/CPU0:anton#show running-config router ospf\n# Thu Jun 11 16:50:36.332 UTC\n# router ospf 10\n# !\n# router ospf 26\n#  authentication message-digest keychain ansible1101pass\n#  adjacency stagger 10 20\n# !\n# router ospf 27\n#  area 10\n#   authentication keychain ansi11393\n#   hello-interval 2\n#  !\n#  area 20\n#   cost 2\n#   authentication keychain ansi11393\n#   default-cost 2\n#  !\n# !\n# router ospf 30\n# !\n#\n\n\n# Using deleted\n#\n# ------------\n# Before state\n# ------------\n#\n#\n# RP/0/RP0/CPU0:anton#show running-config router ospf\n# Thu Jun 11 16:06:44.406 UTC\n# router ospf 10\n#  authentication keychain ansible_test1102\n#  area 11\n#   cost 11\n#   default-cost 5\n#  !\n#  area 22\n#   default-cost 6\n#  !\n# !\n# router ospf 26\n#  authentication message-digest keychain ansible1101pass\n#  adjacency stagger 10 20\n# !\n# router ospf 27\n#  area 10\n#  authentication keychain ansi11393\n#   hello-interval 2\n# !\n# !\n# router ospf 30\n#  router-id 2.2.2.2\n#  summary-in enable\n#  external-out disable\n#  cost 2\n#  packet-size 577\n#  weight 2\n#  passive disable\n#  priority 1\n#  mtu-ignore enable\n#  flood-reduction disable\n#  dead-interval 2\n#  retransmit-interval 2\n#  demand-circuit enable\n#  hello-interval 1\n#  transmit-delay 2\n#  default-metric 10\n#  area 11\n#   default-cost 5\n#  !\n#  area 22\n#   default-cost 6\n#  !\n# !\n#\n\n- name: Deleted existing OSPFv2 configurations from the device\n  cisco.iosxr.iosxr_ospfv2:\n    config:\n      processes:\n      - process_id: '10'\n      - process_id: '26'\n      - process_id: '27'\n      - process_id: '30'\n    state: deleted\n\n#\n#\n# ------------------------\n# Module Execution Result\n# ------------------------\n#\n#  \"before\": {\n#        \"processes\": [\n#            {\n#                \"areas\": [\n#                    {\n#                        \"area_id\": \"11\",\n#                        \"cost\": 11,\n#                        \"default_cost\": 5\n#                    },\n#                    {\n#                        \"area_id\": \"22\",\n#                        \"default_cost\": 6\n#                    }\n#                ],\n#                \"authentication\": {\n#                    \"keychain\": \"ansible_test1102\"\n#                },\n#                \"process_id\": \"10\"\n#            },\n#            {\n#                \"adjacency_stagger\": {\n#                    \"max_adjacency\": 20,\n#                    \"min_adjacency\": 10\n#                },\n#                \"authentication\": {\n#                    \"message_digest\": {\n#                        \"keychain\": \"ansible1101pass\"\n#                    }\n#                },\n#                \"process_id\": \"26\"\n#            },\n#            {\n#                \"areas\": [\n#                    {\n#                        \"area_id\": \"10\",\n#                        \"authentication\": {\n#                            \"keychain\": \"ansi11393\"\n#                        },\n#                        \"hello_interval\": 2\n#                    }\n#                ],\n#                \"process_id\": \"27\"\n#            },\n#            {\n#                \"areas\": [\n#                    {\n#                        \"area_id\": \"11\",\n#                        \"default_cost\": 5\n#                    },\n#                    {\n#                        \"area_id\": \"22\",\n#                        \"default_cost\": 6\n#                    }\n#                ],\n#                \"cost\": 2,\n#                \"dead_interval\": 2,\n#                \"default_metric\": 10,\n#                \"demand_circuit\": \"enable\",\n#                \"external_out\": \"disable\",\n#                \"flood_reduction\": \"disable\",\n#                \"hello_interval\": 1,\n#                \"mtu_ignore\": \"enable\",\n#                \"packet_size\": 577,\n#                \"passive\": \"disable\",\n#                \"priority\": 1,\n#                \"process_id\": \"30\",\n#                \"retransmit_interval\": 2,\n#                \"router_id\": \"2.2.2.2\",\n#                \"summary_in\": \"enable\",\n#                \"transmit_delay\": 2,\n#                \"weight\": 2\n#            }\n#        ]\n#    },\n#\n#  \"commands\": [\n#        \"router ospf 10\",\n#        \"no authentication keychain ansible_test1102\",\n#        \"no area 11 default-cost 5\",\n#        \"no area 11 cost 11\",\n#        \"no area 22 default-cost 6\",\n#        \"router ospf 26\",\n#        \"no adjacency stagger 10 20\",\n#        \"no authentication message-digest keychain ansible1101pass\",\n#        \"router ospf 27\",\n#        \"no area 10 authentication keychain ansi11393\",\n#        \"no area 10 hello-interval 2\",\n#        \"router ospf 30\",\n#        \"no cost 2\",\n#        \"no weight 2\",\n#        \"no passive disable\",\n#        \"no priority 1\",\n#        \"no flood-reduction disable\",\n#        \"no default-metric 10\",\n#        \"no router-id 2.2.2.2\",\n#        \"no demand-circuit enable\",\n#        \"no packet-size 577\",\n#        \"no transmit-delay 2\",\n#        \"no summary-in enable\",\n#        \"no external-out disable\",\n#        \"no dead-interval 2\",\n#        \"no hello-interval 1\",\n#        \"no retransmit-interval 2\",\n#        \"no mtu-ignore enable\",\n#        \"no area 11 default-cost 5\",\n#        \"no area 22 default-cost 6\"\n#    ]\n#\n#  \"after\": {\n#        \"processes\": [\n#            {\n#                \"process_id\": \"10\"\n#            },\n#            {\n#                \"process_id\": \"26\"\n#            },\n#            {\n#                \"process_id\": \"27\"\n#            },\n#            {\n#                \"process_id\": \"30\"\n#            }\n#        ]\n#    }\n#\n#\n# -----------\n# After state\n# -----------\n#\n# RP/0/RP0/CPU0:anton(config)#show running-config router ospf\n# Thu Jun 11 17:07:34.218 UTC\n# router ospf 10\n# !\n# router ospf 26\n# !\n# router ospf 27\n# !\n# router ospf 30\n# !\n\n\n# Using parsed\n# parsed.cfg\n# ------------\n# Thu Jun 11 17:28:51.918 UTC\n# router ospf 10\n#  authentication keychain ansible_test1102\n#  area 11\n#   cost 11\n#   default-cost 5\n#  !\n#  area 22\n#   default-cost 6\n#  !\n# !\n# router ospf 26\n#  authentication message-digest keychain ansible1101pass\n#  adjacency stagger 10 20\n# !\n# router ospf 27\n#  area 10\n#   authentication keychain ansi11393\n#   hello-interval 2\n#  !\n# !\n# router ospf 30\n#  router-id 2.2.2.2\n#  summary-in enable\n#  external-out disable\n#  cost 2\n#  packet-size 577\n#  weight 2\n#  passive disable\n#  priority 1\n#  mtu-ignore enable\n#  flood-reduction disable\n#  dead-interval 2\n#  retransmit-interval 2\n#  demand-circuit enable\n#  hello-interval 1\n#  transmit-delay 2\n#  default-metric 10\n#  area 11\n#   default-cost 5\n#  !\n#  area 22\n#   default-cost 6\n#  !\n# !\n- name: Parsed the device configuration to get output commands\n  cisco.iosxr.iosxr_ospfv2:\n    running_config: \"{{ lookup('file', './parsed.cfg') }}\"\n    state: parsed\n#\n#\n# -------------------------\n# Module Execution Result\n# -------------------------\n#\n#\n# \"parsed\": {\n#        \"processes\": [\n#            {\n#                \"areas\": [\n#                    {\n#                        \"area_id\": \"11\",\n#                        \"cost\": 11,\n#                        \"default_cost\": 5\n#                    },\n#                    {\n#                        \"area_id\": \"22\",\n#                        \"default_cost\": 6\n#                    }\n#                ],\n#                \"authentication\": {\n#                    \"keychain\": \"ansible_test1102\"\n#                },\n#                \"process_id\": \"10\"\n#            },\n#            {\n#                \"adjacency_stagger\": {\n#                    \"max_adjacency\": 20,\n#                    \"min_adjacency\": 10\n#                },\n#                \"authentication\": {\n#                    \"message_digest\": {\n#                        \"keychain\": \"ansible1101pass\"\n#                    }\n#                },\n#                \"process_id\": \"26\"\n#            },\n#            {\n#                \"areas\": [\n#                    {\n#                        \"area_id\": \"10\",\n#                        \"authentication\": {\n#                            \"keychain\": \"ansi11393\"\n#                        },\n#                        \"hello_interval\": 2\n#                    }\n#                ],\n#                \"process_id\": \"27\"\n#            },\n#            {\n#                \"areas\": [\n#                    {\n#                        \"area_id\": \"11\",\n#                        \"default_cost\": 5\n#                    },\n#                    {\n#                        \"area_id\": \"22\",\n#                        \"default_cost\": 6\n#                    }\n#                ],\n#                \"cost\": 2,\n#                \"dead_interval\": 2,\n#                \"default_metric\": 10,\n#                \"demand_circuit\": \"enable\",\n#                \"external_out\": \"disable\",\n#                \"flood_reduction\": \"disable\",\n#                \"hello_interval\": 1,\n#                \"mtu_ignore\": \"enable\",\n#                \"packet_size\": 577,\n#                \"passive\": \"disable\",\n#                \"priority\": 1,\n#                \"process_id\": \"30\",\n#                \"retransmit_interval\": 2,\n#                \"router_id\": \"2.2.2.2\",\n#                \"summary_in\": \"enable\",\n#                \"transmit_delay\": 2,\n#                \"weight\": 2\n#            }\n#        ]\n#    }\n\n\n\n# Using rendered\n#\n#\n- name: Render the commands for provided  configuration\n  cisco.iosxr.iosxr_ospfv2:\n    config:\n      processes:\n      - process_id: 27\n        areas:\n        - area_id: 10\n          hello_interval: 2\n          authentication:\n            keychain: ansi11393\n      - process_id: 26\n        adjacency_stagger:\n          min_adjacency: 10\n          max_adjacency: 20\n      - process_id: 10\n        authentication:\n          keychain: ansible_test1102\n        areas:\n        - area_id: 11\n          default_cost: 5\n          cost: 11\n        - area_id: 22\n          default_cost: 6\n      - process_id: 30\n        areas:\n        - area_id: 11\n          default_cost: 5\n        - area_id: 22\n          default_cost: 6\n\n        cost: 2\n        default_metric: 10\n        transmit_delay: 2\n        hello_interval: 1\n        dead_interval: 2\n        retransmit_interval: 2\n        weight: 2\n        packet_size: 577\n        priority: 1\n        router_id: 2.2.2.2\n        demand_circuit: enable\n        passive: disable\n        summary_in: enable\n        flood_reduction: disable\n        mtu_ignore: enable\n        external_out: disable\n    state: rendered\n\n#\n#\n# -------------------------\n# Module Execution Result\n# -------------------------\n#\n#\n# \"rendered\": [\n#        \"router ospf 27\",\n#        \"area 10 authentication keychain ansi11393\",\n#        \"area 10 hello-interval 2\",\n#        \"router ospf 26\",\n#        \"adjacency stagger 10 20\",\n#        \"authentication message-digest keychain ansible1101pass\",\n#        \"router ospf 10\",\n#        \"authentication keychain ansible_test1102\",\n#        \"area 11 default-cost 5\",\n#        \"area 11 cost 11\",\n#        \"area 22 default-cost 6\",\n#        \"router ospf 30\",\n#        \"cost 2\",\n#        \"weight 2\",\n#        \"passive disable\",\n#        \"priority 1\",\n#        \"flood-reduction disable\",\n#        \"default-metric 10\",\n#        \"router-id 2.2.2.2\",\n#        \"demand-circuit enable\",\n#        \"packet-size 577\",\n#        \"transmit-delay 2\",\n#        \"summary-in enable\",\n#        \"external-out disable\",\n#        \"dead-interval 2\",\n#        \"hello-interval 1\",\n#        \"retransmit-interval 2\",\n#        \"mtu-ignore enable\",\n#        \"area 11 default-cost 5\",\n#        \"area 22 default-cost 6\"\n#    ]\n\n\n# Using gathered\n#\n# Before state:\n# -------------\n#\n# RP/0/RP0/CPU0:anton#show running-config router ospf\n# Thu Jun 11 16:06:44.406 UTC\n# router ospf 10\n#  authentication keychain ansible_test1102\n#  area 11\n#   cost 11\n#   default-cost 5\n#  !\n#  area 22\n#   default-cost 6\n#  !\n# !\n# router ospf 26\n#  authentication message-digest keychain ansible1101pass\n#  adjacency stagger 10 20\n# !\n# router ospf 27\n#  area 10\n#  authentication keychain ansi11393\n#   hello-interval 2\n# !\n# !\n# router ospf 30\n#  router-id 2.2.2.2\n#  summary-in enable\n#  external-out disable\n#  cost 2\n#  packet-size 577\n#  weight 2\n#  passive disable\n#  priority 1\n#  mtu-ignore enable\n#  flood-reduction disable\n#  dead-interval 2\n#  retransmit-interval 2\n#  demand-circuit enable\n#  hello-interval 1\n#  transmit-delay 2\n#  default-metric 10\n#  area 11\n#   default-cost 5\n#  !\n#  area 22\n#   default-cost 6\n#  !\n# !\n#\n- name: Gather ospfv2 routes configuration\n  cisco.iosxr.iosxr_ospfv2:\n    state: gathered\n#\n#\n# -------------------------\n# Module Execution Result\n# -------------------------\n#\n#    \"gathered\": {\n#        \"processes\": [\n#            {\n#                \"areas\": [\n#                    {\n#                        \"area_id\": \"11\",\n#                        \"cost\": 11,\n#                        \"default_cost\": 5\n#                    },\n#                    {\n#                        \"area_id\": \"22\",\n#                        \"default_cost\": 6\n#                    }\n#                ],\n#                \"authentication\": {\n#                    \"keychain\": \"ansible_test1102\"\n#                },\n#                \"process_id\": \"10\"\n#            },\n#            {\n#                \"adjacency_stagger\": {\n#                    \"max_adjacency\": 20,\n#                    \"min_adjacency\": 10\n#                },\n#                \"authentication\": {\n#                    \"message_digest\": {\n#                        \"keychain\": \"ansible1101pass\"\n#                    }\n#                },\n#                \"process_id\": \"26\"\n#            },\n#            {\n#                \"areas\": [\n#                    {\n#                        \"area_id\": \"10\",\n#                        \"authentication\": {\n#                            \"keychain\": \"ansi11393\"\n#                        },\n#                        \"hello_interval\": 2\n#                    }\n#                ],\n#                \"process_id\": \"27\"\n#            },\n#            {\n#                \"areas\": [\n#                    {\n#                        \"area_id\": \"11\",\n#                        \"default_cost\": 5\n#                    },\n#                    {\n#                        \"area_id\": \"22\",\n#                        \"default_cost\": 6\n#                    }\n#                ],\n#                \"cost\": 2,\n#                \"dead_interval\": 2,\n#                \"default_metric\": 10,\n#                \"demand_circuit\": \"enable\",\n#                \"external_out\": \"disable\",\n#                \"flood_reduction\": \"disable\",\n#                \"hello_interval\": 1,\n#                \"mtu_ignore\": \"enable\",\n#                \"packet_size\": 577,\n#                \"passive\": \"disable\",\n#                \"priority\": 1,\n#                \"process_id\": \"30\",\n#                \"retransmit_interval\": 2,\n#                \"router_id\": \"2.2.2.2\",\n#                \"summary_in\": \"enable\",\n#                \"transmit_delay\": 2,\n#                \"weight\": 2\n#            }\n#        ]\n#    }\n#\n# After state:\n# -------------\n#\n# RP/0/RP0/CPU0:anton#show running-config router ospf\n# Thu Jun 11 16:06:44.406 UTC\n# router ospf 10\n#  authentication keychain ansible_test1102\n#  area 11\n#   cost 11\n#   default-cost 5\n#  !\n#  area 22\n#   default-cost 6\n#  !\n# !\n# router ospf 26\n#  authentication message-digest keychain ansible1101pass\n#  adjacency stagger 10 20\n# !\n# router ospf 27\n#  area 10\n#  authentication keychain ansi11393\n#   hello-interval 2\n# !\n# !\n# router ospf 30\n# router-id 2.2.2.2\n# summary-in enable\n# external-out disable\n# cost 2\n# packet-size 577\n# weight 2\n# passive disable\n# priority 1\n# mtu-ignore enable\n# flood-reduction disable\n# dead-interval 2\n# retransmit-interval 2\n# demand-circuit enable\n# hello-interval 1\n# transmit-delay 2\n# default-metric 10\n# area 11\n#  default-cost 5\n# !\n# area 22\n#  default-cost 6\n# !\n# !\n#\n#\n\n"
  },
  "cisco.iosxr.iosxr_ospfv3": {
    "doc": {
      "description": "This module manages global ospfv3 configuration on devices running Cisco IOS-XR",
      "has_action": true,
      "notes": "This module works with connection C(network_cli). See L(the IOS-XR Platform Options,../network/user_guide/platform_iosxr.html)",
      "options": {
        "config": {
          "aliases": [],
          "description": "A list of ospfv3 process configuration",
          "type": "dict",
          "required": false,
          "suboptions": {
            "processes": {
              "aliases": [],
              "description": "A list of ospfv3 instances configuration",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "address_family_unicast": {
                  "aliases": [],
                  "description": "Enable unicast topology for ipv4 address family",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "areas": {
                  "aliases": [],
                  "description": "Configure ospfv3 areas' properties",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "area_id": {
                      "aliases": [],
                      "description": "Area ID as IP address or integer",
                      "type": "str",
                      "required": true,
                      "suboptions": {}
                    },
                    "authentication": {
                      "aliases": [],
                      "description": "Enable authentication",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "disable": {
                          "aliases": [],
                          "description": "Do not authenticate OSPFv3 packets",
                          "default": "False",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "ipsec": {
                          "aliases": [],
                          "description": "Specify IPSec AH authentication attributes",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "algorithim_type": {
                              "aliases": [],
                              "description": "Specify the type of algorithim",
                              "type": "str",
                              "required": false,
                              "choices": [
                                "md5",
                                "sha1"
                              ],
                              "suboptions": {}
                            },
                            "clear_key": {
                              "aliases": [],
                              "description": "Specify key in cleartext form",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            },
                            "key": {
                              "aliases": [],
                              "description": "Specify key",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            },
                            "password_key": {
                              "aliases": [],
                              "description": "Specify key in encrypted form",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            },
                            "spi": {
                              "aliases": [],
                              "description": "Specify the Security Parameter Index value",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        }
                      }
                    },
                    "bfd": {
                      "aliases": [],
                      "description": "Configure BFD parameters",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "fast_detect": {
                          "aliases": [],
                          "description": "Configure fast detection",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "set": {
                              "aliases": [],
                              "description": "Enable fast detection only",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "strict_mode": {
                              "aliases": [],
                              "description": "Hold down neighbor session until BFD session is up",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "minimum_interval": {
                          "aliases": [],
                          "description": "Hello interval in milli-seconds",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "multiplier": {
                          "aliases": [],
                          "description": "Detect multiplier",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "cost": {
                      "aliases": [],
                      "description": "Interface cost",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "database_filter": {
                      "aliases": [],
                      "description": "Filter LSAs during synchronization and flooding",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "all_outgoing_lsa": {
                          "aliases": [],
                          "description": "Filter all outgoing LSA",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "dead_interval": {
                      "aliases": [],
                      "description": "Interval after which a neighbor is declared dead",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "default_cost": {
                      "aliases": [],
                      "description": "Set the summary default-cost of a NSSA/stub area. Stub's advertised external route metric",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "demand_circuit": {
                      "aliases": [],
                      "description": "Enable/Disable ospfv3 demand circuit",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "distrinbute_rib_prefix_list_name": {
                      "aliases": [],
                      "description": "Filter LSAs during synchronization and flooding",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "encryption": {
                      "aliases": [],
                      "description": "Encrypt and authenticate OSPFv3 packets",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "disable": {
                          "aliases": [],
                          "description": "Do not encrypt OSPFv3 packets",
                          "default": "False",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "ipsec": {
                          "aliases": [],
                          "description": "Specify IPSec ESP encryption and authentication",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "esp": {
                              "aliases": [],
                              "description": "Specify encryption parameters",
                              "type": "dict",
                              "required": false,
                              "suboptions": {
                                "aes": {
                                  "aliases": [],
                                  "description": "This specify the aes algorithim",
                                  "type": "dict",
                                  "required": false,
                                  "suboptions": {
                                    "algorithim_type": {
                                      "aliases": [],
                                      "description": "Specify the bit encryption for aes algorithim",
                                      "type": "str",
                                      "required": false,
                                      "choices": [
                                        "192",
                                        "256"
                                      ],
                                      "suboptions": {}
                                    },
                                    "clear_key": {
                                      "aliases": [],
                                      "description": "Specify AES key in cleartext form",
                                      "type": "str",
                                      "required": false,
                                      "suboptions": {}
                                    },
                                    "key": {
                                      "aliases": [],
                                      "description": "Cleartext AES key",
                                      "type": "str",
                                      "required": false,
                                      "suboptions": {}
                                    },
                                    "password_key": {
                                      "aliases": [],
                                      "description": "Specify AES key in encrypted form",
                                      "type": "str",
                                      "required": false,
                                      "suboptions": {}
                                    }
                                  }
                                },
                                "des": {
                                  "aliases": [],
                                  "description": "This specify the des algorithim",
                                  "type": "dict",
                                  "required": false,
                                  "suboptions": {
                                    "clear_key": {
                                      "aliases": [],
                                      "description": "Specify AES key in cleartext form",
                                      "type": "str",
                                      "required": false,
                                      "suboptions": {}
                                    },
                                    "key": {
                                      "aliases": [],
                                      "description": "Cleartext AES key",
                                      "type": "str",
                                      "required": false,
                                      "suboptions": {}
                                    },
                                    "password_key": {
                                      "aliases": [],
                                      "description": "Specify AES key in encrypted form",
                                      "type": "str",
                                      "required": false,
                                      "suboptions": {}
                                    }
                                  }
                                },
                                "null_encryption": {
                                  "aliases": [],
                                  "description": "Specify null encryption attributes",
                                  "type": "dict",
                                  "required": false,
                                  "suboptions": {
                                    "authentication": {
                                      "aliases": [],
                                      "description": "Specify authentication parameters",
                                      "type": "dict",
                                      "required": false,
                                      "suboptions": {
                                        "algorithim_type": {
                                          "aliases": [],
                                          "description": "Specify the type of algorithim",
                                          "type": "str",
                                          "required": false,
                                          "choices": [
                                            "md5",
                                            "sha1"
                                          ],
                                          "suboptions": {}
                                        },
                                        "clear_key": {
                                          "aliases": [],
                                          "description": "Specify key in cleartext form",
                                          "type": "str",
                                          "required": false,
                                          "suboptions": {}
                                        },
                                        "key": {
                                          "aliases": [],
                                          "description": "Specify key",
                                          "type": "str",
                                          "required": false,
                                          "suboptions": {}
                                        },
                                        "password_key": {
                                          "aliases": [],
                                          "description": "Specify key in encrypted form",
                                          "type": "str",
                                          "required": false,
                                          "suboptions": {}
                                        }
                                      }
                                    }
                                  }
                                },
                                "triple_des": {
                                  "aliases": [],
                                  "description": "This specify the triple DES algorithim",
                                  "type": "dict",
                                  "required": false,
                                  "suboptions": {
                                    "clear_key": {
                                      "aliases": [],
                                      "description": "Specify 3DES key in cleartext form",
                                      "type": "str",
                                      "required": false,
                                      "suboptions": {}
                                    },
                                    "key": {
                                      "aliases": [],
                                      "description": "Cleartext 3DES key",
                                      "type": "str",
                                      "required": false,
                                      "suboptions": {}
                                    },
                                    "password_key": {
                                      "aliases": [],
                                      "description": "Specify 3DES key in encrypted form",
                                      "type": "str",
                                      "required": false,
                                      "suboptions": {}
                                    }
                                  }
                                }
                              }
                            },
                            "spi": {
                              "aliases": [],
                              "description": "Specify the Security Parameter Index value",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        }
                      }
                    },
                    "fast_reroute": {
                      "aliases": [],
                      "description": "Specify IP Fast Reroute",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "disabled": {
                          "aliases": [],
                          "description": "Disable IP fast reroute",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "per_link": {
                          "aliases": [],
                          "description": "Specify per-prefix computation",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "information_type": {
                              "aliases": [],
                              "description": "Specify per-link LFA exclusion or FRR LFA candidate information",
                              "type": "str",
                              "required": false,
                              "choices": [
                                "exclude",
                                "lfa_candidate"
                              ],
                              "suboptions": {}
                            },
                            "interface": {
                              "aliases": [],
                              "description": "Specify Per-link LFA exclusion information",
                              "type": "dict",
                              "required": false,
                              "suboptions": {
                                "bundle_ether": {
                                  "aliases": [],
                                  "description": "Specify Aggregated Ethernet interface(s)",
                                  "type": "list",
                                  "required": false,
                                  "elements": "int",
                                  "suboptions": {}
                                },
                                "bvi": {
                                  "aliases": [],
                                  "description": "Specify Bridge-Group Virtual Interface",
                                  "type": "list",
                                  "required": false,
                                  "elements": "int",
                                  "suboptions": {}
                                },
                                "fast_ethernet": {
                                  "aliases": [],
                                  "description": "Specify FastEthernet/IEEE 802.3 interface(s)",
                                  "type": "list",
                                  "required": false,
                                  "elements": "str",
                                  "suboptions": {}
                                },
                                "fiftygige": {
                                  "aliases": [],
                                  "description": "Specify FiftyGigE/IEEE 802.3 interface(s)",
                                  "type": "list",
                                  "required": false,
                                  "elements": "str",
                                  "suboptions": {}
                                },
                                "fortygige": {
                                  "aliases": [],
                                  "description": "Specify FortyGigE/IEEE 802.3 interface(s)",
                                  "type": "list",
                                  "required": false,
                                  "elements": "str",
                                  "suboptions": {}
                                },
                                "fourhundredgige": {
                                  "aliases": [],
                                  "description": "Specify FourHundredGigE/IEEE 802.3 interface(s)",
                                  "type": "list",
                                  "required": false,
                                  "elements": "str",
                                  "suboptions": {}
                                },
                                "gigabitethernet": {
                                  "aliases": [],
                                  "description": "Specify GigabitEthernet/IEEE 802.3 interface(s)",
                                  "type": "list",
                                  "required": false,
                                  "elements": "str",
                                  "suboptions": {}
                                },
                                "hundredgige": {
                                  "aliases": [],
                                  "description": "Specify HundredGigE/IEEE 802.3 interface(s)",
                                  "type": "list",
                                  "required": false,
                                  "elements": "str",
                                  "suboptions": {}
                                },
                                "mgmteth": {
                                  "aliases": [],
                                  "description": "Specify MgmtEth/IEEE 802.3 interface(s)",
                                  "type": "list",
                                  "required": false,
                                  "elements": "str",
                                  "suboptions": {}
                                },
                                "multilink": {
                                  "aliases": [],
                                  "description": "Specify Multilink network interface(s)",
                                  "type": "list",
                                  "required": false,
                                  "elements": "str",
                                  "suboptions": {}
                                },
                                "nve": {
                                  "aliases": [],
                                  "description": "Specify Network Virtualization Endpoint Interface(s)",
                                  "type": "list",
                                  "required": false,
                                  "elements": "int",
                                  "suboptions": {}
                                },
                                "pos_int": {
                                  "aliases": [],
                                  "description": "Specify Aggregated pos interface(s)",
                                  "type": "list",
                                  "required": false,
                                  "elements": "int",
                                  "suboptions": {}
                                },
                                "pw_ether": {
                                  "aliases": [],
                                  "description": "Specify PWHE Ethernet Interface",
                                  "type": "list",
                                  "required": false,
                                  "elements": "int",
                                  "suboptions": {}
                                },
                                "pw_iw": {
                                  "aliases": [],
                                  "description": "Specify PWHE VC11 IP Interworking Interface",
                                  "type": "list",
                                  "required": false,
                                  "elements": "int",
                                  "suboptions": {}
                                },
                                "serial": {
                                  "aliases": [],
                                  "description": "Specify Serial network interface(s)",
                                  "type": "list",
                                  "required": false,
                                  "elements": "str",
                                  "suboptions": {}
                                },
                                "srp": {
                                  "aliases": [],
                                  "description": "Specify SRP interface(s)",
                                  "type": "list",
                                  "required": false,
                                  "elements": "str",
                                  "suboptions": {}
                                },
                                "tengige": {
                                  "aliases": [],
                                  "description": "Specify TenGigabitEthernet/IEEE 802.3 interface(s)",
                                  "type": "list",
                                  "required": false,
                                  "elements": "str",
                                  "suboptions": {}
                                },
                                "tunnel_ip": {
                                  "aliases": [],
                                  "description": "Specify GRE/IPinIP Tunnel Interface(s)",
                                  "type": "list",
                                  "required": false,
                                  "elements": "int",
                                  "suboptions": {}
                                },
                                "tunnel_ipsec": {
                                  "aliases": [],
                                  "description": "Specify IPSec Tunnel interface(s)",
                                  "type": "list",
                                  "required": false,
                                  "elements": "int",
                                  "suboptions": {}
                                },
                                "tunnel_mpls": {
                                  "aliases": [],
                                  "description": "MPLS Transport Protocol Tunnel interface",
                                  "type": "int",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "tunnel_mte": {
                                  "aliases": [],
                                  "description": "Specify MPLS Traffic Engineering P2MP Tunnel interface(s)",
                                  "type": "list",
                                  "required": false,
                                  "elements": "int",
                                  "suboptions": {}
                                },
                                "twentyfivegige": {
                                  "aliases": [],
                                  "description": "Specify TwentyFiveGigabitEthernet/IEEE 802.3 interface(s)",
                                  "type": "list",
                                  "required": false,
                                  "elements": "str",
                                  "suboptions": {}
                                },
                                "twohundredgige": {
                                  "aliases": [],
                                  "description": "Specify TwoHundredGigE/IEEE 802.3 interface(s)",
                                  "type": "list",
                                  "required": false,
                                  "elements": "str",
                                  "suboptions": {}
                                }
                              }
                            },
                            "use_candidate_only": {
                              "aliases": [],
                              "description": "Enable/Disable backup selection from candidate-list only",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "per_prefix": {
                          "aliases": [],
                          "description": "Specify per-prefix computation",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "information_type": {
                              "aliases": [],
                              "description": "Specify per_prefix LFA exclusion or FRR LFA candidate information",
                              "type": "str",
                              "required": false,
                              "choices": [
                                "exclude",
                                "lfa_candidate"
                              ],
                              "suboptions": {}
                            },
                            "interface": {
                              "aliases": [],
                              "description": "Specify Per-link LFA exclusion information",
                              "type": "dict",
                              "required": false,
                              "suboptions": {
                                "bundle_ether": {
                                  "aliases": [],
                                  "description": "Specify Aggregated Ethernet interface(s)",
                                  "type": "list",
                                  "required": false,
                                  "elements": "int",
                                  "suboptions": {}
                                },
                                "bvi": {
                                  "aliases": [],
                                  "description": "Specify Bridge-Group Virtual Interface",
                                  "type": "list",
                                  "required": false,
                                  "elements": "int",
                                  "suboptions": {}
                                },
                                "fast_ethernet": {
                                  "aliases": [],
                                  "description": "Specify FastEthernet/IEEE 802.3 interface(s)",
                                  "type": "list",
                                  "required": false,
                                  "elements": "str",
                                  "suboptions": {}
                                },
                                "fiftygige": {
                                  "aliases": [],
                                  "description": "Specify FiftyGigE/IEEE 802.3 interface(s)",
                                  "type": "list",
                                  "required": false,
                                  "elements": "str",
                                  "suboptions": {}
                                },
                                "fortygige": {
                                  "aliases": [],
                                  "description": "Specify FortyGigE/IEEE 802.3 interface(s)",
                                  "type": "list",
                                  "required": false,
                                  "elements": "str",
                                  "suboptions": {}
                                },
                                "fourhundredgige": {
                                  "aliases": [],
                                  "description": "Specify FourHundredGigE/IEEE 802.3 interface(s)",
                                  "type": "list",
                                  "required": false,
                                  "elements": "str",
                                  "suboptions": {}
                                },
                                "gigabitethernet": {
                                  "aliases": [],
                                  "description": "Specify GigabitEthernet/IEEE 802.3 interface(s)",
                                  "type": "list",
                                  "required": false,
                                  "elements": "str",
                                  "suboptions": {}
                                },
                                "hundredgige": {
                                  "aliases": [],
                                  "description": "Specify HundredGigE/IEEE 802.3 interface(s)",
                                  "type": "list",
                                  "required": false,
                                  "elements": "str",
                                  "suboptions": {}
                                },
                                "mgmteth": {
                                  "aliases": [],
                                  "description": "Specify MgmtEth/IEEE 802.3 interface(s)",
                                  "type": "list",
                                  "required": false,
                                  "elements": "str",
                                  "suboptions": {}
                                },
                                "multilink": {
                                  "aliases": [],
                                  "description": "Specify Multilink network interface(s)",
                                  "type": "list",
                                  "required": false,
                                  "elements": "str",
                                  "suboptions": {}
                                },
                                "nve": {
                                  "aliases": [],
                                  "description": "Specify Network Virtualization Endpoint Interface(s)",
                                  "type": "list",
                                  "required": false,
                                  "elements": "int",
                                  "suboptions": {}
                                },
                                "pos_int": {
                                  "aliases": [],
                                  "description": "Specify Aggregated pos interface(s)",
                                  "type": "list",
                                  "required": false,
                                  "elements": "int",
                                  "suboptions": {}
                                },
                                "pw_ether": {
                                  "aliases": [],
                                  "description": "Specify PWHE Ethernet Interface",
                                  "type": "list",
                                  "required": false,
                                  "elements": "int",
                                  "suboptions": {}
                                },
                                "pw_iw": {
                                  "aliases": [],
                                  "description": "Specify PWHE VC11 IP Interworking Interface",
                                  "type": "list",
                                  "required": false,
                                  "elements": "int",
                                  "suboptions": {}
                                },
                                "serial": {
                                  "aliases": [],
                                  "description": "Specify Serial network interface(s)",
                                  "type": "list",
                                  "required": false,
                                  "elements": "str",
                                  "suboptions": {}
                                },
                                "srp": {
                                  "aliases": [],
                                  "description": "Specify SRP interface(s)",
                                  "type": "list",
                                  "required": false,
                                  "elements": "str",
                                  "suboptions": {}
                                },
                                "tengige": {
                                  "aliases": [],
                                  "description": "Specify TenGigabitEthernet/IEEE 802.3 interface(s)",
                                  "type": "list",
                                  "required": false,
                                  "elements": "str",
                                  "suboptions": {}
                                },
                                "tunnel_ip": {
                                  "aliases": [],
                                  "description": "Specify GRE/IPinIP Tunnel Interface(s)",
                                  "type": "list",
                                  "required": false,
                                  "elements": "int",
                                  "suboptions": {}
                                },
                                "tunnel_ipsec": {
                                  "aliases": [],
                                  "description": "Specify IPSec Tunnel interface(s)",
                                  "type": "list",
                                  "required": false,
                                  "elements": "int",
                                  "suboptions": {}
                                },
                                "tunnel_mpls": {
                                  "aliases": [],
                                  "description": "MPLS Transport Protocol Tunnel interface",
                                  "type": "int",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "tunnel_mte": {
                                  "aliases": [],
                                  "description": "Specify MPLS Traffic Engineering P2MP Tunnel interface(s)",
                                  "type": "list",
                                  "required": false,
                                  "elements": "int",
                                  "suboptions": {}
                                },
                                "twentyfivegige": {
                                  "aliases": [],
                                  "description": "Specify TwentyFiveGigabitEthernet/IEEE 802.3 interface(s)",
                                  "type": "list",
                                  "required": false,
                                  "elements": "str",
                                  "suboptions": {}
                                },
                                "twohundredgige": {
                                  "aliases": [],
                                  "description": "Specify TwoHundredGigE/IEEE 802.3 interface(s)",
                                  "type": "list",
                                  "required": false,
                                  "elements": "str",
                                  "suboptions": {}
                                }
                              }
                            },
                            "use_candidate_only": {
                              "aliases": [],
                              "description": "Enable/Disable backup selection from candidate-list only",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        }
                      }
                    },
                    "flood_reduction": {
                      "aliases": [],
                      "description": "Enable/Disable flood reduction",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "hello_interval": {
                      "aliases": [],
                      "description": "Specify Time between HELLO packets",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "instance_id": {
                      "aliases": [],
                      "description": "Specify instance ID",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "mpls_ldp_sync": {
                      "aliases": [],
                      "description": "Enable/Disable MPLS LDP Sync",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "mtu_ignore": {
                      "aliases": [],
                      "description": "Enable/Disable ignoring of MTU in DBD packets",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "network": {
                      "aliases": [],
                      "description": "Specify Network type",
                      "type": "str",
                      "required": false,
                      "choices": [
                        "broadcast",
                        "non-broadcast",
                        "point-to-multipoint",
                        "point-to-point"
                      ],
                      "suboptions": {}
                    },
                    "nssa": {
                      "aliases": [],
                      "description": "NSSA settings for the area",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "default_information_originate": {
                          "aliases": [],
                          "description": "Originate default Type 7 LSA",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "metric": {
                              "aliases": [],
                              "description": "ospfv3 default metric",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "metric_type": {
                              "aliases": [],
                              "description": "Metric type for default routes",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "set": {
                              "aliases": [],
                              "description": "Set nssa to default information originate",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "no_redistribution": {
                          "aliases": [],
                          "description": "Do not send redistributed LSAs into NSSA area",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "no_summary": {
                          "aliases": [],
                          "description": "Do not send summary LSAs into NSSA area",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "set": {
                          "aliases": [],
                          "description": "Configure area as NSSA",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "translate": {
                          "aliases": [],
                          "description": "Translate LSA",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "type7": {
                              "aliases": [],
                              "description": "Translate from Type 7 to Type 5",
                              "type": "dict",
                              "required": false,
                              "suboptions": {
                                "always": {
                                  "aliases": [],
                                  "description": "Always translate LSAs",
                                  "type": "bool",
                                  "required": true,
                                  "suboptions": {}
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "packet_size": {
                      "aliases": [],
                      "description": "Specify limit size of OSPFv3 packets",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "passive": {
                      "aliases": [],
                      "description": "Enable/Disable routing updates on an interface",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "prefix_suppression": {
                      "aliases": [],
                      "description": "Hide all transit addresses on this interface",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "priority": {
                      "aliases": [],
                      "description": "Specify Router priority",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "ranges": {
                      "aliases": [],
                      "description": "Summarize routes matching address/mask (border routers only)",
                      "type": "list",
                      "required": false,
                      "elements": "dict",
                      "suboptions": {
                        "address": {
                          "aliases": [],
                          "description": "IP in Prefix format (X:X::X/length)",
                          "type": "str",
                          "required": true,
                          "suboptions": {}
                        },
                        "advertise": {
                          "aliases": [],
                          "description": "Advertise this range (default)",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "cost": {
                          "aliases": [],
                          "description": "Specify user specified metric for this range",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "not_advertise": {
                          "aliases": [],
                          "description": "DoNotAdvertise this range",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "retransmit_interval": {
                      "aliases": [],
                      "description": "Specify Delay between LSA retransmissions",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "stub": {
                      "aliases": [],
                      "description": "Settings for configuring the area as a stub",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "no_summary": {
                          "aliases": [],
                          "description": "Do not send summary LSA into stub area",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "set": {
                          "aliases": [],
                          "description": "Configure the area as a stub",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "transmit_delay": {
                      "aliases": [],
                      "description": "Specify estimated time needed to send link-state update packet",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "virtual_link": {
                      "aliases": [],
                      "description": "Define a virtual link",
                      "type": "list",
                      "required": false,
                      "elements": "dict",
                      "suboptions": {
                        "authentication": {
                          "aliases": [],
                          "description": "Enable authentication",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "disable": {
                              "aliases": [],
                              "description": "Do not authenticate OSPFv3 packets",
                              "default": "False",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "ipsec": {
                              "aliases": [],
                              "description": "Specify IPSec AH authentication attributes",
                              "type": "dict",
                              "required": false,
                              "suboptions": {
                                "algorithim_type": {
                                  "aliases": [],
                                  "description": "Specify the type of algorithim",
                                  "type": "str",
                                  "required": false,
                                  "choices": [
                                    "md5",
                                    "sha1"
                                  ],
                                  "suboptions": {}
                                },
                                "clear_key": {
                                  "aliases": [],
                                  "description": "Specify key in cleartext form",
                                  "type": "str",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "key": {
                                  "aliases": [],
                                  "description": "Specify key",
                                  "type": "str",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "password_key": {
                                  "aliases": [],
                                  "description": "Specify key in encrypted form",
                                  "type": "str",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "spi": {
                                  "aliases": [],
                                  "description": "Specify the Security Parameter Index value",
                                  "type": "int",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            }
                          }
                        },
                        "dead_interval": {
                          "aliases": [],
                          "description": "Interval after which a neighbor is declared dead",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "encryption": {
                          "aliases": [],
                          "description": "Encrypt and authenticate OSPFv3 packets",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "disable": {
                              "aliases": [],
                              "description": "Do not encrypt OSPFv3 packets",
                              "default": "False",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "ipsec": {
                              "aliases": [],
                              "description": "Specify IPSec ESP encryption and authentication",
                              "type": "dict",
                              "required": false,
                              "suboptions": {
                                "esp": {
                                  "aliases": [],
                                  "description": "Specify encryption parameters",
                                  "type": "dict",
                                  "required": false,
                                  "suboptions": {
                                    "aes": {
                                      "aliases": [],
                                      "description": "This specify the aes algorithim",
                                      "type": "dict",
                                      "required": false,
                                      "suboptions": {
                                        "algorithim_type": {
                                          "aliases": [],
                                          "description": "Specify the bit encryption for aes algorithim",
                                          "type": "str",
                                          "required": false,
                                          "choices": [
                                            "192",
                                            "256"
                                          ],
                                          "suboptions": {}
                                        },
                                        "clear_key": {
                                          "aliases": [],
                                          "description": "Specify AES key in cleartext form",
                                          "type": "str",
                                          "required": false,
                                          "suboptions": {}
                                        },
                                        "key": {
                                          "aliases": [],
                                          "description": "Cleartext AES key",
                                          "type": "str",
                                          "required": false,
                                          "suboptions": {}
                                        },
                                        "password_key": {
                                          "aliases": [],
                                          "description": "Specify AES key in encrypted form",
                                          "type": "str",
                                          "required": false,
                                          "suboptions": {}
                                        }
                                      }
                                    },
                                    "des": {
                                      "aliases": [],
                                      "description": "This specify the des algorithim",
                                      "type": "dict",
                                      "required": false,
                                      "suboptions": {
                                        "clear_key": {
                                          "aliases": [],
                                          "description": "Specify AES key in cleartext form",
                                          "type": "str",
                                          "required": false,
                                          "suboptions": {}
                                        },
                                        "key": {
                                          "aliases": [],
                                          "description": "Cleartext AES key",
                                          "type": "str",
                                          "required": false,
                                          "suboptions": {}
                                        },
                                        "password_key": {
                                          "aliases": [],
                                          "description": "Specify AES key in encrypted form",
                                          "type": "str",
                                          "required": false,
                                          "suboptions": {}
                                        }
                                      }
                                    },
                                    "null_encryption": {
                                      "aliases": [],
                                      "description": "Specify null encryption attributes",
                                      "type": "dict",
                                      "required": false,
                                      "suboptions": {
                                        "authentication": {
                                          "aliases": [],
                                          "description": "Specify authentication parameters",
                                          "type": "dict",
                                          "required": false,
                                          "suboptions": {
                                            "algorithim_type": {
                                              "aliases": [],
                                              "description": "Specify the type of algorithim",
                                              "type": "str",
                                              "required": false,
                                              "choices": [
                                                "md5",
                                                "sha1"
                                              ],
                                              "suboptions": {}
                                            },
                                            "clear_key": {
                                              "aliases": [],
                                              "description": "Specify key in cleartext form",
                                              "type": "str",
                                              "required": false,
                                              "suboptions": {}
                                            },
                                            "key": {
                                              "aliases": [],
                                              "description": "Specify key",
                                              "type": "str",
                                              "required": false,
                                              "suboptions": {}
                                            },
                                            "password_key": {
                                              "aliases": [],
                                              "description": "Specify key in encrypted form",
                                              "type": "str",
                                              "required": false,
                                              "suboptions": {}
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "triple_des": {
                                      "aliases": [],
                                      "description": "This specify the triple DES algorithim",
                                      "type": "dict",
                                      "required": false,
                                      "suboptions": {
                                        "clear_key": {
                                          "aliases": [],
                                          "description": "Specify 3DES key in cleartext form",
                                          "type": "str",
                                          "required": false,
                                          "suboptions": {}
                                        },
                                        "key": {
                                          "aliases": [],
                                          "description": "Cleartext 3DES key",
                                          "type": "str",
                                          "required": false,
                                          "suboptions": {}
                                        },
                                        "password_key": {
                                          "aliases": [],
                                          "description": "Specify 3DES key in encrypted form",
                                          "type": "str",
                                          "required": false,
                                          "suboptions": {}
                                        }
                                      }
                                    }
                                  }
                                },
                                "spi": {
                                  "aliases": [],
                                  "description": "Specify the Security Parameter Index value",
                                  "type": "int",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            }
                          }
                        },
                        "hello_interval": {
                          "aliases": [],
                          "description": "Time between HELLO packets",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "id": {
                          "aliases": [],
                          "description": "Router-ID of virtual link neighbor (A.B.C.D)",
                          "type": "str",
                          "required": true,
                          "suboptions": {}
                        },
                        "retransmit_interval": {
                          "aliases": [],
                          "description": "Delay between LSA retransmissions",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "transmit_delay": {
                          "aliases": [],
                          "description": "Link state transmit delay",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    }
                  }
                },
                "authentication": {
                  "aliases": [],
                  "description": "Enable authentication",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "disable": {
                      "aliases": [],
                      "description": "Do not authenticate OSPFv3 packets",
                      "default": "False",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "ipsec": {
                      "aliases": [],
                      "description": "Specify IPSec AH authentication attributes",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "algorithim_type": {
                          "aliases": [],
                          "description": "Specify the type of algorithim",
                          "type": "str",
                          "required": false,
                          "choices": [
                            "md5",
                            "sha1"
                          ],
                          "suboptions": {}
                        },
                        "clear_key": {
                          "aliases": [],
                          "description": "Specify key in cleartext form",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "key": {
                          "aliases": [],
                          "description": "Specify key",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "password_key": {
                          "aliases": [],
                          "description": "Specify key in encrypted form",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "spi": {
                          "aliases": [],
                          "description": "Specify the Security Parameter Index value",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    }
                  }
                },
                "auto_cost": {
                  "aliases": [],
                  "description": "Calculate ospfv3 interface cost according to bandwidth",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "disable": {
                      "aliases": [],
                      "description": "Assign ospfv3 cost based on interface type",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "reference_bandwidth": {
                      "aliases": [],
                      "description": "Specify reference bandwidth in megabits per sec",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "bfd": {
                  "aliases": [],
                  "description": "Configure BFD parameters",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "fast_detect": {
                      "aliases": [],
                      "description": "Configure fast detection",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "set": {
                          "aliases": [],
                          "description": "Enable fast detection only",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "strict_mode": {
                          "aliases": [],
                          "description": "Hold down neighbor session until BFD session is up",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "minimum_interval": {
                      "aliases": [],
                      "description": "Hello interval in milli-seconds",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "multiplier": {
                      "aliases": [],
                      "description": "Detect multiplier",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "capability": {
                  "aliases": [],
                  "description": "Enable specific OSPFv3 feature",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "type7": {
                      "aliases": [],
                      "description": "Specify type7 nssa capability",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "prefer": {
                          "aliases": [],
                          "description": "Prefer type7 externals over type5",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "translate": {
                          "aliases": [],
                          "description": "Translate type7 to type5",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    }
                  }
                },
                "cost": {
                  "aliases": [],
                  "description": "Specify Interface cost",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "database_filter": {
                  "aliases": [],
                  "description": "Filter LSAs during synchronization and flooding",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "all_outgoing_lsa": {
                      "aliases": [],
                      "description": "Filter all outgoing LSA",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "dead_interval": {
                  "aliases": [],
                  "description": "Interval after which a neighbor is declared dead",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "default_information_originate": {
                  "aliases": [],
                  "description": "Control distribution of default information",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "always": {
                      "aliases": [],
                      "description": "Always advertise default route",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "metric": {
                      "aliases": [],
                      "description": "ospfv3 default metric",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "metric_type": {
                      "aliases": [],
                      "description": "ospfv3 metric type for default routes",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "route_policy": {
                      "aliases": [],
                      "description": "Apply route-policy to default-information origination",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "set": {
                      "aliases": [],
                      "description": "Enable distribution of default route",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "tag": {
                      "aliases": [],
                      "description": "Set tag for default route",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "default_metric": {
                  "aliases": [],
                  "description": "Set metric of redistributed routes",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "demand_circuit": {
                  "aliases": [],
                  "description": "Enable/Disable ospfv3 demand circuit",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "distance": {
                  "aliases": [],
                  "description": "Define an administrative distance",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "admin_distance": {
                      "aliases": [],
                      "description": "Administrative distance",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "ospfv3_distance": {
                      "aliases": [],
                      "description": "ospfv3 administrative distance",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "external": {
                          "aliases": [],
                          "description": "Distance for external routes",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "inter_area": {
                          "aliases": [],
                          "description": "Distance for inter-area routes",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "intra_area": {
                          "aliases": [],
                          "description": "Distance for intra-area routes",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    }
                  }
                },
                "distribute_list": {
                  "aliases": [],
                  "description": "Filter prefixes to/from RIB",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "prefix_list": {
                      "aliases": [],
                      "description": "Filter prefixes based on an IPv6 prefix-list",
                      "type": "list",
                      "required": false,
                      "elements": "str",
                      "suboptions": {
                        "in": {
                          "aliases": [],
                          "description": "Filter prefixes installed to RIB",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "name": {
                          "aliases": [],
                          "description": "Specify Prefix-list name",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "out": {
                          "aliases": [],
                          "description": "Filter prefixes redistributed from RIB",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    }
                  }
                },
                "encryption": {
                  "aliases": [],
                  "description": "Encrypt and authenticate OSPFv3 packets",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "disable": {
                      "aliases": [],
                      "description": "Do not encrypt OSPFv3 packets",
                      "default": "False",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "ipsec": {
                      "aliases": [],
                      "description": "Specify IPSec ESP encryption and authentication",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "esp": {
                          "aliases": [],
                          "description": "Specify encryption parameters",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "aes": {
                              "aliases": [],
                              "description": "This specify the aes algorithim",
                              "type": "dict",
                              "required": false,
                              "suboptions": {
                                "algorithim_type": {
                                  "aliases": [],
                                  "description": "Specify the bit encryption for aes algorithim",
                                  "type": "str",
                                  "required": false,
                                  "choices": [
                                    "192",
                                    "256"
                                  ],
                                  "suboptions": {}
                                },
                                "clear_key": {
                                  "aliases": [],
                                  "description": "Specify AES key in cleartext form",
                                  "type": "str",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "key": {
                                  "aliases": [],
                                  "description": "Cleartext AES key",
                                  "type": "str",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "password_key": {
                                  "aliases": [],
                                  "description": "Specify AES key in encrypted form",
                                  "type": "str",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            },
                            "des": {
                              "aliases": [],
                              "description": "This specify the des algorithim",
                              "type": "dict",
                              "required": false,
                              "suboptions": {
                                "clear_key": {
                                  "aliases": [],
                                  "description": "Specify AES key in cleartext form",
                                  "type": "str",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "key": {
                                  "aliases": [],
                                  "description": "Cleartext AES key",
                                  "type": "str",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "password_key": {
                                  "aliases": [],
                                  "description": "Specify AES key in encrypted form",
                                  "type": "str",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            },
                            "null_encryption": {
                              "aliases": [],
                              "description": "Specify null encryption attributes",
                              "type": "dict",
                              "required": false,
                              "suboptions": {
                                "authentication": {
                                  "aliases": [],
                                  "description": "Specify authentication parameters",
                                  "type": "dict",
                                  "required": false,
                                  "suboptions": {
                                    "algorithim_type": {
                                      "aliases": [],
                                      "description": "Specify the type of algorithim",
                                      "type": "str",
                                      "required": false,
                                      "choices": [
                                        "md5",
                                        "sha1"
                                      ],
                                      "suboptions": {}
                                    },
                                    "clear_key": {
                                      "aliases": [],
                                      "description": "Specify key in cleartext form",
                                      "type": "str",
                                      "required": false,
                                      "suboptions": {}
                                    },
                                    "key": {
                                      "aliases": [],
                                      "description": "Specify key",
                                      "type": "str",
                                      "required": false,
                                      "suboptions": {}
                                    },
                                    "password_key": {
                                      "aliases": [],
                                      "description": "Specify key in encrypted form",
                                      "type": "str",
                                      "required": false,
                                      "suboptions": {}
                                    }
                                  }
                                }
                              }
                            },
                            "triple_des": {
                              "aliases": [],
                              "description": "This specify the triple DES algorithim",
                              "type": "dict",
                              "required": false,
                              "suboptions": {
                                "clear_key": {
                                  "aliases": [],
                                  "description": "Specify 3DES key in cleartext form",
                                  "type": "str",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "key": {
                                  "aliases": [],
                                  "description": "Cleartext 3DES key",
                                  "type": "str",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "password_key": {
                                  "aliases": [],
                                  "description": "Specify 3DES key in encrypted form",
                                  "type": "str",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            }
                          }
                        },
                        "spi": {
                          "aliases": [],
                          "description": "Specify the Security Parameter Index value",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    }
                  }
                },
                "fast_reroute": {
                  "aliases": [],
                  "description": "Specify IP Fast Reroute",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "disabled": {
                      "aliases": [],
                      "description": "Disable IP fast reroute",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "per_link": {
                      "aliases": [],
                      "description": "Specify per-prefix computation",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "information_type": {
                          "aliases": [],
                          "description": "Specify per-link LFA exclusion or FRR LFA candidate information",
                          "type": "str",
                          "required": false,
                          "choices": [
                            "exclude",
                            "lfa_candidate"
                          ],
                          "suboptions": {}
                        },
                        "interface": {
                          "aliases": [],
                          "description": "Specify Per-link LFA exclusion information",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "bundle_ether": {
                              "aliases": [],
                              "description": "Specify Aggregated Ethernet interface(s)",
                              "type": "list",
                              "required": false,
                              "elements": "int",
                              "suboptions": {}
                            },
                            "bvi": {
                              "aliases": [],
                              "description": "Specify Bridge-Group Virtual Interface",
                              "type": "list",
                              "required": false,
                              "elements": "int",
                              "suboptions": {}
                            },
                            "fast_ethernet": {
                              "aliases": [],
                              "description": "Specify FastEthernet/IEEE 802.3 interface(s)",
                              "type": "list",
                              "required": false,
                              "elements": "str",
                              "suboptions": {}
                            },
                            "fiftygige": {
                              "aliases": [],
                              "description": "Specify FiftyGigE/IEEE 802.3 interface(s)",
                              "type": "list",
                              "required": false,
                              "elements": "str",
                              "suboptions": {}
                            },
                            "fortygige": {
                              "aliases": [],
                              "description": "Specify FortyGigE/IEEE 802.3 interface(s)",
                              "type": "list",
                              "required": false,
                              "elements": "str",
                              "suboptions": {}
                            },
                            "fourhundredgige": {
                              "aliases": [],
                              "description": "Specify FourHundredGigE/IEEE 802.3 interface(s)",
                              "type": "list",
                              "required": false,
                              "elements": "str",
                              "suboptions": {}
                            },
                            "gigabitethernet": {
                              "aliases": [],
                              "description": "Specify GigabitEthernet/IEEE 802.3 interface(s)",
                              "type": "list",
                              "required": false,
                              "elements": "str",
                              "suboptions": {}
                            },
                            "hundredgige": {
                              "aliases": [],
                              "description": "Specify HundredGigE/IEEE 802.3 interface(s)",
                              "type": "list",
                              "required": false,
                              "elements": "str",
                              "suboptions": {}
                            },
                            "mgmteth": {
                              "aliases": [],
                              "description": "Specify MgmtEth/IEEE 802.3 interface(s)",
                              "type": "list",
                              "required": false,
                              "elements": "str",
                              "suboptions": {}
                            },
                            "multilink": {
                              "aliases": [],
                              "description": "Specify Multilink network interface(s)",
                              "type": "list",
                              "required": false,
                              "elements": "str",
                              "suboptions": {}
                            },
                            "nve": {
                              "aliases": [],
                              "description": "Specify Network Virtualization Endpoint Interface(s)",
                              "type": "list",
                              "required": false,
                              "elements": "int",
                              "suboptions": {}
                            },
                            "pos_int": {
                              "aliases": [],
                              "description": "Specify Aggregated pos interface(s)",
                              "type": "list",
                              "required": false,
                              "elements": "int",
                              "suboptions": {}
                            },
                            "pw_ether": {
                              "aliases": [],
                              "description": "Specify PWHE Ethernet Interface",
                              "type": "list",
                              "required": false,
                              "elements": "int",
                              "suboptions": {}
                            },
                            "pw_iw": {
                              "aliases": [],
                              "description": "Specify PWHE VC11 IP Interworking Interface",
                              "type": "list",
                              "required": false,
                              "elements": "int",
                              "suboptions": {}
                            },
                            "serial": {
                              "aliases": [],
                              "description": "Specify Serial network interface(s)",
                              "type": "list",
                              "required": false,
                              "elements": "str",
                              "suboptions": {}
                            },
                            "srp": {
                              "aliases": [],
                              "description": "Specify SRP interface(s)",
                              "type": "list",
                              "required": false,
                              "elements": "str",
                              "suboptions": {}
                            },
                            "tengige": {
                              "aliases": [],
                              "description": "Specify TenGigabitEthernet/IEEE 802.3 interface(s)",
                              "type": "list",
                              "required": false,
                              "elements": "str",
                              "suboptions": {}
                            },
                            "tunnel_ip": {
                              "aliases": [],
                              "description": "Specify GRE/IPinIP Tunnel Interface(s)",
                              "type": "list",
                              "required": false,
                              "elements": "int",
                              "suboptions": {}
                            },
                            "tunnel_ipsec": {
                              "aliases": [],
                              "description": "Specify IPSec Tunnel interface(s)",
                              "type": "list",
                              "required": false,
                              "elements": "int",
                              "suboptions": {}
                            },
                            "tunnel_mpls": {
                              "aliases": [],
                              "description": "MPLS Transport Protocol Tunnel interface",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "tunnel_mte": {
                              "aliases": [],
                              "description": "Specify MPLS Traffic Engineering P2MP Tunnel interface(s)",
                              "type": "list",
                              "required": false,
                              "elements": "int",
                              "suboptions": {}
                            },
                            "twentyfivegige": {
                              "aliases": [],
                              "description": "Specify TwentyFiveGigabitEthernet/IEEE 802.3 interface(s)",
                              "type": "list",
                              "required": false,
                              "elements": "str",
                              "suboptions": {}
                            },
                            "twohundredgige": {
                              "aliases": [],
                              "description": "Specify TwoHundredGigE/IEEE 802.3 interface(s)",
                              "type": "list",
                              "required": false,
                              "elements": "str",
                              "suboptions": {}
                            }
                          }
                        },
                        "use_candidate_only": {
                          "aliases": [],
                          "description": "Enable/Disable backup selection from candidate-list only",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "per_prefix": {
                      "aliases": [],
                      "description": "Specify per-prefix computation",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "information_type": {
                          "aliases": [],
                          "description": "Specify per_prefix LFA exclusion or FRR LFA candidate information",
                          "type": "str",
                          "required": false,
                          "choices": [
                            "exclude",
                            "lfa_candidate"
                          ],
                          "suboptions": {}
                        },
                        "interface": {
                          "aliases": [],
                          "description": "Specify Per-link LFA exclusion information",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "bundle_ether": {
                              "aliases": [],
                              "description": "Specify Aggregated Ethernet interface(s)",
                              "type": "list",
                              "required": false,
                              "elements": "int",
                              "suboptions": {}
                            },
                            "bvi": {
                              "aliases": [],
                              "description": "Specify Bridge-Group Virtual Interface",
                              "type": "list",
                              "required": false,
                              "elements": "int",
                              "suboptions": {}
                            },
                            "fast_ethernet": {
                              "aliases": [],
                              "description": "Specify FastEthernet/IEEE 802.3 interface(s)",
                              "type": "list",
                              "required": false,
                              "elements": "str",
                              "suboptions": {}
                            },
                            "fiftygige": {
                              "aliases": [],
                              "description": "Specify FiftyGigE/IEEE 802.3 interface(s)",
                              "type": "list",
                              "required": false,
                              "elements": "str",
                              "suboptions": {}
                            },
                            "fortygige": {
                              "aliases": [],
                              "description": "Specify FortyGigE/IEEE 802.3 interface(s)",
                              "type": "list",
                              "required": false,
                              "elements": "str",
                              "suboptions": {}
                            },
                            "fourhundredgige": {
                              "aliases": [],
                              "description": "Specify FourHundredGigE/IEEE 802.3 interface(s)",
                              "type": "list",
                              "required": false,
                              "elements": "str",
                              "suboptions": {}
                            },
                            "gigabitethernet": {
                              "aliases": [],
                              "description": "Specify GigabitEthernet/IEEE 802.3 interface(s)",
                              "type": "list",
                              "required": false,
                              "elements": "str",
                              "suboptions": {}
                            },
                            "hundredgige": {
                              "aliases": [],
                              "description": "Specify HundredGigE/IEEE 802.3 interface(s)",
                              "type": "list",
                              "required": false,
                              "elements": "str",
                              "suboptions": {}
                            },
                            "mgmteth": {
                              "aliases": [],
                              "description": "Specify MgmtEth/IEEE 802.3 interface(s)",
                              "type": "list",
                              "required": false,
                              "elements": "str",
                              "suboptions": {}
                            },
                            "multilink": {
                              "aliases": [],
                              "description": "Specify Multilink network interface(s)",
                              "type": "list",
                              "required": false,
                              "elements": "str",
                              "suboptions": {}
                            },
                            "nve": {
                              "aliases": [],
                              "description": "Specify Network Virtualization Endpoint Interface(s)",
                              "type": "list",
                              "required": false,
                              "elements": "int",
                              "suboptions": {}
                            },
                            "post_int": {
                              "aliases": [],
                              "description": "Specify Aggregated pos interface(s)",
                              "type": "list",
                              "required": false,
                              "elements": "int",
                              "suboptions": {}
                            },
                            "pw_ether": {
                              "aliases": [],
                              "description": "Specify PWHE Ethernet Interface",
                              "type": "list",
                              "required": false,
                              "elements": "int",
                              "suboptions": {}
                            },
                            "pw_iw": {
                              "aliases": [],
                              "description": "Specify PWHE VC11 IP Interworking Interface",
                              "type": "list",
                              "required": false,
                              "elements": "int",
                              "suboptions": {}
                            },
                            "serial": {
                              "aliases": [],
                              "description": "Specify Serial network interface(s)",
                              "type": "list",
                              "required": false,
                              "elements": "str",
                              "suboptions": {}
                            },
                            "srp": {
                              "aliases": [],
                              "description": "Specify SRP interface(s)",
                              "type": "list",
                              "required": false,
                              "elements": "str",
                              "suboptions": {}
                            },
                            "tengige": {
                              "aliases": [],
                              "description": "Specify TenGigabitEthernet/IEEE 802.3 interface(s)",
                              "type": "list",
                              "required": false,
                              "elements": "str",
                              "suboptions": {}
                            },
                            "tunnel_ip": {
                              "aliases": [],
                              "description": "Specify GRE/IPinIP Tunnel Interface(s)",
                              "type": "list",
                              "required": false,
                              "elements": "int",
                              "suboptions": {}
                            },
                            "tunnel_ipsec": {
                              "aliases": [],
                              "description": "Specify IPSec Tunnel interface(s)",
                              "type": "list",
                              "required": false,
                              "elements": "int",
                              "suboptions": {}
                            },
                            "tunnel_mpls": {
                              "aliases": [],
                              "description": "MPLS Transport Protocol Tunnel interface",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "tunnel_mte": {
                              "aliases": [],
                              "description": "Specify MPLS Traffic Engineering P2MP Tunnel interface(s)",
                              "type": "list",
                              "required": false,
                              "elements": "int",
                              "suboptions": {}
                            },
                            "twentyfivegige": {
                              "aliases": [],
                              "description": "Specify TwentyFiveGigabitEthernet/IEEE 802.3 interface(s)",
                              "type": "list",
                              "required": false,
                              "elements": "str",
                              "suboptions": {}
                            },
                            "twohundredgige": {
                              "aliases": [],
                              "description": "Specify TwoHundredGigE/IEEE 802.3 interface(s)",
                              "type": "list",
                              "required": false,
                              "elements": "str",
                              "suboptions": {}
                            }
                          }
                        },
                        "use_candidate_only": {
                          "aliases": [],
                          "description": "Enable/Disable backup selection from candidate-list only",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    }
                  }
                },
                "flood_reduction": {
                  "aliases": [],
                  "description": "Enable/Disable flood reduction",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "graceful_restart": {
                  "aliases": [],
                  "description": "Enable Graceful-Restart",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "helper_disable": {
                      "aliases": [],
                      "description": "Disable router's helper support level",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "max_interval": {
                      "aliases": [],
                      "description": "Maximum route lifetime following restart",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "min_interval": {
                      "aliases": [],
                      "description": "Minimum interval between Graceful Restarts",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "set": {
                      "aliases": [],
                      "description": "Set graceful restart",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "hello_interval": {
                  "aliases": [],
                  "description": "Specify Time between HELLO packets",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "ignore_mospf_type6_lsa": {
                  "aliases": [],
                  "description": "Ignore MOSPF Type 6 LSA",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "instance_id": {
                  "aliases": [],
                  "description": "Specify instance ID",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "log_adjacency_changes": {
                  "aliases": [],
                  "description": "Log adjacency state changes",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "detail": {
                      "aliases": [],
                      "description": "Log all state changes",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "disable": {
                      "aliases": [],
                      "description": "Disable log adjacency changes",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "set": {
                      "aliases": [],
                      "description": "Set log adjacency",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "maximum": {
                  "aliases": [],
                  "description": "Set OSPFv3 limits",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "interfaces": {
                      "aliases": [],
                      "description": "Specify limit for number of interfaces",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "paths": {
                      "aliases": [],
                      "description": "Specify limit for number of paths",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "redistributed_prefixes": {
                      "aliases": [],
                      "description": "Specify limit for number of redistributed prefixes",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "mpls_ldp_sync": {
                  "aliases": [],
                  "description": "Enable/Disable MPLS LDP Sync",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "mtu_ignore": {
                  "aliases": [],
                  "description": "Enable/Disable ignoring of MTU in DBD packets",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "network": {
                  "aliases": [],
                  "description": "Specify Network type",
                  "type": "str",
                  "required": false,
                  "choices": [
                    "broadcast",
                    "non-broadcast",
                    "point-to-multipoint",
                    "point-to-point"
                  ],
                  "suboptions": {}
                },
                "nsr": {
                  "aliases": [],
                  "description": "Enable/Disable NSR for all VRFs in this process",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "packet_size": {
                  "aliases": [],
                  "description": "Specify limit size of OSPFv3 packets",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "passive": {
                  "aliases": [],
                  "description": "Enable/Disable routing updates on an interface",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "prefix_suppression": {
                  "aliases": [],
                  "description": "Hide all transit addresses on this interface",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "priority": {
                  "aliases": [],
                  "description": "Specify Router priority",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "process_id": {
                  "aliases": [],
                  "description": "The OSPFv3 Process ID",
                  "type": "str",
                  "required": true,
                  "suboptions": {}
                },
                "protocol_shutdown": {
                  "aliases": [],
                  "description": "Gracefully shutdown the OSPFv3 protocol",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "redistribute": {
                  "aliases": [],
                  "description": "Redistribute information from another routing Protocol",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "application": {
                      "aliases": [],
                      "description": "Specify application routes",
                      "type": "list",
                      "required": false,
                      "elements": "dict",
                      "suboptions": {
                        "id": {
                          "aliases": [],
                          "description": "OnePK Application name",
                          "type": "str",
                          "required": true,
                          "suboptions": {}
                        },
                        "metric": {
                          "aliases": [],
                          "description": "Specify metric for redistributed routes",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "metric_type": {
                          "aliases": [],
                          "description": "Specify OSPFv3 exterior metric type for redistributed routes",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "route_policy": {
                          "aliases": [],
                          "description": "Apply route policy to redistribution",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "set": {
                          "aliases": [],
                          "description": "Set application route",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "tag": {
                          "aliases": [],
                          "description": "Set tag for routes redistributed into OSPFv3",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "bgp": {
                      "aliases": [],
                      "description": "Specify bgp routes",
                      "type": "list",
                      "required": false,
                      "elements": "dict",
                      "suboptions": {
                        "id": {
                          "aliases": [],
                          "description": "BGP process name",
                          "type": "int",
                          "required": true,
                          "suboptions": {}
                        },
                        "metric": {
                          "aliases": [],
                          "description": "Specify metric for redistributed routes",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "metric_type": {
                          "aliases": [],
                          "description": "Specify OSPFv3 exterior metric type for redistributed routes",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "preserved_med": {
                          "aliases": [],
                          "description": "Specify preserve med of BGP routes",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "route_policy": {
                          "aliases": [],
                          "description": "Apply route policy to redistribution",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "set": {
                          "aliases": [],
                          "description": "Set bgp route number",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "tag": {
                          "aliases": [],
                          "description": "Set tag for routes redistributed into OSPFv3",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "connected": {
                      "aliases": [],
                      "description": "Specify connected routes",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "metric": {
                          "aliases": [],
                          "description": "Specify metric for redistributed routes",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "metric_type": {
                          "aliases": [],
                          "description": "Specify OSPFv3 exterior metric type for redistributed routes",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "route_policy": {
                          "aliases": [],
                          "description": "Apply route policy to redistribution",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "set": {
                          "aliases": [],
                          "description": "Set connected route",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "tag": {
                          "aliases": [],
                          "description": "Set tag for routes redistributed into OSPFv3",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "eigrp": {
                      "aliases": [],
                      "description": "Specify eigrp routes",
                      "type": "list",
                      "required": false,
                      "elements": "dict",
                      "suboptions": {
                        "id": {
                          "aliases": [],
                          "description": "EIGRP  process name",
                          "type": "int",
                          "required": true,
                          "suboptions": {}
                        },
                        "match": {
                          "aliases": [],
                          "description": "Redistribution of EIGRP routes",
                          "type": "str",
                          "required": false,
                          "choices": [
                            "external",
                            "internal"
                          ],
                          "suboptions": {}
                        },
                        "metric": {
                          "aliases": [],
                          "description": "Specify metric for redistributed routes",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "metric_type": {
                          "aliases": [],
                          "description": "Specify OSPFv3 exterior metric type for redistributed routes",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "route_policy": {
                          "aliases": [],
                          "description": "Apply route policy to redistribution",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "set": {
                          "aliases": [],
                          "description": "Set bgp route number",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "tag": {
                          "aliases": [],
                          "description": "Set tag for routes redistributed into OSPFv3",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "isis": {
                      "aliases": [],
                      "description": "Specify IS-IS routes",
                      "type": "list",
                      "required": false,
                      "elements": "dict",
                      "suboptions": {
                        "id": {
                          "aliases": [],
                          "description": "IS-IS name",
                          "type": "str",
                          "required": true,
                          "suboptions": {}
                        },
                        "level": {
                          "aliases": [],
                          "description": "Specify IS-IS level routes",
                          "type": "str",
                          "required": false,
                          "choices": [
                            "level-1",
                            "level-1-2",
                            "level-2"
                          ],
                          "suboptions": {}
                        },
                        "metric": {
                          "aliases": [],
                          "description": "Specify metric for redistributed routes",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "metric_type": {
                          "aliases": [],
                          "description": "Specify OSPFv3 exterior metric type for redistributed routes",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "route_policy": {
                          "aliases": [],
                          "description": "Apply route policy to redistribution",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "set": {
                          "aliases": [],
                          "description": "Set IS-IS route number",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "tag": {
                          "aliases": [],
                          "description": "Set tag for routes redistributed into OSPFv3",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "mobile": {
                      "aliases": [],
                      "description": "Specify mobile routes",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "metric": {
                          "aliases": [],
                          "description": "Specify metric for redistributed routes",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "metric_type": {
                          "aliases": [],
                          "description": "Specify OSPFv3 exterior metric type for redistributed routes",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "route_policy": {
                          "aliases": [],
                          "description": "Apply route policy to redistribution",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "set": {
                          "aliases": [],
                          "description": "Set mobile route number",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "tag": {
                          "aliases": [],
                          "description": "Set tag for routes redistributed into OSPFv3",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "ospfv3": {
                      "aliases": [],
                      "description": "Specify ospfv3 routes",
                      "type": "list",
                      "required": false,
                      "elements": "dict",
                      "suboptions": {
                        "id": {
                          "aliases": [],
                          "description": "OSPFv3 process name",
                          "type": "str",
                          "required": true,
                          "suboptions": {}
                        },
                        "match": {
                          "aliases": [],
                          "description": "Redistribution of OSPFv3 routes",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "external": {
                              "aliases": [],
                              "description": "Redistribute OSPFv3 external routes",
                              "type": "int",
                              "required": false,
                              "choices": [
                                "1",
                                "2"
                              ],
                              "suboptions": {}
                            },
                            "internal": {
                              "aliases": [],
                              "description": "Redistribute OSPFv3 internal routes",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "nssa_external": {
                              "aliases": [],
                              "description": "Redistribute NSSA OSPFv3 external routes",
                              "type": "int",
                              "required": false,
                              "choices": [
                                "1",
                                "2"
                              ],
                              "suboptions": {}
                            }
                          }
                        },
                        "metric": {
                          "aliases": [],
                          "description": "Specify metric for redistributed routes",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "metric_type": {
                          "aliases": [],
                          "description": "Specify OSPFv3 exterior metric type for redistributed routes",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "route_policy": {
                          "aliases": [],
                          "description": "Apply route policy to redistribution",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "set": {
                          "aliases": [],
                          "description": "Set ospfv3 route number",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "tag": {
                          "aliases": [],
                          "description": "Set tag for routes redistributed into OSPFv3",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "static": {
                      "aliases": [],
                      "description": "Specify static routes",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "metric": {
                          "aliases": [],
                          "description": "Specify metric for redistributed routes",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "metric_type": {
                          "aliases": [],
                          "description": "Specify OSPFv3 exterior metric type for redistributed routes",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "route_policy": {
                          "aliases": [],
                          "description": "Apply route policy to redistribution",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "set": {
                          "aliases": [],
                          "description": "Set static route",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "tag": {
                          "aliases": [],
                          "description": "Set tag for routes redistributed into OSPFv3",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "subscriber": {
                      "aliases": [],
                      "description": "Specify subscriber routes",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "metric": {
                          "aliases": [],
                          "description": "Specify metric for redistributed routes",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "metric_type": {
                          "aliases": [],
                          "description": "Specify OSPFv3 exterior metric type for redistributed routes",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "route_policy": {
                          "aliases": [],
                          "description": "Apply route policy to redistribution",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "set": {
                          "aliases": [],
                          "description": "Set static route",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "tag": {
                          "aliases": [],
                          "description": "Set tag for routes redistributed into OSPFv3",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    }
                  }
                },
                "retransmit_interval": {
                  "aliases": [],
                  "description": "Delay between LSA retransmissions",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "router_id": {
                  "aliases": [],
                  "description": "ospfv3 router-id in IPv4 address format (A.B.C.D)",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "spf_prefix_priority": {
                  "aliases": [],
                  "description": "Specify SPF configuration",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "disable": {
                      "aliases": [],
                      "description": "Disable SPF prefix priority",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "route_policy": {
                      "aliases": [],
                      "description": "Specify the route-policy to prioritize route install",
                      "type": "list",
                      "required": false,
                      "elements": "dict",
                      "suboptions": {
                        "name": {
                          "aliases": [],
                          "description": "Specify name of the policy",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "value": {
                          "aliases": [],
                          "description": "Specify parameter values for the policy ()",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    }
                  }
                },
                "stub_router": {
                  "aliases": [],
                  "description": "Enter stub router configuration submode",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "router_lsa": {
                      "aliases": [],
                      "description": "Modify self originated router LSAs",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "advertise_with": {
                          "aliases": [],
                          "description": "Advertise LSAs with specified type",
                          "type": "str",
                          "required": false,
                          "choices": [
                            "max-metric",
                            "r-bit",
                            "v6-bit"
                          ],
                          "suboptions": {}
                        },
                        "always": {
                          "aliases": [],
                          "description": "Force ospfv3 stub router mode unconditionally",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "external_lsa": {
                          "aliases": [],
                          "description": "Override External LSA metric in stub router mode",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "metric": {
                              "aliases": [],
                              "description": "Metric to use while in stub router mode",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "set": {
                              "aliases": [],
                              "description": "Set external lsa",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "include_stub": {
                          "aliases": [],
                          "description": "Set maximum metric for stub links in stub router mode",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "on_proc_migration": {
                          "aliases": [],
                          "description": "Enter stub router mode on ospfv3 process migration",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "on_proc_restart": {
                          "aliases": [],
                          "description": "Enter stub router mode on ospfv3 process restart",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "on_startup": {
                          "aliases": [],
                          "description": "Enter stub router mode on startup",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "time": {
                              "aliases": [],
                              "description": "Time in seconds to stay in stub router mode",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "wait_for_bgp": {
                              "aliases": [],
                              "description": "Exit stub router mode when BGP converges",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "on_switchover": {
                          "aliases": [],
                          "description": "Enter stub router mode on RP switchover",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "summary_lsa": {
                          "aliases": [],
                          "description": "Override Summary LSA metric in stub router mode",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "metric": {
                              "aliases": [],
                              "description": "Metric to use while in stub router mode",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "set": {
                              "aliases": [],
                              "description": "Enable summary LSA",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "summary_prefix": {
                  "aliases": [],
                  "description": "Configure IP address summaries",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "not_advertise": {
                      "aliases": [],
                      "description": "Suppress routes that match the specified prefix/mask pair",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "prefix": {
                      "aliases": [],
                      "description": "IP summary address/mask (A.B.C.D/prefix)",
                      "type": "str",
                      "required": true,
                      "suboptions": {}
                    },
                    "tag": {
                      "aliases": [],
                      "description": "Set tag",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "timers": {
                  "aliases": [],
                  "description": "Adjust routing timers",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "lsa_arrival": {
                      "aliases": [],
                      "description": "Specify LSA arrival timers",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "pacing": {
                      "aliases": [],
                      "description": "Specify pacing timers",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "flood": {
                          "aliases": [],
                          "description": "Flood pacing timer",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "lsa_group": {
                          "aliases": [],
                          "description": "LSA group pacing timer",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "retransmission": {
                          "aliases": [],
                          "description": "LSA group pacing timer",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "throttle": {
                      "aliases": [],
                      "description": "Adjust throttle timers",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "lsa": {
                          "aliases": [],
                          "description": "Specify LSA throttle timers",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "all_lsa_initial": {
                              "aliases": [],
                              "description": "Delay to generate first occurrence of LSA in milliseconds",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "all_lsa_minimum": {
                              "aliases": [],
                              "description": "Minimum delay between originating the same LSA in milliseconds",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "spf": {
                          "aliases": [],
                          "description": "Specify SPF throttle timers",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "spf_initial": {
                              "aliases": [],
                              "description": "Delay to generate first occurrence of SPF in ms",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "spf_minimum": {
                              "aliases": [],
                              "description": "Minimum delay between originating the same SPF in ms",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "trace": {
                  "aliases": [],
                  "description": "Specify OSPF tracing options",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "size": {
                      "aliases": [],
                      "description": "Delete existing buffer and create one with N entries",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "value": {
                      "aliases": [],
                      "description": "Specify trace entry",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "transmit_delay": {
                  "aliases": [],
                  "description": "Estimated time needed to send link-state update packet",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                }
              }
            }
          }
        },
        "running_config": {
          "aliases": [],
          "description": "This option is used only with state I(parsed).\nThe value of this option should be the output received from the IOS-XR device by executing the command B(show running-config router ospfv3).\nThe state I(parsed) reads the configuration from C(running_config) option and transforms it into Ansible structured data as per the resource module's argspec and the value is then returned in the I(parsed) key within the result.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The state the configuration should be left in",
          "default": "merged",
          "type": "str",
          "required": false,
          "choices": [
            "merged",
            "replaced",
            "overridden",
            "deleted",
            "gathered",
            "rendered",
            "parsed"
          ],
          "suboptions": {}
        }
      },
      "short_description": "ospfv3 resource module",
      "version_added": "1.1.0"
    },
    "examples": "\n# Using merged\n\n# Before state:\n# -------------\n#\n# RP/0/RP0/CPU0:anton#show running-config router ospfv3\n# Thu Jun 11 15:54:44.569 UTC\n# % No such configuration item(s)\n#\n\n- name: Merge provided OSPFv3 configuration with the existing configuration\n  cisco.iosxr.iosxr_ospfv3:\n    config:\n      processes:\n        - process_id: 27\n          areas:\n            - area_id: 10\n              hello_interval: 2\n        - process_id: 26\n          authentication:\n            disable: true\n        - process_id: 10\n          areas:\n            - area_id: 11\n              default_cost: 5\n              cost: 11\n            - area_id: 22\n              default_cost: 6\n        - process_id: 30\n          areas:\n            - area_id: 11\n              default_cost: 5\n            - area_id: 22\n              default_cost: 6\n          cost: 2\n          default_metric: 10\n          transmit_delay: 2\n          hello_interval: 1\n          dead_interval: 2\n          retransmit_interval: 2\n          packet_size: 577\n          priority: 1\n          router_id: '2.2.2.2'\n          demand_circuit: true\n          mtu_ignore: true\n    state: merged\n\n#\n#\n# ------------------------\n# Module Execution Result\n# ------------------------\n#\n#  \"before\": {}\n#\n#  \"commands\": [\n#         \"router ospfv3 10\",\n#         \"area 11 default-cost 5\",\n#         \"area 11 cost 11\",\n#         \"area 22 default-cost 6\",\n#         \"router ospfv3 26\",\n#         \"authentication disable\",\n#         \"router ospfv3 27\",\n#         \"area 10 hello-interval 2\",\n#         \"router ospfv3 30\",\n#         \"cost 2\",\n#         \"priority 1\",\n#         \"default-metric 10\",\n#         \"router-id 2.2.2.2\",\n#         \"demand-circuit\",\n#         \"packet-size 577\",\n#         \"transmit-delay 2\",\n#         \"dead-interval 2\",\n#         \"hello-interval 1\",\n#         \"retransmit-interval 2\",\n#         \"mtu-ignore\",\n#         \"area 11 default-cost 5\",\n#         \"area 22 default-cost 6\"\n#    ]\n#\n#  \"after\": {\n#         \"processes\": [\n#             {\n#                 \"areas\": [\n#                     {\n#                         \"area_id\": \"11\",\n#                         \"cost\": 11,\n#                         \"default_cost\": 5\n#                     },\n#                     {\n#                         \"area_id\": \"22\",\n#                         \"default_cost\": 6\n#                     }\n#                 ],\n#                 \"process_id\": \"10\"\n#             },\n#             {\n#                 \"authentication\": {\n#                     \"disable\": true\n#                 },\n#                 \"process_id\": \"26\"\n#             },\n#             {\n#                 \"areas\": [\n#                     {\n#                         \"area_id\": \"10\",\n#                         \"hello_interval\": 2\n#                     }\n#                 ],\n#                 \"process_id\": \"27\"\n#             },\n#             {\n#                 \"areas\": [\n#                     {\n#                         \"area_id\": \"11\",\n#                         \"default_cost\": 5\n#                     },\n#                     {\n#                         \"area_id\": \"22\",\n#                         \"default_cost\": 6\n#                     }\n#                 ],\n#                 \"cost\": 2,\n#                 \"dead_interval\": 2,\n#                 \"default_metric\": 10,\n#                 \"demand_circuit\": true,\n#                 \"hello_interval\": 1,\n#                 \"mtu_ignore\": true,\n#                 \"packet_size\": 577,\n#                 \"priority\": 1,\n#                 \"process_id\": \"30\",\n#                 \"retransmit_interval\": 2,\n#                 \"router_id\": \"2.2.2.2\",\n#                 \"transmit_delay\": 2\n#             }\n#         ]\n#     }\n#\n#\n# ------------\n# After state\n# ------------\n#\n# RP/0/RP0/CPU0:anton#show running-config router ospfv3\n# router ospfv3 10\n#  area 11\n#   cost 11\n#   default-cost 5\n#  !\n#  area 22\n#   default-cost 6\n#  !\n# !\n# router ospfv3 26\n#  authentication disable\n# !\n# router ospfv3 27\n#  area 10\n#   hello-interval 2\n#  !\n#  area 20\n#  !\n#  area 30\n#  !\n# !\n# router ospfv3 30\n#  cost 2\n#  priority 1\n#  mtu-ignore\n#  packet-size 577\n#  dead-interval 2\n#  retransmit-interval 2\n#  demand-circuit\n#  hello-interval 1\n#  transmit-delay 2\n#  router-id 2.2.2.2\n#  default-metric 10\n#  area 11\n#   default-cost 5\n#  !\n#  area 22\n#   default-cost 6\n#  !\n# router ospfv3 10\n#  area 11\n#   cost 11\n#   default-cost 5\n#  !\n#  area 22\n#   default-cost 6\n#  !\n# !\n# router ospfv3 26\n#  authentication disable\n# !\n# router ospfv3 27\n#  area 10\n#   hello-interval 2\n#  !\n#  area 20\n#  !\n#  area 30\n#  !\n# !\n# router ospfv3 30\n#  cost 2\n#  priority 1\n#  mtu-ignore\n#  packet-size 577\n#  dead-interval 2\n#  retransmit-interval 2\n#  demand-circuit\n#  hello-interval 1\n#  transmit-delay 2\n#  router-id 2.2.2.2\n#  default-metric 10\n#  area 11\n#   default-cost 5\n#  !\n#  area 22\n#   default-cost 6\n#  !\n# !\n\n\n\n# Using replaced\n#\n# ------------\n# Before state\n# ------------\n#\n#\n# RP/0/RP0/CPU0:anton#show running-config router ospf\n# router ospfv3 10\n#  area 11\n#   cost 11\n#   default-cost 5\n#  !\n#  area 22\n#   default-cost 6\n#  !\n# !\n# router ospfv3 26\n#  authentication disable\n# !\n# router ospfv3 27\n#  area 10\n#   hello-interval 2\n#  !\n#  area 20\n#  !\n#  area 30\n#  !\n# !\n# router ospfv3 30\n#  cost 2\n#  priority 1\n#  mtu-ignore\n#  packet-size 577\n#  dead-interval 2\n#  retransmit-interval 2\n#  demand-circuit\n#  hello-interval 1\n#  transmit-delay 2\n#  router-id 2.2.2.2\n#  default-metric 10\n#  area 11\n#   default-cost 5\n#  !\n#  area 22\n#   default-cost 6\n#  !\n# router ospfv3 10\n#  area 11\n#   cost 11\n#   default-cost 5\n#  !\n#  area 22\n#   default-cost 6\n#  !\n# !\n# router ospfv3 26\n#  authentication disable\n# !\n# router ospfv3 27\n#  area 10\n#   hello-interval 2\n#  !\n#  area 20\n#  !\n#  area 30\n#  !\n# !\n# router ospfv3 30\n#  cost 2\n#  priority 1\n#  mtu-ignore\n#  packet-size 577\n#  dead-interval 2\n#  retransmit-interval 2\n#  demand-circuit\n#  hello-interval 1\n#  transmit-delay 2\n#  router-id 2.2.2.2\n#  default-metric 10\n#  area 11\n#   default-cost 5\n#  !\n#  area 22\n#   default-cost 6\n#  !\n# !\n\n- name: Replace OSPFv3 routes configurations from the device\n  cisco.iosxr.iosxr_ospfv3:\n    config:\n      processes:\n        - process_id: 27\n          areas:\n            - area_id: 10\n              hello_interval: 2\n            - area_id: 20\n              cost: 2\n              default_cost: 2\n        - process_id: 26\n          authentication:\n            disable: true\n    state: replaced\n\n#\n#\n# ------------------------\n# Module Execution Result\n# ------------------------\n#\n#  \"before\": {\n#         \"processes\": [\n#             {\n#                 \"areas\": [\n#                     {\n#                         \"area_id\": \"11\",\n#                         \"cost\": 11,\n#                         \"default_cost\": 5\n#                     },\n#                     {\n#                         \"area_id\": \"22\",\n#                         \"default_cost\": 6\n#                     }\n#                 ],\n#                 \"process_id\": \"10\"\n#             },\n#             {\n#                 \"authentication\": {\n#                     \"disable\": true\n#                 },\n#                 \"process_id\": \"26\"\n#             },\n#             {\n#                 \"areas\": [\n#                     {\n#                         \"area_id\": \"10\",\n#                         \"hello_interval\": 2\n#                     }\n#                 ],\n#                 \"process_id\": \"27\"\n#             },\n#             {\n#                 \"areas\": [\n#                     {\n#                         \"area_id\": \"11\",\n#                         \"default_cost\": 5\n#                     },\n#                     {\n#                         \"area_id\": \"22\",\n#                         \"default_cost\": 6\n#                     }\n#                 ],\n#                 \"cost\": 2,\n#                 \"dead_interval\": 2,\n#                 \"default_metric\": 10,\n#                 \"demand_circuit\": true,\n#                 \"hello_interval\": 1,\n#                 \"mtu_ignore\": true,\n#                 \"packet_size\": 577,\n#                 \"priority\": 1,\n#                 \"process_id\": \"30\",\n#                 \"retransmit_interval\": 2,\n#                 \"router_id\": \"2.2.2.2\",\n#                 \"transmit_delay\": 2\n#             }\n#         ]\n#     }\n#\n#  \"commands\": [\n#         \"router ospfv3 27\",\n#         \"area 20 default-cost 2\",\n#         \"area 20 cost 2\"\n#     ]\n#\n#  \"after\": {\n#         \"processes\": [\n#             {\n#                 \"areas\": [\n#                     {\n#                         \"area_id\": \"11\",\n#                         \"cost\": 11,\n#                         \"default_cost\": 5\n#                     },\n#                     {\n#                         \"area_id\": \"22\",\n#                         \"default_cost\": 6\n#                     }\n#                 ],\n#                 \"process_id\": \"10\"\n#             },\n#             {\n#                 \"authentication\": {\n#                     \"disable\": true\n#                 },\n#                 \"process_id\": \"26\"\n#             },\n#             {\n#                 \"areas\": [\n#                     {\n#                         \"area_id\": \"10\",\n#                         \"hello_interval\": 2\n#                     },\n#                     {\n#                         \"area_id\": \"20\",\n#                         \"cost\": 2,\n#                         \"default_cost\": 2\n#                     }\n#                 ],\n#                 \"process_id\": \"27\"\n#             },\n#             {\n#                 \"areas\": [\n#                     {\n#                         \"area_id\": \"11\",\n#                         \"default_cost\": 5\n#                     },\n#                     {\n#                         \"area_id\": \"22\",\n#                         \"default_cost\": 6\n#                     }\n#                 ],\n#                 \"cost\": 2,\n#                 \"dead_interval\": 2,\n#                 \"default_metric\": 10,\n#                 \"demand_circuit\": true,\n#                 \"hello_interval\": 1,\n#                 \"mtu_ignore\": true,\n#                 \"packet_size\": 577,\n#                 \"priority\": 1,\n#                 \"process_id\": \"30\",\n#                 \"retransmit_interval\": 2,\n#                 \"router_id\": \"2.2.2.2\",\n#                 \"transmit_delay\": 2\n#             }\n#         ]\n#     }\n#\n#\n# -----------\n# After state\n# -----------\n#\n# RP/0/RP0/CPU0:anton(config)#do show running-config router ospfv3\n# router ospfv3 10\n#  area 11\n#   cost 11\n#   default-cost 5\n#  !\n#  area 22\n#   default-cost 6\n#  !\n# !\n# router ospfv3 26\n#  authentication disable\n# !\n# router ospfv3 27\n#  area 10\n#   hello-interval 2\n#  !\n#  area 20\n#   cost 2\n#   default-cost 2\n#  !\n#  area 30\n#  !\n# !\n# router ospfv3 30\n#  cost 2\n#  priority 1\n#  mtu-ignore\n#  packet-size 577\n#  dead-interval 2\n#  retransmit-interval 2\n#  demand-circuit\n#  hello-interval 1\n#  transmit-delay 2\n#  router-id 2.2.2.2\n#  default-metric 10\n#  area 11\n#   default-cost 5\n#  !\n#  area 22\n#   default-cost 6\n#  !\n# !\n\n\n- name: Override existing OSPFv3 configurations from the device\n  cisco.iosxr.iosxr_ospfv3:\n    config:\n      processes:\n        - process_id: 27\n          areas:\n            - area_id: 10\n              hello_interval: 2\n              authentication:\n                disable: true\n            - area_id: 20\n              cost: 2\n              default_cost: 2\n              authentication:\n                disable: true\n        - process_id: 26\n          areas:\n            - area_id: 10\n              hello_interval: 2\n              authentication:\n                disable: true\n    state: overridden\n\n#\n#\n# ------------------------\n# Module Execution Result\n# ------------------------\n#\n#  \"before\": {\n#         \"processes\": [\n#             {\n#                 \"areas\": [\n#                     {\n#                         \"area_id\": \"11\",\n#                         \"cost\": 11,\n#                         \"default_cost\": 5\n#                     },\n#                     {\n#                         \"area_id\": \"22\",\n#                         \"default_cost\": 6\n#                     }\n#                 ],\n#                 \"process_id\": \"10\"\n#             },\n#             {\n#                 \"authentication\": {\n#                     \"disable\": true\n#                 },\n#                 \"process_id\": \"26\"\n#             },\n#             {\n#                 \"areas\": [\n#                     {\n#                         \"area_id\": \"10\",\n#                         \"hello_interval\": 2\n#                     },\n#                     {\n#                         \"area_id\": \"20\",\n#                         \"cost\": 2,\n#                         \"default_cost\": 2\n#                     }\n#                 ],\n#                 \"process_id\": \"27\"\n#             },\n#             {\n#                 \"areas\": [\n#                     {\n#                         \"area_id\": \"11\",\n#                         \"default_cost\": 5\n#                     },\n#                     {\n#                         \"area_id\": \"22\",\n#                         \"default_cost\": 6\n#                     }\n#                 ],\n#                 \"cost\": 2,\n#                 \"dead_interval\": 2,\n#                 \"default_metric\": 10,\n#                 \"demand_circuit\": true,\n#                 \"hello_interval\": 1,\n#                 \"mtu_ignore\": true,\n#                 \"packet_size\": 577,\n#                 \"priority\": 1,\n#                 \"process_id\": \"30\",\n#                 \"retransmit_interval\": 2,\n#                 \"router_id\": \"2.2.2.2\",\n#                 \"transmit_delay\": 2\n#             }\n#         ]\n#     }\n#\n#  \"commands\": [\n#         \"router ospfv3 10\",\n#         \"no area 11 default-cost 5\",\n#         \"no area 11 cost 11\",\n#         \"no area 22 default-cost 6\",\n#         \"router ospfv3 30\",\n#         \"no cost 2\",\n#         \"no priority 1\",\n#         \"no default-metric 10\",\n#         \"no router-id 2.2.2.2\",\n#         \"no demand-circuit\",\n#         \"no packet-size 577\",\n#         \"no transmit-delay 2\",\n#         \"no dead-interval 2\",\n#         \"no hello-interval 1\",\n#         \"no retransmit-interval 2\",\n#         \"no mtu-ignore\",\n#         \"no area 11 default-cost 5\",\n#         \"no area 22 default-cost 6\",\n#         \"router ospfv3 26\",\n#         \"area 10 hello-interval 4\"\n#     ]\n#\n#  \"after\": {\n#         \"processes\": [\n#             {\n#                 \"process_id\": \"10\"\n#             },\n#             {\n#                 \"areas\": [\n#                     {\n#                         \"area_id\": \"10\",\n#                         \"hello_interval\": 4\n#                     }\n#                 ],\n#                 \"authentication\": {\n#                     \"disable\": true\n#                 },\n#                 \"process_id\": \"26\"\n#             },\n#             {\n#                 \"areas\": [\n#                     {\n#                         \"area_id\": \"10\",\n#                         \"hello_interval\": 2\n#                     },\n#                     {\n#                         \"area_id\": \"20\",\n#                         \"cost\": 2,\n#                         \"default_cost\": 2\n#                     }\n#                 ],\n#                 \"process_id\": \"27\"\n#             },\n#             {\n#                 \"process_id\": \"30\"\n#             }\n#         ]\n#     }\n#\n#\n# -----------\n# After state\n# -----------\n#\n# RP/0/RP0/CPU0:anton#show running-config router ospfv3\n# router ospfv3 10\n#  area 11\n#  !\n#  area 22\n#  !\n# !\n# router ospfv3 26\n#  authentication disable\n#  area 10\n#   hello-interval 4\n#  !\n# !\n# router ospfv3 27\n#  area 10\n#   hello-interval 2\n#  !\n#  area 20\n#   cost 2\n#   default-cost 2\n#  !\n#  area 30\n#  !\n# !\n# router ospfv3 30\n#  area 11\n#  !\n#  area 22\n#  !\n# !\n\n\n\n# Using deleted\n#\n# ------------\n# Before state\n# ------------\n#\n#\n# RP/0/RP0/CPU0:anton#show running-config router ospfv3\n# router ospfv3 10\n#  area 11\n#  !\n#  area 22\n#  !\n# !\n# router ospfv3 26\n#  authentication disable\n#  area 10\n#   hello-interval 4\n#  !\n# !\n# router ospfv3 27\n#  area 10\n#   hello-interval 2\n#  !\n#  area 20\n#   cost 2\n#   default-cost 2\n#  !\n#  area 30\n#  !\n# !\n# router ospfv3 30\n#  area 11\n#  !\n#  area 22\n#  !\n# !\n\n- name: Deleted existing OSPFv3 configurations from the device\n  cisco.iosxr.iosxr_ospfv3:\n    config:\n      processes:\n      - process_id: '10'\n      - process_id: '26'\n      - process_id: '27'\n      - process_id: '30'\n    state: deleted\n\n#\n#\n# ------------------------\n# Module Execution Result\n# ------------------------\n#\n#  \"before\": {\n#         \"processes\": [\n#             {\n#                 \"process_id\": \"10\"\n#             },\n#             {\n#                 \"areas\": [\n#                     {\n#                         \"area_id\": \"10\",\n#                         \"hello_interval\": 4\n#                     }\n#                 ],\n#                 \"authentication\": {\n#                     \"disable\": true\n#                 },\n#                 \"process_id\": \"26\"\n#             },\n#             {\n#                 \"areas\": [\n#                     {\n#                         \"area_id\": \"10\",\n#                         \"hello_interval\": 2\n#                     },\n#                     {\n#                         \"area_id\": \"20\",\n#                         \"cost\": 2,\n#                         \"default_cost\": 2\n#                     }\n#                 ],\n#                 \"process_id\": \"27\"\n#             },\n#             {\n#                 \"process_id\": \"30\"\n#             }\n#         ]\n#     },\n#\n#  \"commands\": [\n#         \"router ospfv3 26\",\n#         \"no authentication disable\",\n#         \"no area 10 hello-interval 4\",\n#         \"router ospfv3 27\",\n#         \"no area 10 hello-interval 2\",\n#         \"no area 20 default-cost 2\",\n#         \"no area 20 cost 2\"\n#     ]\n#\n#  \"after\": {\n#        \"processes\": [\n#            {\n#                \"process_id\": \"10\"\n#            },\n#            {\n#                \"process_id\": \"26\"\n#            },\n#            {\n#                \"process_id\": \"27\"\n#            },\n#            {\n#                \"process_id\": \"30\"\n#            }\n#        ]\n#    }\n#\n#\n# -----------\n# After state\n# -----------\n#\n# RP/0/RP0/CPU0:anton(config)#show running-config router ospfv3\n# router ospfv3 10\n# !\n# router ospfv3 26\n# !\n# router ospfv3 27\n# !\n# router ospfv3 30\n# !\n\n\n# Using parsed\n# parsed.cfg\n# ------------\n# router ospfv3 10\n#  area 11\n#   cost 11\n#   default-cost 5\n#  !\n#  area 22\n#   default-cost 6\n#  !\n# !\n# router ospfv3 26\n#  authentication disable\n# !\n# router ospfv3 27\n#  area 10\n#   hello-interval 2\n#  !\n# !\n# router ospfv3 30\n#  router-id 2.2.2.2\n#  cost 2\n#  packet-size 577\n#  priority 1\n#  mtu-ignore\n#  dead-interval 2\n#  retransmit-interval 2\n#  demand-circuit\n#  hello-interval 1\n#  transmit-delay 2\n#  default-metric 10\n#  area 11\n#   default-cost 5\n#  !\n#  area 22\n#   default-cost 6\n#  !\n# !\n- name: Parsed the device configuration to get output commands\n  cisco.iosxr.iosxr_ospfv3:\n    running_config: \"{{ lookup('file', './parsed.cfg') }}\"\n    state: parsed\n#\n#\n# -------------------------\n# Module Execution Result\n# -------------------------\n#\n#\n# \"parsed\": {\n#         \"processes\": [\n#             {\n#                 \"areas\": [\n#                     {\n#                         \"area_id\": \"11\",\n#                         \"cost\": 11,\n#                         \"default_cost\": 5\n#                     },\n#                     {\n#                         \"area_id\": \"22\",\n#                         \"default_cost\": 6\n#                     }\n#                 ],\n#                 \"process_id\": \"10\"\n#             },\n#             {\n#                 \"authentication\": {\n#                     \"disable\": true\n#                 },\n#                 \"process_id\": \"26\"\n#             },\n#             {\n#                 \"areas\": [\n#                     {\n#                         \"area_id\": \"10\",\n#                         \"hello_interval\": 2\n#                     }\n#                 ],\n#                 \"process_id\": \"27\"\n#             },\n#             {\n#                 \"areas\": [\n#                     {\n#                         \"area_id\": \"11\",\n#                         \"default_cost\": 5\n#                     },\n#                     {\n#                         \"area_id\": \"22\",\n#                         \"default_cost\": 6\n#                     }\n#                 ],\n#                 \"cost\": 2,\n#                 \"dead_interval\": 2,\n#                 \"default_metric\": 10,\n#                 \"demand_circuit\": true,\n#                 \"hello_interval\": 1,\n#                 \"mtu_ignore\": true,\n#                 \"packet_size\": 577,\n#                 \"priority\": 1,\n#                 \"process_id\": \"30\",\n#                 \"retransmit_interval\": 2,\n#                 \"router_id\": \"2.2.2.2\",\n#                 \"transmit_delay\": 2\n#             }\n#         ]\n#     }\n#\n# Using rendered\n#\n#\n- name: Render the commands for provided  configuration\n  cisco.iosxr.iosxr_ospfv3:\n    config:\n      processes:\n        - process_id: 27\n          areas:\n            - area_id: 10\n              hello_interval: 2\n        - process_id: 26\n          authentication:\n            disable: true\n        - process_id: 10\n          areas:\n            - area_id: 11\n              default_cost: 5\n              cost: 11\n            - area_id: 22\n              default_cost: 6\n        - process_id: 30\n          areas:\n            - area_id: 11\n              default_cost: 5\n            - area_id: 22\n              default_cost: 6\n          cost: 2\n          default_metric: 10\n          transmit_delay: 2\n          hello_interval: 1\n          dead_interval: 2\n          retransmit_interval: 2\n          packet_size: 577\n          priority: 1\n          router_id: '2.2.2.2'\n          demand_circuit: true\n          mtu_ignore: true\n    state: rendered\n\n#\n#\n# -------------------------\n# Module Execution Result\n# -------------------------\n#\n#\n# \"rendered\": [\n#         \"router ospfv3 27\",\n#         \"area 10 hello-interval 2\",\n#         \"router ospfv3 26\",\n#         \"authentication disable\",\n#         \"router ospfv3 10\",\n#         \"area 11 default-cost 5\",\n#         \"area 11 cost 11\",\n#         \"area 22 default-cost 6\",\n#         \"router ospfv3 30\",\n#         \"cost 2\",\n#         \"priority 1\",\n#         \"default-metric 10\",\n#         \"router-id 2.2.2.2\",\n#         \"demand-circuit\",\n#         \"packet-size 577\",\n#         \"transmit-delay 2\",\n#         \"dead-interval 2\",\n#         \"hello-interval 1\",\n#         \"retransmit-interval 2\",\n#         \"mtu-ignore\",\n#         \"area 11 default-cost 5\",\n#         \"area 22 default-cost 6\"\n#     ]\n\n\n# Using gathered\n#\n# Before state:\n# -------------\n#\n# RP/0/RP0/CPU0:anton#show running-config router ospf\n# router ospfv3 10\n#  area 11\n#   cost 11\n#   default-cost 5\n#  !\n#  area 22\n#   default-cost 6\n#  !\n# !\n# router ospfv3 26\n#  authentication disable\n#  area 10\n#  !\n# !\n# router ospfv3 27\n#  area 10\n#   hello-interval 2\n#  !\n#  area 20\n#  !\n#  area 30\n#  !\n# !\n# router ospfv3 30\n#  cost 2\n#  priority 1\n#  mtu-ignore\n#  packet-size 577\n#  dead-interval 2\n#  retransmit-interval 2\n#  demand-circuit\n#  hello-interval 1\n#  transmit-delay 2\n#  router-id 2.2.2.2\n#  default-metric 10\n#  area 11\n#   default-cost 5\n#  !\n#  area 22\n#   default-cost 6\n#  !\n# !\n\n- name: Gather ospfv3 routes configuration\n  cisco.iosxr.iosxr_ospfv3:\n    state: gathered\n#\n#\n# -------------------------\n# Module Execution Result\n# -------------------------\n#\n#    \"gathered\": {\n#         \"processes\": [\n#             {\n#                 \"areas\": [\n#                     {\n#                         \"area_id\": \"11\",\n#                         \"cost\": 11,\n#                         \"default_cost\": 5\n#                     },\n#                     {\n#                         \"area_id\": \"22\",\n#                         \"default_cost\": 6\n#                     }\n#                 ],\n#                 \"process_id\": \"10\"\n#             },\n#             {\n#                 \"authentication\": {\n#                     \"disable\": true\n#                 },\n#                 \"process_id\": \"26\"\n#             },\n#             {\n#                 \"areas\": [\n#                     {\n#                         \"area_id\": \"10\",\n#                         \"hello_interval\": 2\n#                     }\n#                 ],\n#                 \"process_id\": \"27\"\n#             },\n#             {\n#                 \"areas\": [\n#                     {\n#                         \"area_id\": \"11\",\n#                         \"default_cost\": 5\n#                     },\n#                     {\n#                         \"area_id\": \"22\",\n#                         \"default_cost\": 6\n#                     }\n#                 ],\n#                 \"cost\": 2,\n#                 \"dead_interval\": 2,\n#                 \"default_metric\": 10,\n#                 \"demand_circuit\": true,\n#                 \"hello_interval\": 1,\n#                 \"mtu_ignore\": true,\n#                 \"packet_size\": 577,\n#                 \"priority\": 1,\n#                 \"process_id\": \"30\",\n#                 \"retransmit_interval\": 2,\n#                 \"router_id\": \"2.2.2.2\",\n#                 \"transmit_delay\": 2\n#             }\n#         ]\n#     }\n#\n"
  },
  "cisco.iosxr.iosxr_prefix_lists": {
    "doc": {
      "description": "This module manages prefix-lists configuration on devices running Cisco IOSXR.",
      "has_action": true,
      "notes": "Tested against IOSXR 7.0.2.\nThis module works with connection C(network_cli).",
      "options": {
        "config": {
          "aliases": [],
          "description": "A list of prefix-lists configuration.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "afi": {
              "aliases": [],
              "description": "The Address Family Identifier (AFI) for the prefix-lists.",
              "type": "str",
              "required": false,
              "choices": [
                "ipv4",
                "ipv6"
              ],
              "suboptions": {}
            },
            "prefix_lists": {
              "aliases": [],
              "description": "List of prefix-list configurations.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "entries": {
                  "aliases": [],
                  "description": "List of configurations for the specified prefix-list",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "action": {
                      "aliases": [],
                      "description": "Prefix-List permit or deny.",
                      "type": "str",
                      "required": false,
                      "choices": [
                        "permit",
                        "deny",
                        "remark"
                      ],
                      "suboptions": {}
                    },
                    "description": {
                      "aliases": [],
                      "description": "Description of the prefix list. only applicable for action \"remark\".",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "prefix": {
                      "aliases": [],
                      "description": "IP or IPv6 prefix in A.B.C.D/LEN or A:B::C:D/LEN format. only applicable for action \"permit\" and \"deny\"",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "sequence": {
                      "aliases": [],
                      "description": "Sequence Number.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "name": {
                  "aliases": [],
                  "description": "Name of the prefix-list.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            }
          }
        },
        "running_config": {
          "aliases": [],
          "description": "This option is used only with state I(parsed).\nThe value of this option should be the output received from the Iosxr device by executing the command B(show running-config prefix-list).\nThe state I(parsed) reads the configuration from C(running_config) option and transforms it into Ansible structured data as per the resource module's argspec and the value is then returned in the I(parsed) key within the result.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The state the configuration should be left in.\nRefer to examples for more details.\nWith state I(replaced), for the listed prefix-lists, sequences that are in running-config but not in the task are negated.\nWith state I(overridden), all prefix-lists that are in running-config but not in the task are negated.\nPlease refer to examples for more details.",
          "default": "merged",
          "type": "str",
          "required": false,
          "choices": [
            "merged",
            "replaced",
            "overridden",
            "deleted",
            "parsed",
            "gathered",
            "rendered"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Prefix-Lists resource module.",
      "version_added": "2.3.0"
    },
    "examples": "\n# Using merged\n# Before state\n#RP/0/0/CPU0:10#show running-config\n#Thu Feb  4 09:38:36.245 UTC\n#% No such configuration item(s)\n#RP/0/0/CPU0:10#\n#\n- name: Merge the provided configuration with the existing running configuration\n  cisco.iosxr.iosxr_prefix_lists:\n         state: merged\n         config:\n           - afi: ipv6\n             prefix_lists:\n               - name: pl_1\n                 entries:\n                   - prefix: 2001:db8:1234::/48\n                     action: deny\n                     sequence: 1\n               - name: pl_2\n                 entries:\n                   - sequence: 2\n                     action: remark\n                     description: TEST_PL_2_REMARK\n           - afi: ipv4\n             prefix_lists:\n               - name: pl1\n                 entries:\n                   - sequence: 3\n                     action: remark\n                     description: TEST_PL1_2_REMARK\n                   - sequence: 4\n                     action: permit\n                     prefix: 10.0.0.0/24\n               - name: pl2\n                 entries:\n                   - sequence: 5\n                     action: remark\n                     description: TEST_PL2_REMARK\n#\n# After state:\n#\n#RP/0/0/CPU0:10#show running-config\n# ipv6 prefix-list pl_1\n#  1 deny 2001:db8:1234::/48\n# !\n# ipv6 prefix-list pl_2\n#  2 remark TEST_PL_2_REMARK\n# !\n# ipv4 prefix-list pl1\n#  3 remark TEST_PL1_2_REMARK\n#  4 permit 10.0.0.0/24\n# !\n# ipv4 prefix-list pl2\n#  5 remark TEST_PL2_REMARK\n# !\n#Module execution\n#\n# \"after\": [\n#         {\n#             \"afi\": \"ipv6\",\n#             \"prefix_lists\": [\n#                 {\n#                     \"entries\": [\n#                         {\n#                             \"action\": \"deny\",\n#                             \"prefix\": \"2001:db8:1234::/48\",\n#                             \"sequence\": 1\n#                         }\n#                     ],\n#                     \"name\": \"pl_1\"\n#                 },\n#                 {\n#                     \"entries\": [\n#                         {\n#                             \"action\": \"remark\",\n#                             \"description\": \"TEST_PL_2_REMARK\",\n#                             \"sequence\": 2\n#                         }\n#                     ],\n#                     \"name\": \"pl_2\"\n#                 }\n#             ]\n#         },\n#         {\n#             \"afi\": \"ipv4\",\n#             \"prefix_lists\": [\n#                 {\n#                     \"entries\": [\n#                         {\n#                             \"action\": \"remark\",\n#                             \"description\": \"TEST_PL1_2_REMARK\",\n#                             \"sequence\": 3\n#                         },\n#                         {\n#                             \"action\": \"permit\",\n#                             \"prefix\": \"10.0.0.0/24\",\n#                             \"sequence\": 4\n#                         }\n#                     ],\n#                     \"name\": \"pl1\"\n#                 },\n#                 {\n#                     \"entries\": [\n#                         {\n#                             \"action\": \"remark\",\n#                             \"description\": \"TEST_PL2_REMARK\",\n#                             \"sequence\": 5\n#                         }\n#                     ],\n#                     \"name\": \"pl2\"\n#                 }\n#             ]\n#         }\n#     ],\n#     \"before\": [],\n#     \"changed\": true,\n#     \"commands\": [\n#         \"ipv6 prefix-list pl_1 1 deny 2001:db8:1234::/48\",\n#         \"ipv6 prefix-list pl_2 2 remark TEST_PL_2_REMARK\",\n#         \"ipv4 prefix-list pl1 3 remark TEST_PL1_2_REMARK\",\n#         \"ipv4 prefix-list pl1 4 permit 10.0.0.0/24\",\n#         \"ipv4 prefix-list pl2 5 remark TEST_PL2_REMARK\"\n#     ]\n#-----------------------------------------------------------------------\n# Using replaced:\n# --------------\n# Before state\n#RP/0/0/CPU0:10#show running-config\n#\n# ipv6 prefix-list pl_1\n#  1 deny 2001:db8:1234::/48\n# !\n# ipv6 prefix-list pl_2\n#  2 remark TEST_PL_2_REMARK\n# !\n# ipv4 prefix-list pl1\n#  3 remark TEST_PL1_2_REMARK\n#  4 permit 10.0.0.0/24\n# !\n# ipv4 prefix-list pl2\n#  5 remark TEST_PL2_REMARK\n# !\n#\n#\n- name: Replace device configurations of listed prefix lists with provided configurations\n  register: result\n  cisco.iosxr.iosxr_prefix_lists: &id001\n    config:\n           - afi: ipv4\n             prefix_lists:\n               - name: pl1\n                 entries:\n                   - sequence: 3\n                     action: permit\n                     prefix: 10.0.0.0/24\n           - afi: ipv6\n             prefix_lists:\n               - name: pl_1\n                 entries:\n                   - prefix: 2001:db8:1234::/48\n                     action: permit\n                     sequence: 1\n               - name: pl_2\n                 entries:\n                   - sequence: 2\n                     action: remark\n                     description: TEST_PL1_2\n    state: replaced\n# After state:\n#RP/0/0/CPU0:10#show running-config\n#\n# ipv6 prefix-list pl_1\n#  1 deny 2001:db8:1234::/48\n# !\n# ipv6 prefix-list pl_2\n#  2 remark TEST_PL1_2\n# !\n# ipv4 prefix-list pl1\n#  3 permit 10.0.0.0/24\n# !\n# ipv4 prefix-list pl2\n#  5 remark TEST_PL2_REMARK\n#\n# Module Execution:\n#\n# \"after\": [\n#         {\n#             \"afi\": \"ipv6\",\n#             \"prefix_lists\": [\n#                 {\n#                     \"entries\": [\n#                         {\n#                             \"action\": \"deny\",\n#                             \"prefix\": \"2001:db8:1234::/48\",\n#                             \"sequence\": 1\n#                         }\n#                     ],\n#                     \"name\": \"pl_1\"\n#                 },\n#                 {\n#                     \"entries\": [\n#                         {\n#                             \"action\": \"remark\",\n#                             \"description\": \"TEST_PL1_2\",\n#                             \"sequence\": 2\n#                         }\n#                     ],\n#                     \"name\": \"pl_2\"\n#                 }\n#             ]\n#         },\n#         {\n#             \"afi\": \"ipv4\",\n#             \"prefix_lists\": [\n#                 {\n#                     \"entries\": [\n#                         {\n#                             \"action\": \"permit\",\n#                             \"prefix\": \"10.0.0.0/24\",\n#                             \"sequence\": 3\n#                         }\n#                     ],\n#                     \"name\": \"pl1\"\n#                 },\n#                 {\n#                     \"entries\": [\n#                         {\n#                             \"action\": \"remark\",\n#                             \"description\": \"TEST_PL2_REMARK\",\n#                             \"sequence\": 5\n#                         }\n#                     ],\n#                     \"name\": \"pl2\"\n#                 }\n#             ]\n#         }\n#     ],\n#     \"before\": [\n#         {\n#             \"afi\": \"ipv6\",\n#             \"prefix_lists\": [\n#                 {\n#                     \"entries\": [\n#                         {\n#                             \"action\": \"deny\",\n#                             \"prefix\": \"2001:db8:1234::/48\",\n#                             \"sequence\": 1\n#                         }\n#                     ],\n#                     \"name\": \"pl_1\"\n#                 },\n#                 {\n#                     \"entries\": [\n#                         {\n#                             \"action\": \"remark\",\n#                             \"description\": \"TEST_PL_2_REMARK\",\n#                             \"sequence\": 2\n#                         }\n#                     ],\n#                     \"name\": \"pl_2\"\n#                 }\n#             ]\n#         },\n#         {\n#             \"afi\": \"ipv4\",\n#             \"prefix_lists\": [\n#                 {\n#                     \"entries\": [\n#                         {\n#                             \"action\": \"remark\",\n#                             \"description\": \"TEST_PL1_2_REMARK\",\n#                             \"sequence\": 3\n#                         },\n#                         {\n#                             \"action\": \"permit\",\n#                             \"prefix\": \"10.0.0.0/24\",\n#                             \"sequence\": 4\n#                         }\n#                     ],\n#                     \"name\": \"pl1\"\n#                 },\n#                 {\n#                     \"entries\": [\n#                         {\n#                             \"action\": \"remark\",\n#                             \"description\": \"TEST_PL2_REMARK\",\n#                             \"sequence\": 5\n#                         }\n#                     ],\n#                     \"name\": \"pl2\"\n#                 }\n#             ]\n#         }\n#     ],\n#     \"changed\": true,\n#     \"commands\": [\n#         \"no ipv4 prefix-list pl1 3 remark TEST_PL1_2_REMARK\",\n#         \"no ipv4 prefix-list pl1 4 permit 10.0.0.0/24\",\n#         \"ipv4 prefix-list pl1 3 permit 10.0.0.0/24\",\n#         \"ipv6 prefix-list pl_2 2 remark TEST_PL1_2\"\n#     ],\n#     \"invocation\": {\n#         \"module_args\": {\n#             \"config\": [\n#                 {\n#                     \"afi\": \"ipv4\",\n#                     \"prefix_lists\": [\n#                         {\n#                             \"entries\": [\n#                                 {\n#                                     \"action\": \"permit\",\n#                                     \"description\": null,\n#                                     \"prefix\": \"10.0.0.0/24\",\n#                                     \"sequence\": 3\n#                                 }\n#                             ],\n#                             \"name\": \"pl1\"\n#                         }\n#                     ]\n#                 },\n#                 {\n#                     \"afi\": \"ipv6\",\n#                     \"prefix_lists\": [\n#                         {\n#                             \"entries\": [\n#                                 {\n#                                     \"action\": \"permit\",\n#                                     \"description\": null,\n#                                     \"prefix\": \"2001:db8:1234::/48\",\n#                                     \"sequence\": 1\n#                                 }\n#                             ],\n#                             \"name\": \"pl_1\"\n#                         },\n#                         {\n#                             \"entries\": [\n#                                 {\n#                                     \"action\": \"remark\",\n#                                     \"description\": \"TEST_PL1_2\",\n#                                     \"prefix\": null,\n#                                     \"sequence\": 2\n#                                 }\n#                             ],\n#                             \"name\": \"pl_2\"\n#                         }\n#                     ]\n#                 }\n#             ],\n#             \"running_config\": null,\n#             \"state\": \"replaced\"\n#         }\n#     }\n# }\n#------------------------------------------------------------------\n# Using deleted:\n# -------------\n# Before state:\n#RP/0/0/CPU0:10#show running-config\n#\n# ipv6 prefix-list pl_1\n#  1 deny 2001:db8:1234::/48\n# !\n# ipv6 prefix-list pl_2\n#  2 remark TEST_PL_2_REMARK\n# !\n# ipv4 prefix-list pl1\n#  3 remark TEST_PL1_2_REMARK\n#  4 permit 10.0.0.0/24\n# !\n# ipv4 prefix-list pl2\n#  5 remark TEST_PL2_REMARK\n\n- name: Delete all prefix-lists from the device\n  cisco.iosxr.iosxr_prefix_lists:\n    state: deleted\n\n# After state:\n#RP/0/0/CPU0:10#show running-config\n#\n#\n# Module Execution:\n#\n# \"after\": [],\n#     \"before\": [\n#         {\n#             \"afi\": \"ipv6\",\n#             \"prefix_lists\": [\n#                 {\n#                     \"entries\": [\n#                         {\n#                             \"action\": \"deny\",\n#                             \"prefix\": \"2001:db8:1234::/48\",\n#                             \"sequence\": 1\n#                         }\n#                     ],\n#                     \"name\": \"pl_1\"\n#                 },\n#                 {\n#                     \"entries\": [\n#                         {\n#                             \"action\": \"remark\",\n#                             \"description\": \"TEST_PL1_2\",\n#                             \"sequence\": 2\n#                         }\n#                     ],\n#                     \"name\": \"pl_2\"\n#                 }\n#             ]\n#         },\n#         {\n#             \"afi\": \"ipv4\",\n#             \"prefix_lists\": [\n#                 {\n#                     \"entries\": [\n#                         {\n#                             \"action\": \"permit\",\n#                             \"prefix\": \"10.0.0.0/24\",\n#                             \"sequence\": 3\n#                         }\n#                     ],\n#                     \"name\": \"pl1\"\n#                 },\n#                 {\n#                     \"entries\": [\n#                         {\n#                             \"action\": \"remark\",\n#                             \"description\": \"TEST_PL2_REMARK\",\n#                             \"sequence\": 5\n#                         }\n#                     ],\n#                     \"name\": \"pl2\"\n#                 }\n#             ]\n#         }\n#     ],\n#     \"changed\": true,\n#     \"commands\": [\n#         \"no ipv6 prefix-list pl_1\",\n#         \"no ipv6 prefix-list pl_2\",\n#         \"no ipv4 prefix-list pl1\",\n#         \"no ipv4 prefix-list pl2\"\n#     ],\n#     \"invocation\": {\n#         \"module_args\": {\n#             \"config\": null,\n#             \"running_config\": null,\n#             \"state\": \"deleted\"\n#         }\n#     }\n# }\n#---------------------------------------------------------------------------------\n#\n# using gathered:\n# --------------\n# Before state:\n#RP/0/0/CPU0:10#show running-config\n#\n# ipv6 prefix-list pl_1\n#  1 deny 2001:db8:1234::/48\n# !\n# ipv6 prefix-list pl_2\n#  2 remark TEST_PL_2_REMARK\n# !\n# ipv4 prefix-list pl1\n#  3 remark TEST_PL1_2_REMARK\n#  4 permit 10.0.0.0/24\n# !\n# ipv4 prefix-list pl2\n#  5 remark TEST_PL2_REMARK\n#\n- name: Gather ACL interfaces facts using gathered state\n  cisco.iosxr.iosxr_prefix_lists:\n     state: gathered\n#\n# Module Execution:\n#\n# \"gathered\": [\n#         {\n#             \"afi\": \"ipv6\",\n#             \"prefix_lists\": [\n#                 {\n#                     \"entries\": [\n#                         {\n#                             \"action\": \"deny\",\n#                             \"prefix\": \"2001:db8:1234::/48\",\n#                             \"sequence\": 1\n#                         }\n#                     ],\n#                     \"name\": \"pl_1\"\n#                 },\n#                 {\n#                     \"entries\": [\n#                         {\n#                             \"action\": \"remark\",\n#                             \"description\": \"TEST_PL_2_REMARK\",\n#                             \"sequence\": 2\n#                         }\n#                     ],\n#                     \"name\": \"pl_2\"\n#                 }\n#             ]\n#         },\n#         {\n#             \"afi\": \"ipv4\",\n#             \"prefix_lists\": [\n#                 {\n#                     \"entries\": [\n#                         {\n#                             \"action\": \"remark\",\n#                             \"description\": \"TEST_PL1_2_REMARK\",\n#                             \"sequence\": 3\n#                         },\n#                         {\n#                             \"action\": \"permit\",\n#                             \"prefix\": \"10.0.0.0/24\",\n#                             \"sequence\": 4\n#                         }\n#                     ],\n#                     \"name\": \"pl1\"\n#                 },\n#                 {\n#                     \"entries\": [\n#                         {\n#                             \"action\": \"remark\",\n#                             \"description\": \"TEST_PL2_REMARK\",\n#                             \"sequence\": 5\n#                         }\n#                     ],\n#                     \"name\": \"pl2\"\n#                 }\n#             ]\n#         }\n#     ],\n#     \"changed\": false,\n#--------------------------------------------------------------------------\n# Using parsed:\n# --------------\n#\n# parsed.cfg\n#------------------------------\n# ipv6 prefix-list pl_1\n#  1 deny 2001:db8:1234::/48\n# !\n# ipv6 prefix-list pl_2\n#  2 remark TEST_PL_2_REMARK\n# !\n# ipv4 prefix-list pl1\n#  3 remark TEST_PL1_2_REMARK\n#  4 permit 10.0.0.0/24\n# !\n# ipv4 prefix-list pl2\n#  5 remark TEST_PL2_REMARK\n#\n#\n- name: Parse externally provided Prefix_lists config to agnostic model\n  cisco.iosxr.iosxr_prefix_lists:\n     running_config: \"{{ lookup('file', './fixtures/parsed.cfg') }}\"\n     state: parsed\n#\n# Module execution:\n#\"parsed\": [\n#         {\n#             \"afi\": \"ipv6\",\n#             \"prefix_lists\": [\n#                 {\n#                     \"entries\": [\n#                         {\n#                             \"action\": \"deny\",\n#                             \"prefix\": \"2001:db8:1234::/48\",\n#                             \"sequence\": 1\n#                         }\n#                     ],\n#                     \"name\": \"pl_1\"\n#                 },\n#                 {\n#                     \"entries\": [\n#                         {\n#                             \"action\": \"remark\",\n#                             \"description\": \"TEST_PL_2_REMARK\",\n#                             \"sequence\": 2\n#                         }\n#                     ],\n#                     \"name\": \"pl_2\"\n#                 }\n#             ]\n#         },\n#         {\n#             \"afi\": \"ipv4\",\n#             \"prefix_lists\": [\n#                 {\n#                     \"entries\": [\n#                         {\n#                             \"action\": \"remark\",\n#                             \"description\": \"TEST_PL1_2_REMARK\",\n#                             \"sequence\": 3\n#                         },\n#                         {\n#                             \"action\": \"permit\",\n#                             \"prefix\": \"10.0.0.0/24\",\n#                             \"sequence\": 4\n#                         }\n#                     ],\n#                     \"name\": \"pl1\"\n#                 },\n#                 {\n#                     \"entries\": [\n#                         {\n#                             \"action\": \"remark\",\n#                             \"description\": \"TEST_PL2_REMARK\",\n#                             \"sequence\": 5\n#                         }\n#                     ],\n#                     \"name\": \"pl2\"\n#                 }\n#             ]\n#         }\n#     ]\n#\n#----------------------------------------------------------------------------\n# Using rendered:\n# --------------\n#\n- name: Render platform specific commands from task input using rendered state\n  register: result\n  cisco.iosxr.iosxr_prefix_lists:\n     config:\n       - afi: ipv6\n         prefix_lists:\n           - name: pl_1\n             entries:\n               - prefix: 2001:db8:1234::/48\n                 action: deny\n                 sequence: 1\n           - name: pl_2\n             entries:\n               - sequence: 2\n                 action: remark\n                 description: TEST_PL_2_REMARK\n       - afi: ipv4\n         prefix_lists:\n           - name: pl1\n             entries:\n               - sequence: 3\n                 action: remark\n                 description: TEST_PL1_2_REMARK\n               - sequence: 4\n                 action: permit\n                 prefix: 10.0.0.0/24\n           - name: pl2\n             entries:\n               - sequence: 5\n                 action: remark\n                 description: TEST_PL2_REMARK\n\n     state: rendered\n# After state:\n# Module Execution:\n# \"rendered\": [\n#         \"ipv6 prefix-list pl_1 1 deny 2001:db8:1234::/48\",\n#         \"ipv6 prefix-list pl_2 2 remark TEST_PL_2_REMARK\",\n#         \"ipv4 prefix-list pl1 3 remark TEST_PL1_2_REMARK\",\n#         \"ipv4 prefix-list pl1 4 permit 10.0.0.0/24\",\n#         \"ipv4 prefix-list pl2 5 remark TEST_PL2_REMARK\"\n#     ]\n#\n#---------------------------------------------------------------------------------\n# Using overridden:\n# --------------\n# Before state:\n#RP/0/0/CPU0:10#show running-config\n#\n# ipv6 prefix-list pl_1\n#  1 deny 2001:db8:1234::/48\n# !\n# ipv6 prefix-list pl_2\n#  2 remark TEST_PL_2_REMARK\n# !\n# ipv4 prefix-list pl1\n#  3 remark TEST_PL1_2_REMARK\n#  4 permit 10.0.0.0/24\n# !\n# ipv4 prefix-list pl2\n#  5 remark TEST_PL2_REMARK\n#\n- name: Overridde all Prefix_lists configuration with provided configuration\n  cisco.iosxr.iosxr_prefix_lists:\n        config:\n           - afi: ipv4\n             prefix_lists:\n               - name: pl3\n                 entries:\n                   - sequence: 3\n                     action: remark\n                     description: TEST_PL1_3_REMARK\n                   - sequence: 4\n                     action: permit\n                     prefix: 10.0.0.0/24\n        state: overridden\n\n# After state:\n#RP/0/0/CPU0:10#show running-config\n#\n#ipv4 prefix-list pl3\n# 3 remark TEST_PL1_3_REMARK\n# 4 permit 10.0.0.0/24\n#!\n# # Module Execution:\n# \"after\": [\n#         {\n#             \"afi\": \"ipv4\",\n#             \"prefix_lists\": [\n#                 {\n#                     \"entries\": [\n#                         {\n#                             \"action\": \"remark\",\n#                             \"description\": \"TEST_PL1_3_REMARK\",\n#                             \"sequence\": 3\n#                         },\n#                         {\n#                             \"action\": \"permit\",\n#                             \"prefix\": \"10.0.0.0/24\",\n#                             \"sequence\": 4\n#                         }\n#                     ],\n#                     \"name\": \"pl3\"\n#                 }\n#             ]\n#         }\n#     ],\n#     \"before\": [\n#         {\n#             \"afi\": \"ipv6\",\n#             \"prefix_lists\": [\n#                 {\n#                     \"entries\": [\n#                         {\n#                             \"action\": \"deny\",\n#                             \"prefix\": \"2001:db8:1234::/48\",\n#                             \"sequence\": 1\n#                         }\n#                     ],\n#                     \"name\": \"pl_1\"\n#                 },\n#                 {\n#                     \"entries\": [\n#                         {\n#                             \"action\": \"remark\",\n#                             \"description\": \"TEST_PL_2_REMARK\",\n#                             \"sequence\": 2\n#                         }\n#                     ],\n#                     \"name\": \"pl_2\"\n#                 }\n#             ]\n#         },\n#         {\n#             \"afi\": \"ipv4\",\n#             \"prefix_lists\": [\n#                 {\n#                     \"entries\": [\n#                         {\n#                             \"action\": \"remark\",\n#                             \"description\": \"TEST_PL1_2_REMARK\",\n#                             \"sequence\": 3\n#                         },\n#                         {\n#                             \"action\": \"permit\",\n#                             \"prefix\": \"10.0.0.0/24\",\n#                             \"sequence\": 4\n#                         }\n#                     ],\n#                     \"name\": \"pl1\"\n#                 },\n#                 {\n#                     \"entries\": [\n#                         {\n#                             \"action\": \"remark\",\n#                             \"description\": \"TEST_PL2_REMARK\",\n#                             \"sequence\": 5\n#                         }\n#                     ],\n#                     \"name\": \"pl2\"\n#                 }\n#             ]\n#         }\n#     ],\n#     \"changed\": true,\n#     \"commands\": [\n#         \"no ipv6 prefix-list pl_1\",\n#         \"no ipv6 prefix-list pl_2\",\n#         \"no ipv4 prefix-list pl1\",\n#         \"no ipv4 prefix-list pl2\",\n#         \"ipv4 prefix-list pl3 3 remark TEST_PL1_3_REMARK\",\n#         \"ipv4 prefix-list pl3 4 permit 10.0.0.0/24\"\n#     ],\n#     \"invocation\": {\n#         \"module_args\": {\n#             \"config\": [\n#                 {\n#                     \"afi\": \"ipv4\",\n#                     \"prefix_lists\": [\n#                         {\n#                             \"entries\": [\n#                                 {\n#                                     \"action\": \"remark\",\n#                                     \"description\": \"TEST_PL1_3_REMARK\",\n#                                     \"prefix\": null,\n#                                     \"sequence\": 3\n#                                 },\n#                                 {\n#                                     \"action\": \"permit\",\n#                                     \"description\": null,\n#                                     \"prefix\": \"10.0.0.0/24\",\n#                                     \"sequence\": 4\n#                                 }\n#                             ],\n#                             \"name\": \"pl3\"\n#                         }\n#                     ]\n#                 }\n#             ],\n#             \"running_config\": null,\n#             \"state\": \"overridden\"\n#         }\n#     }\n# }\n#\n"
  },
  "cisco.iosxr.iosxr_snmp_server": {
    "doc": {
      "description": "This module configures and manages the attributes of snmp-server on Cisco IOSXR platforms.",
      "has_action": true,
      "notes": "Tested against Cisco Iosxr 7.0.2\nThis module works with connection C(network_cli).",
      "options": {
        "config": {
          "aliases": [],
          "description": "SNMP server configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "chassis_id": {
              "aliases": [],
              "description": "SNMP chassis identifier.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "communities": {
              "aliases": [],
              "description": "Enable SNMP;  set community string and access privileges.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "acl_v4": {
                  "aliases": [],
                  "description": "standard access-list name.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "acl_v6": {
                  "aliases": [],
                  "description": "IPv6 access list name.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "name": {
                  "aliases": [],
                  "description": "Community name.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "ro": {
                  "aliases": [],
                  "description": "Only reads are permitted.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "rw": {
                  "aliases": [],
                  "description": "Read-write access.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "sdrowner": {
                  "aliases": [],
                  "description": "SDR Owner permissions for MIB Objects.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "systemowner": {
                  "aliases": [],
                  "description": "System Owner permissions for MIB objects.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "v4_acl": {
                  "aliases": [],
                  "description": "V4 Access-list name.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "community_maps": {
              "aliases": [],
              "description": "Community Mapping as per RFC-2576.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "context": {
                  "aliases": [],
                  "description": "Context Name for the community mapping.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "name": {
                  "aliases": [],
                  "description": "Community name",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "security_name": {
                  "aliases": [],
                  "description": "Security Name for the community mapping.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "target_list": {
                  "aliases": [],
                  "description": "list of targets valid with this community.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "contact": {
              "aliases": [],
              "description": "Person to contact about the syste,.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "context": {
              "aliases": [],
              "description": "Create/Delete a context apart from default",
              "type": "list",
              "required": false,
              "elements": "str",
              "suboptions": {}
            },
            "correlator": {
              "aliases": [],
              "description": "Configure properties of the event correlator",
              "type": "dict",
              "required": false,
              "suboptions": {
                "buffer_size": {
                  "aliases": [],
                  "description": "Configure size of the correlator buffer.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "rule_sets": {
                  "aliases": [],
                  "description": "Configure a specified correlation ruleset.",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "name": {
                      "aliases": [],
                      "description": "Name of the ruleset",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "rules": {
                  "aliases": [],
                  "description": "Configure a specified correlation rule.",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "rule_name": {
                      "aliases": [],
                      "description": "name of rule.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "timeout": {
                      "aliases": [],
                      "description": "Specify timeout.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                }
              }
            },
            "drop": {
              "aliases": [],
              "description": "Silently drop SNMP packets",
              "type": "dict",
              "required": false,
              "suboptions": {
                "report_IPv4": {
                  "aliases": [],
                  "description": "Config to drop snmpv3 error reports matching Ipv4 ACL.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "report_IPv6": {
                  "aliases": [],
                  "description": "Config to drop snmpv3 error reports matching Ipv4 ACL.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "unknown_user": {
                  "aliases": [],
                  "description": "Silently drop unknown v3 user packets",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "engineid": {
              "aliases": [],
              "description": "SNMPv3 engine ID configuration.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "local": {
                  "aliases": [],
                  "description": "Local SNMP agent",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "groups": {
              "aliases": [],
              "description": "SNMP USM group",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "Ipv4_acl": {
                  "aliases": [],
                  "description": "Ipv4 Type of Access-list",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "Ipv6_acl": {
                  "aliases": [],
                  "description": "Ipv6 Type of Access-list",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "context": {
                  "aliases": [],
                  "description": "Specify a context to associate with the group",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "group": {
                  "aliases": [],
                  "description": "SNMP group for the user",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "notify": {
                  "aliases": [],
                  "description": "View to restrict notifications",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "read": {
                  "aliases": [],
                  "description": "View to restrict read access",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "v4_acl": {
                  "aliases": [],
                  "description": "V4 Access-list name",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "version": {
                  "aliases": [],
                  "description": "snmp security group version",
                  "type": "str",
                  "required": false,
                  "choices": [
                    "v1",
                    "v3",
                    "v2c"
                  ],
                  "suboptions": {}
                },
                "write": {
                  "aliases": [],
                  "description": "View to restrict write access",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "hosts": {
              "aliases": [],
              "description": "Notification destinations",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "community": {
                  "aliases": [],
                  "description": "community string.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "host": {
                  "aliases": [],
                  "description": "Hostname or IP address of SNMP notification host.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "informs": {
                  "aliases": [],
                  "description": "Use SNMP inform messages.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "traps": {
                  "aliases": [],
                  "description": "Use SNMP trap messages",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "udp_port": {
                  "aliases": [],
                  "description": "UDP destination port for notification messages.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "version": {
                  "aliases": [],
                  "description": "Notification message SNMP version.",
                  "type": "str",
                  "required": false,
                  "choices": [
                    "1",
                    "2c",
                    "3"
                  ],
                  "suboptions": {}
                }
              }
            },
            "ifindex": {
              "aliases": [],
              "description": "Enable ifindex persistence",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "ifmib": {
              "aliases": [],
              "description": "IF-MIB configuration commands.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "ifalias_long": {
                  "aliases": [],
                  "description": "Modify parameters for ifAlias object.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "internal_cache_max_duration": {
                  "aliases": [],
                  "description": "IFMIB internal lookahead cache.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "ipsubscriber": {
                  "aliases": [],
                  "description": "Enable ipsubscriber interfaces in IFMIB.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "stats": {
                  "aliases": [],
                  "description": "Modify IF-MIB statistics parameters.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "inform": {
              "aliases": [],
              "description": "Configure SNMP Informs options",
              "type": "dict",
              "required": false,
              "suboptions": {
                "pending": {
                  "aliases": [],
                  "description": "Set number of unacked informs to hold",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "retries": {
                  "aliases": [],
                  "description": "Set retry count for informs",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "timeout": {
                  "aliases": [],
                  "description": "Set timeout for informs",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "interfaces": {
              "aliases": [],
              "description": "Enter the SNMP interface configuration commands.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "index_persistent": {
                  "aliases": [],
                  "description": "Configure ifIndex attributes Persistency across system reloads.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "name": {
                  "aliases": [],
                  "description": "Name of interface.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "notification_linkupdown_disable": {
                  "aliases": [],
                  "description": "Disable linkUp and linkDown notification.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "ipv4": {
              "aliases": [],
              "description": "Mark the dscp/precedence bit for ipv4 packets.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "dscp": {
                  "aliases": [],
                  "description": "Set IP DSCP (DiffServ CodePoint).Please refer vendor document for valid entries.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "precedence": {
                  "aliases": [],
                  "description": "Set precedence Please refer vendor document for valid entries.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "ipv6": {
              "aliases": [],
              "description": "Mark the dscp/precedence bit for ipv4 packets.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "dscp": {
                  "aliases": [],
                  "description": "Set IP DSCP (DiffServ CodePoint).Please refer vendor document for valid entries.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "precedence": {
                  "aliases": [],
                  "description": "Set precedence Please refer vendor document for valid entries.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "location": {
              "aliases": [],
              "description": "The sysLocation string.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "logging_threshold_oid_processing": {
              "aliases": [],
              "description": "Configure threshold to start logging slow OID requests processing.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "logging_threshold_pdu_processing": {
              "aliases": [],
              "description": "Configure threshold to start logging slow PDU requests processing.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "mib_bulkstat_max_procmem_size": {
              "aliases": [],
              "description": "per process memory limit in kilo bytes",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "mib_bulkstat_transfer_ids": {
              "aliases": [],
              "description": "mib bulkstat transfer ids.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "buffer_size": {
                  "aliases": [],
                  "description": "Bulkstat data file maximum size.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "enable": {
                  "aliases": [],
                  "description": "Start Data Collection for this Configuration",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "format_schemaASCI": {
                  "aliases": [],
                  "description": "format",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "name": {
                  "aliases": [],
                  "description": "mib transfer-id name.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "retain": {
                  "aliases": [],
                  "description": "Retention period in Min.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "retry": {
                  "aliases": [],
                  "description": "Number of Retries.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "schema": {
                  "aliases": [],
                  "description": "Schema that contains objects to be collected.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "transfer_interval": {
                  "aliases": [],
                  "description": "transfer-interval",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "mib_object_lists": {
              "aliases": [],
              "description": "mib object lists",
              "type": "list",
              "required": false,
              "elements": "str",
              "suboptions": {}
            },
            "mib_schema": {
              "aliases": [],
              "description": "mib schema",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "name": {
                  "aliases": [],
                  "description": "mib schema name.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "object_list": {
                  "aliases": [],
                  "description": "Name of an object List.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "poll_interval": {
                  "aliases": [],
                  "description": "Periodicity for polling of objects in this schema in Min.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "mroutemib_send_all_vrf": {
              "aliases": [],
              "description": "Configurations related to IPMROUTE-MIB(cisco-support).",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "notification_log_mib": {
              "aliases": [],
              "description": "notification log mib.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "GlobalSize": {
                  "aliases": [],
                  "description": "GlobalSize, max number of notifications that can be logged in all logs.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "default": {
                  "aliases": [],
                  "description": "To create a default log",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "disable": {
                  "aliases": [],
                  "description": "disable, to disable the logging in default log.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "size": {
                  "aliases": [],
                  "description": "size, The max number of notifications that this log (default) can hold.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "oid_poll_stats": {
              "aliases": [],
              "description": "Enable OID poll stats oper CLI",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "overload_control": {
              "aliases": [],
              "description": "Set overload-control params for handling incoming messages in critical processing mode.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "overload_drop_time": {
                  "aliases": [],
                  "description": "Overload drop time (in seconds) for incoming queue (default 1 sec).",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "overload_throttle_rate": {
                  "aliases": [],
                  "description": "Overload throttle rate for incoming queue (default 500 msec)",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "packetsize": {
              "aliases": [],
              "description": "Largest SNMP packet size.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "queue_length": {
              "aliases": [],
              "description": "Queue length (default 100).",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "targets": {
              "aliases": [],
              "description": "targets",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "host": {
                  "aliases": [],
                  "description": "Specify host name.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "name": {
                  "aliases": [],
                  "description": "Name of the target list.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "vrf": {
                  "aliases": [],
                  "description": "Specify VRF name.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "throttle_time": {
              "aliases": [],
              "description": "Set throttle time for handling incoming messages.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeouts": {
              "aliases": [],
              "description": "SNMP timeouts",
              "type": "dict",
              "required": false,
              "suboptions": {
                "duplicate": {
                  "aliases": [],
                  "description": "Duplicate request feature timeout",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "inQdrop": {
                  "aliases": [],
                  "description": "incoming queue drop feature.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "pdu_stats": {
                  "aliases": [],
                  "description": "SNMP pdu statistics end to end.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "subagent": {
                  "aliases": [],
                  "description": "Sub-Agent Request timeout.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "threshold": {
                  "aliases": [],
                  "description": "threshold incoming queue drop feature.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "trap": {
              "aliases": [],
              "description": "MIB trap configurations.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "authentication_vrf_disable": {
                  "aliases": [],
                  "description": "Disable authentication traps for packets on a vrf.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "link_ietf": {
                  "aliases": [],
                  "description": "Link up/down trap configuratio.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "throttle_time": {
                  "aliases": [],
                  "description": "Set throttle time for handling more traps.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "trap_source": {
              "aliases": [],
              "description": "Assign an interface for the source address of all traps",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "trap_timeout": {
              "aliases": [],
              "description": "Set timeout for TRAP message retransmissions",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "traps": {
              "aliases": [],
              "description": "Enable traps to all configured recipients.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "addrpool": {
                  "aliases": [],
                  "description": "Enable SNMP Address Pool traps.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "high": {
                      "aliases": [],
                      "description": "Enable SNMP Address Pool High Threshold trap.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "low": {
                      "aliases": [],
                      "description": "Enable SNMP Address Pool Low Threshold trap.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "bfd": {
                  "aliases": [],
                  "description": "Enable BFD traps.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "bgp": {
                  "aliases": [],
                  "description": "Enable Bgp traps.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "cbgp2": {
                      "aliases": [],
                      "description": "Enable CISCO-BGP4-MIB v2 traps.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "updown": {
                      "aliases": [],
                      "description": "Enable CISCO-BGP4-MIB v2 up/down traps.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "bridgemib": {
                  "aliases": [],
                  "description": "Enable SNMP Trap for Bridge MIB.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "bulkstat_collection": {
                  "aliases": [],
                  "description": "Enable Data-Collection-MIB Collection notifications.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "bulkstat_transfer": {
                  "aliases": [],
                  "description": "Enable Data-Collection-MIB Trnasfer notifications.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "cisco_entity_ext": {
                  "aliases": [],
                  "description": "Enable SNMP entity traps",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "config": {
                  "aliases": [],
                  "description": "Enable SNMP config traps.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "copy_complete": {
                  "aliases": [],
                  "description": "Enable CISCO-CONFIG-COPY-MIB ccCopyCompletion traps.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "diameter": {
                  "aliases": [],
                  "description": "Enable SNMP diameter traps.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "peerdown": {
                      "aliases": [],
                      "description": "Enable peer connection down notification.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "peerup": {
                      "aliases": [],
                      "description": "Enable peer connection up notification.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "permanentfail": {
                      "aliases": [],
                      "description": "Enable permanent failure notification.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "protocolerror": {
                      "aliases": [],
                      "description": "Enable protocol error notifications",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "transientfail": {
                      "aliases": [],
                      "description": "Enable transient failure notification.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "entity": {
                  "aliases": [],
                  "description": "Enable SNMP entity traps.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "entity_redundancy": {
                  "aliases": [],
                  "description": "Enable SNMP CISCO-ENTITY-REDUNDANCY-MIB traps.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "all": {
                      "aliases": [],
                      "description": "Enable all CISCO-ENTITY-REDUNDANCY-MIB traps",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "status": {
                      "aliases": [],
                      "description": "Enable status change traps",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "switchover": {
                      "aliases": [],
                      "description": "Enable switchover traps.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "entity_state": {
                  "aliases": [],
                  "description": "Enable SNMP entity-state traps.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "operstatus": {
                      "aliases": [],
                      "description": "Enable entity oper status enable notification.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "switchover": {
                      "aliases": [],
                      "description": "Enable entity state switchover notifications",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "flash": {
                  "aliases": [],
                  "description": "Enable  flash-mib traps.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "insertion": {
                      "aliases": [],
                      "description": "Enable ciscoFlashDeviceInsertedNotif.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "removal": {
                      "aliases": [],
                      "description": "Enable ciscoFlashDeviceRemovedNotif.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "fru_ctrl": {
                  "aliases": [],
                  "description": "Enable SNMP entity FRU control traps.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "hsrp": {
                  "aliases": [],
                  "description": "Enable SNMP hsrp traps.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "ipsec": {
                  "aliases": [],
                  "description": "Enable SNMP IPSec traps.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "start": {
                      "aliases": [],
                      "description": "Enable SNMP IPsec Tunnel Start trap.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "stop": {
                      "aliases": [],
                      "description": "Enable SNMP IPsec Tunnel Stop trap.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "ipsla": {
                  "aliases": [],
                  "description": "Enable SNMP hipsla traps.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "isakmp": {
                  "aliases": [],
                  "description": "Enable SNMP isakmp traps.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "start": {
                      "aliases": [],
                      "description": "Enable SNMP isakmp Tunnel Start trap.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "stop": {
                      "aliases": [],
                      "description": "Enable SNMP isakmp Tunnel Stop trap.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "isis": {
                  "aliases": [],
                  "description": "Enable isis traps. If set to enabled , all the traps are set.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "adjacency_change": {
                      "aliases": [],
                      "description": "adjacency-change",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "all": {
                      "aliases": [],
                      "description": "anable all is-is traps.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "area_mismatch": {
                      "aliases": [],
                      "description": "area-mismatch",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "attempt_to_exceed_max_sequence": {
                      "aliases": [],
                      "description": "attempt-to-exceed-max-sequence",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "authentication_failure": {
                      "aliases": [],
                      "description": "authentication-failure.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "authentication_type_failure": {
                      "aliases": [],
                      "description": "authentication-type-failure.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "corrupted_lsp_detected": {
                      "aliases": [],
                      "description": "isisCorruptedLSPDetected",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "database_overload": {
                      "aliases": [],
                      "description": "database-overload",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "id_len_mismatch": {
                      "aliases": [],
                      "description": "isisIDLenMismatch",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "lsp_error_detected": {
                      "aliases": [],
                      "description": "lsp-error-detected.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "lsp_too_large_to_propagate": {
                      "aliases": [],
                      "description": "lsp-too-large-to-propagate",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "manual_address_drops": {
                      "aliases": [],
                      "description": "manual_address_drops",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "max_area_addresses_mismatch": {
                      "aliases": [],
                      "description": "max_area_addresses_mismatch",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "orig_lsp_buff_size_mismatch": {
                      "aliases": [],
                      "description": "orig-lsp-buff-size-mismatch",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "own_lsp_purge": {
                      "aliases": [],
                      "description": "own-lsp-purge",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "protocols_supported_mismatch": {
                      "aliases": [],
                      "description": "protocols-supported-mismatch",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "rejected_adjacency": {
                      "aliases": [],
                      "description": "rejected-adjacency",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "sequence_number_skip": {
                      "aliases": [],
                      "description": "sequence-number-skip.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "version_skew": {
                      "aliases": [],
                      "description": "version-skew",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "l2tun": {
                  "aliases": [],
                  "description": "Enable L2TUN traps.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "pseudowire_status": {
                      "aliases": [],
                      "description": "Enable L2TUN pseudowire status traps.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "sessions": {
                      "aliases": [],
                      "description": "Enable L2TUN sessions traps.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "tunnel_down": {
                      "aliases": [],
                      "description": "Enable L2TUN tunnel DOWN traps.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "tunnel_up": {
                      "aliases": [],
                      "description": "Enable L2TUN tunnel UP traps.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "l2vpn": {
                  "aliases": [],
                  "description": "Enable L2VPN traps.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "all": {
                      "aliases": [],
                      "description": "Enable L2VPN ALL traps.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "cisco": {
                      "aliases": [],
                      "description": "Enable L2VPN CISCO  traps.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "vc_down": {
                      "aliases": [],
                      "description": "Enable L2VPN VC DOWN traps.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "vc_up": {
                      "aliases": [],
                      "description": "Enable L2VPN VC UP traps.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "msdp_peer_state_change": {
                  "aliases": [],
                  "description": "Enable SNMP MSDP traps",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "ntp": {
                  "aliases": [],
                  "description": "Enable SNMP Cisco Ntp traps.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "ospf": {
                  "aliases": [],
                  "description": "Enable Ospf traps. If set to enabled , all the traps are set.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "errors": {
                      "aliases": [],
                      "description": "error",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "authentication_failure": {
                          "aliases": [],
                          "description": "authentication-failure.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "bad_packet": {
                          "aliases": [],
                          "description": "bad-packet",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "config_error": {
                          "aliases": [],
                          "description": "config-error",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "virt_authentication_failure": {
                          "aliases": [],
                          "description": "virt-authentication-failure",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "virt_bad_packet": {
                          "aliases": [],
                          "description": "virt-bad-packet",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "virt_config_error": {
                          "aliases": [],
                          "description": "virt_config_error",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "lsa": {
                      "aliases": [],
                      "description": "lsa",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "lsa_maxage": {
                          "aliases": [],
                          "description": "lsa-maxage",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "lsa_originate": {
                          "aliases": [],
                          "description": "lsa-originate",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "retransmit": {
                      "aliases": [],
                      "description": "retransmit",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "packets": {
                          "aliases": [],
                          "description": "packets",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "virt_packets": {
                          "aliases": [],
                          "description": "virt-packets",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "state_change": {
                      "aliases": [],
                      "description": "state-change.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "if_state_change": {
                          "aliases": [],
                          "description": "if-state-change",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "neighbor_state_change": {
                          "aliases": [],
                          "description": "neighbor-state-change",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "virtif_state_change": {
                          "aliases": [],
                          "description": "virtif-state-change",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "virtneighbor_state_change": {
                          "aliases": [],
                          "description": "virtneighbor-state-change",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    }
                  }
                },
                "ospfv3": {
                  "aliases": [],
                  "description": "Enable Ospfv3 traps. If set to enabled , all the traps are set.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "errors": {
                      "aliases": [],
                      "description": "error",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "bad_packet": {
                          "aliases": [],
                          "description": "bad-packet",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "config_error": {
                          "aliases": [],
                          "description": "config-error",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "virt_bad_packet": {
                          "aliases": [],
                          "description": "virt-bad-packet",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "virt_config_error": {
                          "aliases": [],
                          "description": "virt_config_error",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "state_change": {
                      "aliases": [],
                      "description": "state-change.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "if_state_change": {
                          "aliases": [],
                          "description": "if-state-change",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "neighbor_state_change": {
                          "aliases": [],
                          "description": "neighbor-state-change",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "nssa_state_change": {
                          "aliases": [],
                          "description": "nssa-state-change",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "restart_helper_status_change": {
                          "aliases": [],
                          "description": "restart-helper-status-change",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "restart_status_change": {
                          "aliases": [],
                          "description": "restart-status-change",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "restart_virtual_helper_status_change": {
                          "aliases": [],
                          "description": "restart-virtual-helper-status-change",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "virtif_state_change": {
                          "aliases": [],
                          "description": "virtif-state-change",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "virtneighbor_state_change": {
                          "aliases": [],
                          "description": "virtneighbor-state-change",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    }
                  }
                },
                "pim": {
                  "aliases": [],
                  "description": "Enable Pim traps. If set to enabled , all the traps are set.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "interface_state_change": {
                      "aliases": [],
                      "description": "interface-state-change .",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "invalid_message_received": {
                      "aliases": [],
                      "description": "invalid-message-received",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "neighbor_change": {
                      "aliases": [],
                      "description": "neighbor-change.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "rp_mapping_change": {
                      "aliases": [],
                      "description": "rp-mapping-change.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "power": {
                  "aliases": [],
                  "description": "Enable SNMP entity power traps.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "rf": {
                  "aliases": [],
                  "description": "Enable SNMP RF-MIB traps.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "rsvp": {
                  "aliases": [],
                  "description": "Enable rsvp traps. If set to enabled , all the traps are set.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "all": {
                      "aliases": [],
                      "description": "enable all traps.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "lost_flow": {
                      "aliases": [],
                      "description": "lost-flow",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "new_flow": {
                      "aliases": [],
                      "description": "new-flow",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "selective_vrf_download_role_change": {
                  "aliases": [],
                  "description": "Enable selective VRF download traps.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "sensor": {
                  "aliases": [],
                  "description": "Enable SNMP entity sensor traps",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "snmp": {
                  "aliases": [],
                  "description": "Enable snmp traps. If set to enabled , all the traps are set.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "authentication": {
                      "aliases": [],
                      "description": "authentication",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "coldstart": {
                      "aliases": [],
                      "description": "coldstart.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "linkdown": {
                      "aliases": [],
                      "description": "link-down",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "linkup": {
                      "aliases": [],
                      "description": "link-up",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "warmstart": {
                      "aliases": [],
                      "description": "warmstart.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "subscriber": {
                  "aliases": [],
                  "description": "Subscriber notification commands.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "session_agg_access_interface": {
                      "aliases": [],
                      "description": "Subscriber notification at access interface level",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "session_agg_node": {
                      "aliases": [],
                      "description": "Subscriber notification at node level",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "syslog": {
                  "aliases": [],
                  "description": "syslog",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "system": {
                  "aliases": [],
                  "description": "Enable SNMP SYSTEMMIB-MIB traps.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "vpls": {
                  "aliases": [],
                  "description": "Enable VPLS traps",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "all": {
                      "aliases": [],
                      "description": "Enable all VPLS traps.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "full_clear": {
                      "aliases": [],
                      "description": "Enable VPLS Full Clear traps.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "full_raise": {
                      "aliases": [],
                      "description": "Enable VPLS Full Raise traps.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "status": {
                      "aliases": [],
                      "description": "Enable VPLS Status traps",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "vrrp_events": {
                  "aliases": [],
                  "description": "vrrp",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "users": {
              "aliases": [],
              "description": "SNMP user configuration.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "Ipv4_acl": {
                  "aliases": [],
                  "description": "Type of Access-list",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "Ipv6_acl": {
                  "aliases": [],
                  "description": "Type of Access-list",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "SDROwner": {
                  "aliases": [],
                  "description": "SDR Owner permissions for MIB Objects.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "SystemOwner": {
                  "aliases": [],
                  "description": "System Owner permissions for MIB objects.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "group": {
                  "aliases": [],
                  "description": "SNMP group for the user.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "user": {
                  "aliases": [],
                  "description": "SNMP user name",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "v4_acl": {
                  "aliases": [],
                  "description": "V4 Access-list name",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "version": {
                  "aliases": [],
                  "description": "snmp security version",
                  "type": "str",
                  "required": false,
                  "choices": [
                    "v1",
                    "v2c",
                    "v3"
                  ],
                  "suboptions": {}
                }
              }
            },
            "vrfs": {
              "aliases": [],
              "description": "Specify the VRF in which the source address is used",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "context": {
                  "aliases": [],
                  "description": "Configure the source interface for SNMP notifications",
                  "type": "list",
                  "required": false,
                  "elements": "str",
                  "suboptions": {}
                },
                "hosts": {
                  "aliases": [],
                  "description": "Notification destinations",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "community": {
                      "aliases": [],
                      "description": "community string.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "host": {
                      "aliases": [],
                      "description": "Hostname or IP address of SNMP notification host.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "informs": {
                      "aliases": [],
                      "description": "Use SNMP inform messages.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "traps": {
                      "aliases": [],
                      "description": "Use SNMP trap messages",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "udp_port": {
                      "aliases": [],
                      "description": "UDP destination port for notification messages.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "version": {
                      "aliases": [],
                      "description": "Notification message SNMP version.",
                      "type": "str",
                      "required": false,
                      "choices": [
                        "1",
                        "2c",
                        "3"
                      ],
                      "suboptions": {}
                    }
                  }
                },
                "vrf": {
                  "aliases": [],
                  "description": "vrf name.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            }
          }
        },
        "running_config": {
          "aliases": [],
          "description": "This option is used only with state I(parsed).\nThe value of this option should be the output received from the IOSXR device by executing the command B(show running-config snmp-server).\nThe state I(parsed) reads the configuration from C(running_config) option and transforms it into Ansible structured data as per the resource module's argspec and the value is then returned in the I(parsed) key within the result.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The state the configuration should be left in.\nThe states I(replaced) and I(overridden) have identical behaviour for this module.\nPlease refer to examples for more details.",
          "default": "merged",
          "type": "str",
          "required": false,
          "choices": [
            "deleted",
            "merged",
            "overridden",
            "replaced",
            "gathered",
            "rendered",
            "parsed"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manages snmp-server resource module",
      "version_added": "2.6.0"
    },
    "examples": "\n# Using state: merged\n# Before state:\n# -------------\n# RP/0/RP0/CPU0:test2#show running-config snmp-server\n# --------------------- EMPTY -----------------\n# Merged play:\n# ------------\n- name: Merge the provided configuration with the existing running configuration\n  cisco.iosxr.iosxr_snmp_server:\n        config:\n          vrfs:\n            - hosts:\n                - community: test1\n                  host: 1.1.1.1\n                  traps: true\n              vrf: vrf1\n          users:\n            - Ipv4_acl: test1\n              Ipv6_acl: test2\n              group: test2\n              user: u1\n              version: v1\n          timeouts:\n            duplicate: 0\n            inQdrop: 0\n          trap:\n            throttle_time: 12\n          targets:\n            - host: 1.1.1.2\n              name: test\n\n          ifmib:\n            internal_cache_max_duration: 4\n          inform:\n            retries: 7\n          chassis_id: test2\n          packetsize: 490\n          queue_length: 2\n          throttle_time: 60\n          trap_source: GigabitEthernet0/0/0/2\n          trap_timeout: 3\n          context:\n            - c1\n            - c2\n          contact: t1\n          correlator:\n            buffer_size: 1024\n          communities:\n            - name: test2\n              ro: true\n              sdrowner: true\n              acl_v4: test\n              acl_v6: test1\n          community_maps:\n            - name: cm1\n              context: c1\n              target_list: t1\n              security_name: s1\n          drop:\n            report_IPv4: test1\n            unknown_user: true\n          ipv6:\n            precedence: routine\n          ipv4:\n            dscp: af11\n          location: test1\n          logging_threshold_oid_processing: 1\n          logging_threshold_pdu_processing: 1\n          mib_bulkstat_max_procmem_size: 101\n          mroutemib_send_all_vrf: true\n          overload_control:\n            overload_drop_time: 4\n            overload_throttle_rate: 6\n          notification_log_mib:\n            GlobalSize: 5\n            size: 5\n          traps:\n            hsrp: true\n            ipsla: true\n            ipsec:\n              start: true\n              stop: true\n            bridgemib: true\n            bulkstat_collection: true\n            cisco_entity_ext: true\n            config: true\n            copy_complete: true\n            addrpool:\n              high: true\n              low: true\n            bfd: true\n            bgp:\n              cbgp2: true\n            l2tun:\n              sessions: true\n              tunnel_down: true\n              tunnel_up: true\n            l2vpn:\n              all: true\n              vc_down: true\n              vc_up: true\n            msdp_peer_state_change: true\n#\n# Commands Fired:\n# ------------\n# \"commands\": [\n#         \"snmp-server chassis-id test2\",\n#         \"snmp-server correlator buffer-size 1024\",\n#         \"snmp-server contact t1\",\n#         \"snmp-server ipv4 dscp af11\",\n#         \"snmp-server ipv6 precedence routine\",\n#         \"snmp-server location test1\",\n#         \"snmp-server logging threshold oid-processing 1\",\n#         \"snmp-server logging threshold pdu-processing 1\",\n#         \"snmp-server mib bulkstat max-procmem-size 101\",\n#         \"snmp-server mroutemib send-all-vrf\",\n#         \"snmp-server overload-control 4 6\",\n#         \"snmp-server packetsize 490\",\n#         \"snmp-server queue-length 2\",\n#         \"snmp-server throttle-time 60\",\n#         \"snmp-server trap-source GigabitEthernet0/0/0/2\",\n#         \"snmp-server trap-timeout 3\",\n#         \"snmp-server drop report acl IPv4 test1\",\n#         \"snmp-server drop unknown-user\",\n#         \"snmp-server ifmib internal cache max-duration 4\",\n#         \"snmp-server inform retries 7\",\n#         \"snmp-server notification-log-mib size 5\",\n#         \"snmp-server notification-log-mib GlobalSize 5\",\n#         \"snmp-server trap throttle-time 12\",\n#         \"snmp-server timeouts inQdrop 0\",\n#         \"snmp-server timeouts duplicate 0\",\n#         \"snmp-server traps addrpool low\",\n#         \"snmp-server traps addrpool high\",\n#         \"snmp-server traps bfd\",\n#         \"snmp-server traps bgp cbgp2\",\n#         \"snmp-server traps bulkstat collection\",\n#         \"snmp-server traps bridgemib\",\n#         \"snmp-server traps copy-complete\",\n#         \"snmp-server traps cisco-entity-ext\",\n#         \"snmp-server traps config\",\n#         \"snmp-server traps hsrp\",\n#         \"snmp-server traps ipsla\",\n#         \"snmp-server traps ipsec tunnel start\",\n#         \"snmp-server traps ipsec tunnel stop\",\n#         \"snmp-server traps l2tun sessions\",\n#         \"snmp-server traps l2tun tunnel-up\",\n#         \"snmp-server traps l2tun tunnel-down\",\n#         \"snmp-server traps l2vpn all\",\n#         \"snmp-server traps l2vpn vc-up\",\n#         \"snmp-server traps l2vpn vc-down\",\n#         \"snmp-server traps msdp peer-state-change\",\n#         \"snmp-server community test2 RO SDROwner IPv4 test IPv6 test1\",\n#         \"snmp-server community-map cm1 context c1 security-name s1 target-list t1\",\n#         \"snmp-server context c1\",\n#         \"snmp-server context c2\",\n#         \"snmp-server user u1 test2 v1 IPv4 test1 IPv6 test2\",\n#         \"snmp-server target list test2 vrf vrf2\",\n#         \"snmp-server target list test host 1.1.1.2\",\n#         \"snmp-server vrf vrf1\",\n#         \"host 1.1.1.1 traps test1\"\n#\n#     ],\n# After state:\n# ------------\n# RP/0/RP0/CPU0:test2#show running-config snmp-server\n# Mon Nov 29 12:49:29.521 UTC\n# snmp-server vrf vrf1\n#  host 1.1.1.1 traps test1\n# !\n# snmp-server drop report acl IPv4 test1\n# snmp-server drop unknown-user\n# snmp-server ipv4 dscp af11\n# snmp-server ipv6 precedence routine\n# snmp-server user u1 test2 v1 IPv4 test1 IPv6 test2\n# snmp-server community test2 RO SDROwner IPv4 test IPv6 test1\n# snmp-server queue-length 2\n# snmp-server trap-timeout 3\n# snmp-server trap throttle-time 12\n# snmp-server traps bfd\n# snmp-server traps bgp cbgp2\n# snmp-server traps copy-complete\n# snmp-server traps hsrp\n# snmp-server traps ipsla\n# snmp-server traps msdp peer-state-change\n# snmp-server traps ipsec tunnel stop\n# snmp-server traps ipsec tunnel start\n# snmp-server traps config\n# snmp-server traps l2tun sessions\n# snmp-server traps l2tun tunnel-up\n# snmp-server traps l2tun tunnel-down\n# snmp-server traps bulkstat collection\n# snmp-server traps l2vpn all\n# snmp-server traps l2vpn vc-up\n# snmp-server traps l2vpn vc-down\n# snmp-server traps bridgemib\n# snmp-server traps addrpool low\n# snmp-server traps addrpool high\n# snmp-server traps cisco-entity-ext\n# snmp-server chassis-id test2\n# snmp-server contact t1\n# snmp-server location test1\n# snmp-server target list test host 1.1.1.2\n# snmp-server target list test2 vrf vrf2\n# snmp-server context c1\n# snmp-server context c2\n# snmp-server logging threshold oid-processing 1\n# snmp-server logging threshold pdu-processing 1\n# snmp-server mib bulkstat max-procmem-size 101\n# snmp-server timeouts duplicate 0\n# snmp-server timeouts inQdrop 0\n# snmp-server packetsize 490\n# snmp-server correlator buffer-size 1024\n# snmp-server trap-source GigabitEthernet0/0/0/2\n# snmp-server throttle-time 60\n# snmp-server community-map cm1 context c1 security-name s1 target-list t1\n# snmp-server inform retries 7\n# snmp-server overload-control 4 6\n# snmp-server ifmib internal cache max-duration 4\n# snmp-server mroutemib send-all-vrf\n# snmp-server notification-log-mib size 5\n# snmp-server notification-log-mib GlobalSize 5\n#\n#\n# Using state: deleted\n# Before state:\n# -------------\n# RP/0/RP0/CPU0:test2#show running-config snmp-server\n# Mon Nov 29 12:49:29.521 UTC\n# snmp-server vrf vrf1\n#  host 1.1.1.1 traps test1\n# !\n# snmp-server drop report acl IPv4 test1\n# snmp-server drop unknown-user\n# snmp-server ipv4 dscp af11\n# snmp-server ipv6 precedence routine\n# snmp-server user u1 test2 v1 IPv4 test1 IPv6 test2\n# snmp-server community test2 RO SDROwner IPv4 test IPv6 test1\n# snmp-server queue-length 2\n# snmp-server trap-timeout 3\n# snmp-server trap throttle-time 12\n# snmp-server traps bfd\n# snmp-server traps bgp cbgp2\n# snmp-server traps copy-complete\n# snmp-server traps hsrp\n# snmp-server traps ipsla\n# snmp-server traps msdp peer-state-change\n# snmp-server traps ipsec tunnel stop\n# snmp-server traps ipsec tunnel start\n# snmp-server traps config\n# snmp-server traps l2tun sessions\n# snmp-server traps l2tun tunnel-up\n# snmp-server traps l2tun tunnel-down\n# snmp-server traps bulkstat collection\n# snmp-server traps l2vpn all\n# snmp-server traps l2vpn vc-up\n# snmp-server traps l2vpn vc-down\n# snmp-server traps bridgemib\n# snmp-server traps addrpool low\n# snmp-server traps addrpool high\n# snmp-server traps cisco-entity-ext\n# snmp-server chassis-id test2\n# snmp-server contact t1\n# snmp-server location test1\n# snmp-server target list test host 1.1.1.2\n# snmp-server target list test2 vrf vrf2\n# snmp-server context c1\n# snmp-server context c2\n# snmp-server logging threshold oid-processing 1\n# snmp-server logging threshold pdu-processing 1\n# snmp-server mib bulkstat max-procmem-size 101\n# snmp-server timeouts duplicate 0\n# snmp-server timeouts inQdrop 0\n# snmp-server packetsize 490\n# snmp-server correlator buffer-size 1024\n# snmp-server trap-source GigabitEthernet0/0/0/2\n# snmp-server throttle-time 60\n# snmp-server community-map cm1 context c1 security-name s1 target-list t1\n# snmp-server inform retries 7\n# snmp-server overload-control 4 6\n# snmp-server ifmib internal cache max-duration 4\n# snmp-server mroutemib send-all-vrf\n# snmp-server notification-log-mib size 5\n# snmp-server notification-log-mib GlobalSize 5\n# Deleted play:\n# -------------\n- name: Remove all existing configuration\n  cisco.iosxr.iosxr_snmp_server:\n    state: deleted\n# Commands Fired:\n# ---------------\n# \"commands\": [\n#        \"no snmp-server chassis-id test2\",\n#         \"no snmp-server correlator buffer-size 1024\",\n#         \"no snmp-server contact t1\",\n#         \"no snmp-server ipv4 dscp af11\",\n#         \"no snmp-server ipv6 precedence routine\",\n#         \"no snmp-server location test1\",\n#         \"no snmp-server logging threshold oid-processing 1\",\n#         \"no snmp-server logging threshold pdu-processing 1\",\n#         \"no snmp-server mib bulkstat max-procmem-size 101\",\n#         \"no snmp-server mroutemib send-all-vrf\",\n#         \"no snmp-server overload-control 4 6\",\n#         \"no snmp-server packetsize 490\",\n#         \"no snmp-server queue-length 2\",\n#         \"no snmp-server throttle-time 60\",\n#         \"no snmp-server trap-source GigabitEthernet0/0/0/2\",\n#         \"no snmp-server trap-timeout 3\",\n#         \"no snmp-server drop report acl IPv4 test1\",\n#         \"no snmp-server drop unknown-user\",\n#         \"no snmp-server ifmib internal cache max-duration 4\",\n#         \"no snmp-server inform retries 7\",\n#         \"no snmp-server notification-log-mib size 5\",\n#         \"no snmp-server notification-log-mib GlobalSize 5\",\n#         \"no snmp-server trap throttle-time 12\",\n#         \"no snmp-server timeouts inQdrop 0\",\n#         \"no snmp-server timeouts duplicate 0\",\n#         \"no snmp-server traps addrpool low\",\n#         \"no snmp-server traps addrpool high\",\n#         \"no snmp-server traps bfd\",\n#         \"no snmp-server traps bgp cbgp2\",\n#         \"no snmp-server traps bulkstat collection\",\n#         \"no snmp-server traps bridgemib\",\n#         \"no snmp-server traps copy-complete\",\n#         \"no snmp-server traps cisco-entity-ext\",\n#         \"no snmp-server traps config\",\n#         \"no snmp-server traps hsrp\",\n#         \"no snmp-server traps ipsla\",\n#         \"no snmp-server traps ipsec tunnel start\",\n#         \"no snmp-server traps ipsec tunnel stop\",\n#         \"no snmp-server traps l2tun sessions\",\n#         \"no snmp-server traps l2tun tunnel-up\",\n#         \"no snmp-server traps l2tun tunnel-down\",\n#         \"no snmp-server traps l2vpn all\",\n#         \"no snmp-server traps l2vpn vc-up\",\n#         \"no snmp-server traps l2vpn vc-down\",\n#         \"no snmp-server traps msdp peer-state-change\",\n#         \"no snmp-server community test2 RO SDROwner IPv4 test IPv6 test1\",\n#         \"no snmp-server community-map cm1 context c1 security-name s1 target-list t1\",\n#         \"no snmp-server context c1\",\n#         \"no snmp-server context c2\",\n#         \"no snmp-server user u1 test2 v1 IPv4 test1 IPv6 test2\",\n#         \"no snmp-server target list test host 1.1.1.2\",\n#         \"no snmp-server target list test2 vrf vrf2\",\n#         \"no snmp-server vrf vrf1\"\n#     ],\n# After state:\n# ------------\n# RP/0/0/CPU0:10#show running-config ntp\n# --------------------- EMPTY -----------------\n# Using state: overridden\n# Before state:\n# -------------\n# RP/0/0/CPU0:10#show running-config snmp-server\n# snmp-server vrf vrf1\n#  host 1.1.1.1 traps test1\n# !\n# snmp-server drop report acl IPv4 test1\n# snmp-server drop unknown-user\n# snmp-server ipv4 dscp af11\n# snmp-server ipv6 precedence routine\n# snmp-server user u1 test2 v1 IPv4 test1 IPv6 test2\n# snmp-server community test2 RO SDROwner IPv4 test IPv6 test1\n# snmp-server queue-length 2\n# snmp-server trap-timeout 3\n# snmp-server trap throttle-time 12\n# snmp-server traps bfd\n# snmp-server traps bgp cbgp2\n# snmp-server traps copy-complete\n# snmp-server traps hsrp\n# snmp-server traps ipsla\n# snmp-server traps msdp peer-state-change\n# snmp-server traps ipsec tunnel stop\n# snmp-server traps ipsec tunnel start\n# snmp-server traps config\n# snmp-server traps l2tun sessions\n# snmp-server traps l2tun tunnel-up\n# snmp-server traps l2tun tunnel-down\n# snmp-server traps bulkstat collection\n# snmp-server traps l2vpn all\n# snmp-server traps l2vpn vc-up\n# snmp-server traps l2vpn vc-down\n# snmp-server traps bridgemib\n# snmp-server traps addrpool low\n# snmp-server traps addrpool high\n# snmp-server traps cisco-entity-ext\n# snmp-server chassis-id test2\n# snmp-server contact t1\n# snmp-server location test1\n# snmp-server target list test host 1.1.1.2\n# snmp-server target list test2 vrf vrf2\n# snmp-server context c1\n# snmp-server context c2\n# snmp-server logging threshold oid-processing 1\n# snmp-server logging threshold pdu-processing 1\n# snmp-server mib bulkstat max-procmem-size 101\n# snmp-server timeouts duplicate 0\n# snmp-server timeouts inQdrop 0\n# snmp-server packetsize 490\n# snmp-server correlator buffer-size 1024\n# snmp-server trap-source GigabitEthernet0/0/0/2\n# snmp-server throttle-time 60\n# snmp-server community-map cm1 context c1 security-name s1 target-list t1\n# snmp-server inform retries 7\n# snmp-server overload-control 4 6\n# snmp-server ifmib internal cache max-duration 4\n# snmp-server mroutemib send-all-vrf\n# snmp-server notification-log-mib size 5\n# snmp-server notification-log-mib GlobalSize 5\n# Overridden play:\n# ----------------\n- name: Override Snmp-server configuration with provided configuration\n  cisco.iosxr.iosxr_snmp_server:\n        config:\n          timeouts:\n            duplicate: 0\n            inQdrop: 0\n          trap:\n            throttle_time: 13\n          targets:\n            - host: 1.1.1.2\n              name: test\n\n          ifmib:\n            internal_cache_max_duration: 5\n          inform:\n            retries: 7\n          chassis_id: test\n          packetsize: 491\n          queue_length: 2\n          throttle_time: 60\n          trap_source: GigabitEthernet0/0/0/2\n          trap_timeout: 3\n          context:\n            - c1\n            - c2\n          contact: t1\n          correlator:\n            buffer_size: 1025\n          communities:\n            - name: test1\n              ro: true\n              sdrowner: true\n              acl_v4: test\n              acl_v6: test1\n          community_maps:\n            - name: cm2\n              context: c1\n              target_list: t1\n              security_name: s1\n          drop:\n            report_IPv4: test2\n            unknown_user: true\n          ipv6:\n            precedence: routine\n          ipv4:\n            dscp: af11\n          location: test1\n          logging_threshold_oid_processing: 2\n          logging_threshold_pdu_processing: 2\n          mib_bulkstat_max_procmem_size: 101\n          mroutemib_send_all_vrf: true\n          overload_control:\n            overload_drop_time: 4\n            overload_throttle_rate: 6\n          notification_log_mib:\n            GlobalSize: 5\n            size: 5\n          traps:\n            hsrp: true\n            ipsla: true\n            ipsec:\n              start: true\n              stop: true\n            bridgemib: true\n            bulkstat_collection: true\n            cisco_entity_ext: true\n            config: true\n            copy_complete: true\n            l2vpn:\n              all: true\n              vc_down: true\n              vc_up: true\n            msdp_peer_state_change: true\n        state: overridden\n# Commands Fired:\n# ---------------\n# \"commands\": [\n#        \"no snmp-server traps addrpool low\",\n#         \"no snmp-server traps addrpool high\",\n#         \"no snmp-server traps bfd\",\n#         \"no snmp-server traps bgp cbgp2\",\n#         \"no snmp-server traps l2tun sessions\",\n#         \"no snmp-server traps l2tun tunnel-up\",\n#         \"no snmp-server traps l2tun tunnel-down\",\n#         \"no snmp-server community test2 RO SDROwner IPv4 test IPv6 test1\",\n#         \"no snmp-server community-map cm1 context c1 security-name s1 target-list t1\",\n#         \"no snmp-server user u1 test2 v1 IPv4 test1 IPv6 test2\",\n#         \"no snmp-server vrf vrf1\",\n#         \"snmp-server chassis-id test\",\n#         \"snmp-server correlator buffer-size 1025\",\n#         \"snmp-server logging threshold oid-processing 2\",\n#         \"snmp-server logging threshold pdu-processing 2\",\n#         \"snmp-server packetsize 491\",\n#         \"snmp-server drop report acl IPv4 test2\",\n#         \"snmp-server ifmib internal cache max-duration 5\",\n#         \"snmp-server trap throttle-time 13\",\n#         \"snmp-server community test1 RO SDROwner IPv4 test IPv6 test1\",\n#         \"snmp-server community-map cm2 context c1 security-name s1 target-list t1\"\n#     ],\n# After state:\n# ------------\n# RP/0/RP0/CPU0:test2#show running-config snmp-server\n# Mon Nov 29 12:57:34.182 UTC\n# snmp-server drop report acl IPv4 test2\n# snmp-server drop unknown-user\n# snmp-server ipv4 dscp af11\n# snmp-server ipv6 precedence routine\n# snmp-server community test1 RO SDROwner IPv4 test IPv6 test1\n# snmp-server queue-length 2\n# snmp-server trap-timeout 3\n# snmp-server trap throttle-time 13\n# snmp-server traps copy-complete\n# snmp-server traps hsrp\n# snmp-server traps ipsla\n# snmp-server traps msdp peer-state-change\n# snmp-server traps ipsec tunnel stop\n# snmp-server traps ipsec tunnel start\n# snmp-server traps config\n# snmp-server traps bulkstat collection\n# snmp-server traps l2vpn all\n# snmp-server traps l2vpn vc-up\n# snmp-server traps l2vpn vc-down\n# snmp-server traps bridgemib\n# snmp-server traps cisco-entity-ext\n# snmp-server chassis-id test\n# snmp-server contact t1\n# snmp-server location test1\n# snmp-server target list test host 1.1.1.2\n# snmp-server target list test2 vrf vrf2\n# snmp-server context c1\n# snmp-server context c2\n# snmp-server logging threshold oid-processing 2\n# snmp-server logging threshold pdu-processing 2\n# snmp-server mib bulkstat max-procmem-size 101\n# snmp-server timeouts duplicate 0\n# snmp-server timeouts inQdrop 0\n# snmp-server packetsize 491\n# snmp-server correlator buffer-size 1025\n# snmp-server trap-source GigabitEthernet0/0/0/2\n# snmp-server throttle-time 60\n# snmp-server community-map cm2 context c1 security-name s1 target-list t1\n# snmp-server inform retries 7\n# snmp-server overload-control 4 6\n# snmp-server ifmib internal cache max-duration 5\n# snmp-server mroutemib send-all-vrf\n# snmp-server notification-log-mib size 5\n# snmp-server notification-log-mib GlobalSize 5\n#\n# Using state: replaced\n# Before state:\n# -------------\n# RP/0/0/CPU0:10#show running-config snmp-server\n# snmp-server vrf vrf1\n#  host 1.1.1.1 traps test1\n# !\n# snmp-server drop report acl IPv4 test1\n# snmp-server drop unknown-user\n# snmp-server ipv4 dscp af11\n# snmp-server ipv6 precedence routine\n# snmp-server user u1 test2 v1 IPv4 test1 IPv6 test2\n# snmp-server community test2 RO SDROwner IPv4 test IPv6 test1\n# snmp-server queue-length 2\n# snmp-server trap-timeout 3\n# snmp-server trap throttle-time 12\n# snmp-server traps bfd\n# snmp-server traps bgp cbgp2\n# snmp-server traps copy-complete\n# snmp-server traps hsrp\n# snmp-server traps ipsla\n# snmp-server traps msdp peer-state-change\n# snmp-server traps ipsec tunnel stop\n# snmp-server traps ipsec tunnel start\n# snmp-server traps config\n# snmp-server traps l2tun sessions\n# snmp-server traps l2tun tunnel-up\n# snmp-server traps l2tun tunnel-down\n# snmp-server traps bulkstat collection\n# snmp-server traps l2vpn all\n# snmp-server traps l2vpn vc-up\n# snmp-server traps l2vpn vc-down\n# snmp-server traps bridgemib\n# snmp-server traps addrpool low\n# snmp-server traps addrpool high\n# snmp-server traps cisco-entity-ext\n# snmp-server chassis-id test2\n# snmp-server contact t1\n# snmp-server location test1\n# snmp-server target list test host 1.1.1.2\n# snmp-server target list test2 vrf vrf2\n# snmp-server context c1\n# snmp-server context c2\n# snmp-server logging threshold oid-processing 1\n# snmp-server logging threshold pdu-processing 1\n# snmp-server mib bulkstat max-procmem-size 101\n# snmp-server timeouts duplicate 0\n# snmp-server timeouts inQdrop 0\n# snmp-server packetsize 490\n# snmp-server correlator buffer-size 1024\n# snmp-server trap-source GigabitEthernet0/0/0/2\n# snmp-server throttle-time 60\n# snmp-server community-map cm1 context c1 security-name s1 target-list t1\n# snmp-server inform retries 7\n# snmp-server overload-control 4 6\n# snmp-server ifmib internal cache max-duration 4\n# snmp-server mroutemib send-all-vrf\n# snmp-server notification-log-mib size 5\n# snmp-server notification-log-mib GlobalSize 5\n#\n#\n# Replaced play:\n# ----------------\n- name: Replace Snmp-server configuration with provided configuration\n  cisco.iosxr.iosxr_snmp_server:\n        state: replaced\n        config:\n          timeouts:\n            duplicate: 0\n            inQdrop: 0\n          trap:\n            throttle_time: 13\n          targets:\n            - host: 1.1.1.2\n              name: test\n\n          ifmib:\n            internal_cache_max_duration: 5\n          inform:\n            retries: 7\n          chassis_id: test\n          packetsize: 491\n          queue_length: 2\n          throttle_time: 60\n          trap_source: GigabitEthernet0/0/0/2\n          trap_timeout: 3\n          context:\n            - c1\n            - c2\n          contact: t1\n          correlator:\n            buffer_size: 1025\n          communities:\n            - name: test1\n              ro: true\n              sdrowner: true\n              acl_v4: test\n              acl_v6: test1\n          community_maps:\n            - name: cm2\n              context: c1\n              target_list: t1\n              security_name: s1\n          drop:\n            report_IPv4: test2\n            unknown_user: true\n          ipv6:\n            precedence: routine\n          ipv4:\n            dscp: af11\n          location: test1\n          logging_threshold_oid_processing: 2\n          logging_threshold_pdu_processing: 2\n          mib_bulkstat_max_procmem_size: 101\n          mroutemib_send_all_vrf: true\n          overload_control:\n            overload_drop_time: 4\n            overload_throttle_rate: 6\n          notification_log_mib:\n            GlobalSize: 5\n            size: 5\n          traps:\n            hsrp: true\n            ipsla: true\n            ipsec:\n              start: true\n              stop: true\n            bridgemib: true\n            bulkstat_collection: true\n            cisco_entity_ext: true\n            config: true\n            copy_complete: true\n            l2vpn:\n              all: true\n              vc_down: true\n              vc_up: true\n            msdp_peer_state_change: true\n#\n# Commands Fired:\n# ---------------\n# \"commands\": [\n#         \"no snmp-server traps addrpool low\",\n#         \"no snmp-server traps addrpool high\",\n#         \"no snmp-server traps bfd\",\n#         \"no snmp-server traps bgp cbgp2\",\n#         \"no snmp-server traps l2tun sessions\",\n#         \"no snmp-server traps l2tun tunnel-up\",\n#         \"no snmp-server traps l2tun tunnel-down\",\n#         \"no snmp-server community test2 RO SDROwner IPv4 test IPv6 test1\",\n#         \"no snmp-server community-map cm1 context c1 security-name s1 target-list t1\",\n#         \"no snmp-server user u1 test2 v1 IPv4 test1 IPv6 test2\",\n#         \"no snmp-server vrf vrf1\",\n#         \"snmp-server chassis-id test\",\n#         \"snmp-server correlator buffer-size 1025\",\n#         \"snmp-server logging threshold oid-processing 2\",\n#         \"snmp-server logging threshold pdu-processing 2\",\n#         \"snmp-server packetsize 491\",\n#         \"snmp-server drop report acl IPv4 test2\",\n#         \"snmp-server ifmib internal cache max-duration 5\",\n#         \"snmp-server trap throttle-time 13\",\n#         \"snmp-server community test1 RO SDROwner IPv4 test IPv6 test1\",\n#         \"snmp-server community-map cm2 context c1 security-name s1 target-list t1\"\n#     ],\n# After state:\n# ------------\n# RP/0/RP0/CPU0:ios#show running-config snmp-server\n# Mon Sep 13 10:38:22.690 UTC\n# RP/0/0/CPU0:10#show running-config snmp-server\n# snmp-server vrf vrf1\n#  host 1.1.1.1 traps test1\n# !\n# snmp-server drop report acl IPv4 test1\n# snmp-server drop unknown-user\n# snmp-server ipv4 dscp af11\n# snmp-server ipv6 precedence routine\n# snmp-server user u1 test2 v1 IPv4 test1 IPv6 test2\n# snmp-server community test2 RO SDROwner IPv4 test IPv6 test1\n# snmp-server queue-length 2\n# snmp-server trap-timeout 3\n# snmp-server trap throttle-time 12\n# snmp-server traps bfd\n# snmp-server traps bgp cbgp2\n# snmp-server traps copy-complete\n# snmp-server traps hsrp\n# snmp-server traps ipsla\n# snmp-server traps msdp peer-state-change\n# snmp-server traps ipsec tunnel stop\n# snmp-server traps ipsec tunnel start\n# snmp-server traps config\n# snmp-server traps l2tun sessions\n# snmp-server traps l2tun tunnel-up\n# snmp-server traps l2tun tunnel-down\n# snmp-server traps bulkstat collection\n# snmp-server traps l2vpn all\n# snmp-server traps l2vpn vc-up\n# snmp-server traps l2vpn vc-down\n# snmp-server traps bridgemib\n# snmp-server traps addrpool low\n# snmp-server traps addrpool high\n# snmp-server traps cisco-entity-ext\n# snmp-server chassis-id test2\n# snmp-server contact t1\n# snmp-server location test1\n# snmp-server target list test host 1.1.1.2\n# snmp-server target list test2 vrf vrf2\n# snmp-server context c1\n# snmp-server context c2\n# snmp-server logging threshold oid-processing 1\n# snmp-server logging threshold pdu-processing 1\n# snmp-server mib bulkstat max-procmem-size 101\n# snmp-server timeouts duplicate 0\n# snmp-server timeouts inQdrop 0\n# snmp-server packetsize 490\n# snmp-server correlator buffer-size 1024\n# snmp-server trap-source GigabitEthernet0/0/0/2\n# snmp-server throttle-time 60\n# snmp-server community-map cm1 context c1 security-name s1 target-list t1\n# snmp-server inform retries 7\n# snmp-server overload-control 4 6\n# snmp-server ifmib internal cache max-duration 4\n# snmp-server mroutemib send-all-vrf\n# snmp-server notification-log-mib size 5\n# snmp-server notification-log-mib GlobalSize 5\n#\n#\n# Using state: gathered\n# Before state:\n# -------------\n# RP/0/RP0/CPU0:test2#show running-config snmp-server\n# Mon Nov 29 12:49:29.521 UTC\n# snmp-server vrf vrf1\n#  host 1.1.1.1 traps test1\n# !\n# snmp-server drop report acl IPv4 test1\n# snmp-server drop unknown-user\n# snmp-server ipv4 dscp af11\n# snmp-server ipv6 precedence routine\n# snmp-server user u1 test2 v1 IPv4 test1 IPv6 test2\n# snmp-server community test2 RO SDROwner IPv4 test IPv6 test1\n# snmp-server queue-length 2\n# snmp-server trap-timeout 3\n# snmp-server trap throttle-time 12\n# snmp-server traps bfd\n# snmp-server traps bgp cbgp2\n# snmp-server traps copy-complete\n# snmp-server traps hsrp\n# snmp-server traps ipsla\n# snmp-server traps msdp peer-state-change\n# snmp-server traps ipsec tunnel stop\n# snmp-server traps ipsec tunnel start\n# snmp-server traps config\n# snmp-server traps l2tun sessions\n# snmp-server traps l2tun tunnel-up\n# snmp-server traps l2tun tunnel-down\n# snmp-server traps bulkstat collection\n# snmp-server traps l2vpn all\n# snmp-server traps l2vpn vc-up\n# snmp-server traps l2vpn vc-down\n# snmp-server traps bridgemib\n# snmp-server traps addrpool low\n# snmp-server traps addrpool high\n# snmp-server traps cisco-entity-ext\n# snmp-server chassis-id test2\n# snmp-server contact t1\n# snmp-server location test1\n# snmp-server target list test host 1.1.1.2\n# snmp-server target list test2 vrf vrf2\n# snmp-server context c1\n# snmp-server context c2\n# snmp-server logging threshold oid-processing 1\n# snmp-server logging threshold pdu-processing 1\n# snmp-server mib bulkstat max-procmem-size 101\n# snmp-server timeouts duplicate 0\n# snmp-server timeouts inQdrop 0\n# snmp-server packetsize 490\n# snmp-server correlator buffer-size 1024\n# snmp-server trap-source GigabitEthernet0/0/0/2\n# snmp-server throttle-time 60\n# snmp-server community-map cm1 context c1 security-name s1 target-list t1\n# snmp-server inform retries 7\n# snmp-server overload-control 4 6\n# snmp-server ifmib internal cache max-duration 4\n# snmp-server mroutemib send-all-vrf\n# snmp-server notification-log-mib size 5\n# snmp-server notification-log-mib GlobalSize 5\n# Gathered play:\n# --------------\n- name: Gather listed snmp server\n  cisco.iosxr.iosxr_snmp_server:\n    state: gathered\n# Module Execution Result:\n# ------------------------\n# \"gathered\": {\n#         \"chassis_id\": \"test2\",\n#         \"communities\": [\n#             {\n#                 \"acl_v4\": \"test\",\n#                 \"acl_v6\": \"test1\",\n#                 \"name\": \"test2\",\n#                 \"ro\": true,\n#                 \"sdrowner\": true\n#             }\n#         ],\n#         \"community_maps\": [\n#             {\n#                 \"context\": \"c1\",\n#                 \"name\": \"cm1\",\n#                 \"security_name\": \"s1\",\n#                 \"target_list\": \"t1\"\n#             }\n#         ],\n#         \"contact\": \"t1\",\n#         \"context\": [\n#             \"c1\",\n#             \"c2\"\n#         ],\n#         \"correlator\": {\n#             \"buffer_size\": 1024\n#         },\n#         \"drop\": {\n#             \"report_IPv4\": \"test1\",\n#             \"unknown_user\": true\n#         },\n#         \"ifmib\": {\n#             \"internal_cache_max_duration\": 4\n#         },\n#         \"inform\": {\n#             \"retries\": 7\n#         },\n#         \"ipv4\": {\n#             \"dscp\": \"af11\"\n#         },\n#         \"ipv6\": {\n#             \"precedence\": \"routine\"\n#         },\n#         \"location\": \"test1\",\n#         \"logging_threshold_oid_processing\": 1,\n#         \"logging_threshold_pdu_processing\": 1,\n#         \"mib_bulkstat_max_procmem_size\": 101,\n#         \"mroutemib_send_all_vrf\": true,\n#         \"notification_log_mib\": {\n#             \"GlobalSize\": 5,\n#             \"size\": 5\n#         },\n#         \"overload_control\": {\n#             \"overload_drop_time\": 4,\n#             \"overload_throttle_rate\": 6\n#         },\n#         \"packetsize\": 490,\n#         \"queue_length\": 2,\n#         \"targets\": [\n#             {\n#                 \"host\": \"1.1.1.2\",\n#                 \"name\": \"test\"\n#             },\n#             {\n#                 \"name\": \"test2\",\n#                 \"vrf\": \"vrf2\"\n#             }\n#         ],\n#         \"throttle_time\": 60,\n#         \"timeouts\": {\n#             \"duplicate\": 0,\n#             \"inQdrop\": 0\n#         },\n#         \"trap\": {\n#             \"throttle_time\": 12\n#         },\n#         \"trap_source\": \"GigabitEthernet0/0/0/2\",\n#         \"trap_timeout\": 3,\n#         \"traps\": {\n#             \"addrpool\": {\n#                 \"high\": true,\n#                 \"low\": true\n#             },\n#             \"bfd\": true,\n#             \"bgp\": {\n#                 \"cbgp2\": true\n#             },\n#             \"bridgemib\": true,\n#             \"bulkstat_collection\": true,\n#             \"cisco_entity_ext\": true,\n#             \"config\": true,\n#             \"copy_complete\": true,\n#             \"hsrp\": true,\n#             \"ipsec\": {\n#                 \"start\": true,\n#                 \"stop\": true\n#             },\n#             \"ipsla\": true,\n#             \"l2tun\": {\n#                 \"sessions\": true,\n#                 \"tunnel_down\": true,\n#                 \"tunnel_up\": true\n#             },\n#             \"l2vpn\": {\n#                 \"all\": true,\n#                 \"vc_down\": true,\n#                 \"vc_up\": true\n#             },\n#             \"msdp_peer_state_change\": true\n#         },\n#         \"users\": [\n#             {\n#                 \"Ipv4_acl\": \"test1\",\n#                 \"Ipv6_acl\": \"test2\",\n#                 \"group\": \"test2\",\n#                 \"user\": \"u1\",\n#                 \"version\": \"v1\"\n#             }\n#         ],\n#         \"vrfs\": [\n#             {\n#                 \"hosts\": [\n#                     {\n#                         \"community\": \"test1\",\n#                         \"host\": \"1.1.1.1\",\n#                         \"traps\": true\n#                     }\n#                 ],\n#                 \"vrf\": \"vrf1\"\n#             }\n#         ]\n#     }\n#\n#\n# Using state: rendered\n# Rendered play:\n# --------------\n- name: Render platform specific configuration lines with state rendered (without connecting to the device)\n  cisco.iosxr.iosxr_snmp_server:\n    state: rendered\n    config:\n      vrfs:\n        - hosts:\n            - community: test1\n              host: 1.1.1.1\n              traps: true\n          vrf: vrf1\n      users:\n        - Ipv4_acl: test1\n          Ipv6_acl: test2\n          group: test2\n          user: u1\n          version: v1\n      timeouts:\n        duplicate: 0\n        inQdrop: 0\n      trap:\n        throttle_time: 12\n      targets:\n        - host: 1.1.1.2\n          name: test\n\n      ifmib:\n        internal_cache_max_duration: 4\n      inform:\n        retries: 7\n      chassis_id: test2\n      packetsize: 490\n      queue_length: 2\n      throttle_time: 60\n      trap_source: GigabitEthernet0/0/0/2\n      trap_timeout: 3\n      context:\n        - c1\n        - c2\n      contact: t1\n      correlator:\n        buffer_size: 1024\n      communities:\n        - name: test2\n          ro: true\n          sdrowner: true\n          acl_v4: test\n          acl_v6: test1\n      community_maps:\n        - name: cm1\n          context: c1\n          target_list: t1\n          security_name: s1\n      drop:\n        report_IPv4: test1\n        unknown_user: true\n      ipv6:\n        precedence: routine\n      ipv4:\n        dscp: af11\n      location: test1\n      logging_threshold_oid_processing: 1\n      logging_threshold_pdu_processing: 1\n      mib_bulkstat_max_procmem_size: 101\n      mroutemib_send_all_vrf: true\n      overload_control:\n        overload_drop_time: 4\n        overload_throttle_rate: 6\n      notification_log_mib:\n        GlobalSize: 5\n        size: 5\n      traps:\n        hsrp: true\n        ipsla: true\n        ipsec:\n          start: true\n          stop: true\n        bridgemib: true\n        bulkstat_collection: true\n        cisco_entity_ext: true\n        config: true\n        copy_complete: true\n        addrpool:\n          high: true\n          low: true\n        bfd: true\n        bgp:\n          cbgp2: true\n        l2tun:\n          sessions: true\n          tunnel_down: true\n          tunnel_up: true\n        l2vpn:\n          all: true\n          vc_down: true\n          vc_up: true\n        msdp_peer_state_change: true\n  register: result\n# Module Execution Result:\n# ------------------------\n# \"rendered\": [\n#         \"snmp-server chassis-id test2\",\n#         \"snmp-server correlator buffer-size 1024\",\n#         \"snmp-server contact t1\",\n#         \"snmp-server ipv4 dscp af11\",\n#         \"snmp-server ipv6 precedence routine\",\n#         \"snmp-server location test1\",\n#         \"snmp-server logging threshold oid-processing 1\",\n#         \"snmp-server logging threshold pdu-processing 1\",\n#         \"snmp-server mib bulkstat max-procmem-size 101\",\n#         \"snmp-server mroutemib send-all-vrf\",\n#         \"snmp-server overload-control 4 6\",\n#         \"snmp-server packetsize 490\",\n#         \"snmp-server queue-length 2\",\n#         \"snmp-server throttle-time 60\",\n#         \"snmp-server trap-source GigabitEthernet0/0/0/2\",\n#         \"snmp-server trap-timeout 3\",\n#         \"snmp-server drop report acl IPv4 test1\",\n#         \"snmp-server drop unknown-user\",\n#         \"snmp-server ifmib internal cache max-duration 4\",\n#         \"snmp-server inform retries 7\",\n#         \"snmp-server notification-log-mib size 5\",\n#         \"snmp-server notification-log-mib GlobalSize 5\",\n#         \"snmp-server trap throttle-time 12\",\n#         \"snmp-server timeouts inQdrop 0\",\n#         \"snmp-server timeouts duplicate 0\",\n#         \"snmp-server traps addrpool low\",\n#         \"snmp-server traps addrpool high\",\n#         \"snmp-server traps bfd\",\n#         \"snmp-server traps bgp cbgp2\",\n#         \"snmp-server traps bulkstat collection\",\n#         \"snmp-server traps bridgemib\",\n#         \"snmp-server traps copy-complete\",\n#         \"snmp-server traps cisco-entity-ext\",\n#         \"snmp-server traps config\",\n#         \"snmp-server traps hsrp\",\n#         \"snmp-server traps ipsla\",\n#         \"snmp-server traps ipsec tunnel start\",\n#         \"snmp-server traps ipsec tunnel stop\",\n#         \"snmp-server traps l2tun sessions\",\n#         \"snmp-server traps l2tun tunnel-up\",\n#         \"snmp-server traps l2tun tunnel-down\",\n#         \"snmp-server traps l2vpn all\",\n#         \"snmp-server traps l2vpn vc-up\",\n#         \"snmp-server traps l2vpn vc-down\",\n#         \"snmp-server traps msdp peer-state-change\",\n#         \"snmp-server community test2 RO SDROwner IPv4 test IPv6 test1\",\n#         \"snmp-server community-map cm1 context c1 security-name s1 target-list t1\",\n#         \"snmp-server context c1\",\n#         \"snmp-server context c2\",\n#         \"snmp-server user u1 test2 v1 IPv4 test1 IPv6 test2\",\n#         \"snmp-server target list test2 vrf vrf2\",\n#         \"snmp-server target list test host 1.1.1.2\",\n#         \"snmp-server vrf vrf1\",\n#         \"host 1.1.1.1 traps test1\"\n#     ],\n# Using state: parsed\n# File: parsed.cfg\n# ----------------\n# snmp-server vrf vrf1\n#  host 1.1.1.1 traps test1\n# !\n# snmp-server drop report acl IPv4 test1\n# snmp-server drop unknown-user\n# snmp-server ipv4 dscp af11\n# snmp-server ipv6 precedence routine\n# snmp-server user u1 test2 v1 IPv4 test1 IPv6 test2\n# snmp-server community test2 RO SDROwner IPv4 test IPv6 test1\n# snmp-server queue-length 2\n# snmp-server trap-timeout 3\n# snmp-server trap throttle-time 12\n# snmp-server traps bfd\n# snmp-server traps bgp cbgp2\n# snmp-server traps copy-complete\n# snmp-server traps hsrp\n# snmp-server traps ipsla\n# snmp-server traps msdp peer-state-change\n# snmp-server traps ipsec tunnel stop\n# snmp-server traps ipsec tunnel start\n# snmp-server traps config\n# snmp-server traps l2tun sessions\n# snmp-server traps l2tun tunnel-up\n# snmp-server traps l2tun tunnel-down\n# snmp-server traps bulkstat collection\n# snmp-server traps l2vpn all\n# snmp-server traps l2vpn vc-up\n# snmp-server traps l2vpn vc-down\n# snmp-server traps bridgemib\n# snmp-server traps addrpool low\n# snmp-server traps addrpool high\n# snmp-server traps cisco-entity-ext\n# snmp-server chassis-id test2\n# snmp-server contact t1\n# snmp-server location test1\n# snmp-server target list test host 1.1.1.2\n# snmp-server target list test2 vrf vrf2\n# snmp-server context c1\n# snmp-server context c2\n# snmp-server logging threshold oid-processing 1\n# snmp-server logging threshold pdu-processing 1\n# snmp-server mib bulkstat max-procmem-size 101\n# snmp-server timeouts duplicate 0\n# snmp-server timeouts inQdrop 0\n# snmp-server packetsize 490\n# snmp-server correlator buffer-size 1024\n# snmp-server trap-source GigabitEthernet0/0/0/2\n# snmp-server throttle-time 60\n# snmp-server community-map cm1 context c1 security-name s1 target-list t1\n# snmp-server inform retries 7\n# snmp-server overload-control 4 6\n# snmp-server ifmib internal cache max-duration 4\n# snmp-server mroutemib send-all-vrf\n# snmp-server notification-log-mib size 5\n# snmp-server notification-log-mib GlobalSize 5\n# ------------\n- name: Parse the provided configuration with the existing running configuration\n  cisco.iosxr.iosxr_snmp_server:\n    running_config: \"{{ lookup('file', 'parsed.cfg') }}\"\n    state: parsed\n# Module Execution Result:\n# ------------------------\n# \"parsed\":{\n#         \"chassis_id\": \"test2\",\n#         \"communities\": [\n#             {\n#                 \"acl_v4\": \"test\",\n#                 \"acl_v6\": \"test1\",\n#                 \"name\": \"test2\",\n#                 \"ro\": true,\n#                 \"sdrowner\": true\n#             }\n#         ],\n#         \"community_maps\": [\n#             {\n#                 \"context\": \"c1\",\n#                 \"name\": \"cm1\",\n#                 \"security_name\": \"s1\",\n#                 \"target_list\": \"t1\"\n#             }\n#         ],\n#         \"contact\": \"t1\",\n#         \"context\": [\n#             \"c1\",\n#             \"c2\"\n#         ],\n#         \"correlator\": {\n#             \"buffer_size\": 1024\n#         },\n#         \"drop\": {\n#             \"report_IPv4\": \"test1\",\n#             \"unknown_user\": true\n#         },\n#         \"ifmib\": {\n#             \"internal_cache_max_duration\": 4\n#         },\n#         \"inform\": {\n#             \"retries\": 7\n#         },\n#         \"ipv4\": {\n#             \"dscp\": \"af11\"\n#         },\n#         \"ipv6\": {\n#             \"precedence\": \"routine\"\n#         },\n#         \"location\": \"test1\",\n#         \"logging_threshold_oid_processing\": 1,\n#         \"logging_threshold_pdu_processing\": 1,\n#         \"mib_bulkstat_max_procmem_size\": 101,\n#         \"mroutemib_send_all_vrf\": true,\n#         \"notification_log_mib\": {\n#             \"GlobalSize\": 5,\n#             \"size\": 5\n#         },\n#         \"overload_control\": {\n#             \"overload_drop_time\": 4,\n#             \"overload_throttle_rate\": 6\n#         },\n#         \"packetsize\": 490,\n#         \"queue_length\": 2,\n#         \"targets\": [\n#             {\n#                 \"host\": \"1.1.1.2\",\n#                 \"name\": \"test\"\n#             },\n#             {\n#                 \"name\": \"test2\",\n#                 \"vrf\": \"vrf2\"\n#             }\n#         ],\n#         \"throttle_time\": 60,\n#         \"timeouts\": {\n#             \"duplicate\": 0,\n#             \"inQdrop\": 0\n#         },\n#         \"trap\": {\n#             \"throttle_time\": 12\n#         },\n#         \"trap_source\": \"GigabitEthernet0/0/0/2\",\n#         \"trap_timeout\": 3,\n#         \"traps\": {\n#             \"addrpool\": {\n#                 \"high\": true,\n#                 \"low\": true\n#             },\n#             \"bfd\": true,\n#             \"bgp\": {\n#                 \"cbgp2\": true\n#             },\n#             \"bridgemib\": true,\n#             \"bulkstat_collection\": true,\n#             \"cisco_entity_ext\": true,\n#             \"config\": true,\n#             \"copy_complete\": true,\n#             \"hsrp\": true,\n#             \"ipsec\": {\n#                 \"start\": true,\n#                 \"stop\": true\n#             },\n#             \"ipsla\": true,\n#             \"l2tun\": {\n#                 \"sessions\": true,\n#                 \"tunnel_down\": true,\n#                 \"tunnel_up\": true\n#             },\n#             \"l2vpn\": {\n#                 \"all\": true,\n#                 \"vc_down\": true,\n#                 \"vc_up\": true\n#             },\n#             \"msdp_peer_state_change\": true\n#         },\n#         \"users\": [\n#             {\n#                 \"Ipv4_acl\": \"test1\",\n#                 \"Ipv6_acl\": \"test2\",\n#                 \"group\": \"test2\",\n#                 \"user\": \"u1\",\n#                 \"version\": \"v1\"\n#             }\n#         ],\n#         \"vrfs\": [\n#             {\n#                 \"hosts\": [\n#                     {\n#                         \"community\": \"test1\",\n#                         \"host\": \"1.1.1.1\",\n#                         \"traps\": true\n#                     }\n#                 ],\n#                 \"vrf\": \"vrf1\"\n#             }\n#         ]\n#     }\n"
  },
  "cisco.iosxr.iosxr_static_routes": {
    "doc": {
      "description": "This module manages static routes on devices running Cisco IOS-XR.",
      "has_action": true,
      "options": {
        "config": {
          "aliases": [],
          "description": "A dictionary of static route options.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "address_families": {
              "aliases": [],
              "description": "A dictionary specifying the address family to which the static route(s) belong.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "afi": {
                  "aliases": [],
                  "description": "Specifies the top level address family indicator.",
                  "type": "str",
                  "required": true,
                  "choices": [
                    "ipv4",
                    "ipv6"
                  ],
                  "suboptions": {}
                },
                "routes": {
                  "aliases": [],
                  "description": "A dictionary that specifies the static route configurations.",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "dest": {
                      "aliases": [],
                      "description": "An IPv4 or IPv6 address in CIDR notation that specifies the destination network for the static route.",
                      "type": "str",
                      "required": true,
                      "suboptions": {}
                    },
                    "next_hops": {
                      "aliases": [],
                      "description": "Next hops to the specified destination.",
                      "type": "list",
                      "required": false,
                      "elements": "dict",
                      "suboptions": {
                        "admin_distance": {
                          "aliases": [],
                          "description": "The administrative distance for this static route.\nRefer to vendor documentation for valid values.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "description": {
                          "aliases": [],
                          "description": "Specifies the description for this static route.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "dest_vrf": {
                          "aliases": [],
                          "description": "The destination VRF.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "forward_router_address": {
                          "aliases": [],
                          "description": "The IP address of the next hop that can be used to reach the destination network.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "interface": {
                          "aliases": [],
                          "description": "The interface to use to reach the destination.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "metric": {
                          "aliases": [],
                          "description": "Specifes the metric for this static route.\nRefer to vendor documentation for valid values.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "tag": {
                          "aliases": [],
                          "description": "Specifies a numeric tag for this static route.\nRefer to vendor documentation for valid values.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "track": {
                          "aliases": [],
                          "description": "Specifies the object to be tracked.\nThis enables object tracking for static routes.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "tunnel_id": {
                          "aliases": [],
                          "description": "Specifies a tunnel id for the route.\nRefer to vendor documentation for valid values.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "vrflabel": {
                          "aliases": [],
                          "description": "Specifies the VRF label for this static route.\nRefer to vendor documentation for valid values.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    }
                  }
                },
                "safi": {
                  "aliases": [],
                  "description": "Specifies the subsequent address family indicator.",
                  "type": "str",
                  "required": true,
                  "choices": [
                    "unicast",
                    "multicast"
                  ],
                  "suboptions": {}
                }
              }
            },
            "vrf": {
              "aliases": [],
              "description": "The VRF to which the static route(s) belong.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "running_config": {
          "aliases": [],
          "description": "This option is used only with state I(parsed).\nThe value of this option should be the output received from the IOS-XR device by executing the command B(show running-config router static).\nThe state I(parsed) reads the configuration from C(running_config) option and transforms it into Ansible structured data as per the resource module's argspec and the value is then returned in the I(parsed) key within the result.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The state the configuration should be left in.",
          "default": "merged",
          "type": "str",
          "required": false,
          "choices": [
            "merged",
            "replaced",
            "overridden",
            "deleted",
            "gathered",
            "rendered",
            "parsed"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Static routes resource module",
      "version_added": "1.0.0"
    },
    "examples": "\n\n# Using merged\n\n# Before state\n# -------------\n# RP/0/RP0/CPU0:ios#show running-config router static\n# Sat Feb 22 07:46:30.089 UTC\n# % No such configuration item(s)\n#\n- name: Merge the provided configuration with the existing running configuration\n  cisco.iosxr.iosxr_static_routes:\n    config:\n    - address_families:\n      - afi: ipv4\n        safi: unicast\n        routes:\n        - dest: 192.0.2.16/28\n          next_hops:\n          - forward_router_address: 192.0.2.10\n            interface: FastEthernet0/0/0/1\n            description: LAB\n            metric: 120\n            tag: 10\n\n          - interface: FastEthernet0/0/0/5\n            track: ip_sla_1\n\n        - dest: 192.0.2.32/28\n          next_hops:\n          - forward_router_address: 192.0.2.11\n            admin_distance: 100\n\n      - afi: ipv6\n        safi: unicast\n        routes:\n        - dest: 2001:db8:1000::/36\n          next_hops:\n          - interface: FastEthernet0/0/0/7\n            description: DC\n\n          - interface: FastEthernet0/0/0/8\n            forward_router_address: 2001:db8:2000:2::1\n\n    - vrf: DEV_SITE\n      address_families:\n      - afi: ipv4\n        safi: unicast\n        routes:\n        - dest: 192.0.2.48/28\n          next_hops:\n          - forward_router_address: 192.0.2.12\n            description: DEV\n            dest_vrf: test_1\n\n        - dest: 192.0.2.80/28\n          next_hops:\n          - interface: FastEthernet0/0/0/2\n            forward_router_address: 192.0.2.14\n            dest_vrf: test_1\n            track: ip_sla_2\n            vrflabel: 124\n    state: merged\n\n# After state\n# -------------\n# RP/0/RP0/CPU0:ios#show running-config router static\n# Sat Feb 22 07:49:11.754 UTC\n# router static\n#  address-family ipv4 unicast\n#   192.0.2.16/28 FastEthernet0/0/0/1 192.0.2.10 tag 10 description LAB metric 120\n#   192.0.2.16/28 FastEthernet0/0/0/5 track ip_sla_1\n#   192.0.2.32/28 192.0.2.11 100\n#  !\n#  address-family ipv6 unicast\n#   2001:db8:1000::/36 FastEthernet0/0/0/7 description DC\n#   2001:db8:1000::/36 FastEthernet0/0/0/8 2001:db8:2000:2::1\n#  !\n#  vrf DEV_SITE\n#   address-family ipv4 unicast\n#    192.0.2.48/28 vrf test_1 192.0.2.12 description DEV\n#    192.0.2.80/28 vrf test_1 FastEthernet0/0/0/2 192.0.2.14 vrflabel 124 track ip_sla_2\n#   !\n#  !\n# !\n\n# Using merged to update existing static routes\n\n# Before state\n# -------------\n# RP/0/RP0/CPU0:ios#show running-config router static\n# Sat Feb 22 07:49:11.754 UTC\n# router static\n#  address-family ipv4 unicast\n#   192.0.2.16/28 FastEthernet0/0/0/1 192.0.2.10 tag 10 description LAB metric 120\n#   192.0.2.16/28 FastEthernet0/0/0/5 track ip_sla_1\n#   192.0.2.32/28 192.0.2.11 100\n#  !\n#  address-family ipv6 unicast\n#   2001:db8:1000::/36 FastEthernet0/0/0/7 description DC\n#   2001:db8:1000::/36 FastEthernet0/0/0/8 2001:db8:2000:2::1\n#  !\n#  vrf DEV_SITE\n#   address-family ipv4 unicast\n#    192.0.2.48/28 vrf test_1 192.0.2.12 description DEV\n#    192.0.2.80/28 vrf test_1 FastEthernet0/0/0/2 192.0.2.14 vrflabel 124 track ip_sla_2\n#   !\n#  !\n# !\n\n- name: Update existing static routes configuration using merged\n  cisco.iosxr.iosxr_static_routes:\n    config:\n    - vrf: DEV_SITE\n      address_families:\n      - afi: ipv4\n        safi: unicast\n        routes:\n        - dest: 192.0.2.48/28\n          next_hops:\n          - forward_router_address: 192.0.2.12\n            vrflabel: 2301\n            dest_vrf: test_1\n\n        - dest: 192.0.2.80/28\n          next_hops:\n          - interface: FastEthernet0/0/0/2\n            forward_router_address: 192.0.2.14\n            dest_vrf: test_1\n            description: rt_test_1\n    state: merged\n\n# After state\n# -------------\n# RP/0/RP0/CPU0:ios#show running-config router static\n# Sat Feb 22 07:49:11.754 UTC\n# router static\n#  address-family ipv4 unicast\n#   192.0.2.16/28 FastEthernet0/0/0/1 192.0.2.10 tag 10 description LAB metric 120\n#   192.0.2.16/28 FastEthernet0/0/0/5 track ip_sla_1\n#   192.0.2.32/28 192.0.2.11 100\n#  !\n#  address-family ipv6 unicast\n#   2001:db8:1000::/36 FastEthernet0/0/0/7 description DC\n#   2001:db8:1000::/36 FastEthernet0/0/0/8 2001:db8:2000:2::1\n#  !\n#  vrf DEV_SITE\n#   address-family ipv4 unicast\n#    192.0.2.48/28 vrf test_1 192.0.2.12 description DEV vrflabel 2301\n#    192.0.2.80/28 vrf test_1 192.0.2.14 FastEthernet0/0/0/2 description rt_test_1 track ip_sla_2 vrflabel 124\n#   !\n#  !\n# !\n\n# Using replaced to replace all next hop entries for a single destination network\n\n# Before state\n# --------------\n\n# RP/0/RP0/CPU0:ios#sh running-config router static\n# Sat Feb 22 07:59:08.669 UTC\n# router static\n#  address-family ipv4 unicast\n#   192.0.2.16/28 FastEthernet0/0/0/1 192.0.2.10 tag 10 description LAB metric 120\n#   192.0.2.16/28 FastEthernet0/0/0/5 track ip_sla_1\n#   192.0.2.32/28 192.0.2.11 100\n#  !\n#  address-family ipv6 unicast\n#   2001:db8:1000::/36 FastEthernet0/0/0/7 description DC\n#   2001:db8:1000::/36 FastEthernet0/0/0/8 2001:db8:2000:2::1\n#  !\n#  vrf DEV_SITE\n#   address-family ipv4 unicast\n#    192.0.2.48/28 vrf test_1 192.0.2.12 description DEV\n#    192.0.2.48/28 GigabitEthernet0/0/0/1 192.0.3.24 vrflabel 2302\n#    192.0.2.80/28 vrf test_1 FastEthernet0/0/0/2 192.0.2.14 vrflabel 124 track ip_sla_2\n#   !\n#  !\n# !\n\n- name: Replace device configurations of static routes with provided configurations\n  cisco.iosxr.iosxr_static_routes:\n    config:\n    - vrf: DEV_SITE\n      address_families:\n      - afi: ipv4\n        safi: unicast\n        routes:\n        - dest: 192.0.2.48/28\n          next_hops:\n          - forward_router_address: 192.0.2.15\n            interface: FastEthernet0/0/0/3\n            description: DEV_NEW\n            dest_vrf: dev_test_2\n    state: replaced\n\n# After state\n# ------------\n# RP/0/RP0/CPU0:ios#sh running-config router static\n# Sat Feb 22 08:04:07.085 UTC\n# router static\n#  address-family ipv4 unicast\n#   192.0.2.16/28 FastEthernet0/0/0/1 192.0.2.10 tag 10 description LAB metric 120\n#   192.0.2.16/28 FastEthernet0/0/0/5 track ip_sla_1\n#   192.0.2.32/28 192.0.2.11 100\n#  !\n#  address-family ipv6 unicast\n#   2001:db8:1000::/36 FastEthernet0/0/0/7 description DC\n#   2001:db8:1000::/36 FastEthernet0/0/0/8 2001:db8:2000:2::1\n#  !\n#  vrf DEV_SITE\n#   address-family ipv4 unicast\n#    192.0.2.48/28 vrf dev_test_2 FastEthernet0/0/0/3 192.0.2.15 description DEV_NEW\n#    192.0.2.80/28 vrf test_1 FastEthernet0/0/0/2 192.0.2.14 vrflabel 124 track ip_sla_2\n#   !\n#  !\n# !\n\n# Using overridden to override all static route entries on the device\n\n# Before state\n# -------------\n# RP/0/RP0/CPU0:ios#sh running-config router static\n# Sat Feb 22 07:59:08.669 UTC\n# router static\n#  address-family ipv4 unicast\n#   192.0.2.16/28 FastEthernet0/0/0/1 192.0.2.10 tag 10 description LAB metric 120\n#   192.0.2.16/28 FastEthernet0/0/0/5 track ip_sla_1\n#   192.0.2.32/28 192.0.2.11 100\n#  !\n#  address-family ipv6 unicast\n#   2001:db8:1000::/36 FastEthernet0/0/0/7 description DC\n#   2001:db8:1000::/36 FastEthernet0/0/0/8 2001:db8:2000:2::1\n#  !\n#  vrf DEV_SITE\n#   address-family ipv4 unicast\n#    192.0.2.48/28 vrf test_1 192.0.2.12 description DEV\n#    192.0.2.48/28 GigabitEthernet0/0/0/1 192.0.3.24 vrflabel 2302\n#    192.0.2.80/28 vrf test_1 FastEthernet0/0/0/2 192.0.2.14 vrflabel 124 track ip_sla_2\n#   !\n#  !\n# !\n\n- name: Overridde all static routes configuration with provided configuration\n  cisco.iosxr.iosxr_static_routes:\n    config:\n    - vrf: DEV_NEW\n      address_families:\n      - afi: ipv4\n        safi: unicast\n        routes:\n        - dest: 192.0.2.48/28\n          next_hops:\n          - forward_router_address: 192.0.2.15\n            interface: FastEthernet0/0/0/3\n            description: DEV1\n      - afi: ipv6\n        safi: unicast\n        routes:\n        - dest: 2001:db8:3000::/36\n          next_hops:\n          - interface: FastEthernet0/0/0/4\n            forward_router_address: 2001:db8:2000:2::2\n            description: PROD1\n            track: ip_sla_1\n    state: overridden\n\n# After state\n# -------------\n# RP/0/RP0/CPU0:ios#sh running-config router static\n# Sat Feb 22 08:07:41.516 UTC\n# router static\n#  vrf DEV_NEW\n#   address-family ipv4 unicast\n#    192.0.2.48/28 FastEthernet0/0/0/3 192.0.2.15 description DEV1\n#   !\n#   address-family ipv6 unicast\n#    2001:db8:3000::/36 FastEthernet0/0/0/4 2001:db8:2000:2::2 description PROD1 track ip_sla_1\n#   !\n#  !\n# !\n\n# Using deleted to delete all destination network entries under a single AFI\n\n# Before state\n# -------------\n# RP/0/RP0/CPU0:ios#sh running-config router static\n# Sat Feb 22 07:59:08.669 UTC\n# router static\n#  address-family ipv4 unicast\n#   192.0.2.16/28 FastEthernet0/0/0/1 192.0.2.10 tag 10 description LAB metric 120\n#   192.0.2.16/28 FastEthernet0/0/0/5 track ip_sla_1\n#   192.0.2.32/28 192.0.2.11 100\n#  !\n#  address-family ipv6 unicast\n#   2001:db8:1000::/36 FastEthernet0/0/0/7 description DC\n#   2001:db8:1000::/36 FastEthernet0/0/0/8 2001:db8:2000:2::1\n#  !\n#  vrf DEV_SITE\n#   address-family ipv4 unicast\n#    192.0.2.48/28 vrf test_1 192.0.2.12 description DEV\n#    192.0.2.48/28 GigabitEthernet0/0/0/1 192.0.3.24 vrflabel 2302\n#    192.0.2.80/28 vrf test_1 FastEthernet0/0/0/2 192.0.2.14 vrflabel 124 track ip_sla_2\n#   !\n#  !\n# !\n\n- name: Delete all destination network entries under a single AFI\n  cisco.iosxr.iosxr_static_routes:\n    config:\n    - vrf: DEV_SITE\n      address_families:\n      - afi: ipv4\n        safi: unicast\n    state: deleted\n\n# After state\n# ------------\n\n# RP/0/RP0/CPU0:ios#sh running-config router static\n# Sat Feb 22 08:16:41.464 UTC\n# router static\n#  address-family ipv4 unicast\n#   192.0.2.16/28 FastEthernet0/0/0/1 192.0.2.10 tag 10 description LAB metric 120\n#   192.0.2.16/28 FastEthernet0/0/0/5 track ip_sla_1\n#   192.0.2.32/28 192.0.2.11 100\n#  !\n#  address-family ipv6 unicast\n#   2001:db8:1000::/36 FastEthernet0/0/0/7 description DC\n#   2001:db8:1000::/36 FastEthernet0/0/0/8 2001:db8:2000:2::1\n#  !\n#  vrf DEV_SITE\n#  !\n# !\n\n# Using deleted to remove all static route entries from the device\n\n# Before state\n# -------------\n# RP/0/RP0/CPU0:ios#sh running-config router static\n# Sat Feb 22 07:59:08.669 UTC\n# router static\n#  address-family ipv4 unicast\n#   192.0.2.16/28 FastEthernet0/0/0/1 192.0.2.10 tag 10 description LAB metric 120\n#   192.0.2.16/28 FastEthernet0/0/0/5 track ip_sla_1\n#   192.0.2.32/28 192.0.2.11 100\n#  !\n#  address-family ipv6 unicast\n#   2001:db8:1000::/36 FastEthernet0/0/0/7 description DC\n#   2001:db8:1000::/36 FastEthernet0/0/0/8 2001:db8:2000:2::1\n#  !\n#  vrf DEV_SITE\n#   address-family ipv4 unicast\n#    192.0.2.48/28 vrf test_1 192.0.2.12 description DEV\n#    192.0.2.48/28 GigabitEthernet0/0/0/1 192.0.3.24 vrflabel 2302\n#    192.0.2.80/28 vrf test_1 FastEthernet0/0/0/2 192.0.2.14 vrflabel 124 track ip_sla_2\n#   !\n#  !\n# !\n\n- name: Delete static routes configuration\n  cisco.iosxr.iosxr_static_routes:\n    state: deleted\n\n# After state\n# ------------\n# RP/0/RP0/CPU0:ios#sh running-config router static\n# Sat Feb 22 08:50:43.038 UTC\n# % No such configuration item(s)\n\n# Using gathered to gather static route facts from the device\n\n- name: Gather static routes facts from the device using iosxr_static_routes module\n  cisco.iosxr.iosxr_static_routes:\n    state: gathered\n\n# Task output (redacted)\n# -----------------------\n# \"gathered\": [\n#    {\n#        \"address_families\": [\n#            {\n#                \"afi\": \"ipv4\",\n#                \"routes\": [\n#                    {\n#                        \"dest\": \"192.0.2.16/28\",\n#                        \"next_hops\": [\n#                            {\n#                                \"description\": \"LAB\",\n#                                \"forward_router_address\": \"192.0.2.10\",\n#                                \"interface\": \"FastEthernet0/0/0/1\",\n#                                \"metric\": 120,\n#                                \"tag\": 10\n#                            },\n#                            {\n#                                \"interface\": \"FastEthernet0/0/0/5\",\n#                                \"track\": \"ip_sla_1\"\n#                            }\n#                        ]\n#                    },\n#                    {\n#                        \"dest\": \"192.0.2.32/28\",\n#                        \"next_hops\": [\n#                            {\n#                                \"admin_distance\": 100,\n#                                \"forward_router_address\": \"192.0.2.11\"\n#                            }\n#                        ]\n#                    }\n#                ],\n#                \"safi\": \"unicast\"\n#            },\n#            {\n#                \"afi\": \"ipv6\",\n#                \"routes\": [\n#                    {\n#                        \"dest\": \"2001:db8:1000::/36\",\n#                        \"next_hops\": [\n#                            {\n#                                \"description\": \"DC\",\n#                                \"interface\": \"FastEthernet0/0/0/7\"\n#                            },\n#                            {\n#                                \"forward_router_address\": \"2001:db8:2000:2::1\",\n#                                \"interface\": \"FastEthernet0/0/0/8\"\n#                            }\n#                        ]\n#                    }\n#                ],\n#                \"safi\": \"unicast\"\n#            }\n#        ]\n#    },\n#    {\n#        \"address_families\": [\n#            {\n#                \"afi\": \"ipv4\",\n#                \"routes\": [\n#                    {\n#                        \"dest\": \"192.0.2.48/28\",\n#                        \"next_hops\": [\n#                            {\n#                                \"description\": \"DEV\",\n#                                \"dest_vrf\": \"test_1\",\n#                                \"forward_router_address\": \"192.0.2.12\"\n#                            },\n#                            {\n#                                \"forward_router_address\": \"192.0.3.24\",\n#                                \"interface\": \"GigabitEthernet0/0/0/1\",\n#                                \"vrflabel\": 2302\n#                            }\n#                        ]\n#                    },\n#                    {\n#                        \"dest\": \"192.0.2.80/28\",\n#                        \"next_hops\": [\n#                            {\n#                                \"dest_vrf\": \"test_1\",\n#                                \"forward_router_address\": \"192.0.2.14\",\n#                                \"interface\": \"FastEthernet0/0/0/2\",\n#                                \"track\": \"ip_sla_2\",\n#                                \"vrflabel\": 124\n#                            }\n#                        ]\n#                    }\n#                ],\n#                \"safi\": \"unicast\"\n#            }\n#        ],\n#        \"vrf\": \"DEV_SITE\"\n#    }\n#  ]\n\n# Using rendered\n\n- name: Render platform specific commands (without connecting to the device)\n  cisco.iosxr.iosxr_static_routes:\n  config:\n  - vrf: DEV_SITE\n    address_families:\n    - afi: ipv4\n      safi: unicast\n      routes:\n      - dest: 192.0.2.48/28\n        next_hops:\n        - forward_router_address: 192.0.2.12\n          description: DEV\n          dest_vrf: test_1\n\n      - dest: 192.0.2.80/28\n        next_hops:\n        - interface: FastEthernet0/0/0/2\n          forward_router_address: 192.0.2.14\n          dest_vrf: test_1\n          track: ip_sla_2\n          vrflabel: 124\n\n# Task Output (redacted)\n# -----------------------\n# \"rendered\": [\n#    \"router static\"s,\n#    \"vrf DEV_SITE\",\n#    \"address-family ipv4 unicast\",\n#    \"192.0.2.48/28 vrf test_1 192.0.2.12 description DEV\",\n#    \"192.0.2.80/28 vrf test_1 192.0.2.14 FastEthernet0/0/0/2 track ip_sla_2 vrflabel 124\"\n\n# Using parsed\n\n# parsed.cfg\n# ------------\n# Fri Nov 29 21:10:41.896 UTC\n# router static\n#  address-family ipv4 unicast\n#   192.0.2.16/28 FastEthernet0/0/0/1 192.0.2.10 tag 10 description LAB metric 120\n#   192.0.2.16/28 FastEthernet0/0/0/5 track ip_sla_1\n#   192.0.2.32/28 192.0.2.11 100\n#  !\n#  address-family ipv6 unicast\n#   2001:db8:1000::/36 FastEthernet0/0/0/7 description DC\n#   2001:db8:1000::/36 FastEthernet0/0/0/8 2001:db8:2000:2::1\n#  !\n#  vrf DEV_SITE\n#   address-family ipv4 unicast\n#    192.0.2.48/28 vrf test_1 192.0.2.12 description DEV\n#    192.0.2.80/28 vrf test_1 FastEthernet0/0/0/2 192.0.2.14 vrflabel 124 track ip_sla_2\n#   !\n#  !\n# !\n\n- name: Use parsed state to convert externally supplied device specific static routes\n    commands to structured format\n  cisco.iosxr.iosxr_static_routes:\n    running_config: \"{{ lookup('file', '../../fixtures/parsed.cfg') }}\"\n    state: parsed\n\n# Task output (redacted)\n# -----------------------\n# \"parsed\": [\n#        {\n#            \"address_families\": [\n#                {\n#                    \"afi\": \"ipv4\",\n#                    \"routes\": [\n#                        {\n#                            \"dest\": \"192.0.2.16/28\",\n#                            \"next_hops\": [\n#                                {\n#                                    \"description\": \"LAB\",\n#                                    \"forward_router_address\": \"192.0.2.10\",\n#                                    \"interface\": \"FastEthernet0/0/0/1\",\n#                                    \"metric\": 120,\n#                                    \"tag\": 10\n#                                },\n#                                {\n#                                    \"interface\": \"FastEthernet0/0/0/5\",\n#                                    \"track\": \"ip_sla_1\"\n#                                }\n#                            ]\n#                        },\n#                        {\n#                            \"dest\": \"192.0.2.32/28\",\n#                            \"next_hops\": [\n#                                {\n#                                    \"admin_distance\": 100,\n#                                    \"forward_router_address\": \"192.0.2.11\"\n#                                }\n#                            ]\n#                        }\n#                    ],\n#                    \"safi\": \"unicast\"\n#                },\n#                {\n#                    \"afi\": \"ipv6\",\n#                    \"routes\": [\n#                        {\n#                            \"dest\": \"2001:db8:1000::/36\",\n#                            \"next_hops\": [\n#                                {\n#                                    \"description\": \"DC\",\n#                                    \"interface\": \"FastEthernet0/0/0/7\"\n#                                },\n#                                {\n#                                    \"forward_router_address\": \"2001:db8:2000:2::1\",\n#                                    \"interface\": \"FastEthernet0/0/0/8\"\n#                                }\n#                            ]\n#                        }\n#                    ],\n#                    \"safi\": \"unicast\"\n#                }\n#            ]\n#        },\n#        {\n#            \"address_families\": [\n#                {\n#                    \"afi\": \"ipv4\",\n#                    \"routes\": [\n#                        {\n#                            \"dest\": \"192.0.2.48/28\",\n#                            \"next_hops\": [\n#                                {\n#                                    \"description\": \"DEV\",\n#                                    \"dest_vrf\": \"test_1\",\n#                                    \"forward_router_address\": \"192.0.2.12\"\n#                                }\n#                            ]\n#                        },\n#                        {\n#                            \"dest\": \"192.0.2.80/28\",\n#                            \"next_hops\": [\n#                                {\n#                                    \"dest_vrf\": \"test_1\",\n#                                    \"forward_router_address\": \"192.0.2.14\",\n#                                    \"interface\": \"FastEthernet0/0/0/2\",\n#                                    \"track\": \"ip_sla_2\",\n#                                    \"vrflabel\": 124\n#                                }\n#                            ]\n#                        }\n#                    ],\n#                    \"safi\": \"unicast\"\n#                }\n#            ],\n#            \"vrf\": \"DEV_SITE\"\n#        }\n#    ]\n# }\n"
  },
  "cisco.iosxr.iosxr_system": {
    "doc": {
      "description": "This module provides declarative management of node system attributes on Cisco IOS XR devices. It provides an option to configure host system parameters or remove those parameters from the device active configuration.",
      "has_action": true,
      "notes": "This module works with connection C(network_cli) and C(netconf). See L(the IOS-XR Platform Options,../network/user_guide/platform_iosxr.html).\nname-servers I(state=absent) operation with C(netconf) transport is a success, but with rpc-error. This is due to XR platform issue. Recommended to use I(ignore_errors) option with the task as a workaround.\nFor more information on using Ansible to manage network devices see the :ref:`Ansible Network Guide <network_guide>`\nFor more information on using Ansible to manage Cisco devices see the `Cisco integration page <https://www.ansible.com/integrations/networks/cisco>`_.",
      "options": {
        "domain_name": {
          "aliases": [],
          "description": "Configure the IP domain name on the remote device to the provided value. Value should be in the dotted name form and will be appended to the C(hostname) to create a fully-qualified domain name.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "domain_search": {
          "aliases": [],
          "description": "Provides the list of domain suffixes to append to the hostname for the purpose of doing name resolution. This argument accepts a list of names and will be reconciled with the current active configuration on the running node.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "hostname": {
          "aliases": [],
          "description": "Configure the device hostname parameter. This option takes an ASCII string value.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "lookup_enabled": {
          "aliases": [],
          "description": "Provides administrative control for enabling or disabling DNS lookups.  When this argument is set to True, lookups are performed and when it is set to False, lookups are not performed.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "lookup_source": {
          "aliases": [],
          "description": "The C(lookup_source) argument provides one or more source interfaces to use for performing DNS lookups.  The interface provided in C(lookup_source) must be a valid interface configured on the device.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name_servers": {
          "aliases": [],
          "description": "The C(name_serves) argument accepts a list of DNS name servers by way of either FQDN or IP address to use to perform name resolution lookups.  This argument accepts wither a list of DNS servers See examples.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "B(Deprecated)\nStarting with Ansible 2.5 we recommend using C(connection: network_cli).\nFor more information please see the L(Network Guide, ../network/getting_started/network_differences.html#multiple-communication-protocols).\nHORIZONTALLINE\nA dict object containing connection details.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "host": {
              "aliases": [],
              "description": "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [],
              "description": "Specifies the password to use to authenticate the connection to the remote device.   This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "port": {
              "aliases": [],
              "description": "Specifies the port to use when building the connection to the remote device.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "ssh_keyfile": {
              "aliases": [],
              "description": "Specifies the SSH key to use to authenticate the connection to the remote device.   This value is the path to the key used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead.",
              "type": "path",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Specifies the type of connection based transport.",
              "default": "cli",
              "type": "str",
              "required": false,
              "choices": [
                "cli",
                "netconf"
              ],
              "suboptions": {}
            },
            "username": {
              "aliases": [],
              "description": "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "State of the configuration values in the device's current active configuration.  When set to I(present), the values should be configured in the device active configuration and when set to I(absent) the values should not be in the device active configuration",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "vrf": {
          "aliases": [],
          "description": "VRF name for domain services",
          "default": "default",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "ncclient >= 0.5.3 when using netconf",
        "lxml >= 4.1.1 when using netconf"
      ],
      "short_description": "Manage the system attributes on Cisco IOS XR devices",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: configure hostname and domain-name (default vrf=default)\n  cisco.iosxr.iosxr_system:\n    hostname: iosxr01\n    domain_name: test.example.com\n    domain_search:\n    - ansible.com\n    - redhat.com\n    - cisco.com\n- name: remove configuration\n  cisco.iosxr.iosxr_system:\n    hostname: iosxr01\n    domain_name: test.example.com\n    domain_search:\n    - ansible.com\n    - redhat.com\n    - cisco.com\n    state: absent\n- name: configure hostname and domain-name with vrf\n  cisco.iosxr.iosxr_system:\n    hostname: iosxr01\n    vrf: nondefault\n    domain_name: test.example.com\n    domain_search:\n    - ansible.com\n    - redhat.com\n    - cisco.com\n- name: configure DNS lookup sources\n  cisco.iosxr.iosxr_system:\n    lookup_source: MgmtEth0/0/CPU0/0\n    lookup_enabled: true\n- name: configure name servers\n  cisco.iosxr.iosxr_system:\n    name_servers:\n    - 8.8.8.8\n    - 8.8.4.4\n"
  },
  "cisco.iosxr.iosxr_user": {
    "doc": {
      "description": "This module provides declarative management of the local usernames configured on network devices. It allows playbooks to manage either individual usernames or the aggregate of usernames in the current running config. It also supports purging usernames from the configuration that are not explicitly defined.",
      "has_action": true,
      "notes": "This module works with connection C(network_cli) and C(netconf). See L(the IOS-XR Platform Options,../network/user_guide/platform_iosxr.html).\nFor more information on using Ansible to manage network devices see the :ref:`Ansible Network Guide <network_guide>`\nFor more information on using Ansible to manage Cisco devices see the `Cisco integration page <https://www.ansible.com/integrations/networks/cisco>`_.",
      "options": {
        "admin": {
          "aliases": [],
          "description": "Enters into administration configuration mode for making config changes to the device.\nApplicable only when using network_cli transport",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "aggregate": {
          "aliases": [
            "users",
            "collection"
          ],
          "description": "The set of username objects to be configured on the remote Cisco IOS XR device. The list entries can either be the username or a hash of username and properties. This argument is mutually exclusive with the C(name) argument.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "admin": {
              "aliases": [],
              "description": "Enters into administration configuration mode for making config changes to the device.\nApplicable only when using network_cli transport",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "configured_password": {
              "aliases": [],
              "description": "The password to be configured on the Cisco IOS XR device. The password needs to be provided in clear text. Password is encrypted on the device when used with I(cli) and by Ansible when used with I(netconf) using the same MD5 hash technique with salt size of 3. Please note that this option is not same as C(provider password).",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "group": {
              "aliases": [
                "role"
              ],
              "description": "Configures the group for the username in the device running configuration. The argument accepts a string value defining the group name. This argument does not check if the group has been configured on the device.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "groups": {
              "aliases": [],
              "description": "Configures the groups for the username in the device running configuration. The argument accepts a list of group names. This argument does not check if the group has been configured on the device. It is similar to the aggregate command for usernames, but lets you configure multiple groups for the user(s).",
              "type": "list",
              "required": false,
              "elements": "str",
              "suboptions": {}
            },
            "name": {
              "aliases": [],
              "description": "The username to be configured on the Cisco IOS XR device. This argument accepts a string value and is mutually exclusive with the C(aggregate) argument. Please note that this option is not same as C(provider username).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "public_key": {
              "aliases": [],
              "description": "Configures the contents of the public keyfile to upload to the IOS-XR node. This enables users to login using the accompanying private key. IOS-XR only accepts base64 decoded files, so this will be decoded and uploaded to the node. Do note that this requires an OpenSSL public key file, PuTTy generated files will not work! Mutually exclusive with public_key_contents. If used with multiple users in aggregates, then the same key file is used for all users.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "public_key_contents": {
              "aliases": [],
              "description": "Configures the contents of the public keyfile to upload to the IOS-XR node. This enables users to login using the accompanying private key. IOS-XR only accepts base64 decoded files, so this will be decoded and uploaded to the node. Do note that this requires an OpenSSL public key file, PuTTy generated files will not work! Mutually exclusive with public_key.If used with multiple users in aggregates, then the same key file is used for all users.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "state": {
              "aliases": [],
              "description": "Configures the state of the username definition as it relates to the device operational configuration. When set to I(present), the username(s) should be configured in the device active configuration and when set to I(absent) the username(s) should not be in the device active configuration",
              "type": "str",
              "required": false,
              "choices": [
                "present",
                "absent"
              ],
              "suboptions": {}
            },
            "update_password": {
              "aliases": [],
              "description": "Since passwords are encrypted in the device running config, this argument will instruct the module when to change the password.  When set to C(always), the password will always be updated in the device and when set to C(on_create) the password will be updated only if the username is created.",
              "type": "str",
              "required": false,
              "choices": [
                "on_create",
                "always"
              ],
              "suboptions": {}
            }
          }
        },
        "configured_password": {
          "aliases": [],
          "description": "The password to be configured on the Cisco IOS XR device. The password needs to be provided in clear text. Password is encrypted on the device when used with I(cli) and by Ansible when used with I(netconf) using the same MD5 hash technique with salt size of 3. Please note that this option is not same as C(provider password).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "group": {
          "aliases": [
            "role"
          ],
          "description": "Configures the group for the username in the device running configuration. The argument accepts a string value defining the group name. This argument does not check if the group has been configured on the device.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "groups": {
          "aliases": [],
          "description": "Configures the groups for the username in the device running configuration. The argument accepts a list of group names. This argument does not check if the group has been configured on the device. It is similar to the aggregate command for usernames, but lets you configure multiple groups for the user(s).",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The username to be configured on the Cisco IOS XR device. This argument accepts a string value and is mutually exclusive with the C(aggregate) argument. Please note that this option is not same as C(provider username).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "B(Deprecated)\nStarting with Ansible 2.5 we recommend using C(connection: network_cli).\nFor more information please see the L(Network Guide, ../network/getting_started/network_differences.html#multiple-communication-protocols).\nHORIZONTALLINE\nA dict object containing connection details.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "host": {
              "aliases": [],
              "description": "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [],
              "description": "Specifies the password to use to authenticate the connection to the remote device.   This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "port": {
              "aliases": [],
              "description": "Specifies the port to use when building the connection to the remote device.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "ssh_keyfile": {
              "aliases": [],
              "description": "Specifies the SSH key to use to authenticate the connection to the remote device.   This value is the path to the key used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead.",
              "type": "path",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Specifies the type of connection based transport.",
              "default": "cli",
              "type": "str",
              "required": false,
              "choices": [
                "cli",
                "netconf"
              ],
              "suboptions": {}
            },
            "username": {
              "aliases": [],
              "description": "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "public_key": {
          "aliases": [],
          "description": "Configures the contents of the public keyfile to upload to the IOS-XR node. This enables users to login using the accompanying private key. IOS-XR only accepts base64 decoded files, so this will be decoded and uploaded to the node. Do note that this requires an OpenSSL public key file, PuTTy generated files will not work! Mutually exclusive with public_key_contents. If used with multiple users in aggregates, then the same key file is used for all users.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "public_key_contents": {
          "aliases": [],
          "description": "Configures the contents of the public keyfile to upload to the IOS-XR node. This enables users to login using the accompanying private key. IOS-XR only accepts base64 decoded files, so this will be decoded and uploaded to the node. Do note that this requires an OpenSSL public key file, PuTTy generated files will not work! Mutually exclusive with public_key.If used with multiple users in aggregates, then the same key file is used for all users.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "purge": {
          "aliases": [],
          "description": "Instructs the module to consider the resource definition absolute. It will remove any previously configured usernames on the device with the exception of the `admin` user and the current defined set of users.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Configures the state of the username definition as it relates to the device operational configuration. When set to I(present), the username(s) should be configured in the device active configuration and when set to I(absent) the username(s) should not be in the device active configuration",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "update_password": {
          "aliases": [],
          "description": "Since passwords are encrypted in the device running config, this argument will instruct the module when to change the password.  When set to C(always), the password will always be updated in the device and when set to C(on_create) the password will be updated only if the username is created.",
          "default": "always",
          "type": "str",
          "required": false,
          "choices": [
            "on_create",
            "always"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "ncclient >= 0.5.3 when using netconf",
        "lxml >= 4.1.1 when using netconf",
        "base64 when using I(public_key_contents) or I(public_key)"
      ],
      "short_description": "Manage the aggregate of local users on Cisco IOS XR device",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: create a new user\n  cisco.iosxr.iosxr_user:\n    name: ansible\n    configured_password: mypassword\n    state: present\n- name: create a new user in admin configuration mode\n  cisco.iosxr.iosxr_user:\n    name: ansible\n    configured_password: mypassword\n    admin: true\n    state: present\n- name: remove all users except admin\n  cisco.iosxr.iosxr_user:\n    purge: true\n- name: set multiple users to group sys-admin\n  cisco.iosxr.iosxr_user:\n    aggregate:\n    - name: netop\n    - name: netend\n    group: sysadmin\n    state: present\n- name: set multiple users to multiple groups\n  cisco.iosxr.iosxr_user:\n    aggregate:\n    - name: netop\n    - name: netend\n    groups:\n    - sysadmin\n    - root-system\n    state: present\n- name: Change Password for User netop\n  cisco.iosxr.iosxr_user:\n    name: netop\n    configured_password: '{{ new_password }}'\n    update_password: always\n    state: present\n- name: Add private key authentication for user netop\n  cisco.iosxr.iosxr_user:\n    name: netop\n    state: present\n    public_key_contents: \"{{ lookup('file', '/home/netop/.ssh/id_rsa.pub' }}\"\n"
  }
}