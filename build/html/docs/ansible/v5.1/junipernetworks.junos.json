{
  "junipernetworks.junos.junos_acl_interfaces": {
    "doc": {
      "description": "This module manages adding and removing Access Control Lists (ACLs) from interfaces on devices running Juniper JUNOS.",
      "has_action": true,
      "notes": "This module requires the netconf system service be enabled on the device being managed.\nThis module works with connection C(netconf). See L(the Junos OS Platform Options,../network/user_guide/platform_junos.html).\nTested against JunOS v18.4R1",
      "options": {
        "config": {
          "aliases": [],
          "description": "A dictionary of ACL options for interfaces.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "access_groups": {
              "aliases": [],
              "description": "Specifies ACLs attached to the interface.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "acls": {
                  "aliases": [],
                  "description": "Specifies the ACLs for the provided AFI.",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "direction": {
                      "aliases": [],
                      "description": "Specifies the direction of packets that the ACL will be applied on.",
                      "type": "str",
                      "required": false,
                      "choices": [
                        "in",
                        "out"
                      ],
                      "suboptions": {}
                    },
                    "name": {
                      "aliases": [],
                      "description": "Specifies the name of the IPv4/IPv4 ACL for the interface.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "afi": {
                  "aliases": [],
                  "description": "Specifies the AFI for the ACL(s) to be configured on this interface.",
                  "type": "str",
                  "required": false,
                  "choices": [
                    "ipv4",
                    "ipv6"
                  ],
                  "suboptions": {}
                }
              }
            },
            "name": {
              "aliases": [],
              "description": "Name/Identifier for the interface.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "running_config": {
          "aliases": [],
          "description": "This option is used only with state I(parsed).\nThe value of this option should be the output received from the Junos device by executing the command B(show interfaces).\nThe state I(parsed) reads the configuration from C(running_config) option and transforms it into Ansible structured data as per the resource module's argspec and the value is then returned in the I(parsed) key within the result",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The state the configuration should be left in.",
          "default": "merged",
          "type": "str",
          "required": false,
          "choices": [
            "merged",
            "replaced",
            "overridden",
            "deleted",
            "gathered",
            "rendered",
            "parsed"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "ncclient (>=v0.6.4)",
        "xmltodict (>=0.12.0)"
      ],
      "short_description": "ACL interfaces resource module",
      "version_added": "1.0.0"
    },
    "examples": "\n# Using deleted\n\n# Before state:\n# -------------\n#\n# admin# show interfaces\n# ge-1/0/0 {\n#     description \"L3 interface with filter\";\n#     unit 0 {\n#         family inet {\n#             filter {\n#                 input inbound_acl;\n#                 output outbound_acl;\n#             }\n#             address 100.64.0.1/10;\n#             address 100.64.0.2/10;\n#         }\n#         family inet6;\n#     }\n\n- name: Delete JUNOS L3 interface filter\n  junipernetworks.junos.junos_acl_interfaces:\n    config:\n    - name: ge-1/0/0\n      access_groups:\n      - afi: ipv4\n        acls:\n        - name: inbound_acl\n          direction: in\n        - name: outbound_acl\n          direction: out\n      state: deleted\n\n# After state:\n# -------------\n#\n# admin# show interfaces\n# ge-1/0/0 {\n#     description \"L3 interface with filter\";\n#     unit 0 {\n#         family inet {\n#             address 100.64.0.1/10;\n#             address 100.64.0.2/10;\n#         }\n#         family inet6;\n#     }\n\n\n# Using merged\n\n# Before state:\n# -------------\n#\n# admin# show interfaces\n# ge-1/0/0 {\n#     description \"L3 interface without filter\";\n#     unit 0 {\n#         family inet {\n#             address 100.64.0.1/10;\n#             address 100.64.0.2/10;\n#         }\n#         family inet6;\n#     }\n\n- name: Merge JUNOS L3 interface filter\n  junipernetworks.junos.junos_acl_interfaces:\n    config:\n    - name: ge-1/0/0\n      access_groups:\n      - afi: ipv4\n        acls:\n        - name: inbound_acl\n          direction: in\n        - name: outbound_acl\n          direction: out\n      state: merged\n\n# After state:\n# -------------\n#\n# admin# show interfaces\n# ge-1/0/0 {\n#     description \"L3 interface with filter\";\n#     unit 0 {\n#         family inet {\n#             filter {\n#                 input inbound_acl;\n#                 output outbound_acl;\n#             }\n#             address 100.64.0.1/10;\n#             address 100.64.0.2/10;\n#         }\n#         family inet6;\n#     }\n\n\n# Using overridden\n\n# Before state:\n# -------------\n#\n# admin# show interfaces\n# ge-1/0/0 {\n#     description \"L3 interface without filter\";\n#     unit 0 {\n#         family inet {\n#             filter {\n#                 input foo_acl;\n#             }\n#             address 100.64.0.1/10;\n#             address 100.64.0.2/10;\n#         }\n#         family inet6;\n#     }\n\n- name: Override JUNOS L3 interface filter\n  junipernetworks.junos.junos_acl_interfaces:\n    config:\n    - name: ge-1/0/0\n      access_groups:\n      - afi: ipv4\n        acls:\n        - name: inbound_acl\n          direction: in\n        - name: outbound_acl\n          direction: out\n      state: overridden\n\n# After state:\n# -------------\n#\n# admin# show interfaces\n# ge-1/0/0 {\n#     description \"L3 interface with filter\";\n#     unit 0 {\n#         family inet {\n#             filter {\n#                 input inbound_acl;\n#                 output outbound_acl;\n#             }\n#             address 100.64.0.1/10;\n#             address 100.64.0.2/10;\n#         }\n#         family inet6;\n#     }\n\n\n# Using replaced\n\n# Before state:\n# -------------\n#\n# admin# show interfaces\n# ge-1/0/0 {\n#     description \"L3 interface without filter\";\n#     unit 0 {\n#         family inet {\n#             filter {\n#                 input foo_acl;\n#                 output outbound_acl;\n#             }\n#             address 100.64.0.1/10;\n#             address 100.64.0.2/10;\n#         }\n#         family inet6;\n#     }\n\n- name: Replace JUNOS L3 interface filter\n  junipernetworks.junos.junos_acl_interfaces:\n    config:\n    - name: ge-1/0/0\n      access_groups:\n      - afi: ipv4\n        acls:\n        - name: inbound_acl\n          direction: in\n      state: replaced\n\n# After state:\n# -------------\n#\n# admin# show interfaces\n# ge-1/0/0 {\n#     description \"L3 interface with filter\";\n#     unit 0 {\n#         family inet {\n#             filter {\n#                 input inbound_acl;\n#                 output outbound_acl;\n#             }\n#             address 100.64.0.1/10;\n#             address 100.64.0.2/10;\n#         }\n#         family inet6;\n#     }\n\n\n"
  },
  "junipernetworks.junos.junos_acls": {
    "doc": {
      "description": "This module provides declarative management of acls/filters on Juniper JUNOS devices",
      "has_action": true,
      "notes": "This module requires the netconf system service be enabled on the device being managed.\nThis module works with connection C(netconf). See L(the Junos OS Platform Options,../network/user_guide/platform_junos.html).\nTested against JunOS v18.4R1",
      "options": {
        "config": {
          "aliases": [],
          "description": "A dictionary of acls options",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "acls": {
              "aliases": [],
              "description": "List of Access Control Lists (ACLs).",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "aces": {
                  "aliases": [],
                  "description": "List of Access Control Entries (ACEs) for this Access Control List (ACL).",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "destination": {
                      "aliases": [],
                      "description": "Specifies the destination for the filter",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "address": {
                          "aliases": [],
                          "description": "Match IP destination address",
                          "type": "raw",
                          "required": false,
                          "suboptions": {}
                        },
                        "port_protocol": {
                          "aliases": [],
                          "description": "Specify the destination port or protocol.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "eq": {
                              "aliases": [],
                              "description": "Match only packets on a given port number.",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            },
                            "range": {
                              "aliases": [],
                              "description": "Match only packets in the range of port numbers",
                              "type": "dict",
                              "required": false,
                              "suboptions": {
                                "end": {
                                  "aliases": [],
                                  "description": "Specify the end of the port range",
                                  "type": "int",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "start": {
                                  "aliases": [],
                                  "description": "Specify the start of the port range",
                                  "type": "int",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            }
                          }
                        },
                        "prefix_list": {
                          "aliases": [],
                          "description": "Match IP destination prefixes in named list",
                          "type": "list",
                          "required": false,
                          "elements": "dict",
                          "suboptions": {
                            "name": {
                              "aliases": [],
                              "description": "Name of the list",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        }
                      }
                    },
                    "grant": {
                      "aliases": [],
                      "description": "Action to take after matching condition (allow, discard/reject)",
                      "type": "str",
                      "required": false,
                      "choices": [
                        "permit",
                        "deny"
                      ],
                      "suboptions": {}
                    },
                    "name": {
                      "aliases": [],
                      "description": "Filter term name",
                      "type": "str",
                      "required": true,
                      "suboptions": {}
                    },
                    "protocol": {
                      "aliases": [],
                      "description": "Specify the protocol to match.\nRefer to vendor documentation for valid values.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "protocol_options": {
                      "aliases": [],
                      "description": "All possible suboptions for the protocol chosen.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "icmp": {
                          "aliases": [],
                          "description": "ICMP protocol options.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "dod_host_prohibited": {
                              "aliases": [],
                              "description": "Host prohibited",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "dod_net_prohibited": {
                              "aliases": [],
                              "description": "Net prohibited",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "echo": {
                              "aliases": [],
                              "description": "Echo (ping)",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "echo_reply": {
                              "aliases": [],
                              "description": "Echo reply",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "host_redirect": {
                              "aliases": [],
                              "description": "Host redirect",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "host_tos_redirect": {
                              "aliases": [],
                              "description": "Host redirect for TOS",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "host_tos_unreachable": {
                              "aliases": [],
                              "description": "Host unreachable for TOS",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "host_unknown": {
                              "aliases": [],
                              "description": "Host unknown",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "host_unreachable": {
                              "aliases": [],
                              "description": "Host unreachable",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "net_redirect": {
                              "aliases": [],
                              "description": "Network redirect",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "net_tos_redirect": {
                              "aliases": [],
                              "description": "Net redirect for TOS",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "network_unknown": {
                              "aliases": [],
                              "description": "Network unknown",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "port_unreachable": {
                              "aliases": [],
                              "description": "Port unreachable",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "protocol_unreachable": {
                              "aliases": [],
                              "description": "Protocol unreachable",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "reassembly_timeout": {
                              "aliases": [],
                              "description": "Reassembly timeout",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "redirect": {
                              "aliases": [],
                              "description": "All redirects",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "router_advertisement": {
                              "aliases": [],
                              "description": "Router discovery advertisements",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "router_solicitation": {
                              "aliases": [],
                              "description": "Router discovery solicitations",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "source_route_failed": {
                              "aliases": [],
                              "description": "Source route failed",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "time_exceeded": {
                              "aliases": [],
                              "description": "All time exceeded.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "ttl_exceeded": {
                              "aliases": [],
                              "description": "TTL exceeded",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        }
                      }
                    },
                    "source": {
                      "aliases": [],
                      "description": "Specifies the source for the filter",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "address": {
                          "aliases": [],
                          "description": "IP source address to use for the filter",
                          "type": "raw",
                          "required": false,
                          "suboptions": {}
                        },
                        "port_protocol": {
                          "aliases": [],
                          "description": "Specify the source port or protocol.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "eq": {
                              "aliases": [],
                              "description": "Match only packets on a given port number.",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            },
                            "range": {
                              "aliases": [],
                              "description": "Match only packets in the range of port numbers",
                              "type": "dict",
                              "required": false,
                              "suboptions": {
                                "end": {
                                  "aliases": [],
                                  "description": "Specify the end of the port range",
                                  "type": "int",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "start": {
                                  "aliases": [],
                                  "description": "Specify the start of the port range",
                                  "type": "int",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            }
                          }
                        },
                        "prefix_list": {
                          "aliases": [],
                          "description": "IP source prefix list to use for the filter",
                          "type": "list",
                          "required": false,
                          "elements": "dict",
                          "suboptions": {
                            "name": {
                              "aliases": [],
                              "description": "Name of the list",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "name": {
                  "aliases": [],
                  "description": "Name to use for the acl filter",
                  "type": "str",
                  "required": true,
                  "suboptions": {}
                }
              }
            },
            "afi": {
              "aliases": [],
              "description": "Protocol family to use by the acl filter",
              "type": "str",
              "required": true,
              "choices": [
                "ipv4",
                "ipv6"
              ],
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "The state the configuration should be left in",
          "default": "merged",
          "type": "str",
          "required": false,
          "choices": [
            "merged",
            "replaced",
            "overridden",
            "deleted",
            "gathered"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "ncclient (>=v0.6.4)",
        "xmltodict (>=0.12.0)"
      ],
      "short_description": "ACLs resource module",
      "version_added": "1.0.0"
    },
    "examples": "\n# Using merged\n\n# Before state:\n# -------------\n#\n# admin# show firewall\n\n- name: Merge JUNOS acl\n  junipernetworks.junos.junos_acls:\n    config:\n    - afi: ipv4\n      acls:\n      - name: allow_ssh_acl\n        aces:\n        - name: ssh_rule\n          source:\n            port_protocol:\n              eq: ssh\n          protocol: tcp\n      state: merged\n\n# After state:\n# -------------\n# admin# show firewall\n# family inet {\n#     filter allow_ssh_acl {\n#         term ssh_rule {\n#             from {\n#                 protocol tcp;\n#                 source-port ssh;\n#             }\n#         }\n#     }\n# }\n\n"
  },
  "junipernetworks.junos.junos_banner": {
    "doc": {
      "description": "This will configure both login and motd banners on network devices. It allows playbooks to add or remote banner text from the active running configuration.",
      "has_action": true,
      "notes": "This module requires the netconf system service be enabled on the remote device being managed.\nTested against vSRX JUNOS version 15.1X49-D15.4, vqfx-10000 JUNOS Version 15.1X53-D60.4.\nRecommended connection is C(netconf). See L(the Junos OS Platform Options,../network/user_guide/platform_junos.html).\nThis module also works with C(local) connections for legacy playbooks.\nFor information on using CLI and netconf see the :ref:`Junos OS Platform Options guide <junos_platform_options>`\nFor more information on using Ansible to manage network devices see the :ref:`Ansible Network Guide <network_guide>`\nFor more information on using Ansible to manage Juniper network devices see U(https://www.ansible.com/ansible-juniper).",
      "options": {
        "active": {
          "aliases": [],
          "description": "Specifies whether or not the configuration is active or deactivated",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "banner": {
          "aliases": [],
          "description": "Specifies which banner that should be configured on the remote device. Value C(login) indicates system login message prior to authenticating, C(motd) is login announcement after successful authentication.",
          "type": "str",
          "required": true,
          "choices": [
            "login",
            "motd"
          ],
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "B(Deprecated)\nStarting with Ansible 2.5 we recommend using C(connection: network_cli) or C(connection: netconf).\nFor more information please see the L(Junos OS Platform Options guide, ../network/user_guide/platform_junos.html).\nHORIZONTALLINE\nA dict object containing connection details.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "host": {
              "aliases": [],
              "description": "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [],
              "description": "Specifies the password to use to authenticate the connection to the remote device.   This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "port": {
              "aliases": [],
              "description": "Specifies the port to use when building the connection to the remote device.  The port value will default to the well known SSH port of 22 (for C(transport=cli)) or port 830 (for C(transport=netconf)) device.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "ssh_keyfile": {
              "aliases": [],
              "description": "Specifies the SSH key to use to authenticate the connection to the remote device.   This value is the path to the key used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead.",
              "type": "path",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "netconf",
              "type": "str",
              "required": false,
              "choices": [
                "cli",
                "netconf"
              ],
              "suboptions": {}
            },
            "username": {
              "aliases": [],
              "description": "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "Specifies whether or not the configuration is present in the current devices active running configuration.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "text": {
          "aliases": [],
          "description": "The banner text that should be present in the remote device running configuration.  This argument accepts a multiline string, with no empty lines. Requires I(state=present).",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "ncclient (>=v0.5.2)"
      ],
      "short_description": "Manage multiline banners on Juniper JUNOS devices",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: configure the login banner\n  junipernetworks.junos.junos_banner:\n    banner: login\n    text: |\n      this is my login banner\n      that contains a multiline\n      string\n    state: present\n\n- name: remove the motd banner\n  junipernetworks.junos.junos_banner:\n    banner: motd\n    state: absent\n\n- name: deactivate the motd banner\n  junipernetworks.junos.junos_banner:\n    banner: motd\n    state: present\n    active: false\n\n- name: activate the motd banner\n  junipernetworks.junos.junos_banner:\n    banner: motd\n    state: present\n    active: true\n\n- name: Configure banner from file\n  junipernetworks.junos.junos_banner:\n    banner: motd\n    text: \"{{ lookup('file', './config_partial/raw_banner.cfg') }}\"\n    state: present\n"
  },
  "junipernetworks.junos.junos_bgp_address_family": {
    "doc": {
      "description": "Manage BGP Address Family attributes of interfaces on Junos network devices.",
      "has_action": true,
      "notes": "This module requires the netconf system service be enabled on the device being managed.\nThis module works with connection C(netconf). See L(the Junos OS Platform Options,../network/user_guide/platform_junos.html).\nTested against JunOS v18.4R1",
      "options": {
        "config": {
          "aliases": [],
          "description": "The provided link BGP address family dictionary.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "address_family": {
              "aliases": [],
              "description": "Enable address family and enter its config mode.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "af_type": {
                  "aliases": [],
                  "description": "Address family type for ipv4.",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "accepted_prefix_limit": {
                      "aliases": [],
                      "description": "Specify limit for maximum number of prefixes accepted from a peer.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "forever": {
                          "aliases": [],
                          "description": "Idle the peer until the user intervenes.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "idle_timeout": {
                          "aliases": [],
                          "description": "Set idle timeout node.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "idle_timeout_value": {
                          "aliases": [],
                          "description": "Specify timeout before attempting to restart peer.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "limit_threshold": {
                          "aliases": [],
                          "description": "Specify teardown percentage of prefix-limit to start warnings.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "maximum": {
                          "aliases": [],
                          "description": "Specify maximum number of prefixes accepted from a peer.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "teardown": {
                          "aliases": [],
                          "description": "Clear peer connection on reaching limit.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "add_path": {
                      "aliases": [],
                      "description": "Advertise multiple paths to peer.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "receive": {
                          "aliases": [],
                          "description": "Receive multiple paths from peer.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "send": {
                          "aliases": [],
                          "description": "Send multiple paths to peer.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "include_backup_path": {
                              "aliases": [],
                              "description": "Specify number of backup paths to advertise.",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "multipath": {
                              "aliases": [],
                              "description": "Include only multipath contributor routes.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "path_count": {
                              "aliases": [],
                              "description": "Include only multipath contributor routes.",
                              "type": "int",
                              "required": true,
                              "suboptions": {}
                            },
                            "path_selection_mode": {
                              "aliases": [],
                              "description": "Configure how to select add-path routes.",
                              "type": "dict",
                              "required": false,
                              "suboptions": {
                                "all_paths": {
                                  "aliases": [],
                                  "description": "Advertise all paths allowed by path count.",
                                  "type": "bool",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "equal_cost_paths": {
                                  "aliases": [],
                                  "description": "Advertise equal cost paths.",
                                  "type": "bool",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            },
                            "prefix_policy": {
                              "aliases": [],
                              "description": "Perform add-path only for prefixes that match policy.",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        }
                      }
                    },
                    "aggregate_label": {
                      "aliases": [],
                      "description": "Aggregate labels of incoming routes with the same FEC.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "community": {
                          "aliases": [],
                          "description": "Community to identify the FEC of incoming routesC.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "set": {
                          "aliases": [],
                          "description": "Set Aggregate labels of incoming routes with the same FEC",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "aigp": {
                      "aliases": [],
                      "description": "Allow sending and receiving of AIGP attribute.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "disable": {
                          "aliases": [],
                          "description": "Dn not allow sending and receiving of AIGP attribute.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "set": {
                          "aliases": [],
                          "description": "Set AIGP.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "damping": {
                      "aliases": [],
                      "description": "Enable route flap damping.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "defer_initial_multipath_build": {
                      "aliases": [],
                      "description": "Defer initial multipath build until EOR is received.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "maximum_delay": {
                          "aliases": [],
                          "description": "Max delay(sec) multipath build after peer is up.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "set": {
                          "aliases": [],
                          "description": "Set defer initial multipath build.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "delay_route_advertisements": {
                      "aliases": [],
                      "description": "Delay route updates for this family until FIB-sync.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "max_delay_route_age": {
                          "aliases": [],
                          "description": "Set max delay advertisement route age.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "max_delay_routing_uptime": {
                          "aliases": [],
                          "description": "Set max delay advertisement route age.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "min_delay_inbound_convergence": {
                          "aliases": [],
                          "description": "Set min delayadvertisement after source-peer sent all routes.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "min_delay_routing_uptime": {
                          "aliases": [],
                          "description": "Set min delay advertisement route age.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "set": {
                          "aliases": [],
                          "description": "Set delay route advertisements.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "entropy_label": {
                      "aliases": [],
                      "description": "Use entropy label for entropy label capable BGP LSPs.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "import": {
                          "aliases": [],
                          "description": "Policy to select BGP LSPs to use entropy label.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "no_next_hop_validation": {
                          "aliases": [],
                          "description": "Don't validate next hop field against route next hop.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "set": {
                          "aliases": [],
                          "description": "Set entropy-label attribute.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "explicit_null": {
                      "aliases": [],
                      "description": "Advertise explicit null.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "connected_only": {
                          "aliases": [],
                          "description": "Advertise explicit null only for connected routes.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "set": {
                          "aliases": [],
                          "description": "Set explicit-null attribute.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "extended_nexthop": {
                      "aliases": [],
                      "description": "Enable extended nexthop encoding.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "extended_nexthop_color": {
                      "aliases": [],
                      "description": "Resolve using extended color nexthop.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "graceful_restart_forwarding_state_bit": {
                      "aliases": [],
                      "description": "Specify BGP graceful restart options.",
                      "type": "str",
                      "required": false,
                      "choices": [
                        "from-fib",
                        "set"
                      ],
                      "suboptions": {}
                    },
                    "legacy_redirect_ip_action": {
                      "aliases": [],
                      "description": "Configure legacy redirect to IP support.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "receive": {
                          "aliases": [],
                          "description": "Accept legacy encoded redirect-to-ip action attribute",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "send": {
                          "aliases": [],
                          "description": "Advertise Redirect action as legacy redirect attribute.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "set": {
                          "aliases": [],
                          "description": "Set the legacy-redirect-ip-action.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "local_ipv4_address": {
                      "aliases": [],
                      "description": "Specify local IPv4 address.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "loops": {
                      "aliases": [],
                      "description": "Allow local AS in received AS paths.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "no_install": {
                      "aliases": [],
                      "description": "Dont install received routes in forwarding.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "no_validate": {
                      "aliases": [],
                      "description": "Bypass validation procedure for routes that match policy.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "output_queue_priority_expedited": {
                      "aliases": [],
                      "description": "Expedited queue; highest priority.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "output_queue_priority_priority": {
                      "aliases": [],
                      "description": "Output queue priority; higher is better.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "per_group_label": {
                      "aliases": [],
                      "description": "Advertise prefixes with unique labels per group.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "per_prefix_label": {
                      "aliases": [],
                      "description": "Allocate a unique label to each advertised prefix.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "prefix_limit": {
                      "aliases": [],
                      "description": "Limit maximum number of prefixes from a peer.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "forever": {
                          "aliases": [],
                          "description": "Idle the peer until the user intervenes.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "idle_timeout": {
                          "aliases": [],
                          "description": "Set idle timeout node.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "idle_timeout_value": {
                          "aliases": [],
                          "description": "Specify timeout before attempting to restart peer.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "limit_threshold": {
                          "aliases": [],
                          "description": "Percentage of prefix-limit to start warnings.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "maximum": {
                          "aliases": [],
                          "description": "Specify maximum number of prefixes from a peer.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "teardown": {
                          "aliases": [],
                          "description": "Clear peer connection on reaching limit.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "resolve_vpn": {
                      "aliases": [],
                      "description": "Install received NLRI in inet.3 also.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "rib": {
                      "aliases": [],
                      "description": "Select table used by labeled unicast routes.",
                      "type": "str",
                      "required": false,
                      "choices": [
                        "inet.3"
                      ],
                      "suboptions": {}
                    },
                    "ribgroup_name": {
                      "aliases": [],
                      "description": "Name of the routing table group.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "route_refresh_priority_expedited": {
                      "aliases": [],
                      "description": "Expedited queue; highest priority.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "route_refresh_priority_priority": {
                      "aliases": [],
                      "description": "Output queue priority; higher is better.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "secondary_independent_resolution": {
                      "aliases": [],
                      "description": "Resolve FLOW routes in VRF table independent of VPN FLOW route.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "set": {
                      "aliases": [],
                      "description": "Set NLRI.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "strip_nexthop": {
                      "aliases": [],
                      "description": "Strip the next-hop from the outgoing flow update.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "topology": {
                      "aliases": [],
                      "description": "Multi topology routing tables.",
                      "type": "list",
                      "required": false,
                      "elements": "dict",
                      "suboptions": {
                        "community": {
                          "aliases": [],
                          "description": "Community to identify multi topology routes.",
                          "type": "list",
                          "required": false,
                          "elements": "str",
                          "suboptions": {}
                        },
                        "name": {
                          "aliases": [],
                          "description": "Specify topology name.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "traffic_statistics": {
                      "aliases": [],
                      "description": "Collect statistics for BGP label-switched paths",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "file": {
                          "aliases": [],
                          "description": "Statistics file options.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "filename": {
                              "aliases": [],
                              "description": "Name of file in which to write trace information.",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            },
                            "files": {
                              "aliases": [],
                              "description": "Maximum number of trace files.",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "no_world_readable": {
                              "aliases": [],
                              "description": "Don't allow any user to read the log file.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "size": {
                              "aliases": [],
                              "description": "Maximum trace file size.",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "world_readable": {
                              "aliases": [],
                              "description": "Don't allow any user to read the log file.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "interval": {
                          "aliases": [],
                          "description": "Time to collect statistics (seconds).",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "labeled_path": {
                          "aliases": [],
                          "description": "Enable ingress labeled path statistics.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "set": {
                          "aliases": [],
                          "description": "Set traffic-statistics.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "type": {
                      "aliases": [],
                      "description": "Specify type of NLRI.",
                      "type": "str",
                      "required": false,
                      "choices": [
                        "any",
                        "flow",
                        "labeled-unicast",
                        "multicast",
                        "segment-routing-te",
                        "unicast",
                        "signaling",
                        "auto-discovery-mspw",
                        "auto-discovery-only"
                      ],
                      "suboptions": {}
                    },
                    "withdraw_priority_expedited": {
                      "aliases": [],
                      "description": "Expedited queue; highest priority.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "withdraw_priority_priority": {
                      "aliases": [],
                      "description": "Output queue priority; higher is better.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "afi": {
                  "aliases": [],
                  "description": "address family.",
                  "type": "str",
                  "required": false,
                  "choices": [
                    "evpn",
                    "inet",
                    "inet-mdt",
                    "inet-mvpn",
                    "inet-vpn",
                    "inet6",
                    "inet6-mvpn",
                    "inet6-vpn",
                    "iso-vpn",
                    "l2vpn",
                    "route-target",
                    "traffic-engineering"
                  ],
                  "suboptions": {}
                }
              }
            },
            "groups": {
              "aliases": [],
              "description": "Specify address family config for groups.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "address_family": {
                  "aliases": [],
                  "description": "Enable address family and enter its config mode.",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "af_type": {
                      "aliases": [],
                      "description": "Address family type for ipv4.",
                      "type": "list",
                      "required": false,
                      "elements": "dict",
                      "suboptions": {
                        "accepted_prefix_limit": {
                          "aliases": [],
                          "description": "Specify limit for maximum number of prefixes accepted from a peer.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "forever": {
                              "aliases": [],
                              "description": "Idle the peer until the user intervenes.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "idle_timeout": {
                              "aliases": [],
                              "description": "Set idle timeout node.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "idle_timeout_value": {
                              "aliases": [],
                              "description": "Specify timeout before attempting to restart peer.",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "limit_threshold": {
                              "aliases": [],
                              "description": "Specify teardown percentage of prefix-limit to start warnings.",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "maximum": {
                              "aliases": [],
                              "description": "Specify maximum number of prefixes accepted from a peer.",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "teardown": {
                              "aliases": [],
                              "description": "Clear peer connection on reaching limit.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "add_path": {
                          "aliases": [],
                          "description": "Advertise multiple paths to peer.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "receive": {
                              "aliases": [],
                              "description": "Receive multiple paths from peer.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "send": {
                              "aliases": [],
                              "description": "Send multiple paths to peer.",
                              "type": "dict",
                              "required": false,
                              "suboptions": {
                                "include_backup_path": {
                                  "aliases": [],
                                  "description": "Specify number of backup paths to advertise.",
                                  "type": "int",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "multipath": {
                                  "aliases": [],
                                  "description": "Include only multipath contributor routes.",
                                  "type": "bool",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "path_count": {
                                  "aliases": [],
                                  "description": "Include only multipath contributor routes.",
                                  "type": "int",
                                  "required": true,
                                  "suboptions": {}
                                },
                                "path_selection_mode": {
                                  "aliases": [],
                                  "description": "Configure how to select add-path routes.",
                                  "type": "dict",
                                  "required": false,
                                  "suboptions": {
                                    "all_paths": {
                                      "aliases": [],
                                      "description": "Advertise all paths allowed by path count.",
                                      "type": "bool",
                                      "required": false,
                                      "suboptions": {}
                                    },
                                    "equal_cost_paths": {
                                      "aliases": [],
                                      "description": "Advertise equal cost paths.",
                                      "type": "bool",
                                      "required": false,
                                      "suboptions": {}
                                    }
                                  }
                                },
                                "prefix_policy": {
                                  "aliases": [],
                                  "description": "Perform add-path only for prefixes that match policy.",
                                  "type": "str",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            }
                          }
                        },
                        "aggregate_label": {
                          "aliases": [],
                          "description": "Aggregate labels of incoming routes with the same FEC.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "community": {
                              "aliases": [],
                              "description": "Community to identify the FEC of incoming routesC.",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            },
                            "set": {
                              "aliases": [],
                              "description": "Set Aggregate labels of incoming routes with the same FEC",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "aigp": {
                          "aliases": [],
                          "description": "Allow sending and receiving of AIGP attribute.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "disable": {
                              "aliases": [],
                              "description": "Dn not allow sending and receiving of AIGP attribute.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "set": {
                              "aliases": [],
                              "description": "Set AIGP.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "damping": {
                          "aliases": [],
                          "description": "Enable route flap damping.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "defer_initial_multipath_build": {
                          "aliases": [],
                          "description": "Defer initial multipath build until EOR is received.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "maximum_delay": {
                              "aliases": [],
                              "description": "Max delay(sec) multipath build after peer is up.",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "set": {
                              "aliases": [],
                              "description": "Set defer initial multipath build.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "delay_route_advertisements": {
                          "aliases": [],
                          "description": "Delay route updates for this family until FIB-sync.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "max_delay_route_age": {
                              "aliases": [],
                              "description": "Set max delay advertisement route age.",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "max_delay_routing_uptime": {
                              "aliases": [],
                              "description": "Set max delay advertisement route age.",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "min_delay_inbound_convergence": {
                              "aliases": [],
                              "description": "Set min delayadvertisement after source-peer sent all routes.",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "min_delay_routing_uptime": {
                              "aliases": [],
                              "description": "Set min delay advertisement route age.",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "set": {
                              "aliases": [],
                              "description": "Set delay route advertisements.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "entropy_label": {
                          "aliases": [],
                          "description": "Use entropy label for entropy label capable BGP LSPs.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "import": {
                              "aliases": [],
                              "description": "Policy to select BGP LSPs to use entropy label.",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            },
                            "no_next_hop_validation": {
                              "aliases": [],
                              "description": "Don't validate next hop field against route next hop.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "set": {
                              "aliases": [],
                              "description": "Set entropy-label attribute.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "explicit_null": {
                          "aliases": [],
                          "description": "Advertise explicit null.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "connected_only": {
                              "aliases": [],
                              "description": "Advertise explicit null only for connected routes.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "set": {
                              "aliases": [],
                              "description": "Set explicit-null attribute.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "extended_nexthop": {
                          "aliases": [],
                          "description": "Enable extended nexthop encoding.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "extended_nexthop_color": {
                          "aliases": [],
                          "description": "Resolve using extended color nexthop.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "graceful_restart_forwarding_state_bit": {
                          "aliases": [],
                          "description": "Specify BGP graceful restart options.",
                          "type": "str",
                          "required": false,
                          "choices": [
                            "from-fib",
                            "set"
                          ],
                          "suboptions": {}
                        },
                        "legacy_redirect_ip_action": {
                          "aliases": [],
                          "description": "Configure legacy redirect to IP support.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "receive": {
                              "aliases": [],
                              "description": "Accept legacy encoded redirect-to-ip action attribute",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "send": {
                              "aliases": [],
                              "description": "Advertise Redirect action as legacy redirect attribute.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "set": {
                              "aliases": [],
                              "description": "Set the legacy-redirect-ip-action.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "local_ipv4_address": {
                          "aliases": [],
                          "description": "Specify local IPv4 address.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "loops": {
                          "aliases": [],
                          "description": "Allow local AS in received AS paths.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "no_install": {
                          "aliases": [],
                          "description": "Dont install received routes in forwarding.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "no_validate": {
                          "aliases": [],
                          "description": "Bypass validation procedure for routes that match policy.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "output_queue_priority_expedited": {
                          "aliases": [],
                          "description": "Expedited queue; highest priority.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "output_queue_priority_priority": {
                          "aliases": [],
                          "description": "Output queue priority; higher is better.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "per_group_label": {
                          "aliases": [],
                          "description": "Advertise prefixes with unique labels per group.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "per_prefix_label": {
                          "aliases": [],
                          "description": "Allocate a unique label to each advertised prefix.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "prefix_limit": {
                          "aliases": [],
                          "description": "Limit maximum number of prefixes from a peer.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "forever": {
                              "aliases": [],
                              "description": "Idle the peer until the user intervenes.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "idle_timeout": {
                              "aliases": [],
                              "description": "Set idle timeout node.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "idle_timeout_value": {
                              "aliases": [],
                              "description": "Specify timeout before attempting to restart peer.",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "limit_threshold": {
                              "aliases": [],
                              "description": "Percentage of prefix-limit to start warnings.",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "maximum": {
                              "aliases": [],
                              "description": "Specify maximum number of prefixes from a peer.",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "teardown": {
                              "aliases": [],
                              "description": "Clear peer connection on reaching limit.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "resolve_vpn": {
                          "aliases": [],
                          "description": "Install received NLRI in inet.3 also.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "rib": {
                          "aliases": [],
                          "description": "Select table used by labeled unicast routes.",
                          "type": "str",
                          "required": false,
                          "choices": [
                            "inet.3"
                          ],
                          "suboptions": {}
                        },
                        "ribgroup_name": {
                          "aliases": [],
                          "description": "Name of the routing table group.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "route_refresh_priority_expedited": {
                          "aliases": [],
                          "description": "Expedited queue; highest priority.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "route_refresh_priority_priority": {
                          "aliases": [],
                          "description": "Output queue priority; higher is better.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "secondary_independent_resolution": {
                          "aliases": [],
                          "description": "Resolve FLOW routes in VRF table independent of VPN FLOW route.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "set": {
                          "aliases": [],
                          "description": "Set NLRI.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "strip_nexthop": {
                          "aliases": [],
                          "description": "Strip the next-hop from the outgoing flow update.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "topology": {
                          "aliases": [],
                          "description": "Multi topology routing tables.",
                          "type": "list",
                          "required": false,
                          "elements": "dict",
                          "suboptions": {
                            "community": {
                              "aliases": [],
                              "description": "Community to identify multi topology routes.",
                              "type": "list",
                              "required": false,
                              "elements": "str",
                              "suboptions": {}
                            },
                            "name": {
                              "aliases": [],
                              "description": "Specify topology name.",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "traffic_statistics": {
                          "aliases": [],
                          "description": "Collect statistics for BGP label-switched paths",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "file": {
                              "aliases": [],
                              "description": "Statistics file options.",
                              "type": "dict",
                              "required": false,
                              "suboptions": {
                                "filename": {
                                  "aliases": [],
                                  "description": "Name of file in which to write trace information.",
                                  "type": "str",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "files": {
                                  "aliases": [],
                                  "description": "Maximum number of trace files.",
                                  "type": "int",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "no_world_readable": {
                                  "aliases": [],
                                  "description": "Don't allow any user to read the log file.",
                                  "type": "bool",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "size": {
                                  "aliases": [],
                                  "description": "Maximum trace file size.",
                                  "type": "int",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "world_readable": {
                                  "aliases": [],
                                  "description": "Don't allow any user to read the log file.",
                                  "type": "bool",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            },
                            "interval": {
                              "aliases": [],
                              "description": "Time to collect statistics (seconds).",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "labeled_path": {
                              "aliases": [],
                              "description": "Enable ingress labeled path statistics.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "set": {
                              "aliases": [],
                              "description": "Set traffic-statistics.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "type": {
                          "aliases": [],
                          "description": "Specify type of NLRI.",
                          "type": "str",
                          "required": false,
                          "choices": [
                            "any",
                            "flow",
                            "labeled-unicast",
                            "multicast",
                            "segment-routing-te",
                            "unicast",
                            "signaling",
                            "auto-discovery-mspw",
                            "auto-discovery-only"
                          ],
                          "suboptions": {}
                        },
                        "withdraw_priority_expedited": {
                          "aliases": [],
                          "description": "Expedited queue; highest priority.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "withdraw_priority_priority": {
                          "aliases": [],
                          "description": "Output queue priority; higher is better.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "afi": {
                      "aliases": [],
                      "description": "address family.",
                      "type": "str",
                      "required": false,
                      "choices": [
                        "evpn",
                        "inet",
                        "inet-mdt",
                        "inet-mvpn",
                        "inet-vpn",
                        "inet6",
                        "inet6-mvpn",
                        "inet6-vpn",
                        "iso-vpn",
                        "l2vpn",
                        "route-target",
                        "traffic-engineering"
                      ],
                      "suboptions": {}
                    }
                  }
                },
                "name": {
                  "aliases": [],
                  "description": "Specify name of the group",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "neighbors": {
                  "aliases": [],
                  "description": "Specify address family config per neighbor.",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "address_family": {
                      "aliases": [],
                      "description": "Enable address family and enter its config mode.",
                      "type": "list",
                      "required": false,
                      "elements": "dict",
                      "suboptions": {
                        "af_type": {
                          "aliases": [],
                          "description": "Address family type for ipv4.",
                          "type": "list",
                          "required": false,
                          "elements": "dict",
                          "suboptions": {
                            "accepted_prefix_limit": {
                              "aliases": [],
                              "description": "Specify limit for maximum number of prefixes accepted from a peer.",
                              "type": "dict",
                              "required": false,
                              "suboptions": {
                                "forever": {
                                  "aliases": [],
                                  "description": "Idle the peer until the user intervenes.",
                                  "type": "bool",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "idle_timeout": {
                                  "aliases": [],
                                  "description": "Set idle timeout node.",
                                  "type": "bool",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "idle_timeout_value": {
                                  "aliases": [],
                                  "description": "Specify timeout before attempting to restart peer.",
                                  "type": "int",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "limit_threshold": {
                                  "aliases": [],
                                  "description": "Specify teardown percentage of prefix-limit to start warnings.",
                                  "type": "int",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "maximum": {
                                  "aliases": [],
                                  "description": "Specify maximum number of prefixes accepted from a peer.",
                                  "type": "int",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "teardown": {
                                  "aliases": [],
                                  "description": "Clear peer connection on reaching limit.",
                                  "type": "bool",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            },
                            "add_path": {
                              "aliases": [],
                              "description": "Advertise multiple paths to peer.",
                              "type": "dict",
                              "required": false,
                              "suboptions": {
                                "receive": {
                                  "aliases": [],
                                  "description": "Receive multiple paths from peer.",
                                  "type": "bool",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "send": {
                                  "aliases": [],
                                  "description": "Send multiple paths to peer.",
                                  "type": "dict",
                                  "required": false,
                                  "suboptions": {
                                    "include_backup_path": {
                                      "aliases": [],
                                      "description": "Specify number of backup paths to advertise.",
                                      "type": "int",
                                      "required": false,
                                      "suboptions": {}
                                    },
                                    "multipath": {
                                      "aliases": [],
                                      "description": "Include only multipath contributor routes.",
                                      "type": "bool",
                                      "required": false,
                                      "suboptions": {}
                                    },
                                    "path_count": {
                                      "aliases": [],
                                      "description": "Include only multipath contributor routes.",
                                      "type": "int",
                                      "required": true,
                                      "suboptions": {}
                                    },
                                    "path_selection_mode": {
                                      "aliases": [],
                                      "description": "Configure how to select add-path routes.",
                                      "type": "dict",
                                      "required": false,
                                      "suboptions": {
                                        "all_paths": {
                                          "aliases": [],
                                          "description": "Advertise all paths allowed by path count.",
                                          "type": "bool",
                                          "required": false,
                                          "suboptions": {}
                                        },
                                        "equal_cost_paths": {
                                          "aliases": [],
                                          "description": "Advertise equal cost paths.",
                                          "type": "bool",
                                          "required": false,
                                          "suboptions": {}
                                        }
                                      }
                                    },
                                    "prefix_policy": {
                                      "aliases": [],
                                      "description": "Perform add-path only for prefixes that match policy.",
                                      "type": "str",
                                      "required": false,
                                      "suboptions": {}
                                    }
                                  }
                                }
                              }
                            },
                            "aggregate_label": {
                              "aliases": [],
                              "description": "Aggregate labels of incoming routes with the same FEC.",
                              "type": "dict",
                              "required": false,
                              "suboptions": {
                                "community": {
                                  "aliases": [],
                                  "description": "Community to identify the FEC of incoming routesC.",
                                  "type": "str",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "set": {
                                  "aliases": [],
                                  "description": "Set Aggregate labels of incoming routes with the same FEC",
                                  "type": "bool",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            },
                            "aigp": {
                              "aliases": [],
                              "description": "Allow sending and receiving of AIGP attribute.",
                              "type": "dict",
                              "required": false,
                              "suboptions": {
                                "disable": {
                                  "aliases": [],
                                  "description": "Dn not allow sending and receiving of AIGP attribute.",
                                  "type": "bool",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "set": {
                                  "aliases": [],
                                  "description": "Set AIGP.",
                                  "type": "bool",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            },
                            "damping": {
                              "aliases": [],
                              "description": "Enable route flap damping.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "defer_initial_multipath_build": {
                              "aliases": [],
                              "description": "Defer initial multipath build until EOR is received.",
                              "type": "dict",
                              "required": false,
                              "suboptions": {
                                "maximum_delay": {
                                  "aliases": [],
                                  "description": "Max delay(sec) multipath build after peer is up.",
                                  "type": "int",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "set": {
                                  "aliases": [],
                                  "description": "Set defer initial multipath build.",
                                  "type": "bool",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            },
                            "delay_route_advertisements": {
                              "aliases": [],
                              "description": "Delay route updates for this family until FIB-sync.",
                              "type": "dict",
                              "required": false,
                              "suboptions": {
                                "max_delay_route_age": {
                                  "aliases": [],
                                  "description": "Set max delay advertisement route age.",
                                  "type": "int",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "max_delay_routing_uptime": {
                                  "aliases": [],
                                  "description": "Set max delay advertisement route age.",
                                  "type": "int",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "min_delay_inbound_convergence": {
                                  "aliases": [],
                                  "description": "Set min delayadvertisement after source-peer sent all routes.",
                                  "type": "int",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "min_delay_routing_uptime": {
                                  "aliases": [],
                                  "description": "Set min delay advertisement route age.",
                                  "type": "int",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "set": {
                                  "aliases": [],
                                  "description": "Set delay route advertisements.",
                                  "type": "bool",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            },
                            "entropy_label": {
                              "aliases": [],
                              "description": "Use entropy label for entropy label capable BGP LSPs.",
                              "type": "dict",
                              "required": false,
                              "suboptions": {
                                "import": {
                                  "aliases": [],
                                  "description": "Policy to select BGP LSPs to use entropy label.",
                                  "type": "str",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "no_next_hop_validation": {
                                  "aliases": [],
                                  "description": "Don't validate next hop field against route next hop.",
                                  "type": "bool",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "set": {
                                  "aliases": [],
                                  "description": "Set entropy-label attribute.",
                                  "type": "bool",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            },
                            "explicit_null": {
                              "aliases": [],
                              "description": "Advertise explicit null.",
                              "type": "dict",
                              "required": false,
                              "suboptions": {
                                "connected_only": {
                                  "aliases": [],
                                  "description": "Advertise explicit null only for connected routes.",
                                  "type": "bool",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "set": {
                                  "aliases": [],
                                  "description": "Set explicit-null attribute.",
                                  "type": "bool",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            },
                            "extended_nexthop": {
                              "aliases": [],
                              "description": "Enable extended nexthop encoding.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "extended_nexthop_color": {
                              "aliases": [],
                              "description": "Resolve using extended color nexthop.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "graceful_restart_forwarding_state_bit": {
                              "aliases": [],
                              "description": "Specify BGP graceful restart options.",
                              "type": "str",
                              "required": false,
                              "choices": [
                                "from-fib",
                                "set"
                              ],
                              "suboptions": {}
                            },
                            "legacy_redirect_ip_action": {
                              "aliases": [],
                              "description": "Configure legacy redirect to IP support.",
                              "type": "dict",
                              "required": false,
                              "suboptions": {
                                "receive": {
                                  "aliases": [],
                                  "description": "Accept legacy encoded redirect-to-ip action attribute",
                                  "type": "bool",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "send": {
                                  "aliases": [],
                                  "description": "Advertise Redirect action as legacy redirect attribute.",
                                  "type": "bool",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "set": {
                                  "aliases": [],
                                  "description": "Set the legacy-redirect-ip-action.",
                                  "type": "bool",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            },
                            "local_ipv4_address": {
                              "aliases": [],
                              "description": "Specify local IPv4 address.",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            },
                            "loops": {
                              "aliases": [],
                              "description": "Allow local AS in received AS paths.",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "no_install": {
                              "aliases": [],
                              "description": "Dont install received routes in forwarding.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "no_validate": {
                              "aliases": [],
                              "description": "Bypass validation procedure for routes that match policy.",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            },
                            "output_queue_priority_expedited": {
                              "aliases": [],
                              "description": "Expedited queue; highest priority.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "output_queue_priority_priority": {
                              "aliases": [],
                              "description": "Output queue priority; higher is better.",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "per_group_label": {
                              "aliases": [],
                              "description": "Advertise prefixes with unique labels per group.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "per_prefix_label": {
                              "aliases": [],
                              "description": "Allocate a unique label to each advertised prefix.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "prefix_limit": {
                              "aliases": [],
                              "description": "Limit maximum number of prefixes from a peer.",
                              "type": "dict",
                              "required": false,
                              "suboptions": {
                                "forever": {
                                  "aliases": [],
                                  "description": "Idle the peer until the user intervenes.",
                                  "type": "bool",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "idle_timeout": {
                                  "aliases": [],
                                  "description": "Set idle timeout node.",
                                  "type": "bool",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "idle_timeout_value": {
                                  "aliases": [],
                                  "description": "Specify timeout before attempting to restart peer.",
                                  "type": "int",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "limit_threshold": {
                                  "aliases": [],
                                  "description": "Percentage of prefix-limit to start warnings.",
                                  "type": "int",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "maximum": {
                                  "aliases": [],
                                  "description": "Specify maximum number of prefixes from a peer.",
                                  "type": "int",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "teardown": {
                                  "aliases": [],
                                  "description": "Clear peer connection on reaching limit.",
                                  "type": "bool",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            },
                            "resolve_vpn": {
                              "aliases": [],
                              "description": "Install received NLRI in inet.3 also.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "rib": {
                              "aliases": [],
                              "description": "Select table used by labeled unicast routes.",
                              "type": "str",
                              "required": false,
                              "choices": [
                                "inet.3"
                              ],
                              "suboptions": {}
                            },
                            "ribgroup_name": {
                              "aliases": [],
                              "description": "Name of the routing table group.",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            },
                            "route_refresh_priority_expedited": {
                              "aliases": [],
                              "description": "Expedited queue; highest priority.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "route_refresh_priority_priority": {
                              "aliases": [],
                              "description": "Output queue priority; higher is better.",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "secondary_independent_resolution": {
                              "aliases": [],
                              "description": "Resolve FLOW routes in VRF table independent of VPN FLOW route.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "set": {
                              "aliases": [],
                              "description": "Set NLRI.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "strip_nexthop": {
                              "aliases": [],
                              "description": "Strip the next-hop from the outgoing flow update.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "topology": {
                              "aliases": [],
                              "description": "Multi topology routing tables.",
                              "type": "list",
                              "required": false,
                              "elements": "dict",
                              "suboptions": {
                                "community": {
                                  "aliases": [],
                                  "description": "Community to identify multi topology routes.",
                                  "type": "list",
                                  "required": false,
                                  "elements": "str",
                                  "suboptions": {}
                                },
                                "name": {
                                  "aliases": [],
                                  "description": "Specify topology name.",
                                  "type": "str",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            },
                            "traffic_statistics": {
                              "aliases": [],
                              "description": "Collect statistics for BGP label-switched paths",
                              "type": "dict",
                              "required": false,
                              "suboptions": {
                                "file": {
                                  "aliases": [],
                                  "description": "Statistics file options.",
                                  "type": "dict",
                                  "required": false,
                                  "suboptions": {
                                    "filename": {
                                      "aliases": [],
                                      "description": "Name of file in which to write trace information.",
                                      "type": "str",
                                      "required": false,
                                      "suboptions": {}
                                    },
                                    "files": {
                                      "aliases": [],
                                      "description": "Maximum number of trace files.",
                                      "type": "int",
                                      "required": false,
                                      "suboptions": {}
                                    },
                                    "no_world_readable": {
                                      "aliases": [],
                                      "description": "Don't allow any user to read the log file.",
                                      "type": "bool",
                                      "required": false,
                                      "suboptions": {}
                                    },
                                    "size": {
                                      "aliases": [],
                                      "description": "Maximum trace file size.",
                                      "type": "int",
                                      "required": false,
                                      "suboptions": {}
                                    },
                                    "world_readable": {
                                      "aliases": [],
                                      "description": "Don't allow any user to read the log file.",
                                      "type": "bool",
                                      "required": false,
                                      "suboptions": {}
                                    }
                                  }
                                },
                                "interval": {
                                  "aliases": [],
                                  "description": "Time to collect statistics (seconds).",
                                  "type": "int",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "labeled_path": {
                                  "aliases": [],
                                  "description": "Enable ingress labeled path statistics.",
                                  "type": "bool",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "set": {
                                  "aliases": [],
                                  "description": "Set traffic-statistics.",
                                  "type": "bool",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            },
                            "type": {
                              "aliases": [],
                              "description": "Specify type of NLRI.",
                              "type": "str",
                              "required": false,
                              "choices": [
                                "any",
                                "flow",
                                "labeled-unicast",
                                "multicast",
                                "segment-routing-te",
                                "unicast",
                                "signaling",
                                "auto-discovery-mspw",
                                "auto-discovery-only"
                              ],
                              "suboptions": {}
                            },
                            "withdraw_priority_expedited": {
                              "aliases": [],
                              "description": "Expedited queue; highest priority.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "withdraw_priority_priority": {
                              "aliases": [],
                              "description": "Output queue priority; higher is better.",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "afi": {
                          "aliases": [],
                          "description": "address family.",
                          "type": "str",
                          "required": false,
                          "choices": [
                            "evpn",
                            "inet",
                            "inet-mdt",
                            "inet-mvpn",
                            "inet-vpn",
                            "inet6",
                            "inet6-mvpn",
                            "inet6-vpn",
                            "iso-vpn",
                            "l2vpn",
                            "route-target",
                            "traffic-engineering"
                          ],
                          "suboptions": {}
                        }
                      }
                    },
                    "neighbor_address": {
                      "aliases": [],
                      "description": "Specify neighbor address.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                }
              }
            }
          }
        },
        "running_config": {
          "aliases": [],
          "description": "This option is used only with state I(parsed).\nThe value of this option should be the output received from the Junos device by executing the command B(show protocols bgp).\nThe state I(parsed) reads the configuration from C(running_config) option and transforms it into Ansible structured data as per the resource module's argspec and the value is then returned in the I(parsed) key within the result",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The state the configuration should be left in.\nState I(deleted) only removes BGP address family attributes that this modules manages and does not negate the BGP neighbor address family completely. Thereby, preserving address-family related configurations under BGP group neighbor context.\nTo delete the address family associated to neighbor use M(junipernetworks.junos.junos_bgp_neighbor_address_family) modules for prior cleanup.\nRefer to examples for more details.",
          "default": "merged",
          "type": "str",
          "required": false,
          "choices": [
            "merged",
            "replaced",
            "overridden",
            "deleted",
            "parsed",
            "gathered",
            "rendered"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "ncclient (>=v0.6.4)",
        "xmltodict (>=0.12.0)"
      ],
      "short_description": "Manage BGP Address Family attributes of interfaces on Junos devices.",
      "version_added": "1.3.0"
    },
    "examples": "\n# Using merged\n#\n# Before state\n# ------------\n#\n# admin# show protocols bgp\n#\n# [edit]\n\n- name: Merge Junos BGP address family configuration\n  junipernetworks.junos.junos_bgp_address_family:\n    config:\n      address_family:\n        - afi: 'evpn'\n          af_type:\n            - type: 'signaling'\n              accepted_prefix_limit:\n                maximum: 20\n                limit_threshold: 98\n                idle_timeout_value: 2001\n              damping: true\n              defer_initial_multipath_build:\n                maximum_delay: 2\n        - afi: 'inet'\n          af_type:\n            - type: 'flow'\n              legacy_redirect_ip_action:\n                send: true\n                receive: true\n              loops: 4\n              no_install: true\n              output_queue_priority_expedited: true\n              secondary_independent_resolution: true\n\n            - type: 'unicast'\n              extended_nexthop: true\n              extended_nexthop_color: true\n              local_ipv4_address: '9.9.9.9'\n\n            - type: 'labeled-unicast'\n              entropy_label:\n                no_next_hop_validation: true\n              explicit_null:\n                connected_only: true\n              per_prefix_label: true\n              per_group_label: true\n              prefix_limit:\n                maximum: 20\n                limit_threshold: 99\n                forever: true\n              resolve_vpn: true\n              rib: 'inet.3'\n              route_refresh_priority_expedited: true\n              route_refresh_priority_priority: 3\n\n            - type: 'any'\n              accepted_prefix_limit:\n                maximum: 20\n                limit_threshold: 99\n                idle_timeout_value: 2000\n              damping: true\n              defer_initial_multipath_build:\n                maximum_delay: 2\n              delay_route_advertisements:\n                max_delay_route_age: 20\n                max_delay_routing_uptime: 32000\n                min_delay_inbound_convergence: 32000\n                min_delay_routing_uptime: 23000\n              graceful_restart_forwarding_state_bit: 'from-fib'\n    state: merged\n\n# After state\n# -----------\n#\n# admin# show protocols bgp\n# family inet {\n#     unicast {\n#         local-ipv4-address 9.9.9.9;\n#         extended-nexthop;\n#         extended-nexthop-color;\n#     }\n#     flow {\n#         loops 4;\n#         no-install;\n#         output-queue-priority expedited;\n#         legacy-redirect-ip-action {\n#             receive;\n#             send;\n#         }\n#         secondary-independent-resolution;\n#     }\n#     any {\n#         accepted-prefix-limit {\n#             maximum 20;\n#             teardown 99 idle-timeout 2000;\n#         }\n#         damping;\n#         delay-route-advertisements {\n#             minimum-delay {\n#                 routing-uptime 23000;\n#                 inbound-convergence 32000;\n#             }\n#             maximum-delay {\n#                 route-age 20;\n#                 routing-uptime 32000;\n#             }\n#         }\n#         defer-initial-multipath-build {\n#             maximum-delay 2;\n#         }\n#         graceful-restart {\n#             forwarding-state-bit from-fib;\n#         }\n#     }\n#     labeled-unicast {\n#         prefix-limit {\n#             maximum 20;\n#             teardown 99 idle-timeout forever;\n#         }\n#         route-refresh-priority priority 3;\n#         per-prefix-label;\n#         per-group-label;\n#         rib {\n#             inet.3;\n#         }\n#         explicit-null connected-only;\n#         resolve-vpn;\n#         entropy-label {\n#             no-next-hop-validation;\n#         }\n#     }\n# }\n# family evpn {\n#     signaling {\n#         accepted-prefix-limit {\n#             maximum 20;\n#             teardown 98 idle-timeout 2001;\n#         }\n#         damping;\n#         defer-initial-multipath-build {\n#             maximum-delay 2;\n#         }\n#     }\n# }\n# Using replaced\n#\n# Before state\n# ------------\n#\n# admin# show protocols bgp\n# preference 2;\n# hold-time 5;\n# advertise-inactive;\n# out-delay 10;\n# bgp-error-tolerance {\n#     malformed-route-limit 40000000;\n# }\n# authentication-algorithm md5;\n# advertise-bgp-static {\n#     policy static-to-bgp;\n# }\n# family inet {\n#     unicast {\n#         local-ipv4-address 9.9.9.9;\n#         extended-nexthop;\n#         extended-nexthop-color;\n#     }\n#     flow {\n#         loops 4;\n#         no-install;\n#         output-queue-priority expedited;\n#         legacy-redirect-ip-action {\n#             receive;\n#             send;\n#         }\n#         secondary-independent-resolution;\n#     }\n#     any {\n#         accepted-prefix-limit {\n#             maximum 20;\n#             teardown 99 idle-timeout 2000;\n#         }\n#         damping;\n#         delay-route-advertisements {\n#             minimum-delay {\n#                 routing-uptime 23000;\n#                 inbound-convergence 32000;\n#             }\n#             maximum-delay {\n#                 route-age 20;\n#                 routing-uptime 32000;\n#             }\n#         }\n#         defer-initial-multipath-build {\n#             maximum-delay 2;\n#         }\n#         graceful-restart {\n#             forwarding-state-bit from-fib;\n#         }\n#     }\n#     labeled-unicast {\n#         prefix-limit {\n#             maximum 20;\n#             teardown 99 idle-timeout forever;\n#         }\n#         route-refresh-priority priority 3;\n#         per-prefix-label;\n#         per-group-label;\n#         rib {\n#             inet.3;\n#         }\n#         explicit-null connected-only;\n#         resolve-vpn;\n#         entropy-label {\n#             no-next-hop-validation;\n#         }\n#     }\n# }\n# family evpn {\n#     signaling {\n#         accepted-prefix-limit {\n#             maximum 20;\n#             teardown 98 idle-timeout 2001;\n#         }\n#         damping;\n#         defer-initial-multipath-build {\n#             maximum-delay 2;\n#         }\n#     }\n# }\n\n- name: Replace existing Junos BGP address family config with provided config\n  junipernetworks.junos.junos_bgp_address_family:\n   config:\n     address_family:\n       - afi: 'evpn'\n         af_type:\n           - type: 'signaling'\n             accepted_prefix_limit:\n               maximum: 21\n               limit_threshold: 99\n               idle_timeout_value: 2002\n             delay_route_advertisements:\n               max_delay_route_age: 20\n               max_delay_routing_uptime: 32000\n               min_delay_inbound_convergence: 32000\n               min_delay_routing_uptime: 23000\n             damping: true\n   state: replaced\n\n# After state\n# -----------\n#\n# admin# show protocols bgp\n# preference 2;\n# hold-time 5;\n# advertise-inactive;\n# out-delay 10;\n# bgp-error-tolerance {\n#     malformed-route-limit 40000000;\n# }\n# authentication-algorithm md5;\n# advertise-bgp-static {\n#     policy static-to-bgp;\n# }\n# family inet {\n#     unicast {\n#         local-ipv4-address 9.9.9.9;\n#         extended-nexthop;\n#         extended-nexthop-color;\n#     }\n#     flow {\n#         loops 4;\n#         no-install;\n#         output-queue-priority expedited;\n#         legacy-redirect-ip-action {\n#             receive;\n#             send;\n#         }\n#         secondary-independent-resolution;\n#     }\n#     any {\n#         accepted-prefix-limit {\n#             maximum 20;\n#             teardown 99 idle-timeout 2000;\n#         }\n#         damping;\n#         delay-route-advertisements {\n#             minimum-delay {\n#                 routing-uptime 23000;\n#                 inbound-convergence 32000;\n#             }\n#             maximum-delay {\n#                 route-age 20;\n#                 routing-uptime 32000;\n#             }\n#         }\n#         defer-initial-multipath-build {\n#             maximum-delay 2;\n#         }\n#         graceful-restart {\n#             forwarding-state-bit from-fib;\n#         }\n#     }\n#     labeled-unicast {\n#         prefix-limit {\n#             maximum 20;\n#             teardown 99 idle-timeout forever;\n#         }\n#         route-refresh-priority priority 3;\n#         per-prefix-label;\n#         per-group-label;\n#         rib {\n#             inet.3;\n#         }\n#         explicit-null connected-only;\n#         resolve-vpn;\n#         entropy-label {\n#             no-next-hop-validation;\n#         }\n#     }\n# }\n# family evpn {\n#     signaling {\n#         accepted-prefix-limit {\n#             maximum 21;\n#             teardown 99 idle-timeout 2002;\n#         }\n#         damping;\n#         delay-route-advertisements {\n#             minimum-delay {\n#                 routing-uptime 23000;\n#                 inbound-convergence 32000;\n#             }\n#             maximum-delay {\n#                 route-age 20;\n#                 routing-uptime 32000;\n#             }\n#         }\n#     }\n# }\n# Using overridden\n#\n# Before state\n# ------------\n#\n# admin# show protocols bgp\n# family inet {\n#     unicast {\n#         local-ipv4-address 9.9.9.9;\n#         extended-nexthop;\n#         extended-nexthop-color;\n#     }\n#     flow {\n#         loops 4;\n#         no-install;\n#         output-queue-priority expedited;\n#         legacy-redirect-ip-action {\n#             receive;\n#             send;\n#         }\n#         secondary-independent-resolution;\n#     }\n#     any {\n#         accepted-prefix-limit {\n#             maximum 20;\n#             teardown 99 idle-timeout 2000;\n#         }\n#         damping;\n#         delay-route-advertisements {\n#             minimum-delay {\n#                 routing-uptime 23000;\n#                 inbound-convergence 32000;\n#             }\n#             maximum-delay {\n#                 route-age 20;\n#                 routing-uptime 32000;\n#             }\n#         }\n#         defer-initial-multipath-build {\n#             maximum-delay 2;\n#         }\n#         graceful-restart {\n#             forwarding-state-bit from-fib;\n#         }\n#     }\n#     labeled-unicast {\n#         prefix-limit {\n#             maximum 20;\n#             teardown 99 idle-timeout forever;\n#         }\n#         route-refresh-priority priority 3;\n#         per-prefix-label;\n#         per-group-label;\n#         rib {\n#             inet.3;\n#         }\n#         explicit-null connected-only;\n#         resolve-vpn;\n#         entropy-label {\n#             no-next-hop-validation;\n#         }\n#     }\n# }\n# family evpn {\n#     signaling {\n#         accepted-prefix-limit {\n#             maximum 20;\n#             teardown 98 idle-timeout 2001;\n#         }\n#         damping;\n#         defer-initial-multipath-build {\n#             maximum-delay 2;\n#         }\n#     }\n# }\n\n- name: Override Junos BGP address family config\n  junipernetworks.junos.junos_bgp_address_family:\n   config:\n     address_family:\n       - afi: 'evpn'\n         af_type:\n           - type: 'signaling'\n             accepted_prefix_limit:\n               maximum: 21\n               limit_threshold: 99\n               idle_timeout_value: 2002\n             delay_route_advertisements:\n               max_delay_route_age: 20\n               max_delay_routing_uptime: 32000\n               min_delay_inbound_convergence: 32000\n               min_delay_routing_uptime: 23000\n             damping: true\n   state: overridden\n\n# After state\n# -----------\n#\n# admin# show protocols bgp\n# family evpn {\n#     signaling {\n#         accepted-prefix-limit {\n#             maximum 21;\n#             teardown 99 idle-timeout 2002;\n#         }\n#         damping;\n#         delay-route-advertisements {\n#             minimum-delay {\n#                 routing-uptime 23000;\n#                 inbound-convergence 32000;\n#             }\n#             maximum-delay {\n#                 route-age 20;\n#                 routing-uptime 32000;\n#             }\n#         }\n#     }\n# }\n\n# Using deleted\n#\n# Before state\n# ------------\n#\n# admin# show protocols bgp\n# preference 2;\n# hold-time 5;\n# advertise-inactive;\n# out-delay 10;\n# family inet {\n#     unicast {\n#         local-ipv4-address 9.9.9.9;\n#         extended-nexthop;\n#         extended-nexthop-color;\n#     }\n#     flow {\n#         loops 4;\n#         no-install;\n#         output-queue-priority expedited;\n#         legacy-redirect-ip-action {\n#             receive;\n#             send;\n#         }\n#         secondary-independent-resolution;\n#     }\n#     any {\n#         accepted-prefix-limit {\n#             maximum 20;\n#             teardown 99 idle-timeout 2000;\n#         }\n#         damping;\n#         delay-route-advertisements {\n#             minimum-delay {\n#                 routing-uptime 23000;\n#                 inbound-convergence 32000;\n#             }\n#             maximum-delay {\n#                 route-age 20;\n#                 routing-uptime 32000;\n#             }\n#         }\n#         defer-initial-multipath-build {\n#             maximum-delay 2;\n#         }\n#         graceful-restart {\n#             forwarding-state-bit from-fib;\n#         }\n#     }\n#     labeled-unicast {\n#         prefix-limit {\n#             maximum 20;\n#             teardown 99 idle-timeout forever;\n#         }\n#         route-refresh-priority priority 3;\n#         per-prefix-label;\n#         per-group-label;\n#         rib {\n#             inet.3;\n#         }\n#         explicit-null connected-only;\n#         resolve-vpn;\n#         entropy-label {\n#             no-next-hop-validation;\n#         }\n#     }\n# }\n# family evpn {\n#     signaling {\n#         accepted-prefix-limit {\n#             maximum 20;\n#             teardown 98 idle-timeout 2001;\n#         }\n#         damping;\n#         defer-initial-multipath-build {\n#             maximum-delay 2;\n#         }\n#     }\n# }\n\n- name: Delete Junos BGP address family config based on the afi\n  junipernetworks.junos.junos_bgp_address_family:\n   config:\n    address_family:\n      - afi: 'inet'\n   state: deleted\n\n# After state\n# -----------\n#\n# admin# show protocols bgp\n# preference 2;\n# hold-time 5;\n# advertise-inactive;\n# out-delay 10;\n# family evpn {\n#     signaling {\n#         accepted-prefix-limit {\n#             maximum 20;\n#             teardown 98 idle-timeout 2001;\n#         }\n#         damping;\n#         defer-initial-multipath-build {\n#             maximum-delay 2;\n#         }\n#     }\n# }\n\n# Using deleted\n#\n# Before state\n# ------------\n#\n# admin# show protocols bgp\n# preference 2;\n# hold-time 5;\n# advertise-inactive;\n# out-delay 10;\n# family inet {\n#     unicast {\n#         local-ipv4-address 9.9.9.9;\n#         extended-nexthop;\n#         extended-nexthop-color;\n#     }\n#     flow {\n#         loops 4;\n#         no-install;\n#         output-queue-priority expedited;\n#         legacy-redirect-ip-action {\n#             receive;\n#             send;\n#         }\n#         secondary-independent-resolution;\n#     }\n#     any {\n#         accepted-prefix-limit {\n#             maximum 20;\n#             teardown 99 idle-timeout 2000;\n#         }\n#         damping;\n#         delay-route-advertisements {\n#             minimum-delay {\n#                 routing-uptime 23000;\n#                 inbound-convergence 32000;\n#             }\n#             maximum-delay {\n#                 route-age 20;\n#                 routing-uptime 32000;\n#             }\n#         }\n#         defer-initial-multipath-build {\n#             maximum-delay 2;\n#         }\n#         graceful-restart {\n#             forwarding-state-bit from-fib;\n#         }\n#     }\n#     labeled-unicast {\n#         prefix-limit {\n#             maximum 20;\n#             teardown 99 idle-timeout forever;\n#         }\n#         route-refresh-priority priority 3;\n#         per-prefix-label;\n#         per-group-label;\n#         rib {\n#             inet.3;\n#         }\n#         explicit-null connected-only;\n#         resolve-vpn;\n#         entropy-label {\n#             no-next-hop-validation;\n#         }\n#     }\n# }\n# family evpn {\n#     signaling {\n#         accepted-prefix-limit {\n#             maximum 20;\n#             teardown 98 idle-timeout 2001;\n#         }\n#         damping;\n#         defer-initial-multipath-build {\n#             maximum-delay 2;\n#         }\n#     }\n# }\n\n- name: Delete complete Junos BGP address family config\n  junipernetworks.junos.junos_bgp_address_family:\n   config:\n   state: deleted\n\n# After state\n# -----------\n#\n# admin# show protocols bgp\n# preference 2;\n# hold-time 5;\n# advertise-inactive;\n# out-delay 10;\n\n\n# Using gathered\n#\n# Before state\n# ------------\n#\n# admin# show protocols bgp\n# preference 2;\n# hold-time 5;\n# advertise-inactive;\n# out-delay 10;\n# family inet {\n#     unicast {\n#         local-ipv4-address 9.9.9.9;\n#         extended-nexthop;\n#         extended-nexthop-color;\n#     }\n#     flow {\n#         loops 4;\n#         no-install;\n#         output-queue-priority expedited;\n#         legacy-redirect-ip-action {\n#             receive;\n#             send;\n#         }\n#         secondary-independent-resolution;\n#     }\n#     any {\n#         accepted-prefix-limit {\n#             maximum 20;\n#             teardown 99 idle-timeout 2000;\n#         }\n#         damping;\n#         delay-route-advertisements {\n#             minimum-delay {\n#                 routing-uptime 23000;\n#                 inbound-convergence 32000;\n#             }\n#             maximum-delay {\n#                 route-age 20;\n#                 routing-uptime 32000;\n#             }\n#         }\n#         defer-initial-multipath-build {\n#             maximum-delay 2;\n#         }\n#         graceful-restart {\n#             forwarding-state-bit from-fib;\n#         }\n#     }\n#     labeled-unicast {\n#         prefix-limit {\n#             maximum 20;\n#             teardown 99 idle-timeout forever;\n#         }\n#         route-refresh-priority priority 3;\n#         per-prefix-label;\n#         per-group-label;\n#         rib {\n#             inet.3;\n#         }\n#         explicit-null connected-only;\n#         resolve-vpn;\n#         entropy-label {\n#             no-next-hop-validation;\n#         }\n#     }\n# }\n# family evpn {\n#     signaling {\n#         accepted-prefix-limit {\n#             maximum 20;\n#             teardown 98 idle-timeout 2001;\n#         }\n#         damping;\n#         defer-initial-multipath-build {\n#             maximum-delay 2;\n#         }\n#     }\n# }\n\n- name: Gather Junos BGP address family config\n  junipernetworks.junos.junos_bgp_address_family:\n    config:\n    state: gathered\n#\n#\n# -------------------------\n# Module Execution Result\n# -------------------------\n#\n#    \"gathered\": {\n#         \"address_family\": [\n#             {\n#                 \"af_type\": [\n#                     {\n#                         \"accepted_prefix_limit\": {\n#                             \"idle_timeout_value\": 2001,\n#                             \"limit_threshold\": 98,\n#                             \"maximum\": 20\n#                         },\n#                         \"damping\": true,\n#                         \"defer_initial_multipath_build\": {\n#                             \"maximum_delay\": 2\n#                         },\n#                         \"type\": \"signaling\"\n#                     }\n#                 ],\n#                 \"afi\": \"evpn\"\n#             },\n#             {\n#                 \"af_type\": [\n#                     {\n#                         \"accepted_prefix_limit\": {\n#                             \"idle_timeout_value\": 2000,\n#                             \"limit_threshold\": 99,\n#                             \"maximum\": 20\n#                         },\n#                         \"damping\": true,\n#                         \"defer_initial_multipath_build\": {\n#                             \"maximum_delay\": 2\n#                         },\n#                         \"delay_route_advertisements\": {\n#                             \"max_delay_route_age\": 20,\n#                             \"max_delay_routing_uptime\": 32000,\n#                             \"min_delay_inbound_convergence\": 32000,\n#                             \"min_delay_routing_uptime\": 23000\n#                         },\n#                         \"graceful_restart_forwarding_state_bit\": \"from-fib\",\n#                         \"type\": \"any\"\n#                     },\n#                     {\n#                         \"legacy_redirect_ip_action\": {\n#                             \"receive\": true,\n#                             \"send\": true\n#                         },\n#                         \"loops\": 4,\n#                         \"no_install\": true,\n#                         \"output_queue_priority_expedited\": true,\n#                         \"secondary_independent_resolution\": true,\n#                         \"type\": \"flow\"\n#                     },\n#                     {\n#                         \"entropy_label\": {\n#                             \"no_next_hop_validation\": true\n#                         },\n#                         \"explicit_null\": {\n#                             \"connected_only\": true\n#                         },\n#                         \"per_group_label\": true,\n#                         \"per_prefix_label\": true,\n#                         \"prefix_limit\": {\n#                             \"forever\": true,\n#                             \"limit_threshold\": 99,\n#                             \"maximum\": 20\n#                         },\n#                         \"resolve_vpn\": true,\n#                         \"rib\": \"inet.3\",\n#                         \"route_refresh_priority_priority\": 3,\n#                         \"type\": \"labeled-unicast\"\n#                     },\n#                     {\n#                         \"extended_nexthop\": true,\n#                         \"extended_nexthop_color\": true,\n#                         \"local_ipv4_address\": \"9.9.9.9\",\n#                         \"type\": \"unicast\"\n#                     }\n#                 ],\n#                 \"afi\": \"inet\"\n#             }\n#         ]\n#     }\n#\n# Using parsed\n# parsed.cfg\n# ------------\n# <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n# <rpc-reply message-id=\"urn:uuid:0cadb4e8-5bba-47f4-986e-72906227007f\">\n#     <configuration changed-seconds=\"1590139550\" changed-localtime=\"2020-05-22 09:25:50 UTC\">\n#         <version>18.4R1-S2.4</version>\n#         <protocols>\n#             <bgp>\n#                 <preference>2</preference>\n#                 <hold-time>5</hold-time>\n#                 <advertise-inactive/>\n#                 <out-delay>10</out-delay>\n#                 <family>\n#                     <inet>\n#                         <unicast>\n#                             <local-ipv4-address>9.9.9.9</local-ipv4-address>\n#                             <extended-nexthop/>\n#                             <extended-nexthop-color/>\n#                         </unicast>\n#                         <flow>\n#                             <loops>\n#                                 <loops>4</loops>\n#                             </loops>\n#                             <no-install/>\n#                             <output-queue-priority>\n#                                 <expedited/>\n#                             </output-queue-priority>\n#                             <legacy-redirect-ip-action>\n#                                 <receive/>\n#                                 <send/>\n#                             </legacy-redirect-ip-action>\n#                             <secondary-independent-resolution/>\n#                         </flow>\n#                         <any>\n#                             <accepted-prefix-limit>\n#                                 <maximum>20</maximum>\n#                                 <teardown>\n#                                     <limit-threshold>99</limit-threshold>\n#                                     <idle-timeout>\n#                                         <timeout>2000</timeout>\n#                                     </idle-timeout>\n#                                 </teardown>\n#                             </accepted-prefix-limit>\n#                             <damping/>\n#                             <delay-route-advertisements>\n#                                 <minimum-delay>\n#                                     <routing-uptime>23000</routing-uptime>\n#                                     <inbound-convergence>32000</inbound-convergence>\n#                                 </minimum-delay>\n#                                 <maximum-delay>\n#                                     <route-age>20</route-age>\n#                                     <routing-uptime>32000</routing-uptime>\n#                                 </maximum-delay>\n#                             </delay-route-advertisements>\n#                             <defer-initial-multipath-build>\n#                                 <maximum-delay>2</maximum-delay>\n#                             </defer-initial-multipath-build>\n#                             <graceful-restart>\n#                                 <forwarding-state-bit>from-fib</forwarding-state-bit>\n#                             </graceful-restart>\n#                         </any>\n#                         <labeled-unicast>\n#                             <prefix-limit>\n#                                 <maximum>20</maximum>\n#                                 <teardown>\n#                                     <limit-threshold>99</limit-threshold>\n#                                     <idle-timeout>\n#                                         <forever/>\n#                                     </idle-timeout>\n#                                 </teardown>\n#                             </prefix-limit>\n#                             <route-refresh-priority>\n#                                 <priority>3</priority>\n#                             </route-refresh-priority>\n#                             <per-prefix-label/>\n#                             <per-group-label/>\n#                             <rib>\n#                                 <inet.3/>\n#                             </rib>\n#                             <explicit-null>\n#                                 <connected-only/>\n#                             </explicit-null>\n#                             <resolve-vpn/>\n#                             <entropy-label>\n#                                 <no-next-hop-validation/>\n#                             </entropy-label>\n#                         </labeled-unicast>\n#                     </inet>\n#                     <evpn>\n#                         <signaling>\n#                             <accepted-prefix-limit>\n#                                 <maximum>20</maximum>\n#                                 <teardown>\n#                                     <limit-threshold>98</limit-threshold>\n#                                     <idle-timeout>\n#                                         <timeout>2001</timeout>\n#                                     </idle-timeout>\n#                                 </teardown>\n#                             </accepted-prefix-limit>\n#                             <damping/>\n#                             <defer-initial-multipath-build>\n#                                 <maximum-delay>2</maximum-delay>\n#                             </defer-initial-multipath-build>\n#                         </signaling>\n#                     </evpn>\n#                 </family>\n#             </bgp>\n#             <ospf3>\n#                 <area>\n#                     <name>0.0.0.100</name>\n#                     <stub>\n#                         <default-metric>200</default-metric>\n#                     </stub>\n#                     <interface>\n#                         <name>so-0/0/0.0</name>\n#                         <metric>5</metric>\n#                         <priority>3</priority>\n#                     </interface>\n#                 </area>\n#             </ospf3>\n#         </protocols>\n#         <routing-options>\n#             <static>\n#                 <route>\n#                     <name>172.16.17.0/24</name>\n#                     <discard />\n#                 </route>\n#             </static>\n#             <router-id>10.200.16.75</router-id>\n#             <autonomous-system>\n#                 <as-number>65432</as-number>\n#             </autonomous-system>\n#         </routing-options>\n#     </configuration>\n# </rpc-reply>\n\n\n- name: Parsed the bgp address family running config to get the facts\n  junipernetworks.junos.junos_bgp_address_family:\n    running_config: \"{{ lookup('file', './parsed.cfg') }}\"\n    state: parsed\n#\n#\n# -------------------------\n# Module Execution Result\n# -------------------------\n#\n#\n# \"parsed\":  {\n#         \"address_family\": [\n#             {\n#                 \"af_type\": [\n#                     {\n#                         \"accepted_prefix_limit\": {\n#                             \"idle_timeout_value\": 2001,\n#                             \"limit_threshold\": 98,\n#                             \"maximum\": 20\n#                         },\n#                         \"damping\": true,\n#                         \"defer_initial_multipath_build\": {\n#                             \"maximum_delay\": 2\n#                         },\n#                         \"type\": \"signaling\"\n#                     }\n#                 ],\n#                 \"afi\": \"evpn\"\n#             },\n#             {\n#                 \"af_type\": [\n#                     {\n#                         \"accepted_prefix_limit\": {\n#                             \"idle_timeout_value\": 2000,\n#                             \"limit_threshold\": 99,\n#                             \"maximum\": 20\n#                         },\n#                         \"damping\": true,\n#                         \"defer_initial_multipath_build\": {\n#                             \"maximum_delay\": 2\n#                         },\n#                         \"delay_route_advertisements\": {\n#                             \"max_delay_route_age\": 20,\n#                             \"max_delay_routing_uptime\": 32000,\n#                             \"min_delay_inbound_convergence\": 32000,\n#                             \"min_delay_routing_uptime\": 23000\n#                         },\n#                         \"graceful_restart_forwarding_state_bit\": \"from-fib\",\n#                         \"type\": \"any\"\n#                     },\n#                     {\n#                         \"legacy_redirect_ip_action\": {\n#                             \"receive\": true,\n#                             \"send\": true\n#                         },\n#                         \"loops\": 4,\n#                         \"no_install\": true,\n#                         \"output_queue_priority_expedited\": true,\n#                         \"secondary_independent_resolution\": true,\n#                         \"type\": \"flow\"\n#                     },\n#                     {\n#                         \"entropy_label\": {\n#                             \"no_next_hop_validation\": true\n#                         },\n#                         \"explicit_null\": {\n#                             \"connected_only\": true\n#                         },\n#                         \"per_group_label\": true,\n#                         \"per_prefix_label\": true,\n#                         \"prefix_limit\": {\n#                             \"forever\": true,\n#                             \"limit_threshold\": 99,\n#                             \"maximum\": 20\n#                         },\n#                         \"resolve_vpn\": true,\n#                         \"rib\": \"inet.3\",\n#                         \"route_refresh_priority_priority\": 3,\n#                         \"type\": \"labeled-unicast\"\n#                     },\n#                     {\n#                         \"extended_nexthop\": true,\n#                         \"extended_nexthop_color\": true,\n#                         \"local_ipv4_address\": \"9.9.9.9\",\n#                         \"type\": \"unicast\"\n#                     }\n#                 ],\n#                 \"afi\": \"inet\"\n#             }\n#         ]\n#     }\n# Using rendered\n#\n#\n- name: Render the commands for provided  configuration\n  junipernetworks.junos.junos_bgp_address_family:\n    config:\n      address_family:\n        - afi: 'evpn'\n          af_type:\n            - type: 'signaling'\n              accepted_prefix_limit:\n                maximum: 20\n                limit_threshold: 98\n                idle_timeout_value: 2001\n              damping: true\n              defer_initial_multipath_build:\n                maximum_delay: 2\n        - afi: 'inet'\n          af_type:\n            - type: 'flow'\n              legacy_redirect_ip_action:\n                send: true\n                receive: true\n              loops: 4\n              no_install: true\n              output_queue_priority_expedited: true\n              secondary_independent_resolution: true\n\n            - type: 'unicast'\n              extended_nexthop: true\n              extended_nexthop_color: true\n              local_ipv4_address: '9.9.9.9'\n\n            - type: 'labeled-unicast'\n              entropy_label:\n                no_next_hop_validation: true\n              explicit_null:\n                connected_only: true\n              per_prefix_label: true\n              per_group_label: true\n              prefix_limit:\n                maximum: 20\n                limit_threshold: 99\n                forever: true\n              resolve_vpn: true\n              rib: 'inet.3'\n              route_refresh_priority_expedited: true\n              route_refresh_priority_priority: 3\n\n            - type: 'any'\n              accepted_prefix_limit:\n                maximum: 20\n                limit_threshold: 99\n                idle_timeout_value: 2000\n              damping: true\n              defer_initial_multipath_build:\n                maximum_delay: 2\n              delay_route_advertisements:\n                max_delay_route_age: 20\n                max_delay_routing_uptime: 32000\n                min_delay_inbound_convergence: 32000\n                min_delay_routing_uptime: 23000\n              graceful_restart_forwarding_state_bit: 'from-fib'\n    state: rendered\n\n#\n#\n# -------------------------\n# Module Execution Result\n# -------------------------\n#\n#\n# \"rendered\": \"<nc:protocols xmlns:nc=\"urn:ietf:params:xml:ns:netconf:base:1.0\">\n# <nc:bgp><nc:family><nc:evpn><nc:signaling><nc:accepted-prefix-limit><nc:maximum>20</nc:maximum>\n# <nc:teardown><nc:limit-threshold>98</nc:limit-threshold><nc:idle-timeout><nc:timeout>2001</nc:timeout>\n# </nc:idle-timeout></nc:teardown></nc:accepted-prefix-limit><nc:damping/><nc:defer-initial-multipath-build>\n# <nc:maximum-delay>2</nc:maximum-delay></nc:defer-initial-multipath-build></nc:signaling>\n# </nc:evpn><nc:inet><nc:flow><nc:legacy-redirect-ip-action><nc:send/><nc:receive/>\n# </nc:legacy-redirect-ip-action><nc:loops>4</nc:loops><nc:no-install/>\n# <nc:output-queue-priority><nc:expedited/></nc:output-queue-priority>\n# <nc:secondary-independent-resolution/></nc:flow><nc:unicast><nc:extended-nexthop/>\n# <nc:extended-nexthop-color/><nc:local-ipv4-address>9.9.9.9</nc:local-ipv4-address>\n# </nc:unicast><nc:labeled-unicast><nc:entropy-label><nc:no-next-hop-validation/>\n# </nc:entropy-label><nc:explicit-null><nc:connected-only/></nc:explicit-null>\n# <nc:per-prefix-label/><nc:per-group-label/><nc:prefix-limit><nc:maximum>20</nc:maximum>\n# <nc:teardown>99<nc:idle-timeout><nc:forever/></nc:idle-timeout></nc:teardown>\n# </nc:prefix-limit><nc:resolve-vpn/><nc:rib><nc:inet.3/></nc:rib><nc:route-refresh-priority>\n# <nc:expedited/><nc:priority>3</nc:priority></nc:route-refresh-priority></nc:labeled-unicast>\n# <nc:any><nc:accepted-prefix-limit><nc:maximum>20</nc:maximum><nc:teardown>\n# <nc:limit-threshold>99</nc:limit-threshold><nc:idle-timeout><nc:timeout>2000</nc:timeout>\n# </nc:idle-timeout></nc:teardown></nc:accepted-prefix-limit><nc:damping/>\n# <nc:defer-initial-multipath-build><nc:maximum-delay>2</nc:maximum-delay>\n# </nc:defer-initial-multipath-build><nc:delay-route-advertisements>\n# <nc:maximum-delay><nc:route-age>20</nc:route-age><nc:routing-uptime>32000</nc:routing-uptime>\n# </nc:maximum-delay><nc:minimum-delay><nc:inbound-convergence>32000</nc:inbound-convergence>\n# <nc:routing-uptime>23000</nc:routing-uptime></nc:minimum-delay></nc:delay-route-advertisements>\n# <nc:graceful-restart><nc:forwarding-state-bit>from-fib</nc:forwarding-state-bit>\n# </nc:graceful-restart></nc:any></nc:inet></nc:family></nc:bgp></nc:protocols>\"\n\n"
  },
  "junipernetworks.junos.junos_bgp_global": {
    "doc": {
      "description": "This module manages global bgp configuration on devices running Juniper JUNOS.",
      "has_action": true,
      "notes": "This module requires the netconf system service be enabled on the device being managed.\nThis module works with connection C(netconf). See L(the Junos OS Platform Options,../network/user_guide/platform_junos.html).\nTested against JunOS v18.4R1",
      "options": {
        "config": {
          "aliases": [],
          "description": "A list of BGP process configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "accept_remote_nexthop": {
              "aliases": [],
              "description": "Allow import policy to specify a non-directly connected next-hop.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "add_path_display_ipv4_address": {
              "aliases": [],
              "description": "Display add-path path-id in IPv4 address format.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "advertise_bgp_static": {
              "aliases": [],
              "description": "Advertise bgp-static routes.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "policy": {
                  "aliases": [],
                  "description": "Specify static route advertisement policy.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "set": {
                  "aliases": [],
                  "description": "Set Advertise bgp-static routes.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "advertise_external": {
              "aliases": [],
              "description": "Advertise best external routes.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "conditional": {
                  "aliases": [],
                  "description": "Route matches active route upto med-comparison rule.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "set": {
                  "aliases": [],
                  "description": "Set Advertise best external routes.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "advertise_from_main_vpn_tables": {
              "aliases": [],
              "description": "Advertise VPN routes from bgp.Xvpn.0 tables in master instance.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "advertise_inactive": {
              "aliases": [],
              "description": "Advertise inactive routes.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "advertise_peer_as": {
              "aliases": [],
              "description": "Advertise routes received from the same autonomous system.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "as_number": {
              "aliases": [],
              "description": "Specify Autonomous system number.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "asdot_notation": {
              "aliases": [],
              "description": "Enable AS-Dot notation to display true 4 byte AS numbers.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "authentication_algorithm": {
              "aliases": [],
              "description": "Specify authentication algorithm name.",
              "type": "str",
              "required": false,
              "choices": [
                "aes-128-cmac-96",
                "hmac-sha-1-96",
                "md5"
              ],
              "suboptions": {}
            },
            "authentication_key": {
              "aliases": [],
              "description": "Specify MD5 authentication key.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "authentication_key_chain": {
              "aliases": [],
              "description": "Specify authentication key chain name.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "bfd_liveness_detection": {
              "aliases": [],
              "description": "Bidirectional Forwarding Detection (BFD) options.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "authentication": {
                  "aliases": [],
                  "description": "Authentication options.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "algorithm": {
                      "aliases": [],
                      "description": "Specify algorithm name.",
                      "type": "str",
                      "required": false,
                      "choices": [
                        "keyed-md5",
                        "keyed-sha-1",
                        "meticulous-keyed-md5",
                        "meticulous-keyed-sha-1",
                        "simple-password"
                      ],
                      "suboptions": {}
                    },
                    "key_chain": {
                      "aliases": [],
                      "description": "Specify Key chain name.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "loose_check": {
                      "aliases": [],
                      "description": "Verify authentication only if authentication is negotiated.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "detection_time": {
                  "aliases": [],
                  "description": "Specify Detection-time optionss.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "threshold": {
                      "aliases": [],
                      "description": "Specify high detection-time triggering a trap (milliseconds).",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "holddown_interval": {
                  "aliases": [],
                  "description": "Specify time to hold the session-UP notification to the client.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "minimum_interval": {
                  "aliases": [],
                  "description": "Specify minimum transmit and receive interval.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "minimum_receive_interval": {
                  "aliases": [],
                  "description": "Specify minimum receive interval.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "multiplier": {
                  "aliases": [],
                  "description": "Specify detection time multiplier.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "no_adaptation": {
                  "aliases": [],
                  "description": "Disable adaptation.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "session_mode": {
                  "aliases": [],
                  "description": "BFD single-hop or multihop session-mode.",
                  "type": "str",
                  "required": false,
                  "choices": [
                    "automatic",
                    "multihop",
                    "single-hop"
                  ],
                  "suboptions": {}
                },
                "transmit_interval": {
                  "aliases": [],
                  "description": "Transmit-interval options.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "minimum_interval": {
                      "aliases": [],
                      "description": "Specify Minimum transmit interval.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "threshold": {
                      "aliases": [],
                      "description": "Specify high transmit interval triggering a trap.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "version": {
                  "aliases": [],
                  "description": "Specify BFD protocol version number.",
                  "type": "str",
                  "required": false,
                  "choices": [
                    "0",
                    "1",
                    "automatic"
                  ],
                  "suboptions": {}
                }
              }
            },
            "bgp_error_tolerance": {
              "aliases": [],
              "description": "Handle BGP malformed updates softly.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "malformed_route_limit": {
                  "aliases": [],
                  "description": "Maximum number of malformed routes from a peer.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "malformed_update_log_interval": {
                  "aliases": [],
                  "description": "Time used when logging malformed update.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "no_malformed_route_limit": {
                  "aliases": [],
                  "description": "Specify no malformed route limit.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "set": {
                  "aliases": [],
                  "description": "Set BGP malformed updates softly.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "bmp": {
              "aliases": [],
              "description": "Specific settings to override the routing-options settings.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "monitor": {
                  "aliases": [],
                  "description": "Enable/Disable monitoring.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "route_monitoring": {
                  "aliases": [],
                  "description": "Control route monitoring settings.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "none": {
                      "aliases": [],
                      "description": "Do not send route montoring messages.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "post_policy": {
                      "aliases": [],
                      "description": "Send post policy route montoring messages.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "post_policy_exclude_non_eligible": {
                      "aliases": [],
                      "description": "Send post policy route montoring messages and exclude unresolved routes, etc.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "post_policy_exclude_non_feasible": {
                      "aliases": [],
                      "description": "Send pre policy route montoring messages and exclude looped routes, etc.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "pre_policy": {
                      "aliases": [],
                      "description": "Send pre policy route montoring messages.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                }
              }
            },
            "cluster_id": {
              "aliases": [],
              "description": "Specify cluster identifier.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "damping": {
              "aliases": [],
              "description": "Enable route flap damping.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "description": {
              "aliases": [],
              "description": "Specify text description.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "disable": {
              "aliases": [],
              "description": "Disable BGP.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "egress_te": {
              "aliases": [],
              "description": "Use Egress Peering traffic engineering.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "backup_path": {
                  "aliases": [],
                  "description": "The 'egress-te-backup-paths template' to use for this peer.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "set": {
                  "aliases": [],
                  "description": "Set the attribute.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "egress_te_backup_paths": {
              "aliases": [],
              "description": "Backup-path for Egress-TE peer interface failure.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "templates": {
                  "aliases": [],
                  "description": "Specify Backup-path template.",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "ip_forward": {
                      "aliases": [],
                      "description": "Use IP-forward backup path for Egress TE.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "rti_name": {
                          "aliases": [],
                          "description": "Routing-instance to use as IP forward backup-path.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "set": {
                          "aliases": [],
                          "description": "Set use IP-forward backup path for Egress TE.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "path_name": {
                      "aliases": [],
                      "description": "Name of Egress-TE backup path.",
                      "type": "str",
                      "required": true,
                      "suboptions": {}
                    },
                    "peers": {
                      "aliases": [],
                      "description": "Specify address of BGP peer to use as backup next-hop.",
                      "type": "list",
                      "required": false,
                      "elements": "str",
                      "suboptions": {}
                    },
                    "remote_nexthop": {
                      "aliases": [],
                      "description": "Specify address of remote-nexthop to use as backup path.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                }
              }
            },
            "egress_te_set_segment": {
              "aliases": [],
              "description": "Configure BGP-Peer-Set segment.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "egress_te_backup_segment_label": {
                  "aliases": [],
                  "description": "BGP-Peer-Set SID label value from static label pool.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "label": {
                  "aliases": [],
                  "description": "Backup segment label value from static label pool.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "name": {
                  "aliases": [],
                  "description": "The BGP-Peer-Set segment name.",
                  "type": "str",
                  "required": true,
                  "suboptions": {}
                }
              }
            },
            "egress_te_sid_stats": {
              "aliases": [],
              "description": "Create BGP-Peer-SID sensor.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "enforce_first_as": {
              "aliases": [],
              "description": "Enforce neighbor AS is the first AS in AS-PATH attribute (EBGP).",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "export": {
              "aliases": [],
              "description": "Specify export policy.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "forwarding_context": {
              "aliases": [],
              "description": "Specify routing-instance used for data-forwarding and transport-session.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "graceful_restart": {
              "aliases": [],
              "description": "BGP graceful restart options.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "disable": {
                  "aliases": [],
                  "description": "Disable graceful restart.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "dont_help_shared_fate_bfd_down": {
                  "aliases": [],
                  "description": "Honor BFD-Down(C=0) if GR-restart not in progress.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "forwarding_state_bit": {
                  "aliases": [],
                  "description": "Control forwarding-state flag negotiation.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "as_rr_client": {
                      "aliases": [],
                      "description": "As for a route reflector client.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "from_fib": {
                      "aliases": [],
                      "description": "Always use state of associated FIB(s).",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "long_lived": {
                  "aliases": [],
                  "description": "Long-lived graceful restart options.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "advertise_to_non_llgr_neighbor": {
                      "aliases": [],
                      "description": "Advertise stale routes to non-LLGR neighbors.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "omit_no_export": {
                          "aliases": [],
                          "description": "Set Advertise stale routes to non-LLGR neighbors.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "set": {
                          "aliases": [],
                          "description": "Set Advertise stale routes to non-LLGR neighbors.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "receiver_disable": {
                      "aliases": [],
                      "description": "Disable receiver (helper) functionality.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "restart_time": {
                  "aliases": [],
                  "description": "Restart time used when negotiating with a peer.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "set": {
                  "aliases": [],
                  "description": "Set BGP graceful restart options.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "stale_routes_time": {
                  "aliases": [],
                  "description": "Maximum time for which stale routes are kept.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "groups": {
              "aliases": [],
              "description": "Specify name of the group.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "accept_remote_nexthop": {
                  "aliases": [],
                  "description": "Allow import policy to specify a non-directly connected next-hop.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "add_path_display_ipv4_address": {
                  "aliases": [],
                  "description": "Display add-path path-id in IPv4 address format.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "advertise_bgp_static": {
                  "aliases": [],
                  "description": "Advertise bgp-static routes.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "policy": {
                      "aliases": [],
                      "description": "Specify static route advertisement policy.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "set": {
                      "aliases": [],
                      "description": "Set Advertise bgp-static routes.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "advertise_external": {
                  "aliases": [],
                  "description": "Advertise best external routes.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "conditional": {
                      "aliases": [],
                      "description": "Route matches active route upto med-comparison rule.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "set": {
                      "aliases": [],
                      "description": "Set Advertise best external routes.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "advertise_inactive": {
                  "aliases": [],
                  "description": "Advertise inactive routes.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "advertise_peer_as": {
                  "aliases": [],
                  "description": "Advertise routes received from the same autonomous system.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "allow": {
                  "aliases": [],
                  "description": "Configure peer connections for specific networks.",
                  "type": "list",
                  "required": false,
                  "elements": "str",
                  "suboptions": {}
                },
                "as_override": {
                  "aliases": [],
                  "description": "Replace neighbor AS number with our AS number",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "authentication_algorithm": {
                  "aliases": [],
                  "description": "Specify authentication algorithm name.",
                  "type": "str",
                  "required": false,
                  "choices": [
                    "aes-128-cmac-96",
                    "hmac-sha-1-96",
                    "md5"
                  ],
                  "suboptions": {}
                },
                "authentication_key": {
                  "aliases": [],
                  "description": "Specify MD5 authentication key.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "authentication_key_chain": {
                  "aliases": [],
                  "description": "Specify authentication key chain name.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "bfd_liveness_detection": {
                  "aliases": [],
                  "description": "Bidirectional Forwarding Detection (BFD) options.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "authentication": {
                      "aliases": [],
                      "description": "Authentication options.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "algorithm": {
                          "aliases": [],
                          "description": "Specify algorithm name.",
                          "type": "str",
                          "required": false,
                          "choices": [
                            "keyed-md5",
                            "keyed-sha-1",
                            "meticulous-keyed-md5",
                            "meticulous-keyed-sha-1",
                            "simple-password"
                          ],
                          "suboptions": {}
                        },
                        "key_chain": {
                          "aliases": [],
                          "description": "Specify Key chain name.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "loose_check": {
                          "aliases": [],
                          "description": "Verify authentication only if authentication is negotiated.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "detection_time": {
                      "aliases": [],
                      "description": "Specify Detection-time optionss.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "threshold": {
                          "aliases": [],
                          "description": "Specify high detection-time triggering a trap (milliseconds).",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "holddown_interval": {
                      "aliases": [],
                      "description": "Specify time to hold the session-UP notification to the client.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "minimum_interval": {
                      "aliases": [],
                      "description": "Specify minimum transmit and receive interval.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "minimum_receive_interval": {
                      "aliases": [],
                      "description": "Specify minimum receive interval.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "multiplier": {
                      "aliases": [],
                      "description": "Specify detection time multiplier.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "no_adaptation": {
                      "aliases": [],
                      "description": "Disable adaptation.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "session_mode": {
                      "aliases": [],
                      "description": "BFD single-hop or multihop session-mode.",
                      "type": "str",
                      "required": false,
                      "choices": [
                        "automatic",
                        "multihop",
                        "single-hop"
                      ],
                      "suboptions": {}
                    },
                    "transmit_interval": {
                      "aliases": [],
                      "description": "Transmit-interval options.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "minimum_interval": {
                          "aliases": [],
                          "description": "Specify Minimum transmit interval.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "threshold": {
                          "aliases": [],
                          "description": "Specify high transmit interval triggering a trap.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "version": {
                      "aliases": [],
                      "description": "Specify BFD protocol version number.",
                      "type": "str",
                      "required": false,
                      "choices": [
                        "0",
                        "1",
                        "automatic"
                      ],
                      "suboptions": {}
                    }
                  }
                },
                "bgp_error_tolerance": {
                  "aliases": [],
                  "description": "Handle BGP malformed updates softly.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "malformed_route_limit": {
                      "aliases": [],
                      "description": "Maximum number of malformed routes from a peer.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "malformed_update_log_interval": {
                      "aliases": [],
                      "description": "Time used when logging malformed update.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "no_malformed_route_limit": {
                      "aliases": [],
                      "description": "Specify no malformed route limit.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "set": {
                      "aliases": [],
                      "description": "Set BGP malformed updates softly.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "bmp": {
                  "aliases": [],
                  "description": "Specific settings to override the routing-options settings.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "monitor": {
                      "aliases": [],
                      "description": "Enable/Disable monitoring.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "route_monitoring": {
                      "aliases": [],
                      "description": "Control route monitoring settings.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "none": {
                          "aliases": [],
                          "description": "Do not send route montoring messages.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "post_policy": {
                          "aliases": [],
                          "description": "Send post policy route montoring messages.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "post_policy_exclude_non_eligible": {
                          "aliases": [],
                          "description": "Send post policy route montoring messages and exclude unresolved routes, etc.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "post_policy_exclude_non_feasible": {
                          "aliases": [],
                          "description": "Send pre policy route montoring messages and exclude looped routes, etc.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "pre_policy": {
                          "aliases": [],
                          "description": "Send pre policy route montoring messages.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    }
                  }
                },
                "cluster_id": {
                  "aliases": [],
                  "description": "Specify cluster identifier.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "damping": {
                  "aliases": [],
                  "description": "Enable route flap damping.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "description": {
                  "aliases": [],
                  "description": "Specify text description.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "egress_te": {
                  "aliases": [],
                  "description": "Use Egress Peering traffic engineering.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "backup_path": {
                      "aliases": [],
                      "description": "The 'egress-te-backup-paths template' to use for this peer.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "set": {
                      "aliases": [],
                      "description": "Set the attribute.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "enforce_first_as": {
                  "aliases": [],
                  "description": "Enforce neighbor AS is the first AS in AS-PATH attribute (EBGP).",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "export": {
                  "aliases": [],
                  "description": "Specify export policy.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "forwarding_context": {
                  "aliases": [],
                  "description": "Specify routing-instance used for data-forwarding and transport-session.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "graceful_restart": {
                  "aliases": [],
                  "description": "BGP graceful restart options.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "disable": {
                      "aliases": [],
                      "description": "Disable graceful restart.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "dont_help_shared_fate_bfd_down": {
                      "aliases": [],
                      "description": "Honor BFD-Down(C=0) if GR-restart not in progress.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "forwarding_state_bit": {
                      "aliases": [],
                      "description": "Control forwarding-state flag negotiation.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "as_rr_client": {
                          "aliases": [],
                          "description": "As for a route reflector client.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "from_fib": {
                          "aliases": [],
                          "description": "Always use state of associated FIB(s).",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "long_lived": {
                      "aliases": [],
                      "description": "Long-lived graceful restart options.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "advertise_to_non_llgr_neighbor": {
                          "aliases": [],
                          "description": "Advertise stale routes to non-LLGR neighbors.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "omit_no_export": {
                              "aliases": [],
                              "description": "Set Advertise stale routes to non-LLGR neighbors.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "set": {
                              "aliases": [],
                              "description": "Set Advertise stale routes to non-LLGR neighbors.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "receiver_disable": {
                          "aliases": [],
                          "description": "Disable receiver (helper) functionality.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "restart_time": {
                      "aliases": [],
                      "description": "Restart time used when negotiating with a peer.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "set": {
                      "aliases": [],
                      "description": "Set BGP graceful restart options.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "stale_routes_time": {
                      "aliases": [],
                      "description": "Maximum time for which stale routes are kept.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "hold_time": {
                  "aliases": [],
                  "description": "Specify hold time used when negotiating with a peer.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "idle_after_switch_over": {
                  "aliases": [],
                  "description": "Stop peer session from coming up after nonstop-routing switch-over.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "forever": {
                      "aliases": [],
                      "description": "Idle the peer until the user intervenes.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "timeout": {
                      "aliases": [],
                      "description": "Specify timeout value, in seconds, for starting peer after switch over.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "import": {
                  "aliases": [],
                  "description": "Specify import policy.",
                  "type": "list",
                  "required": false,
                  "elements": "str",
                  "suboptions": {}
                },
                "include_mp_next_hop": {
                  "aliases": [],
                  "description": "Include NEXT-HOP attribute in multiprotocol updates.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "ipsec_sa": {
                  "aliases": [],
                  "description": "Specify IPSec SA name.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "keep": {
                  "aliases": [],
                  "description": "Specify how to retain routes in the routing table.",
                  "type": "str",
                  "required": false,
                  "choices": [
                    "all",
                    "none"
                  ],
                  "suboptions": {}
                },
                "local_address": {
                  "aliases": [],
                  "description": "Specify Address of local end of BGP session.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "local_as": {
                  "aliases": [],
                  "description": "Local autonomous system number.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "alias": {
                      "aliases": [],
                      "description": "Treat this AS as an alias to the system AS.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "as_num": {
                      "aliases": [],
                      "description": "Autonomous system number in plain number or (asdot notation) format.",
                      "type": "str",
                      "required": true,
                      "suboptions": {}
                    },
                    "loops": {
                      "aliases": [],
                      "description": "Maximum number of times this AS can be in an AS path.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "no_prepend_global_as": {
                      "aliases": [],
                      "description": "Maximum number of times this AS can be in an AS path.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "private": {
                      "aliases": [],
                      "description": "Hide this local AS in paths learned from this peering.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "local_interface": {
                  "aliases": [],
                  "description": "Specify Local interface for IPv6 link local EBGP peering.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "local_preference": {
                  "aliases": [],
                  "description": "Specify value of LOCAL_PREF path attribute.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "log_updown": {
                  "aliases": [],
                  "description": "Enable log a message for peer state transitions.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "metric_out": {
                  "aliases": [],
                  "description": "Specify route metric sent in MED.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "igp": {
                      "aliases": [],
                      "description": "Track the IGP metric.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "delay_med_update": {
                          "aliases": [],
                          "description": "Delay updating MED when IGP metric increases.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "metric_offset": {
                          "aliases": [],
                          "description": "Specify metric offset for MED.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "set": {
                          "aliases": [],
                          "description": "Set track the IGP metric.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "metric_value": {
                      "aliases": [],
                      "description": "Specify metric value.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "minimum_igp": {
                      "aliases": [],
                      "description": "Track the minimum IGP metric.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "metric_offset": {
                          "aliases": [],
                          "description": "Specify metric offset for MED.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "set": {
                          "aliases": [],
                          "description": "Set track the minimum IGP metric.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    }
                  }
                },
                "mtu_discovery": {
                  "aliases": [],
                  "description": "Enable TCP path MTU discovery.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "multihop": {
                  "aliases": [],
                  "description": "Configure an EBGP multihop session.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "no_nexthop_change": {
                      "aliases": [],
                      "description": "Do not change next hop to self in advertisements.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "set": {
                      "aliases": [],
                      "description": "Set an EBGP multihop session.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "ttl": {
                      "aliases": [],
                      "description": "TTL value for the session.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "multipath": {
                  "aliases": [],
                  "description": "Allow load sharing among multiple BGP paths.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "disable": {
                      "aliases": [],
                      "description": "Disable Multipath.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "multiple_as": {
                      "aliases": [],
                      "description": "Use paths received from different ASs.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "multiple_as_disable": {
                      "aliases": [],
                      "description": "Disable multipath.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "set": {
                      "aliases": [],
                      "description": "Set allow load sharing among multiple BGP paths.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "name": {
                  "aliases": [],
                  "description": "Specify the name of the group",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "neighbors": {
                  "aliases": [],
                  "description": "Specify list of neighbors.",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "accept_remote_nexthop": {
                      "aliases": [],
                      "description": "Allow import policy to specify a non-directly connected next-hop.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "add_path_display_ipv4_address": {
                      "aliases": [],
                      "description": "Display add-path path-id in IPv4 address format.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "advertise_bgp_static": {
                      "aliases": [],
                      "description": "Advertise bgp-static routes.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "policy": {
                          "aliases": [],
                          "description": "Specify static route advertisement policy.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "set": {
                          "aliases": [],
                          "description": "Set Advertise bgp-static routes.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "advertise_external": {
                      "aliases": [],
                      "description": "Advertise best external routes.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "conditional": {
                          "aliases": [],
                          "description": "Route matches active route upto med-comparison rule.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "set": {
                          "aliases": [],
                          "description": "Set Advertise best external routes.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "advertise_inactive": {
                      "aliases": [],
                      "description": "Advertise inactive routes.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "advertise_peer_as": {
                      "aliases": [],
                      "description": "Advertise routes received from the same autonomous system.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "as_override": {
                      "aliases": [],
                      "description": "Replace neighbor AS number with our AS number",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "authentication_algorithm": {
                      "aliases": [],
                      "description": "Specify authentication algorithm name.",
                      "type": "str",
                      "required": false,
                      "choices": [
                        "aes-128-cmac-96",
                        "hmac-sha-1-96",
                        "md5"
                      ],
                      "suboptions": {}
                    },
                    "authentication_key": {
                      "aliases": [],
                      "description": "Specify MD5 authentication key.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "authentication_key_chain": {
                      "aliases": [],
                      "description": "Specify authentication key chain name.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "bfd_liveness_detection": {
                      "aliases": [],
                      "description": "Bidirectional Forwarding Detection (BFD) options.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "authentication": {
                          "aliases": [],
                          "description": "Authentication options.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "algorithm": {
                              "aliases": [],
                              "description": "Specify algorithm name.",
                              "type": "str",
                              "required": false,
                              "choices": [
                                "keyed-md5",
                                "keyed-sha-1",
                                "meticulous-keyed-md5",
                                "meticulous-keyed-sha-1",
                                "simple-password"
                              ],
                              "suboptions": {}
                            },
                            "key_chain": {
                              "aliases": [],
                              "description": "Specify Key chain name.",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            },
                            "loose_check": {
                              "aliases": [],
                              "description": "Verify authentication only if authentication is negotiated.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "detection_time": {
                          "aliases": [],
                          "description": "Specify Detection-time optionss.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "threshold": {
                              "aliases": [],
                              "description": "Specify high detection-time triggering a trap (milliseconds).",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "holddown_interval": {
                          "aliases": [],
                          "description": "Specify time to hold the session-UP notification to the client.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "minimum_interval": {
                          "aliases": [],
                          "description": "Specify minimum transmit and receive interval.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "minimum_receive_interval": {
                          "aliases": [],
                          "description": "Specify minimum receive interval.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "multiplier": {
                          "aliases": [],
                          "description": "Specify detection time multiplier.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "no_adaptation": {
                          "aliases": [],
                          "description": "Disable adaptation.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "session_mode": {
                          "aliases": [],
                          "description": "BFD single-hop or multihop session-mode.",
                          "type": "str",
                          "required": false,
                          "choices": [
                            "automatic",
                            "multihop",
                            "single-hop"
                          ],
                          "suboptions": {}
                        },
                        "transmit_interval": {
                          "aliases": [],
                          "description": "Transmit-interval options.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "minimum_interval": {
                              "aliases": [],
                              "description": "Specify Minimum transmit interval.",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "threshold": {
                              "aliases": [],
                              "description": "Specify high transmit interval triggering a trap.",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "version": {
                          "aliases": [],
                          "description": "Specify BFD protocol version number.",
                          "type": "str",
                          "required": false,
                          "choices": [
                            "0",
                            "1",
                            "automatic"
                          ],
                          "suboptions": {}
                        }
                      }
                    },
                    "bgp_error_tolerance": {
                      "aliases": [],
                      "description": "Handle BGP malformed updates softly.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "malformed_route_limit": {
                          "aliases": [],
                          "description": "Maximum number of malformed routes from a peer.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "malformed_update_log_interval": {
                          "aliases": [],
                          "description": "Time used when logging malformed update.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "no_malformed_route_limit": {
                          "aliases": [],
                          "description": "Specify no malformed route limit.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "set": {
                          "aliases": [],
                          "description": "Set BGP malformed updates softly.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "bmp": {
                      "aliases": [],
                      "description": "Specific settings to override the routing-options settings.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "monitor": {
                          "aliases": [],
                          "description": "Enable/Disable monitoring.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "route_monitoring": {
                          "aliases": [],
                          "description": "Control route monitoring settings.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "none": {
                              "aliases": [],
                              "description": "Do not send route montoring messages.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "post_policy": {
                              "aliases": [],
                              "description": "Send post policy route montoring messages.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "post_policy_exclude_non_eligible": {
                              "aliases": [],
                              "description": "Send post policy route montoring messages and exclude unresolved routes, etc.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "post_policy_exclude_non_feasible": {
                              "aliases": [],
                              "description": "Send pre policy route montoring messages and exclude looped routes, etc.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "pre_policy": {
                              "aliases": [],
                              "description": "Send pre policy route montoring messages.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        }
                      }
                    },
                    "cluster_id": {
                      "aliases": [],
                      "description": "Specify cluster identifier.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "damping": {
                      "aliases": [],
                      "description": "Enable route flap damping.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "description": {
                      "aliases": [],
                      "description": "Specify neighbor description.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "egress_te": {
                      "aliases": [],
                      "description": "Use Egress Peering traffic engineering.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "backup_path": {
                          "aliases": [],
                          "description": "The 'egress-te-backup-paths template' to use for this peer.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "set": {
                          "aliases": [],
                          "description": "Set the attribute.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "enforce_first_as": {
                      "aliases": [],
                      "description": "Enforce neighbor AS is the first AS in AS-PATH attribute (EBGP).",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "export": {
                      "aliases": [],
                      "description": "Specify export policy.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "forwarding_context": {
                      "aliases": [],
                      "description": "Specify routing-instance used for data-forwarding and transport-session.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "graceful_restart": {
                      "aliases": [],
                      "description": "BGP graceful restart options.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "disable": {
                          "aliases": [],
                          "description": "Disable graceful restart.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "dont_help_shared_fate_bfd_down": {
                          "aliases": [],
                          "description": "Honor BFD-Down(C=0) if GR-restart not in progress.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "forwarding_state_bit": {
                          "aliases": [],
                          "description": "Control forwarding-state flag negotiation.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "as_rr_client": {
                              "aliases": [],
                              "description": "As for a route reflector client.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "from_fib": {
                              "aliases": [],
                              "description": "Always use state of associated FIB(s).",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "long_lived": {
                          "aliases": [],
                          "description": "Long-lived graceful restart options.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "advertise_to_non_llgr_neighbor": {
                              "aliases": [],
                              "description": "Advertise stale routes to non-LLGR neighbors.",
                              "type": "dict",
                              "required": false,
                              "suboptions": {
                                "omit_no_export": {
                                  "aliases": [],
                                  "description": "Set Advertise stale routes to non-LLGR neighbors.",
                                  "type": "bool",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "set": {
                                  "aliases": [],
                                  "description": "Set Advertise stale routes to non-LLGR neighbors.",
                                  "type": "bool",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            },
                            "receiver_disable": {
                              "aliases": [],
                              "description": "Disable receiver (helper) functionality.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "restart_time": {
                          "aliases": [],
                          "description": "Restart time used when negotiating with a peer.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "set": {
                          "aliases": [],
                          "description": "Set BGP graceful restart options.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "stale_routes_time": {
                          "aliases": [],
                          "description": "Maximum time for which stale routes are kept.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "hold_time": {
                      "aliases": [],
                      "description": "Specify hold time used when negotiating with a peer.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "idle_after_switch_over": {
                      "aliases": [],
                      "description": "Stop peer session from coming up after nonstop-routing switch-over.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "forever": {
                          "aliases": [],
                          "description": "Idle the peer until the user intervenes.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "timeout": {
                          "aliases": [],
                          "description": "Specify timeout value, in seconds, for starting peer after switch over.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "import": {
                      "aliases": [],
                      "description": "Specify import policy.",
                      "type": "list",
                      "required": false,
                      "elements": "str",
                      "suboptions": {}
                    },
                    "include_mp_next_hop": {
                      "aliases": [],
                      "description": "Include NEXT-HOP attribute in multiprotocol updates.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "ipsec_sa": {
                      "aliases": [],
                      "description": "Specify IPSec SA name.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "keep": {
                      "aliases": [],
                      "description": "Specify how to retain routes in the routing table.",
                      "type": "str",
                      "required": false,
                      "choices": [
                        "all",
                        "none"
                      ],
                      "suboptions": {}
                    },
                    "local_address": {
                      "aliases": [],
                      "description": "Specify Address of local end of BGP session.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "local_as": {
                      "aliases": [],
                      "description": "Local autonomous system number.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "alias": {
                          "aliases": [],
                          "description": "Treat this AS as an alias to the system AS.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "as_num": {
                          "aliases": [],
                          "description": "Autonomous system number in plain number or (asdot notation) format.",
                          "type": "str",
                          "required": true,
                          "suboptions": {}
                        },
                        "loops": {
                          "aliases": [],
                          "description": "Maximum number of times this AS can be in an AS path.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "no_prepend_global_as": {
                          "aliases": [],
                          "description": "Maximum number of times this AS can be in an AS path.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "private": {
                          "aliases": [],
                          "description": "Hide this local AS in paths learned from this peering.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "local_interface": {
                      "aliases": [],
                      "description": "Specify Local interface for IPv6 link local EBGP peering.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "local_preference": {
                      "aliases": [],
                      "description": "Specify value of LOCAL_PREF path attribute.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "log_updown": {
                      "aliases": [],
                      "description": "Enable log a message for peer state transitions.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "metric_out": {
                      "aliases": [],
                      "description": "Specify route metric sent in MED.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "igp": {
                          "aliases": [],
                          "description": "Track the IGP metric.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "delay_med_update": {
                              "aliases": [],
                              "description": "Delay updating MED when IGP metric increases.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "metric_offset": {
                              "aliases": [],
                              "description": "Specify metric offset for MED.",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "set": {
                              "aliases": [],
                              "description": "Set track the IGP metric.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "metric_value": {
                          "aliases": [],
                          "description": "Specify metric value.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "minimum_igp": {
                          "aliases": [],
                          "description": "Track the minimum IGP metric.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "metric_offset": {
                              "aliases": [],
                              "description": "Specify metric offset for MED.",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "set": {
                              "aliases": [],
                              "description": "Set track the minimum IGP metric.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        }
                      }
                    },
                    "mtu_discovery": {
                      "aliases": [],
                      "description": "Enable TCP path MTU discovery.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "multihop": {
                      "aliases": [],
                      "description": "Configure an EBGP multihop session.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "no_nexthop_change": {
                          "aliases": [],
                          "description": "Do not change next hop to self in advertisements.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "set": {
                          "aliases": [],
                          "description": "Set an EBGP multihop session.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "ttl": {
                          "aliases": [],
                          "description": "TTL value for the session.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "multipath": {
                      "aliases": [],
                      "description": "Allow load sharing among multiple BGP paths.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "disable": {
                          "aliases": [],
                          "description": "Disable Multipath.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "multiple_as": {
                          "aliases": [],
                          "description": "Use paths received from different ASs.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "multiple_as_disable": {
                          "aliases": [],
                          "description": "Disable multipath.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "set": {
                          "aliases": [],
                          "description": "Set allow load sharing among multiple BGP paths.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "neighbor_address": {
                      "aliases": [],
                      "description": "Specify neighbor address.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "no_advertise_peer_as": {
                      "aliases": [],
                      "description": "Allows to not advertise routes received from the same autonomous system.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "no_aggregator_id": {
                      "aliases": [],
                      "description": "Set router ID in aggregator path attribute to 0.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "no_client_reflect": {
                      "aliases": [],
                      "description": "Disable intracluster route redistribution.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "out_delay": {
                      "aliases": [],
                      "description": "Specify how long before exporting routes from routing table.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "outbound_route_filter": {
                      "aliases": [],
                      "description": "Dynamically negotiated cooperative route filtering.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "bgp_orf_cisco_mode": {
                          "aliases": [],
                          "description": "Using BGP ORF capability code 130 and Prefix ORF type 128.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "prefix_based": {
                          "aliases": [],
                          "description": "Prefix-based outbound route filtering.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "accept": {
                              "aliases": [],
                              "description": "Honor Prefix-based ORFs from remote peers.",
                              "type": "dict",
                              "required": false,
                              "suboptions": {
                                "inet": {
                                  "aliases": [],
                                  "description": "Honor IPv4 prefix filters.",
                                  "type": "bool",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "inet6": {
                                  "aliases": [],
                                  "description": "Honor IPv6 prefix filters.",
                                  "type": "bool",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "set": {
                                  "aliases": [],
                                  "description": "Set honor Prefix-based ORFs from remote peers.",
                                  "type": "bool",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            },
                            "set": {
                              "aliases": [],
                              "description": "Set prefix-based outbound route filtering.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        }
                      }
                    },
                    "passive": {
                      "aliases": [],
                      "description": "Specify to not send open messages to a peer.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "peer_as": {
                      "aliases": [],
                      "description": "Specify Autonomous system number in plain number or 'higher 16bits'.'Lower 16 bits' format.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "preference": {
                      "aliases": [],
                      "description": "Specify preference value.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "remove_private": {
                      "aliases": [],
                      "description": "Remove well-known private AS numbers.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "all": {
                          "aliases": [],
                          "description": "Remove all private AS numbers and do not stop at the first public AS number.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "all_replace": {
                          "aliases": [],
                          "description": "Specify private AS replacement.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "all_replace_nearest": {
                          "aliases": [],
                          "description": "Use closest public AS number to replace a private AS number.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "no_peer_loop_check": {
                          "aliases": [],
                          "description": "Remove peer loop-check.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "set": {
                          "aliases": [],
                          "description": "Remove well-known private AS numbers.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "rfc6514_compliant_safi129": {
                      "aliases": [],
                      "description": "Specify Compliance with RFC6514 SAFI129 format.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "route_server_client": {
                      "aliases": [],
                      "description": "Enable route server client behavior.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "tcp_aggressive_transmission": {
                      "aliases": [],
                      "description": "Enable aggressive transmission of pure TCP ACKs and retransmissions.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "tcp_mss": {
                      "aliases": [],
                      "description": "Specify maximum TCP segment size.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "traceoptions": {
                      "aliases": [],
                      "description": "Configure trace options for BGP.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "file": {
                          "aliases": [],
                          "description": "Specify trace file options.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "filename": {
                              "aliases": [],
                              "description": "Specify name of file in which to write trace information.",
                              "type": "str",
                              "required": true,
                              "suboptions": {}
                            },
                            "files": {
                              "aliases": [],
                              "description": "Specify maximum number of trace files.",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "no_world_readable": {
                              "aliases": [],
                              "description": "Don't allow any user to read the log file.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "size": {
                              "aliases": [],
                              "description": "Specify maximum trace file size.",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "world_readable": {
                              "aliases": [],
                              "description": "Allow any user to read the log file.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "flag": {
                          "aliases": [],
                          "description": "Specify tracing parameters.",
                          "type": "list",
                          "required": false,
                          "elements": "dict",
                          "suboptions": {
                            "detail": {
                              "aliases": [],
                              "description": "Trace detailed information.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "disable": {
                              "aliases": [],
                              "description": "Disable this trace flag.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "filter": {
                              "aliases": [],
                              "description": "Filter to apply to this flag.",
                              "type": "dict",
                              "required": false,
                              "suboptions": {
                                "match_on_prefix": {
                                  "aliases": [],
                                  "description": "Specify filter based on prefix.",
                                  "type": "bool",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "policy": {
                                  "aliases": [],
                                  "description": "Specify filter policy.",
                                  "type": "str",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "set": {
                                  "aliases": [],
                                  "description": "Set filter to apply to this flag.",
                                  "type": "bool",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            },
                            "name": {
                              "aliases": [],
                              "description": "specify event name",
                              "type": "str",
                              "required": true,
                              "choices": [
                                "4byte-as",
                                "add-path",
                                "all",
                                "bfd",
                                "damping",
                                "egress-te",
                                "general",
                                "graceful-restart",
                                "keepalive",
                                "normal",
                                "nsr-synchronization",
                                "open",
                                "packets",
                                "policy",
                                "refresh",
                                "route",
                                "state",
                                "task",
                                "thread-io",
                                "thread-update-io",
                                "timer",
                                "update"
                              ],
                              "suboptions": {}
                            },
                            "receive": {
                              "aliases": [],
                              "description": "Trace received packets.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "send": {
                              "aliases": [],
                              "description": "Trace transmitted packets.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        }
                      }
                    },
                    "ttl": {
                      "aliases": [],
                      "description": "Specify TTL value for the single-hop peer.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "unconfigured_peer_graceful_restart": {
                      "aliases": [],
                      "description": "Specify BGP unconfigured peer graceful restart options.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "vpn_apply_export": {
                      "aliases": [],
                      "description": "Apply BGP export policy when exporting VPN routes.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "no_advertise_peer_as": {
                  "aliases": [],
                  "description": "Allows to not advertise routes received from the same autonomous system.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "no_aggregator_id": {
                  "aliases": [],
                  "description": "Set router ID in aggregator path attribute to 0.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "no_client_reflect": {
                  "aliases": [],
                  "description": "Disable intracluster route redistribution.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "optimal_route_reflection": {
                  "aliases": [],
                  "description": "Enable optimal route reflection for this client group.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "igp_backup": {
                      "aliases": [],
                      "description": "Backup node identifier for this client group.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "igp_primary": {
                      "aliases": [],
                      "description": "Primary node identifier for this client group.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "out_delay": {
                  "aliases": [],
                  "description": "Specify how long before exporting routes from routing table.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "outbound_route_filter": {
                  "aliases": [],
                  "description": "Dynamically negotiated cooperative route filtering.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "bgp_orf_cisco_mode": {
                      "aliases": [],
                      "description": "Using BGP ORF capability code 130 and Prefix ORF type 128.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "prefix_based": {
                      "aliases": [],
                      "description": "Prefix-based outbound route filtering.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "accept": {
                          "aliases": [],
                          "description": "Honor Prefix-based ORFs from remote peers.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "inet": {
                              "aliases": [],
                              "description": "Honor IPv4 prefix filters.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "inet6": {
                              "aliases": [],
                              "description": "Honor IPv6 prefix filters.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "set": {
                              "aliases": [],
                              "description": "Set honor Prefix-based ORFs from remote peers.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "set": {
                          "aliases": [],
                          "description": "Set prefix-based outbound route filtering.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    }
                  }
                },
                "passive": {
                  "aliases": [],
                  "description": "Specify to not send open messages to a peer.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "peer_as": {
                  "aliases": [],
                  "description": "Specify Autonomous system number in plain number or 'higher 16bits'.'Lower 16 bits' format.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "preference": {
                  "aliases": [],
                  "description": "Specify preference value.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "remove_private": {
                  "aliases": [],
                  "description": "Remove well-known private AS numbers.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "all": {
                      "aliases": [],
                      "description": "Remove all private AS numbers and do not stop at the first public AS number.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "all_replace": {
                      "aliases": [],
                      "description": "Specify private AS replacement.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "all_replace_nearest": {
                      "aliases": [],
                      "description": "Use closest public AS number to replace a private AS number.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "no_peer_loop_check": {
                      "aliases": [],
                      "description": "Remove peer loop-check.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "set": {
                      "aliases": [],
                      "description": "Remove well-known private AS numbers.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "rfc6514_compliant_safi129": {
                  "aliases": [],
                  "description": "Specify Compliance with RFC6514 SAFI129 format.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "route_server_client": {
                  "aliases": [],
                  "description": "Enable route server client behavior.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "tcp_aggressive_transmission": {
                  "aliases": [],
                  "description": "Enable aggressive transmission of pure TCP ACKs and retransmissions.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "tcp_mss": {
                  "aliases": [],
                  "description": "Specify maximum TCP segment size.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "traceoptions": {
                  "aliases": [],
                  "description": "Configure trace options for BGP.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "file": {
                      "aliases": [],
                      "description": "Specify trace file options.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "filename": {
                          "aliases": [],
                          "description": "Specify name of file in which to write trace information.",
                          "type": "str",
                          "required": true,
                          "suboptions": {}
                        },
                        "files": {
                          "aliases": [],
                          "description": "Specify maximum number of trace files.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "no_world_readable": {
                          "aliases": [],
                          "description": "Don't allow any user to read the log file.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "size": {
                          "aliases": [],
                          "description": "Specify maximum trace file size.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "world_readable": {
                          "aliases": [],
                          "description": "Allow any user to read the log file.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "flag": {
                      "aliases": [],
                      "description": "Specify tracing parameters.",
                      "type": "list",
                      "required": false,
                      "elements": "dict",
                      "suboptions": {
                        "detail": {
                          "aliases": [],
                          "description": "Trace detailed information.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "disable": {
                          "aliases": [],
                          "description": "Disable this trace flag.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "filter": {
                          "aliases": [],
                          "description": "Filter to apply to this flag.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "match_on_prefix": {
                              "aliases": [],
                              "description": "Specify filter based on prefix.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "policy": {
                              "aliases": [],
                              "description": "Specify filter policy.",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            },
                            "set": {
                              "aliases": [],
                              "description": "Set filter to apply to this flag.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "name": {
                          "aliases": [],
                          "description": "specify event name",
                          "type": "str",
                          "required": true,
                          "choices": [
                            "4byte-as",
                            "add-path",
                            "all",
                            "bfd",
                            "damping",
                            "egress-te",
                            "general",
                            "graceful-restart",
                            "keepalive",
                            "normal",
                            "nsr-synchronization",
                            "open",
                            "packets",
                            "policy",
                            "refresh",
                            "route",
                            "state",
                            "task",
                            "thread-io",
                            "thread-update-io",
                            "timer",
                            "update"
                          ],
                          "suboptions": {}
                        },
                        "receive": {
                          "aliases": [],
                          "description": "Trace received packets.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "send": {
                          "aliases": [],
                          "description": "Trace transmitted packets.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    }
                  }
                },
                "ttl": {
                  "aliases": [],
                  "description": "Specify TTL value for the single-hop peer.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "type": {
                  "aliases": [],
                  "description": "Specify BGP group type.",
                  "type": "str",
                  "required": false,
                  "choices": [
                    "external",
                    "internal"
                  ],
                  "suboptions": {}
                },
                "unconfigured_peer_graceful_restart": {
                  "aliases": [],
                  "description": "Specify BGP unconfigured peer graceful restart options.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "vpn_apply_export": {
                  "aliases": [],
                  "description": "Apply BGP export policy when exporting VPN routes.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "hold_time": {
              "aliases": [],
              "description": "Specify hold time used when negotiating with a peer.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "holddown_all_stale_labels": {
              "aliases": [],
              "description": "Hold all BGP stale-labels, facilating make-before-break for new label advertisements.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "idle_after_switch_over": {
              "aliases": [],
              "description": "Stop peer session from coming up after nonstop-routing switch-over.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "forever": {
                  "aliases": [],
                  "description": "Idle the peer until the user intervenes.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "timeout": {
                  "aliases": [],
                  "description": "Specify timeout value, in seconds, for starting peer after switch over.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "import": {
              "aliases": [],
              "description": "Specify import policy.",
              "type": "list",
              "required": false,
              "elements": "str",
              "suboptions": {}
            },
            "include_mp_next_hop": {
              "aliases": [],
              "description": "Include NEXT-HOP attribute in multiprotocol updates.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "ipsec_sa": {
              "aliases": [],
              "description": "Specify IPSec SA name.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "keep": {
              "aliases": [],
              "description": "Specify how to retain routes in the routing table.",
              "type": "str",
              "required": false,
              "choices": [
                "all",
                "none"
              ],
              "suboptions": {}
            },
            "local_address": {
              "aliases": [],
              "description": "Specify Address of local end of BGP session.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "local_as": {
              "aliases": [],
              "description": "Local autonomous system number.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "alias": {
                  "aliases": [],
                  "description": "Treat this AS as an alias to the system AS.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "as_num": {
                  "aliases": [],
                  "description": "Autonomous system number in plain number or (asdot notation) format.",
                  "type": "str",
                  "required": true,
                  "suboptions": {}
                },
                "loops": {
                  "aliases": [],
                  "description": "Maximum number of times this AS can be in an AS path.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "no_prepend_global_as": {
                  "aliases": [],
                  "description": "Maximum number of times this AS can be in an AS path.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "private": {
                  "aliases": [],
                  "description": "Hide this local AS in paths learned from this peering.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "local_interface": {
              "aliases": [],
              "description": "Specify Local interface for IPv6 link local EBGP peering.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "local_preference": {
              "aliases": [],
              "description": "Specify value of LOCAL_PREF path attribute.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "log_updown": {
              "aliases": [],
              "description": "Enable log a message for peer state transitions.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "loops": {
              "aliases": [],
              "description": "Specify maximum number of times this AS can be in an AS path.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "metric_out": {
              "aliases": [],
              "description": "Specify route metric sent in MED.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "igp": {
                  "aliases": [],
                  "description": "Track the IGP metric.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "delay_med_update": {
                      "aliases": [],
                      "description": "Delay updating MED when IGP metric increases.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "metric_offset": {
                      "aliases": [],
                      "description": "Specify metric offset for MED.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "set": {
                      "aliases": [],
                      "description": "Set track the IGP metric.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "metric_value": {
                  "aliases": [],
                  "description": "Specify metric value.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "minimum_igp": {
                  "aliases": [],
                  "description": "Track the minimum IGP metric.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "metric_offset": {
                      "aliases": [],
                      "description": "Specify metric offset for MED.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "set": {
                      "aliases": [],
                      "description": "Set track the minimum IGP metric.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                }
              }
            },
            "mtu_discovery": {
              "aliases": [],
              "description": "Enable TCP path MTU discovery.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "multihop": {
              "aliases": [],
              "description": "Configure an EBGP multihop session.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "no_nexthop_change": {
                  "aliases": [],
                  "description": "Do not change next hop to self in advertisements.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "set": {
                  "aliases": [],
                  "description": "Set an EBGP multihop session.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "ttl": {
                  "aliases": [],
                  "description": "TTL value for the session.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "multipath": {
              "aliases": [],
              "description": "Allow load sharing among multiple BGP paths.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "disable": {
                  "aliases": [],
                  "description": "Disable Multipath.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "multiple_as": {
                  "aliases": [],
                  "description": "Use paths received from different ASs.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "multiple_as_disable": {
                  "aliases": [],
                  "description": "Disable multipath.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "set": {
                  "aliases": [],
                  "description": "Set allow load sharing among multiple BGP paths.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "multipath_build_priority": {
              "aliases": [],
              "description": "Configure the multipath build priority.",
              "type": "str",
              "required": false,
              "choices": [
                "low",
                "medium"
              ],
              "suboptions": {}
            },
            "no_advertise_peer_as": {
              "aliases": [],
              "description": "Allows to not advertise routes received from the same autonomous system.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "no_aggregator_id": {
              "aliases": [],
              "description": "Set router ID in aggregator path attribute to 0.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "no_client_reflect": {
              "aliases": [],
              "description": "Disable intracluster route redistribution.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "no_precision_timers": {
              "aliases": [],
              "description": "Specify not to use precision timers for scheduling keepalives.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "out_delay": {
              "aliases": [],
              "description": "Specify how long before exporting routes from routing table.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "outbound_route_filter": {
              "aliases": [],
              "description": "Dynamically negotiated cooperative route filtering.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "bgp_orf_cisco_mode": {
                  "aliases": [],
                  "description": "Using BGP ORF capability code 130 and Prefix ORF type 128.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "prefix_based": {
                  "aliases": [],
                  "description": "Prefix-based outbound route filtering.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "accept": {
                      "aliases": [],
                      "description": "Honor Prefix-based ORFs from remote peers.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "inet": {
                          "aliases": [],
                          "description": "Honor IPv4 prefix filters.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "inet6": {
                          "aliases": [],
                          "description": "Honor IPv6 prefix filters.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "set": {
                          "aliases": [],
                          "description": "Set honor Prefix-based ORFs from remote peers.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "set": {
                      "aliases": [],
                      "description": "Set prefix-based outbound route filtering.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                }
              }
            },
            "output_queue_priority": {
              "aliases": [],
              "description": "BGP output queue priority scheduler for updates.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "defaults": {
                  "aliases": [],
                  "description": "Map policy's priority class and BGP output-queue.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "high": {
                      "aliases": [],
                      "description": "Assign the 'high' priority class to this output-queue.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "expedited": {
                          "aliases": [],
                          "description": "Expedited queue; highest priority.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "priority": {
                          "aliases": [],
                          "description": "Specify output queue priorit.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "low": {
                      "aliases": [],
                      "description": "Assign the 'low' priority class to this output-queue.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "expedited": {
                          "aliases": [],
                          "description": "Expedited queue; highest priority.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "priority": {
                          "aliases": [],
                          "description": "Specify output queue priorit.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "medium": {
                      "aliases": [],
                      "description": "Assign the 'medium' priority class to this output-queue.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "expedited": {
                          "aliases": [],
                          "description": "Expedited queue; highest priority.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "priority": {
                          "aliases": [],
                          "description": "Specify output queue priorit.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    }
                  }
                },
                "expedited_update_tokens": {
                  "aliases": [],
                  "description": "Expedited queue; highest priority for number of tokens.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "priority_update_tokens": {
                  "aliases": [],
                  "description": "Output queue priority; higher is better.",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "priority": {
                      "aliases": [],
                      "description": "Specify the priority.",
                      "type": "int",
                      "required": true,
                      "suboptions": {}
                    },
                    "update_tokens": {
                      "aliases": [],
                      "description": "Specify update_tokens.",
                      "type": "int",
                      "required": true,
                      "suboptions": {}
                    }
                  }
                }
              }
            },
            "passive": {
              "aliases": [],
              "description": "Specify to not send open messages to a peer.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "path_selection": {
              "aliases": [],
              "description": "Configure path selection strategy.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "always_compare_med": {
                  "aliases": [],
                  "description": "Compare MED on paths from different AS.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "as_path_ignore": {
                  "aliases": [],
                  "description": "Ignore AS path comparison during path selection.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "cisco_non_deterministic": {
                  "aliases": [],
                  "description": "Use Cisco IOS nondeterministic path selection algorithm.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "external_router_id": {
                  "aliases": [],
                  "description": "Compare router ID on BGP externals.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "l2vpn_use_bgp_rules": {
                  "aliases": [],
                  "description": "Use standard BGP rules during L2VPN path selection.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "med_plus_igp": {
                  "aliases": [],
                  "description": "Add IGP cost to next-hop to MED before comparing MED values.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "igp_multiplier": {
                      "aliases": [],
                      "description": "Specify multiplier for IGP cost to next-hop.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "med_multiplier": {
                      "aliases": [],
                      "description": "Specify Multiplier for MED.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "set": {
                      "aliases": [],
                      "description": "Set med-plus-igp attribute.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                }
              }
            },
            "peer_as": {
              "aliases": [],
              "description": "Specify Autonomous system number in plain number or 'higher 16bits'.'Lower 16 bits' format.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "precision_timers": {
              "aliases": [],
              "description": "Use precision timers for scheduling keepalives.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "preference": {
              "aliases": [],
              "description": "Specify preference value.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "remove_private": {
              "aliases": [],
              "description": "Remove well-known private AS numbers.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "all": {
                  "aliases": [],
                  "description": "Remove all private AS numbers and do not stop at the first public AS number.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "all_replace": {
                  "aliases": [],
                  "description": "Specify private AS replacement.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "all_replace_nearest": {
                  "aliases": [],
                  "description": "Use closest public AS number to replace a private AS number.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "no_peer_loop_check": {
                  "aliases": [],
                  "description": "Remove peer loop-check.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "set": {
                  "aliases": [],
                  "description": "Remove well-known private AS numbers.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "rfc6514_compliant_safi129": {
              "aliases": [],
              "description": "Specify Compliance with RFC6514 SAFI129 format.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "route_server_client": {
              "aliases": [],
              "description": "Enable route server client behavior.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "send_addpath_optimization": {
              "aliases": [],
              "description": "Enable BGP addpath advertisement optimization.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "snmp_options": {
              "aliases": [],
              "description": "Customize SNMP behaviors specifically for BGP MIBs.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "backward_traps_only_from_established": {
                  "aliases": [],
                  "description": "Limit traps for backward transitions to only those moving from Established state.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "emit_inet_address_length_in_oid": {
                  "aliases": [],
                  "description": "Emit Length in OID for InetAddress MIB type.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "sr_preference_override": {
              "aliases": [],
              "description": "Replace received segment routing traffic engineering preference value with override value.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "stale_labels_holddown_period": {
              "aliases": [],
              "description": "Specify duration (sec) MPLS labels allocated by BGP are kept after they go stale.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "tcp_aggressive_transmission": {
              "aliases": [],
              "description": "Enable aggressive transmission of pure TCP ACKs and retransmissions.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "tcp_mss": {
              "aliases": [],
              "description": "Specify maximum TCP segment size.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "traceoptions": {
              "aliases": [],
              "description": "Configure trace options for BGP.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "file": {
                  "aliases": [],
                  "description": "Specify trace file options.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "filename": {
                      "aliases": [],
                      "description": "Specify name of file in which to write trace information.",
                      "type": "str",
                      "required": true,
                      "suboptions": {}
                    },
                    "files": {
                      "aliases": [],
                      "description": "Specify maximum number of trace files.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "no_world_readable": {
                      "aliases": [],
                      "description": "Don't allow any user to read the log file.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "size": {
                      "aliases": [],
                      "description": "Specify maximum trace file size.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "world_readable": {
                      "aliases": [],
                      "description": "Allow any user to read the log file.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "flag": {
                  "aliases": [],
                  "description": "Specify tracing parameters.",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "detail": {
                      "aliases": [],
                      "description": "Trace detailed information.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "disable": {
                      "aliases": [],
                      "description": "Disable this trace flag.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "filter": {
                      "aliases": [],
                      "description": "Filter to apply to this flag.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "match_on_prefix": {
                          "aliases": [],
                          "description": "Specify filter based on prefix.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "policy": {
                          "aliases": [],
                          "description": "Specify filter policy.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "set": {
                          "aliases": [],
                          "description": "Set filter to apply to this flag.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "name": {
                      "aliases": [],
                      "description": "specify event name",
                      "type": "str",
                      "required": true,
                      "choices": [
                        "4byte-as",
                        "add-path",
                        "all",
                        "bfd",
                        "damping",
                        "egress-te",
                        "general",
                        "graceful-restart",
                        "keepalive",
                        "normal",
                        "nsr-synchronization",
                        "open",
                        "packets",
                        "policy",
                        "refresh",
                        "route",
                        "state",
                        "task",
                        "thread-io",
                        "thread-update-io",
                        "timer",
                        "update"
                      ],
                      "suboptions": {}
                    },
                    "receive": {
                      "aliases": [],
                      "description": "Trace received packets.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "send": {
                      "aliases": [],
                      "description": "Trace transmitted packets.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                }
              }
            },
            "traffic_statistics_labeled_path": {
              "aliases": [],
              "description": "Collect periodic ingress labeled statistics for BGP label-switched paths.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "file": {
                  "aliases": [],
                  "description": "Specify statistics file options.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "filename": {
                      "aliases": [],
                      "description": "Specify name of file in which to write trace information.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "files": {
                      "aliases": [],
                      "description": "Specify maximum number of trace files.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "no_world_readable": {
                      "aliases": [],
                      "description": "Don't allow any user to read the log file.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "size": {
                      "aliases": [],
                      "description": "Specify maximum trace file size.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "world_readable": {
                      "aliases": [],
                      "description": "Allow any user to read the log file.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "interval": {
                  "aliases": [],
                  "description": "Specify time interval to collect statistics.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "ttl": {
              "aliases": [],
              "description": "Specify TTL value for the single-hop peer.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "unconfigured_peer_graceful_restart": {
              "aliases": [],
              "description": "Specify BGP unconfigured peer graceful restart options.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "vpn_apply_export": {
              "aliases": [],
              "description": "Apply BGP export policy when exporting VPN routes.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "running_config": {
          "aliases": [],
          "description": "This option is used only with state I(parsed).\nThe value of this option should be the output received from the Junos device by executing the command B(show protocols bgp).\nThe state I(parsed) reads the configuration from C(running_config) option and transforms it into Ansible structured data as per the resource module's argspec and the value is then returned in the I(parsed) key within the result",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The state the configuration should be left in.\nState I(purged) removes all (routing-options autonomous-system, bgp global, bgp groups, bgp neighbors, bgp family and bgp group and neighbor family) the BGP configurations from the target device. Use caution with this state.\nState I(deleted) only removes BGP attributes that this modules manages and does not negate the BGP process completely. Thereby, preserving address-family related configurations under BGP context.\nRunning states I(deleted) and I(replaced) will result in an error if there are address-family configuration lines present under a neighbor.Please use the M(junipernetworks.junos.junos_bgp_address_family) modules for prior cleanup.\nRefer to examples for more details.",
          "default": "merged",
          "type": "str",
          "required": false,
          "choices": [
            "purged",
            "merged",
            "replaced",
            "deleted",
            "gathered",
            "parsed",
            "rendered"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "ncclient (>=v0.6.4)",
        "xmltodict (>=0.12.0)"
      ],
      "short_description": "Manages BGP Global configuration on devices running Juniper JUNOS.",
      "version_added": "1.3.0"
    },
    "examples": "\n# Using merged\n#\n# Before state\n# ------------\n#\n# admin# show protocols bgp\n# [edit]\n\n# admin# show routing-options autonomous-system\n# [edit]\n\n- name: Merge Junos BGP config\n  junipernetworks.junos.junos_bgp_global:\n    config:\n      as_number: \"65534\"\n      loops: 3\n      asdot_notation: true\n      accept_remote_nexthop: true\n      add_path_display_ipv4_address: true\n      advertise_bgp_static:\n        policy: \"static-to-bgp\"\n      advertise_from_main_vpn_tables: true\n      advertise_inactive: true\n      authentication_algorithm: \"md5\"\n      bgp_error_tolerance:\n        malformed_route_limit: 20000000\n      bmp:\n        monitor: true\n      damping: true\n      description: \"This is configured with Junos_bgp resource module\"\n      egress_te_sid_stats: true\n      hold_time: 5\n      holddown_all_stale_labels: true\n      include_mp_next_hop: true\n      log_updown: true\n      no_advertise_peer_as: true\n      no_aggregator_id: true\n      no_client_reflect: true\n      out_delay: 10\n      precision_timers: true\n      preference: 2\n    state: merged\n\n# After state\n# -----------\n#\n# admin# show routing-options autonomous-system\n# 65534 loops 3 asdot-notation;\n\n# admin# show protocols bgp\n# precision-timers;\n# advertise-from-main-vpn-tables;\n# holddown-all-stale-labels;\n# description \"This is configured with Junos_bgp resource module\";\n# accept-remote-nexthop;\n# preference 2;\n# hold-time 5;\n# advertise-inactive;\n# no-advertise-peer-as;\n# no-aggregator-id;\n# out-delay 10;\n# log-updown;\n# damping;\n# bgp-error-tolerance {\n#     malformed-route-limit 20000000;\n# }\n# authentication-algorithm md5;\n# no-client-reflect;\n# include-mp-next-hop;\n# bmp {\n#     monitor enable;\n# }\n# advertise-bgp-static {\n#     policy static-to-bgp;\n# }\n# add-path-display-ipv4-address;\n# egress-te-sid-stats;\n\n\n# Using merged\n#\n# Before state\n# ------------\n#\n# admin# show routing-options autonomous-system\n# 65534 loops 3 asdot-notation;\n\n# admin# show protocols bgp\n# precision-timers;\n# advertise-from-main-vpn-tables;\n# holddown-all-stale-labels;\n# description \"This is configured with Junos_bgp resource module\";\n# accept-remote-nexthop;\n# preference 2;\n# hold-time 5;\n# advertise-inactive;\n# no-advertise-peer-as;\n# no-aggregator-id;\n# out-delay 10;\n# log-updown;\n# damping;\n# bgp-error-tolerance {\n#     malformed-route-limit 20000000;\n# }\n# authentication-algorithm md5;\n# no-client-reflect;\n# include-mp-next-hop;\n# bmp {\n#     monitor enable;\n# }\n# advertise-bgp-static {\n#     policy static-to-bgp;\n# }\n# add-path-display-ipv4-address;\n# egress-te-sid-stats;\n\n- name: Update running Junos BGP config\n  junipernetworks.junos.junos_bgp_global:\n    config:\n      egress_te_backup_paths:\n        templates:\n          - path_name: customer1\n            peers:\n              - '11.11.11.11'\n              - '11.11.11.12'\n              - '11.11.11.13'\n            remote_nexthop: '2.2.2.2'\n      groups:\n        - name: 'internal'\n          type: 'internal'\n          vpn_apply_export: true\n          out_delay: 30\n          accept_remote_nexthop: true\n          add_path_display_ipv4_address: true\n          peer_as: '65534'\n          allow:\n            - 'all'\n            - '1.1.1.0/24'\n          neighbors:\n            - neighbor_address: '11.11.11.11'\n              peer_as: '65534'\n              out_delay: 11\n            - neighbor_address: '11.11.11.12'\n              peer_as: '65534'\n              out_delay: 12\n\n        - name: 'external'\n          out_delay: 20\n          peer_as: '65534'\n          accept_remote_nexthop: true\n          add_path_display_ipv4_address: true\n          neighbors:\n            - neighbor_address: '12.12.12.12'\n              peer_as: '65534'\n              out_delay: 21\n              accept_remote_nexthop: true\n              add_path_display_ipv4_address: true\n            - neighbor_address: '11.11.11.13'\n              peer_as: '65534'\n              out_delay: 31\n              accept_remote_nexthop: true\n              add_path_display_ipv4_address: true\n    state: merged\n\n# After state\n# -----------\n#\n# admin# show routing-options autonomous-system\n# 65534 loops 3 asdot-notation;\n\n# admin# show protocols bgp\n# precision-timers;\n# advertise-from-main-vpn-tables;\n# holddown-all-stale-labels;\n# egress-te-backup-paths {\n#     template customer1 {\n#         peer 11.11.11.11;\n#         peer 11.11.11.12;\n#         peer 11.11.11.13;\n#         remote-nexthop {\n#             2.2.2.2;\n#         }\n#     }\n# }\n# description \"This is configured with Junos_bgp resource module\";\n# accept-remote-nexthop;\n# preference 2;\n# hold-time 5;\n# advertise-inactive;\n# no-advertise-peer-as;\n# no-aggregator-id;\n# out-delay 10;\n# log-updown;\n# damping;\n# bgp-error-tolerance {\n#     malformed-route-limit 20000000;\n# }\n# authentication-algorithm md5;\n# no-client-reflect;\n# include-mp-next-hop;\n# bmp {\n#     monitor enable;\n# }\n# add-path-display-ipv4-address;\n# egress-te-sid-stats;\n# group internal {\n#     type internal;\n#     accept-remote-nexthop;\n#     out-delay 30;\n#     vpn-apply-export;\n#     peer-as 65534;\n#     add-path-display-ipv4-address;\n#     allow [ 0.0.0.0/0 1.1.1.0/24 ];\n#     neighbor 11.11.11.11 {\n#         out-delay 11;\n#         peer-as 65534;\n#     }\n#     neighbor 11.11.11.12 {\n#         out-delay 12;\n#         peer-as 65534;\n#     }\n# }\n# group external {\n#     accept-remote-nexthop;\n#     out-delay 20;\n#     peer-as 65534;\n#     add-path-display-ipv4-address;\n#     neighbor 12.12.12.12 {\n#         accept-remote-nexthop;\n#         out-delay 21;\n#         peer-as 65534;\n#         add-path-display-ipv4-address;\n#     }\n#     neighbor 11.11.11.13 {\n#         accept-remote-nexthop;\n#         out-delay 31;\n#         peer-as 65534;\n#         add-path-display-ipv4-address;\n#     }\n# }\n\n\n# Using replaced\n#\n# Before state\n# ------------\n#\n# admin# show routing-options autonomous-system\n# [edit]\n# admin# show protocols bgp\n# precision-timers;\n# advertise-from-main-vpn-tables;\n# holddown-all-stale-labels;\n# description \"This is configured with Junos_bgp resource module\";\n# accept-remote-nexthop;\n# preference 2;\n# hold-time 5;\n# advertise-inactive;\n# no-advertise-peer-as;\n# no-aggregator-id;\n# out-delay 10;\n# log-updown;\n# damping;\n# bgp-error-tolerance {\n#     malformed-route-limit 20000000;\n# }\n# authentication-algorithm md5;\n# no-client-reflect;\n# include-mp-next-hop;\n# bmp {\n#     monitor enable;\n# }\n# advertise-bgp-static {\n#     policy static-to-bgp;\n# }\n# add-path-display-ipv4-address;\n# egress-te-sid-stats;\n\n- name: Replace Junos BGP global config\n  junipernetworks.junos.junos_bgp_global:\n   config:\n     advertise_bgp_static:\n       policy: \"static-to-bgp\"\n     advertise_inactive: true\n     authentication_algorithm: \"md5\"\n     bfd_liveness_detection:\n       minimum_receive_interval: 8\n       multiplier: 30\n       no_adaptation: true\n       transmit_interval:\n         minimum_interval: 4\n       version: \"automatic\"\n     bgp_error_tolerance:\n       malformed_route_limit: 40000000\n     description: \"This is configured with Junos_bgp resource module replace\"\n     egress_te_sid_stats: true\n     hold_time: 5\n     out_delay: 10\n     preference: \"2\"\n   state: replaced\n\n# After state\n# -----------\n#\n# admin# show protocols bgp\n# description \"This is configured with Junos_bgp resource module replace\";\n# preference 2;\n# hold-time 5;\n# advertise-inactive;\n# out-delay 10;\n# bgp-error-tolerance {\n#     malformed-route-limit 40000000;\n# }\n# authentication-algorithm md5;\n# advertise-bgp-static {\n#     policy static-to-bgp;\n# }\n# bfd-liveness-detection {\n#     version automatic;\n#     minimum-receive-interval 8;\n#     multiplier 30;\n#     no-adaptation;\n#     transmit-interval {\n#         minimum-interval 4;\n#     }\n# }\n# egress-te-sid-stats;\n\n# admin# show routing-options autonomous-system\n# [edit]\n\n#\n# Using deleted\n#\n# Before state\n# ------------\n#\n# admin# show protocols bgp\n# precision-timers;\n# advertise-from-main-vpn-tables;\n# holddown-all-stale-labels;\n# description \"This is configured with Junos_bgp resource module\";\n# accept-remote-nexthop;\n# preference 2;\n# hold-time 5;\n# advertise-inactive;\n# no-advertise-peer-as;\n# no-aggregator-id;\n# out-delay 10;\n# log-updown;\n# damping;\n# bgp-error-tolerance {\n#     malformed-route-limit 20000000;\n# }\n# authentication-algorithm md5;\n# no-client-reflect;\n# include-mp-next-hop;\n# bmp {\n#     monitor enable;\n# }\n# add-path-display-ipv4-address;\n# egress-te-sid-stats;\n# group internal {\n#     out-delay 12;\n# }\n# admin# show routing-options autonomous-system\n# 65534 loops 3 asdot-notation;\n\n- name: Delete Junos BGP global config\n  junipernetworks.junos.junos_bgp_global:\n    config:\n    state: deleted\n\n# After state\n# -----------\n# admin# show protocols bgp\n# group internal {\n#     out-delay 12;\n# }\n\n\n\n# admin# show protocols bgp\n# [edit]\n\n# admin# show routing-options autonomous-system\n# [edit]\n# Using gathered\n#\n# Before state\n# ------------\n#\n# admin# show protocols bgp\n# description \"This is configured with Junos_bgp resource module replace\";\n# preference 2;\n# hold-time 5;\n# advertise-inactive;\n# out-delay 10;\n# bgp-error-tolerance {\n#     malformed-route-limit 40000000;\n# }\n# authentication-algorithm md5;\n# advertise-bgp-static {\n#     policy static-to-bgp;\n# }\n# bfd-liveness-detection {\n#     version automatic;\n#     minimum-receive-interval 8;\n#     multiplier 30;\n#     no-adaptation;\n#     transmit-interval {\n#         minimum-interval 4;\n#     }\n# }\n# egress-te-sid-stats;\n\n- name: Gather Junos BGP global config\n  junipernetworks.junos.junos_bgp_global:\n    config:\n    state: gathered\n#\n#\n# -------------------------\n# Module Execution Result\n# -------------------------\n#\n#    \"gathered\": {\n#         \"advertise_bgp_static\": {\n#             \"policy\": \"static-to-bgp\"\n#         },\n#         \"advertise_inactive\": true,\n#         \"authentication_algorithm\": \"md5\",\n#         \"bfd_liveness_detection\": {\n#             \"minimum_receive_interval\": 8,\n#             \"multiplier\": 30,\n#             \"no_adaptation\": true,\n#             \"transmit_interval\": {\n#                 \"minimum_interval\": 4\n#             },\n#             \"version\": \"automatic\"\n#         },\n#         \"bgp_error_tolerance\": {\n#             \"malformed_route_limit\": 40000000\n#         },\n#         \"description\": \"This is configured with Junos_bgp resource module replace\",\n#         \"egress_te_sid_stats\": true,\n#         \"hold_time\": 5,\n#         \"out_delay\": 10,\n#         \"preference\": \"2\"\n#     }\n#\n#\n# Using purged\n#\n# Before state\n# ------------\n#\n# admin# show protocols bgp\n# precision-timers;\n# advertise-from-main-vpn-tables;\n# holddown-all-stale-labels;\n# description \"This is configured with Junos_bgp resource module\";\n# accept-remote-nexthop;\n# preference 2;\n# hold-time 5;\n# advertise-inactive;\n# no-advertise-peer-as;\n# no-aggregator-id;\n# out-delay 10;\n# log-updown;\n# damping;\n# bgp-error-tolerance {\n#     malformed-route-limit 20000000;\n# }\n# authentication-algorithm md5;\n# no-client-reflect;\n# include-mp-next-hop;\n# bmp {\n#     monitor enable;\n# }\n# add-path-display-ipv4-address;\n# egress-te-sid-stats;\n# group internal {\n#     out-delay 12;\n# }\n# admin# show routing-options autonomous-system\n# 65534 loops 3 asdot-notation;\n\n- name: Purge Junos BGP global config\n  junipernetworks.junos.junos_bgp_global:\n    config:\n    state: purged\n\n# After state\n# ----------\n# admin# show protocols bgp\n#\n# [edit]\n# admin# show routing-options autonomous-system\n#\n#[edit]\n\n\n# Using rendered\n#\n#\n- name: Render the commands for provided  configuration\n  junipernetworks.junos.junos_bgp_global:\n    config:\n      authentication_algorithm: \"md5\"\n      bfd_liveness_detection:\n        minimum_receive_interval: 4\n        multiplier: 10\n        no_adaptation: true\n        transmit_interval:\n          minimum_interval: 2\n        version: \"automatic\"\n      bgp_error_tolerance:\n        malformed_route_limit: 20000000\n      bmp:\n        monitor: true\n      damping: true\n      description: \"This is configured with Junos_bgp resource module\"\n      egress_te_sid_stats: true\n      hold_time: 5\n    state: rendered\n\n#\n#\n# -------------------------\n# Module Execution Result\n# -------------------------\n#\n#\n# \"rendered\": \"\n# <nc:protocols\n#     xmlns:nc=\"urn:ietf:params:xml:ns:netconf:base:1.0\">\n#     <nc:bgp>\n#         <nc:damping/>\n#         <nc:egress-te-sid-stats/>\n#         <nc:authentication-algorithm>md5</nc:authentication-algorithm>\n#         <nc:description>This is configured with Junos_bgp resource module</nc:description>\n#         <nc:hold-time>5</nc:hold-time>\n#         <nc:bfd-liveness-detection>\n#             <nc:transmit-interval>\n#                 <nc:minimum-interval>2</nc:minimum-interval>\n#             </nc:transmit-interval>\n#             <nc:minimum-receive-interval>4</nc:minimum-receive-interval>\n#             <nc:multiplier>10</nc:multiplier>\n#             <nc:no-adaptation/>\n#             <nc:version>automatic</nc:version>\n#         </nc:bfd-liveness-detection>\n#         <nc:bgp-error-tolerance>\n#             <nc:malformed-route-limit>20000000</nc:malformed-route-limit>\n#         </nc:bgp-error-tolerance>\n#         <nc:bmp>\n#             <nc:monitor>enable</nc:monitor>\n#         </nc:bmp>\n#     </nc:bgp>\n# </nc:protocols>\"\n#\n# Using parsed\n# parsed.cfg\n# ------------\n# <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n# <rpc-reply message-id=\"urn:uuid:0cadb4e8-5bba-47f4-986e-72906227007f\">\n#    <configuration changed-seconds=\"1590139550\" changed-localtime=\"2020-05-22 09:25:50 UTC\">\n#       <version>18.4R1-S2.4</version>\n#       <protocols>\n#          <bgp>\n#             <precision-timers />\n#             <advertise-from-main-vpn-tables />\n#             <holddown-all-stale-labels />\n#             <description>This is configured with Junos_bgp resource module</description>\n#             <accept-remote-nexthop />\n#             <preference>2</preference>\n#             <hold-time>5</hold-time>\n#             <advertise-inactive />\n#             <no-advertise-peer-as />\n#             <no-aggregator-id />\n#             <out-delay>10</out-delay>\n#             <log-updown />\n#             <damping />\n#             <bgp-error-tolerance>\n#                <malformed-route-limit>20000000</malformed-route-limit>\n#             </bgp-error-tolerance>\n#             <authentication-algorithm>md5</authentication-algorithm>\n#             <remove-private />\n#             <no-client-reflect />\n#             <include-mp-next-hop />\n#             <bmp>\n#                <monitor>disable</monitor>\n#                <route-monitoring>\n#                   <none />\n#                </route-monitoring>\n#             </bmp>\n#             <advertise-bgp-static>\n#                <policy>static-to-bgp</policy>\n#             </advertise-bgp-static>\n#             <add-path-display-ipv4-address />\n#             <bfd-liveness-detection>\n#                <version>automatic</version>\n#                <minimum-receive-interval>4</minimum-receive-interval>\n#                <multiplier>10</multiplier>\n#                <no-adaptation />\n#                <transmit-interval>\n#                   <minimum-interval>2</minimum-interval>\n#                </transmit-interval>\n#                <detection-time>\n#                   <threshold>300000</threshold>\n#                </detection-time>\n#             </bfd-liveness-detection>\n#             <egress-te-sid-stats />\n#             <group>\n#                <name>internal</name>\n#                <out-delay>8</out-delay>\n#             </group>\n#             <group>\n#                <name>external</name>\n#                <out-delay>9</out-delay>\n#             </group>\n#             <group>\n#                <name>inboun</name>\n#                <type>internal</type>\n#             </group>\n#             <group>\n#                <name>ibgp</name>\n#                <type>internal</type>\n#                <local-address>10.2.2.2</local-address>\n#                <export>static-to-bgp</export>\n#                <neighbor>\n#                   <name>10.1.1.1</name>\n#                </neighbor>\n#             </group>\n#          </bgp>\n#          <ospf3>\n#             <area>\n#                <name>0.0.0.100</name>\n#                <stub>\n#                   <default-metric>200</default-metric>\n#                </stub>\n#                <interface>\n#                   <name>so-0/0/0.0</name>\n#                   <metric>5</metric>\n#                   <priority>3</priority>\n#                </interface>\n#             </area>\n#          </ospf3>\n#       </protocols>\n#       <routing-options>\n#          <static>\n#             <route>\n#                <name>172.16.17.0/24</name>\n#                <discard />\n#             </route>\n#          </static>\n#          <router-id>10.200.16.75</router-id>\n#          <autonomous-system>\n#             <as-number>65432</as-number>\n#          </autonomous-system>\n#       </routing-options>\n#    </configuration>\n# </rpc-reply>\n\n\n- name: Parsed the device configuration to get output commands\n  junipernetworks.junos.junos_bgp_global:\n    running_config: \"{{ lookup('file', './parsed.cfg') }}\"\n    state: parsed\n#\n#\n# -------------------------\n# Module Execution Result\n# -------------------------\n#\n#\n# \"parsed\":  {\n#         \"accept_remote_nexthop\": true,\n#         \"add_path_display_ipv4_address\": true,\n#         \"advertise_bgp_static\": {\n#             \"policy\": \"static-to-bgp\"\n#         },\n#         \"advertise_from_main_vpn_tables\": true,\n#         \"advertise_inactive\": true,\n#         \"as_number\": \"65432\",\n#         \"authentication_algorithm\": \"md5\",\n#         \"bfd_liveness_detection\": {\n#             \"detection_time\": {\n#                 \"threshold\": 300000\n#             },\n#             \"minimum_receive_interval\": 4,\n#             \"multiplier\": 10,\n#             \"no_adaptation\": true,\n#             \"transmit_interval\": {\n#                 \"minimum_interval\": 2\n#             },\n#             \"version\": \"automatic\"\n#         },\n#         \"bgp_error_tolerance\": {\n#             \"malformed_route_limit\": 20000000\n#         },\n#         \"bmp\": {\n#             \"monitor\": false,\n#             \"route_monitoring\": {\n#                 \"none\": true\n#             }\n#         },\n#         \"damping\": true,\n#         \"description\": \"This is configured with Junos_bgp resource module\",\n#         \"egress_te_sid_stats\": true,\n#         \"hold_time\": 5,\n#         \"holddown_all_stale_labels\": true,\n#         \"include_mp_next_hop\": true,\n#         \"log_updown\": true,\n#         \"no_advertise_peer_as\": true,\n#         \"no_aggregator_id\": true,\n#         \"no_client_reflect\": true,\n#         \"out_delay\": 10,\n#         \"precision_timers\": true,\n#         \"preference\": \"2\"\n#     }\n#\n\n"
  },
  "junipernetworks.junos.junos_command": {
    "doc": {
      "description": "Sends an arbitrary set of commands to an JUNOS node and returns the results read from the device.  This module includes an argument that will cause the module to wait for a specific condition before returning or timing out if the condition is not met.",
      "has_action": true,
      "notes": "This module requires the netconf system service be enabled on the remote device being managed.\nTested against vSRX JUNOS version 15.1X49-D15.4, vqfx-10000 JUNOS Version 15.1X53-D60.4.\nRecommended connection is C(netconf). See L(the Junos OS Platform Options,../network/user_guide/platform_junos.html).\nThis module also works with C(network_cli) connections and with C(local) connections for legacy playbooks.\nFor information on using CLI and netconf see the :ref:`Junos OS Platform Options guide <junos_platform_options>`\nFor more information on using Ansible to manage network devices see the :ref:`Ansible Network Guide <network_guide>`\nFor more information on using Ansible to manage Juniper network devices see U(https://www.ansible.com/ansible-juniper).",
      "options": {
        "commands": {
          "aliases": [],
          "description": "The commands to send to the remote junos device over the configured provider.  The resulting output from the command is returned.  If the I(wait_for) argument is provided, the module is not returned until the condition is satisfied or the number of I(retries) has been exceeded.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "display": {
          "aliases": [
            "format",
            "output"
          ],
          "description": "Encoding scheme to use when serializing output from the device. This handles how to properly understand the output and apply the conditionals path to the result set. For I(rpcs) argument default display is C(xml) and for I(commands) argument default display is C(text). Value C(set) is applicable only for fetching configuration from device.",
          "type": "str",
          "required": false,
          "choices": [
            "text",
            "json",
            "xml",
            "set"
          ],
          "suboptions": {}
        },
        "interval": {
          "aliases": [],
          "description": "Configures the interval in seconds to wait between retries of the command.  If the command does not pass the specified conditional, the interval indicates how to long to wait before trying the command again.",
          "default": "1",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "match": {
          "aliases": [],
          "description": "The I(match) argument is used in conjunction with the I(wait_for) argument to specify the match policy.  Valid values are C(all) or C(any).  If the value is set to C(all) then all conditionals in the I(wait_for) must be satisfied.  If the value is set to C(any) then only one of the values must be satisfied.",
          "default": "all",
          "type": "str",
          "required": false,
          "choices": [
            "any",
            "all"
          ],
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "B(Deprecated)\nStarting with Ansible 2.5 we recommend using C(connection: network_cli) or C(connection: netconf).\nFor more information please see the L(Junos OS Platform Options guide, ../network/user_guide/platform_junos.html).\nHORIZONTALLINE\nA dict object containing connection details.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "host": {
              "aliases": [],
              "description": "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [],
              "description": "Specifies the password to use to authenticate the connection to the remote device.   This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "port": {
              "aliases": [],
              "description": "Specifies the port to use when building the connection to the remote device.  The port value will default to the well known SSH port of 22 (for C(transport=cli)) or port 830 (for C(transport=netconf)) device.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "ssh_keyfile": {
              "aliases": [],
              "description": "Specifies the SSH key to use to authenticate the connection to the remote device.   This value is the path to the key used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead.",
              "type": "path",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "netconf",
              "type": "str",
              "required": false,
              "choices": [
                "cli",
                "netconf"
              ],
              "suboptions": {}
            },
            "username": {
              "aliases": [],
              "description": "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "retries": {
          "aliases": [],
          "description": "Specifies the number of retries a command should be tried before it is considered failed.  The command is run on the target device every retry and evaluated against the I(wait_for) conditionals.",
          "default": "10",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "rpcs": {
          "aliases": [],
          "description": "The C(rpcs) argument accepts a list of RPCs to be executed over a netconf session and the results from the RPC execution is return to the playbook via the modules results dictionary.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "wait_for": {
          "aliases": [
            "waitfor"
          ],
          "description": "Specifies what to evaluate from the output of the command and what conditionals to apply.  This argument will cause the task to wait for a particular conditional to be true before moving forward.   If the conditional is not true by the configured retries, the task fails.  See examples.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        }
      },
      "requirements": [
        "jxmlease",
        "ncclient (>=v0.5.2)"
      ],
      "short_description": "Run arbitrary commands on an Juniper JUNOS device",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: run show version on remote devices\n  junipernetworks.junos.junos_command:\n    commands: show version\n\n- name: run show version and check to see if output contains Juniper\n  junipernetworks.junos.junos_command:\n    commands: show version\n    wait_for: result[0] contains Juniper\n\n- name: run multiple commands on remote nodes\n  junipernetworks.junos.junos_command:\n    commands:\n    - show version\n    - show interfaces\n\n- name: run multiple commands and evaluate the output\n  junipernetworks.junos.junos_command:\n    commands:\n    - show version\n    - show interfaces\n    wait_for:\n    - result[0] contains Juniper\n    - result[1] contains Loopback0\n\n- name: run commands and specify the output format\n  junipernetworks.junos.junos_command:\n    commands: show version\n    display: json\n\n- name: run rpc on the remote device\n  junipernetworks.junos.junos_command:\n    commands: show configuration\n    display: set\n\n- name: run rpc on the remote device\n  junipernetworks.junos.junos_command:\n    rpcs: get-software-information\n"
  },
  "junipernetworks.junos.junos_config": {
    "doc": {
      "description": "This module provides an implementation for working with the active configuration running on Juniper JUNOS devices.  It provides a set of arguments for loading configuration, performing rollback operations and zeroing the active configuration on the device.",
      "has_action": true,
      "notes": "This module requires the netconf system service be enabled on the remote device being managed.\nAbbreviated commands are NOT idempotent, see L(Network FAQ,../network/user_guide/faq.html\nLoading JSON-formatted configuration I(json) is supported starting in Junos OS Release 16.1 onwards.\nUpdate C(override) not currently compatible with C(set) notation.\nTested against vSRX JUNOS version 15.1X49-D15.4, vqfx-10000 JUNOS Version 15.1X53-D60.4.\nRecommended connection is C(netconf). See L(the Junos OS Platform Options,../network/user_guide/platform_junos.html).\nThis module also works with C(local) connections for legacy playbooks.\nFor information on using CLI and netconf see the :ref:`Junos OS Platform Options guide <junos_platform_options>`\nFor more information on using Ansible to manage network devices see the :ref:`Ansible Network Guide <network_guide>`\nFor more information on using Ansible to manage Juniper network devices see U(https://www.ansible.com/ansible-juniper).",
      "options": {
        "backup": {
          "aliases": [],
          "description": "This argument will cause the module to create a full backup of the current C(running-config) from the remote device before any changes are made. If the C(backup_options) value is not given, the backup file is written to the C(backup) folder in the playbook root directory or role root directory, if playbook is part of an ansible role. If the directory does not exist, it is created.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "backup_options": {
          "aliases": [],
          "description": "This is a dict object containing configurable options related to backup file path. The value of this option is read only when C(backup) is set to I(yes), if C(backup) is set to I(no) this option will be silently ignored.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "backup_format": {
              "aliases": [],
              "description": "This argument specifies the format of the configuration the backup file will be stored as.  If the argument is not specified, the module will use the 'set' format.",
              "default": "set",
              "type": "str",
              "required": false,
              "choices": [
                "xml",
                "set",
                "text",
                "json"
              ],
              "suboptions": {}
            },
            "dir_path": {
              "aliases": [],
              "description": "This option provides the path ending with directory name in which the backup configuration file will be stored. If the directory does not exist it will be first created and the filename is either the value of C(filename) or default filename as described in C(filename) options description. If the path value is not given in that case a I(backup) directory will be created in the current working directory and backup configuration will be copied in C(filename) within I(backup) directory.",
              "type": "path",
              "required": false,
              "suboptions": {}
            },
            "filename": {
              "aliases": [],
              "description": "The filename to be used to store the backup configuration. If the filename is not given it will be generated based on the hostname, current time and date in format defined by <hostname>_config.<current-date>@<current-time>",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "check_commit": {
          "aliases": [],
          "description": "This argument will check correctness of syntax; do not apply changes.\nNote that this argument can be used to confirm verified configuration done via commit confirmed operation",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "comment": {
          "aliases": [],
          "description": "The C(comment) argument specifies a text string to be used when committing the configuration.  If the C(confirm) argument is set to False, this argument is silently ignored.",
          "default": "configured by junos_config",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "confirm": {
          "aliases": [],
          "description": "The C(confirm) argument will configure a time out value in minutes for the commit to be confirmed before it is automatically rolled back.  If the C(confirm) argument is set to False, this argument is silently ignored.  If the value for this argument is set to 0, the commit is confirmed immediately.",
          "default": "0",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "confirm_commit": {
          "aliases": [],
          "description": "This argument will execute commit operation on remote device. It can be used to confirm a previous commit.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "lines": {
          "aliases": [
            "commands"
          ],
          "description": "This argument takes a list of C(set) or C(delete) configuration lines to push into the remote device.  Each line must start with either C(set) or C(delete).  This argument is mutually exclusive with the I(src) argument.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "B(Deprecated)\nStarting with Ansible 2.5 we recommend using C(connection: network_cli) or C(connection: netconf).\nFor more information please see the L(Junos OS Platform Options guide, ../network/user_guide/platform_junos.html).\nHORIZONTALLINE\nA dict object containing connection details.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "host": {
              "aliases": [],
              "description": "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [],
              "description": "Specifies the password to use to authenticate the connection to the remote device.   This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "port": {
              "aliases": [],
              "description": "Specifies the port to use when building the connection to the remote device.  The port value will default to the well known SSH port of 22 (for C(transport=cli)) or port 830 (for C(transport=netconf)) device.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "ssh_keyfile": {
              "aliases": [],
              "description": "Specifies the SSH key to use to authenticate the connection to the remote device.   This value is the path to the key used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead.",
              "type": "path",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "netconf",
              "type": "str",
              "required": false,
              "choices": [
                "cli",
                "netconf"
              ],
              "suboptions": {}
            },
            "username": {
              "aliases": [],
              "description": "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "replace": {
          "aliases": [],
          "description": "The C(replace) argument will instruct the remote device to replace the current configuration hierarchy with the one specified in the corresponding hierarchy of the source configuration loaded from this module.\nNote this argument should be considered deprecated.  To achieve the equivalent, set the I(update) argument to C(replace). This argument will be removed in a future release. The C(replace) and C(update) argument is mutually exclusive.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "rollback": {
          "aliases": [],
          "description": "The C(rollback) argument instructs the module to rollback the current configuration to the identifier specified in the argument.  If the specified rollback identifier does not exist on the remote device, the module will fail.  To rollback to the most recent commit, set the C(rollback) argument to 0.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "src": {
          "aliases": [],
          "description": "The I(src) argument provides a path to the configuration file to load into the remote system. The path can either be a full system path to the configuration file if the value starts with / or relative to the root of the implemented role or playbook. This argument is mutually exclusive with the I(lines) argument.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "src_format": {
          "aliases": [],
          "description": "The I(src_format) argument specifies the format of the configuration found int I(src).  If the I(src_format) argument is not provided, the module will attempt to determine the format of the configuration file specified in I(src).",
          "type": "str",
          "required": false,
          "choices": [
            "xml",
            "set",
            "text",
            "json"
          ],
          "suboptions": {}
        },
        "update": {
          "aliases": [],
          "description": "This argument will decide how to load the configuration data particularly when the candidate configuration and loaded configuration contain conflicting statements. Following are accepted values. C(merge) combines the data in the loaded configuration with the candidate configuration. If statements in the loaded configuration conflict with statements in the candidate configuration, the loaded statements replace the candidate ones. C(override) discards the entire candidate configuration and replaces it with the loaded configuration. C(replace) substitutes each hierarchy level in the loaded configuration for the corresponding level. C(update) is similar to the override option. The new configuration completely replaces the existing configuration. The difference comes when the configuration is later committed. This option performs a 'diff' between the new candidate configuration and the existing committed configuration. It then only notifies system processes responsible for the changed portions of the configuration, and only marks the actual configuration changes as 'changed'.",
          "default": "merge",
          "type": "str",
          "required": false,
          "choices": [
            "merge",
            "override",
            "replace",
            "update"
          ],
          "suboptions": {}
        },
        "zeroize": {
          "aliases": [],
          "description": "The C(zeroize) argument is used to completely sanitize the remote device configuration back to initial defaults.  This argument will effectively remove all current configuration statements on the remote device.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "ncclient (>=v0.5.2)"
      ],
      "short_description": "Manage configuration on devices running Juniper JUNOS",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: load configure file into device\n  junipernetworks.junos.junos_config:\n    src: srx.cfg\n    comment: update config\n\n- name: load configure lines into device\n  junipernetworks.junos.junos_config:\n    lines:\n    - set interfaces ge-0/0/1 unit 0 description \"Test interface\"\n    - set vlans vlan01 description \"Test vlan\"\n    comment: update config\n\n- name: Set routed VLAN interface (RVI) IPv4 address\n  junipernetworks.junos.junos_config:\n    lines:\n    - set vlans vlan01 vlan-id 1\n    - set interfaces irb unit 10 family inet address 10.0.0.1/24\n    - set vlans vlan01 l3-interface irb.10\n\n- name: Check correctness of commit configuration\n  junipernetworks.junos.junos_config:\n    check_commit: yes\n\n- name: rollback the configuration to id 10\n  junipernetworks.junos.junos_config:\n    rollback: 10\n\n- name: zero out the current configuration\n  junipernetworks.junos.junos_config:\n    zeroize: yes\n\n- name: Set VLAN access and trunking\n  junipernetworks.junos.junos_config:\n    lines:\n    - set vlans vlan02 vlan-id 6\n    - set interfaces ge-0/0/6.0 family ethernet-switching interface-mode access vlan\n      members vlan02\n    - set interfaces ge-0/0/6.0 family ethernet-switching interface-mode trunk vlan\n      members vlan02\n\n- name: confirm a previous commit\n  junipernetworks.junos.junos_config:\n    confirm_commit: yes\n\n- name: for idempotency, use full-form commands\n  junipernetworks.junos.junos_config:\n    lines:\n      # - set int ge-0/0/1 unit 0 desc \"Test interface\"\n    - set interfaces ge-0/0/1 unit 0 description \"Test interface\"\n\n- name: configurable backup path\n  junipernetworks.junos.junos_config:\n    src: srx.cfg\n    backup: yes\n    backup_options:\n      filename: backup.cfg\n      dir_path: /home/user\n"
  },
  "junipernetworks.junos.junos_facts": {
    "doc": {
      "description": "Collects fact information from a remote device running the Junos operating system.  By default, the module will collect basic fact information from the device to be included with the hostvars. Additional fact information can be collected based on the configured set of arguments.",
      "has_action": true,
      "notes": "Ensure I(config_format) used to retrieve configuration from device is supported by junos version running on device.\nWith I(config_format = json), configuration in the results will be a dictionary(and not a JSON string)\nThis module requires the netconf system service be enabled on the remote device being managed.\nTested against vSRX JUNOS version 15.1X49-D15.4, vqfx-10000 JUNOS Version 15.1X53-D60.4.\nRecommended connection is C(netconf). See L(the Junos OS Platform Options,../network/user_guide/platform_junos.html).\nThis module also works with C(local) connections for legacy playbooks.\nFetching old style facts requires junos-eznc library to be installed on control node and the device login credentials must be given in provider option.\nFor information on using CLI and netconf see the :ref:`Junos OS Platform Options guide <junos_platform_options>`\nFor more information on using Ansible to manage network devices see the :ref:`Ansible Network Guide <network_guide>`\nFor more information on using Ansible to manage Juniper network devices see U(https://www.ansible.com/ansible-juniper).",
      "options": {
        "available_network_resources": {
          "aliases": [],
          "description": "When 'True' a list of network resources for which resource modules are available will be provided.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "config_format": {
          "aliases": [],
          "description": "The I(config_format) argument specifies the format of the configuration when serializing output from the device. This argument is applicable only when C(config) value is present in I(gather_subset). The I(config_format) should be supported by the junos version running on device. This value is not applicable while fetching old style facts that is when C(ofacts) value is present in value if I(gather_subset) value. This option is valid only for C(gather_subset) values.",
          "default": "text",
          "type": "str",
          "required": false,
          "choices": [
            "xml",
            "text",
            "set",
            "json"
          ],
          "suboptions": {}
        },
        "gather_network_resources": {
          "aliases": [],
          "description": "When supplied, this argument will restrict the facts collected to a given subset. Possible values for this argument include all and the resources like interfaces, vlans etc. Can specify a list of values to include a larger subset. Values can also be used with an initial C(!) to specify that a specific subset should not be collected. Valid subsets are 'all', 'interfaces', 'lacp', 'lacp_interfaces', 'lag_interfaces', 'l2_interfaces', 'l3_interfaces', 'lldp_global', 'lldp_interfaces', 'vlans'.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "gather_subset": {
          "aliases": [],
          "description": "When supplied, this argument will restrict the facts collected to a given subset.  Possible values for this argument include all, hardware, config, and interfaces.  Can specify a list of values to include a larger subset.  Values can also be used with an initial C(!) to specify that a specific subset should not be collected. To maintain backward compatibility old style facts can be retrieved by explicitly adding C(ofacts)  to value, this requires junos-eznc to be installed as a prerequisite. Valid value of gather_subset are default, hardware, config, interfaces, ofacts. If C(ofacts) is present in the list it fetches the old style facts (fact keys without 'ansible_' prefix) and it requires junos-eznc library to be installed on control node and the device login credentials must be given in C(provider) option.",
          "default": "['!config']",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "B(Deprecated)\nStarting with Ansible 2.5 we recommend using C(connection: network_cli) or C(connection: netconf).\nFor more information please see the L(Junos OS Platform Options guide, ../network/user_guide/platform_junos.html).\nHORIZONTALLINE\nA dict object containing connection details.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "host": {
              "aliases": [],
              "description": "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [],
              "description": "Specifies the password to use to authenticate the connection to the remote device.   This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "port": {
              "aliases": [],
              "description": "Specifies the port to use when building the connection to the remote device.  The port value will default to the well known SSH port of 22 (for C(transport=cli)) or port 830 (for C(transport=netconf)) device.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "ssh_keyfile": {
              "aliases": [],
              "description": "Specifies the SSH key to use to authenticate the connection to the remote device.   This value is the path to the key used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead.",
              "type": "path",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "netconf",
              "type": "str",
              "required": false,
              "choices": [
                "cli",
                "netconf"
              ],
              "suboptions": {}
            },
            "username": {
              "aliases": [],
              "description": "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        }
      },
      "requirements": [
        "ncclient (>=v0.5.2)"
      ],
      "short_description": "Collect facts from remote devices running Juniper Junos",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: collect default set of facts\n  junipernetworks.junos.junos_facts:\n\n- name: collect default set of facts and configuration\n  junipernetworks.junos.junos_facts:\n    gather_subset: config\n\n- name: Gather legacy and resource facts\n  junipernetworks.junos.junos_facts:\n    gather_subset: all\n    gather_network_resources: all\n"
  },
  "junipernetworks.junos.junos_interface": {
    "doc": {
      "description": "This module provides declarative management of Interfaces on Juniper JUNOS network devices.",
      "has_action": true,
      "notes": "This module requires the netconf system service be enabled on the remote device being managed.\nTested against vSRX JUNOS version 15.1X49-D15.4, vqfx-10000 JUNOS Version 15.1X53-D60.4.\nRecommended connection is C(netconf). See L(the Junos OS Platform Options,../network/user_guide/platform_junos.html).\nThis module also works with C(local) connections for legacy playbooks.\nFor information on using CLI and netconf see the :ref:`Junos OS Platform Options guide <junos_platform_options>`\nFor more information on using Ansible to manage network devices see the :ref:`Ansible Network Guide <network_guide>`\nFor more information on using Ansible to manage Juniper network devices see U(https://www.ansible.com/ansible-juniper).",
      "options": {
        "active": {
          "aliases": [],
          "description": "Specifies whether or not the configuration is active or deactivated",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "aggregate": {
          "aliases": [],
          "description": "List of Interfaces definitions.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "active": {
              "aliases": [],
              "description": "Specifies whether or not the configuration is active or deactivated",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "delay": {
              "aliases": [],
              "description": "Time in seconds to wait before checking for the operational state on remote device. This wait is applicable for operational state argument which are I(state) with values C(up)/C(down), I(tx_rate) and I(rx_rate).",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "description": {
              "aliases": [],
              "description": "Description of Interface.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "duplex": {
              "aliases": [],
              "description": "Interface link status.",
              "type": "str",
              "required": false,
              "choices": [
                "full",
                "half",
                "auto"
              ],
              "suboptions": {}
            },
            "enabled": {
              "aliases": [],
              "description": "Configure interface link status.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "mtu": {
              "aliases": [],
              "description": "Maximum size of transmit packet.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "name": {
              "aliases": [],
              "description": "Name of the Interface.",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "neighbors": {
              "aliases": [],
              "description": "Check the operational state of given interface C(name) for LLDP neighbor.\nThe following suboptions are available.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "host": {
                  "aliases": [],
                  "description": "LLDP neighbor host for given interface C(name).",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "port": {
                  "aliases": [],
                  "description": "LLDP neighbor port to which given interface C(name) is connected.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "rx_rate": {
              "aliases": [],
              "description": "Receiver rate in bits per second (bps).\nThis is state check parameter only.\nSupports conditionals, see L(Conditionals in Networking Modules,../network/user_guide/network_working_with_command_output.html)",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "speed": {
              "aliases": [],
              "description": "Interface link speed.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "state": {
              "aliases": [],
              "description": "State of the Interface configuration, C(up) indicates present and operationally up and C(down) indicates present and operationally C(down)",
              "type": "str",
              "required": false,
              "choices": [
                "present",
                "absent",
                "up",
                "down"
              ],
              "suboptions": {}
            },
            "tx_rate": {
              "aliases": [],
              "description": "Transmit rate in bits per second (bps).\nThis is state check parameter only.\nSupports conditionals, see L(Conditionals in Networking Modules,../network/user_guide/network_working_with_command_output.html)",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "delay": {
          "aliases": [],
          "description": "Time in seconds to wait before checking for the operational state on remote device. This wait is applicable for operational state argument which are I(state) with values C(up)/C(down), I(tx_rate) and I(rx_rate).",
          "default": "10",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "Description of Interface.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "duplex": {
          "aliases": [],
          "description": "Interface link status.",
          "type": "str",
          "required": false,
          "choices": [
            "full",
            "half",
            "auto"
          ],
          "suboptions": {}
        },
        "enabled": {
          "aliases": [],
          "description": "Configure interface link status.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "mtu": {
          "aliases": [],
          "description": "Maximum size of transmit packet.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the Interface.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "neighbors": {
          "aliases": [],
          "description": "Check the operational state of given interface C(name) for LLDP neighbor.\nThe following suboptions are available.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "host": {
              "aliases": [],
              "description": "LLDP neighbor host for given interface C(name).",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "port": {
              "aliases": [],
              "description": "LLDP neighbor port to which given interface C(name) is connected.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "provider": {
          "aliases": [],
          "description": "B(Deprecated)\nStarting with Ansible 2.5 we recommend using C(connection: network_cli) or C(connection: netconf).\nFor more information please see the L(Junos OS Platform Options guide, ../network/user_guide/platform_junos.html).\nHORIZONTALLINE\nA dict object containing connection details.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "host": {
              "aliases": [],
              "description": "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [],
              "description": "Specifies the password to use to authenticate the connection to the remote device.   This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "port": {
              "aliases": [],
              "description": "Specifies the port to use when building the connection to the remote device.  The port value will default to the well known SSH port of 22 (for C(transport=cli)) or port 830 (for C(transport=netconf)) device.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "ssh_keyfile": {
              "aliases": [],
              "description": "Specifies the SSH key to use to authenticate the connection to the remote device.   This value is the path to the key used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead.",
              "type": "path",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "netconf",
              "type": "str",
              "required": false,
              "choices": [
                "cli",
                "netconf"
              ],
              "suboptions": {}
            },
            "username": {
              "aliases": [],
              "description": "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "rx_rate": {
          "aliases": [],
          "description": "Receiver rate in bits per second (bps).\nThis is state check parameter only.\nSupports conditionals, see L(Conditionals in Networking Modules,../network/user_guide/network_working_with_command_output.html)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "speed": {
          "aliases": [],
          "description": "Interface link speed.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "State of the Interface configuration, C(up) indicates present and operationally up and C(down) indicates present and operationally C(down)",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent",
            "up",
            "down"
          ],
          "suboptions": {}
        },
        "tx_rate": {
          "aliases": [],
          "description": "Transmit rate in bits per second (bps).\nThis is state check parameter only.\nSupports conditionals, see L(Conditionals in Networking Modules,../network/user_guide/network_working_with_command_output.html)",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "ncclient (>=v0.5.2)"
      ],
      "short_description": "(deprecated, removed after 2022-06-01) Manage Interface on Juniper JUNOS network devices",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: configure interface\n  junipernetworks.junos.junos_interface:\n    name: ge-0/0/1\n    description: test-interface\n\n- name: remove interface\n  junipernetworks.junos.junos_interface:\n    name: ge-0/0/1\n    state: absent\n\n- name: make interface down\n  junipernetworks.junos.junos_interface:\n    name: ge-0/0/1\n    enabled: false\n\n- name: make interface up\n  junipernetworks.junos.junos_interface:\n    name: ge-0/0/1\n    enabled: true\n\n- name: Deactivate interface config\n  junipernetworks.junos.junos_interface:\n    name: ge-0/0/1\n    state: present\n    active: false\n\n- name: Activate interface config\n  junipernetworks.junos.junos_interface:\n    name: ge-0/0/1\n    state: present\n    active: true\n\n- name: Configure interface speed, mtu, duplex\n  junipernetworks.junos.junos_interface:\n    name: ge-0/0/1\n    state: present\n    speed: 1g\n    mtu: 256\n    duplex: full\n\n- name: Create interface using aggregate\n  junipernetworks.junos.junos_interface:\n    aggregate:\n    - name: ge-0/0/1\n      description: test-interface-1\n    - name: ge-0/0/2\n      description: test-interface-2\n    speed: 1g\n    duplex: full\n    mtu: 512\n\n- name: Delete interface using aggregate\n  junipernetworks.junos.junos_interface:\n    aggregate:\n    - name: ge-0/0/1\n    - name: ge-0/0/2\n    state: absent\n\n- name: Check intent arguments\n  junipernetworks.junos.junos_interface:\n    name: '{{ name }}'\n    state: up\n    tx_rate: ge(0)\n    rx_rate: le(0)\n\n- name: Check neighbor intent\n  junipernetworks.junos.junos_interface:\n    name: xe-0/1/1\n    neighbors:\n    - port: Ethernet1/0/1\n      host: netdev\n\n- name: Config + intent\n  junipernetworks.junos.junos_interface:\n    name: '{{ name }}'\n    enabled: false\n    state: down\n"
  },
  "junipernetworks.junos.junos_interfaces": {
    "doc": {
      "description": "This module manages the interfaces on Juniper Junos OS network devices.",
      "has_action": true,
      "notes": "This module requires the netconf system service be enabled on the remote device being managed.\nTested against vSRX JUNOS version 18.4R1.\nThis module works with connection C(netconf). See L(the Junos OS Platform Options,../network/user_guide/platform_junos.html).",
      "options": {
        "config": {
          "aliases": [],
          "description": "The provided configuration",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "description": {
              "aliases": [],
              "description": "Interface description.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "duplex": {
              "aliases": [],
              "description": "Interface link status. Applicable for Ethernet interfaces only, either in half duplex, full duplex or in automatic state which negotiates the duplex automatically.",
              "type": "str",
              "required": false,
              "choices": [
                "automatic",
                "full-duplex",
                "half-duplex"
              ],
              "suboptions": {}
            },
            "enabled": {
              "aliases": [],
              "description": "Administrative state of the interface.\nSet the value to C(true) to administratively enabled the interface or C(false) to disable it.",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "hold_time": {
              "aliases": [],
              "description": "The hold time for given interface name.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "down": {
                  "aliases": [],
                  "description": "The link down hold time in milliseconds.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "up": {
                  "aliases": [],
                  "description": "The link up hold time in milliseconds.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "mtu": {
              "aliases": [],
              "description": "MTU for a specific interface.\nApplicable for Ethernet interfaces only.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "name": {
              "aliases": [],
              "description": "Full name of interface, e.g. ge-0/0/0.",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "speed": {
              "aliases": [],
              "description": "Interface link speed. Applicable for Ethernet interfaces only.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "running_config": {
          "aliases": [],
          "description": "This option is used only with state I(parsed).\nThe value of this option should be the output received from the Junos device by executing the command B(show interfaces).\nThe state I(parsed) reads the configuration from C(running_config) option and transforms it into Ansible structured data as per the resource module's argspec and the value is then returned in the I(parsed) key within the result.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The state of the configuration after module completion",
          "default": "merged",
          "type": "str",
          "required": false,
          "choices": [
            "merged",
            "replaced",
            "overridden",
            "deleted",
            "gathered",
            "parsed",
            "rendered"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "ncclient (>=v0.6.4)"
      ],
      "short_description": "Junos Interfaces resource module",
      "version_added": "1.0.0"
    },
    "examples": "\n# Using deleted\n\n# Before state:\n# -------------\n# user@junos01# show interfaces\n# ge-0/0/1 {\n#    description \"Configured by Ansible-1\";\n#    speed 1g;\n#    mtu 1800\n# }\n# ge-0/0/2 {\n#    description \"Configured by Ansible-2\";\n#    ether-options {\n#        auto-negotiation;\n#    }\n# }\n\n- name: \"Delete given options for the interface (Note: This won't delete the interface itself if any other values are configured for interface)\"\n  junipernetworks.junos.junos_interfaces:\n    config:\n    - name: ge-0/0/1\n      description: Configured by Ansible-1\n      speed: 1g\n      mtu: 1800\n    - name: ge-0/0/2\n      description: Configured by Ansible -2\n    state: deleted\n\n# After state:\n# ------------\n# user@junos01# show interfaces\n# ge-0/0/2 {\n#    ether-options {\n#        auto-negotiation;\n#    }\n# }\n\n\n# Using merged\n\n# Before state:\n# -------------\n# user@junos01# show interfaces\n# ge-0/0/1 {\n#    description \"test interface\";\n#    speed 1g;\n# }\n\n- name: Merge provided configuration with device configuration (default operation\n    is merge)\n  junipernetworks.junos.junos_interfaces:\n    config:\n    - name: ge-0/0/1\n      description: Configured by Ansible-1\n      enabled: true\n      mtu: 1800\n    - name: ge-0/0/2\n      description: Configured by Ansible-2\n      enabled: false\n    state: merged\n\n# After state:\n# ------------\n# user@junos01# show interfaces\n# ge-0/0/1 {\n#    description \"Configured by Ansible-1\";\n#    speed 1g;\n#    mtu 1800\n# }\n# ge-0/0/2 {\n#    disable;\n#    description \"Configured by Ansible-2\";\n# }\n\n\n# Using overridden\n\n# Before state:\n# -------------\n# user@junos01# show interfaces\n# ge-0/0/1 {\n#    description \"Configured by Ansible-1\";\n#    speed 1g;\n#    mtu 1800\n# }\n# ge-0/0/2 {\n#    disable;\n#    description \"Configured by Ansible-2\";\n#    ether-options {\n#        auto-negotiation;\n#    }\n# }\n# ge-0/0/11 {\n#    description \"Configured by Ansible-11\";\n# }\n\n- name: Override device configuration of all interfaces with provided configuration\n  junipernetworks.junos.junos_interfaces:\n    config:\n    - name: ge-0/0/2\n      description: Configured by Ansible-2\n      enabled: false\n      mtu: 2800\n    - name: ge-0/0/3\n      description: Configured by Ansible-3\n    state: overridden\n\n# After state:\n# ------------\n# user@junos01# show interfaces\n# ge-0/0/2 {\n#    disable;\n#    description \"Configured by Ansible-2\";\n#    mtu 2800\n# }\n# ge-0/0/3 {\n#    description \"Configured by Ansible-3\";\n# }\n\n\n# Using replaced\n\n# Before state:\n# -------------\n# user@junos01# show interfaces\n# ge-0/0/1 {\n#    description \"Configured by Ansible-1\";\n#    speed 1g;\n#    mtu 1800\n# }\n# ge-0/0/2 {\n#    disable;\n#    mtu 1800;\n#    speed 1g;\n#    description \"Configured by Ansible-2\";\n#    ether-options {\n#        auto-negotiation;\n#    }\n# }\n# ge-0/0/11 {\n#    description \"Configured by Ansible-11\";\n# }\n\n- name: Replaces device configuration of listed interfaces with provided configuration\n  junipernetworks.junos.junos_interfaces:\n    config:\n    - name: ge-0/0/2\n      description: Configured by Ansible-2\n      enabled: false\n      mtu: 2800\n    - name: ge-0/0/3\n      description: Configured by Ansible-3\n    state: replaced\n\n# After state:\n# ------------\n# user@junos01# show interfaces\n# ge-0/0/1 {\n#    description \"Configured by Ansible-1\";\n#    speed 1g;\n#    mtu 1800\n# }\n# ge-0/0/2 {\n#    disable;\n#    description \"Configured by Ansible-2\";\n#    mtu 2800\n# }\n# ge-0/0/3 {\n#    description \"Configured by Ansible-3\";\n# }\n# ge-0/0/11 {\n#    description \"Configured by Ansible-11\";\n# }\n# Using gathered\n# Before state:\n# ------------\n#\n# user@junos01# show interfaces\n# gr-0/0/0 {\n#     description \"test gre interface\";\n# }\n# fxp0 {\n#     unit 0 {\n#         family inet {\n#             dhcp;\n#         }\n#     }\n# }\n# pp0 {\n#     unit 0 {\n#         pppoe-options {\n#             idle-timeout 100;\n#             access-concentrator ispl.com;\n#             service-name \"video@ispl.com\";\n#             auto-reconnect 100;\n#             client;\n#             ## Warning: missing mandatory statement(s): 'underlying-interface'\n#         }\n#     }\n# }\n#\n- name: Gather junos interfaces as in given arguments\n  junipernetworks.junos.junos_interfaces:\n    state: gathered\n# Task Output (redacted)\n# -----------------------\n#\n# \"gathered\": [\n#         {\n#             \"description\": \"test gre interface\",\n#             \"enabled\": true,\n#             \"name\": \"gr-0/0/0\"\n#         },\n#         {\n#             \"enabled\": true,\n#             \"name\": \"fxp0\"\n#         },\n#         {\n#             \"enabled\": true,\n#             \"name\": \"pp0\"\n#         }\n#     ]\n# After state:\n# ------------\n#\n# user@junos01# show interfaces\n# gr-0/0/0 {\n#     description \"test gre interface\";\n# }\n# fxp0 {\n#     unit 0 {\n#         family inet {\n#             dhcp;\n#         }\n#     }\n# }\n# pp0 {\n#     unit 0 {\n#         pppoe-options {\n#             idle-timeout 100;\n#             access-concentrator ispl.com;\n#             service-name \"video@ispl.com\";\n#             auto-reconnect 100;\n#             client;\n#             ## Warning: missing mandatory statement(s): 'underlying-interface'\n#         }\n#     }\n# }\n# Using parsed\n# parsed.cfg\n# ------------\n#\n# <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n# <rpc-reply message-id=\"urn:uuid:0cadb4e8-5bba-47f4-986e-72906227007f\">\n#     <configuration changed-seconds=\"1590139550\" changed-localtime=\"2020-05-22 09:25:50 UTC\">\n#         <interfaces>\n#             <interface>\n#                 <name>ge-0/0/1</name>\n#                 <description>Configured by Ansible</description>\n#                 <disable/>\n#                 <speed>100m</speed>\n#                 <mtu>1024</mtu>\n#                 <hold-time>\n#                     <up>2000</up>\n#                     <down>2200</down>\n#                 </hold-time>\n#                 <link-mode>full-duplex</link-mode>\n#                 <unit>\n#                     <name>0</name>\n#                     <family>\n#                         <ethernet-switching>\n#                             <interface-mode>access</interface-mode>\n#                             <vlan>\n#                                 <members>vlan100</members>\n#                             </vlan>\n#                         </ethernet-switching>\n#                     </family>\n#                 </unit>\n#             </interface>\n#         </interfaces>\n#     </configuration>\n# </rpc-reply>\n# - name: Convert interfaces config to argspec without connecting to the appliance\n#   junipernetworks.junos.junos_interfaces:\n#     running_config: \"{{ lookup('file', './parsed.cfg') }}\"\n#     state: parsed\n# Task Output (redacted)\n# -----------------------\n# \"parsed\": [\n#         {\n#             \"description\": \"Configured by Ansible\",\n#             \"duplex\": \"full-duplex\",\n#             \"enabled\": false,\n#             \"hold_time\": {\n#                 \"down\": 2200,\n#                 \"up\": 2000\n#             },\n#             \"mtu\": 1024,\n#             \"name\": \"ge-0/0/1\",\n#             \"speed\": \"100m\"\n#         }\n#     ]\n#\n# Using rendered\n- name: Render platform specific xml from task input using rendered state\n  junipernetworks.junos.junos_interfaces:\n    config:\n    - name: ge-0/0/2\n      description: Configured by Ansibull\n      mtu: 2048\n      speed: 20m\n      hold_time:\n        up: 3200\n        down: 3200\n    state: rendered\n# Task Output (redacted)\n# -----------------------\n# \"rendered\": <nc:interfaces\n#     xmlns:nc=\"urn:ietf:params:xml:ns:netconf:base:1.0\">\n#     <nc:interface>\n#         <nc:name>ge-0/0/2</nc:name>\n#         <nc:description>Configured by Ansibull</nc:description>\n#         <nc:speed>20m</nc:speed>\n#         <nc:mtu>2048</nc:mtu>\n#         <nc:hold-time>\n#             <nc:up>3200</nc:up>\n#             <nc:down>3200</nc:down>\n#         </nc:hold-time>\n#     </nc:interface>\n# </nc:interfaces>\"\n\n"
  },
  "junipernetworks.junos.junos_l2_interface": {
    "doc": {
      "description": "This module provides declarative management of Layer-2 interface on Juniper JUNOS network devices.",
      "has_action": true,
      "notes": "This module requires the netconf system service be enabled on the remote device being managed.\nTested against vqfx-10000 JUNOS Version 15.1X53-D60.4.\nRecommended connection is C(netconf). See L(the Junos OS Platform Options,../network/user_guide/platform_junos.html).\nThis module also works with C(local) connections for legacy playbooks.\nFor information on using CLI and netconf see the :ref:`Junos OS Platform Options guide <junos_platform_options>`\nFor more information on using Ansible to manage network devices see the :ref:`Ansible Network Guide <network_guide>`\nFor more information on using Ansible to manage Juniper network devices see U(https://www.ansible.com/ansible-juniper).",
      "options": {
        "access_vlan": {
          "aliases": [],
          "description": "Configure given VLAN in access port. The value of C(access_vlan) should be vlan name.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "active": {
          "aliases": [],
          "description": "Specifies whether or not the configuration is active or deactivated",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "aggregate": {
          "aliases": [],
          "description": "List of Layer-2 interface definitions.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "access_vlan": {
              "aliases": [],
              "description": "Configure given VLAN in access port. The value of C(access_vlan) should be vlan name.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "active": {
              "aliases": [],
              "description": "Specifies whether or not the configuration is active or deactivated",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "description": {
              "aliases": [],
              "description": "Description of Interface.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "enhanced_layer": {
              "aliases": [],
              "description": "True if your device has Enhanced Layer 2 Software (ELS).",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "filter_input": {
              "aliases": [],
              "description": "The name of input filter of ethernet-switching.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "filter_output": {
              "aliases": [],
              "description": "The name of output filter of ethernet-switching.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "mode": {
              "aliases": [],
              "description": "Mode in which interface needs to be configured.",
              "type": "str",
              "required": false,
              "choices": [
                "access",
                "trunk"
              ],
              "suboptions": {}
            },
            "name": {
              "aliases": [],
              "description": "Name of the interface excluding any logical unit number.",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "native_vlan": {
              "aliases": [],
              "description": "Native VLAN to be configured in trunk port. The value of C(native_vlan) should be vlan id.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "state": {
              "aliases": [],
              "description": "State of the Layer-2 Interface configuration.",
              "type": "str",
              "required": false,
              "choices": [
                "present",
                "absent"
              ],
              "suboptions": {}
            },
            "trunk_vlans": {
              "aliases": [],
              "description": "List of VLAN names to be configured in trunk port. The value of C(trunk_vlans) should be list of vlan names.",
              "type": "list",
              "required": false,
              "elements": "str",
              "suboptions": {}
            },
            "unit": {
              "aliases": [],
              "description": "Logical interface number. Value of C(unit) should be of type integer.",
              "type": "int",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "description": {
          "aliases": [],
          "description": "Description of Interface.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "enhanced_layer": {
          "aliases": [],
          "description": "True if your device has Enhanced Layer 2 Software (ELS).",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "filter_input": {
          "aliases": [],
          "description": "The name of input filter of ethernet-switching.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filter_output": {
          "aliases": [],
          "description": "The name of output filter of ethernet-switching.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "mode": {
          "aliases": [],
          "description": "Mode in which interface needs to be configured.",
          "type": "str",
          "required": false,
          "choices": [
            "access",
            "trunk"
          ],
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the interface excluding any logical unit number.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "native_vlan": {
          "aliases": [],
          "description": "Native VLAN to be configured in trunk port. The value of C(native_vlan) should be vlan id.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "B(Deprecated)\nStarting with Ansible 2.5 we recommend using C(connection: network_cli) or C(connection: netconf).\nFor more information please see the L(Junos OS Platform Options guide, ../network/user_guide/platform_junos.html).\nHORIZONTALLINE\nA dict object containing connection details.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "host": {
              "aliases": [],
              "description": "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [],
              "description": "Specifies the password to use to authenticate the connection to the remote device.   This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "port": {
              "aliases": [],
              "description": "Specifies the port to use when building the connection to the remote device.  The port value will default to the well known SSH port of 22 (for C(transport=cli)) or port 830 (for C(transport=netconf)) device.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "ssh_keyfile": {
              "aliases": [],
              "description": "Specifies the SSH key to use to authenticate the connection to the remote device.   This value is the path to the key used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead.",
              "type": "path",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "netconf",
              "type": "str",
              "required": false,
              "choices": [
                "cli",
                "netconf"
              ],
              "suboptions": {}
            },
            "username": {
              "aliases": [],
              "description": "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "State of the Layer-2 Interface configuration.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "trunk_vlans": {
          "aliases": [],
          "description": "List of VLAN names to be configured in trunk port. The value of C(trunk_vlans) should be list of vlan names.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "unit": {
          "aliases": [],
          "description": "Logical interface number. Value of C(unit) should be of type integer.",
          "default": "0",
          "type": "int",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "ncclient (>=v0.5.2)"
      ],
      "short_description": "(deprecated, removed after 2022-06-01) Manage L2 Interface on Juniper JUNOS network devices",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Configure interface in access mode\n  junipernetworks.junos.junos_l2_interface:\n    name: ge-0/0/1\n    description: interface-access\n    mode: access\n    access_vlan: red\n    active: true\n    state: present\n\n- name: Configure interface in trunk mode\n  junipernetworks.junos.junos_l2_interface:\n    name: ge-0/0/1\n    description: interface-trunk\n    mode: trunk\n    trunk_vlans:\n    - blue\n    - green\n    native_vlan: 100\n    active: true\n    state: present\n\n- name: Configure interface in access and trunk mode using aggregate\n  junipernetworks.junos.junos_l2_interface:\n    aggregate:\n    - name: ge-0/0/1\n      description: test-interface-access\n      mode: access\n      access_vlan: red\n    - name: ge-0/0/2\n      description: test-interface-trunk\n      mode: trunk\n      trunk_vlans:\n      - blue\n      - green\n      native_vlan: 100\n    active: true\n    state: present\n"
  },
  "junipernetworks.junos.junos_l2_interfaces": {
    "doc": {
      "description": "This module provides declarative management of a Layer-2 interface on Juniper JUNOS devices.",
      "has_action": true,
      "notes": "This module requires the netconf system service be enabled on the remote device being managed.\nTested against vSRX JUNOS version 18.4R1.\nThis module works with connection C(netconf). See L(the Junos OS Platform Options,../network/user_guide/platform_junos.html).",
      "options": {
        "config": {
          "aliases": [],
          "description": "A dictionary of Layer-2 interface options",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "access": {
              "aliases": [],
              "description": "Configure the interface as a Layer 2 access mode.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "vlan": {
                  "aliases": [],
                  "description": "Configure the access VLAN ID.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "enhanced_layer": {
              "aliases": [],
              "description": "True if your device has Enhanced Layer 2 Software (ELS). If the l2 configuration is under C(interface-mode) the value is True else if the l2 configuration is under C(port-mode) value is False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "name": {
              "aliases": [],
              "description": "Full name of interface, e.g. ge-0/0/1.",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "trunk": {
              "aliases": [],
              "description": "Configure the interface as a Layer 2 trunk mode.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "allowed_vlans": {
                  "aliases": [],
                  "description": "List of VLANs to be configured in trunk port. It's used as the VLAN range to ADD or REMOVE from the trunk.",
                  "type": "list",
                  "required": false,
                  "elements": "str",
                  "suboptions": {}
                },
                "native_vlan": {
                  "aliases": [],
                  "description": "Native VLAN to be configured in trunk port. It is used as the trunk native VLAN ID.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "unit": {
              "aliases": [],
              "description": "Logical interface number. Value of C(unit) should be of type integer.",
              "type": "int",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "running_config": {
          "aliases": [],
          "description": "This option is used only with state I(parsed).\nThe value of this option should be the output received from the Junos device by executing the command B(show interfaces).\nThe state I(parsed) reads the configuration from C(running_config) option and transforms it into Ansible structured data as per the resource module's argspec and the value is then returned in the I(parsed) key within the result.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The state of the configuration after module completion",
          "default": "merged",
          "type": "str",
          "required": false,
          "choices": [
            "merged",
            "replaced",
            "overridden",
            "deleted",
            "gathered",
            "parsed",
            "rendered"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "ncclient (>=v0.6.4)"
      ],
      "short_description": "L2 interfaces resource module",
      "version_added": "1.0.0"
    },
    "examples": "\n# Using deleted\n\n# Before state:\n# -------------\n#\n# ansible@junos01# show interfaces\n# ge-0/0/1 {\n#    description \"L2 interface\";\n#    speed 1g;\n#    unit 0 {\n#        family ethernet-switching {\n#            interface-mode access;\n#            vlan {\n#                members vlan30;\n#            }\n#        }\n#    }\n#}\n#ge-0/0/2 {\n#    description \"non L2 interface\";\n#    unit 0 {\n#        family inet {\n#            address 192.168.56.14/24;\n#        }\n#    }\n\n- name: \"Delete L2 attributes of given interfaces (Note: This won't delete the\n    interface itself).\"\n  junipernetworks.junos.junos_l2_interfaces:\n    config:\n    - name: ge-0/0/1\n    - name: ge-0/0/2\n    state: deleted\n\n# After state:\n# ------------\n#\n# ansible@junos01# show interfaces\n# ge-0/0/1 {\n#    description \"L2 interface\";\n#    speed 1g;\n# }\n#ge-0/0/2 {\n#    description \"non L2 interface\";\n#    unit 0 {\n#        family inet {\n#            address 192.168.56.14/24;\n#        }\n#    }\n\n\n# Using merged\n\n# Before state:\n# -------------\n# ansible@junos01# show interfaces\n# ge-0/0/3 {\n#    description \"test interface\";\n#    speed 1g;\n#}\n# ge-0/0/4 {\n#    description interface-trunk;\n#    native-vlan-id 100;\n#    unit 0 {\n#        family ethernet-switching {\n#            interface-mode trunk;\n#            vlan {\n#                members [ vlan40 ];\n#            }\n#        }\n#    }\n# }\n\n- name: Merge provided configuration with device configuration (default operation\n    is merge)\n  junipernetworks.junos.junos_l2_interfaces:\n    config:\n    - name: ge-0/0/3\n      access:\n        vlan: v101\n    - name: ge-0/0/4\n      trunk:\n        allowed_vlans:\n        - vlan30\n        native_vlan: 50\n    state: merged\n\n# After state:\n# ------------\n# user@junos01# show interfaces\n# ge-0/0/3 {\n#    description \"test interface\";\n#    speed 1g;\n#    unit 0 {\n#        family ethernet-switching {\n#            interface-mode access;\n#            vlan {\n#                members v101;\n#            }\n#        }\n#    }\n# }\n# ge-0/0/4 {\n#    description interface-trunk;\n#    native-vlan-id 50;\n#    unit 0 {\n#        family ethernet-switching {\n#            interface-mode trunk;\n#            vlan {\n#                members [ vlan40 vlan30 ];\n#            }\n#        }\n#    }\n# }\n\n\n# Using overridden\n\n# Before state:\n# -------------\n# ansible@junos01# show interfaces\n# ge-0/0/3 {\n#    description \"test interface\";\n#    speed 1g;\n#}\n# ge-0/0/4 {\n#    description interface-trunk;\n#    native-vlan-id 100;\n#    unit 0 {\n#        family ethernet-switching {\n#            interface-mode trunk;\n#            vlan {\n#                members [ vlan40 ];\n#            }\n#        }\n#    }\n# }\n# ge-0/0/5 {\n#    description \"Configured by Ansible-11\";\n#    unit 0 {\n#        family ethernet-switching {\n#            interface-mode access;\n#            vlan {\n#                members v101;\n#            }\n#        }\n#    }\n# }\n\n- name: Override provided configuration with device configuration\n  junipernetworks.junos.junos_l2_interfaces:\n    config:\n    - name: ge-0/0/3\n      access:\n        vlan: v101\n    - name: ge-0/0/4\n      trunk:\n        allowed_vlans:\n        - vlan30\n        native_vlan: 50\n    state: overridden\n\n# After state:\n# ------------\n# user@junos01# show interfaces\n# ge-0/0/3 {\n#    unit 0 {\n#        family ethernet-switching {\n#            interface-mode access;\n#            vlan {\n#                members v101;\n#            }\n#        }\n#    }\n# }\n# ge-0/0/4 {\n#    description interface-trunk;\n#    native-vlan-id 50;\n#    unit 0 {\n#        family ethernet-switching {\n#            interface-mode trunk;\n#            vlan {\n#                members [ vlan30 ];\n#            }\n#        }\n#    }\n# }\n\n\n# Using replaced\n\n# Before state:\n# -------------\n# ansible@junos01# show interfaces\n# ge-0/0/3 {\n#    description \"test interface\";\n#    speed 1g;\n#}\n# ge-0/0/4 {\n#    description interface-trunk;\n#    native-vlan-id 100;\n#    unit 0 {\n#        family ethernet-switching {\n#            interface-mode trunk;\n#            vlan {\n#                members [ vlan40 ];\n#            }\n#        }\n#    }\n# }\n\n- name: Replace provided configuration with device configuration\n  junipernetworks.junos.junos_l2_interfaces:\n    config:\n    - name: ge-0/0/3\n      access:\n        vlan: v101\n    - name: ge-0/0/4\n      trunk:\n        allowed_vlans:\n        - vlan30\n        native_vlan: 50\n    state: replaced\n\n# After state:\n# ------------\n# user@junos01# show interfaces\n# ge-0/0/3 {\n#    unit 0 {\n#        family ethernet-switching {\n#            interface-mode access;\n#            vlan {\n#                members v101;\n#            }\n#        }\n#    }\n# }\n# ge-0/0/4 {\n#    description interface-trunk;\n#    native-vlan-id 50;\n#    unit 0 {\n#        family ethernet-switching {\n#            interface-mode trunk;\n#            vlan {\n#                members [ vlan30 ];\n#            }\n#        }\n#    }\n# }\n# Using gathered\n# Before state:\n# ------------\n#\n# user@junos01# show interfaces\n# ge-0/0/1 {\n#     description \"Configured by Ansible\";\n#     disable;\n#     speed 100m;\n#     mtu 1024;\n#     hold-time up 2000 down 2200;\n#     link-mode full-duplex;\n#     unit 0 {\n#         family ethernet-switching {\n#             interface-mode access;\n#             vlan {\n#                 members vlan100;\n#             }\n#         }\n#     }\n# }\n# ge-0/0/2 {\n#     description \"Configured by Ansible\";\n#     native-vlan-id 400;\n#     speed 10m;\n#     mtu 2048;\n#     hold-time up 3000 down 3200;\n#     unit 0 {\n#         family ethernet-switching {\n#             interface-mode trunk;\n#             vlan {\n#                 members [ vlan200 vlan300 ];\n#             }\n#         }\n#     }\n# }\n# em1 {\n#     description TEST;\n# }\n# fxp0 {\n#     description ANSIBLE;\n#     speed 1g;\n#     link-mode automatic;\n#     unit 0 {\n#         family inet {\n#             address 10.8.38.38/24;\n#         }\n#     }\n# }\n- name: Gather junos layer 2 interfaces as in given arguments\n  junipernetworks.junos.junos_l2_interfaces:\n    state: gathered\n# Task Output (redacted)\n# -----------------------\n#\n# \"gathered\": [\n#         {\n#             \"access\": {\n#                 \"vlan\": \"vlan100\"\n#             },\n#             \"enhanced_layer\": true,\n#             \"name\": \"ge-0/0/1\",\n#             \"unit\": 0\n#         },\n#         {\n#             \"enhanced_layer\": true,\n#             \"name\": \"ge-0/0/2\",\n#             \"trunk\": {\n#                 \"allowed_vlans\": [\n#                     \"vlan200\",\n#                     \"vlan300\"\n#                 ],\n#                 \"native_vlan\": \"400\"\n#             },\n#             \"unit\": 0\n#         }\n#     ]\n# After state:\n# ------------\n#\n# user@junos01# show interfaces\n# ge-0/0/1 {\n#     description \"Configured by Ansible\";\n#     disable;\n#     speed 100m;\n#     mtu 1024;\n#     hold-time up 2000 down 2200;\n#     link-mode full-duplex;\n#     unit 0 {\n#         family ethernet-switching {\n#             interface-mode access;\n#             vlan {\n#                 members vlan100;\n#             }\n#         }\n#     }\n# }\n# ge-0/0/2 {\n#     description \"Configured by Ansible\";\n#     native-vlan-id 400;\n#     speed 10m;\n#     mtu 2048;\n#     hold-time up 3000 down 3200;\n#     unit 0 {\n#         family ethernet-switching {\n#             interface-mode trunk;\n#             vlan {\n#                 members [ vlan200 vlan300 ];\n#             }\n#         }\n#     }\n# }\n# em1 {\n#     description TEST;\n# }\n# fxp0 {\n#     description ANSIBLE;\n#     speed 1g;\n#     link-mode automatic;\n#     unit 0 {\n#         family inet {\n#             address 10.8.38.38/24;\n#         }\n#     }\n# }\n# Using parsed\n# parsed.cfg\n# ------------\n#\n# <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n# <rpc-reply message-id=\"urn:uuid:0cadb4e8-5bba-47f4-986e-72906227007f\">\n#     <configuration changed-seconds=\"1590139550\" changed-localtime=\"2020-05-22 09:25:50 UTC\">\n#         <interfaces>\n#             <interface>\n#                 <name>ge-0/0/1</name>\n#                 <description>Configured by Ansible</description>\n#                 <disable/>\n#                 <speed>100m</speed>\n#                 <mtu>1024</mtu>\n#                 <hold-time>\n#                     <up>2000</up>\n#                     <down>2200</down>\n#                 </hold-time>\n#                 <link-mode>full-duplex</link-mode>\n#                 <unit>\n#                     <name>0</name>\n#                     <family>\n#                         <ethernet-switching>\n#                             <interface-mode>access</interface-mode>\n#                             <vlan>\n#                                 <members>vlan100</members>\n#                             </vlan>\n#                         </ethernet-switching>\n#                     </family>\n#                 </unit>\n#             </interface>\n#         </interfaces>\n#     </configuration>\n# </rpc-reply>\n# - name: Convert interfaces config to argspec without connecting to the appliance\n#   junipernetworks.junos.junos_l2_interfaces:\n#     running_config: \"{{ lookup('file', './parsed.cfg') }}\"\n#     state: parsed\n# Task Output (redacted)\n# -----------------------\n# \"parsed\": [\n#         {\n#             \"access\": {\n#                 \"vlan\": \"vlan100\"\n#             },\n#             \"enhanced_layer\": true,\n#             \"name\": \"ge-0/0/1\",\n#             \"unit\": 0\n#         },\n#         {\n#             \"enhanced_layer\": true,\n#             \"name\": \"ge-0/0/2\",\n#             \"trunk\": {\n#                 \"allowed_vlans\": [\n#                     \"vlan200\",\n#                     \"vlan300\"\n#                 ],\n#                 \"native_vlan\": \"400\"\n#             },\n#             \"unit\": 0\n#         }\n#     ]\n#\n# Using rendered\n- name: Render platform specific xml from task input using rendered state\n  junipernetworks.junos.junos_l2_interfaces:\n    config:\n      - name: ge-0/0/1\n        access:\n          vlan: vlan100\n      - name: ge-0/0/2\n        trunk:\n          allowed_vlans:\n            - vlan200\n            - vlan300\n          native_vlan: '400'\n    state: rendered\n# Task Output (redacted)\n# -----------------------\n# \"rendered\": \"<nc:interfaces\n#     xmlns:nc=\"urn:ietf:params:xml:ns:netconf:base:1.0\">\n#     <nc:interface>\n#         <nc:name>ge-0/0/1</nc:name>\n#         <nc:unit>\n#             <nc:name>0</nc:name>\n#             <nc:family>\n#                 <nc:ethernet-switching>\n#                     <nc:interface-mode>access</nc:interface-mode>\n#                     <nc:vlan>\n#                         <nc:members>vlan100</nc:members>\n#                     </nc:vlan>\n#                 </nc:ethernet-switching>\n#             </nc:family>\n#         </nc:unit>\n#     </nc:interface>\n#     <nc:interface>\n#         <nc:name>ge-0/0/2</nc:name>\n#         <nc:unit>\n#             <nc:name>0</nc:name>\n#             <nc:family>\n#                 <nc:ethernet-switching>\n#                     <nc:interface-mode>trunk</nc:interface-mode>\n#                     <nc:vlan>\n#                         <nc:members>vlan200</nc:members>\n#                         <nc:members>vlan300</nc:members>\n#                     </nc:vlan>\n#                 </nc:ethernet-switching>\n#             </nc:family>\n#         </nc:unit>\n#         <nc:native-vlan-id>400</nc:native-vlan-id>\n#     </nc:interface>\n# </nc:interfaces>\"\n\n"
  },
  "junipernetworks.junos.junos_l3_interface": {
    "doc": {
      "description": "This module provides declarative management of L3 interfaces on Juniper JUNOS network devices.",
      "has_action": true,
      "notes": "This module requires the netconf system service be enabled on the remote device being managed.\nTested against vSRX JUNOS version 15.1X49-D15.4, vqfx-10000 JUNOS Version 15.1X53-D60.4.\nRecommended connection is C(netconf). See L(the Junos OS Platform Options,../network/user_guide/platform_junos.html).\nThis module also works with C(local) connections for legacy playbooks.\nFor information on using CLI and netconf see the :ref:`Junos OS Platform Options guide <junos_platform_options>`\nFor more information on using Ansible to manage network devices see the :ref:`Ansible Network Guide <network_guide>`\nFor more information on using Ansible to manage Juniper network devices see U(https://www.ansible.com/ansible-juniper).",
      "options": {
        "active": {
          "aliases": [],
          "description": "Specifies whether or not the configuration is active or deactivated",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "aggregate": {
          "aliases": [],
          "description": "List of L3 interfaces definitions",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "active": {
              "aliases": [],
              "description": "Specifies whether or not the configuration is active or deactivated",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "filter6_input": {
              "aliases": [],
              "description": "The name of input filter for ipv6.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "filter6_output": {
              "aliases": [],
              "description": "The name of output filter for ipv6.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "filter_input": {
              "aliases": [],
              "description": "The name of input filter.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "filter_output": {
              "aliases": [],
              "description": "The name of output filter.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "ipv4": {
              "aliases": [],
              "description": "IPv4 of the L3 interface.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "ipv6": {
              "aliases": [],
              "description": "IPv6 of the L3 interface.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "name": {
              "aliases": [],
              "description": "Name of the L3 interface.",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "state": {
              "aliases": [],
              "description": "State of the L3 interface configuration.",
              "type": "str",
              "required": false,
              "choices": [
                "present",
                "absent"
              ],
              "suboptions": {}
            },
            "unit": {
              "aliases": [],
              "description": "Logical interface number.",
              "default": "0",
              "type": "int",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "filter6_input": {
          "aliases": [],
          "description": "The name of input filter for ipv6.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filter6_output": {
          "aliases": [],
          "description": "The name of output filter for ipv6.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filter_input": {
          "aliases": [],
          "description": "The name of input filter.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filter_output": {
          "aliases": [],
          "description": "The name of output filter.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ipv4": {
          "aliases": [],
          "description": "IPv4 of the L3 interface.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ipv6": {
          "aliases": [],
          "description": "IPv6 of the L3 interface.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the L3 interface.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "B(Deprecated)\nStarting with Ansible 2.5 we recommend using C(connection: network_cli) or C(connection: netconf).\nFor more information please see the L(Junos OS Platform Options guide, ../network/user_guide/platform_junos.html).\nHORIZONTALLINE\nA dict object containing connection details.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "host": {
              "aliases": [],
              "description": "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [],
              "description": "Specifies the password to use to authenticate the connection to the remote device.   This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "port": {
              "aliases": [],
              "description": "Specifies the port to use when building the connection to the remote device.  The port value will default to the well known SSH port of 22 (for C(transport=cli)) or port 830 (for C(transport=netconf)) device.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "ssh_keyfile": {
              "aliases": [],
              "description": "Specifies the SSH key to use to authenticate the connection to the remote device.   This value is the path to the key used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead.",
              "type": "path",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "netconf",
              "type": "str",
              "required": false,
              "choices": [
                "cli",
                "netconf"
              ],
              "suboptions": {}
            },
            "username": {
              "aliases": [],
              "description": "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "State of the L3 interface configuration.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "unit": {
          "aliases": [],
          "description": "Logical interface number.",
          "default": "0",
          "type": "int",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "ncclient (>=v0.5.2)"
      ],
      "short_description": "(deprecated, removed after 2022-06-01) Manage L3 interfaces on Juniper JUNOS network devices",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Set ge-0/0/1 IPv4 address\n  junipernetworks.junos.junos_l3_interface:\n    name: ge-0/0/1\n    ipv4: 192.168.0.1\n\n- name: Remove ge-0/0/1 IPv4 address\n  junipernetworks.junos.junos_l3_interface:\n    name: ge-0/0/1\n    state: absent\n\n- name: Set ipv4 address using aggregate\n  junipernetworks.junos.junos_l3_interface:\n    aggregate:\n    - name: ge-0/0/1\n      ipv4: 192.0.2.1\n    - name: ge-0/0/2\n      ipv4: 192.0.2.2\n      ipv6: fd5d:12c9:2201:2::2\n\n- name: Delete ipv4 address using aggregate\n  junipernetworks.junos.junos_l3_interface:\n    aggregate:\n    - name: ge-0/0/1\n      ipv4: 192.0.2.1\n    - name: ge-0/0/2\n      ipv4: 192.0.2.2\n    state: absent\n"
  },
  "junipernetworks.junos.junos_l3_interfaces": {
    "doc": {
      "description": "This module provides declarative management of a Layer 3 interface on Juniper JUNOS devices",
      "has_action": true,
      "notes": "This module requires the netconf system service be enabled on the device being managed.\nThis module works with connection C(netconf). See L(the Junos OS Platform Options,../network/user_guide/platform_junos.html).\nTested against JunOS v18.4R1",
      "options": {
        "config": {
          "aliases": [],
          "description": "A dictionary of Layer 3 interface options",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "ipv4": {
              "aliases": [],
              "description": "IPv4 addresses to be set for the Layer 3 logical interface mentioned in I(name) option. The address format is <ipv4 address>/<mask>. The mask is number in range 0-32 for example, 192.0.2.1/24, or C(dhcp) to query DHCP for an IP address",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "address": {
                  "aliases": [],
                  "description": "IPv4 address to be set for the specific interface",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "ipv6": {
              "aliases": [],
              "description": "IPv6 addresses to be set for the Layer 3 logical interface mentioned in I(name) option. The address format is <ipv6 address>/<mask>, the mask is number in range 0-128 for example, 2001:db8:2201:1::1/64 or C(auto-config) to use SLAAC",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "address": {
                  "aliases": [],
                  "description": "IPv6 address to be set for the specific interface",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "name": {
              "aliases": [],
              "description": "Full name of interface, e.g. ge-0/0/1",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "unit": {
              "aliases": [],
              "description": "Logical interface number. Value of C(unit) should be of type integer",
              "default": "0",
              "type": "int",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "running_config": {
          "aliases": [],
          "description": "This option is used only with state I(parsed).\nThe value of this option should be the output received from the Junos device by executing the command B(show interfaces).\nThe state I(parsed) reads the configuration from C(running_config) option and transforms it into Ansible structured data as per the resource module's argspec and the value is then returned in the I(parsed) key within the result",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The state of the configuration after module completion",
          "default": "merged",
          "type": "str",
          "required": false,
          "choices": [
            "merged",
            "replaced",
            "overridden",
            "deleted",
            "gathered",
            "rendered",
            "parsed"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "ncclient (>=v0.6.4)"
      ],
      "short_description": "L3 interfaces resource module",
      "version_added": "1.0.0"
    },
    "examples": "\n# Using deleted\n\n# Before state:\n# -------------\n#\n# admin# show interfaces\n# ge-0/0/1 {\n#     description \"L3 interface\";\n#     unit 0 {\n#         family inet {\n#             address 10.200.16.10/24;\n#         }\n#     }\n# }\n# ge-0/0/2 {\n#     description \"non L3 interface\";\n#     unit 0 {\n#         family ethernet-switching {\n#             interface-mode access;\n#             vlan {\n#                 members 2;\n#             }\n#         }\n#     }\n# }\n\n- name: Delete JUNOS L3 logical interface\n  junipernetworks.junos.junos_l3_interfaces:\n    config:\n    - name: ge-0/0/1\n    - name: ge-0/0/2\n  state: deleted\n\n# After state:\n# ------------\n#\n# admin# show interfaces\n# ge-0/0/1 {\n#     description \"deleted L3 interface\";\n# }\n# ge-0/0/2 {\n#     description \"non L3 interface\";\n#     unit 0 {\n#         family ethernet-switching {\n#             interface-mode access;\n#             vlan {\n#                 members 2;\n#             }\n#         }\n#     }\n# }\n# Using merged\n# Before state\n# ------------\n#\n# admin# show interfaces\n# ge-0/0/1 {\n#     description \"L3 interface\";\n#     unit 0 {\n#         family inet {\n#             address 10.200.16.10/24;\n#         }\n#     }\n# }\n# ge-0/0/2 {\n#     description \"non configured interface\";\n#     unit 0;\n# }\n- name: Merge provided configuration with device configuration (default operation is merge)\n  junipernetworks.junos.junos_l3_interfaces:\n    config:\n    - name: ge-0/0/1\n      ipv4:\n      - address: 192.168.1.10/24\n      ipv6:\n      - address: 8d8d:8d01::1/64\n    - name: ge-0/0/2\n      ipv4:\n      - address: dhcp\n    state: merged\n\n# After state:\n# ------------\n#\n# admin# show interfaces\n# ge-0/0/1 {\n#     description \"L3 interface\";\n#     unit 0 {\n#         family inet {\n#             address 10.200.16.10/24;\n#             address 192.168.1.10/24;\n#         }\n#         family inet6 {\n#             address 8d8d:8d01::1/64;\n#         }\n#     }\n# }\n# ge-0/0/2 {\n#     description \"L3 interface with dhcp\";\n#     unit 0 {\n#         family inet {\n#             dhcp;\n#         }\n#     }\n# }\n\n\n# Using overridden\n\n# Before state\n# ------------\n#\n# admin# show interfaces\n# ge-0/0/1 {\n#     description \"L3 interface\";\n#     unit 0 {\n#         family inet {\n#             address 10.200.16.10/24;\n#         }\n#     }\n# }\n# ge-0/0/2 {\n#     description \"L3 interface with dhcp\";\n#     unit 0 {\n#         family inet {\n#             dhcp;\n#         }\n#     }\n# }\n# ge-0/0/3 {\n#     description \"another L3 interface\";\n#     unit 0 {\n#         family inet {\n#             address 192.168.1.10/24;\n#         }\n#     }\n# }\n\n- name: Override provided configuration with device configuration\n  junipernetworks.junos.junos_l3_interfaces:\n    config:\n    - name: ge-0/0/1\n      ipv4:\n      - address: 192.168.1.10/24\n      ipv6:\n      - address: 8d8d:8d01::1/64\n    - name: ge-0/0/2\n      ipv6:\n      - address: 2001:db8:3000::/64\n    state: overridden\n\n# After state:\n# ------------\n#\n# admin# show interfaces\n# ge-0/0/1 {\n#     description \"L3 interface\";\n#     unit 0 {\n#         family inet {\n#             address 192.168.1.10/24;\n#         }\n#         family inet6 {\n#             address 8d8d:8d01::1/64;\n#         }\n#     }\n# }\n# ge-0/0/2 {\n#     description \"L3 interface with ipv6\";\n#     unit 0 {\n#         family inet6 {\n#             address 2001:db8:3000::/64;\n#         }\n#     }\n# }\n# ge-0/0/3 {\n#     description \"overridden L3 interface\";\n#     unit 0;\n# }\n\n\n# Using replaced\n\n# Before state\n# ------------\n#\n# admin# show interfaces\n# ge-0/0/1 {\n#     description \"L3 interface\";\n#     unit 0 {\n#         family inet {\n#             address 10.200.16.10/24;\n#         }\n#     }\n# }\n# ge-0/0/2 {\n#     description \"non configured interface\";\n#     unit 0;\n# }\n# ge-0/0/3 {\n#     description \"another L3 interface\";\n#     unit 0 {\n#         family inet {\n#             address 192.168.1.10/24;\n#         }\n#     }\n# }\n\n- name: Replace provided configuration with device configuration\n  junipernetworks.junos.junos_l3_interfaces:\n    config:\n    - name: ge-0/0/1\n      ipv4:\n      - address: 192.168.1.10/24\n      ipv6:\n      - address: 8d8d:8d01::1/64\n    - name: ge-0/0/2\n      ipv4:\n      - address: dhcp\n    state: replaced\n\n# After state:\n# ------------\n#\n# admin# show interfaces\n# ge-0/0/1 {\n#     description \"L3 interface\";\n#     unit 0 {\n#         family inet {\n#             address 192.168.1.10/24;\n#         }\n#         family inet6 {\n#             address 8d8d:8d01::1/64;\n#         }\n#     }\n# }\n# ge-0/0/2 {\n#     description \"L3 interface with dhcp\";\n#     unit 0 {\n#         family inet {\n#             dhcp;\n#         }\n#     }\n# }\n# ge-0/0/3 {\n#     description \"another L3 interface\";\n#     unit 0 {\n#         family inet {\n#             address 192.168.1.10/24;\n#         }\n#     }\n# }\n# Using gathered\n# Before state:\n# ------------\n#\n# user@junos01# show interfaces\n# ge-0/0/1 {\n#     description \"Configured by Ansible\";\n#     disable;\n#     speed 100m;\n#     mtu 1024;\n#     hold-time up 2000 down 2200;\n#     link-mode full-duplex;\n#     unit 0 {\n#         family ethernet-switching {\n#             interface-mode access;\n#             vlan {\n#                 members vlan100;\n#             }\n#         }\n#     }\n# }\n# ge-0/0/2 {\n#     description \"Configured by Ansible\";\n#     native-vlan-id 400;\n#     speed 10m;\n#     mtu 2048;\n#     hold-time up 3000 down 3200;\n#     unit 0 {\n#         family ethernet-switching {\n#             interface-mode trunk;\n#             vlan {\n#                 members [ vlan200 vlan300 ];\n#             }\n#         }\n#     }\n# }\n# ge-1/0/0 {\n#     unit 0 {\n#         family inet {\n#             address 192.168.100.1/24;\n#             address 10.200.16.20/24;\n#         }\n#         family inet6;\n#     }\n# }\n# ge-2/0/0 {\n#     unit 0 {\n#         family inet {\n#             address 192.168.100.2/24;\n#             address 10.200.16.21/24;\n#         }\n#         family inet6;\n#     }\n# }\n# ge-3/0/0 {\n#     unit 0 {\n#         family inet {\n#             address 192.168.100.3/24;\n#             address 10.200.16.22/24;\n#         }\n#         family inet6;\n#     }\n# }\n# em1 {\n#     description TEST;\n# }\n# fxp0 {\n#     description ANSIBLE;\n#     speed 1g;\n#     link-mode automatic;\n#     unit 0 {\n#         family inet {\n#             address 10.8.38.38/24;\n#         }\n#     }\n# }\n- name: Gather junos layer3 interfaces as in given arguments\n  junipernetworks.junos.junos_l3_interfaces:\n    state: gathered\n# Task Output (redacted)\n# -----------------------\n#\n# \"gathered\": [\n#             {\n#                 \"ipv4\": [\n#                     {\n#                         \"address\": \"192.168.100.1/24\"\n#                     },\n#                     {\n#                         \"address\": \"10.200.16.20/24\"\n#                     }\n#                 ],\n#                 \"name\": \"ge-1/0/0\",\n#                 \"unit\": \"0\"\n#             },\n#             {\n#                 \"ipv4\": [\n#                     {\n#                         \"address\": \"192.168.100.2/24\"\n#                     },\n#                     {\n#                         \"address\": \"10.200.16.21/24\"\n#                     }\n#                 ],\n#                 \"name\": \"ge-2/0/0\",\n#                 \"unit\": \"0\"\n#             },\n#             {\n#                 \"ipv4\": [\n#                     {\n#                         \"address\": \"192.168.100.3/24\"\n#                     },\n#                     {\n#                         \"address\": \"10.200.16.22/24\"\n#                     }\n#                 ],\n#                 \"name\": \"ge-3/0/0\",\n#                 \"unit\": \"0\"\n#             },\n#             {\n#                 \"ipv4\": [\n#                     {\n#                         \"address\": \"10.8.38.38/24\"\n#                     }\n#                 ],\n#                 \"name\": \"fxp0\",\n#                 \"unit\": \"0\"\n#             }\n#         ]\n# After state:\n# ------------\n#\n# user@junos01# show interfaces\n# ge-0/0/1 {\n#     description \"Configured by Ansible\";\n#     disable;\n#     speed 100m;\n#     mtu 1024;\n#     hold-time up 2000 down 2200;\n#     link-mode full-duplex;\n#     unit 0 {\n#         family ethernet-switching {\n#             interface-mode access;\n#             vlan {\n#                 members vlan100;\n#             }\n#         }\n#     }\n# }\n# ge-0/0/2 {\n#     description \"Configured by Ansible\";\n#     native-vlan-id 400;\n#     speed 10m;\n#     mtu 2048;\n#     hold-time up 3000 down 3200;\n#     unit 0 {\n#         family ethernet-switching {\n#             interface-mode trunk;\n#             vlan {\n#                 members [ vlan200 vlan300 ];\n#             }\n#         }\n#     }\n# }\n# ge-1/0/0 {\n#     unit 0 {\n#         family inet {\n#             address 192.168.100.1/24;\n#             address 10.200.16.20/24;\n#         }\n#         family inet6;\n#     }\n# }\n# ge-2/0/0 {\n#     unit 0 {\n#         family inet {\n#             address 192.168.100.2/24;\n#             address 10.200.16.21/24;\n#         }\n#         family inet6;\n#     }\n# }\n# ge-3/0/0 {\n#     unit 0 {\n#         family inet {\n#             address 192.168.100.3/24;\n#             address 10.200.16.22/24;\n#         }\n#         family inet6;\n#     }\n# }\n# em1 {\n#     description TEST;\n# }\n# fxp0 {\n#     description ANSIBLE;\n#     speed 1g;\n#     link-mode automatic;\n#     unit 0 {\n#         family inet {\n#             address 10.8.38.38/24;\n#         }\n#     }\n# }\n# Using parsed\n# parsed.cfg\n# ------------\n#\n# <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n# <rpc-reply message-id=\"urn:uuid:0cadb4e8-5bba-47f4-986e-72906227007f\">\n#     <configuration changed-seconds=\"1590139550\" changed-localtime=\"2020-05-22 09:25:50 UTC\">\n#         <interfaces>\n#             <interface>\n#                 <name>ge-1/0/0</name>\n#                 <unit>\n#                     <name>0</name>\n#                     <family>\n#                         <inet>\n#                             <address>\n#                                 <name>192.168.100.1/24</name>\n#                             </address>\n#                             <address>\n#                                 <name>10.200.16.20/24</name>\n#                             </address>\n#                         </inet>\n#                         <inet6></inet6>\n#                     </family>\n#                 </unit>\n#             </interface>\n#             <interface>\n#                 <name>ge-2/0/0</name>\n#                 <unit>\n#                     <name>0</name>\n#                     <family>\n#                         <inet>\n#                             <address>\n#                                 <name>192.168.100.2/24</name>\n#                             </address>\n#                             <address>\n#                                 <name>10.200.16.21/24</name>\n#                             </address>\n#                         </inet>\n#                         <inet6></inet6>\n#                     </family>\n#                 </unit>\n#             </interface>\n#         </interfaces>\n#     </configuration>\n# </rpc-reply>\n# - name: Convert interfaces config to argspec without connecting to the appliance\n#   junipernetworks.junos.junos_l3_interfaces:\n#     running_config: \"{{ lookup('file', './parsed.cfg') }}\"\n#     state: parsed\n# Task Output (redacted)\n# -----------------------\n# \"parsed\": [\n#         {\n#             \"ipv4\": [\n#                 {\n#                     \"address\": \"192.168.100.1/24\"\n#                 },\n#                 {\n#                     \"address\": \"10.200.16.20/24\"\n#                 }\n#             ],\n#             \"name\": \"ge-1/0/0\",\n#             \"unit\": \"0\"\n#         },\n#         {\n#             \"ipv4\": [\n#                 {\n#                     \"address\": \"192.168.100.2/24\"\n#                 },\n#                 {\n#                     \"address\": \"10.200.16.21/24\"\n#                 }\n#             ],\n#             \"name\": \"ge-2/0/0\",\n#             \"unit\": \"0\"\n#         }\n#     ]\n#\n# Using rendered\n- name: Render platform specific xml from task input using rendered state\n  junipernetworks.junos.junos_l3_interfaces:\n    config:\n      - name: ge-1/0/0\n        ipv4:\n          - address: 192.168.100.1/24\n          - address: 10.200.16.20/24\n        unit: 0\n\n      - name: ge-2/0/0\n        ipv4:\n          - address: 192.168.100.2/24\n          - address: 10.200.16.21/24\n        unit: 0\n    state: rendered\n# Task Output (redacted)\n# -----------------------\n# \"rendered\": \"<nc:interfaces\n#     xmlns:nc=\"urn:ietf:params:xml:ns:netconf:base:1.0\">\n#     <nc:interface>\n#         <nc:name>ge-1/0/0</nc:name>\n#         <nc:unit>\n#             <nc:name>0</nc:name>\n#             <nc:family>\n#                 <nc:inet>\n#                     <nc:address>\n#                         <nc:name>192.168.100.1/24</nc:name>\n#                     </nc:address>\n#                     <nc:address>\n#                         <nc:name>10.200.16.20/24</nc:name>\n#                     </nc:address>\n#                 </nc:inet>\n#             </nc:family>\n#         </nc:unit>\n#     </nc:interface>\n#     <nc:interface>\n#         <nc:name>ge-2/0/0</nc:name>\n#         <nc:unit>\n#             <nc:name>0</nc:name>\n#             <nc:family>\n#                 <nc:inet>\n#                     <nc:address>\n#                         <nc:name>192.168.100.2/24</nc:name>\n#                     </nc:address>\n#                     <nc:address>\n#                         <nc:name>10.200.16.21/24</nc:name>\n#                     </nc:address>\n#                 </nc:inet>\n#             </nc:family>\n#         </nc:unit>\n#     </nc:interface>\n# </nc:interfaces>\"\n\n"
  },
  "junipernetworks.junos.junos_lacp": {
    "doc": {
      "description": "This module provides declarative management of global LACP on Juniper Junos network devices.",
      "has_action": true,
      "notes": "This module requires the netconf system service be enabled on the remote device being managed.\nTested against vSRX JUNOS version 18.1R1.\nThis module works with connection C(netconf). See L(the Junos OS Platform Options,../network/user_guide/platform_junos.html).",
      "options": {
        "config": {
          "aliases": [],
          "description": "A dictionary of LACP global options",
          "type": "dict",
          "required": false,
          "suboptions": {
            "link_protection": {
              "aliases": [],
              "description": "Enable LACP link-protection for the system. If the value is set to C(non-revertive) it will not revert links when a better priority link comes up. By default the link will be reverted.",
              "type": "str",
              "required": false,
              "choices": [
                "revertive",
                "non-revertive"
              ],
              "suboptions": {}
            },
            "system_priority": {
              "aliases": [],
              "description": "LACP priority for the system.",
              "type": "int",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "running_config": {
          "aliases": [],
          "description": "This option is used only with state I(parsed).\nThe value of this option should be the output received from the Junos device by executing the command B(show chassis aggregated-devices ethernet lacp).\nThe state I(parsed) reads the configuration from C(running_config) option and transforms it into Ansible structured data as per the resource module's argspec and the value is then returned in the I(parsed) key within the result",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The state of the configuration after module completion",
          "default": "merged",
          "type": "str",
          "required": false,
          "choices": [
            "merged",
            "replaced",
            "deleted",
            "gathered",
            "rendered",
            "parsed"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "ncclient (>=v0.6.4)"
      ],
      "short_description": "Global Link Aggregation Control Protocol (LACP) Junos resource module",
      "version_added": "1.0.0"
    },
    "examples": "\n# Using deleted\n\n# Before state:\n# -------------\n# user@junos01# show chassis aggregated-devices ethernet lacp\n# system-priority 63;\n# link-protection {\n#    non-revertive;\n# }\n\n- name: Delete global LACP attributes\n  junipernetworks.junos.junos_lacp:\n    state: deleted\n\n# After state:\n# ------------\n# user@junos01# show chassis aggregated-devices ethernet lacp\n#\n\n\n# Using merged\n\n# Before state:\n# -------------\n# user@junos01# show chassis aggregated-devices ethernet lacp\n#\n\n- name: Merge global LACP attributes\n  junipernetworks.junos.junos_lacp:\n    config:\n      system_priority: 63\n      link_protection: revertive\n    state: merged\n\n# After state:\n# ------------\n# user@junos01# show chassis aggregated-devices ethernet lacp\n# system-priority 63;\n# link-protection {\n#    non-revertive;\n# }\n\n\n# Using replaced\n\n# Before state:\n# -------------\n# user@junos01# show chassis aggregated-devices ethernet lacp\n# system-priority 63;\n# link-protection {\n#    non-revertive;\n# }\n\n- name: Replace global LACP attributes\n  junipernetworks.junos.junos_lacp:\n    config:\n      system_priority: 30\n      link_protection: non-revertive\n    state: replaced\n\n# After state:\n# ------------\n# user@junos01# show chassis aggregated-devices ethernet lacp\n# system-priority 30;\n# link-protection;\n#\n# Using gathered\n# Before state:\n# ------------\n#\n# ansible@cm123456tr21# show chassis aggregated-devices ethernet lacp\n# system-priority 63;\n# link-protection;\n\n- name: Gather junos lacp as in given arguments\n  junipernetworks.junos.junos_lacp:\n    state: gathered\n# Task Output (redacted)\n# -----------------------\n#\n# \"gathered\": {\n#         \"link_protection\": \"revertive\",\n#         \"system_priority\": 63\n#     }\n# After state:\n# ------------\n#\n# ansible@cm123456tr21# show chassis aggregated-devices ethernet lacp\n# system-priority 63;\n# link-protection;\n# Using rendered\n- name: Render platform specific xml from task input using rendered state\n  junipernetworks.junos.junos_lacp:\n    config:\n      system_priority: 63\n      link_protection: revertive\n    state: rendered\n# Task Output (redacted)\n# -----------------------\n# \"rendered\": \"<nc:chassis\n#     xmlns:nc=\"urn:ietf:params:xml:ns:netconf:base:1.0\">\n#     <nc:aggregated-devices>\n#         <nc:ethernet>\n#             <nc:lacp>\n#                 <nc:system-priority>63</nc:system-priority>\n#                 <nc:link-protection>\n#                     <nc:non-revertive delete=\"delete\"/>\n#                 </nc:link-protection>\n#             </nc:lacp>\n#         </nc:ethernet>\n#     </nc:aggregated-devices>\n# </nc:chassis>\n#\n# Using parsed\n# parsed.cfg\n# ------------\n#\n# <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n# <rpc-reply message-id=\"urn:uuid:0cadb4e8-5bba-47f4-986e-72906227007f\">\n#     <configuration changed-seconds=\"1590139550\" changed-localtime=\"2020-05-22 09:25:50 UTC\">\n#     <chassis>\n#         <aggregated-devices>\n#             <ethernet>\n#                 <lacp>\n#                     <system-priority>63</system-priority>\n#                     <link-protection>\n#                     </link-protection>\n#                 </lacp>\n#             </ethernet>\n#         </aggregated-devices>\n#     </chassis>\n#     </configuration>\n# </rpc-reply>\n# - name: Convert lacp config to argspec without connecting to the appliance\n#   junipernetworks.junos.junos_lacp:\n#     running_config: \"{{ lookup('file', './parsed.cfg') }}\"\n#     state: parsed\n# Task Output (redacted)\n# -----------------------\n# \"parsed\": {\n#         \"link_protection\": \"revertive\",\n#         \"system_priority\": 63\n#     }\n\n"
  },
  "junipernetworks.junos.junos_lacp_interfaces": {
    "doc": {
      "description": "This module manages Link Aggregation Control Protocol (LACP) attributes of interfaces on Juniper JUNOS devices.",
      "has_action": true,
      "options": {
        "config": {
          "aliases": [],
          "description": "The list of dictionaries of LACP interfaces options.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "force_up": {
              "aliases": [],
              "description": "This is a boolean argument to control if the port should be up in absence of received link Aggregation Control Protocol Data Unit (LACPDUS). This value is applicable for member interfaces only.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "name": {
              "aliases": [],
              "description": "Name Identifier of the interface or link aggregation group.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "period": {
              "aliases": [],
              "description": "Timer interval for periodic transmission of LACP packets. If the value is set to C(fast) the packets are received every second and if the value is C(slow) the packets are received every 30 seconds. This value is applicable for aggregate interface only.",
              "type": "str",
              "required": false,
              "choices": [
                "fast",
                "slow"
              ],
              "suboptions": {}
            },
            "port_priority": {
              "aliases": [],
              "description": "Priority of the member port. This value is applicable for member interfaces only.\nRefer to vendor documentation for valid values.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "sync_reset": {
              "aliases": [],
              "description": "The argument notifies minimum-link failure out of sync to peer. If the value is C(disable) it disables minimum-link failure handling at LACP level and if value is C(enable) it enables minimum-link failure handling at LACP level. This value is applicable for aggregate interface only.",
              "type": "str",
              "required": false,
              "choices": [
                "disable",
                "enable"
              ],
              "suboptions": {}
            },
            "system": {
              "aliases": [],
              "description": "This dict object contains configurable options related to LACP system parameters for the link aggregation group. This value is applicable for aggregate interface only.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "mac": {
                  "aliases": [],
                  "description": "Specifies the system ID to use in LACP negotiations for the bundle, encoded as a MAC address.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "address": {
                      "aliases": [],
                      "description": "The system ID to use in LACP negotiations.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "priority": {
                  "aliases": [],
                  "description": "Specifies the system priority to use in LACP negotiations for the bundle.\nRefer to vendor documentation for valid values.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                }
              }
            }
          }
        },
        "running_config": {
          "aliases": [],
          "description": "This option is used only with state I(parsed).\nThe value of this option should be the output received from the Junos device by executing the command B(show interface).\nThe state I(parsed) reads the configuration from C(running_config) option and transforms it into Ansible structured data as per the resource module's argspec and the value is then returned in the I(parsed) key within the result.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The state of the configuration after module completion.",
          "default": "merged",
          "type": "str",
          "required": false,
          "choices": [
            "merged",
            "replaced",
            "overridden",
            "deleted",
            "gathered",
            "parsed",
            "rendered"
          ],
          "suboptions": {}
        }
      },
      "short_description": "LACP interfaces resource module",
      "version_added": "1.0.0"
    },
    "examples": "\n# Using merged\n# Before state:\n# -------------\n# user@junos01# show interfaces\n# ge-0/0/2 {\n#     ether-options {\n#         802.3ad ae4;\n#     }\n# }\n# ge-0/0/3 {\n#    ether-options {\n#         802.3ad ae0;\n#     }\n# }\n# ae0 {\n#     description \"lag interface merged\";\n#     aggregated-ether-options {\n#         lacp {\n#             passive;\n#         }\n#     }\n# }\n# ae4 {\n#     description \"test aggregate interface\";\n#     aggregated-ether-options {\n#         lacp {\n#             passive;\n#             link-protection;\n#         }\n#     }\n# }\n\n- name: Merge provided configuration with device configuration\n  junipernetworks.junos.junos_lacp_interfaces:\n    config:\n    - name: ae0\n      period: fast\n      sync_reset: enable\n      system:\n        priority: 100\n        mac:\n          address: 00:00:00:00:00:02\n    - name: ge-0/0/3\n      port_priority: 100\n      force_up: true\n    state: merged\n\n# After state:\n# -------------\n# user@junos01# show interfaces\n# ge-0/0/2 {\n#     ether-options {\n#         802.3ad ae4;\n#     }\n# }\n# ge-0/0/3 {\n#     ether-options {\n#         802.3ad {\n#             lacp {\n#                 force-up;\n#                 port-priority 100;\n#             }\n#             ae0;\n#         }\n#     }\n# }\n# ae0 {\n#     description \"lag interface merged\";\n#     aggregated-ether-options {\n#         lacp {\n#             passive;\n#             periodic fast;\n#             sync-reset enable;\n#             system-priority 100;\n#             system-id 00:00:00:00:00:02;\n#         }\n#     }\n# }\n# ae4 {\n#     description \"test aggregate interface\";\n#     aggregated-ether-options {\n#         lacp {\n#             passive;\n#             link-protection;\n#         }\n#     }\n# }\n\n# Using replaced\n# Before state:\n# -------------\n# user@junos01# show interfaces\n# ge-0/0/2 {\n#     ether-options {\n#         802.3ad ae4;\n#     }\n# }\n# ge-0/0/3 {\n#     ether-options {\n#         802.3ad {\n#             lacp {\n#                 force-up;\n#                 port-priority 100;\n#             }\n#             ae0;\n#         }\n#     }\n# }\n# ae0 {\n#     description \"lag interface merged\";\n#     aggregated-ether-options {\n#         lacp {\n#             passive;\n#             periodic fast;\n#             sync-reset enable;\n#             system-priority 100;\n#             system-id 00:00:00:00:00:02;\n#         }\n#     }\n# }\n# ae4 {\n#     description \"test aggregate interface\";\n#     aggregated-ether-options {\n#         lacp {\n#             passive;\n#             link-protection;\n#         }\n#     }\n# }\n\n- name: Replace device LACP interfaces configuration with provided configuration\n  junipernetworks.junos.junos_lacp_interfaces:\n    config:\n    - name: ae0\n      period: slow\n    state: replaced\n\n# After state:\n# -------------\n# user@junos01# show interfaces\n# ge-0/0/2 {\n#     ether-options {\n#         802.3ad ae4;\n#     }\n# }\n# ge-0/0/3 {\n#     ether-options {\n#         802.3ad {\n#             lacp {\n#                 force-up;\n#                 port-priority 100;\n#             }\n#             ae0;\n#         }\n#     }\n# }\n# ae0 {\n#     description \"lag interface merged\";\n#     aggregated-ether-options {\n#         lacp {\n#             passive;\n#             periodic slow;\n#         }\n#     }\n# }\n# ae4 {\n#     description \"test aggregate interface\";\n#     aggregated-ether-options {\n#         lacp {\n#             passive;\n#             link-protection;\n#         }\n#     }\n# }\n\n# Using overridden\n# Before state:\n# -------------\n# user@junos01# show interfaces\n# ge-0/0/2 {\n#     ether-options {\n#         802.3ad ae4;\n#     }\n# }\n# ge-0/0/3 {\n#     ether-options {\n#         802.3ad {\n#             lacp {\n#                 force-up;\n#                 port-priority 100;\n#             }\n#             ae0;\n#         }\n#     }\n# }\n# ae0 {\n#     description \"lag interface merged\";\n#     aggregated-ether-options {\n#         lacp {\n#             passive;\n#             periodic slow;\n#         }\n#     }\n# }\n# ae4 {\n#     description \"test aggregate interface\";\n#     aggregated-ether-options {\n#         lacp {\n#             passive;\n#             link-protection;\n#         }\n#     }\n# }\n\n- name: Overrides all device LACP interfaces configuration with provided configuration\n  junipernetworks.junos.junos_lacp_interfaces:\n    config:\n    - name: ae0\n      system:\n        priority: 300\n        mac:\n          address: 00:00:00:00:00:03\n    - name: ge-0/0/2\n      port_priority: 200\n      force_up: false\n    state: overridden\n\n# After state:\n# -------------\n# user@junos01# show interfaces\n# ge-0/0/2 {\n#     ether-options {\n#         802.3ad {\n#             lacp {\n#                 port-priority 200;\n#             }\n#             ae4;\n#         }\n#     }\n# }\n# ge-0/0/3 {\n#     ether-options {\n#         802.3ad {\n#             lacp {\n#                 force-up;\n#                 port-priority 100;\n#             }\n#             ae0;\n#         }\n#     }\n# }\n# ae0 {\n#     description \"lag interface merged\";\n#     aggregated-ether-options {\n#         lacp {\n#             passive;\n#             system-priority 300;\n#             system-id 00:00:00:00:00:03;\n#         }\n#     }\n# }\n# ae4 {\n#     description \"test aggregate interface\";\n#     aggregated-ether-options {\n#         lacp {\n#             passive;\n#             link-protection;\n#         }\n#     }\n# }\n\n# Using deleted\n# Before state:\n# -------------\n# user@junos01# show interfaces\n# ge-0/0/2 {\n#     ether-options {\n#         802.3ad {\n#             lacp {\n#                 port-priority 200;\n#             }\n#             ae4;\n#         }\n#     }\n# }\n# ge-0/0/3 {\n#     ether-options {\n#         802.3ad {\n#             lacp {\n#                 force-up;\n#                 port-priority 100;\n#             }\n#             ae0;\n#         }\n#     }\n# }\n# ae0 {\n#     description \"lag interface merged\";\n#     aggregated-ether-options {\n#         lacp {\n#             passive;\n#             system-priority 300;\n#             system-id 00:00:00:00:00:03;\n#         }\n#     }\n# }\n# ae4 {\n#     description \"test aggregate interface\";\n#     aggregated-ether-options {\n#         lacp {\n#             passive;\n#             link-protection;\n#         }\n#     }\n# }\n\n- name: \"Delete LACP interfaces attributes of given interfaces (Note: This won't delete the interface itself)\"\n  junipernetworks.junos.junos_lacp_interfaces:\n    config:\n    - name: ae0\n    - name: ge-0/0/3\n    - name: ge-0/0/2\n    state: deleted\n\n# After state:\n# -------------\n# user@junos01# show interfaces\n# ge-0/0/2 {\n#     ether-options {\n#         802.3ad ae4;\n#     }\n# }\n# ge-0/0/3 {\n#    ether-options {\n#         802.3ad ae0;\n#     }\n# }\n# ae0 {\n#     description \"lag interface merged\";\n#     aggregated-ether-options {\n#         lacp {\n#             passive;\n#         }\n#     }\n# }\n# ae4 {\n#     description \"test aggregate interface\";\n#     aggregated-ether-options {\n#         lacp {\n#             passive;\n#             link-protection;\n#         }\n#     }\n# }\n# Using gathered\n# Before state:\n# ------------\n#\n# user@junos01# show interfaces\n# ansible@cm123456tr21# show interfaces\n# ge-0/0/1 {\n#     ether-options {\n#         802.3ad {\n#             lacp {\n#                 force-up;\n#                 port-priority 100;\n#             }\n#             ae1;\n#         }\n#     }\n# }\n# ge-0/0/2 {\n#     ether-options {\n#         802.3ad ae1;\n#     }\n# }\n# ge-0/0/3 {\n#     ether-options {\n#         802.3ad ae2;\n#     }\n# }\n# ge-0/0/4 {\n#     ether-options {\n#         802.3ad ae2;\n#     }\n# }\n# ge-1/0/0 {\n#     unit 0 {\n#         family inet {\n#             address 192.168.100.1/24;\n#             address 10.200.16.20/24;\n#         }\n#         family inet6;\n#     }\n# }\n# ge-2/0/0 {\n#     unit 0 {\n#         family inet {\n#             address 192.168.100.2/24;\n#             address 10.200.16.21/24;\n#         }\n#         family inet6;\n#     }\n# }\n# ge-3/0/0 {\n#     unit 0 {\n#         family inet {\n#             address 192.168.100.3/24;\n#             address 10.200.16.22/24;\n#         }\n#         family inet6;\n#     }\n# }\n# ae1 {\n#     description \"Configured by Ansible\";\n#     aggregated-ether-options {\n#         lacp {\n#             periodic fast;\n#             sync-reset enable;\n#             system-priority 100;\n#             system-id 00:00:00:00:00:02;\n#         }\n#     }\n# }\n# ae2 {\n#     description \"Configured by Ansible\";\n# }\n# em1 {\n#     description TEST;\n# }\n# fxp0 {\n#     description ANSIBLE;\n#     speed 1g;\n#     link-mode automatic;\n#     unit 0 {\n#         family inet {\n#             address 10.8.38.38/24;\n#         }\n#     }\n# }\n- name: Gather junos lacp interfaces as in given arguments\n  junipernetworks.junos.junos_lacp_interfaces:\n    state: gathered\n# Task Output (redacted)\n# -----------------------\n#\n# \"gathered\": [\n#         {\n#             \"force_up\": true,\n#             \"name\": \"ge-0/0/1\",\n#             \"port_priority\": 100\n#         },\n#         {\n#             \"name\": \"ae1\",\n#             \"period\": \"fast\",\n#             \"sync_reset\": \"enable\",\n#             \"system\": {\n#                 \"mac\": {\n#                     \"address\": \"00:00:00:00:00:02\"\n#                 },\n#                 \"priority\": 100\n#             }\n#         }\n#     ]\n# After state:\n# ------------\n#\n# ansible@cm123456tr21# show interfaces\n# ge-0/0/1 {\n#     ether-options {\n#         802.3ad {\n#             lacp {\n#                 force-up;\n#                 port-priority 100;\n#             }\n#             ae1;\n#         }\n#     }\n# }\n# ge-0/0/2 {\n#     ether-options {\n#         802.3ad ae1;\n#     }\n# }\n# ge-0/0/3 {\n#     ether-options {\n#         802.3ad ae2;\n#     }\n# }\n# ge-0/0/4 {\n#     ether-options {\n#         802.3ad ae2;\n#     }\n# }\n# ge-1/0/0 {\n#     unit 0 {\n#         family inet {\n#             address 192.168.100.1/24;\n#             address 10.200.16.20/24;\n#         }\n#         family inet6;\n#     }\n# }\n# ge-2/0/0 {\n#     unit 0 {\n#         family inet {\n#             address 192.168.100.2/24;\n#             address 10.200.16.21/24;\n#         }\n#         family inet6;\n#     }\n# }\n# ge-3/0/0 {\n#     unit 0 {\n#         family inet {\n#             address 192.168.100.3/24;\n#             address 10.200.16.22/24;\n#         }\n#         family inet6;\n#     }\n# }\n# ae1 {\n#     description \"Configured by Ansible\";\n#     aggregated-ether-options {\n#         lacp {\n#             periodic fast;\n#             sync-reset enable;\n#             system-priority 100;\n#             system-id 00:00:00:00:00:02;\n#         }\n#     }\n# }\n# ae2 {\n#     description \"Configured by Ansible\";\n# }\n# em1 {\n#     description TEST;\n# }\n# fxp0 {\n#     description ANSIBLE;\n#     speed 1g;\n#     link-mode automatic;\n#     unit 0 {\n#         family inet {\n#             address 10.8.38.38/24;\n#         }\n#     }\n# }\n# Using parsed\n# parsed.cfg\n# ------------\n#\n# <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n# <rpc-reply message-id=\"urn:uuid:0cadb4e8-5bba-47f4-986e-72906227007f\">\n#     <configuration changed-seconds=\"1590139550\" changed-localtime=\"2020-05-22 09:25:50 UTC\">\n# <interfaces>\n#         <interface>\n#             <name>ge-0/0/1</name>\n#             <ether-options>\n#                 <ieee-802.3ad>\n#                     <lacp>\n#                         <force-up/>\n#                         <port-priority>100</port-priority>\n#                     </lacp>\n#                     <bundle>ae1</bundle>\n#                 </ieee-802.3ad>\n#             </ether-options>\n#         </interface>\n#         <interface>\n#             <name>ge-0/0/2</name>\n#             <ether-options>\n#                 <ieee-802.3ad>\n#                     <bundle>ae1</bundle>\n#                 </ieee-802.3ad>\n#             </ether-options>\n#         </interface>\n#         <interface>\n#             <name>ge-0/0/3</name>\n#             <ether-options>\n#                 <ieee-802.3ad>\n#                     <bundle>ae2</bundle>\n#                 </ieee-802.3ad>\n#             </ether-options>\n#         </interface>\n#         <interface>\n#             <name>ge-0/0/4</name>\n#             <ether-options>\n#                 <ieee-802.3ad>\n#                     <bundle>ae2</bundle>\n#                 </ieee-802.3ad>\n#             </ether-options>\n#         </interface>\n#         <interface>\n#             <name>ge-1/0/0</name>\n#             <unit>\n#                 <name>0</name>\n#                 <family>\n#                     <inet>\n#                         <address>\n#                             <name>192.168.100.1/24</name>\n#                         </address>\n#                         <address>\n#                             <name>10.200.16.20/24</name>\n#                         </address>\n#                     </inet>\n#                     <inet6>\n#                     </inet6>\n#                 </family>\n#             </unit>\n#         </interface>\n#         <interface>\n#             <name>ge-2/0/0</name>\n#             <unit>\n#                 <name>0</name>\n#                 <family>\n#                     <inet>\n#                         <address>\n#                             <name>192.168.100.2/24</name>\n#                         </address>\n#                         <address>\n#                             <name>10.200.16.21/24</name>\n#                         </address>\n#                     </inet>\n#                     <inet6>\n#                     </inet6>\n#                 </family>\n#             </unit>\n#         </interface>\n#         <interface>\n#             <name>ge-3/0/0</name>\n#             <unit>\n#                 <name>0</name>\n#                 <family>\n#                     <inet>\n#                         <address>\n#                             <name>192.168.100.3/24</name>\n#                         </address>\n#                         <address>\n#                             <name>10.200.16.22/24</name>\n#                         </address>\n#                     </inet>\n#                     <inet6>\n#                     </inet6>\n#                 </family>\n#             </unit>\n#         </interface>\n#         <interface>\n#             <name>ae1</name>\n#             <description>Configured by Ansible</description>\n#             <aggregated-ether-options>\n#                 <lacp>\n#                     <periodic>fast</periodic>\n#                     <sync-reset>enable</sync-reset>\n#                     <system-priority>100</system-priority>\n#                     <system-id>00:00:00:00:00:02</system-id>\n#                 </lacp>\n#             </aggregated-ether-options>\n#         </interface>\n#         <interface>\n#             <name>ae2</name>\n#             <description>Configured by Ansible</description>\n#         </interface>\n#         <interface>\n#             <name>em1</name>\n#             <description>TEST</description>\n#         </interface>\n#         <interface>\n#             <name>fxp0</name>\n#             <description>ANSIBLE</description>\n#             <speed>1g</speed>\n#             <link-mode>automatic</link-mode>\n#             <unit>\n#                 <name>0</name>\n#                 <family>\n#                     <inet>\n#                         <address>\n#                             <name>10.8.38.38/24</name>\n#                         </address>\n#                     </inet>\n#                 </family>\n#             </unit>\n#         </interface>\n#     </interfaces>\n#     </configuration>\n# </rpc-reply>\n# - name: Convert interfaces config to argspec without connecting to the appliance\n#   junipernetworks.junos.junos_lacp_interfaces:\n#     running_config: \"{{ lookup('file', './parsed.cfg') }}\"\n#     state: parsed\n# Task Output (redacted)\n# -----------------------\n# \"parsed\": [\n#         {\n#             \"force_up\": true,\n#             \"name\": \"ge-0/0/1\",\n#             \"port_priority\": 100\n#         },\n#         {\n#             \"name\": \"ae1\",\n#             \"period\": \"fast\",\n#             \"sync_reset\": \"enable\",\n#             \"system\": {\n#                 \"mac\": {\n#                     \"address\": \"00:00:00:00:00:02\"\n#                 },\n#                 \"priority\": 100\n#             }\n#         }\n#     ]\n# Using rendered\n- name: Render platform specific xml from task input using rendered state\n  junipernetworks.junos.junos_lacp_interfaces:\n    config:\n     - name: ae1\n       period: fast\n       sync_reset: enable\n       system:\n         priority: 100\n         mac:\n           address: 00:00:00:00:00:02\n\n     - name: ge-0/0/1\n       port_priority: 100\n       force_up: true\n    state: rendered\n# Task Output (redacted)\n# -----------------------\n# \"rendered\": \"<nc:interfaces\n#     xmlns:nc=\"urn:ietf:params:xml:ns:netconf:base:1.0\">\n#     <nc:interface>\n#         <nc:name>ae1</nc:name>\n#         <nc:aggregated-ether-options>\n#             <nc:lacp>\n#                 <nc:periodic>fast</nc:periodic>\n#                 <nc:sync-reset>enable</nc:sync-reset>\n#                 <nc:system-id>00:00:00:00:00:02</nc:system-id>\n#                 <nc:system-priority>100</nc:system-priority>\n#             </nc:lacp>\n#         </nc:aggregated-ether-options>\n#     </nc:interface>\n#     <nc:interface>\n#         <nc:name>ge-0/0/1</nc:name>\n#         <nc:ether-options>\n#             <nc:ieee-802.3ad>\n#                 <nc:lacp>\n#                     <nc:port-priority>100</nc:port-priority>\n#                     <nc:force-up/>\n#                 </nc:lacp>\n#             </nc:ieee-802.3ad>\n#         </nc:ether-options>\n#     </nc:interface>\n# </nc:interfaces>\"\n\n"
  },
  "junipernetworks.junos.junos_lag_interfaces": {
    "doc": {
      "description": "This module manages properties of Link Aggregation Group on Juniper JUNOS devices.",
      "has_action": true,
      "notes": "This module requires the netconf system service be enabled on the remote device being managed.\nTested against vSRX JUNOS version 18.4R1.\nThis module works with connection C(netconf). See L(the Junos OS Platform Options,../network/user_guide/platform_junos.html).",
      "options": {
        "config": {
          "aliases": [],
          "description": "A list of link aggregation group configurations.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "link_protection": {
              "aliases": [],
              "description": "This boolean option indicates if link protection should be enabled for the LAG interface. If value is C(True) link protection is enabled on LAG and if value is C(False) link protection is disabled.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "members": {
              "aliases": [],
              "description": "List of member interfaces of the link aggregation group. The value can be single interface or list of interfaces.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "link_type": {
                  "aliases": [],
                  "description": "The value of this options configures the member link as either C(primary) or C(backup). Value C(primary) configures primary interface for link-protection mode and C(backup) configures backup interface for link-protection mode.",
                  "type": "str",
                  "required": false,
                  "choices": [
                    "primary",
                    "backup"
                  ],
                  "suboptions": {}
                },
                "member": {
                  "aliases": [],
                  "description": "Name of the member interface.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "mode": {
              "aliases": [],
              "description": "LAG mode. A value of C(passive) will enable LACP in C(passive) mode that is it will respond to LACP packets and C(active) configures the link to initiate transmission of LACP packets.",
              "type": "str",
              "required": false,
              "choices": [
                "active",
                "passive"
              ],
              "suboptions": {}
            },
            "name": {
              "aliases": [],
              "description": "Name of the link aggregation group (LAG).",
              "type": "str",
              "required": true,
              "suboptions": {}
            }
          }
        },
        "running_config": {
          "aliases": [],
          "description": "This option is used only with state I(parsed).\nThe value of this option should be the output received from the Junos device by executing the command B(show interfaces).\nThe state I(parsed) reads the configuration from C(running_config) option and transforms it into Ansible structured data as per the resource module's argspec and the value is then returned in the I(parsed) key within the result",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The state of the configuration after module completion",
          "default": "merged",
          "type": "str",
          "required": false,
          "choices": [
            "merged",
            "replaced",
            "overridden",
            "deleted",
            "gathered",
            "rendered",
            "parsed"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "ncclient (>=v0.6.4)"
      ],
      "short_description": "Link Aggregation Juniper JUNOS resource module",
      "version_added": "1.0.0"
    },
    "examples": "\n# Using merged\n\n# Before state:\n# -------------\n# user@junos01# show interfaces\n# ge-0/0/1 {\n#    description \"Ansible configured interface 1\";\n#    ether-options {\n#        802.3ad ae0;\n#    }\n# }\n# ge-0/0/2 {\n#    description \"Ansible configured interface 2\";\n#    ether-options {\n#        802.3ad ae0;\n#    }\n# }\n# ae0 {\n#     description \"lag interface\";\n# }\n# ae1 {\n#     description \"lag interface 1\";\n# }\n\n- name: \"Delete LAG attributes of given interfaces (Note: This won't delete the interface itself)\"\n  junipernetworks.junos.junos_lag_interfaces:\n    config:\n    - name: ae0\n    - name: ae1\n    state: deleted\n\n# After state:\n# -------------\n# user@junos01# show interfaces\n# ge-0/0/1 {\n#    description \"Ansible configured interface 1\";\n# }\n# ge-0/0/2 {\n#    description \"Ansible configured interface 2\";\n# }\n\n\n# Using merged\n\n# Before state:\n# -------------\n# user@junos01# show interfaces\n# ge-0/0/1 {\n#    description \"Ansible configured interface 1\";\n# }\n# ge-0/0/2 {\n#    description \"Ansible configured interface 2\";\n# }\n\n- name: Merge provided configuration with device configuration\n  junipernetworks.junos.junos_lag_interfaces:\n    config:\n    - name: ae0\n      members:\n      - member: ge-0/0/1\n        link_type: primary\n      - member: ge-0/0/2\n        link_type: backup\n    state: merged\n\n# After state:\n# -------------\n# user@junos01# show interfaces\n# ge-0/0/1 {\n#    description \"Ansible configured interface 1\";\n#    ether-options {\n#        802.3ad {\n#            ae0;\n#            primary;\n#        }\n#    }\n# }\n# ge-0/0/2 {\n#    description \"Ansible configured interface 2\";\n#    ether-options {\n#        802.3ad {\n#            ae0;\n#            backup;\n#        }\n#    }\n# }\n\n\n# Using merged\n\n# Before state:\n# -------------\n# user@junos01# show interfaces\n# ge-0/0/1 {\n#    description \"Ansible configured interface 1\";\n#    ether-options {\n#        802.3ad ae0;\n#    }\n# }\n# ge-0/0/2 {\n#    description \"Ansible configured interface 2\";\n#    ether-options {\n#        802.3ad ae0;\n#    }\n# }\n# ae0 {\n#     description \"lag interface\";\n# }\n# ae3 {\n#     description \"lag interface 3\";\n# }\n\n- name: Overrides all device LAG configuration with provided configuration\n  junipernetworks.junos.junos_lag_interfaces:\n    config:\n    - name: ae0\n      members:\n      - member: ge-0/0/2\n    - name: ae1\n      members:\n      - member: ge-0/0/1\n      mode: passive\n    state: overridden\n\n# After state:\n# -------------\n# user@junos01# show interfaces\n# ge-0/0/1 {\n#    description \"Ansible configured interface 1\";\n#    ether-options {\n#        802.3ad ae1;\n#    }\n# }\n# ge-0/0/2 {\n#    description \"Ansible configured interface 2\";\n#    ether-options {\n#        802.3ad ae0;\n#    }\n# }\n# ae0 {\n#     description \"lag interface\";\n# }\n# ae1 {\n#    aggregated-ether-options {\n#        lacp {\n#            active;\n#        }\n#    }\n# }\n\n\n# Using merged\n\n# Before state:\n# -------------\n# user@junos01# show interfaces\n# ge-0/0/1 {\n#    description \"Ansible configured interface 1\";\n# }\n# ge-0/0/2 {\n#    description \"Ansible configured interface 2\";\n# }\n# ge-0/0/3 {\n#    description \"Ansible configured interface 3\";\n# }\n\n- name: Replace device LAG configuration with provided configuration\n  junipernetworks.junos.junos_lag_interfaces:\n    config:\n    - name: ae0\n      members:\n      - member: ge-0/0/1\n      mode: active\n    state: replaced\n\n# After state:\n# -------------\n# user@junos01# show interfaces\n# ge-0/0/1 {\n#    description \"Ansible configured interface 1\";\n#    ether-options {\n#        802.3ad ae0;\n#    }\n# }\n# ge-0/0/2 {\n#    description \"Ansible configured interface 2\";\n# }\n# ae0 {\n#    aggregated-ether-options {\n#        lacp {\n#            active;\n#        }\n#    }\n# }\n# ge-0/0/3 {\n#    description \"Ansible configured interface 3\";\n# }\n# Using gathered\n# Before state:\n# ------------\n#\n# ansible@cm123456tr21# show interfaces\n# ge-0/0/1 {\n#     ether-options {\n#         802.3ad ae1;\n#     }\n# }\n# ge-0/0/2 {\n#     ether-options {\n#         802.3ad ae1;\n#     }\n# }\n# ge-0/0/3 {\n#     ether-options {\n#         802.3ad {\n#             ae2;\n#             primary;\n#         }\n#     }\n# }\n# ge-0/0/4 {\n#     ether-options {\n#         802.3ad {\n#             ae2;\n#             backup;\n#         }\n#     }\n# }\n# ge-1/0/0 {\n#     unit 0 {\n#         family inet {\n#             address 192.168.100.1/24;\n#             address 10.200.16.20/24;\n#         }\n#         family inet6;\n#     }\n# }\n# ge-2/0/0 {\n#     unit 0 {\n#         family inet {\n#             address 192.168.100.2/24;\n#             address 10.200.16.21/24;\n#         }\n#         family inet6;\n#     }\n# }\n# ge-3/0/0 {\n#     unit 0 {\n#         family inet {\n#             address 192.168.100.3/24;\n#             address 10.200.16.22/24;\n#         }\n#         family inet6;\n#     }\n# }\n# ae1 {\n#     description \"Configured by Ansible\";\n#     aggregated-ether-options {\n#         lacp {\n#             active;\n#         }\n#     }\n# }\n# ae2 {\n#     description \"Configured by Ansible\";\n#     aggregated-ether-options {\n#         link-protection;\n#         lacp {\n#             passive;\n#         }\n#     }\n# }\n# em1 {\n#     description TEST;\n# }\n# fxp0 {\n#     description ANSIBLE;\n#     speed 1g;\n#     link-mode automatic;\n#     unit 0 {\n#         family inet {\n#             address 10.8.38.38/24;\n#         }\n#     }\n# }\n- name: Gather junos lag interfaces as in given arguments\n  junipernetworks.junos.junos_lag_interfaces:\n    state: gathered\n# Task Output (redacted)\n# -----------------------\n#\n# \"gathered\": [\n#         {\n#             \"members\": [\n#                 {\n#                     \"member\": \"ge-0/0/1\"\n#                 },\n#                 {\n#                     \"member\": \"ge-0/0/2\"\n#                 }\n#             ],\n#             \"mode\": \"active\",\n#             \"name\": \"ae1\"\n#         },\n#         {\n#             \"link_protection\": true,\n#             \"members\": [\n#                 {\n#                     \"link_type\": \"primary\",\n#                     \"member\": \"ge-0/0/3\"\n#                 },\n#                 {\n#                     \"link_type\": \"backup\",\n#                     \"member\": \"ge-0/0/4\"\n#                 }\n#             ],\n#             \"mode\": \"passive\",\n#             \"name\": \"ae2\"\n#         }\n#     ]\n# After state:\n# ------------\n#\n# ansible@cm123456tr21# show interfaces\n# ge-0/0/1 {\n#     ether-options {\n#         802.3ad ae1;\n#     }\n# }\n# ge-0/0/2 {\n#     ether-options {\n#         802.3ad ae1;\n#     }\n# }\n# ge-0/0/3 {\n#     ether-options {\n#         802.3ad {\n#             ae2;\n#             primary;\n#         }\n#     }\n# }\n# ge-0/0/4 {\n#     ether-options {\n#         802.3ad {\n#             ae2;\n#             backup;\n#         }\n#     }\n# }\n# ge-1/0/0 {\n#     unit 0 {\n#         family inet {\n#             address 192.168.100.1/24;\n#             address 10.200.16.20/24;\n#         }\n#         family inet6;\n#     }\n# }\n# ge-2/0/0 {\n#     unit 0 {\n#         family inet {\n#             address 192.168.100.2/24;\n#             address 10.200.16.21/24;\n#         }\n#         family inet6;\n#     }\n# }\n# ge-3/0/0 {\n#     unit 0 {\n#         family inet {\n#             address 192.168.100.3/24;\n#             address 10.200.16.22/24;\n#         }\n#         family inet6;\n#     }\n# }\n# ae1 {\n#     description \"Configured by Ansible\";\n#     aggregated-ether-options {\n#         lacp {\n#             active;\n#         }\n#     }\n# }\n# ae2 {\n#     description \"Configured by Ansible\";\n#     aggregated-ether-options {\n#         link-protection;\n#         lacp {\n#             passive;\n#         }\n#     }\n# }\n# em1 {\n#     description TEST;\n# }\n# fxp0 {\n#     description ANSIBLE;\n#     speed 1g;\n#     link-mode automatic;\n#     unit 0 {\n#         family inet {\n#             address 10.8.38.38/24;\n#         }\n#     }\n# }\n# Using parsed\n# parsed.cfg\n# ------------\n#\n# <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n# <rpc-reply message-id=\"urn:uuid:0cadb4e8-5bba-47f4-986e-72906227007f\">\n#     <configuration changed-seconds=\"1590139550\" changed-localtime=\"2020-05-22 09:25:50 UTC\">\n# <interfaces>\n#         <interface>\n#             <name>ge-0/0/1</name>\n#             <ether-options>\n#                 <ieee-802.3ad>\n#                     <bundle>ae1</bundle>\n#                 </ieee-802.3ad>\n#             </ether-options>\n#         </interface>\n#         <interface>\n#             <name>ge-0/0/2</name>\n#             <ether-options>\n#                 <ieee-802.3ad>\n#                     <bundle>ae1</bundle>\n#                 </ieee-802.3ad>\n#             </ether-options>\n#         </interface>\n#         <interface>\n#             <name>ge-0/0/3</name>\n#             <ether-options>\n#                 <ieee-802.3ad>\n#                     <bundle>ae2</bundle>\n#                     <primary/>\n#                 </ieee-802.3ad>\n#             </ether-options>\n#         </interface>\n#         <interface>\n#             <name>ge-0/0/4</name>\n#             <ether-options>\n#                 <ieee-802.3ad>\n#                     <bundle>ae2</bundle>\n#                     <backup/>\n#                 </ieee-802.3ad>\n#             </ether-options>\n#         </interface>\n#         <interface>\n#             <name>ge-1/0/0</name>\n#             <unit>\n#                 <name>0</name>\n#                 <family>\n#                     <inet>\n#                         <address>\n#                             <name>192.168.100.1/24</name>\n#                         </address>\n#                         <address>\n#                             <name>10.200.16.20/24</name>\n#                         </address>\n#                     </inet>\n#                     <inet6>\n#                     </inet6>\n#                 </family>\n#             </unit>\n#         </interface>\n#         <interface>\n#             <name>ge-2/0/0</name>\n#             <unit>\n#                 <name>0</name>\n#                 <family>\n#                     <inet>\n#                         <address>\n#                             <name>192.168.100.2/24</name>\n#                         </address>\n#                         <address>\n#                             <name>10.200.16.21/24</name>\n#                         </address>\n#                     </inet>\n#                     <inet6>\n#                     </inet6>\n#                 </family>\n#             </unit>\n#         </interface>\n#         <interface>\n#             <name>ge-3/0/0</name>\n#             <unit>\n#                 <name>0</name>\n#                 <family>\n#                     <inet>\n#                         <address>\n#                             <name>192.168.100.3/24</name>\n#                         </address>\n#                         <address>\n#                             <name>10.200.16.22/24</name>\n#                         </address>\n#                     </inet>\n#                     <inet6>\n#                     </inet6>\n#                 </family>\n#             </unit>\n#         </interface>\n#         <interface>\n#             <name>ae1</name>\n#             <description>Configured by Ansible</description>\n#             <aggregated-ether-options>\n#                 <lacp>\n#                     <active/>\n#                 </lacp>\n#             </aggregated-ether-options>\n#         </interface>\n#         <interface>\n#             <name>ae2</name>\n#             <description>Configured by Ansible</description>\n#             <aggregated-ether-options>\n#                 <link-protection>\n#                 </link-protection>\n#                 <lacp>\n#                     <passive/>\n#                 </lacp>\n#             </aggregated-ether-options>\n#         </interface>\n#         <interface>\n#             <name>em1</name>\n#             <description>TEST</description>\n#         </interface>\n#         <interface>\n#             <name>fxp0</name>\n#             <description>ANSIBLE</description>\n#             <speed>1g</speed>\n#             <link-mode>automatic</link-mode>\n#             <unit>\n#                 <name>0</name>\n#                 <family>\n#                     <inet>\n#                         <address>\n#                             <name>10.8.38.38/24</name>\n#                         </address>\n#                     </inet>\n#                 </family>\n#             </unit>\n#         </interface>\n#     </interfaces>\n#     </configuration>\n# </rpc-reply>\n# - name: Convert interfaces config to argspec without connecting to the appliance\n#   junipernetworks.junos.junos_lag_interfaces:\n#     running_config: \"{{ lookup('file', './parsed.cfg') }}\"\n#     state: parsed\n# Task Output (redacted)\n# -----------------------\n# \"parsed\": [\n#         {\n#             \"members\": [\n#                 {\n#                     \"member\": \"ge-0/0/1\"\n#                 },\n#                 {\n#                     \"member\": \"ge-0/0/2\"\n#                 }\n#             ],\n#             \"mode\": \"active\",\n#             \"name\": \"ae1\"\n#         },\n#         {\n#             \"link_protection\": true,\n#             \"members\": [\n#                 {\n#                     \"link_type\": \"primary\",\n#                     \"member\": \"ge-0/0/3\"\n#                 },\n#                 {\n#                     \"link_type\": \"backup\",\n#                     \"member\": \"ge-0/0/4\"\n#                 }\n#             ],\n#             \"mode\": \"passive\",\n#             \"name\": \"ae2\"\n#         }\n#     ]\n# Using rendered\n- name: Render platform specific xml from task input using rendered state\n  junipernetworks.junos.junos_lag_interfaces:\n    config:\n    - name: ae1\n      members:\n        - member: ge-0/0/1\n        - member: ge-0/0/2\n      mode: active\n\n    - name: ae2\n      link_protection: true\n      members:\n        - member: ge-0/0/3\n          link_type: primary\n        - member: ge-0/0/4\n          link_type: backup\n      mode: passive\n# Task Output (redacted)\n# -----------------------\n# \"rendered\": \"<nc:interfaces\n#     xmlns:nc=\"urn:ietf:params:xml:ns:netconf:base:1.0\">\n#     <nc:interface>\n#         <nc:name>ae1</nc:name>\n#         <nc:aggregated-ether-options>\n#             <nc:lacp>\n#                 <nc:active/>\n#             </nc:lacp>\n#         </nc:aggregated-ether-options>\n#     </nc:interface>\n#     <nc:interface>\n#         <nc:name>ge-0/0/1</nc:name>\n#         <nc:ether-options>\n#             <nc:ieee-802.3ad>\n#                 <nc:bundle>ae1</nc:bundle>\n#             </nc:ieee-802.3ad>\n#         </nc:ether-options>\n#     </nc:interface>\n#     <nc:interface>\n#         <nc:name>ge-0/0/2</nc:name>\n#         <nc:ether-options>\n#             <nc:ieee-802.3ad>\n#                 <nc:bundle>ae1</nc:bundle>\n#             </nc:ieee-802.3ad>\n#         </nc:ether-options>\n#     </nc:interface>\n#     <nc:interface>\n#         <nc:name>ae2</nc:name>\n#         <nc:aggregated-ether-options>\n#             <nc:lacp>\n#                 <nc:passive/>\n#             </nc:lacp>\n#             <nc:link-protection/>\n#         </nc:aggregated-ether-options>\n#     </nc:interface>\n#     <nc:interface>\n#         <nc:name>ge-0/0/3</nc:name>\n#         <nc:ether-options>\n#             <nc:ieee-802.3ad>\n#                 <nc:bundle>ae2</nc:bundle>\n#                 <nc:primary/>\n#             </nc:ieee-802.3ad>\n#         </nc:ether-options>\n#     </nc:interface>\n#     <nc:interface>\n#         <nc:name>ge-0/0/4</nc:name>\n#         <nc:ether-options>\n#             <nc:ieee-802.3ad>\n#                 <nc:bundle>ae2</nc:bundle>\n#                 <nc:backup/>\n#             </nc:ieee-802.3ad>\n#         </nc:ether-options>\n#     </nc:interface>\n# </nc:interfaces>\"\n\n"
  },
  "junipernetworks.junos.junos_linkagg": {
    "doc": {
      "description": "This module provides declarative management of link aggregation groups on Juniper JUNOS network devices.",
      "has_action": true,
      "notes": "This module requires the netconf system service be enabled on the remote device being managed.\nTested against vSRX JUNOS version 15.1X49-D15.4, vqfx-10000 JUNOS Version 15.1X53-D60.4.\nRecommended connection is C(netconf). See L(the Junos OS Platform Options,../network/user_guide/platform_junos.html).\nThis module also works with C(local) connections for legacy playbooks.\nFor information on using CLI and netconf see the :ref:`Junos OS Platform Options guide <junos_platform_options>`\nFor more information on using Ansible to manage network devices see the :ref:`Ansible Network Guide <network_guide>`\nFor more information on using Ansible to manage Juniper network devices see U(https://www.ansible.com/ansible-juniper).",
      "options": {
        "active": {
          "aliases": [],
          "description": "Specifies whether or not the configuration is active or deactivated",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "aggregate": {
          "aliases": [],
          "description": "List of link aggregation definitions.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "active": {
              "aliases": [],
              "description": "Specifies whether or not the configuration is active or deactivated",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "description": {
              "aliases": [],
              "description": "Description of Interface.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "device_count": {
              "aliases": [],
              "description": "Number of aggregated ethernet devices that can be configured. Acceptable integer value is between 1 and 128.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "members": {
              "aliases": [],
              "description": "List of members interfaces of the link aggregation group. The value can be single interface or list of interfaces.",
              "type": "list",
              "required": false,
              "elements": "str",
              "suboptions": {}
            },
            "min_links": {
              "aliases": [],
              "description": "Minimum members that should be up before bringing up the link aggregation group.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "mode": {
              "aliases": [],
              "description": "Mode of the link aggregation group. A value of C(on) will enable LACP in C(passive) mode. C(active) configures the link to actively information about the state of the link, or it can be configured in C(passive) mode ie. send link state information only when received them from another link. A value of C(off) will disable LACP.",
              "type": "str",
              "required": false,
              "choices": [
                "on",
                "off",
                "active",
                "passive"
              ],
              "suboptions": {}
            },
            "name": {
              "aliases": [],
              "description": "Name of the link aggregation group.",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "state": {
              "aliases": [],
              "description": "State of the link aggregation group.",
              "type": "str",
              "required": false,
              "choices": [
                "present",
                "absent",
                "up",
                "down"
              ],
              "suboptions": {}
            }
          }
        },
        "description": {
          "aliases": [],
          "description": "Description of Interface.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "device_count": {
          "aliases": [],
          "description": "Number of aggregated ethernet devices that can be configured. Acceptable integer value is between 1 and 128.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "members": {
          "aliases": [],
          "description": "List of members interfaces of the link aggregation group. The value can be single interface or list of interfaces.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "min_links": {
          "aliases": [],
          "description": "Minimum members that should be up before bringing up the link aggregation group.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "mode": {
          "aliases": [],
          "description": "Mode of the link aggregation group. A value of C(on) will enable LACP in C(passive) mode. C(active) configures the link to actively information about the state of the link, or it can be configured in C(passive) mode ie. send link state information only when received them from another link. A value of C(off) will disable LACP.",
          "default": "on",
          "type": "str",
          "required": false,
          "choices": [
            "on",
            "off",
            "active",
            "passive"
          ],
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the link aggregation group.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "B(Deprecated)\nStarting with Ansible 2.5 we recommend using C(connection: network_cli) or C(connection: netconf).\nFor more information please see the L(Junos OS Platform Options guide, ../network/user_guide/platform_junos.html).\nHORIZONTALLINE\nA dict object containing connection details.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "host": {
              "aliases": [],
              "description": "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [],
              "description": "Specifies the password to use to authenticate the connection to the remote device.   This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "port": {
              "aliases": [],
              "description": "Specifies the port to use when building the connection to the remote device.  The port value will default to the well known SSH port of 22 (for C(transport=cli)) or port 830 (for C(transport=netconf)) device.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "ssh_keyfile": {
              "aliases": [],
              "description": "Specifies the SSH key to use to authenticate the connection to the remote device.   This value is the path to the key used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead.",
              "type": "path",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "netconf",
              "type": "str",
              "required": false,
              "choices": [
                "cli",
                "netconf"
              ],
              "suboptions": {}
            },
            "username": {
              "aliases": [],
              "description": "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "State of the link aggregation group.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent",
            "up",
            "down"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "ncclient (>=v0.5.2)"
      ],
      "short_description": "(deprecated, removed after 2022-06-01) Manage link aggregation groups on Juniper JUNOS network devices",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: configure link aggregation\n  junipernetworks.junos.junos_linkagg:\n    name: ae11\n    members:\n    - ge-0/0/5\n    - ge-0/0/6\n    - ge-0/0/7\n    lacp: active\n    device_count: 4\n    state: present\n\n- name: delete link aggregation\n  junipernetworks.junos.junos_linkagg:\n    name: ae11\n    members:\n    - ge-0/0/5\n    - ge-0/0/6\n    - ge-0/0/7\n    lacp: active\n    device_count: 4\n    state: delete\n\n- name: deactivate link aggregation\n  junipernetworks.junos.junos_linkagg:\n    name: ae11\n    members:\n    - ge-0/0/5\n    - ge-0/0/6\n    - ge-0/0/7\n    lacp: active\n    device_count: 4\n    state: present\n    active: false\n\n- name: Activate link aggregation\n  junipernetworks.junos.junos_linkagg:\n    name: ae11\n    members:\n    - ge-0/0/5\n    - ge-0/0/6\n    - ge-0/0/7\n    lacp: active\n    device_count: 4\n    state: present\n    active: true\n\n- name: Disable link aggregation\n  junipernetworks.junos.junos_linkagg:\n    name: ae11\n    state: down\n\n- name: Enable link aggregation\n  junipernetworks.junos.junos_linkagg:\n    name: ae11\n    state: up\n"
  },
  "junipernetworks.junos.junos_lldp": {
    "doc": {
      "description": "This module provides declarative management of LLDP service on Juniper JUNOS network devices.",
      "has_action": true,
      "notes": "This module requires the netconf system service be enabled on the remote device being managed.\nTested against vSRX JUNOS version 15.1X49-D15.4, vqfx-10000 JUNOS Version 15.1X53-D60.4.\nRecommended connection is C(netconf). See L(the Junos OS Platform Options,../network/user_guide/platform_junos.html).\nThis module also works with C(local) connections for legacy playbooks.\nFor information on using CLI and netconf see the :ref:`Junos OS Platform Options guide <junos_platform_options>`\nFor more information on using Ansible to manage network devices see the :ref:`Ansible Network Guide <network_guide>`\nFor more information on using Ansible to manage Juniper network devices see U(https://www.ansible.com/ansible-juniper).",
      "options": {
        "active": {
          "aliases": [],
          "description": "Specifies whether or not the configuration is active or deactivated",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "hold_multiplier": {
          "aliases": [],
          "description": "Specify the number of seconds that LLDP information is held before it is discarded. The multiplier value is used in combination with the C(interval) value.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "interval": {
          "aliases": [],
          "description": "Frequency at which LLDP advertisements are sent (in seconds).",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "B(Deprecated)\nStarting with Ansible 2.5 we recommend using C(connection: network_cli) or C(connection: netconf).\nFor more information please see the L(Junos OS Platform Options guide, ../network/user_guide/platform_junos.html).\nHORIZONTALLINE\nA dict object containing connection details.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "host": {
              "aliases": [],
              "description": "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [],
              "description": "Specifies the password to use to authenticate the connection to the remote device.   This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "port": {
              "aliases": [],
              "description": "Specifies the port to use when building the connection to the remote device.  The port value will default to the well known SSH port of 22 (for C(transport=cli)) or port 830 (for C(transport=netconf)) device.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "ssh_keyfile": {
              "aliases": [],
              "description": "Specifies the SSH key to use to authenticate the connection to the remote device.   This value is the path to the key used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead.",
              "type": "path",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "netconf",
              "type": "str",
              "required": false,
              "choices": [
                "cli",
                "netconf"
              ],
              "suboptions": {}
            },
            "username": {
              "aliases": [],
              "description": "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "Value of C(present) ensures given LLDP configuration is present on device and LLDP is enabled, for value of C(absent) LLDP configuration is deleted and LLDP is in disabled state. Value C(enabled) ensures LLDP protocol is enabled and LLDP configuration if any is configured on remote device, for value of C(disabled) it ensures LLDP protocol is disabled any LLDP configuration if any is still present.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent",
            "enabled",
            "disabled"
          ],
          "suboptions": {}
        },
        "transmit_delay": {
          "aliases": [],
          "description": "Specify the number of seconds the device waits before sending advertisements to neighbors after a change is made in local system.",
          "type": "int",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "ncclient (>=v0.5.2)"
      ],
      "short_description": "(deprecated, removed after 2022-06-01) Manage LLDP configuration on Juniper JUNOS network devices",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Enable LLDP service\n  junipernetworks.junos.junos_lldp:\n    state: enabled\n\n- name: Disable LLDP service\n  junipernetworks.junos.junos_lldp:\n    state: disabled\n\n- name: Set LLDP parameters\n  junipernetworks.junos.junos_lldp:\n    interval: 10\n    hold_multiplier: 5\n    transmit_delay: 30\n    state: present\n\n- name: Delete LLDP parameters\n  junipernetworks.junos.junos_lldp:\n    interval: 10\n    hold_multiplier: 5\n    transmit_delay: 30\n    state: absent\n"
  },
  "junipernetworks.junos.junos_lldp_global": {
    "doc": {
      "description": "This module manages link layer discovery protocol (LLDP) attributes on Juniper JUNOS devices.",
      "has_action": true,
      "notes": "This module requires the netconf system service be enabled on the remote device being managed.\nTested against vSRX JUNOS version 18.4R1.\nThis module works with connection C(netconf). See L(the Junos OS Platform Options,../network/user_guide/platform_junos.html).",
      "options": {
        "config": {
          "aliases": [],
          "description": "The list of link layer discovery protocol attribute configurations",
          "type": "dict",
          "required": false,
          "suboptions": {
            "address": {
              "aliases": [],
              "description": "This argument sets the management address from LLDP.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "enabled": {
              "aliases": [],
              "description": "This argument is a boolean value to enabled or disable LLDP.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "hold_multiplier": {
              "aliases": [],
              "description": "Specify the number of seconds that LLDP information is held before it is discarded. The multiplier value is used in combination with the C(interval) value.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "interval": {
              "aliases": [],
              "description": "Frequency at which LLDP advertisements are sent (in seconds).",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transmit_delay": {
              "aliases": [],
              "description": "Specify the number of seconds the device waits before sending advertisements to neighbors after a change is made in local system.",
              "type": "int",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "running_config": {
          "aliases": [],
          "description": "This option is used only with state I(parsed).\nThe value of this option should be the output received from the Junos device by executing the command B(show protocols lldp).\nThe state I(parsed) reads the configuration from C(running_config) option and transforms it into Ansible structured data as per the resource module's argspec and the value is then returned in the I(parsed) key within the result",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The state of the configuration after module completion.",
          "default": "merged",
          "type": "str",
          "required": false,
          "choices": [
            "merged",
            "replaced",
            "deleted",
            "gathered",
            "rendered",
            "parsed"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "ncclient (>=v0.6.4)"
      ],
      "short_description": "LLDP resource module",
      "version_added": "1.0.0"
    },
    "examples": "\n# Using merged\n# Before state:\n# -------------\n# user@junos01# # show protocols lldp\n#\n- name: Merge provided configuration with device configuration\n  junipernetworks.junos.junos_lldp_global:\n    config:\n      interval: 10000\n      address: 10.1.1.1\n      transmit_delay: 400\n      hold_multiplier: 10\n    state: merged\n\n# After state:\n# -------------\n# user@junos01# show protocols lldp\n# management-address 10.1.1.1;\n# advertisement-interval 10000;\n# transmit-delay 400;\n# hold-multiplier 10;\n\n# Using replaced\n# Before state:\n# -------------\n# user@junos01# show protocols lldp\n# management-address 10.1.1.1;\n# advertisement-interval 10000;\n# transmit-delay 400;\n# hold-multiplier 10;\n\n- name: Replace provided configuration with device configuration\n  junipernetworks.junos.junos_lldp_global:\n    config:\n      address: 20.2.2.2\n      hold_multiplier: 30\n      enabled: false\n    state: replaced\n\n# After state:\n# -------------\n# user@junos01# show protocols lldp\n# disable;\n# management-address 20.2.2.2;\n# hold-multiplier 30;\n\n# Using deleted\n# Before state:\n# -------------\n# user@junos01# show protocols lldp\n# management-address 20.2.2.2;\n# hold-multiplier 30;\n\n- name: Delete lldp configuration (this will by default remove all lldp configuration)\n  junipernetworks.junos.junos_lldp_global:\n    state: deleted\n\n# After state:\n# -------------\n# user@junos01# # show protocols lldp\n#\n#\n# Using gathered\n# Before state:\n# ------------\n#\n# ansible@cm123456tr21# show protocols lldp\n# management-address 10.1.1.1;\n# advertisement-interval 10000;\n# transmit-delay 400;\n# hold-multiplier 10;\n# interface ge-0/0/1;\n# interface ge-0/0/2 {\n#     disable;\n# }\n- name: Gather junos lldp_global as in given arguments\n  junipernetworks.junos.junos_lldp_global:\n    state: gathered\n# Task Output (redacted)\n# -----------------------\n#\n# \"gathered\": {\n#         \"address\": \"10.1.1.1\",\n#         \"hold_multiplier\": 10,\n#         \"interval\": 10000,\n#         \"transmit_delay\": 400\n#     }\n# After state:\n# ------------\n#\n# ansible@cm123456tr21# show protocols lldp\n# management-address 10.1.1.1;\n# advertisement-interval 10000;\n# transmit-delay 400;\n# hold-multiplier 10;\n# interface ge-0/0/1;\n# interface ge-0/0/2 {\n#     disable;\n# }\n# Using rendered\n- name: Render platform specific xml from task input using rendered state\n  junipernetworks.junos.junos_lldp_global:\n    config:\n      interval: 10000\n      address: 10.1.1.1\n      transmit_delay: 400\n      hold_multiplier: 10\n    state: rendered\n# Task Output (redacted)\n# -----------------------\n# \"rendered\": \"<nc:protocols\n#     xmlns:nc=\"urn:ietf:params:xml:ns:netconf:base:1.0\">\n#     <nc:lldp>\n#         <nc:management-address>10.1.1.1</nc:management-address>\n#         <nc:advertisement-interval>10000</nc:advertisement-interval>\n#         <nc:transmit-delay>400</nc:transmit-delay>\n#         <nc:hold-multiplier>10</nc:hold-multiplier>\n#         <nc:disable delete=\"delete\"/>\n#     </nc:lldp>\n# </nc:protocols>\"\n#\n# parsed.cfg\n# ------------\n#\n# <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n# <rpc-reply message-id=\"urn:uuid:0cadb4e8-5bba-47f4-986e-72906227007f\">\n#     <configuration changed-seconds=\"1590139550\" changed-localtime=\"2020-05-22 09:25:50 UTC\">\n#         <protocols>\n#             <ospf>\n#                 <area>\n#                     <name>0.0.0.0</name>\n#                     <interface>\n#                         <name>ge-0/0/0.0</name>\n#                     </interface>\n#                 </area>\n#             </ospf>\n#             <lldp>\n#                 <management-address>10.1.1.1</management-address>\n#                 <advertisement-interval>10000</advertisement-interval>\n#                 <transmit-delay>400</transmit-delay>\n#                 <hold-multiplier>10</hold-multiplier>\n#                 <interface>\n#                     <name>ge-0/0/1</name>\n#                 </interface>\n#                 <interface>\n#                     <name>ge-0/0/2</name>\n#                     <disable/>\n#                 </interface>\n#             </lldp>\n#         </protocols>\n#     </configuration>\n# </rpc-reply>\n# - name: Convert lldp global config to argspec without connecting to the appliance\n#   junipernetworks.junos.junos_lldp_global:\n#     running_config: \"{{ lookup('file', './parsed.cfg') }}\"\n#     state: parsed\n# Task Output (redacted)\n# -----------------------\n# \"parsed\": {\n#         \"address\": \"10.1.1.1\",\n#         \"hold_multiplier\": 10,\n#         \"interval\": 10000,\n#         \"transmit_delay\": 400\n#     }\n"
  },
  "junipernetworks.junos.junos_lldp_interface": {
    "doc": {
      "description": "This module provides declarative management of LLDP interfaces configuration on Juniper JUNOS network devices.",
      "has_action": true,
      "notes": "This module requires the netconf system service be enabled on the remote device being managed.\nTested against vSRX JUNOS version 15.1X49-D15.4, vqfx-10000 JUNOS Version 15.1X53-D60.4.\nRecommended connection is C(netconf). See L(the Junos OS Platform Options,../network/user_guide/platform_junos.html).\nThis module also works with C(local) connections for legacy playbooks.\nFor information on using CLI and netconf see the :ref:`Junos OS Platform Options guide <junos_platform_options>`\nFor more information on using Ansible to manage network devices see the :ref:`Ansible Network Guide <network_guide>`\nFor more information on using Ansible to manage Juniper network devices see U(https://www.ansible.com/ansible-juniper).",
      "options": {
        "active": {
          "aliases": [],
          "description": "Specifies whether or not the configuration is active or deactivated",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the interface LLDP should be configured on.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "B(Deprecated)\nStarting with Ansible 2.5 we recommend using C(connection: network_cli) or C(connection: netconf).\nFor more information please see the L(Junos OS Platform Options guide, ../network/user_guide/platform_junos.html).\nHORIZONTALLINE\nA dict object containing connection details.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "host": {
              "aliases": [],
              "description": "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [],
              "description": "Specifies the password to use to authenticate the connection to the remote device.   This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "port": {
              "aliases": [],
              "description": "Specifies the port to use when building the connection to the remote device.  The port value will default to the well known SSH port of 22 (for C(transport=cli)) or port 830 (for C(transport=netconf)) device.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "ssh_keyfile": {
              "aliases": [],
              "description": "Specifies the SSH key to use to authenticate the connection to the remote device.   This value is the path to the key used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead.",
              "type": "path",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "netconf",
              "type": "str",
              "required": false,
              "choices": [
                "cli",
                "netconf"
              ],
              "suboptions": {}
            },
            "username": {
              "aliases": [],
              "description": "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "Value of C(present) ensures given LLDP configured on given I(interfaces) and is enabled, for value of C(absent) LLDP configuration on given I(interfaces) deleted. Value C(enabled) ensures LLDP protocol is enabled on given I(interfaces) and for value of C(disabled) it ensures LLDP is disabled on given I(interfaces).",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent",
            "enabled",
            "disabled"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "ncclient (>=v0.5.2)"
      ],
      "short_description": "(deprecated, removed after 2022-06-01) Manage LLDP interfaces configuration on Juniper JUNOS network devices",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Configure LLDP on specific interfaces\n  junipernetworks.junos.junos_lldp_interface:\n    name: ge-0/0/5\n    state: present\n\n- name: Disable LLDP on specific interfaces\n  junipernetworks.junos.junos_lldp_interface:\n    name: ge-0/0/5\n    state: disabled\n\n- name: Enable LLDP on specific interfaces\n  junipernetworks.junos.junos_lldp_interface:\n    name: ge-0/0/5\n    state: enabled\n\n- name: Delete LLDP configuration on specific interfaces\n  junipernetworks.junos.junos_lldp_interface:\n    name: ge-0/0/5\n    state: present\n\n- name: Deactivate LLDP on specific interfaces\n  junipernetworks.junos.junos_lldp_interface:\n    name: ge-0/0/5\n    state: present\n    active: false\n\n- name: Activate LLDP on specific interfaces\n  junipernetworks.junos.junos_lldp_interface:\n    name: ge-0/0/5\n    state: present\n    active: true\n"
  },
  "junipernetworks.junos.junos_lldp_interfaces": {
    "doc": {
      "description": "This module manages link layer discovery protocol (LLDP) attributes of interfaces on Juniper JUNOS devices.",
      "has_action": true,
      "options": {
        "config": {
          "aliases": [],
          "description": "The list of link layer discovery protocol interface attribute configurations",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "enabled": {
              "aliases": [],
              "description": "This is a boolean value to control disabling of LLDP on the interface C(name)",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "name": {
              "aliases": [],
              "description": "Name of the interface LLDP needs to be configured on.",
              "type": "str",
              "required": true,
              "suboptions": {}
            }
          }
        },
        "running_config": {
          "aliases": [],
          "description": "This option is used only with state I(parsed).\nThe value of this option should be the output received from the Junos device by executing the command B(show protocols lldp).\nThe state I(parsed) reads the configuration from C(running_config) option and transforms it into Ansible structured data as per the resource module's argspec and the value is then returned in the I(parsed) key within the result",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The state of the configuration after module completion.",
          "default": "merged",
          "type": "str",
          "required": false,
          "choices": [
            "merged",
            "replaced",
            "overridden",
            "deleted",
            "gathered",
            "rendered",
            "parsed"
          ],
          "suboptions": {}
        }
      },
      "short_description": "LLDP interfaces resource module",
      "version_added": "1.0.0"
    },
    "examples": "\n# Using merged\n# Before state:\n# -------------\n# user@junos01# # show protocols lldp\n# management-address 10.1.1.1;\n# advertisement-interval 10000;\n\n- name: Merge provided configuration with device configuration\n  junipernetworks.junos.junos_lldp_interfaces:\n    config:\n    - name: ge-0/0/1\n    - name: ge-0/0/2\n      enabled: false\n    state: merged\n\n# After state:\n# -------------\n# user@junos01# show protocols lldp\n# management-address 10.1.1.1;\n# advertisement-interval 10000;\n# interface ge-0/0/1;\n# interface ge-0/0/2 {\n#     disable;\n# }\n\n# Using replaced\n# Before state:\n# -------------\n# user@junos01# show protocols lldp\n# management-address 10.1.1.1;\n# advertisement-interval 10000;\n# interface ge-0/0/1;\n# interface ge-0/0/2 {\n#     disable;\n# }\n\n- name: Replace provided configuration with device configuration\n  junipernetworks.junos.junos_lldp_interfaces:\n    config:\n    - name: ge-0/0/2\n      disable: false\n    - name: ge-0/0/3\n      enabled: false\n    state: replaced\n\n# After state:\n# -------------\n# user@junos01# show protocols lldp\n# management-address 10.1.1.1;\n# advertisement-interval 10000;\n# interface ge-0/0/1;\n# interface ge-0/0/2;\n# interface ge-0/0/3 {\n#     disable;\n# }\n\n# Using overridden\n# Before state:\n# -------------\n# user@junos01# show protocols lldp\n# management-address 10.1.1.1;\n# advertisement-interval 10000;\n# interface ge-0/0/1;\n# interface ge-0/0/2 {\n#     disable;\n# }\n\n- name: Override provided configuration with device configuration\n  junipernetworks.junos.junos_lldp_interfaces:\n    config:\n    - name: ge-0/0/2\n      enabled: false\n    state: overridden\n\n# After state:\n# -------------\n# user@junos01# show protocols lldp\n# management-address 10.1.1.1;\n# advertisement-interval 10000;\n# interface ge-0/0/2 {\n#     disable;\n# }\n\n# Using deleted\n# Before state:\n# -------------\n# user@junos01# show protocols lldp\n# management-address 10.1.1.1;\n# advertisement-interval 10000;\n# interface ge-0/0/1;\n# interface ge-0/0/2;\n# interface ge-0/0/3 {\n#     disable;\n# }\n- name: Delete lldp interface configuration (this will not delete other lldp configuration)\n  junipernetworks.junos.junos_lldp_interfaces:\n    config:\n    - name: ge-0/0/1\n    - name: ge-0/0/3\n    state: deleted\n\n# After state:\n# -------------\n# user@junos01# show protocols lldp\n# management-address 10.1.1.1;\n# advertisement-interval 10000;\n# interface ge-0/0/2;\n# interface ge-0/0/1;\n# Using gathered\n# Before state:\n# ------------\n#\n#ansible@cm123456tr21# show protocols lldp\n# interface ge-0/0/1;\n# interface ge-0/0/2 {\n#     disable;\n# }\n- name: Gather junos lldp interfaces as in given arguments\n  junipernetworks.junos.junos_lldp_interfaces:\n    state: gathered\n# Task Output (redacted)\n# -----------------------\n#\n# \"gathered\": [\n#         {\n#             \"name\": \"ge-0/0/1\"\n#         },\n#         {\n#             \"enabled\": false,\n#             \"name\": \"ge-0/0/2\"\n#         }\n#     ]\n# After state:\n# ------------\n#\n#ansible@cm123456tr21# show protocols lldp\n# interface ge-0/0/1;\n# interface ge-0/0/2 {\n#     disable;\n# }\n# Using rendered\n- name: Render platform specific xml from task input using rendered state\n  junipernetworks.junos.junos_lldp_interfaces:\n    config:\n      - name: ge-0/0/1\n      - name: ge-0/0/2\n        enabled: false\n    state: rendered\n# Task Output (redacted)\n# -----------------------\n# \"rendered\": \"<nc:protocols\n#     xmlns:nc=\"urn:ietf:params:xml:ns:netconf:base:1.0\">\n#     <nc:lldp>\n#         <nc:interface>\n#             <nc:name>ge-0/0/1</nc:name>\n#             <nc:disable delete=\"delete\"/>\n#         </nc:interface>\n#         <nc:interface>\n#             <nc:name>ge-0/0/2</nc:name>\n#             <nc:disable/>\n#         </nc:interface>\n#     </nc:lldp>\n# </nc:protocols>\"\n# Using parsed\n# parsed.cfg\n# ------------\n#\n# <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n# <rpc-reply message-id=\"urn:uuid:0cadb4e8-5bba-47f4-986e-72906227007f\">\n#     <configuration changed-seconds=\"1590139550\" changed-localtime=\"2020-05-22 09:25:50 UTC\">\n#         <protocols>\n#             <ospf>\n#                 <area>\n#                     <name>0.0.0.0</name>\n#                     <interface>\n#                         <name>ge-0/0/0.0</name>\n#                     </interface>\n#                 </area>\n#             </ospf>\n#             <lldp>\n#                 <interface>\n#                     <name>ge-0/0/1</name>\n#                 </interface>\n#                 <interface>\n#                     <name>ge-0/0/2</name>\n#                     <disable/>\n#                 </interface>\n#             </lldp>\n#         </protocols>\n#     </configuration>\n# </rpc-reply>\n# - name: Convert lldp interfaces config to argspec without connecting to the appliance\n#   junipernetworks.junos.junos_lldp_interfaces:\n#     running_config: \"{{ lookup('file', './parsed.cfg') }}\"\n#     state: parsed\n# Task Output (redacted)\n# -----------------------\n# \"parsed\": [\n#         {\n#             \"name\": \"ge-0/0/1\"\n#         },\n#         {\n#             \"enabled\": false,\n#             \"name\": \"ge-0/0/2\"\n#         }\n#     ]\n"
  },
  "junipernetworks.junos.junos_logging": {
    "doc": {
      "description": "This module provides declarative management of logging on Juniper JUNOS devices.",
      "has_action": true,
      "notes": "This module requires the netconf system service be enabled on the remote device being managed.\nTested against vSRX JUNOS version 15.1X49-D15.4, vqfx-10000 JUNOS Version 15.1X53-D60.4.\nRecommended connection is C(netconf). See L(the Junos OS Platform Options,../network/user_guide/platform_junos.html).\nThis module also works with C(local) connections for legacy playbooks.\nFor information on using CLI and netconf see the :ref:`Junos OS Platform Options guide <junos_platform_options>`\nFor more information on using Ansible to manage network devices see the :ref:`Ansible Network Guide <network_guide>`\nFor more information on using Ansible to manage Juniper network devices see U(https://www.ansible.com/ansible-juniper).",
      "options": {
        "active": {
          "aliases": [],
          "description": "Specifies whether or not the configuration is active or deactivated",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "aggregate": {
          "aliases": [],
          "description": "List of logging definitions.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "active": {
              "aliases": [],
              "description": "Specifies whether or not the configuration is active or deactivated",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "dest": {
              "aliases": [],
              "description": "Destination of the logs.",
              "type": "str",
              "required": false,
              "choices": [
                "console",
                "host",
                "file",
                "user"
              ],
              "suboptions": {}
            },
            "facility": {
              "aliases": [],
              "description": "Set logging facility.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "files": {
              "aliases": [],
              "description": "Number of files to be archived, this is applicable if value of I(dest) is C(file). The acceptable value is in range from 1 to 1000.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "level": {
              "aliases": [],
              "description": "Set logging severity levels.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "name": {
              "aliases": [],
              "description": "If value of C(dest) is I(file) it indicates file-name, for I(user) it indicates username and for I(host) indicates the host name to be notified.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "rotate_frequency": {
              "aliases": [],
              "description": "Rotate log frequency in minutes, this is applicable if value of I(dest) is C(file). The acceptable value is in range of 1 to 59. This controls the frequency after which log file is rotated.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "size": {
              "aliases": [],
              "description": "Size of the file in archive, this is applicable if value of I(dest) is C(file). The acceptable value is in range from 65536 to 1073741824 bytes.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "state": {
              "aliases": [],
              "description": "State of the logging configuration.",
              "type": "str",
              "required": false,
              "choices": [
                "present",
                "absent"
              ],
              "suboptions": {}
            }
          }
        },
        "dest": {
          "aliases": [],
          "description": "Destination of the logs.",
          "type": "str",
          "required": false,
          "choices": [
            "console",
            "host",
            "file",
            "user"
          ],
          "suboptions": {}
        },
        "facility": {
          "aliases": [],
          "description": "Set logging facility.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "files": {
          "aliases": [],
          "description": "Number of files to be archived, this is applicable if value of I(dest) is C(file). The acceptable value is in range from 1 to 1000.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "level": {
          "aliases": [],
          "description": "Set logging severity levels.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "If value of C(dest) is I(file) it indicates file-name, for I(user) it indicates username and for I(host) indicates the host name to be notified.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "B(Deprecated)\nStarting with Ansible 2.5 we recommend using C(connection: network_cli) or C(connection: netconf).\nFor more information please see the L(Junos OS Platform Options guide, ../network/user_guide/platform_junos.html).\nHORIZONTALLINE\nA dict object containing connection details.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "host": {
              "aliases": [],
              "description": "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [],
              "description": "Specifies the password to use to authenticate the connection to the remote device.   This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "port": {
              "aliases": [],
              "description": "Specifies the port to use when building the connection to the remote device.  The port value will default to the well known SSH port of 22 (for C(transport=cli)) or port 830 (for C(transport=netconf)) device.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "ssh_keyfile": {
              "aliases": [],
              "description": "Specifies the SSH key to use to authenticate the connection to the remote device.   This value is the path to the key used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead.",
              "type": "path",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "netconf",
              "type": "str",
              "required": false,
              "choices": [
                "cli",
                "netconf"
              ],
              "suboptions": {}
            },
            "username": {
              "aliases": [],
              "description": "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "rotate_frequency": {
          "aliases": [],
          "description": "Rotate log frequency in minutes, this is applicable if value of I(dest) is C(file). The acceptable value is in range of 1 to 59. This controls the frequency after which log file is rotated.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "size": {
          "aliases": [],
          "description": "Size of the file in archive, this is applicable if value of I(dest) is C(file). The acceptable value is in range from 65536 to 1073741824 bytes.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "State of the logging configuration.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "ncclient (>=v0.5.2)"
      ],
      "short_description": "Manage logging on network devices",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: configure console logging\n  junipernetworks.junos.junos_logging:\n    dest: console\n    facility: any\n    level: critical\n\n- name: remove console logging configuration\n  junipernetworks.junos.junos_logging:\n    dest: console\n    state: absent\n\n- name: configure file logging\n  junipernetworks.junos.junos_logging:\n    dest: file\n    name: test\n    facility: pfe\n    level: error\n\n- name: configure logging parameter\n  junipernetworks.junos.junos_logging:\n    files: 30\n    size: 65536\n    rotate_frequency: 10\n\n- name: Configure file logging using aggregate\n  junipernetworks.junos.junos_logging:\n    dest: file\n    aggregate:\n    - name: test-1\n      facility: pfe\n      level: critical\n    - name: test-2\n      facility: kernel\n      level: emergency\n    active: true\n\n- name: Delete file logging using aggregate\n  junipernetworks.junos.junos_logging:\n    aggregate:\n    - {dest: file, name: test-1, facility: pfe, level: critical}\n    - {dest: file, name: test-2, facility: kernel, level: emergency}\n    state: absent\n"
  },
  "junipernetworks.junos.junos_logging_global": {
    "doc": {
      "description": "This module manages logging configuration on devices running Junos.",
      "has_action": true,
      "notes": "This module requires the netconf system service be enabled on the device being managed.\nThis module works with connection C(netconf).\nSee L(the Junos OS Platform Options,https://docs.ansible.com/ansible/latest/network/user_guide/platform_junos.html).\nTested against JunOS v18.4R1",
      "options": {
        "config": {
          "aliases": [],
          "description": "A dictionary of logging configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "allow_duplicates": {
              "aliases": [],
              "description": "Do not suppress the repeated message for all targets.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "archive": {
              "aliases": [],
              "description": "Specify archive file information.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "binary_data": {
                  "aliases": [],
                  "description": "Mark file as if it contains binary data.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "file_size": {
                  "aliases": [],
                  "description": "Size of files to be archived (65536..1073741824 bytes).",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "files": {
                  "aliases": [],
                  "description": "Specify number of files to be archived (1..1000).",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "no_binary_data": {
                  "aliases": [],
                  "description": "Don't mark file as if it contains binary data.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "no_world_readable": {
                  "aliases": [],
                  "description": "Don't allow any user to read the log file.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "set": {
                  "aliases": [],
                  "description": "Set archive file information.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "world_readable": {
                  "aliases": [],
                  "description": "Allow any user to read the log file.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "console": {
              "aliases": [],
              "description": "Set console logging parameters.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "any": {
                  "aliases": [],
                  "description": "Set All facilities.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "level": {
                      "aliases": [],
                      "description": "Set severity logging level.",
                      "type": "str",
                      "required": true,
                      "choices": [
                        "alert",
                        "any",
                        "critical",
                        "emergency",
                        "error",
                        "info",
                        "none",
                        "notice",
                        "warning"
                      ],
                      "suboptions": {}
                    }
                  }
                },
                "authorization": {
                  "aliases": [],
                  "description": "Specify authorization system.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "level": {
                      "aliases": [],
                      "description": "Set severity logging level.",
                      "type": "str",
                      "required": true,
                      "choices": [
                        "alert",
                        "any",
                        "critical",
                        "emergency",
                        "error",
                        "info",
                        "none",
                        "notice",
                        "warning"
                      ],
                      "suboptions": {}
                    }
                  }
                },
                "change_log": {
                  "aliases": [],
                  "description": "Specify configuration change log.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "level": {
                      "aliases": [],
                      "description": "Set severity logging level.",
                      "type": "str",
                      "required": true,
                      "choices": [
                        "alert",
                        "any",
                        "critical",
                        "emergency",
                        "error",
                        "info",
                        "none",
                        "notice",
                        "warning"
                      ],
                      "suboptions": {}
                    }
                  }
                },
                "conflict_log": {
                  "aliases": [],
                  "description": "Specify configuration conflict log.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "level": {
                      "aliases": [],
                      "description": "Set severity logging level.",
                      "type": "str",
                      "required": true,
                      "choices": [
                        "alert",
                        "any",
                        "critical",
                        "emergency",
                        "error",
                        "info",
                        "none",
                        "notice",
                        "warning"
                      ],
                      "suboptions": {}
                    }
                  }
                },
                "daemon": {
                  "aliases": [],
                  "description": "Specify various system processes.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "level": {
                      "aliases": [],
                      "description": "Set severity logging level.",
                      "type": "str",
                      "required": true,
                      "choices": [
                        "alert",
                        "any",
                        "critical",
                        "emergency",
                        "error",
                        "info",
                        "none",
                        "notice",
                        "warning"
                      ],
                      "suboptions": {}
                    }
                  }
                },
                "dfc": {
                  "aliases": [],
                  "description": "Specify dynamic flow capture.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "level": {
                      "aliases": [],
                      "description": "Set severity logging level.",
                      "type": "str",
                      "required": true,
                      "choices": [
                        "alert",
                        "any",
                        "critical",
                        "emergency",
                        "error",
                        "info",
                        "none",
                        "notice",
                        "warning"
                      ],
                      "suboptions": {}
                    }
                  }
                },
                "external": {
                  "aliases": [],
                  "description": "Specify Local external applications.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "level": {
                      "aliases": [],
                      "description": "Set severity logging level.",
                      "type": "str",
                      "required": true,
                      "choices": [
                        "alert",
                        "any",
                        "critical",
                        "emergency",
                        "error",
                        "info",
                        "none",
                        "notice",
                        "warning"
                      ],
                      "suboptions": {}
                    }
                  }
                },
                "firewall": {
                  "aliases": [],
                  "description": "Specify Firewall filtering system.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "level": {
                      "aliases": [],
                      "description": "Set severity logging level.",
                      "type": "str",
                      "required": true,
                      "choices": [
                        "alert",
                        "any",
                        "critical",
                        "emergency",
                        "error",
                        "info",
                        "none",
                        "notice",
                        "warning"
                      ],
                      "suboptions": {}
                    }
                  }
                },
                "ftp": {
                  "aliases": [],
                  "description": "Specify FTP process.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "level": {
                      "aliases": [],
                      "description": "Set severity logging level.",
                      "type": "str",
                      "required": true,
                      "choices": [
                        "alert",
                        "any",
                        "critical",
                        "emergency",
                        "error",
                        "info",
                        "none",
                        "notice",
                        "warning"
                      ],
                      "suboptions": {}
                    }
                  }
                },
                "interactive_commands": {
                  "aliases": [],
                  "description": "Specify commands executed by the UI.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "level": {
                      "aliases": [],
                      "description": "Set severity logging level.",
                      "type": "str",
                      "required": true,
                      "choices": [
                        "alert",
                        "any",
                        "critical",
                        "emergency",
                        "error",
                        "info",
                        "none",
                        "notice",
                        "warning"
                      ],
                      "suboptions": {}
                    }
                  }
                },
                "kernel": {
                  "aliases": [],
                  "description": "Specify Kernel specific logging.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "level": {
                      "aliases": [],
                      "description": "Set severity logging level.",
                      "type": "str",
                      "required": true,
                      "choices": [
                        "alert",
                        "any",
                        "critical",
                        "emergency",
                        "error",
                        "info",
                        "none",
                        "notice",
                        "warning"
                      ],
                      "suboptions": {}
                    }
                  }
                },
                "ntp": {
                  "aliases": [],
                  "description": "Specify NTP process specific logging.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "level": {
                      "aliases": [],
                      "description": "Set severity logging level.",
                      "type": "str",
                      "required": true,
                      "choices": [
                        "alert",
                        "any",
                        "critical",
                        "emergency",
                        "error",
                        "info",
                        "none",
                        "notice",
                        "warning"
                      ],
                      "suboptions": {}
                    }
                  }
                },
                "pfe": {
                  "aliases": [],
                  "description": "Specify Packet Forwarding Engine specific logging.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "level": {
                      "aliases": [],
                      "description": "Set severity logging level.",
                      "type": "str",
                      "required": true,
                      "choices": [
                        "alert",
                        "any",
                        "critical",
                        "emergency",
                        "error",
                        "info",
                        "none",
                        "notice",
                        "warning"
                      ],
                      "suboptions": {}
                    }
                  }
                },
                "security": {
                  "aliases": [],
                  "description": "Specify Security related logging.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "level": {
                      "aliases": [],
                      "description": "Set severity logging level.",
                      "type": "str",
                      "required": true,
                      "choices": [
                        "alert",
                        "any",
                        "critical",
                        "emergency",
                        "error",
                        "info",
                        "none",
                        "notice",
                        "warning"
                      ],
                      "suboptions": {}
                    }
                  }
                },
                "user": {
                  "aliases": [],
                  "description": "Specify user specific logging.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "level": {
                      "aliases": [],
                      "description": "Set severity logging level.",
                      "type": "str",
                      "required": true,
                      "choices": [
                        "alert",
                        "any",
                        "critical",
                        "emergency",
                        "error",
                        "info",
                        "none",
                        "notice",
                        "warning"
                      ],
                      "suboptions": {}
                    }
                  }
                }
              }
            },
            "files": {
              "aliases": [],
              "description": "Specify files logging.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "allow_duplicates": {
                  "aliases": [],
                  "description": "Do not suppress the repeated message for all targets.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "any": {
                  "aliases": [],
                  "description": "Set All facilities.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "level": {
                      "aliases": [],
                      "description": "Set severity logging level.",
                      "type": "str",
                      "required": true,
                      "choices": [
                        "alert",
                        "any",
                        "critical",
                        "emergency",
                        "error",
                        "info",
                        "none",
                        "notice",
                        "warning"
                      ],
                      "suboptions": {}
                    }
                  }
                },
                "archive": {
                  "aliases": [],
                  "description": "Specify archive file information.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "archive_sites": {
                      "aliases": [],
                      "description": "Specify Primary and failover URLs to receive archive facilities.",
                      "type": "list",
                      "required": false,
                      "elements": "str",
                      "suboptions": {}
                    },
                    "binary_data": {
                      "aliases": [],
                      "description": "Mark file as if it contains binary data.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "file_size": {
                      "aliases": [],
                      "description": "Size of files to be archived (65536..1073741824 bytes).",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "files": {
                      "aliases": [],
                      "description": "Specify number of files to be archived (1..1000).",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "no_binary_data": {
                      "aliases": [],
                      "description": "Don't mark file as if it contains binary data.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "no_world_readable": {
                      "aliases": [],
                      "description": "Don't allow any user to read the log file.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "set": {
                      "aliases": [],
                      "description": "Set archive file information.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "start_time": {
                      "aliases": [],
                      "description": "Specify start time for file transmission (yyyy-mm-dd.hh:mm).",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "transfer_interval": {
                      "aliases": [],
                      "description": "Specify frequency at which to transfer files to archive sites (5..2880 minutes).",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "world_readable": {
                      "aliases": [],
                      "description": "Allow any user to read the log file.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "authorization": {
                  "aliases": [],
                  "description": "Specify authorization system.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "level": {
                      "aliases": [],
                      "description": "Set severity logging level.",
                      "type": "str",
                      "required": true,
                      "choices": [
                        "alert",
                        "any",
                        "critical",
                        "emergency",
                        "error",
                        "info",
                        "none",
                        "notice",
                        "warning"
                      ],
                      "suboptions": {}
                    }
                  }
                },
                "change_log": {
                  "aliases": [],
                  "description": "Specify configuration change log.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "level": {
                      "aliases": [],
                      "description": "Set severity logging level.",
                      "type": "str",
                      "required": true,
                      "choices": [
                        "alert",
                        "any",
                        "critical",
                        "emergency",
                        "error",
                        "info",
                        "none",
                        "notice",
                        "warning"
                      ],
                      "suboptions": {}
                    }
                  }
                },
                "conflict_log": {
                  "aliases": [],
                  "description": "Specify configuration conflict log.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "level": {
                      "aliases": [],
                      "description": "Set severity logging level.",
                      "type": "str",
                      "required": true,
                      "choices": [
                        "alert",
                        "any",
                        "critical",
                        "emergency",
                        "error",
                        "info",
                        "none",
                        "notice",
                        "warning"
                      ],
                      "suboptions": {}
                    }
                  }
                },
                "daemon": {
                  "aliases": [],
                  "description": "Specify various system processes.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "level": {
                      "aliases": [],
                      "description": "Set severity logging level.",
                      "type": "str",
                      "required": true,
                      "choices": [
                        "alert",
                        "any",
                        "critical",
                        "emergency",
                        "error",
                        "info",
                        "none",
                        "notice",
                        "warning"
                      ],
                      "suboptions": {}
                    }
                  }
                },
                "dfc": {
                  "aliases": [],
                  "description": "Specify dynamic flow capture.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "level": {
                      "aliases": [],
                      "description": "Set severity logging level.",
                      "type": "str",
                      "required": true,
                      "choices": [
                        "alert",
                        "any",
                        "critical",
                        "emergency",
                        "error",
                        "info",
                        "none",
                        "notice",
                        "warning"
                      ],
                      "suboptions": {}
                    }
                  }
                },
                "explicit_priority": {
                  "aliases": [],
                  "description": "Include priority and facility in messages.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "external": {
                  "aliases": [],
                  "description": "Specify Local external applications.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "level": {
                      "aliases": [],
                      "description": "Set severity logging level.",
                      "type": "str",
                      "required": true,
                      "choices": [
                        "alert",
                        "any",
                        "critical",
                        "emergency",
                        "error",
                        "info",
                        "none",
                        "notice",
                        "warning"
                      ],
                      "suboptions": {}
                    }
                  }
                },
                "firewall": {
                  "aliases": [],
                  "description": "Specify Firewall filtering system.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "level": {
                      "aliases": [],
                      "description": "Set severity logging level.",
                      "type": "str",
                      "required": true,
                      "choices": [
                        "alert",
                        "any",
                        "critical",
                        "emergency",
                        "error",
                        "info",
                        "none",
                        "notice",
                        "warning"
                      ],
                      "suboptions": {}
                    }
                  }
                },
                "ftp": {
                  "aliases": [],
                  "description": "Specify FTP process.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "level": {
                      "aliases": [],
                      "description": "Set severity logging level.",
                      "type": "str",
                      "required": true,
                      "choices": [
                        "alert",
                        "any",
                        "critical",
                        "emergency",
                        "error",
                        "info",
                        "none",
                        "notice",
                        "warning"
                      ],
                      "suboptions": {}
                    }
                  }
                },
                "interactive_commands": {
                  "aliases": [],
                  "description": "Specify commands executed by the UI.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "level": {
                      "aliases": [],
                      "description": "Set severity logging level.",
                      "type": "str",
                      "required": true,
                      "choices": [
                        "alert",
                        "any",
                        "critical",
                        "emergency",
                        "error",
                        "info",
                        "none",
                        "notice",
                        "warning"
                      ],
                      "suboptions": {}
                    }
                  }
                },
                "kernel": {
                  "aliases": [],
                  "description": "Specify Kernel specific logging.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "level": {
                      "aliases": [],
                      "description": "Set severity logging level.",
                      "type": "str",
                      "required": true,
                      "choices": [
                        "alert",
                        "any",
                        "critical",
                        "emergency",
                        "error",
                        "info",
                        "none",
                        "notice",
                        "warning"
                      ],
                      "suboptions": {}
                    }
                  }
                },
                "match": {
                  "aliases": [],
                  "description": "Specify regular expression for lines to be logged.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "match_strings": {
                  "aliases": [],
                  "description": "Specify matching string(s) for lines to be logged.",
                  "type": "list",
                  "required": false,
                  "elements": "str",
                  "suboptions": {}
                },
                "name": {
                  "aliases": [],
                  "description": "Specify filename in which to log data.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "ntp": {
                  "aliases": [],
                  "description": "Specify NTP process specific logging.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "level": {
                      "aliases": [],
                      "description": "Set severity logging level.",
                      "type": "str",
                      "required": true,
                      "choices": [
                        "alert",
                        "any",
                        "critical",
                        "emergency",
                        "error",
                        "info",
                        "none",
                        "notice",
                        "warning"
                      ],
                      "suboptions": {}
                    }
                  }
                },
                "pfe": {
                  "aliases": [],
                  "description": "Specify Packet Forwarding Engine specific logging.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "level": {
                      "aliases": [],
                      "description": "Set severity logging level.",
                      "type": "str",
                      "required": true,
                      "choices": [
                        "alert",
                        "any",
                        "critical",
                        "emergency",
                        "error",
                        "info",
                        "none",
                        "notice",
                        "warning"
                      ],
                      "suboptions": {}
                    }
                  }
                },
                "security": {
                  "aliases": [],
                  "description": "Specify Security related logging.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "level": {
                      "aliases": [],
                      "description": "Set severity logging level.",
                      "type": "str",
                      "required": true,
                      "choices": [
                        "alert",
                        "any",
                        "critical",
                        "emergency",
                        "error",
                        "info",
                        "none",
                        "notice",
                        "warning"
                      ],
                      "suboptions": {}
                    }
                  }
                },
                "structured_data": {
                  "aliases": [],
                  "description": "Specify Log system message in structured format.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "brief": {
                      "aliases": [],
                      "description": "Omit English-language text from end of logged messages.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "set": {
                      "aliases": [],
                      "description": "Set Log system message in structured format.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "user": {
                  "aliases": [],
                  "description": "Specify user specific logging.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "level": {
                      "aliases": [],
                      "description": "Set severity logging level.",
                      "type": "str",
                      "required": true,
                      "choices": [
                        "alert",
                        "any",
                        "critical",
                        "emergency",
                        "error",
                        "info",
                        "none",
                        "notice",
                        "warning"
                      ],
                      "suboptions": {}
                    }
                  }
                }
              }
            },
            "hosts": {
              "aliases": [],
              "description": "Specify hosts  to be notified.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "allow_duplicates": {
                  "aliases": [],
                  "description": "Do not suppress the repeated message for all targets.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "any": {
                  "aliases": [],
                  "description": "Set All facilities.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "level": {
                      "aliases": [],
                      "description": "Set severity logging level.",
                      "type": "str",
                      "required": true,
                      "choices": [
                        "alert",
                        "any",
                        "critical",
                        "emergency",
                        "error",
                        "info",
                        "none",
                        "notice",
                        "warning"
                      ],
                      "suboptions": {}
                    }
                  }
                },
                "authorization": {
                  "aliases": [],
                  "description": "Specify authorization system.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "level": {
                      "aliases": [],
                      "description": "Set severity logging level.",
                      "type": "str",
                      "required": true,
                      "choices": [
                        "alert",
                        "any",
                        "critical",
                        "emergency",
                        "error",
                        "info",
                        "none",
                        "notice",
                        "warning"
                      ],
                      "suboptions": {}
                    }
                  }
                },
                "change_log": {
                  "aliases": [],
                  "description": "Specify configuration change log.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "level": {
                      "aliases": [],
                      "description": "Set severity logging level.",
                      "type": "str",
                      "required": true,
                      "choices": [
                        "alert",
                        "any",
                        "critical",
                        "emergency",
                        "error",
                        "info",
                        "none",
                        "notice",
                        "warning"
                      ],
                      "suboptions": {}
                    }
                  }
                },
                "conflict_log": {
                  "aliases": [],
                  "description": "Specify configuration conflict log.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "level": {
                      "aliases": [],
                      "description": "Set severity logging level.",
                      "type": "str",
                      "required": true,
                      "choices": [
                        "alert",
                        "any",
                        "critical",
                        "emergency",
                        "error",
                        "info",
                        "none",
                        "notice",
                        "warning"
                      ],
                      "suboptions": {}
                    }
                  }
                },
                "daemon": {
                  "aliases": [],
                  "description": "Specify various system processes.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "level": {
                      "aliases": [],
                      "description": "Set severity logging level.",
                      "type": "str",
                      "required": true,
                      "choices": [
                        "alert",
                        "any",
                        "critical",
                        "emergency",
                        "error",
                        "info",
                        "none",
                        "notice",
                        "warning"
                      ],
                      "suboptions": {}
                    }
                  }
                },
                "dfc": {
                  "aliases": [],
                  "description": "Specify dynamic flow capture.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "level": {
                      "aliases": [],
                      "description": "Set severity logging level.",
                      "type": "str",
                      "required": true,
                      "choices": [
                        "alert",
                        "any",
                        "critical",
                        "emergency",
                        "error",
                        "info",
                        "none",
                        "notice",
                        "warning"
                      ],
                      "suboptions": {}
                    }
                  }
                },
                "exclude_hostname": {
                  "aliases": [],
                  "description": "Specify exclude hostname field in messages.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "explicit_priority": {
                  "aliases": [],
                  "description": "Include priority and facility in messages.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "external": {
                  "aliases": [],
                  "description": "Specify Local external applications.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "level": {
                      "aliases": [],
                      "description": "Set severity logging level.",
                      "type": "str",
                      "required": true,
                      "choices": [
                        "alert",
                        "any",
                        "critical",
                        "emergency",
                        "error",
                        "info",
                        "none",
                        "notice",
                        "warning"
                      ],
                      "suboptions": {}
                    }
                  }
                },
                "facility_override": {
                  "aliases": [],
                  "description": "Specify alternate facility for logging to remote host.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "firewall": {
                  "aliases": [],
                  "description": "Specify Firewall filtering system.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "level": {
                      "aliases": [],
                      "description": "Set severity logging level.",
                      "type": "str",
                      "required": true,
                      "choices": [
                        "alert",
                        "any",
                        "critical",
                        "emergency",
                        "error",
                        "info",
                        "none",
                        "notice",
                        "warning"
                      ],
                      "suboptions": {}
                    }
                  }
                },
                "ftp": {
                  "aliases": [],
                  "description": "Specify FTP process.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "level": {
                      "aliases": [],
                      "description": "Set severity logging level.",
                      "type": "str",
                      "required": true,
                      "choices": [
                        "alert",
                        "any",
                        "critical",
                        "emergency",
                        "error",
                        "info",
                        "none",
                        "notice",
                        "warning"
                      ],
                      "suboptions": {}
                    }
                  }
                },
                "interactive_commands": {
                  "aliases": [],
                  "description": "Specify commands executed by the UI.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "level": {
                      "aliases": [],
                      "description": "Set severity logging level.",
                      "type": "str",
                      "required": true,
                      "choices": [
                        "alert",
                        "any",
                        "critical",
                        "emergency",
                        "error",
                        "info",
                        "none",
                        "notice",
                        "warning"
                      ],
                      "suboptions": {}
                    }
                  }
                },
                "kernel": {
                  "aliases": [],
                  "description": "Specify Kernel specific logging.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "level": {
                      "aliases": [],
                      "description": "Set severity logging level.",
                      "type": "str",
                      "required": true,
                      "choices": [
                        "alert",
                        "any",
                        "critical",
                        "emergency",
                        "error",
                        "info",
                        "none",
                        "notice",
                        "warning"
                      ],
                      "suboptions": {}
                    }
                  }
                },
                "log_prefix": {
                  "aliases": [],
                  "description": "Prefix for all logging to this host.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "match": {
                  "aliases": [],
                  "description": "Specify regular expression for lines to be logged.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "match_strings": {
                  "aliases": [],
                  "description": "Specify matching string(s) for lines to be logged.",
                  "type": "list",
                  "required": false,
                  "elements": "str",
                  "suboptions": {}
                },
                "name": {
                  "aliases": [],
                  "description": "Specify the host name.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "ntp": {
                  "aliases": [],
                  "description": "Specify NTP process specific logging.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "level": {
                      "aliases": [],
                      "description": "Set severity logging level.",
                      "type": "str",
                      "required": true,
                      "choices": [
                        "alert",
                        "any",
                        "critical",
                        "emergency",
                        "error",
                        "info",
                        "none",
                        "notice",
                        "warning"
                      ],
                      "suboptions": {}
                    }
                  }
                },
                "pfe": {
                  "aliases": [],
                  "description": "Specify Packet Forwarding Engine specific logging.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "level": {
                      "aliases": [],
                      "description": "Set severity logging level.",
                      "type": "str",
                      "required": true,
                      "choices": [
                        "alert",
                        "any",
                        "critical",
                        "emergency",
                        "error",
                        "info",
                        "none",
                        "notice",
                        "warning"
                      ],
                      "suboptions": {}
                    }
                  }
                },
                "port": {
                  "aliases": [],
                  "description": "Specify port number.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "routing_instance": {
                  "aliases": [],
                  "description": "Specify routing-instance.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "security": {
                  "aliases": [],
                  "description": "Specify Security related logging.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "level": {
                      "aliases": [],
                      "description": "Set severity logging level.",
                      "type": "str",
                      "required": true,
                      "choices": [
                        "alert",
                        "any",
                        "critical",
                        "emergency",
                        "error",
                        "info",
                        "none",
                        "notice",
                        "warning"
                      ],
                      "suboptions": {}
                    }
                  }
                },
                "source_address": {
                  "aliases": [],
                  "description": "Specify address as source address.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "structured_data": {
                  "aliases": [],
                  "description": "Specify Log system message in structured format.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "brief": {
                      "aliases": [],
                      "description": "Omit English-language text from end of logged messages.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "set": {
                      "aliases": [],
                      "description": "Set Log system message in structured format.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "user": {
                  "aliases": [],
                  "description": "Specify user specific logging.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "level": {
                      "aliases": [],
                      "description": "Set severity logging level.",
                      "type": "str",
                      "required": true,
                      "choices": [
                        "alert",
                        "any",
                        "critical",
                        "emergency",
                        "error",
                        "info",
                        "none",
                        "notice",
                        "warning"
                      ],
                      "suboptions": {}
                    }
                  }
                }
              }
            },
            "log_rotate_frequency": {
              "aliases": [],
              "description": "Specify Rotate log frequency (1..59 minutes).",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "routing_instance": {
              "aliases": [],
              "description": "Specify Routing routing-instance.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "Specify syslog server logging.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "routing_instance": {
                  "aliases": [],
                  "description": "nable/disable syslog server in routing-instances.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "all": {
                      "aliases": [],
                      "description": "Enable/disable all routing instances.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "default": {
                      "aliases": [],
                      "description": "Enable/disable default routing instances.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "routing_instances": {
                      "aliases": [],
                      "description": "Specify routing-instances.",
                      "type": "list",
                      "required": false,
                      "elements": "dict",
                      "suboptions": {
                        "disable": {
                          "aliases": [],
                          "description": "Disable syslog server in this routing instances.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "name": {
                          "aliases": [],
                          "description": "Specify routing-instance name.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    }
                  }
                },
                "set": {
                  "aliases": [],
                  "description": "Enable syslog server.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "source_address": {
              "aliases": [],
              "description": "Specify address as source address.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "time_format": {
              "aliases": [],
              "description": "Specify additional information to include in system log timestamp.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "millisecond": {
                  "aliases": [],
                  "description": "Include milliseconds in timestamp.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "set": {
                  "aliases": [],
                  "description": "Set time-format",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "year": {
                  "aliases": [],
                  "description": "Include year in timestamp.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "users": {
              "aliases": [],
              "description": "Specify user logging",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "allow_duplicates": {
                  "aliases": [],
                  "description": "Do not suppress the repeated message for all targets.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "any": {
                  "aliases": [],
                  "description": "Set All facilities.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "level": {
                      "aliases": [],
                      "description": "Set severity logging level.",
                      "type": "str",
                      "required": true,
                      "choices": [
                        "alert",
                        "any",
                        "critical",
                        "emergency",
                        "error",
                        "info",
                        "none",
                        "notice",
                        "warning"
                      ],
                      "suboptions": {}
                    }
                  }
                },
                "authorization": {
                  "aliases": [],
                  "description": "Specify authorization system.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "level": {
                      "aliases": [],
                      "description": "Set severity logging level.",
                      "type": "str",
                      "required": true,
                      "choices": [
                        "alert",
                        "any",
                        "critical",
                        "emergency",
                        "error",
                        "info",
                        "none",
                        "notice",
                        "warning"
                      ],
                      "suboptions": {}
                    }
                  }
                },
                "change_log": {
                  "aliases": [],
                  "description": "Specify configuration change log.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "level": {
                      "aliases": [],
                      "description": "Set severity logging level.",
                      "type": "str",
                      "required": true,
                      "choices": [
                        "alert",
                        "any",
                        "critical",
                        "emergency",
                        "error",
                        "info",
                        "none",
                        "notice",
                        "warning"
                      ],
                      "suboptions": {}
                    }
                  }
                },
                "conflict_log": {
                  "aliases": [],
                  "description": "Specify configuration conflict log.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "level": {
                      "aliases": [],
                      "description": "Set severity logging level.",
                      "type": "str",
                      "required": true,
                      "choices": [
                        "alert",
                        "any",
                        "critical",
                        "emergency",
                        "error",
                        "info",
                        "none",
                        "notice",
                        "warning"
                      ],
                      "suboptions": {}
                    }
                  }
                },
                "daemon": {
                  "aliases": [],
                  "description": "Specify various system processes.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "level": {
                      "aliases": [],
                      "description": "Set severity logging level.",
                      "type": "str",
                      "required": true,
                      "choices": [
                        "alert",
                        "any",
                        "critical",
                        "emergency",
                        "error",
                        "info",
                        "none",
                        "notice",
                        "warning"
                      ],
                      "suboptions": {}
                    }
                  }
                },
                "dfc": {
                  "aliases": [],
                  "description": "Specify dynamic flow capture.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "level": {
                      "aliases": [],
                      "description": "Set severity logging level.",
                      "type": "str",
                      "required": true,
                      "choices": [
                        "alert",
                        "any",
                        "critical",
                        "emergency",
                        "error",
                        "info",
                        "none",
                        "notice",
                        "warning"
                      ],
                      "suboptions": {}
                    }
                  }
                },
                "external": {
                  "aliases": [],
                  "description": "Specify Local external applications.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "level": {
                      "aliases": [],
                      "description": "Set severity logging level.",
                      "type": "str",
                      "required": true,
                      "choices": [
                        "alert",
                        "any",
                        "critical",
                        "emergency",
                        "error",
                        "info",
                        "none",
                        "notice",
                        "warning"
                      ],
                      "suboptions": {}
                    }
                  }
                },
                "firewall": {
                  "aliases": [],
                  "description": "Specify Firewall filtering system.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "level": {
                      "aliases": [],
                      "description": "Set severity logging level.",
                      "type": "str",
                      "required": true,
                      "choices": [
                        "alert",
                        "any",
                        "critical",
                        "emergency",
                        "error",
                        "info",
                        "none",
                        "notice",
                        "warning"
                      ],
                      "suboptions": {}
                    }
                  }
                },
                "ftp": {
                  "aliases": [],
                  "description": "Specify FTP process.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "level": {
                      "aliases": [],
                      "description": "Set severity logging level.",
                      "type": "str",
                      "required": true,
                      "choices": [
                        "alert",
                        "any",
                        "critical",
                        "emergency",
                        "error",
                        "info",
                        "none",
                        "notice",
                        "warning"
                      ],
                      "suboptions": {}
                    }
                  }
                },
                "interactive_commands": {
                  "aliases": [],
                  "description": "Specify commands executed by the UI.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "level": {
                      "aliases": [],
                      "description": "Set severity logging level.",
                      "type": "str",
                      "required": true,
                      "choices": [
                        "alert",
                        "any",
                        "critical",
                        "emergency",
                        "error",
                        "info",
                        "none",
                        "notice",
                        "warning"
                      ],
                      "suboptions": {}
                    }
                  }
                },
                "kernel": {
                  "aliases": [],
                  "description": "Specify Kernel specific logging.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "level": {
                      "aliases": [],
                      "description": "Set severity logging level.",
                      "type": "str",
                      "required": true,
                      "choices": [
                        "alert",
                        "any",
                        "critical",
                        "emergency",
                        "error",
                        "info",
                        "none",
                        "notice",
                        "warning"
                      ],
                      "suboptions": {}
                    }
                  }
                },
                "match": {
                  "aliases": [],
                  "description": "Specify regular expression for lines to be logged.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "match_strings": {
                  "aliases": [],
                  "description": "Specify matching string(s) for lines to be logged.",
                  "type": "list",
                  "required": false,
                  "elements": "str",
                  "suboptions": {}
                },
                "name": {
                  "aliases": [],
                  "description": "Specify user name.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "ntp": {
                  "aliases": [],
                  "description": "Specify NTP process specific logging.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "level": {
                      "aliases": [],
                      "description": "Set severity logging level.",
                      "type": "str",
                      "required": true,
                      "choices": [
                        "alert",
                        "any",
                        "critical",
                        "emergency",
                        "error",
                        "info",
                        "none",
                        "notice",
                        "warning"
                      ],
                      "suboptions": {}
                    }
                  }
                },
                "pfe": {
                  "aliases": [],
                  "description": "Specify Packet Forwarding Engine specific logging.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "level": {
                      "aliases": [],
                      "description": "Set severity logging level.",
                      "type": "str",
                      "required": true,
                      "choices": [
                        "alert",
                        "any",
                        "critical",
                        "emergency",
                        "error",
                        "info",
                        "none",
                        "notice",
                        "warning"
                      ],
                      "suboptions": {}
                    }
                  }
                },
                "security": {
                  "aliases": [],
                  "description": "Specify Security related logging.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "level": {
                      "aliases": [],
                      "description": "Set severity logging level.",
                      "type": "str",
                      "required": true,
                      "choices": [
                        "alert",
                        "any",
                        "critical",
                        "emergency",
                        "error",
                        "info",
                        "none",
                        "notice",
                        "warning"
                      ],
                      "suboptions": {}
                    }
                  }
                },
                "user": {
                  "aliases": [],
                  "description": "Specify user specific logging.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "level": {
                      "aliases": [],
                      "description": "Set severity logging level.",
                      "type": "str",
                      "required": true,
                      "choices": [
                        "alert",
                        "any",
                        "critical",
                        "emergency",
                        "error",
                        "info",
                        "none",
                        "notice",
                        "warning"
                      ],
                      "suboptions": {}
                    }
                  }
                }
              }
            }
          }
        },
        "running_config": {
          "aliases": [],
          "description": "This option is used only with state I(parsed).\nThe value of this option should be the output received from the Junos device by executing the command B(show system syslog).\nThe state I(parsed) reads the configuration from C(running_config) option and transforms it into Ansible structured data as per the resource module's argspec and the value is then returned in the I(parsed) key within the result.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The state the configuration should be left in.\nRefer to examples for more details.",
          "default": "merged",
          "type": "str",
          "required": false,
          "choices": [
            "merged",
            "replaced",
            "deleted",
            "overridden",
            "parsed",
            "gathered",
            "rendered"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "ncclient (>=v0.6.4)",
        "xmltodict (>=0.12.0)"
      ],
      "short_description": "Manage logging configuration on Junos devices.",
      "version_added": "2.4.0"
    },
    "examples": "\n# Using merged\n#\n# Before state\n# ------------\n#\n# vagrant@vsrx# show system syslog\n#\n# [edit]\n# vagrant@vsrx# show routing-instances\n# inst11 {\n#     description inst11;\n# }\n- name: Merge provided logging configuration into running configuration.\n  junipernetworks.junos.junos_logging_global:\n    config:\n      allow_duplicates: true\n      archive:\n        set: true\n        no_binary_data: true\n        files: 10\n        file_size: 65578\n        no_world_readable: true\n      console:\n        any:\n          level: \"info\"\n        authorization:\n          level: \"any\"\n        change_log:\n          level: \"critical\"\n        ftp:\n          level: \"none\"\n      files:\n        - name: \"file101\"\n          allow_duplicates: true\n        - name: \"file102\"\n          allow_duplicates: true\n          any:\n            level: \"any\"\n          structured_data:\n            set: true\n        - name: \"file103\"\n          archive:\n            set: true\n            no_binary_data: true\n            files: 10\n            file_size: 65578\n            no_world_readable: true\n          explicit_priority: true\n          match: \"^set*\"\n          match_strings:\n            - \"^delete\"\n            - \"^prompt\"\n      hosts:\n        - name: host111\n          exclude_hostname: true\n          allow_duplicates: true\n          any:\n            level: \"any\"\n          structured_data:\n            set: true\n            brief: true\n          facility_override: \"ftp\"\n          log_prefix: \"field\"\n          match: \"^set*\"\n          match_strings:\n            - \"^delete\"\n            - \"^prompt\"\n          port: 1231\n          routing_instance: \"inst11\"\n          source_address: \"11.1.1.11\"\n      routing_instance: \"inst11\"\n      log_rotate_frequency: 45\n      source_address: \"33.33.33.33\"\n      time_format:\n        millisecond: true\n        year: true\n      users:\n        - name: \"user1\"\n          allow_duplicates: true\n        - name: \"user2\"\n          allow_duplicates: true\n          any:\n            level: \"any\"\n          user:\n            level: info\n    state: merged\n#\n# -------------------------\n# Module Execution Result\n# -------------------------\n#     \"after\": {\n#         \"allow_duplicates\": true,\n#         \"archive\": {\n#             \"file_size\": 65578,\n#             \"files\": 10,\n#             \"no_binary_data\": true,\n#             \"no_world_readable\": true\n#         },\n#         \"console\": {\n#             \"any\": {\n#                 \"level\": \"info\"\n#             },\n#             \"authorization\": {\n#                 \"level\": \"any\"\n#             },\n#             \"change_log\": {\n#                 \"level\": \"critical\"\n#             },\n#             \"ftp\": {\n#                 \"level\": \"none\"\n#             }\n#         },\n#         \"files\": [\n#             {\n#                 \"allow_duplicates\": true,\n#                 \"name\": \"file101\"\n#             },\n#             {\n#                 \"allow_duplicates\": true,\n#                 \"any\": {\n#                     \"level\": \"any\"\n#                 },\n#                 \"name\": \"file102\",\n#                 \"structured_data\": {\n#                     \"set\": true\n#                 }\n#             },\n#             {\n#                 \"archive\": {\n#                     \"file_size\": 65578,\n#                     \"files\": 10,\n#                     \"no_binary_data\": true,\n#                     \"no_world_readable\": true\n#                 },\n#                 \"explicit_priority\": true,\n#                 \"match\": \"^set*\",\n#                 \"match_strings\": [\n#                     \"^delete\",\n#                     \"^prompt\"\n#                 ],\n#                 \"name\": \"file103\"\n#             }\n#         ],\n#         \"hosts\": [\n#             {\n#                 \"allow_duplicates\": true,\n#                 \"any\": {\n#                     \"level\": \"any\"\n#                 },\n#                 \"exclude_hostname\": true,\n#                 \"facility_override\": \"ftp\",\n#                 \"log_prefix\": \"field\",\n#                 \"match\": \"^set*\",\n#                 \"match_strings\": [\n#                     \"^delete\",\n#                     \"^prompt\"\n#                 ],\n#                 \"name\": \"host111\",\n#                 \"port\": 1231,\n#                 \"routing_instance\": \"inst11\",\n#                 \"source_address\": \"11.1.1.11\",\n#                 \"structured_data\": {\n#                     \"brief\": true\n#                 }\n#             }\n#         ],\n#         \"log_rotate_frequency\": 45,\n#         \"routing_instance\": \"inst11\",\n#         \"source_address\": \"33.33.33.33\",\n#         \"time_format\": {\n#             \"millisecond\": true,\n#             \"year\": true\n#         },\n#         \"users\": [\n#             {\n#                 \"allow_duplicates\": true,\n#                 \"name\": \"user1\"\n#             },\n#             {\n#                 \"allow_duplicates\": true,\n#                 \"any\": {\n#                     \"level\": \"any\"\n#                 },\n#                 \"name\": \"user2\",\n#                 \"user\": {\n#                     \"level\": \"info\"\n#                 }\n#             }\n#         ]\n#     },\n#     \"before\": {},\n#     \"changed\": true,\n#     \"commands\": [\n#         \"<nc:system xmlns:nc=\"urn:ietf:params:xml:ns:netconf:base:1.0\">\"\n#         \"<nc:syslog><nc:allow-duplicates/><nc:archive><nc:files>10</nc:files>\"\n#         \"<nc:no-binary-data/><nc:size>65578</nc:size><nc:no-world-readable/></nc:archive>\"\n#         \"<nc:console><nc:name>change-log</nc:name><nc:critical/></nc:console><nc:console>\"\n#         \"<nc:name>any</nc:name><nc:info/></nc:console><nc:console><nc:name>authorization</nc:name>\"\n#         \"<nc:any/></nc:console><nc:console><nc:name>ftp</nc:name><nc:none/></nc:console><nc:file>\"\n#         \"<nc:name>file101</nc:name><nc:allow-duplicates/></nc:file><nc:file><nc:name>file102</nc:name>\"\n#         \"<nc:allow-duplicates/><nc:contents><nc:name>any</nc:name><nc:any/></nc:contents><nc:structured-data/>\"\n#         \"</nc:file><nc:file><nc:name>file103</nc:name><nc:archive><nc:files>10</nc:files><nc:no-binary-data/>\"\n#         \"<nc:size>65578</nc:size><nc:no-world-readable/></nc:archive><nc:explicit-priority/>\"\n#         \"<nc:match>^set*</nc:match><nc:match-strings>^delete</nc:match-strings>\"\n#         \"<nc:match-strings>^prompt</nc:match-strings></nc:file><nc:host><nc:name>host111</nc:name>\"\n#         \"<nc:allow-duplicates/><nc:contents><nc:name>any</nc:name><nc:any/></nc:contents>\"\n#         \"<nc:exclude-hostname/><nc:facility-override>ftp</nc:facility-override>\"\n#         \"<nc:log-prefix>field</nc:log-prefix><nc:match>^set*</nc:match><nc:match-strings>^delete</nc:match-strings>\"\n#         \"<nc:match-strings>^prompt</nc:match-strings><nc:port>1231</nc:port>\"\n#         \"<nc:routing-instance>inst11</nc:routing-instance><nc:source-address>11.1.1.11</nc:source-address>\"\n#         \"<nc:structured-data><nc:brief/></nc:structured-data></nc:host>\"\n#         \"<nc:log-rotate-frequency>45</nc:log-rotate-frequency><nc:routing-instance>inst11</nc:routing-instance>\"\n#         \"<nc:source-address>33.33.33.33</nc:source-address><nc:time-format><nc:millisecond/>\"\n#         \"<nc:year/></nc:time-format><nc:user><nc:name>user1</nc:name><nc:allow-duplicates/></nc:user>\"\n#         \"<nc:user><nc:name>user2</nc:name><nc:allow-duplicates/><nc:contents><nc:name>any</nc:name><nc:any/>\"\n#         \"</nc:contents><nc:contents><nc:name>user</nc:name><nc:info/></nc:contents></nc:user></nc:syslog></nc:system>\"\n#     ]\n# After state\n# -----------\n#\n# vagrant@vsrx# show system syslog\n# archive size 65578 files 10 no-world-readable no-binary-data;\n# user user1 {\n#     allow-duplicates;\n# }\n# user user2 {\n#     any any;\n#     user info;\n#     allow-duplicates;\n# }\n# host host111 {\n#     any any;\n#     match \"^set*\";\n#     allow-duplicates;\n#     port 1231;\n#     facility-override ftp;\n#     log-prefix field;\n#     source-address 11.1.1.11;\n#     routing-instance inst11;\n#     exclude-hostname;\n#     match-strings [ \"^delete\" \"^prompt\" ];\n#     structured-data {\n#         brief;\n#     }\n# }\n# allow-duplicates;\n# file file101 {\n#     allow-duplicates;\n# }\n# file file102 {\n#     any any;\n#     allow-duplicates;\n#     structured-data;\n# }\n# file file103 {\n#     match \"^set*\";\n#     archive size 65578 files 10 no-world-readable no-binary-data;\n#     explicit-priority;\n#     match-strings [ \"^delete\" \"^prompt\" ];\n# }\n# console {\n#     any info;\n#     authorization any;\n#     ftp none;\n#     change-log critical;\n# }\n# time-format year millisecond;\n# source-address 33.33.33.33;\n# routing-instance inst11;\n# log-rotate-frequency 45;\n# Using replaced\n#\n# Before state\n# ------------\n#\n# vagrant@vsrx# show system syslog\n# archive size 65578 files 10 no-world-readable no-binary-data;\n# user user1 {\n#     allow-duplicates;\n# }\n# user user2 {\n#     any any;\n#     user info;\n#     allow-duplicates;\n# }\n# host host111 {\n#     any any;\n#     match \"^set*\";\n#     allow-duplicates;\n#     port 1231;\n#     facility-override ftp;\n#     log-prefix field;\n#     source-address 11.1.1.11;\n#     routing-instance inst11;\n#     exclude-hostname;\n#     match-strings [ \"^delete\" \"^prompt\" ];\n#     structured-data {\n#         brief;\n#     }\n# }\n# allow-duplicates;\n# file file101 {\n#     allow-duplicates;\n# }\n# file file102 {\n#     any any;\n#     allow-duplicates;\n#     structured-data;\n# }\n# file file103 {\n#     match \"^set*\";\n#     archive size 65578 files 10 no-world-readable no-binary-data;\n#     explicit-priority;\n#     match-strings [ \"^delete\" \"^prompt\" ];\n# }\n# console {\n#     any info;\n#     authorization any;\n#     ftp none;\n#     change-log critical;\n# }\n# time-format year millisecond;\n# source-address 33.33.33.33;\n# routing-instance inst11;\n# log-rotate-frequency 45;\n- name: Replaced running logging global configuration with provided configuration\n  junipernetworks.junos.junos_logging_global:\n    config:\n      files:\n        - name: \"file104\"\n          allow_duplicates: true\n        - name: \"file102\"\n          allow_duplicates: true\n          any:\n            level: \"any\"\n          structured_data:\n            set: true\n      hosts:\n        - name: host222\n          exclude_hostname: true\n          allow_duplicates: true\n          any:\n            level: \"any\"\n          structured_data:\n            set: true\n            brief: true\n          facility_override: \"ftp\"\n          log_prefix: \"field\"\n          match: \"^set*\"\n          match_strings:\n            - \"^delete\"\n            - \"^prompt\"\n          port: 1231\n          routing_instance: \"inst11\"\n          source_address: \"11.1.1.11\"\n      users:\n        - name: \"user1\"\n          allow_duplicates: true\n        - name: \"user2\"\n          allow_duplicates: true\n          any:\n            level: \"any\"\n          user:\n            level: info\n    state: replaced\n#\n# -------------------------\n# Module Execution Result\n# -------------------------\n#     \"after\": {\n#         \"files\": [\n#             {\n#                 \"allow_duplicates\": true,\n#                 \"name\": \"file104\"\n#             },\n#             {\n#                 \"allow_duplicates\": true,\n#                 \"any\": {\n#                     \"level\": \"any\"\n#                 },\n#                 \"name\": \"file102\",\n#                 \"structured_data\": {\n#                     \"set\": true\n#                 }\n#             }\n#         ],\n#         \"hosts\": [\n#             {\n#                 \"allow_duplicates\": true,\n#                 \"any\": {\n#                     \"level\": \"any\"\n#                 },\n#                 \"exclude_hostname\": true,\n#                 \"facility_override\": \"ftp\",\n#                 \"log_prefix\": \"field\",\n#                 \"match\": \"^set*\",\n#                 \"match_strings\": [\n#                     \"^delete\",\n#                     \"^prompt\"\n#                 ],\n#                 \"name\": \"host222\",\n#                 \"port\": 1231,\n#                 \"routing_instance\": \"inst11\",\n#                 \"source_address\": \"11.1.1.11\",\n#                 \"structured_data\": {\n#                     \"brief\": true\n#                 }\n#             }\n#         ],\n#         \"users\": [\n#             {\n#                 \"allow_duplicates\": true,\n#                 \"name\": \"user1\"\n#             },\n#             {\n#                 \"allow_duplicates\": true,\n#                 \"any\": {\n#                     \"level\": \"any\"\n#                 },\n#                 \"name\": \"user2\",\n#                 \"user\": {\n#                     \"level\": \"info\"\n#                 }\n#             }\n#         ]\n#     },\n#     \"before\": {\n#         \"allow_duplicates\": true,\n#         \"archive\": {\n#             \"file_size\": 65578,\n#             \"files\": 10,\n#             \"no_binary_data\": true,\n#             \"no_world_readable\": true\n#         },\n#         \"console\": {\n#             \"any\": {\n#                 \"level\": \"info\"\n#             },\n#             \"authorization\": {\n#                 \"level\": \"any\"\n#             },\n#             \"change_log\": {\n#                 \"level\": \"critical\"\n#             },\n#             \"ftp\": {\n#                 \"level\": \"none\"\n#             }\n#         },\n#         \"files\": [\n#             {\n#                 \"allow_duplicates\": true,\n#                 \"name\": \"file101\"\n#             },\n#             {\n#                 \"allow_duplicates\": true,\n#                 \"any\": {\n#                     \"level\": \"any\"\n#                 },\n#                 \"name\": \"file102\",\n#                 \"structured_data\": {\n#                     \"set\": true\n#                 }\n#             },\n#             {\n#                 \"archive\": {\n#                     \"file_size\": 65578,\n#                     \"files\": 10,\n#                     \"no_binary_data\": true,\n#                     \"no_world_readable\": true\n#                 },\n#                 \"explicit_priority\": true,\n#                 \"match\": \"^set*\",\n#                 \"match_strings\": [\n#                     \"^delete\",\n#                     \"^prompt\"\n#                 ],\n#                 \"name\": \"file103\"\n#             }\n#         ],\n#         \"hosts\": [\n#             {\n#                 \"allow_duplicates\": true,\n#                 \"any\": {\n#                     \"level\": \"any\"\n#                 },\n#                 \"exclude_hostname\": true,\n#                 \"facility_override\": \"ftp\",\n#                 \"log_prefix\": \"field\",\n#                 \"match\": \"^set*\",\n#                 \"match_strings\": [\n#                     \"^delete\",\n#                     \"^prompt\"\n#                 ],\n#                 \"name\": \"host111\",\n#                 \"port\": 1231,\n#                 \"routing_instance\": \"inst11\",\n#                 \"source_address\": \"11.1.1.11\",\n#                 \"structured_data\": {\n#                     \"brief\": true\n#                 }\n#             }\n#         ],\n#         \"log_rotate_frequency\": 45,\n#         \"routing_instance\": \"inst11\",\n#         \"source_address\": \"33.33.33.33\",\n#         \"time_format\": {\n#             \"millisecond\": true,\n#             \"year\": true\n#         },\n#         \"users\": [\n#             {\n#                 \"allow_duplicates\": true,\n#                 \"name\": \"user1\"\n#             },\n#             {\n#                 \"allow_duplicates\": true,\n#                 \"any\": {\n#                     \"level\": \"any\"\n#                 },\n#                 \"name\": \"user2\",\n#                 \"user\": {\n#                     \"level\": \"info\"\n#                 }\n#             }\n#         ]\n#     },\n#     \"changed\": true,\n#     \"commands\": [\n#             \"<nc:system xmlns:nc=\"urn:ietf:params:xml:ns:netconf:base:1.0\">\"\n#             \"<nc:syslog delete=\"delete\"/><nc:syslog><nc:file><nc:name>file104</nc:name>\"\n#             \"<nc:allow-duplicates/></nc:file><nc:file><nc:name>file102</nc:name><nc:allow-duplicates/>\"\n#             \"<nc:contents><nc:name>any</nc:name><nc:any/></nc:contents><nc:structured-data/></nc:file>\"\n#             \"<nc:host><nc:name>host222</nc:name><nc:allow-duplicates/><nc:contents><nc:name>any</nc:name>\"\n#             \"<nc:any/></nc:contents><nc:exclude-hostname/><nc:facility-override>ftp</nc:facility-override>\"\n#             \"<nc:log-prefix>field</nc:log-prefix><nc:match>^set*</nc:match>\"\n#             \"<nc:match-strings>^delete</nc:match-strings>\"\n#             \"<nc:match-strings>^prompt</nc:match-strings><nc:port>1231</nc:port>\"\n#             \"<nc:routing-instance>inst11</nc:routing-instance><nc:source-address>11.1.1.11</nc:source-address>\"\n#             \"<nc:structured-data><nc:brief/></nc:structured-data></nc:host><nc:user><nc:name>user1</nc:name>\"\n#             \"<nc:allow-duplicates/></nc:user><nc:user><nc:name>user2</nc:name><nc:allow-duplicates/><nc:contents>\"\n#             \"<nc:name>any</nc:name><nc:any/></nc:contents>\"\n#             \"<nc:contents><nc:name>user</nc:name><nc:info/></nc:contents></nc:user></nc:syslog></nc:system>\"\n#     ]\n# After state\n# -----------\n#\n# vagrant@vsrx# show system syslog\n# user user1 {\n#     allow-duplicates;\n# }\n# user user2 {\n#     any any;\n#     user info;\n#     allow-duplicates;\n# }\n# host host222 {\n#     any any;\n#     match \"^set*\";\n#     allow-duplicates;\n#     port 1231;\n#     facility-override ftp;\n#     log-prefix field;\n#     source-address 11.1.1.11;\n#     routing-instance inst11;\n#     exclude-hostname;\n#     match-strings [ \"^delete\" \"^prompt\" ];\n#     structured-data {\n#         brief;\n#     }\n# }\n# file file104 {\n#     allow-duplicates;\n# }\n# file file102 {\n#     any any;\n#     allow-duplicates;\n#     structured-data;\n# }\n# Using overridden\n#\n# Before state\n# ------------\n#\n# vagrant@vsrx# show system syslog\n# archive size 65578 files 10 no-world-readable no-binary-data;\n# user user1 {\n#     allow-duplicates;\n# }\n# user user2 {\n#     any any;\n#     user info;\n#     allow-duplicates;\n# }\n# host host111 {\n#     any any;\n#     match \"^set*\";\n#     allow-duplicates;\n#     port 1231;\n#     facility-override ftp;\n#     log-prefix field;\n#     source-address 11.1.1.11;\n#     routing-instance inst11;\n#     exclude-hostname;\n#     match-strings [ \"^delete\" \"^prompt\" ];\n#     structured-data {\n#         brief;\n#     }\n# }\n# allow-duplicates;\n# file file101 {\n#     allow-duplicates;\n# }\n# file file102 {\n#     any any;\n#     allow-duplicates;\n#     structured-data;\n# }\n# file file103 {\n#     match \"^set*\";\n#     archive size 65578 files 10 no-world-readable no-binary-data;\n#     explicit-priority;\n#     match-strings [ \"^delete\" \"^prompt\" ];\n# }\n# console {\n#     any info;\n#     authorization any;\n#     ftp none;\n#     change-log critical;\n# }\n# time-format year millisecond;\n# source-address 33.33.33.33;\n# routing-instance inst11;\n# log-rotate-frequency 45;\n- name: Override running logging global configuration with provided configuration\n  junipernetworks.junos.junos_logging_global:\n    config:\n      files:\n        - name: \"file104\"\n          allow_duplicates: true\n        - name: \"file102\"\n          allow_duplicates: true\n          any:\n            level: \"any\"\n          structured_data:\n            set: true\n      hosts:\n        - name: host222\n          exclude_hostname: true\n          allow_duplicates: true\n          any:\n            level: \"any\"\n          structured_data:\n            set: true\n            brief: true\n          facility_override: \"ftp\"\n          log_prefix: \"field\"\n          match: \"^set*\"\n          match_strings:\n            - \"^delete\"\n            - \"^prompt\"\n          port: 1231\n          routing_instance: \"inst11\"\n          source_address: \"11.1.1.11\"\n      users:\n        - name: \"user1\"\n          allow_duplicates: true\n        - name: \"user2\"\n          allow_duplicates: true\n          any:\n            level: \"any\"\n          user:\n            level: info\n    state: overridden\n#\n# -------------------------\n# Module Execution Result\n# -------------------------\n#     \"after\": {\n#         \"files\": [\n#             {\n#                 \"allow_duplicates\": true,\n#                 \"name\": \"file104\"\n#             },\n#             {\n#                 \"allow_duplicates\": true,\n#                 \"any\": {\n#                     \"level\": \"any\"\n#                 },\n#                 \"name\": \"file102\",\n#                 \"structured_data\": {\n#                     \"set\": true\n#                 }\n#             }\n#         ],\n#         \"hosts\": [\n#             {\n#                 \"allow_duplicates\": true,\n#                 \"any\": {\n#                     \"level\": \"any\"\n#                 },\n#                 \"exclude_hostname\": true,\n#                 \"facility_override\": \"ftp\",\n#                 \"log_prefix\": \"field\",\n#                 \"match\": \"^set*\",\n#                 \"match_strings\": [\n#                     \"^delete\",\n#                     \"^prompt\"\n#                 ],\n#                 \"name\": \"host222\",\n#                 \"port\": 1231,\n#                 \"routing_instance\": \"inst11\",\n#                 \"source_address\": \"11.1.1.11\",\n#                 \"structured_data\": {\n#                     \"brief\": true\n#                 }\n#             }\n#         ],\n#         \"users\": [\n#             {\n#                 \"allow_duplicates\": true,\n#                 \"name\": \"user1\"\n#             },\n#             {\n#                 \"allow_duplicates\": true,\n#                 \"any\": {\n#                     \"level\": \"any\"\n#                 },\n#                 \"name\": \"user2\",\n#                 \"user\": {\n#                     \"level\": \"info\"\n#                 }\n#             }\n#         ]\n#     },\n#     \"before\": {\n#         \"allow_duplicates\": true,\n#         \"archive\": {\n#             \"file_size\": 65578,\n#             \"files\": 10,\n#             \"no_binary_data\": true,\n#             \"no_world_readable\": true\n#         },\n#         \"console\": {\n#             \"any\": {\n#                 \"level\": \"info\"\n#             },\n#             \"authorization\": {\n#                 \"level\": \"any\"\n#             },\n#             \"change_log\": {\n#                 \"level\": \"critical\"\n#             },\n#             \"ftp\": {\n#                 \"level\": \"none\"\n#             }\n#         },\n#         \"files\": [\n#             {\n#                 \"allow_duplicates\": true,\n#                 \"name\": \"file101\"\n#             },\n#             {\n#                 \"allow_duplicates\": true,\n#                 \"any\": {\n#                     \"level\": \"any\"\n#                 },\n#                 \"name\": \"file102\",\n#                 \"structured_data\": {\n#                     \"set\": true\n#                 }\n#             },\n#             {\n#                 \"archive\": {\n#                     \"file_size\": 65578,\n#                     \"files\": 10,\n#                     \"no_binary_data\": true,\n#                     \"no_world_readable\": true\n#                 },\n#                 \"explicit_priority\": true,\n#                 \"match\": \"^set*\",\n#                 \"match_strings\": [\n#                     \"^delete\",\n#                     \"^prompt\"\n#                 ],\n#                 \"name\": \"file103\"\n#             }\n#         ],\n#         \"hosts\": [\n#             {\n#                 \"allow_duplicates\": true,\n#                 \"any\": {\n#                     \"level\": \"any\"\n#                 },\n#                 \"exclude_hostname\": true,\n#                 \"facility_override\": \"ftp\",\n#                 \"log_prefix\": \"field\",\n#                 \"match\": \"^set*\",\n#                 \"match_strings\": [\n#                     \"^delete\",\n#                     \"^prompt\"\n#                 ],\n#                 \"name\": \"host111\",\n#                 \"port\": 1231,\n#                 \"routing_instance\": \"inst11\",\n#                 \"source_address\": \"11.1.1.11\",\n#                 \"structured_data\": {\n#                     \"brief\": true\n#                 }\n#             }\n#         ],\n#         \"log_rotate_frequency\": 45,\n#         \"routing_instance\": \"inst11\",\n#         \"source_address\": \"33.33.33.33\",\n#         \"time_format\": {\n#             \"millisecond\": true,\n#             \"year\": true\n#         },\n#         \"users\": [\n#             {\n#                 \"allow_duplicates\": true,\n#                 \"name\": \"user1\"\n#             },\n#             {\n#                 \"allow_duplicates\": true,\n#                 \"any\": {\n#                     \"level\": \"any\"\n#                 },\n#                 \"name\": \"user2\",\n#                 \"user\": {\n#                     \"level\": \"info\"\n#                 }\n#             }\n#         ]\n#     },\n#     \"changed\": true,\n#     \"commands\": [\n#             \"<nc:system xmlns:nc=\"urn:ietf:params:xml:ns:netconf:base:1.0\">\"\n#             \"<nc:syslog delete=\"delete\"/><nc:syslog><nc:file><nc:name>file104</nc:name>\"\n#             \"<nc:allow-duplicates/></nc:file><nc:file><nc:name>file102</nc:name><nc:allow-duplicates/>\"\n#             \"<nc:contents><nc:name>any</nc:name><nc:any/></nc:contents><nc:structured-data/></nc:file>\"\n#             \"<nc:host><nc:name>host222</nc:name><nc:allow-duplicates/><nc:contents><nc:name>any</nc:name>\"\n#             \"<nc:any/></nc:contents><nc:exclude-hostname/><nc:facility-override>ftp</nc:facility-override>\"\n#             \"<nc:log-prefix>field</nc:log-prefix><nc:match>^set*</nc:match>\"\n#             \"<nc:match-strings>^delete</nc:match-strings>\"\n#             \"<nc:match-strings>^prompt</nc:match-strings><nc:port>1231</nc:port>\"\n#             \"<nc:routing-instance>inst11</nc:routing-instance><nc:source-address>11.1.1.11</nc:source-address>\"\n#             \"<nc:structured-data><nc:brief/></nc:structured-data></nc:host><nc:user><nc:name>user1</nc:name>\"\n#             \"<nc:allow-duplicates/></nc:user><nc:user><nc:name>user2</nc:name><nc:allow-duplicates/><nc:contents>\"\n#             \"<nc:name>any</nc:name><nc:any/></nc:contents>\"\n#             \"<nc:contents><nc:name>user</nc:name><nc:info/></nc:contents></nc:user></nc:syslog></nc:system>\"\n#     ]\n# After state\n# -----------\n#\n# vagrant@vsrx# show system syslog\n# user user1 {\n#     allow-duplicates;\n# }\n# user user2 {\n#     any any;\n#     user info;\n#     allow-duplicates;\n# }\n# host host222 {\n#     any any;\n#     match \"^set*\";\n#     allow-duplicates;\n#     port 1231;\n#     facility-override ftp;\n#     log-prefix field;\n#     source-address 11.1.1.11;\n#     routing-instance inst11;\n#     exclude-hostname;\n#     match-strings [ \"^delete\" \"^prompt\" ];\n#     structured-data {\n#         brief;\n#     }\n# }\n# file file104 {\n#     allow-duplicates;\n# }\n# file file102 {\n#     any any;\n#     allow-duplicates;\n#     structured-data;\n# }\n# Using deleted\n#\n# Before state\n# ------------\n#\n# vagrant@vsrx# show system syslog\n# user user1 {\n#     allow-duplicates;\n# }\n# user user2 {\n#     any any;\n#     user info;\n#     allow-duplicates;\n# }\n# host host222 {\n#     any any;\n#     match \"^set*\";\n#     allow-duplicates;\n#     port 1231;\n#     facility-override ftp;\n#     log-prefix field;\n#     source-address 11.1.1.11;\n#     routing-instance inst11;\n#     exclude-hostname;\n#     match-strings [ \"^delete\" \"^prompt\" ];\n#     structured-data {\n#         brief;\n#     }\n# }\n# file file104 {\n#     allow-duplicates;\n# }\n# file file102 {\n#     any any;\n#     allow-duplicates;\n#     structured-data;\n# }\n- name: Delete running logging global configuration\n  junipernetworks.junos.junos_logging_global:\n    config:\n    state: deleted\n#\n# -------------------------\n# Module Execution Result\n# -------------------------\n#     \"after\": {},\n#     \"before\": {\n#         \"files\": [\n#             {\n#                 \"allow_duplicates\": true,\n#                 \"name\": \"file104\"\n#             },\n#             {\n#                 \"allow_duplicates\": true,\n#                 \"any\": {\n#                     \"level\": \"any\"\n#                 },\n#                 \"name\": \"file102\",\n#                 \"structured_data\": {\n#                     \"set\": true\n#                 }\n#             }\n#         ],\n#         \"hosts\": [\n#             {\n#                 \"allow_duplicates\": true,\n#                 \"any\": {\n#                     \"level\": \"any\"\n#                 },\n#                 \"exclude_hostname\": true,\n#                 \"facility_override\": \"ftp\",\n#                 \"log_prefix\": \"field\",\n#                 \"match\": \"^set*\",\n#                 \"match_strings\": [\n#                     \"^delete\",\n#                     \"^prompt\"\n#                 ],\n#                 \"name\": \"host222\",\n#                 \"port\": 1231,\n#                 \"routing_instance\": \"inst11\",\n#                 \"source_address\": \"11.1.1.11\",\n#                 \"structured_data\": {\n#                     \"brief\": true\n#                 }\n#             }\n#         ],\n#         \"users\": [\n#             {\n#                 \"allow_duplicates\": true,\n#                 \"name\": \"user1\"\n#             },\n#             {\n#                 \"allow_duplicates\": true,\n#                 \"any\": {\n#                     \"level\": \"any\"\n#                 },\n#                 \"name\": \"user2\",\n#                 \"user\": {\n#                     \"level\": \"info\"\n#                 }\n#             }\n#         ]\n#     },\n#     \"changed\": true,\n#     \"commands\": [\n#               \"<nc:system xmlns:nc=\"urn:ietf:params:xml:ns:netconf:base:1.0\">\"\n#               \"<nc:syslog delete=\"delete\"/></nc:system>\"\n#     ]\n# After state\n# -----------\n#\n# vagrant@vsrx# show system syslog\n#\n# [edit]\n# Using gathered\n#\n# Before state\n# ------------\n#\n# vagrant@vsrx# show system syslog\n# user user1 {\n#     allow-duplicates;\n# }\n# user user2 {\n#     any any;\n#     user info;\n#     allow-duplicates;\n# }\n# host host222 {\n#     any any;\n#     match \"^set*\";\n#     allow-duplicates;\n#     port 1231;\n#     facility-override ftp;\n#     log-prefix field;\n#     source-address 11.1.1.11;\n#     routing-instance inst11;\n#     exclude-hostname;\n#     match-strings [ \"^delete\" \"^prompt\" ];\n#     structured-data {\n#         brief;\n#     }\n# }\n# file file104 {\n#     allow-duplicates;\n# }\n# file file102 {\n#     any any;\n#     allow-duplicates;\n#     structured-data;\n# }\n- name: Gather running logging global configuration\n  junipernetworks.junos.junos_logging_global:\n    state: gathered\n#\n# -------------------------\n# Module Execution Result\n# -------------------------\n#     \"gathered\": {\n#         \"files\": [\n#             {\n#                 \"allow_duplicates\": true,\n#                 \"name\": \"file104\"\n#             },\n#             {\n#                 \"allow_duplicates\": true,\n#                 \"any\": {\n#                     \"level\": \"any\"\n#                 },\n#                 \"name\": \"file102\",\n#                 \"structured_data\": {\n#                     \"set\": true\n#                 }\n#             }\n#         ],\n#         \"hosts\": [\n#             {\n#                 \"allow_duplicates\": true,\n#                 \"any\": {\n#                     \"level\": \"any\"\n#                 },\n#                 \"exclude_hostname\": true,\n#                 \"facility_override\": \"ftp\",\n#                 \"log_prefix\": \"field\",\n#                 \"match\": \"^set*\",\n#                 \"match_strings\": [\n#                     \"^delete\",\n#                     \"^prompt\"\n#                 ],\n#                 \"name\": \"host222\",\n#                 \"port\": 1231,\n#                 \"routing_instance\": \"inst11\",\n#                 \"source_address\": \"11.1.1.11\",\n#                 \"structured_data\": {\n#                     \"brief\": true\n#                 }\n#             }\n#         ],\n#         \"users\": [\n#             {\n#                 \"allow_duplicates\": true,\n#                 \"name\": \"user1\"\n#             },\n#             {\n#                 \"allow_duplicates\": true,\n#                 \"any\": {\n#                     \"level\": \"any\"\n#                 },\n#                 \"name\": \"user2\",\n#                 \"user\": {\n#                     \"level\": \"info\"\n#                 }\n#             }\n#         ]\n#     },\n#     \"changed\": false,\n# Using rendered\n#\n# Before state\n# ------------\n#\n- name: Render xml for provided facts.\n  junipernetworks.junos.junos_logging_global:\n    config:\n      allow_duplicates: true\n      archive:\n        set: true\n        no_binary_data: true\n        files: 10\n        file_size: 65578\n        no_world_readable: true\n      console:\n        any:\n          level: \"info\"\n        authorization:\n          level: \"any\"\n        change_log:\n          level: \"critical\"\n        ftp:\n          level: \"none\"\n      files:\n        - name: \"file101\"\n          allow_duplicates: true\n        - name: \"file102\"\n          allow_duplicates: true\n          any:\n            level: \"any\"\n          structured_data:\n            set: true\n        - name: \"file103\"\n          archive:\n            set: true\n            no_binary_data: true\n            files: 10\n            file_size: 65578\n            no_world_readable: true\n          explicit_priority: true\n          match: \"^set*\"\n          match_strings:\n            - \"^delete\"\n            - \"^prompt\"\n      hosts:\n        - name: host111\n          exclude_hostname: true\n          allow_duplicates: true\n          any:\n            level: \"any\"\n          structured_data:\n            set: true\n            brief: true\n          facility_override: \"ftp\"\n          log_prefix: \"field\"\n          match: \"^set*\"\n          match_strings:\n            - \"^delete\"\n            - \"^prompt\"\n          port: 1231\n          routing_instance: \"inst11\"\n          source_address: \"11.1.1.11\"\n      routing_instance: \"inst11\"\n      log_rotate_frequency: 45\n      source_address: \"33.33.33.33\"\n      time_format:\n        millisecond: true\n        year: true\n      users:\n        - name: \"user1\"\n          allow_duplicates: true\n        - name: \"user2\"\n          allow_duplicates: true\n          any:\n            level: \"any\"\n          user:\n            level: info\n    state: rendered\n#\n# -------------------------\n# Module Execution Result\n# -------------------------\n#     \"rendered\": [\n#         \"<nc:system xmlns:nc=\"urn:ietf:params:xml:ns:netconf:base:1.0\">\"\n#         \"<nc:syslog><nc:allow-duplicates/><nc:archive><nc:files>10</nc:files>\"\n#         \"<nc:no-binary-data/><nc:size>65578</nc:size><nc:no-world-readable/></nc:archive>\"\n#         \"<nc:console><nc:name>change-log</nc:name><nc:critical/></nc:console><nc:console>\"\n#         \"<nc:name>any</nc:name><nc:info/></nc:console><nc:console><nc:name>authorization</nc:name>\"\n#         \"<nc:any/></nc:console><nc:console><nc:name>ftp</nc:name><nc:none/></nc:console><nc:file>\"\n#         \"<nc:name>file101</nc:name><nc:allow-duplicates/></nc:file><nc:file><nc:name>file102</nc:name>\"\n#         \"<nc:allow-duplicates/><nc:contents><nc:name>any</nc:name><nc:any/></nc:contents><nc:structured-data/>\"\n#         \"</nc:file><nc:file><nc:name>file103</nc:name><nc:archive><nc:files>10</nc:files><nc:no-binary-data/>\"\n#         \"<nc:size>65578</nc:size><nc:no-world-readable/></nc:archive><nc:explicit-priority/>\"\n#         \"<nc:match>^set*</nc:match><nc:match-strings>^delete</nc:match-strings>\"\n#         \"<nc:match-strings>^prompt</nc:match-strings></nc:file><nc:host><nc:name>host111</nc:name>\"\n#         \"<nc:allow-duplicates/><nc:contents><nc:name>any</nc:name><nc:any/></nc:contents>\"\n#         \"<nc:exclude-hostname/><nc:facility-override>ftp</nc:facility-override>\"\n#         \"<nc:log-prefix>field</nc:log-prefix><nc:match>^set*</nc:match><nc:match-strings>^delete</nc:match-strings>\"\n#         \"<nc:match-strings>^prompt</nc:match-strings><nc:port>1231</nc:port>\"\n#         \"<nc:routing-instance>inst11</nc:routing-instance><nc:source-address>11.1.1.11</nc:source-address>\"\n#         \"<nc:structured-data><nc:brief/></nc:structured-data></nc:host>\"\n#         \"<nc:log-rotate-frequency>45</nc:log-rotate-frequency><nc:routing-instance>inst11</nc:routing-instance>\"\n#         \"<nc:source-address>33.33.33.33</nc:source-address><nc:time-format><nc:millisecond/>\"\n#         \"<nc:year/></nc:time-format><nc:user><nc:name>user1</nc:name><nc:allow-duplicates/></nc:user>\"\n#         \"<nc:user><nc:name>user2</nc:name><nc:allow-duplicates/><nc:contents><nc:name>any</nc:name><nc:any/>\"\n#         \"</nc:contents><nc:contents><nc:name>user</nc:name><nc:info/></nc:contents></nc:user></nc:syslog></nc:system>\"\n#     ]\n# Using parsed\n# parsed.cfg\n# ------------\n# <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n# <rpc-reply message-id=\"urn:uuid:0cadb4e8-5bba-47f4-986e-72906227007f\">\n#     <configuration changed-seconds=\"1590139550\" changed-localtime=\"2020-05-22 09:25:50 UTC\">\n#         <version>18.4R1-S2.4</version>\n#         <system xmlns=\"http://yang.juniper.net/junos-es/conf/system\">\n#         <syslog>\n#             <user>\n#                 <name>*</name>\n#                 <contents>\n#                     <name>any</name>\n#                     <emergency/>\n#                 </contents>\n#             </user>\n#             <file>\n#                 <name>messages</name>\n#                 <contents>\n#                     <name>any</name>\n#                     <any/>\n#                 </contents>\n#                 <contents>\n#                     <name>authorization</name>\n#                     <info/>\n#                 </contents>\n#             </file>\n#             <file>\n#                 <name>interactive-commands</name>\n#                 <contents>\n#                     <name>interactive-commands</name>\n#                     <any/>\n#                 </contents>\n#             </file>\n#         </syslog>\n#     </system>\n#     </configuration>\n# </rpc-reply>\n- name: Parse logging global running config\n  junipernetworks.junos.junos_routing_instances:\n    running_config: \"{{ lookup('file', './parsed.cfg') }}\"\n    state: parsed\n#\n#\n# -------------------------\n# Module Execution Result\n# -------------------------\n#\n#\n# \"parsed\":  {\n#         \"files\": [\n#             {\n#                 \"any\": {\n#                     \"level\": \"any\"\n#                 },\n#                 \"authorization\": {\n#                     \"level\": \"info\"\n#                 },\n#                 \"name\": \"messages\"\n#             },\n#             {\n#                 \"interactive_commands\": {\n#                     \"level\": \"any\"\n#                 },\n#                 \"name\": \"interactive-commands\"\n#             }\n#         ],\n#         \"users\": [\n#             {\n#                 \"any\": {\n#                     \"level\": \"emergency\"\n#                 },\n#                 \"name\": \"*\"\n#             }\n#         ]\n#     }\n#\n#\n"
  },
  "junipernetworks.junos.junos_netconf": {
    "doc": {
      "description": "This module provides an abstraction that enables and configures the netconf system service running on Junos devices.  This module can be used to easily enable the Netconf API. Netconf provides a programmatic interface for working with configuration and state resources as defined in RFC 6242. If the C(netconf_port) is not mentioned in the task by default netconf will be enabled on port 830 only.",
      "has_action": true,
      "notes": "Tested against vSRX JUNOS version 15.1X49-D15.4, vqfx-10000 JUNOS Version 15.1X53-D60.4.\nRecommended connection is C(network_cli). See L(the Junos OS Platform Options,../network/user_guide/platform_junos.html).\nThis module also works with C(local) connections for legacy playbooks.\nIf C(netconf_port) value is not mentioned in task by default it will be enabled on port 830 only. Although C(netconf_port) value can be from 1 through 65535, avoid configuring access on a port that is normally assigned for another service. This practice avoids potential resource conflicts.\nFor information on using CLI and netconf see the :ref:`Junos OS Platform Options guide <junos_platform_options>`\nFor more information on using Ansible to manage network devices see the :ref:`Ansible Network Guide <network_guide>`\nFor more information on using Ansible to manage Juniper network devices see U(https://www.ansible.com/ansible-juniper).",
      "options": {
        "netconf_port": {
          "aliases": [
            "listens_on"
          ],
          "description": "This argument specifies the port the netconf service should listen on for SSH connections.  The default port as defined in RFC 6242 is 830.",
          "default": "830",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "B(Deprecated)\nStarting with Ansible 2.5 we recommend using C(connection: network_cli) or C(connection: netconf).\nFor more information please see the L(Junos OS Platform Options guide, ../network/user_guide/platform_junos.html).\nHORIZONTALLINE\nA dict object containing connection details.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "host": {
              "aliases": [],
              "description": "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [],
              "description": "Specifies the password to use to authenticate the connection to the remote device.   This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "port": {
              "aliases": [],
              "description": "Specifies the port to use when building the connection to the remote device.  The port value will default to the well known SSH port of 22 (for C(transport=cli)) or port 830 (for C(transport=netconf)) device.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "ssh_keyfile": {
              "aliases": [],
              "description": "Specifies the SSH key to use to authenticate the connection to the remote device.   This value is the path to the key used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead.",
              "type": "path",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "netconf",
              "type": "str",
              "required": false,
              "choices": [
                "cli",
                "netconf"
              ],
              "suboptions": {}
            },
            "username": {
              "aliases": [],
              "description": "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "Specifies the state of the C(junos_netconf) resource on the remote device.  If the I(state) argument is set to I(present) the netconf service will be configured.  If the I(state) argument is set to I(absent) the netconf service will be removed from the configuration.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Configures the Junos Netconf system service",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: enable netconf service on port 830\n  junipernetworks.junos.junos_netconf:\n    listens_on: 830\n    state: present\n\n- name: disable netconf service\n  junipernetworks.junos.junos_netconf:\n    state: absent\n"
  },
  "junipernetworks.junos.junos_ntp_global": {
    "doc": {
      "description": "This module manages NTP configuration on devices running Junos.",
      "has_action": true,
      "notes": "This module requires the netconf system service be enabled on the device being managed.\nThis module works with connection C(netconf).\nSee L(the Junos OS Platform Options,https://docs.ansible.com/ansible/latest/network/user_guide/platform_junos.html).\nTested against JunOS v18.4R1",
      "options": {
        "config": {
          "aliases": [],
          "description": "A dictionary of NTP configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "authentication_keys": {
              "aliases": [],
              "description": "NTP authentication key.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "algorithm": {
                  "aliases": [],
                  "description": "Authentication key type.",
                  "type": "str",
                  "required": false,
                  "choices": [
                    "md5",
                    "sha1",
                    "sha256"
                  ],
                  "suboptions": {}
                },
                "id": {
                  "aliases": [],
                  "description": "Authentication key number.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "key": {
                  "aliases": [],
                  "description": "Authentication key value.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "boot_server": {
              "aliases": [],
              "description": "Server to query during boot sequence.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "broadcast_client": {
              "aliases": [],
              "description": "Listen to broadcast NTP.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "broadcasts": {
              "aliases": [],
              "description": "Broadcast parameters.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "address": {
                  "aliases": [],
                  "description": "Broadcast or multicast address to use.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "key": {
                  "aliases": [],
                  "description": "Authentication key.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "routing_instance_name": {
                  "aliases": [],
                  "description": "Routing intance name in which interface has address in broadcast subnet.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "ttl": {
                  "aliases": [],
                  "description": "TTL value to transmit.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "version": {
                  "aliases": [],
                  "description": "NTP version to use.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "interval_range": {
              "aliases": [],
              "description": "Set the minpoll and maxpoll interval range.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "multicast_client": {
              "aliases": [],
              "description": "Listen to multicast NTP address.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "peers": {
              "aliases": [],
              "description": "NTP Peers.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "key_id": {
                  "aliases": [],
                  "description": "Key-id to be used while communicating.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "peer": {
                  "aliases": [],
                  "description": "Hostname/IP address of the NTP Peer.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "prefer": {
                  "aliases": [],
                  "description": "Prefer this peer.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "version": {
                  "aliases": [],
                  "description": "NTP version to use.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "servers": {
              "aliases": [],
              "description": "NTP Servers.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "key_id": {
                  "aliases": [],
                  "description": "Key-id to be used while communicating.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "prefer": {
                  "aliases": [],
                  "description": "Prefer this peer_serv.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "routing_instance": {
                  "aliases": [],
                  "description": "Routing instance through which server is reachable.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "server": {
                  "aliases": [],
                  "description": "IP address or hostname of the server.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "version": {
                  "aliases": [],
                  "description": "NTP version to use.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "source_addresses": {
              "aliases": [],
              "description": "Source-Address parameters.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "routing_instance": {
                  "aliases": [],
                  "description": "Routing intance name in which source address is defined.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "source_address": {
                  "aliases": [],
                  "description": "Use specified address as source address.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "threshold": {
              "aliases": [],
              "description": "Set the maximum threshold(sec) allowed for NTP adjustment.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "action": {
                  "aliases": [],
                  "description": "Select actions for NTP abnormal adjustment.",
                  "type": "str",
                  "required": false,
                  "choices": [
                    "accept",
                    "reject"
                  ],
                  "suboptions": {}
                },
                "value": {
                  "aliases": [],
                  "description": "The maximum value(sec) allowed for NTP adjustment.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "trusted_keys": {
              "aliases": [],
              "description": "List of trusted authentication keys.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "key_id": {
                  "aliases": [],
                  "description": "Trusted-Key number.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                }
              }
            }
          }
        },
        "running_config": {
          "aliases": [],
          "description": "This option is used only with state I(parsed).\nThe value of this option should be the output received from the Junos device by executing the command B(show system syslog).\nThe state I(parsed) reads the configuration from C(running_config) option and transforms it into Ansible structured data as per the resource module's argspec and the value is then returned in the I(parsed) key within the result.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The state the configuration should be left in.\nThe states I(replaced) and I(overridden) have identical behaviour for this module.\nRefer to examples for more details.",
          "default": "merged",
          "type": "str",
          "required": false,
          "choices": [
            "merged",
            "replaced",
            "deleted",
            "overridden",
            "parsed",
            "gathered",
            "rendered"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "ncclient (>=v0.6.4)",
        "xmltodict (>=0.12.0)"
      ],
      "short_description": "Manage NTP configuration on Junos devices.",
      "version_added": "2.6.0"
    },
    "examples": "\n# Using merged\n#\n# Before state\n# ------------\n#\n# vagrant@vsrx# show system ntp\n#\n# [edit]\n# vagrant@vsrx# show routing-instances\n# rt1 {\n#     description rt1;\n# }\n# rt2 {\n- name: Merge provided NTP configuration into running configuration.\n  junipernetworks.junos.junos_ntp_global:\n    config:\n      boot_server: '78.46.194.186'\n      broadcasts:\n        - address: '172.16.255.255'\n          key: '50'\n          ttl: 200\n          version: 3\n          routing_instance_name: 'rt1'\n        - address: '192.16.255.255'\n          key: '50'\n          ttl: 200\n          version: 3\n          routing_instance_name: 'rt2'\n      broadcast_client: true\n      interval_range: 2\n      multicast_client: \"224.0.0.1\"\n      peers:\n        - peer: \"78.44.194.186\"\n        - peer: \"172.44.194.186\"\n          key_id: 10000\n          prefer: true\n          version: 3\n      servers:\n        - server: \"48.46.194.186\"\n          key_id: 34\n          prefer: true\n          version: 2\n          routing_instance: 'rt1'\n        - server: \"48.45.194.186\"\n          key_id: 34\n          prefer: true\n          version: 2\n      source_addresses:\n        - source_address: \"172.45.194.186\"\n          routing_instance: 'rt1'\n        - source_address: \"171.45.194.186\"\n          routing_instance: 'rt2'\n      threshold:\n        value: 300\n        action: \"accept\"\n      trusted_keys:\n        - key_id: 3000\n        - key_id: 2000\n    state: merged\n#\n# -------------------------\n# Module Execution Result\n# -------------------------\n#     \"after\": {\n#         \"boot_server\": \"78.46.194.186\",\n#         \"broadcast_client\": true,\n#         \"broadcasts\": [\n#             {\n#                 \"address\": \"172.16.255.255\",\n#                 \"key\": \"50\",\n#                 \"routing_instance_name\": \"rt1\",\n#                 \"ttl\": 200,\n#                 \"version\": 3\n#             },\n#             {\n#                 \"address\": \"192.16.255.255\",\n#                 \"key\": \"50\",\n#                 \"routing_instance_name\": \"rt2\",\n#                 \"ttl\": 200,\n#                 \"version\": 3\n#             }\n#         ],\n#         \"interval_range\": 2,\n#         \"multicast_client\": \"224.0.0.1\",\n#         \"peers\": [\n#             {\n#                 \"peer\": \"78.44.194.186\"\n#             },\n#             {\n#                 \"key_id\": 10000,\n#                 \"peer\": \"172.44.194.186\",\n#                 \"prefer\": true,\n#                 \"version\": 3\n#             }\n#         ],\n#         \"servers\": [\n#             {\n#                 \"key_id\": 34,\n#                 \"prefer\": true,\n#                 \"routing_instance\": \"rt1\",\n#                 \"server\": \"48.46.194.186\",\n#                 \"version\": 2\n#             },\n#             {\n#                 \"key_id\": 34,\n#                 \"prefer\": true,\n#                 \"server\": \"48.45.194.186\",\n#                 \"version\": 2\n#             }\n#         ],\n#         \"source_addresses\": [\n#             {\n#                 \"routing_instance\": \"rt1\",\n#                 \"source_address\": \"172.45.194.186\"\n#             },\n#             {\n#                 \"routing_instance\": \"rt2\",\n#                 \"source_address\": \"171.45.194.186\"\n#             }\n#         ],\n#         \"threshold\": {\n#             \"action\": \"accept\",\n#             \"value\": 300\n#         },\n#         \"trusted_keys\": [\n#             {\"key_id\": 2000},\n#             {\"key_id\": 3000}\n#         ]\n#     },\n#     \"before\": {},\n#     \"changed\": true,\n#     \"commands\": [\n#           \"<nc:system xmlns:nc=\"urn:ietf:params:xml:ns:netconf:base:1.0\">\"\n#           \"<nc:ntp><nc:boot-server>78.46.194.186</nc:boot-server><nc:broadcast>\"\n#           \"<nc:name>172.16.255.255</nc:name><nc:key>50</nc:key><nc:routing-instance-name>rt1</nc:routing-instance-name>\"\n#           \"<nc:ttl>200</nc:ttl><nc:version>3</nc:version></nc:broadcast><nc:broadcast><nc:name>192.16.255.255</nc:name>\"\n#           \"<nc:key>50</nc:key><nc:routing-instance-name>rt2</nc:routing-instance-name><nc:ttl>200</nc:ttl>\"\n#           \"<nc:version>3</nc:version></nc:broadcast><nc:broadcast-client/><nc:interval-range>2</nc:interval-range>\"\n#           \"<nc:multicast-client>224.0.0.1</nc:multicast-client><nc:peer><nc:name>78.44.194.186</nc:name></nc:peer>\"\n#           \"<nc:peer><nc:name>172.44.194.186</nc:name><nc:key>10000</nc:key><nc:prefer/><nc:version>3</nc:version>\"\n#           \"</nc:peer><nc:server><nc:name>48.46.194.186</nc:name><nc:key>34</nc:key><nc:routing-instance>rt1</nc:routing-instance>\"\n#           \"<nc:prefer/><nc:version>2</nc:version></nc:server><nc:server><nc:name>48.45.194.186</nc:name><nc:key>34</nc:key>\"\n#           \"<nc:prefer/><nc:version>2</nc:version></nc:server><nc:source-address><nc:name>172.45.194.186</nc:name>\"\n#           \"<nc:routing-instance>rt1</nc:routing-instance></nc:source-address><nc:source-address>\"\n#           \"<nc:name>171.45.194.186</nc:name><nc:routing-instance>rt2</nc:routing-instance></nc:source-address>\"\n#           \"<nc:threshold><nc:value>300</nc:value><nc:action>accept</nc:action></nc:threshold>\"\n#           \"<nc:trusted-key>3000</nc:trusted-key><nc:trusted-key>2000</nc:trusted-key></nc:ntp></nc:system>\"\n#     ]\n# After state\n# -----------\n#\n# vagrant@vsrx# show system ntp\n# boot-server 78.46.194.186;\n# interval-range 2;\n# peer 78.44.194.186;\n# peer 172.44.194.186 key 10000 version 3 prefer; ## SECRET-DATA\n# server 48.46.194.186 key 34 version 2 prefer routing-instance rt1; ## SECRET-DATA\n# server 48.45.194.186 key 34 version 2 prefer; ## SECRET-DATA\n# broadcast 172.16.255.255 routing-instance-name rt1 key 50 version 3 ttl 200;\n# broadcast 192.16.255.255 routing-instance-name rt2 key 50 version 3 ttl 200;\n# broadcast-client;\n# multicast-client 224.0.0.1;\n# trusted-key [ 3000 2000 ];\n# threshold 300 action accept;\n# source-address 172.45.194.186 routing-instance rt1;\n# source-address 171.45.194.186 routing-instance rt2;\n#\n#\n# Using Replaced\n# Before state\n# ------------\n#\n# vagrant@vsrx# show system ntp\n# boot-server 78.46.194.186;\n# interval-range 2;\n# peer 78.44.194.186;\n# peer 172.44.194.186 key 10000 version 3 prefer; ## SECRET-DATA\n# server 48.46.194.186 key 34 version 2 prefer routing-instance rt1; ## SECRET-DATA\n# server 48.45.194.186 key 34 version 2 prefer; ## SECRET-DATA\n# broadcast 172.16.255.255 routing-instance-name rt1 key 50 version 3 ttl 200;\n# broadcast 192.16.255.255 routing-instance-name rt2 key 50 version 3 ttl 200;\n# broadcast-client;\n# multicast-client 224.0.0.1;\n# trusted-key [ 3000 2000 ];\n# threshold 300 action accept;\n# source-address 172.45.194.186 routing-instance rt1;\n# source-address 171.45.194.186 routing-instance rt2;\n\n- name: Replaced running ntp global configuration with provided configuration\n  junipernetworks.junos.junos_ntp_global:\n    config:\n      authentication_keys:\n        - id: 2\n          algorithm: 'md5'\n          key: 'asdfghd'\n        - id: 5\n          algorithm: 'sha1'\n          key: 'aasdad'\n      servers:\n        - server: \"48.46.194.186\"\n          key_id: 34\n          prefer: true\n          version: 2\n          routing_instance: 'rt1'\n        - server: \"48.45.194.186\"\n          key_id: 34\n          prefer: true\n          version: 2\n    state: replaced\n#\n# -------------------------\n# Module Execution Result\n# -------------------------\n#     \"after\": {\n#         \"authentication_keys\": [\n#             {\n#                 \"algorithm\": \"md5\",\n#                 \"id\": 2,\n#                 \"key\": \"$9$03aAB1hreW7NbO1rvMLVbgoJ\"\n#             },\n#             {\n#                 \"algorithm\": \"sha1\",\n#                 \"id\": 5,\n#                 \"key\": \"$9$DXiHmf5F/A0ZUjq.P3n\"\n#             }\n#         ],\n#         \"servers\": [\n#             {\n#                 \"key_id\": 34,\n#                 \"prefer\": true,\n#                 \"routing_instance\": \"rt1\",\n#                 \"server\": \"48.46.194.186\",\n#                 \"version\": 2\n#             },\n#             {\n#                 \"key_id\": 34,\n#                 \"prefer\": true,\n#                 \"server\": \"48.45.194.186\",\n#                 \"version\": 2\n#             }\n#         ]\n#     },\n#     \"before\": {\n#         \"boot_server\": \"78.46.194.186\",\n#         \"broadcast_client\": true,\n#         \"broadcasts\": [\n#             {\n#                 \"address\": \"172.16.255.255\",\n#                 \"key\": \"50\",\n#                 \"routing_instance_name\": \"rt1\",\n#                 \"ttl\": 200,\n#                 \"version\": 3\n#             },\n#             {\n#                 \"address\": \"192.16.255.255\",\n#                 \"key\": \"50\",\n#                 \"routing_instance_name\": \"rt2\",\n#                 \"ttl\": 200,\n#                 \"version\": 3\n#             }\n#         ],\n#         \"interval_range\": 2,\n#         \"multicast_client\": \"224.0.0.1\",\n#         \"peers\": [\n#             {\n#                 \"peer\": \"78.44.194.186\"\n#             },\n#             {\n#                 \"key_id\": 10000,\n#                 \"peer\": \"172.44.194.186\",\n#                 \"prefer\": true,\n#                 \"version\": 3\n#             }\n#         ],\n#         \"servers\": [\n#             {\n#                 \"key_id\": 34,\n#                 \"prefer\": true,\n#                 \"routing_instance\": \"rt1\",\n#                 \"server\": \"48.46.194.186\",\n#                 \"version\": 2\n#             },\n#             {\n#                 \"key_id\": 34,\n#                 \"prefer\": true,\n#                 \"server\": \"48.45.194.186\",\n#                 \"version\": 2\n#             }\n#         ],\n#         \"source_addresses\": [\n#             {\n#                 \"routing_instance\": \"rt1\",\n#                 \"source_address\": \"172.45.194.186\"\n#             },\n#             {\n#                 \"routing_instance\": \"rt2\",\n#                 \"source_address\": \"171.45.194.186\"\n#             }\n#         ],\n#         \"threshold\": {\n#             \"action\": \"accept\",\n#             \"value\": 300\n#         },\n#         \"trusted_keys\": [\n#             {\"key_id\": 2000},\n#             {\"key_id\": 3000}\n#         ]\n#     },\n#     \"changed\": true,\n#     \"commands\": [\n#             \"<nc:system xmlns:nc=\"urn:ietf:params:xml:ns:netconf:base:1.0\">\n#             \"<nc:ntp delete=\"delete\"/><nc:ntp><nc:authentication-key><nc:name>2</nc:name><nc:type>md5</nc:type>\n#             \"<nc:value>asdfghd</nc:value></nc:authentication-key><nc:authentication-key><nc:name>5</nc:name>\n#             \"<nc:type>sha1</nc:type><nc:value>aasdad</nc:value></nc:authentication-key><nc:server>\n#             \"<nc:name>48.46.194.186</nc:name><nc:key>34</nc:key><nc:routing-instance>rt1</nc:routing-instance>\n#             \"<nc:prefer/><nc:version>2</nc:version></nc:server><nc:server><nc:name>48.45.194.186</nc:name>\n#             \"<nc:key>34</nc:key><nc:prefer/><nc:version>2</nc:version></nc:server></nc:ntp></nc:system>\"\n#     ]\n# After state\n# -----------\n#\n# vagrant@vsrx# show system ntp\n# authentication-key 2 type md5 value \"$9$03aAB1hreW7NbO1rvMLVbgoJ\"; ## SECRET-DATA\n# authentication-key 5 type sha1 value \"$9$DXiHmf5F/A0ZUjq.P3n\"; ## SECRET-DATA\n# server 48.46.194.186 key 34 version 2 prefer routing-instance rt1; ## SECRET-DATA\n# server 48.45.194.186 key 34 version 2 prefer; ## SECRET-DATA\n\n# Using overridden\n#\n# Before state\n# ------------\n#\n# vagrant@vsrx# show system ntp\n# boot-server 78.46.194.186;\n# interval-range 2;\n# peer 78.44.194.186;\n# peer 172.44.194.186 key 10000 version 3 prefer; ## SECRET-DATA\n# server 48.46.194.186 key 34 version 2 prefer routing-instance rt1; ## SECRET-DATA\n# server 48.45.194.186 key 34 version 2 prefer; ## SECRET-DATA\n# broadcast 172.16.255.255 routing-instance-name rt1 key 50 version 3 ttl 200;\n# broadcast 192.16.255.255 routing-instance-name rt2 key 50 version 3 ttl 200;\n# broadcast-client;\n# multicast-client 224.0.0.1;\n# trusted-key [ 3000 2000 ];\n# threshold 300 action accept;\n# source-address 172.45.194.186 routing-instance rt1;\n# source-address 171.45.194.186 routing-instance rt2;\n\n- name: Override running ntp global configuration with provided configuration\n  junipernetworks.junos.junos_ntp_global:\n    config:\n      authentication_keys:\n        - id: 2\n          algorithm: 'md5'\n          key: 'asdfghd'\n        - id: 5\n          algorithm: 'sha1'\n          key: 'aasdad'\n      servers:\n        - server: \"48.46.194.186\"\n          key_id: 34\n          prefer: true\n          version: 2\n          routing_instance: 'rt1'\n        - server: \"48.45.194.186\"\n          key_id: 34\n          prefer: true\n          version: 2\n    state: overridden\n#\n# -------------------------\n# Module Execution Result\n# -------------------------\n#     \"after\": {\n#         \"authentication_keys\": [\n#             {\n#                 \"algorithm\": \"md5\",\n#                 \"id\": 2,\n#                 \"key\": \"$9$03aAB1hreW7NbO1rvMLVbgoJ\"\n#             },\n#             {\n#                 \"algorithm\": \"sha1\",\n#                 \"id\": 5,\n#                 \"key\": \"$9$DXiHmf5F/A0ZUjq.P3n\"\n#             }\n#         ],\n#         \"servers\": [\n#             {\n#                 \"key_id\": 34,\n#                 \"prefer\": true,\n#                 \"routing_instance\": \"rt1\",\n#                 \"server\": \"48.46.194.186\",\n#                 \"version\": 2\n#             },\n#             {\n#                 \"key_id\": 34,\n#                 \"prefer\": true,\n#                 \"server\": \"48.45.194.186\",\n#                 \"version\": 2\n#             }\n#         ]\n#     },\n#     \"before\": {\n#         \"boot_server\": \"78.46.194.186\",\n#         \"broadcast_client\": true,\n#         \"broadcasts\": [\n#             {\n#                 \"address\": \"172.16.255.255\",\n#                 \"key\": \"50\",\n#                 \"routing_instance_name\": \"rt1\",\n#                 \"ttl\": 200,\n#                 \"version\": 3\n#             },\n#             {\n#                 \"address\": \"192.16.255.255\",\n#                 \"key\": \"50\",\n#                 \"routing_instance_name\": \"rt2\",\n#                 \"ttl\": 200,\n#                 \"version\": 3\n#             }\n#         ],\n#         \"interval_range\": 2,\n#         \"multicast_client\": \"224.0.0.1\",\n#         \"peers\": [\n#             {\n#                 \"peer\": \"78.44.194.186\"\n#             },\n#             {\n#                 \"key_id\": 10000,\n#                 \"peer\": \"172.44.194.186\",\n#                 \"prefer\": true,\n#                 \"version\": 3\n#             }\n#         ],\n#         \"servers\": [\n#             {\n#                 \"key_id\": 34,\n#                 \"prefer\": true,\n#                 \"routing_instance\": \"rt1\",\n#                 \"server\": \"48.46.194.186\",\n#                 \"version\": 2\n#             },\n#             {\n#                 \"key_id\": 34,\n#                 \"prefer\": true,\n#                 \"server\": \"48.45.194.186\",\n#                 \"version\": 2\n#             }\n#         ],\n#         \"source_addresses\": [\n#             {\n#                 \"routing_instance\": \"rt1\",\n#                 \"source_address\": \"172.45.194.186\"\n#             },\n#             {\n#                 \"routing_instance\": \"rt2\",\n#                 \"source_address\": \"171.45.194.186\"\n#             }\n#         ],\n#         \"threshold\": {\n#             \"action\": \"accept\",\n#             \"value\": 300\n#         },\n#         \"trusted_keys\": [\n#             {\"key_id\": 2000},\n#             {\"key_id\": 3000}\n#         ]\n#     },\n#     \"changed\": true,\n#     \"commands\": [\n#             \"<nc:system xmlns:nc=\"urn:ietf:params:xml:ns:netconf:base:1.0\">\n#             \"<nc:ntp delete=\"delete\"/><nc:ntp><nc:authentication-key><nc:name>2</nc:name><nc:type>md5</nc:type>\n#             \"<nc:value>asdfghd</nc:value></nc:authentication-key><nc:authentication-key><nc:name>5</nc:name>\n#             \"<nc:type>sha1</nc:type><nc:value>aasdad</nc:value></nc:authentication-key><nc:server>\n#             \"<nc:name>48.46.194.186</nc:name><nc:key>34</nc:key><nc:routing-instance>rt1</nc:routing-instance>\n#             \"<nc:prefer/><nc:version>2</nc:version></nc:server><nc:server><nc:name>48.45.194.186</nc:name>\n#             \"<nc:key>34</nc:key><nc:prefer/><nc:version>2</nc:version></nc:server></nc:ntp></nc:system>\"\n#     ]\n# After state\n# -----------\n#\n# vagrant@vsrx# show system ntp\n# authentication-key 2 type md5 value \"$9$03aAB1hreW7NbO1rvMLVbgoJ\"; ## SECRET-DATA\n# authentication-key 5 type sha1 value \"$9$DXiHmf5F/A0ZUjq.P3n\"; ## SECRET-DATA\n# server 48.46.194.186 key 34 version 2 prefer routing-instance rt1; ## SECRET-DATA\n# server 48.45.194.186 key 34 version 2 prefer; ## SECRET-DATA\n#\n# Using deleted\n#\n# Before state\n# ------------\n#\n# vagrant@vsrx# show system ntp\n# authentication-key 2 type md5 value \"$9$03aAB1hreW7NbO1rvMLVbgoJ\"; ## SECRET-DATA\n# authentication-key 5 type sha1 value \"$9$DXiHmf5F/A0ZUjq.P3n\"; ## SECRET-DATA\n# server 48.46.194.186 key 34 version 2 prefer routing-instance rt1; ## SECRET-DATA\n# server 48.45.194.186 key 34 version 2 prefer; ## SECRET-DATA\n#\n- name: Delete running NTP global configuration\n  junipernetworks.junos.junos_ntp_global:\n    config:\n    state: deleted\n#\n# -------------------------\n# Module Execution Result\n# -------------------------\n#     \"after\": {},\n#     \"before\": {\n#         \"authentication_keys\": [\n#             {\n#                 \"algorithm\": \"md5\",\n#                 \"id\": 2,\n#                 \"key\": \"$9$03aAB1hreW7NbO1rvMLVbgoJ\"\n#             },\n#             {\n#                 \"algorithm\": \"sha1\",\n#                 \"id\": 5,\n#                 \"key\": \"$9$DXiHmf5F/A0ZUjq.P3n\"\n#             }\n#         ],\n#         \"servers\": [\n#             {\n#                 \"key_id\": 34,\n#                 \"prefer\": true,\n#                 \"routing_instance\": \"rt1\",\n#                 \"server\": \"48.46.194.186\",\n#                 \"version\": 2\n#             },\n#             {\n#                 \"key_id\": 34,\n#                 \"prefer\": true,\n#                 \"server\": \"48.45.194.186\",\n#                 \"version\": 2\n#             }\n#         ]\n#     },\n#     \"changed\": true,\n#     \"commands\": [\n#               \"<nc:system xmlns:nc=\"urn:ietf:params:xml:ns:netconf:base:1.0\">\"\n#               \"<nc:ntp delete=\"delete\"/></nc:system>\"\n#     ]\n# After state\n# -----------\n#\n# vagrant@vsrx# show system ntp\n#\n# [edit]\n# Using gathered\n#\n# Before state\n# ------------\n#\n# vagrant@vsrx# show system ntp\n# boot-server 78.46.194.186;\n# interval-range 2;\n# peer 78.44.194.186;\n# peer 172.44.194.186 key 10000 version 3 prefer; ## SECRET-DATA\n# server 48.46.194.186 key 34 version 2 prefer routing-instance rt1; ## SECRET-DATA\n# server 48.45.194.186 key 34 version 2 prefer; ## SECRET-DATA\n# broadcast 172.16.255.255 routing-instance-name rt1 key 50 version 3 ttl 200;\n# broadcast 192.16.255.255 routing-instance-name rt2 key 50 version 3 ttl 200;\n# broadcast-client;\n# multicast-client 224.0.0.1;\n# trusted-key [ 3000 2000 ];\n# threshold 300 action accept;\n# source-address 172.45.194.186 routing-instance rt1;\n# source-address 171.45.194.186 routing-instance rt2;\n- name: Gather running NTP global configuration\n  junipernetworks.junos.junos_ntp_global:\n    state: gathered\n#\n# -------------------------\n# Module Execution Result\n# -------------------------\n#     \"gathered\": {\n#         \"boot_server\": \"78.46.194.186\",\n#         \"broadcast_client\": true,\n#         \"broadcasts\": [\n#             {\n#                 \"address\": \"172.16.255.255\",\n#                 \"key\": \"50\",\n#                 \"routing_instance_name\": \"rt1\",\n#                 \"ttl\": 200,\n#                 \"version\": 3\n#             },\n#             {\n#                 \"address\": \"192.16.255.255\",\n#                 \"key\": \"50\",\n#                 \"routing_instance_name\": \"rt2\",\n#                 \"ttl\": 200,\n#                 \"version\": 3\n#             }\n#         ],\n#         \"interval_range\": 2,\n#         \"multicast_client\": \"224.0.0.1\",\n#         \"peers\": [\n#             {\n#                 \"peer\": \"78.44.194.186\"\n#             },\n#             {\n#                 \"key_id\": 10000,\n#                 \"peer\": \"172.44.194.186\",\n#                 \"prefer\": true,\n#                 \"version\": 3\n#             }\n#         ],\n#         \"servers\": [\n#             {\n#                 \"key_id\": 34,\n#                 \"prefer\": true,\n#                 \"routing_instance\": \"rt1\",\n#                 \"server\": \"48.46.194.186\",\n#                 \"version\": 2\n#             },\n#             {\n#                 \"key_id\": 34,\n#                 \"prefer\": true,\n#                 \"server\": \"48.45.194.186\",\n#                 \"version\": 2\n#             }\n#         ],\n#         \"source_addresses\": [\n#             {\n#                 \"routing_instance\": \"rt1\",\n#                 \"source_address\": \"172.45.194.186\"\n#             },\n#             {\n#                 \"routing_instance\": \"rt2\",\n#                 \"source_address\": \"171.45.194.186\"\n#             }\n#         ],\n#         \"threshold\": {\n#             \"action\": \"accept\",\n#             \"value\": 300\n#         },\n#         \"trusted_keys\": [\n#             {\"key_id\": 2000},\n#             {\"key_id\": 3000}\n#         ]\n#     },\n#     \"changed\": false,\n# Using rendered\n#\n# Before state\n# ------------\n#\n- name: Render xml for provided facts.\n  junipernetworks.junos.junos_ntp_global:\n    config:\n      boot_server: '78.46.194.186'\n      broadcasts:\n        - address: '172.16.255.255'\n          key: '50'\n          ttl: 200\n          version: 3\n          routing_instance_name: 'rt1'\n        - address: '192.16.255.255'\n          key: '50'\n          ttl: 200\n          version: 3\n          routing_instance_name: 'rt2'\n      broadcast_client: true\n      interval_range: 2\n      multicast_client: \"224.0.0.1\"\n      peers:\n        - peer: \"78.44.194.186\"\n        - peer: \"172.44.194.186\"\n          key_id: 10000\n          prefer: true\n          version: 3\n      servers:\n        - server: \"48.46.194.186\"\n          key_id: 34\n          prefer: true\n          version: 2\n          routing_instance: 'rt1'\n        - server: \"48.45.194.186\"\n          key_id: 34\n          prefer: true\n          version: 2\n      source_addresses:\n        - source_address: \"172.45.194.186\"\n          routing_instance: 'rt1'\n        - source_address: \"171.45.194.186\"\n          routing_instance: 'rt2'\n      threshold:\n        value: 300\n        action: \"accept\"\n      trusted_keys:\n        - 3000\n        - 2000\n    state: rendered\n#\n# -------------------------\n# Module Execution Result\n# -------------------------\n#     \"rendered\": [\n#           \"<nc:system xmlns:nc=\"urn:ietf:params:xml:ns:netconf:base:1.0\">\"\n#           \"<nc:ntp><nc:boot-server>78.46.194.186</nc:boot-server><nc:broadcast><nc:name>172.16.255.255</nc:name>\"\n#           \"<nc:key>50</nc:key><nc:routing-instance-name>rt1</nc:routing-instance-name><nc:ttl>200</nc:ttl>\"\n#           \"<nc:version>3</nc:version></nc:broadcast><nc:broadcast><nc:name>192.16.255.255</nc:name>\"\n#           \"<nc:key>50</nc:key><nc:routing-instance-name>rt2</nc:routing-instance-name>\"\n#           \"<nc:ttl>200</nc:ttl><nc:version>3</nc:version></nc:broadcast><nc:broadcast-client/>\"\n#           \"<nc:interval-range>2</nc:interval-range><nc:multicast-client>224.0.0.1</nc:multicast-client><nc:peer>\"\n#           \"<nc:name>78.44.194.186</nc:name></nc:peer><nc:peer><nc:name>172.44.194.186</nc:name>\"\n#           \"<nc:key>10000</nc:key><nc:prefer/><nc:version>3</nc:version></nc:peer><nc:server>\"\n#           \"<nc:name>48.46.194.186</nc:name><nc:key>34</nc:key><nc:routing-instance>rt1</nc:routing-instance>\"\n#           \"<nc:prefer/><nc:version>2</nc:version></nc:server><nc:server><nc:name>48.45.194.186</nc:name>\"\n#           \"<nc:key>34</nc:key><nc:prefer/><nc:version>2</nc:version></nc:server><nc:source-address>\"\n#           \"<nc:name>172.45.194.186</nc:name><nc:routing-instance>rt1</nc:routing-instance></nc:source-address>\"\n#           \"<nc:source-address><nc:name>171.45.194.186</nc:name><nc:routing-instance>rt2</nc:routing-instance>\"\n#           \"</nc:source-address><nc:threshold><nc:value>300</nc:value><nc:action>accept</nc:action></nc:threshold>\"\n#           \"<nc:trusted-key>3000</nc:trusted-key><nc:trusted-key>2000</nc:trusted-key></nc:ntp></nc:system>\"\n#     ]\n#\n# Using parsed\n# parsed.cfg\n# ------------\n# <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n# <rpc-reply message-id=\"urn:uuid:0cadb4e8-5bba-47f4-986e-72906227007f\">\n#     <configuration changed-seconds=\"1590139550\" changed-localtime=\"2020-05-22 09:25:50 UTC\">\n#         <version>18.4R1-S2.4</version>\n#         <system xmlns=\"http://yang.juniper.net/junos-es/conf/system\">\n#            <ntp>\n#               <authentication-key>\n#                  <name>2</name>\n#                  <type>md5</type>\n#                  <value>$9$GxDjqfT3CA0UjfzF6u0RhS</value>\n#               </authentication-key>\n#               <authentication-key>\n#                  <name>5</name>\n#                  <type>sha1</type>\n#                  <value>$9$ZsUDk.mT3/toJGiHqQz</value>\n#               </authentication-key>\n#           </ntp>\n#     </system>\n#     </configuration>\n# </rpc-reply>\n#\n- name: Parse NTP global running config\n  junipernetworks.junos.junos_ntp_global:\n    running_config: \"{{ lookup('file', './parsed.cfg') }}\"\n    state: parsed\n#\n#\n# -------------------------\n# Module Execution Result\n# -------------------------\n#\n#\n# \"parsed\":  {\n#         \"authentication_keys\": [\n#             {\n#                 \"algorithm\": \"md5\",\n#                 \"id\": 2,\n#                 \"key\": \"$9$GxDjqfT3CA0UjfzF6u0RhS\"\n#             },\n#             {\n#                 \"algorithm\": \"sha1\",\n#                 \"id\": 5,\n#                 \"key\": \"$9$ZsUDk.mT3/toJGiHqQz\"\n#             }\n#         ]\n#     }\n#\n#\n"
  },
  "junipernetworks.junos.junos_ospf_interfaces": {
    "doc": {
      "description": "This module manages OSPF(v2/v3) configuration of interfaces on devices running Juniper JUNOS.",
      "has_action": true,
      "notes": "This module requires the netconf system service be enabled on the device being managed.\nThis module works with connection C(netconf). See L(the Junos OS Platform Options,../network/user_guide/platform_junos.html).\nTested against JunOS v18.4R1",
      "options": {
        "config": {
          "aliases": [],
          "description": "A list of OSPF configuration for interfaces.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "address_family": {
              "aliases": [],
              "description": "OSPF settings on the interfaces in address-family context.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "afi": {
                  "aliases": [],
                  "description": "Address Family Identifier (AFI) for OSPF settings on the interfaces.",
                  "type": "str",
                  "required": true,
                  "choices": [
                    "ipv4",
                    "ipv6"
                  ],
                  "suboptions": {}
                },
                "processes": {
                  "aliases": [],
                  "description": "Interfaces configuration for an OSPF process.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "area": {
                      "aliases": [],
                      "description": "Specify the area-id",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "area_id": {
                          "aliases": [],
                          "description": "Specify area id.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "authentication": {
                      "aliases": [],
                      "description": "Specify authentication type",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "md5": {
                          "aliases": [],
                          "description": "Specify md5 based authentication.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "key_id": {
                              "aliases": [],
                              "description": "Specify md5 key-id",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            },
                            "key_value": {
                              "aliases": [],
                              "description": "Specify key value",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            },
                            "start_time": {
                              "aliases": [],
                              "description": "Specify start time for key transmission",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "simple_password": {
                          "aliases": [],
                          "description": "Specify password for authentication.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "bandwidth_based_metrics": {
                      "aliases": [],
                      "description": "Specify list of bandwidth based metrics",
                      "type": "list",
                      "required": false,
                      "elements": "dict",
                      "suboptions": {
                        "bandwidth": {
                          "aliases": [],
                          "description": "BW to apply metric to.",
                          "type": "str",
                          "required": false,
                          "choices": [
                            "1g",
                            "10g"
                          ],
                          "suboptions": {}
                        },
                        "metric": {
                          "aliases": [],
                          "description": "Specify metric",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "dead_interval": {
                      "aliases": [],
                      "description": "Dead interval (seconds).",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "demand_circuit": {
                      "aliases": [],
                      "description": "Interface functions as a demand circuit.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "flood_reduction": {
                      "aliases": [],
                      "description": "Enable flood reduction.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "hello_interval": {
                      "aliases": [],
                      "description": "Hello interval (seconds).",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "interface_type": {
                      "aliases": [],
                      "description": "Specify type of interface",
                      "type": "str",
                      "required": false,
                      "choices": [
                        "nbma",
                        "p2mp",
                        "p2p"
                      ],
                      "suboptions": {}
                    },
                    "ipsec_sa": {
                      "aliases": [],
                      "description": "IPSec security association name",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "metric": {
                      "aliases": [],
                      "description": "Metric applied to the interface.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "mtu": {
                      "aliases": [],
                      "description": "Maximum OSPF packet size",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "no_advertise_adjacency_segment": {
                      "aliases": [],
                      "description": "Do not advertise an adjacency segment for this interface.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "no_eligible_backup": {
                      "aliases": [],
                      "description": "Not eligible to backup traffic from protected interfaces.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "no_eligible_remote_backup": {
                      "aliases": [],
                      "description": "Not eligible for Remote-LFA backup traffic from protected interfaces.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "no_interface_state_traps": {
                      "aliases": [],
                      "description": "Do not send interface state change traps.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "no_neighbor_down_notification": {
                      "aliases": [],
                      "description": "Don't inform other protocols about neighbor down events.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "node_link_protection": {
                      "aliases": [],
                      "description": "Protect interface from both link and node faults.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "passive": {
                      "aliases": [],
                      "description": "Do not run OSPF, but advertise it.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "poll_interval": {
                      "aliases": [],
                      "description": "Poll interval (seconds).",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "priority": {
                      "aliases": [],
                      "description": "Priority for the interface.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "retransmit_interval": {
                      "aliases": [],
                      "description": "Retransmit interval (seconds).",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "secondary": {
                      "aliases": [],
                      "description": "Treat interface as secondary",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "te_metric": {
                      "aliases": [],
                      "description": "Traffic engineering metric applied to the interface.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "transit_delay": {
                      "aliases": [],
                      "description": "Transit delay (seconds).",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                }
              }
            },
            "name": {
              "aliases": [],
              "description": "Name/Identifier of the interface.",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "router_id": {
              "aliases": [],
              "description": "The OSPF router id.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "running_config": {
          "aliases": [],
          "description": "This option is used only with state I(parsed).\nThe value of this option should be the output received from the Junos device by executing the command B(show protocols ospf).\nThe state I(parsed) reads the configuration from C(running_config) option and transforms it into Ansible structured data as per the resource module's argspec and the value is then returned in the I(parsed) key within the result",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The state the configuration should be left in.",
          "default": "merged",
          "type": "str",
          "required": false,
          "choices": [
            "merged",
            "replaced",
            "overridden",
            "deleted",
            "parsed",
            "gathered",
            "rendered"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "ncclient (>=v0.6.4)",
        "xmltodict (>=0.12.0)"
      ],
      "short_description": "OSPF Interfaces Resource Module.",
      "version_added": "1.3.0"
    },
    "examples": "\n# Using merged\n#\n# Before state\n# ------------\n#\n# admin# show protocols ospf\n\n- name: Merge Junos OSPF interfaces config\n  junipernetworks.junos.junos_ospf_interfaces:\n    config:\n    - name: 'ge-0/0/2.0'\n      address_family:\n        - afi: 'ipv4'\n          processes:\n            area:\n              area_id: '0.0.0.2'\n            priority: 3\n            metric: 5\n    state: merged\n\n# After state\n# -----------\n#\n# admin# show protocols ospf\n# area 0.0.0.2 {\n#     interface ge-0/0/2.0 {\n#         metric 5;\n#         priority 3;\n#     }\n# }\n\n# Using replaced\n#\n# Before state\n# ------------\n#\n# admin# show protocols ospf\n# area 0.0.0.2 {\n#     interface ge-0/0/2.0 {\n#         metric 5;\n#         priority 3;\n#     }\n# }\n- name: Replace Junos OSPF interfaces config\n  junipernetworks.junos.junos_ospf_interfaces:\n   config:\n     - name: 'ge-0/0/2.0'\n       address_family:\n         - afi: 'ipv4'\n           processes:\n             area:\n               area_id: '0.0.0.1'\n             priority: 6\n             metric: 6\n   state: replaced\n\n# After state\n# -----------\n#\n# admin# show protocols ospf\n# area 0.0.0.1 {\n#     interface ge-0/0/2.0 {\n#         metric 6;\n#         priority 6;\n#     }\n# }\n\n# Using overridden\n#\n# Before state\n# ------------\n#\n# admin# show protocols ospf\n# area 0.0.0.3 {\n#     interface ge-0/0/3.0 {\n#         metric 5;\n#         priority 3;\n#     }\n# }\n# area 0.0.0.2 {\n#     interface ge-0/0/2.0 {\n#         metric 5;\n#         priority 3;\n#     }\n# }\n\n- name: Override Junos OSPF interfaces config\n  junipernetworks.junos.junos_ospf_interfaces:\n  config:\n    - name: 'ge-0/0/1.0'\n      address_family:\n        - afi: 'ipv4'\n          processes:\n            area:\n              area_id: '0.0.0.1'\n            priority: 3\n            metric: 5\n  state: overridden\n\n# After state\n# -----------\n#\n# admin# show protocols ospf\n# area 0.0.0.1 {\n#     interface ge-0/0/1.0 {\n#         metric 5;\n#         priority 3;\n#     }\n# }\n\n#\n# Using deleted\n#\n# Before state\n# ------------\n#\n# admin# show protocols ospf\n# area 0.0.0.1 {\n#     interface ge-0/0/1.0 {\n#         metric 5;\n#         priority 3;\n#     }\n# }\n\n- name: Delete Junos OSPF interfaces config\n  junipernetworks.junos.junos_ospf_interfaces:\n    config:\n      - name: 'ge-0/0/1.0'\n    state: deleted\n\n# After state\n# -----------\n#\n# admin# show protocols ospf\n# Using gathered\n#\n# Before state\n# ------------\n#\n# admin# show protocols ospf\n# area 0.0.0.3 {\n#     interface ge-0/0/3.0 {\n#         metric 5;\n#         priority 3;\n#     }\n# }\n# area 0.0.0.2 {\n#     interface ge-0/0/2.0 {\n#         metric 5;\n#         priority 3;\n#     }\n# }\n\n- name: Gather Junos OSPF interfaces config\n  junipernetworks.junos.junos_ospf_interfaces:\n    config:\n    state: gathered\n#\n#\n# -------------------------\n# Module Execution Result\n# -------------------------\n#\n#    \"gathered\": [\n#         {\n#             \"address_family\": [\n#                 {\n#                     \"afi\": \"ipv4\",\n#                     \"processes\": {\n#                         \"area\": {\n#                             \"area_id\": \"0.0.0.3\"\n#                         },\n#                         \"metric\": 5,\n#                         \"priority\": 3\n#                     }\n#                 }\n#             ],\n#             \"name\": \"ge-0/0/3.0\",\n#         },\n#         {\n#             \"address_family\": [\n#                 {\n#                     \"afi\": \"ipv4\",\n#                     \"processes\": {\n#                         \"area\": {\n#                             \"area_id\": \"0.0.0.2\"\n#                         },\n#                         \"metric\": 5,\n#                         \"priority\": 3\n#                     }\n#                 }\n#             ],\n#             \"name\": \"ge-0/0/2.0\",\n#         }\n#     ]\n#\n# Using rendered\n#\n#\n- name: Render the commands for provided  configuration\n  junipernetworks.junos.junos_ospf_interfaces:\n    config:\n    - name: 'ge-0/0/2.0'\n      address_family:\n        - afi: 'ipv4'\n          processes:\n            area:\n              area_id: '0.0.0.2'\n            priority: 3\n            metric: 5\n    state: rendered\n\n#\n#\n# -------------------------\n# Module Execution Result\n# -------------------------\n#\n#\n# \"rendered\": \"\n# <nc:protocols\n#     xmlns:nc=\"urn:ietf:params:xml:ns:netconf:base:1.0\">\n#     <nc:ospf>\n#         <nc:area>\n#             <nc:name>0.0.0.2</nc:name>\n#             <nc:interface>\n#                 <nc:name>ge-0/0/2.0</nc:name>\n#                 <nc:priority>3</nc:priority>\n#                 <nc:metric>5</nc:metric>\n#             </nc:interface>\n#         </nc:area>\n#     </nc:ospf>\n# </nc:protocols>\"\n#\n# Using parsed\n# parsed.cfg\n# ------------\n# <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n# <rpc-reply message-id=\"urn:uuid:0cadb4e8-5bba-47f4-986e-72906227007f\">\n#     <configuration changed-seconds=\"1590139550\" changed-localtime=\"2020-05-22 09:25:50 UTC\">\n#         <protocols>\n#             <ospf>\n#                 <area>\n#                     <name>0.0.0.2</name>\n#                     <stub>\n#                         <default-metric>200</default-metric>\n#                     </stub>\n#                     <interface>\n#                         <name>ge-0/0/2.0</name>\n#                         <metric>5</metric>\n#                         <priority>3</priority>\n#                     </interface>\n#                 </area>\n#             </ospf>\n#         </protocols>\n#         <routing-options>\n#             <router-id>10.200.16.75</router-id>\n#         </routing-options>\n#     </configuration>\n# </rpc-reply>\n\n\n- name: Parsed the device configuration to get output commands\n  junipernetworks.junos.junos_ospf_interfaces:\n    running_config: \"{{ lookup('file', './parsed.cfg') }}\"\n    state: parsed\n#\n#\n# -------------------------\n# Module Execution Result\n# -------------------------\n#\n#\n# \"parsed\": [\n#         {\n#             \"address_family\": [\n#                 {\n#                     \"afi\": \"ipv4\",\n#                     \"processes\": {\n#                         \"area\": {\n#                             \"area_id\": \"0.0.0.2\"\n#                         },\n#                         \"metric\": 5,\n#                         \"priority\": 3\n#                     }\n#                 }\n#             ],\n#             \"name\": \"ge-0/0/2.0\",\n#         }\n#     ]\n#\n"
  },
  "junipernetworks.junos.junos_ospfv2": {
    "doc": {
      "description": "This module manages global OSPFv2 configuration on devices running Juniper JUNOS.",
      "has_action": true,
      "notes": "This module requires the netconf system service be enabled on the device being managed.\nThis module works with connection C(netconf).\nSee L(the Junos OS Platform Options,https://docs.ansible.com/ansible/latest/network/user_guide/platform_junos.html).\nTested against JunOS v18.4R1",
      "options": {
        "config": {
          "aliases": [],
          "description": "A list of OSPFv2 process configuration.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "areas": {
              "aliases": [],
              "description": "A list of OSPFv2 areas' configuration.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "area_id": {
                  "aliases": [],
                  "description": "The Area ID as an integer or IP Address.",
                  "type": "str",
                  "required": true,
                  "suboptions": {}
                },
                "area_range": {
                  "aliases": [],
                  "description": "Configure an address range for the area.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "interfaces": {
                  "aliases": [],
                  "description": "List of interfaces in this area.",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "authentication": {
                      "aliases": [],
                      "description": "Specify authentication type",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "type": {
                          "aliases": [],
                          "description": "Type of authentication to use.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "bandwidth_based_metrics": {
                      "aliases": [],
                      "description": "Specify list of bandwidth based metrics",
                      "type": "list",
                      "required": false,
                      "elements": "dict",
                      "suboptions": {
                        "bandwidth": {
                          "aliases": [],
                          "description": "BW to apply metric to.",
                          "type": "str",
                          "required": false,
                          "choices": [
                            "1g",
                            "10g"
                          ],
                          "suboptions": {}
                        },
                        "metric": {
                          "aliases": [],
                          "description": "Specify metric",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "flood_reduction": {
                      "aliases": [],
                      "description": "Enable flood reduction.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "metric": {
                      "aliases": [],
                      "description": "Metric applied to the interface.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "name": {
                      "aliases": [],
                      "description": "Name of the interface.",
                      "type": "str",
                      "required": true,
                      "suboptions": {}
                    },
                    "passive": {
                      "aliases": [],
                      "description": "Specify passive",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "priority": {
                      "aliases": [],
                      "description": "Priority for the interface.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "timers": {
                      "aliases": [],
                      "description": "Specify timers",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "dead_interval": {
                          "aliases": [],
                          "description": "Dead interval (seconds).",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "hello_interval": {
                          "aliases": [],
                          "description": "Hello interval (seconds).",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "poll_interval": {
                          "aliases": [],
                          "description": "Poll interval (seconds).",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "retransmit_interval": {
                          "aliases": [],
                          "description": "Retransmit interval (seconds).",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "transit_delay": {
                          "aliases": [],
                          "description": "Transit delay (seconds).",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    }
                  }
                },
                "stub": {
                  "aliases": [],
                  "description": "Settings for configuring the area as a stub.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "default_metric": {
                      "aliases": [],
                      "description": "Metric for the default route in this area.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "set": {
                      "aliases": [],
                      "description": "Configure the area as a stub.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                }
              }
            },
            "external_preference": {
              "aliases": [],
              "description": "Preference of external routes.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "overload": {
              "aliases": [],
              "description": "Specify time for overload mode reset",
              "type": "dict",
              "required": false,
              "suboptions": {
                "timeout": {
                  "aliases": [],
                  "description": "Time after which overload mode is reset (seconds).",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "preference": {
              "aliases": [],
              "description": "Preference of internal routes.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "prefix_export_limit": {
              "aliases": [],
              "description": "Maximum number of external prefixes that can be exported.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "reference_bandwidth": {
              "aliases": [],
              "description": "Bandwidth for calculating metric defaults.",
              "type": "str",
              "required": false,
              "choices": [
                "1g",
                "10g"
              ],
              "suboptions": {}
            },
            "rfc1583compatibility": {
              "aliases": [],
              "description": "Set RFC1583 compatibility",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "router_id": {
              "aliases": [],
              "description": "The OSPFv2 router id.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "spf_options": {
              "aliases": [],
              "description": "Configure options for SPF.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "delay": {
                  "aliases": [],
                  "description": "Time to wait before running an SPF (seconds).",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "holddown": {
                  "aliases": [],
                  "description": "Time to hold down before running an SPF (seconds).",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "rapid_runs": {
                  "aliases": [],
                  "description": "Number of maximum rapid SPF runs before holddown (seconds).",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                }
              }
            }
          }
        },
        "running_config": {
          "aliases": [],
          "description": "This option is used only with state I(parsed).\nThe value of this option should be the output received from the Junos device by executing the command B(show protocols ospf.\nThe state I(parsed) reads the configuration from C(running_config) option and transforms it into Ansible structured data as per the resource module's argspec and the value is then returned in the I(parsed) key within the result",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The state the configuration should be left in.",
          "default": "merged",
          "type": "str",
          "required": false,
          "choices": [
            "merged",
            "replaced",
            "overridden",
            "deleted",
            "gathered",
            "rendered",
            "parsed"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "ncclient (>=v0.6.4)",
        "xmltodict (>=0.12.0)"
      ],
      "short_description": "OSPFv2 resource module",
      "version_added": "1.0.0"
    },
    "examples": "\n# Using merged\n#\n# Before state\n# ------------\n#\n# admin# show protocols ospf\n\n- name: Merge Junos OSPFv2 config\n  junipernetworks.junos.junos_ospfv2:\n    config:\n    - reference_bandwidth: 10g\n      areas:\n      - area_id: 0.0.0.100\n        area_range: 10.200.16.0/24\n        stub:\n          default_metric: 100\n          set: true\n        interfaces:\n        - name: so-0/0/0.0\n          priority: 3\n          metric: 5\n          flood_reduction: false\n          passive: true\n          bandwidth_based_metrics:\n          - bandwidth: 1g\n            metric: 5\n          - bandwidth: 10g\n            metric: 40\n          timers:\n            dead_interval: 4\n            hello_interval: 2\n            poll_interval: 2\n            retransmit_interval: 2\n      rfc1583compatibility: false\n    state: merged\n\n# After state\n# -----------\n#\n# admin# show protocols ospf\n# reference-bandwidth 10g;\n# no-rfc-1583;\n# area 0.0.0.100 {\n#     stub default-metric 100;\n#     area-range 10.200.16.0/24;\n#     interface so-0/0/0.0 {\n#         passive;\n#         bandwidth-based-metrics {\n#             bandwidth 1g metric 5;\n#             bandwidth 10g metric 40;\n#         }\n#         metric 5;\n#         priority 3;\n#         retransmit-interval 2;\n#         hello-interval 2;\n#         dead-interval 4;\n#         poll-interval 2;\n#     }\n# }\n\n"
  },
  "junipernetworks.junos.junos_ospfv3": {
    "doc": {
      "description": "This module manages global OSPFv3 configuration on devices running Juniper JUNOS.",
      "has_action": true,
      "notes": "This module requires the netconf system service be enabled on the device being managed.\nThis module works with connection C(netconf). See L(the Junos OS Platform Options,../network/user_guide/platform_junos.html).\nTested against JunOS v18.4R1",
      "options": {
        "config": {
          "aliases": [],
          "description": "A list of OSPFv3 process configuration.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "areas": {
              "aliases": [],
              "description": "A list of OSPFv3 areas' configuration.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "area_id": {
                  "aliases": [],
                  "description": "The Area ID as an integer or IP Address.",
                  "type": "str",
                  "required": true,
                  "suboptions": {}
                },
                "area_range": {
                  "aliases": [],
                  "description": "Configure an address range for the area.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "interfaces": {
                  "aliases": [],
                  "description": "List of interfaces in this area.",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "authentication": {
                      "aliases": [],
                      "description": "Specify authentication type",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "type": {
                          "aliases": [],
                          "description": "Type of authentication to use.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "bandwidth_based_metrics": {
                      "aliases": [],
                      "description": "Specify list of bandwidth based metrics",
                      "type": "list",
                      "required": false,
                      "elements": "dict",
                      "suboptions": {
                        "bandwidth": {
                          "aliases": [],
                          "description": "BW to apply metric to.",
                          "type": "str",
                          "required": false,
                          "choices": [
                            "1g",
                            "10g"
                          ],
                          "suboptions": {}
                        },
                        "metric": {
                          "aliases": [],
                          "description": "Specify metric",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "flood_reduction": {
                      "aliases": [],
                      "description": "Enable flood reduction.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "metric": {
                      "aliases": [],
                      "description": "Metric applied to the interface.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "name": {
                      "aliases": [],
                      "description": "Name of the interface.",
                      "type": "str",
                      "required": true,
                      "suboptions": {}
                    },
                    "passive": {
                      "aliases": [],
                      "description": "Specify passive",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "priority": {
                      "aliases": [],
                      "description": "Priority for the interface.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "timers": {
                      "aliases": [],
                      "description": "Specify timers",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "dead_interval": {
                          "aliases": [],
                          "description": "Dead interval (seconds).",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "hello_interval": {
                          "aliases": [],
                          "description": "Hello interval (seconds).",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "poll_interval": {
                          "aliases": [],
                          "description": "Poll interval (seconds).",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "retransmit_interval": {
                          "aliases": [],
                          "description": "Retransmit interval (seconds).",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "transit_delay": {
                          "aliases": [],
                          "description": "Transit delay (seconds).",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    }
                  }
                },
                "stub": {
                  "aliases": [],
                  "description": "Settings for configuring the area as a stub.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "default_metric": {
                      "aliases": [],
                      "description": "Metric for the default route in this area.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "set": {
                      "aliases": [],
                      "description": "Configure the area as a stub.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                }
              }
            },
            "external_preference": {
              "aliases": [],
              "description": "Preference of external routes.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "overload": {
              "aliases": [],
              "description": "Specify time for overload mode reset",
              "type": "dict",
              "required": false,
              "suboptions": {
                "timeout": {
                  "aliases": [],
                  "description": "Time after which overload mode is reset (seconds).",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "preference": {
              "aliases": [],
              "description": "Preference of internal routes.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "prefix_export_limit": {
              "aliases": [],
              "description": "Maximum number of external prefixes that can be exported.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "reference_bandwidth": {
              "aliases": [],
              "description": "Bandwidth for calculating metric defaults.",
              "type": "str",
              "required": false,
              "choices": [
                "1g",
                "10g"
              ],
              "suboptions": {}
            },
            "rfc1583compatibility": {
              "aliases": [],
              "description": "Set RFC1583 compatibility",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "router_id": {
              "aliases": [],
              "description": "The OSPFv3 router id.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "spf_options": {
              "aliases": [],
              "description": "Configure options for SPF.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "delay": {
                  "aliases": [],
                  "description": "Time to wait before running an SPF (seconds).",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "holddown": {
                  "aliases": [],
                  "description": "Time to hold down before running an SPF (seconds).",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "rapid_runs": {
                  "aliases": [],
                  "description": "Number of maximum rapid SPF runs before holddown (seconds).",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                }
              }
            }
          }
        },
        "running_config": {
          "aliases": [],
          "description": "This option is used only with state I(parsed).\nThe value of this option should be the output received from the Junos device by executing the command B(show protocols ospf.\nThe state I(parsed) reads the configuration from C(running_config) option and transforms it into Ansible structured data as per the resource module's argspec and the value is then returned in the I(parsed) key within the result",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The state the configuration should be left in.",
          "default": "merged",
          "type": "str",
          "required": false,
          "choices": [
            "merged",
            "replaced",
            "overridden",
            "deleted",
            "gathered",
            "rendered",
            "parsed"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "ncclient (>=v0.6.4)",
        "xmltodict (>=0.12.0)"
      ],
      "short_description": "OSPFv3 resource module",
      "version_added": "1.2.0"
    },
    "examples": "\n# Using merged\n#\n# Before state\n# ------------\n#\n# admin# show protocols ospf3\n\n- name: Merge Junos OSPFv3 config\n  junipernetworks.junos.junos_ospfv3:\n    config:\n    - areas:\n        - area_id: 0.0.0.100\n          stub:\n            default_metric: 200\n            set: true\n          interfaces:\n            - name: so-0/0/0.0\n              priority: 3\n              metric: 5\n    state: merged\n\n# After state\n# -----------\n#\n# adimn# show protocols ospf3\n# area 0.0.0.100 {\n#     stub default-metric 200;\n#     interface so-0/0/0.0 {\n#         metric 5;\n#         priority 3;\n#     }\n# }\n# Using replaced\n#\n# Before state\n# ------------\n#\n# adimn# show protocols ospf3\n# area 0.0.0.100 {\n#     stub default-metric 200;\n#     interface so-0/0/0.0 {\n#         metric 5;\n#         priority 3;\n#     }\n# }\n- name: Replace Junos OSPFv3 config\n  junipernetworks.junos.junos_ospfv3:\n   config:\n     - areas:\n         - area_id: 0.0.0.100\n           interfaces:\n             - name: so-0/0/0.0\n   state: replaced\n\n# After state\n# -----------\n#\n# admin# show protocols ospf3\n# area 0.0.0.100 {\n#     interface so-0/0/0.0;\n# }\n# Using overridden\n#\n# Before state\n# ------------\n#\n# admin# show protocols ospf3\n# area 0.0.0.100 {\n#     interface so-0/0/0.0;\n# }\n- name: Override Junos OSPFv3 config\n  junipernetworks.junos.junos_ospfv3:\n  config:\n    - areas:\n        - area_id: 0.0.0.100\n          stub:\n            default_metric: 200\n            set: true\n          interfaces:\n            - name: so-0/0/0.0\n              priority: 3\n              metric: 5\n              flood_reduction: true\n              passive: true\n        - area_id: 0.0.0.200\n          interfaces:\n            - name: ge-1/1/0.0\n            - name: ge-2/2/0.0\n  state: overridden\n\n# After state\n# -----------\n#\n# admin# show protocols ospf3\n# area 0.0.0.100 {\n#     stub default-metric 200;\n#     interface so-0/0/0.0 {\n#         passive;\n#         metric 5;\n#         priority 3;\n#         flood-reduction;\n#     }\n# }\n# area 0.0.0.200 {\n#     interface ge-1/1/0.0;\n#     interface ge-2/2/0.0;\n# }\n#\n# Using deleted\n#\n# Before state\n# ------------\n#\n# adimn# show protocols ospf3\n# area 0.0.0.100 {\n#     stub default-metric 200;\n#     interface so-0/0/0.0 {\n#         metric 5;\n#         priority 3;\n#     }\n# }\n\n- name: Delete Junos OSPFv3 config\n  junipernetworks.junos.junos_ospfv3:\n    config:\n      - areas:\n          - area_id: 0.0.0.100\n            interfaces:\n              - name: so-0/0/0.0\n    state: deleted\n\n# After state\n# -----------\n#\n# admin# show protocols ospf3\n# Using gathered\n#\n# Before state\n# ------------\n#\n# adimn# show protocols ospf3\n# area 0.0.0.100 {\n#     stub default-metric 200;\n#     interface so-0/0/0.0 {\n#         passive;\n#         metric 5;\n#         priority 3;\n#         flood-reduction;\n#     }\n# }\n# area 0.0.0.200 {\n#     interface ge-1/1/0.0;\n#     interface ge-2/2/0.0;\n# }\n\n- name: Gather Junos OSPFv3 config\n  junipernetworks.junos.junos_ospfv3:\n    config:\n    state: gathered\n#\n#\n# -------------------------\n# Module Execution Result\n# -------------------------\n#\n#    \"gathered\": {\n#             \"areas\": [\n#                 {\n#                     \"area_id\": \"0.0.0.100\",\n#                     \"interfaces\": [\n#                         {\n#                             \"flood_reduction\": true,\n#                             \"metric\": 5,\n#                             \"name\": \"so-0/0/0.0\",\n#                             \"passive\": true,\n#                             \"priority\": 3\n#                         }\n#                     ],\n#                     \"stub\": {\n#                         \"default_metric\": 200,\n#                         \"set\": true\n#                     }\n#                 },\n#                 {\n#                     \"area_id\": \"0.0.0.200\",\n#                     \"interfaces\": [\n#                         {\n#                             \"name\": \"ge-1/1/0.0\"\n#                         },\n#                         {\n#                             \"name\": \"ge-2/2/0.0\"\n#                         }\n#                     ]\n#                 }\n#             ],\n#         }\n#\n# Using rendered\n#\n#\n- name: Render the commands for provided  configuration\n  junipernetworks.junos.junos_ospfv3:\n    config:\n    - areas:\n        - area_id: 0.0.0.100\n          stub:\n            default_metric: 200\n            set: true\n          interfaces:\n            - name: so-0/0/0.0\n              priority: 3\n              metric: 5\n              flood_reduction: true\n              passive: true\n        - area_id: 0.0.0.200\n          interfaces:\n            - name: ge-1/1/0.0\n            - name: ge-2/2/0.0\n    state: rendered\n\n#\n#\n# -------------------------\n# Module Execution Result\n# -------------------------\n#\n#\n# \"rendered\": \"\n# <nc:protocols\n#     xmlns:nc=\"urn:ietf:params:xml:ns:netconf:base:1.0\">\n#     <nc:ospf3>\n#         <nc:area>\n#             <nc:name>0.0.0.100</nc:name>\n#             <nc:interface>\n#                 <nc:name>so-0/0/0.0</nc:name>\n#                 <nc:priority>3</nc:priority>\n#                 <nc:flood-reduction/>\n#                 <nc:metric>5</nc:metric>\n#                 <nc:passive/>\n#             </nc:interface>\n#             <nc:stub>\n#                 <nc:default-metric>200</nc:default-metric>\n#             </nc:stub>\n#         </nc:area>\n#         <nc:area>\n#             <nc:name>0.0.0.200</nc:name>\n#             <nc:interface>\n#                 <nc:name>ge-1/1/0.0</nc:name>\n#             </nc:interface>\n#             <nc:interface>\n#                 <nc:name>ge-2/2/0.0</nc:name>\n#             </nc:interface>\n#         </nc:area>\n#     </nc:ospf3>\n# </nc:protocols>\"\n#\n# Using parsed\n# parsed.cfg\n# ------------\n# <rpc-reply xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\" xmlns:junos=\"http://xml.juniper.net/junos/18.4R1/junos\">\n# <data>\n# <configuration xmlns=\"http://xml.juniper.net/xnm/1.1/xnm\"\n#      junos:commit-seconds=\"1601355317\" junos:commit-localtime=\"2020-09-29 04:55:17 UTC\" junos:commit-user=\"rohit\">\n#     <version>18.4R1-S2.4</version>\n#     <interfaces>\n#         <interface>\n#             <name>ge-0/0/0</name>\n#             <description>Configured by Ansi-Team</description>\n#         </interface>\n#         <interface>\n#             <name>gr-0/0/0</name>\n#             <description>Configured Manually</description>\n#         </interface>\n#         <interface>\n#             <name>fxp0</name>\n#             <unit>\n#                 <name>0</name>\n#                 <family>\n#                     <inet>\n#                         <dhcp>\n#                         </dhcp>\n#                     </inet>\n#                 </family>\n#             </unit>\n#         </interface>\n#     </interfaces>\n#     <protocols>\n#         <ospf3>\n#             <area>\n#                 <name>0.0.0.100</name>\n#                 <stub>\n#                     <default-metric>200</default-metric>\n#                 </stub>\n#                 <interface>\n#                     <name>so-0/0/0.0</name>\n#                     <passive>\n#                     </passive>\n#                     <metric>5</metric>\n#                     <priority>3</priority>\n#                     <flood-reduction/>\n#                 </interface>\n#             </area>\n#             <area>\n#                 <name>0.0.0.200</name>\n#                 <interface>\n#                     <name>ge-1/1/0.0</name>\n#                 </interface>\n#                 <interface>\n#                     <name>ge-2/2/0.0</name>\n#                 </interface>\n#             </area>\n#         </ospf3>\n#     </protocols>\n#     <routing-options>\n#         <router-id>10.200.16.75</router-id>\n#     </routing-options>\n# </configuration>\n# <database-status-information>\n# <database-status>\n# <user>rohit</user>\n# <terminal>pts/0</terminal>\n# <pid>38210</pid>\n# <start-time junos:seconds=\"1601354977\">2020-09-29 04:49:37 UTC</start-time>\n# <idle-time junos:seconds=\"546\">00:09:06</idle-time>\n# <edit-path>[edit]</edit-path>\n# </database-status>\n# </database-status-information>\n# </data>\n# </rpc-reply>\n\n- name: Parsed the device configuration to get output commands\n  junipernetworks.junos.junos_ospfv3:\n    running_config: \"{{ lookup('file', './parsed.cfg') }}\"\n    state: parsed\n#\n#\n# -------------------------\n# Module Execution Result\n# -------------------------\n#\n#\n# \"parsed\": [\n#         {\n#             \"areas\": [\n#                 {\n#                     \"area_id\": \"0.0.0.100\",\n#                     \"interfaces\": [\n#                         {\n#                             \"flood_reduction\": true,\n#                             \"metric\": 5,\n#                             \"name\": \"so-0/0/0.0\",\n#                             \"passive\": true,\n#                             \"priority\": 3\n#                         }\n#                     ],\n#                     \"stub\": {\n#                         \"default_metric\": 200,\n#                         \"set\": true\n#                     }\n#                 },\n#                 {\n#                     \"area_id\": \"0.0.0.200\",\n#                     \"interfaces\": [\n#                         {\n#                             \"name\": \"ge-1/1/0.0\"\n#                         },\n#                         {\n#                             \"name\": \"ge-2/2/0.0\"\n#                         }\n#                     ]\n#                 }\n#             ],\n#         }\n#     ]\n#\n"
  },
  "junipernetworks.junos.junos_package": {
    "doc": {
      "description": "This module can install new and updated packages on remote devices running Junos.  The module will compare the specified package with the one running on the remote device and install the specified version if there is a mismatch",
      "has_action": true,
      "notes": "This module requires the netconf system service be enabled on the remote device being managed.\nTested against vSRX JUNOS version 15.1X49-D15.4, vqfx-10000 JUNOS Version 15.1X53-D60.4.\nWorks with C(local) connections only.\nSince this module uses junos-eznc to establish connection with junos device the netconf configuration parameters needs to be passed using module options for example C(ssh_config) unlike other junos modules that uses C(netconf) connection type.\nFor information on using CLI and netconf see the :ref:`Junos OS Platform Options guide <junos_platform_options>`\nFor more information on using Ansible to manage network devices see the :ref:`Ansible Network Guide <network_guide>`\nFor more information on using Ansible to manage Juniper network devices see U(https://www.ansible.com/ansible-juniper).",
      "options": {
        "force": {
          "aliases": [],
          "description": "The I(force) argument instructs the module to bypass the package version check and install the packaged identified in I(src) on the remote device.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "force_host": {
          "aliases": [],
          "description": "The I(force_host) argument controls the way software package or bundle is added on remote JUNOS host and is applicable for JUNOS QFX5100 device. If the value is set to C(True) it will ignore any warnings while adding the host software package or bundle.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "issu": {
          "aliases": [],
          "description": "The I(issu) argument is a boolean flag when set to C(True) allows unified in-service software upgrade (ISSU) feature which enables you to upgrade between two different Junos OS releases with no disruption on the control plane and with minimal disruption of traffic.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "no_copy": {
          "aliases": [],
          "description": "The I(no_copy) argument is responsible for instructing the remote device on where to install the package from.  When enabled, the package is transferred to the remote device prior to installing.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "B(Deprecated)\nStarting with Ansible 2.5 we recommend using C(connection: network_cli) or C(connection: netconf).\nFor more information please see the L(Junos OS Platform Options guide, ../network/user_guide/platform_junos.html).\nHORIZONTALLINE\nA dict object containing connection details.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "host": {
              "aliases": [],
              "description": "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [],
              "description": "Specifies the password to use to authenticate the connection to the remote device.   This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "port": {
              "aliases": [],
              "description": "Specifies the port to use when building the connection to the remote device.  The port value will default to the well known SSH port of 22 (for C(transport=cli)) or port 830 (for C(transport=netconf)) device.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "ssh_keyfile": {
              "aliases": [],
              "description": "Specifies the SSH key to use to authenticate the connection to the remote device.   This value is the path to the key used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead.",
              "type": "path",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "netconf",
              "type": "str",
              "required": false,
              "choices": [
                "cli",
                "netconf"
              ],
              "suboptions": {}
            },
            "username": {
              "aliases": [],
              "description": "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "reboot": {
          "aliases": [],
          "description": "In order for a package to take effect, the remote device must be restarted.  When enabled, this argument will instruct the module to reboot the device once the updated package has been installed. If disabled or the remote package does not need to be changed, the device will not be started.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "src": {
          "aliases": [
            "package"
          ],
          "description": "The I(src) argument specifies the path to the source package to be installed on the remote device in the advent of a version mismatch. The I(src) argument can be either a localized path or a full path to the package file to install.",
          "type": "path",
          "required": true,
          "suboptions": {}
        },
        "ssh_config": {
          "aliases": [],
          "description": "The C(ssh_config) argument is path to the SSH configuration file. This can be used to load SSH information from a configuration file. If this option is not given by default ~/.ssh/config is queried.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "ssh_private_key_file": {
          "aliases": [],
          "description": "The C(ssh_private_key_file) argument is path to the SSH private key file. This can be used if you need to provide a private key rather than loading the key into the ssh-key-ring/environment",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "validate": {
          "aliases": [],
          "description": "The I(validate) argument is responsible for instructing the remote device to skip checking the current device configuration compatibility with the package being installed. When set to false validation is not performed.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "version": {
          "aliases": [],
          "description": "The I(version) argument can be used to explicitly specify the version of the package that should be installed on the remote device.  If the I(version) argument is not specified, then the version is extracts from the I(src) filename.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "junos-eznc",
        "ncclient (>=v0.5.2)"
      ],
      "short_description": "Installs packages on remote devices running Junos",
      "version_added": "1.0.0"
    },
    "examples": "\n# the required set of connection arguments have been purposely left off\n# the examples for brevity\n\n- name: install local package on remote device\n  junipernetworks.junos.junos_package:\n    src: junos-vsrx-12.1X46-D10.2-domestic.tgz\n\n- name: install local package on remote device without rebooting\n  junipernetworks.junos.junos_package:\n    src: junos-vsrx-12.1X46-D10.2-domestic.tgz\n    reboot: no\n\n- name: install local package on remote device with jumpost\n  junipernetworks.junos.junos_package:\n    src: junos-vsrx-12.1X46-D10.2-domestic.tgz\n    ssh_config: /home/user/customsshconfig\n"
  },
  "junipernetworks.junos.junos_ping": {
    "doc": {
      "description": "Tests reachability using ping from devices running Juniper JUNOS to a remote destination.\nTested against Junos (17.3R1.10)\nFor a general purpose network module, see the M(ansible.netcommon.net_ping) module.\nFor Windows targets, use the M(ansible.windows.win_ping) module instead.\nFor targets running Python, use the M(ansible.builtin.ping) module instead.",
      "has_action": true,
      "notes": "For a general purpose network module, see the M(ansible.netcommon.net_ping) module.\nFor Windows targets, use the M(ansible.windows.win_ping) module instead.\nFor targets running Python, use the M(ansible.builtin.ping) module instead.\nThis module works only with connection C(network_cli).\nFor information on using CLI and netconf see the :ref:`Junos OS Platform Options guide <junos_platform_options>`\nFor more information on using Ansible to manage network devices see the :ref:`Ansible Network Guide <network_guide>`\nFor more information on using Ansible to manage Juniper network devices see U(https://www.ansible.com/ansible-juniper).",
      "options": {
        "count": {
          "aliases": [],
          "description": "Number of packets to send to check reachability.",
          "default": "5",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "dest": {
          "aliases": [],
          "description": "The IP Address or hostname (resolvable by the device) of the remote node.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "df_bit": {
          "aliases": [],
          "description": "Determines whether to set the DF bit.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "interface": {
          "aliases": [],
          "description": "The source interface to use while sending the ping packet(s).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "interval": {
          "aliases": [],
          "description": "Determines the interval (in seconds) between consecutive pings.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "B(Deprecated)\nStarting with Ansible 2.5 we recommend using C(connection: network_cli) or C(connection: netconf).\nFor more information please see the L(Junos OS Platform Options guide, ../network/user_guide/platform_junos.html).\nHORIZONTALLINE\nA dict object containing connection details.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "host": {
              "aliases": [],
              "description": "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [],
              "description": "Specifies the password to use to authenticate the connection to the remote device.   This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "port": {
              "aliases": [],
              "description": "Specifies the port to use when building the connection to the remote device.  The port value will default to the well known SSH port of 22 (for C(transport=cli)) or port 830 (for C(transport=netconf)) device.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "ssh_keyfile": {
              "aliases": [],
              "description": "Specifies the SSH key to use to authenticate the connection to the remote device.   This value is the path to the key used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead.",
              "type": "path",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "netconf",
              "type": "str",
              "required": false,
              "choices": [
                "cli",
                "netconf"
              ],
              "suboptions": {}
            },
            "username": {
              "aliases": [],
              "description": "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "rapid": {
          "aliases": [],
          "description": "Determines whether to send the packets rapidly.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "size": {
          "aliases": [],
          "description": "Determines the size (in bytes) of the ping packet(s).",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "source": {
          "aliases": [],
          "description": "The IP Address to use while sending the ping packet(s).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Determines if the expected result is success or fail.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "ttl": {
          "aliases": [],
          "description": "The time-to-live value for the ICMP packet(s).",
          "type": "int",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Tests reachability using ping from devices running Juniper JUNOS",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Test reachability to 10.10.10.10\n  junipernetworks.junos.junos_ping:\n    dest: 10.10.10.10\n\n- name: Test reachability to 10.20.20.20 using source and size set\n  junipernetworks.junos.junos_ping:\n    dest: 10.20.20.20\n    size: 1024\n    ttl: 128\n\n- name: Test unreachability to 10.30.30.30 using interval\n  junipernetworks.junos.junos_ping:\n    dest: 10.30.30.30\n    interval: 3\n    state: absent\n\n- name: Test reachability to 10.40.40.40 setting count and interface\n  junipernetworks.junos.junos_ping:\n    dest: 10.40.40.40\n    interface: fxp0\n    count: 20\n    size: 512\n\n- name: Test reachability to 10.50.50.50 using do-not-fragment and rapid\n  junipernetworks.junos.junos_ping:\n    dest: 10.50.50.50\n    df_bit: True\n    rapid: True\n"
  },
  "junipernetworks.junos.junos_prefix_lists": {
    "doc": {
      "description": "Manage prefix-lists attributes of interfaces on Junos network devices.",
      "has_action": true,
      "notes": "This module requires the netconf system service be enabled on the device being managed.\nThis module works with connection C(netconf).\nSee L(the Junos OS Platform Options,https://docs.ansible.com/ansible/latest/network/user_guide/platform_junos.html).\nTested against JunOS v18.4R1",
      "options": {
        "config": {
          "aliases": [],
          "description": "The provided link BGP address family dictionary.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "address_prefixes": {
              "aliases": [],
              "description": "Specify address prefixes.",
              "type": "list",
              "required": false,
              "elements": "str",
              "suboptions": {}
            },
            "dynamic_db": {
              "aliases": [],
              "description": "Enable object to exist in dynamic DB.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "name": {
              "aliases": [],
              "description": "Specify the name of the prefix-list.",
              "type": "str",
              "required": true,
              "suboptions": {}
            }
          }
        },
        "running_config": {
          "aliases": [],
          "description": "This option is used only with state I(parsed).\nThe value of this option should be the output received from the Junos device by executing the command B(show policy-options).\nThe state I(parsed) reads the configuration from C(running_config) option and transforms it into Ansible structured data as per the resource module's argspec and the value is then returned in the I(parsed) key within the result",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The state the configuration should be left in.",
          "default": "merged",
          "type": "str",
          "required": false,
          "choices": [
            "merged",
            "replaced",
            "overridden",
            "deleted",
            "parsed",
            "gathered",
            "rendered"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "ncclient (>=v0.6.4)",
        "xmltodict (>=0.12.0)"
      ],
      "short_description": "Manage prefix-lists attributes of interfaces on Junos devices.",
      "version_added": "2.1.0"
    },
    "examples": "\n# Using merged\n#\n# Before state\n# ------------\n#\n# vagrant@vsrx# show policy-options\n#\n# [edit]\n\n- name: Merge Junos prefix  lists\n  junipernetworks.junos.junos_prefix_lists:\n    config:\n      - name: Internal\n        address_prefixes:\n          - 172.16.1.32\n          - 172.16.3.32\n      - name: Test1\n        dynamic_db: true\n      - name: Test2\n        address_prefixes:\n          - 172.16.2.32\n          - 172.16.7.32\n          - 172.16.9.32\n    state: merged\n#\n# -------------------------\n# Module Execution Result\n# -------------------------\n#\n#    \"before\": []\n#    \"commands\": [\n#         \"<nc:policy-options xmlns:nc=\"urn:ietf:params:xml:ns:netconf:base:1.0\">\n#         \"<nc:prefix-list><nc:name>Internal</nc:name><nc:prefix-list-item><nc:name>172.16.1.32</nc:name>\"\n#         \"</nc:prefix-list-item><nc:prefix-list-item><nc:name>172.16.3.32</nc:name>\"\n#         \"</nc:prefix-list-item></nc:prefix-list><nc:prefix-list><nc:name>Test1</nc:name>\"\n#         \"<nc:dynamic-db/></nc:prefix-list><nc:prefix-list><nc:name>Test2</nc:name>\"\n#         \"<nc:prefix-list-item><nc:name>172.16.2.32</nc:name></nc:prefix-list-item>\"\n#         \"<nc:prefix-list-item><nc:name>172.16.7.32</nc:name></nc:prefix-list-item>\"\n#         \"<nc:prefix-list-item><nc:name>172.16.9.32</nc:name></nc:prefix-list-item>\"\n#         \"</nc:prefix-list></nc:policy-options>\"\n#     ]\n#\n# \"after\": [\n#         {\n#             \"address_prefixes\": [\n#                 \"172.16.1.32/32\",\n#                 \"172.16.3.32/32\"\n#             ],\n#             \"name\": \"Internal\"\n#         },\n#         {\n#             \"dynamic_db\": true,\n#             \"name\": \"Test1\"\n#         },\n#         {\n#             \"address_prefixes\": [\n#                 \"172.16.2.32/32\",\n#                 \"172.16.7.32/32\",\n#                 \"172.16.9.32/32\"\n#             ],\n#             \"name\": \"Test2\"\n#         }\n#     ]\n# After state\n# -----------\n#\n# vagrant@vsrx# show policy-options\n# prefix-list Internal {\n#     172.16.1.32/32;\n#     172.16.3.32/32;\n# }\n# prefix-list Test1 {\n#     dynamic-db;\n# }\n# prefix-list Test2 {\n#     172.16.2.32/32;\n#     172.16.7.32/32;\n#     172.16.9.32/32;\n# }\n#\n# Using gathered\n#\n# Before state\n# ------------\n#\n# vagrant@vsrx# show policy-options\n# prefix-list Internal {\n#     172.16.1.32/32;\n#     172.16.3.32/32;\n# }\n# prefix-list Test1 {\n#     dynamic-db;\n# }\n# prefix-list Test2 {\n#     172.16.2.32/32;\n#     172.16.7.32/32;\n#     172.16.9.32/32;\n# }\n\n- name: Gather Junos prefix-lists\n  junipernetworks.junos.junos_prefix_lists:\n    state: gathered\n#\n#\n# -------------------------\n# Module Execution Result\n# -------------------------\n#\n#    \"gathered\": [\n#         {\n#             \"address_prefixes\": [\n#                 \"172.16.1.32/32\",\n#                 \"172.16.3.32/32\"\n#             ],\n#             \"name\": \"Internal\"\n#         },\n#         {\n#             \"dynamic_db\": true,\n#             \"name\": \"Test1\"\n#         },\n#         {\n#             \"address_prefixes\": [\n#                 \"172.16.2.32/32\",\n#                 \"172.16.7.32/32\",\n#                 \"172.16.9.32/32\"\n#             ],\n#             \"name\": \"Test2\"\n#         }\n#     ]\n#\n# Using replaced\n#\n# Before state\n# ------------\n#\n# vagrant@vsrx# show policy-options\n# prefix-list Internal {\n#     172.16.1.32/32;\n#     172.16.3.32/32;\n# }\n# prefix-list Test1 {\n#     dynamic-db;\n# }\n# prefix-list Test2 {\n#     172.16.2.32/32;\n#     172.16.7.32/32;\n#     172.16.9.32/32;\n# }\n- name: Replace existing Junos prefix-lists configuration with provided config\n  junipernetworks.junos.junos_prefix_lists:\n   config:\n     - name: Test2\n       address_prefixes:\n         - 172.16.4.32\n         - 172.16.8.32\n         - 172.16.9.32\"\n   state: replaced\n# -------------------------\n# Module Execution Result\n# -------------------------\n#\n#    \"before\": [\n#         {\n#             \"address_prefixes\": [\n#                 \"172.16.1.32/32\",\n#                 \"172.16.3.32/32\"\n#             ],\n#             \"name\": \"Internal\"\n#         },\n#         {\n#             \"dynamic_db\": true,\n#             \"name\": \"Test1\"\n#         },\n#         {\n#             \"address_prefixes\": [\n#                 \"172.16.2.32/32\",\n#                 \"172.16.7.32/32\",\n#                 \"172.16.9.32/32\"\n#             ],\n#             \"name\": \"Test2\"\n#         }\n#     ]\n#    \"commands\": [\n#         \"<nc:policy-options xmlns:nc=\"urn:ietf:params:xml:ns:netconf:base:1.0\">\n#         \"<nc:prefix-list delete=\"delete\"><nc:name>Test2</nc:name></nc:prefix-list>\"\n#         \"<nc:prefix-list><nc:name>Test2</nc:name><nc:prefix-list-item><nc:name>172.16.4.32</nc:name>\"\n#         \"</nc:prefix-list-item><nc:prefix-list-item><nc:name>172.16.8.32</nc:name>\"\n#         \"</nc:prefix-list-item><nc:prefix-list-item><nc:name>172.16.9.32</nc:name>\"\n#         \"</nc:prefix-list-item></nc:prefix-list></nc:policy-options>\"\n#     ]\n#\n# \"after\": [\n#         {\n#             \"address_prefixes\": [\n#                 \"172.16.1.32/32\",\n#                 \"172.16.3.32/32\"\n#             ],\n#             \"name\": \"Internal\"\n#         },\n#         {\n#             \"dynamic_db\": true,\n#             \"name\": \"Test1\"\n#         },\n#         {\n#             \"address_prefixes\": [\n#                 \"172.16.4.32/32\",\n#                 \"172.16.8.32/32\",\n#                 \"172.16.9.32/32\"\n#             ],\n#             \"name\": \"Test2\"\n#         }\n#     ]\n# After state\n# -----------\n#\n# vagrant@vsrx# show policy-options\n# prefix-list Internal {\n#     172.16.1.32/32;\n#     172.16.3.32/32;\n# }\n# prefix-list Test1 {\n#     dynamic-db;\n# }\n# prefix-list Test2 {\n#     172.16.4.32/32;\n#     172.16.8.32/32;\n#     172.16.9.32/32;\n# }\n# Using overridden\n#\n# Before state\n# ------------\n#\n# vagrant@vsrx# show policy-options\n# prefix-list Internal {\n#     172.16.1.32/32;\n#     172.16.3.32/32;\n# }\n# prefix-list Test1 {\n#     dynamic-db;\n# }\n# prefix-list Test2 {\n#     172.16.4.32/32;\n#     172.16.8.32/32;\n#     172.16.9.32/32;\n# }\n- name: Override Junos prefix-lists configuration with provided configuration\n  junipernetworks.junos.junos_prefix_lists:\n   config:\n     - name: Test2\n       address_prefixes:\n         - 172.16.4.32/28\n         - 172.16.8.32/28\n         - 172.16.9.32/28\n   state: overridden\n\n# -------------------------\n# Module Execution Result\n# -------------------------\n#\n#    \"before\": [\n#         {\n#             \"address_prefixes\": [\n#                 \"172.16.1.32/32\",\n#                 \"172.16.3.32/32\"\n#             ],\n#             \"name\": \"Internal\"\n#         },\n#         {\n#             \"dynamic_db\": true,\n#             \"name\": \"Test1\"\n#         },\n#         {\n#             \"address_prefixes\": [\n#                 \"172.16.4.32/32\",\n#                 \"172.16.8.32/32\",\n#                 \"172.16.9.32/32\"\n#             ],\n#             \"name\": \"Test2\"\n#         }\n#     ]\n#    \"commands\": [\n#         \"<nc:policy-options xmlns:nc=\"urn:ietf:params:xml:ns:netconf:base:1.0\">\n#         \"<nc:prefix-list delete=\"delete\"><nc:name>Internal</nc:name>\"\n#         \"</nc:prefix-list><nc:prefix-list delete=\"delete\"><nc:name>Test1</nc:name>\"\n#         \"</nc:prefix-list><nc:prefix-list delete=\"delete\"><nc:name>Test2</nc:name>\"\n#         \"</nc:prefix-list><nc:prefix-list><nc:name>Test2</nc:name><nc:prefix-list-item>\"\n#         \"<nc:name>172.16.4.32/28</nc:name></nc:prefix-list-item><nc:prefix-list-item>\"\n#         \"<nc:name>172.16.8.32/28</nc:name></nc:prefix-list-item><nc:prefix-list-item>\"\n#         \"<nc:name>172.16.9.32/28</nc:name></nc:prefix-list-item></nc:prefix-list></nc:policy-options>\"\n#     ]\n#\n# \"after\": [\n#         {\n#             \"address_prefixes\": [\n#                 \"172.16.4.32/28\",\n#                 \"172.16.8.32/28\",\n#                 \"172.16.9.32/28\"\n#             ],\n#             \"name\": \"Test2\"\n#         }\n#     ]\n# After state\n# -----------\n#\n# vagrant@vsrx# show policy-options\n# prefix-list Test2 {\n#     172.16.4.32/28;\n#     172.16.8.32/28;\n#     172.16.9.32/28;\n# }\n# Using deleted\n#\n# Before state\n# ------------\n#\n# vagrant@vsrx# show policy-options\n# prefix-list Internal {\n#     172.16.1.32/32;\n#     172.16.3.32/32;\n# }\n# prefix-list Test1 {\n#     dynamic-db;\n# }\n# prefix-list Test2 {\n#     172.16.2.32/32;\n#     172.16.7.32/32;\n#     172.16.9.32/32;\n# }\n\n- name: Delete provided prefix-lists\n  junipernetworks.junos.junos_prefix_lists:\n   config:\n     - name: \"Test1\"\n     - name: \"Test2\"\n   state: deleted\n# ------------------------\n# Module Execution Results\n# ------------------------\n#\n#    \"before\": [\n#         {\n#             \"address_prefixes\": [\n#                 \"172.16.1.32/32\",\n#                 \"172.16.3.32/32\"\n#             ],\n#             \"name\": \"Internal\"\n#         },\n#         {\n#             \"dynamic_db\": true,\n#             \"name\": \"Test1\"\n#         },\n#         {\n#             \"address_prefixes\": [\n#                 \"172.16.2.32/32\",\n#                 \"172.16.7.32/32\",\n#                 \"172.16.9.32/32\"\n#             ],\n#             \"name\": \"Test2\"\n#         }\n#     ]\n#    \"commands\": [\n#         \"<nc:policy-options xmlns:nc=\"urn:ietf:params:xml:ns:netconf:base:1.0\">\n#         \"<nc:prefix-list delete=\"delete\"><nc:name>Test1</nc:name></nc:prefix-list>\"\n#         \"<nc:prefix-list delete=\"delete\"><nc:name>Test2</nc:name></nc:prefix-list></nc:policy-options>\"\n#     ]\n#\n# \"after\": [\n#         {\n#             \"address_prefixes\": [\n#                 \"172.16.1.32/32\",\n#                 \"172.16.3.32/32\"\n#             ],\n#             \"name\": \"Internal\"\n#         }\n#     ]\n# After state\n# -----------\n#\n# vagrant@vsrx# show policy-options\n# prefix-list Internal {\n#     172.16.1.32/32;\n#     172.16.3.32/32;\n# }\n#\n# Using deleted without specifying config\n#\n# Before state\n# ------------\n#\n# vagrant@vsrx# show policy-options\n# prefix-list Internal {\n#     172.16.1.32/32;\n#     172.16.3.32/32;\n# }\n# prefix-list Test1 {\n#     dynamic-db;\n# }\n# prefix-list Test2 {\n#     172.16.2.32/32;\n#     172.16.7.32/32;\n#     172.16.9.32/32;\n# }\n\n- name: Delete complete Junos prefix-lists configuration\n  junipernetworks.junos.junos_prefix_lists:\n   state: deleted\n\n# ------------------------\n# Module Execution Results\n# ------------------------\n#\n#    \"before\": [\n#         {\n#             \"address_prefixes\": [\n#                 \"172.16.1.32/32\",\n#                 \"172.16.3.32/32\"\n#             ],\n#             \"name\": \"Internal\"\n#         },\n#         {\n#             \"dynamic_db\": true,\n#             \"name\": \"Test1\"\n#         },\n#         {\n#             \"address_prefixes\": [\n#                 \"172.16.2.32/32\",\n#                 \"172.16.7.32/32\",\n#                 \"172.16.9.32/32\"\n#             ],\n#             \"name\": \"Test2\"\n#         }\n#     ]\n#    \"commands\": [\"<nc:policy-options xmlns:nc=\"urn:ietf:params:xml:ns:netconf:base:1.0\">\n#                 \"<nc:prefix-list delete=\"delete\"/></nc:policy-options>\"\n#                ]\n#\n# \"after\": []\n# After state\n# -----------\n#\n# vagrant@vsrx# show policy-options\n#\n# [edit]\n\n#\n# Using parsed\n# parsed.cfg\n# ------------\n# <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n# <rpc-reply message-id=\"urn:uuid:0cadb4e8-5bba-47f4-986e-72906227007f\">\n#     <configuration changed-seconds=\"1590139550\" changed-localtime=\"2020-05-22 09:25:50 UTC\">\n#         <version>18.4R1-S2.4</version>\n#         <policy-options>\n#         <prefix-list>\n#             <name>64510</name>\n#         </prefix-list>\n#         <prefix-list>\n#             <name>64500</name>\n#             <dynamic-db/>\n#             <prefix-list-item>\n#                 <name>172.16.1.16/28</name>\n#             </prefix-list-item>\n#             <prefix-list-item>\n#                 <name>172.16.1.32/28</name>\n#             </prefix-list-item>\n#         </prefix-list>\n#     </policy-options>\n#     </configuration>\n# </rpc-reply>\n- name: Parse running prefix-lists configuration\n  junipernetworks.junos.junos_prefix_lists:\n    running_config: \"{{ lookup('file', './parsed.cfg') }}\"\n    state: parsed\n#\n#\n# -------------------------\n# Module Execution Result\n# -------------------------\n#\n#\n# \"parsed\":  [\n#         {\n#             \"name\": \"64510\"\n#         },\n#         {\n#             \"address_prefixes\": [\n#                 \"172.16.1.16/28\",\n#                 \"172.16.1.32/28\"\n#             ],\n#             \"dynamic_db\": true,\n#             \"name\": \"64500\"\n#         }\n#     ]\n#\n#\n# Using rendered\n#\n- name: Render the xml for provided  configuration\n  junipernetworks.junos.junos_prefix_lists:\n    config:\n      - name: Internal\n        address_prefixes:\n          - 172.16.1.32\n          - 172.16.3.32\n      - name: Test1\n        dynamic_db: true\n      - name: Test2\n        address_prefixes:\n          - 172.16.2.32\n          - 172.16.7.32\n          - 172.16.9.32\n    state: rendered\n#\n#\n# -------------------------\n# Module Execution Result\n# -------------------------\n#\n#\n# \"rendered\": \"<nc:policy-options xmlns:nc=\"urn:ietf:params:xml:ns:netconf:base:1.0\">\n#             \"<nc:prefix-list><nc:name>Internal</nc:name><nc:prefix-list-item><nc:name>172.16.1.32</nc:name>\"\n#             \"</nc:prefix-list-item><nc:prefix-list-item><nc:name>172.16.3.32</nc:name></nc:prefix-list-item>\"\n#             \"</nc:prefix-list><nc:prefix-list><nc:name>Test1</nc:name><nc:dynamic-db/></nc:prefix-list>\"\n#             \"<nc:prefix-list><nc:name>Test2</nc:name><nc:prefix-list-item><nc:name>172.16.2.32</nc:name>\"\n#             \"</nc:prefix-list-item><nc:prefix-list-item><nc:name>172.16.7.32</nc:name></nc:prefix-list-item>\"\n#             \"<nc:prefix-list-item><nc:name>172.16.9.32</nc:name></nc:prefix-list-item>\"\n#             \"</nc:prefix-list></nc:policy-options>\"\n"
  },
  "junipernetworks.junos.junos_routing_instances": {
    "doc": {
      "description": "Manage routing instances on Junos network devices.",
      "has_action": true,
      "notes": "This module requires the netconf system service be enabled on the device being managed.\nThis module works with connection C(netconf). See L(the Junos OS Platform Options,../network/user_guide/platform_junos.html).\nTested against JunOS v18.4R1",
      "options": {
        "config": {
          "aliases": [],
          "description": "The provided Routing instance configuration list.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "connector_id_advertise": {
              "aliases": [],
              "description": "Advertise connector-id attribute.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "description": {
              "aliases": [],
              "description": "Specify text description of routing instance.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "egress_protection": {
              "aliases": [],
              "description": "Egress instance protection dictionary.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "context_identifier": {
                  "aliases": [],
                  "description": "Specify context identifier.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "protector": {
                  "aliases": [],
                  "description": "Enable Edge Protector functionality for this VPN.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "instance_role": {
              "aliases": [],
              "description": "Primary role of L2Backhaul-vpn router.",
              "type": "str",
              "required": false,
              "choices": [
                "access",
                "nni"
              ],
              "suboptions": {}
            },
            "interfaces": {
              "aliases": [],
              "description": "Interface name for this routing instance.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "name": {
                  "aliases": [],
                  "description": "Specify name of the interface.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "protect_interface": {
                  "aliases": [],
                  "description": "Specify name of the protected interface.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "l2vpn_id": {
              "aliases": [],
              "description": "Layer-2 vpn-id for this instance.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "name": {
              "aliases": [],
              "description": "Specify routing instance name.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_irb_layer_2_copy": {
              "aliases": [],
              "description": "Disable transmission of layer-2 copy of packets of irb routing-interface.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "no_local_switching": {
              "aliases": [],
              "description": "Disable vlan id normalization for interfaces.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "no_normalization": {
              "aliases": [],
              "description": "Disable vlan id normalization for interfaces.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "no_vrf_advertise": {
              "aliases": [],
              "description": "Disable vlan id normalization for interfaces.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "no_vrf_propagate_ttl": {
              "aliases": [],
              "description": "Disable TTL propagation from IP to MPLS (on push) and MPLS to IP (on pop).",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "qualified_bum_pruning_mode": {
              "aliases": [],
              "description": "Enable BUM pruning for VPLS instance.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "route_distinguisher": {
              "aliases": [],
              "description": "Route distinguisher for this instance",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "routing_interface": {
              "aliases": [],
              "description": "Routing interface name for this routing-instance.",
              "type": "list",
              "required": false,
              "elements": "str",
              "suboptions": {}
            },
            "type": {
              "aliases": [],
              "description": "Specify instance type.",
              "type": "str",
              "required": false,
              "choices": [
                "evpn",
                "evpn-vpws",
                "forwarding",
                "l2backhaul-vpn",
                "l2vpn",
                "layer2-control",
                "mpls-forwarding",
                "mpls-internet-multicast",
                "no-forwarding",
                "virtual-router",
                "vpls",
                "vrf"
              ],
              "suboptions": {}
            },
            "vrf_exports": {
              "aliases": [],
              "description": "Export policy for VRF instance RIBs.",
              "type": "list",
              "required": false,
              "elements": "str",
              "suboptions": {}
            },
            "vrf_imports": {
              "aliases": [],
              "description": "Import policy for VRF instance RIBs.",
              "type": "list",
              "required": false,
              "elements": "str",
              "suboptions": {}
            }
          }
        },
        "running_config": {
          "aliases": [],
          "description": "This option is used only with state I(parsed).\nThe value of this option should be the output received from the Junos device by executing the command B(show routing-instances).\nThe state I(parsed) reads the configuration from C(running_config) option and transforms it into Ansible structured data as per the resource module's argspec and the value is then returned in the I(parsed) key within the result",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The state the configuration should be left in.",
          "default": "merged",
          "type": "str",
          "required": false,
          "choices": [
            "merged",
            "replaced",
            "overridden",
            "deleted",
            "parsed",
            "gathered",
            "rendered"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "ncclient (>=v0.6.4)",
        "xmltodict (>=0.12.0)"
      ],
      "short_description": "Manage routing instances on Junos devices.",
      "version_added": "2.1.0"
    },
    "examples": "\n# Using merged\n#\n# Before state\n# ------------\n#\n# admin# show routing-instances\n#\n# [edit]\n# vagrant@vsrx# show policy-options\n# policy-statement test-policy {\n#     term t1 {\n#         then reject;\n#     }\n# }\n# policy-statement test-policy-1 {\n#     term t1 {\n#         then reject;\n#     }\n# }\n\n- name: Merge Junos BGP address family configuration\n  junipernetworks.junos.junos_routing_instances:\n    config:\n      - name: \"test\"\n        type: \"vrf\"\n        route_distinguisher: \"10.58.255.1:37\"\n        vrf_imports:\n          - \"test-policy\"\n        vrf_exports:\n          - \"test-policy\"\n          - \"test-policy-1\"\n        interfaces:\n          - name: \"sp-0/0/0.0\"\n          - name: \"gr-0/0/0.0\"\n        connector_id_advertise: true\n      - name: \"forwardinst\"\n        type: \"forwarding\"\n        description: \"Configured by Ansible Content Team\"\n    state: merged\n#\n# -------------------------\n# Module Execution Result\n# -------------------------\n#\n# After state\n# -----------\n#\n# admin# show routing-instances\n# forwardinst {\n#     description \"Configured by Ansible Content Team\";\n#     instance-type forwarding;\n# }\n# test {\n#     instance-type vrf;\n#     interface gr-0/0/0.0; ## 'gr-0/0/0.0' is not defined\n#     interface sp-0/0/0.0; ## 'sp-0/0/0.0' is not defined\n#     route-distinguisher 10.58.255.1:37;\n#     vrf-import test-policy;\n#     vrf-export [ test-policy test-policy-1 ];\n#     connector-id-advertise;\n# }\n#\n# Using gathered\n#\n# Before state\n# ------------\n#\n# admin# show routing-instances\n#\n# [edit]\n# admin# show routing-instances\n# forwardinst {\n#     description \"Configured by Ansible Content Team\";\n#     instance-type forwarding;\n# }\n# test {\n#     instance-type vrf;\n#     interface gr-0/0/0.0; ## 'gr-0/0/0.0' is not defined\n#     interface sp-0/0/0.0; ## 'sp-0/0/0.0' is not defined\n#     route-distinguisher 10.58.255.1:37;\n#     vrf-import test-policy;\n#     vrf-export [ test-policy test-policy-1 ];\n#     connector-id-advertise;\n# }\n- name: Gather Junos routing-instances\n  junipernetworks.junos.junos_routing_instances:\n    state: gathered\n#\n#\n# -------------------------\n# Module Execution Result\n# -------------------------\n#\n#    \"gathered\": [\n#         {\n#             \"description\": \"Configured by Ansible Content Team\",\n#             \"name\": \"forwardinst\",\n#             \"type\": \"forwarding\"\n#         },\n#         {\n#             \"connector_id_advertise\": true,\n#             \"interfaces\": [\n#                 {\n#                     \"name\": \"gr-0/0/0.0\"\n#                 },\n#                 {\n#                     \"name\": \"sp-0/0/0.0\"\n#                 }\n#             ],\n#             \"name\": \"test\",\n#             \"route_distinguisher\": \"10.58.255.1:37\",\n#             \"type\": \"vrf\",\n#             \"vrf_exports\": [\n#                 \"test-policy\",\n#                 \"test-policy-1\"\n#             ],\n#             \"vrf_imports\": [\n#                 \"test-policy\"\n#             ]\n#         }\n#     ]\n#\n# Using replaced\n#\n# Before state\n# ------------\n#\n# admin# show routing-instances\n# forwardinst {\n#     description \"Configured by Ansible Content Team\";\n#     instance-type forwarding;\n# }\n# test {\n#     instance-type vrf;\n#     interface gr-0/0/0.0; ## 'gr-0/0/0.0' is not defined\n#     interface sp-0/0/0.0; ## 'sp-0/0/0.0' is not defined\n#     route-distinguisher 10.58.255.1:37;\n#     vrf-import test-policy;\n#     vrf-export [ test-policy test-policy-1 ];\n#     connector-id-advertise;\n# }\n\n- name: Replace existing Junos routing instance config with provided config\n  junipernetworks.junos.junos_routing_instances:\n   config:\n     address_family:\n       - name: \"test\"\n         type: \"vrf\"\n         route_distinguisher: \"10.57.255.1:37\"\n         vrf_imports:\n           - \"test-policy\"\n         vrf_exports:\n           - \"test-policy\"\n         interfaces:\n           - name: \"sp-0/0/0.0\"\n           - name: \"gr-0/0/0.0\"\n         connector_id_advertise: false\n         description: \"Configured by Ansible Content Team\"\n   state: replaced\n\n# After state\n# -----------\n#\n# admin@vsrx# show routing-instances\n# forwardinst {\n#     description \"Configured by Ansible Content Team\";\n#     instance-type forwarding;\n# }\n# test {\n#     description \"Configured by Ansible Content Team\";\n#     instance-type vrf;\n#     interface gr-0/0/0.0; ## 'gr-0/0/0.0' is not defined\n#     interface sp-0/0/0.0; ## 'sp-0/0/0.0' is not defined\n#     route-distinguisher 10.57.255.1:37;\n#     vrf-import test-policy;\n#     vrf-export test-policy;\n# }\n\n# Using overridden\n#\n# Before state\n# ------------\n#\n# admin@vsrx# show routing-instances\n# forwardinst {\n#     description \"Configured by Ansible Content Team\";\n#     instance-type forwarding;\n# }\n# test {\n#     description \"Configured by Ansible Content Team\";\n#     instance-type vrf;\n#     interface gr-0/0/0.0; ## 'gr-0/0/0.0' is not defined\n#     interface sp-0/0/0.0; ## 'sp-0/0/0.0' is not defined\n#     route-distinguisher 10.57.255.1:37;\n#     vrf-import test-policy;\n#     vrf-export test-policy;\n# }\n\n- name: Override Junos routing-instances configuration\n  junipernetworks.junos.junos_routing_instances:\n   config:\n     - name: \"test\"\n       type: \"vrf\"\n       route_distinguisher: \"10.58.255.1:37\"\n       vrf_imports:\n         - \"test-policy\"\n       vrf_exports:\n         - \"test-policy\"\n         - \"test-policy-1\"\n       interfaces:\n         - name: \"sp-0/0/0.0\"\n         - name: \"gr-0/0/0.0\"\n       connector_id_advertise: true\n     - name: \"forwardinst\"\n       type: \"forwarding\"\n       description: \"Configured by Ansible Content Team\"\n     - name: \"vtest1\"\n       type: \"virtual-router\"\n   state: overridden\n\n# After state\n# -----------\n#\n# admin@vsrx# show routing-instances\n# forwardinst {\n#     description \"Configured by Ansible Content Team\";\n#     instance-type forwarding;\n# }\n# test {\n#     instance-type vrf;\n#     interface gr-0/0/0.0; ## 'gr-0/0/0.0' is not defined\n#     interface sp-0/0/0.0; ## 'sp-0/0/0.0' is not defined\n#     route-distinguisher 10.58.255.1:37;\n#     vrf-import test-policy;\n#     vrf-export [ test-policy test-policy-1 ];\n#     connector-id-advertise;\n# }\n# vtest1 {\n#     instance-type virtual-router;\n# }\n\n\n# Using deleted\n#\n# Before state\n# ------------\n#\n# admin@vsrx# show routing-instances\n# forwardinst {\n#     description \"Configured by Ansible Content Team\";\n#     instance-type forwarding;\n# }\n# test {\n#     instance-type vrf;\n#     interface gr-0/0/0.0; ## 'gr-0/0/0.0' is not defined\n#     interface sp-0/0/0.0; ## 'sp-0/0/0.0' is not defined\n#     route-distinguisher 10.58.255.1:37;\n#     vrf-import test-policy;\n#     vrf-export [ test-policy test-policy-1 ];\n#     connector-id-advertise;\n# }\n\n- name: Delete provided junos routing-instamce\n  junipernetworks.junos.junos_routing_instances:\n   config:\n     - name: \"test\"\n   state: deleted\n\n# After state\n# -----------\n#\n# admin@vsrx# show routing-instances\n# forwardinst {\n#     description \"Configured by Ansible Content Team\";\n#     instance-type forwarding;\n# }\n\n# Using deleted without config\n#\n# Before state\n# ------------\n#\n# admin@vsrx# show routing-instances\n# forwardinst {\n#     description \"Configured by Ansible Content Team\";\n#     instance-type forwarding;\n# }\n# test {\n#     instance-type vrf;\n#     interface gr-0/0/0.0; ## 'gr-0/0/0.0' is not defined\n#     interface sp-0/0/0.0; ## 'sp-0/0/0.0' is not defined\n#     route-distinguisher 10.58.255.1:37;\n#     vrf-import test-policy;\n#     vrf-export [ test-policy test-policy-1 ];\n#     connector-id-advertise;\n# }\n# vtest1 {\n#     instance-type virtual-router;\n# }\n\n- name: Delete complete Junos routing-instances config\n  junipernetworks.junos.junos_routing_instances:\n   config:\n   state: deleted\n\n# After state\n# -----------\n#\n# admin@vsrx# show routing-instances\n#\n# [edit]\n\n- name: Gather Junos BGP address family config\n  junipernetworks.junos.junos_routing_instances:\n    config:\n    state: gathered\n#\n#\n# -------------------------\n# Module Execution Result\n# -------------------------\n#\n#    \"gathered\": {\n#         \"address_family\": [\n#             {\n#                 \"af_type\": [\n#                     {\n#                         \"accepted_prefix_limit\": {\n#                             \"idle_timeout_value\": 2001,\n#                             \"limit_threshold\": 98,\n#                             \"maximum\": 20\n#                         },\n#                         \"damping\": true,\n#                         \"defer_initial_multipath_build\": {\n#                             \"maximum_delay\": 2\n#                         },\n#                         \"type\": \"signaling\"\n#                     }\n#                 ],\n#                 \"afi\": \"evpn\"\n#             },\n#             {\n#                 \"af_type\": [\n#                     {\n#                         \"accepted_prefix_limit\": {\n#                             \"idle_timeout_value\": 2000,\n#                             \"limit_threshold\": 99,\n#                             \"maximum\": 20\n#                         },\n#                         \"damping\": true,\n#                         \"defer_initial_multipath_build\": {\n#                             \"maximum_delay\": 2\n#                         },\n#                         \"delay_route_advertisements\": {\n#                             \"max_delay_route_age\": 20,\n#                             \"max_delay_routing_uptime\": 32000,\n#                             \"min_delay_inbound_convergence\": 32000,\n#                             \"min_delay_routing_uptime\": 23000\n#                         },\n#                         \"graceful_restart_forwarding_state_bit\": \"from-fib\",\n#                         \"type\": \"any\"\n#                     },\n#                     {\n#                         \"legacy_redirect_ip_action\": {\n#                             \"receive\": true,\n#                             \"send\": true\n#                         },\n#                         \"loops\": 4,\n#                         \"no_install\": true,\n#                         \"output_queue_priority_expedited\": true,\n#                         \"secondary_independent_resolution\": true,\n#                         \"type\": \"flow\"\n#                     },\n#                     {\n#                         \"entropy_label\": {\n#                             \"no_next_hop_validation\": true\n#                         },\n#                         \"explicit_null\": {\n#                             \"connected_only\": true\n#                         },\n#                         \"per_group_label\": true,\n#                         \"per_prefix_label\": true,\n#                         \"prefix_limit\": {\n#                             \"forever\": true,\n#                             \"limit_threshold\": 99,\n#                             \"maximum\": 20\n#                         },\n#                         \"resolve_vpn\": true,\n#                         \"rib\": \"inet.3\",\n#                         \"route_refresh_priority_priority\": 3,\n#                         \"type\": \"labeled-unicast\"\n#                     },\n#                     {\n#                         \"extended_nexthop\": true,\n#                         \"extended_nexthop_color\": true,\n#                         \"local_ipv4_address\": \"9.9.9.9\",\n#                         \"type\": \"unicast\"\n#                     }\n#                 ],\n#                 \"afi\": \"inet\"\n#             }\n#         ]\n#     }\n#\n# Using parsed\n# parsed.cfg\n# ------------\n# <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n# <rpc-reply message-id=\"urn:uuid:0cadb4e8-5bba-47f4-986e-72906227007f\">\n#     <configuration changed-seconds=\"1590139550\" changed-localtime=\"2020-05-22 09:25:50 UTC\">\n#         <version>18.4R1-S2.4</version>\n#         <routing-instances>\n#             <instance>\n#                 <name>forwardinst</name>\n#                 <description>Configured by Ansible Content Team</description>\n#                 <instance-type>forwarding</instance-type>\n#             </instance>\n#             <instance>\n#                 <name>test</name>\n#                 <instance-type>vrf</instance-type>\n#                 <interface>\n#                     <name>gr-0/0/0.0</name>\n#                 </interface>\n#                 <interface>\n#                     <name>sp-0/0/0.0</name>\n#                 </interface>\n#                 <route-distinguisher>\n#                     <rd-type>10.58.255.1:37</rd-type>\n#                 </route-distinguisher>\n#                 <vrf-import>test-policy</vrf-import>\n#                 <vrf-export>test-policy</vrf-export>\n#                 <vrf-export>test-policy-1</vrf-export>\n#                 <connector-id-advertise/>\n#             </instance>\n#         </routing-instances>\n#     </configuration>\n# </rpc-reply>\n\n- name: Parse routing instance running config\n  junipernetworks.junos.junos_routing_instances:\n    running_config: \"{{ lookup('file', './parsed.cfg') }}\"\n    state: parsed\n#\n#\n# -------------------------\n# Module Execution Result\n# -------------------------\n#\n#\n# \"parsed\":  [\n#         {\n#             \"description\": \"Configured by Ansible Content Team\",\n#             \"name\": \"forwardinst\",\n#             \"type\": \"forwarding\"\n#         },\n#         {\n#             \"connector_id_advertise\": true,\n#             \"interfaces\": [\n#                 {\n#                     \"name\": \"gr-0/0/0.0\"\n#                 },\n#                 {\n#                     \"name\": \"sp-0/0/0.0\"\n#                 }\n#             ],\n#             \"name\": \"test\",\n#             \"route_distinguisher\": \"10.58.255.1:37\",\n#             \"type\": \"vrf\",\n#             \"vrf_exports\": [\n#                 \"test-policy\",\n#                 \"test-policy-1\"\n#             ],\n#             \"vrf_imports\": [\n#                 \"test-policy\"\n#             ]\n#         }\n#     ]\n#\n#\n# Using rendered\n#\n#\n- name: Render the xml for provided  configuration\n  junipernetworks.junos.junos_routing_instances:\n    config:\n      - name: \"test\"\n        type: \"vrf\"\n        route_distinguisher: \"10.58.255.1:37\"\n        vrf_imports:\n          - \"test-policy\"\n        vrf_exports:\n          - \"test-policy\"\n          - \"test-policy-1\"\n        interfaces:\n          - name: \"sp-0/0/0.0\"\n          - name: \"gr-0/0/0.0\"\n        connector_id_advertise: true\n      - name: \"forwardinst\"\n        type: \"forwarding\"\n        description: \"Configured by Ansible Content Team\"\n    state: rendered\n\n#\n#\n# -------------------------\n# Module Execution Result\n# -------------------------\n#\n#\n# \"rendered\": \"<nc:routing-instances xmlns:nc=\"urn:ietf:params:xml:ns:netconf:base:1.0\">\n# <nc:instance><nc:name>test</nc:name><nc:connector-id-advertise/><nc:instance-type>vrf</nc:instance-type>\n# <nc:interface><nc:name>sp-0/0/0.0</nc:name></nc:interface><nc:interface><nc:name>gr-0/0/0.0</nc:name></nc:interface>\n# <nc:route-distinguisher><nc:rd-type>10.58.255.1:37</nc:rd-type></nc:route-distinguisher>\n# <nc:vrf-import>test-policy</nc:vrf-import><nc:vrf-export>test-policy</nc:vrf-export>\n# <nc:vrf-export>test-policy-1</nc:vrf-export></nc:instance>\n# <nc:instance><nc:name>forwardinst</nc:name><nc:description>Configured by Ansible Content Team</nc:description>\n# <nc:instance-type>forwarding</nc:instance-type></nc:instance></nc:routing-instances>\"\n"
  },
  "junipernetworks.junos.junos_routing_options": {
    "doc": {
      "description": "This module manages routing-options configuration on devices running Junos.",
      "has_action": true,
      "notes": "This module requires the netconf system service be enabled on the device being managed.\nThis module works with connection C(netconf).\nSee L(the Junos OS Platform Options,https://docs.ansible.com/ansible/latest/network/user_guide/platform_junos.html).\nTested against JunOS v18.4R1",
      "options": {
        "config": {
          "aliases": [],
          "description": "A dictionary of routing-options configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "autonomous_system": {
              "aliases": [],
              "description": "Specify Autonomous system number.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "as_number": {
                  "aliases": [],
                  "description": "Specify Autonomous system number.",
                  "type": "str",
                  "required": true,
                  "suboptions": {}
                },
                "asdot_notation": {
                  "aliases": [],
                  "description": "Enable AS-Dot notation to display true 4 byte AS numbers.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "loops": {
                  "aliases": [],
                  "description": "Specify maximum number of times this AS can be in an AS path.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "router_id": {
              "aliases": [],
              "description": "Specify Router identifier.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "running_config": {
          "aliases": [],
          "description": "This option is used only with state I(parsed).\nThe value of this option should be the output received from the Junos device by executing the command B(show system routing-options).\nThe state I(parsed) reads the configuration from C(running_config) option and transforms it into Ansible structured data as per the resource module's argspec and the value is then returned in the I(parsed) key within the result.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The state the configuration should be left in.\nRefer to examples for more details.",
          "default": "merged",
          "type": "str",
          "required": false,
          "choices": [
            "merged",
            "replaced",
            "deleted",
            "overridden",
            "parsed",
            "gathered",
            "rendered"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "ncclient (>=v0.6.4)",
        "xmltodict (>=0.12.0)"
      ],
      "short_description": "Manage routing-options configuration on Junos devices.",
      "version_added": "2.8.0"
    },
    "examples": "\n# Using merged\n#\n# Before state\n# ------------\n#\n# vagrant@vsrx# show system routing-options\n#\n- name: Merge provided NTP configuration into running configuration.\n  junipernetworks.junos.junos_routing_options:\n    config:\n      autonomous_system:\n        as_number: 2\n        asdot_notation: true\n    state: merged\n#\n# -------------------------\n# Module Execution Result\n# -------------------------\n#     \"after\": {\n#         \"autonomous_system\": {\n#             \"as_number\": \"2\",\n#             \"asdot_notation\": true\n#         }\n#     },\n#     \"before\": {},\n#     \"changed\": true,\n#     \"commands\": [\n#           \"<nc:routing-options xmlns:nc=\"urn:ietf:params:xml:ns:netconf:base:1.0\">\"\n#           \"<nc:autonomous-system>2<nc:asdot-notation/></nc:autonomous-system></nc:routing-options>\"\n#     ]\n# After state\n# -----------\n#\n# vagrant@vsrx# show routing-options\n# autonomous-system 2 asdot-notation;\n#\n#\n# Using Replaced\n# Before state\n# ------------\n#\n# vagrant@vsrx# show routing-options\n# autonomous-system 2 asdot-notation;\n\n- name: Replaced running routing-options configuration with provided configuration\n  junipernetworks.junos.junos_routing_options:\n    config:\n      autonomous_system:\n        as_number: 2\n        asdot_notation: true\n      router_id: \"1.1.1.1\"\n    state: replaced\n#\n# -------------------------\n# Module Execution Result\n# -------------------------\n#     \"after\": {\n#         \"autonomous_system\": {\n#             \"as_number\": \"2\",\n#             \"asdot_notation\": true\n#         },\n#         \"router_id\": \"1.1.1.1\"\n#     },\n#     \"before\": {\n#         \"autonomous_system\": {\n#             \"as_number\": \"2\",\n#             \"asdot_notation\": true\n#         }\n#     },\n#     \"changed\": true,\n#     \"commands\": [\n#             \"<nc:routing-options xmlns:nc=\"urn:ietf:params:xml:ns:netconf:base:1.0\">\"\n#             \"<nc:autonomous-system delete=\"delete\"/><nc:autonomous-system>2<nc:asdot-notation/>\"\n#             \"</nc:autonomous-system><nc:router-id>1.1.1.1</nc:router-id></nc:routing-options>\"\n#     ]\n# After state\n# -----------\n#\n# vagrant@vsrx# show routing-options\n# router-id 1.1.1.1;\n# autonomous-system 2 asdot-notation;\n\n\n# Using overridden\n#\n# vagrant@vsrx# show routing-options\n# autonomous-system 2 asdot-notation;\n\n- name: Override running routing-options configuration with provided configuration\n  junipernetworks.junos.junos_routing_options:\n    config:\n      autonomous_system:\n        as_number: 2\n        asdot_notation: true\n      router_id: \"1.1.1.1\"\n    state: overridden\n#\n# -------------------------\n# Module Execution Result\n# -------------------------\n#     \"after\": {\n#         \"autonomous_system\": {\n#             \"as_number\": \"2\",\n#             \"asdot_notation\": true\n#         },\n#         \"router_id\": \"1.1.1.1\"\n#     },\n#     \"before\": {\n#         \"autonomous_system\": {\n#             \"as_number\": \"2\",\n#             \"asdot_notation\": true\n#         }\n#     },\n#     \"changed\": true,\n#     \"commands\": [\n#             \"<nc:routing-options xmlns:nc=\"urn:ietf:params:xml:ns:netconf:base:1.0\">\"\n#             \"<nc:autonomous-system delete=\"delete\"/><nc:autonomous-system>2<nc:asdot-notation/>\"\n#             \"</nc:autonomous-system><nc:router-id>1.1.1.1</nc:router-id></nc:routing-options>\"\n#     ]\n# After state\n# -----------\n#\n# vagrant@vsrx# show routing-options\n# router-id 1.1.1.1;\n# autonomous-system 2 asdot-notation;\n#\n# Using deleted\n#\n# Before state\n# ------------\n#\n# vagrant@vsrx# show routing-options\n# router-id 1.1.1.1;\n# autonomous-system 2 asdot-notation;\n#\n- name: Delete running routing-options configuration\n  junipernetworks.junos.junos_routing_options:\n    config:\n    state: deleted\n#\n# -------------------------\n# Module Execution Result\n# -------------------------\n#     \"after\": {},\n#     \"before\": {\n#         \"autonomous_system\": {\n#             \"as_number\": \"2\",\n#             \"asdot_notation\": true\n#         },\n#         \"router_id\": \"1.1.1.1\"\n#     },\n#     \"changed\": true,\n#     \"commands\": [\n#               \"<nc:routing-options xmlns:nc=\"urn:ietf:params:xml:ns:netconf:base:1.0\">\"\n#               \"<nc:autonomous-system delete=\"delete\"/><nc:router-id delete=\"delete\"/></nc:routing-options>\"\n#     ]\n# After state\n# -----------\n#\n# vagrant@vsrx# show routing-options\n#\n# [edit]\n# Using gathered\n#\n# Before state\n# ------------\n#\n# vagrant@vsrx# show routing-options\n# router-id 1.1.1.1;\n# autonomous-system 2 asdot-notation;\n\n- name: Gather running routing-options configuration\n  junipernetworks.junos.junos_routing_options:\n    state: gathered\n#\n# -------------------------\n# Module Execution Result\n# -------------------------\n#     \"gathered\": {\n#         \"autonomous_system\": {\n#             \"as_number\": \"2\",\n#             \"asdot_notation\": true\n#         },\n#         \"router_id\": \"1.1.1.1\"\n#     },\n#     \"changed\": false,\n# Using rendered\n#\n# Before state\n# ------------\n#\n- name: Render xml for provided facts.\n  junipernetworks.junos.junos_routing_options:\n    config:\n      autonomous_system:\n        as_number: 2\n        asdot_notation: true\n        loops: 4\n      router_id: 12.12.12.12\n    state: rendered\n#\n# -------------------------\n# Module Execution Result\n# -------------------------\n#     \"rendered\": [\n#           \"<nc:routing-options xmlns:nc=\"urn:ietf:params:xml:ns:netconf:base:1.0\">\n#           \"<nc:autonomous-system>2<nc:loops>4</nc:loops><nc:asdot-notation/></nc:autonomous-system>\n#           \"<nc:router-id>12.12.12.12</nc:router-id></nc:routing-options>\"\n#     ]\n#\n# Using parsed\n# parsed.cfg\n# ------------\n# <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n# <rpc-reply message-id=\"urn:uuid:0cadb4e8-5bba-47f4-986e-72906227007f\">\n#     <configuration changed-seconds=\"1590139550\" changed-localtime=\"2020-05-22 09:25:50 UTC\">\n#         <version>18.4R1-S2.4</version>\n#         <routing-options>\n#             <router-id>12.12.12.12</router-id>\n#             <autonomous-system>\n#                 <as-number>2</as-number>\n#                 <loops>4</loops>\n#                 <asdot-notation/>\n#             </autonomous-system>\n#         </routing-options>\n#     </configuration>\n# </rpc-reply>\n#\n- name: Parse routing-options running config\n  junipernetworks.junos.junos_routing_options:\n    running_config: \"{{ lookup('file', './parsed.cfg') }}\"\n    state: parsed\n#\n#\n# -------------------------\n# Module Execution Result\n# -------------------------\n#\n#\n# \"parsed\":  {\n#         \"autonomous_system\": {\n#             \"as_number\": \"2\",\n#             \"asdot_notation\": true,\n#             \"loops\": 4\n#         },\n#         \"router_id\": \"12.12.12.12\"\n#     }\n#\n"
  },
  "junipernetworks.junos.junos_rpc": {
    "doc": {
      "description": "Sends a request to the remote device running JUNOS to execute the specified RPC using the NetConf transport.  The reply is then returned to the playbook in the C(xml) key.  If an alternate output format is requested, the reply is transformed to the requested output.",
      "has_action": true,
      "notes": "This module requires the netconf system service be enabled on the remote device being managed.\nTested against vSRX JUNOS version 15.1X49-D15.4, vqfx-10000 JUNOS Version 15.1X53-D60.4.\nRecommended connection is C(netconf). See L(the Junos OS Platform Options,../network/user_guide/platform_junos.html).\nThis module also works with C(local) connections for legacy playbooks.\nFor information on using CLI and netconf see the :ref:`Junos OS Platform Options guide <junos_platform_options>`\nFor more information on using Ansible to manage network devices see the :ref:`Ansible Network Guide <network_guide>`\nFor more information on using Ansible to manage Juniper network devices see U(https://www.ansible.com/ansible-juniper).",
      "options": {
        "args": {
          "aliases": [],
          "description": "The C(args) argument provides a set of arguments for the RPC call and are encoded in the request message.  This argument accepts a set of key=value arguments.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "attrs": {
          "aliases": [],
          "description": "The C(attrs) arguments defines a list of attributes and their values to set for the RPC call. This accepts a dictionary of key-values.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "output": {
          "aliases": [],
          "description": "The C(output) argument specifies the desired output of the return data.  This argument accepts one of C(xml), C(text), or C(json).  For C(json), the JUNOS device must be running a version of software that supports native JSON output.",
          "default": "xml",
          "type": "str",
          "required": false,
          "choices": [
            "xml",
            "json",
            "text"
          ],
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "B(Deprecated)\nStarting with Ansible 2.5 we recommend using C(connection: network_cli) or C(connection: netconf).\nFor more information please see the L(Junos OS Platform Options guide, ../network/user_guide/platform_junos.html).\nHORIZONTALLINE\nA dict object containing connection details.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "host": {
              "aliases": [],
              "description": "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [],
              "description": "Specifies the password to use to authenticate the connection to the remote device.   This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "port": {
              "aliases": [],
              "description": "Specifies the port to use when building the connection to the remote device.  The port value will default to the well known SSH port of 22 (for C(transport=cli)) or port 830 (for C(transport=netconf)) device.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "ssh_keyfile": {
              "aliases": [],
              "description": "Specifies the SSH key to use to authenticate the connection to the remote device.   This value is the path to the key used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead.",
              "type": "path",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "netconf",
              "type": "str",
              "required": false,
              "choices": [
                "cli",
                "netconf"
              ],
              "suboptions": {}
            },
            "username": {
              "aliases": [],
              "description": "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "rpc": {
          "aliases": [],
          "description": "The C(rpc) argument specifies the RPC call to send to the remote devices to be executed.  The RPC Reply message is parsed and the contents are returned to the playbook.",
          "type": "str",
          "required": true,
          "suboptions": {}
        }
      },
      "requirements": [
        "ncclient (>=v0.5.2)"
      ],
      "short_description": "Runs an arbitrary RPC over NetConf on an Juniper JUNOS device",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: collect interface information using rpc\n  junipernetworks.junos.junos_rpc:\n    rpc: get-interface-information\n    args:\n      interface-name: em0\n      media: true\n\n- name: get system information\n  junipernetworks.junos.junos_rpc:\n    rpc: get-system-information\n\n- name: load configuration\n  junipernetworks.junos.junos_rpc:\n    rpc: load-configuration\n    attrs:\n      action: override\n      url: /tmp/config.conf\n"
  },
  "junipernetworks.junos.junos_scp": {
    "doc": {
      "description": "This module transfers files via SCP from or to remote devices running Junos.",
      "has_action": true,
      "notes": "This module requires the netconf system service be enabled on the remote device being managed.\nTested against vMX JUNOS version 17.3R1.10.\nWorks with C(local) connections only.\nSince this module uses junos-eznc to establish connection with junos device the netconf configuration parameters needs to be passed using module options for example C(ssh_config) unlike other junos modules that uses C(netconf) connection type.\nFor information on using CLI and netconf see the :ref:`Junos OS Platform Options guide <junos_platform_options>`\nFor more information on using Ansible to manage network devices see the :ref:`Ansible Network Guide <network_guide>`\nFor more information on using Ansible to manage Juniper network devices see U(https://www.ansible.com/ansible-juniper).",
      "options": {
        "dest": {
          "aliases": [],
          "description": "The C(dest) argument specifies the path in which to receive the files.",
          "default": ".",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "B(Deprecated)\nStarting with Ansible 2.5 we recommend using C(connection: network_cli) or C(connection: netconf).\nFor more information please see the L(Junos OS Platform Options guide, ../network/user_guide/platform_junos.html).\nHORIZONTALLINE\nA dict object containing connection details.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "host": {
              "aliases": [],
              "description": "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [],
              "description": "Specifies the password to use to authenticate the connection to the remote device.   This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "port": {
              "aliases": [],
              "description": "Specifies the port to use when building the connection to the remote device.  The port value will default to the well known SSH port of 22 (for C(transport=cli)) or port 830 (for C(transport=netconf)) device.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "ssh_keyfile": {
              "aliases": [],
              "description": "Specifies the SSH key to use to authenticate the connection to the remote device.   This value is the path to the key used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead.",
              "type": "path",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "netconf",
              "type": "str",
              "required": false,
              "choices": [
                "cli",
                "netconf"
              ],
              "suboptions": {}
            },
            "username": {
              "aliases": [],
              "description": "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "recursive": {
          "aliases": [],
          "description": "The C(recursive) argument enables recursive transfer of files and directories.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "remote_src": {
          "aliases": [],
          "description": "The C(remote_src) argument enables the download of files (I(scp get)) from the remote device. The default behavior is to upload files (I(scp put)) to the remote device.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "src": {
          "aliases": [],
          "description": "The C(src) argument takes a single path, or a list of paths to be transferred. The argument C(recursive) must be C(true) to transfer directories.",
          "type": "list",
          "required": true,
          "elements": "path",
          "suboptions": {}
        },
        "ssh_config": {
          "aliases": [],
          "description": "The C(ssh_config) argument is path to the SSH configuration file. This can be used to load SSH information from a configuration file. If this option is not given by default ~/.ssh/config is queried.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "ssh_private_key_file": {
          "aliases": [],
          "description": "The C(ssh_private_key_file) argument is path to the SSH private key file. This can be used if you need to provide a private key rather than loading the key into the ssh-key-ring/environment",
          "type": "path",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "junos-eznc",
        "ncclient (>=v0.5.2)"
      ],
      "short_description": "Transfer files from or to remote devices running Junos",
      "version_added": "1.0.0"
    },
    "examples": "\n# the required set of connection arguments have been purposely left off\n# the examples for brevity\n- name: upload local file to home directory on remote device\n  junipernetworks.junos.junos_scp:\n    src: test.tgz\n\n- name: upload local file to tmp directory on remote device\n  junipernetworks.junos.junos_scp:\n    src: test.tgz\n    dest: /tmp/\n\n- name: download file from remote device\n  junipernetworks.junos.junos_scp:\n    src: test.tgz\n    remote_src: true\n\n- name: ssh config file path for jumphost config\n  junipernetworks.junos.junos_scp:\n    src: test.tgz\n    remote_src: true\n    ssh_config: /home/user/customsshconfig\n"
  },
  "junipernetworks.junos.junos_snmp_server": {
    "doc": {
      "description": "This module manages SNMP server configuration on devices running Junos.",
      "has_action": true,
      "notes": "This module requires the netconf system service be enabled on the device being managed.\nThis module works with connection C(netconf).\nSee L(the Junos OS Platform Options,https://docs.ansible.com/ansible/latest/network/user_guide/platform_junos.html).\nTested against JunOS v18.4R1",
      "options": {
        "config": {
          "aliases": [],
          "description": "A dictionary of SNMP server configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "arp": {
              "aliases": [],
              "description": "Specify JVision arp setting.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "host_name_resolution": {
                  "aliases": [],
                  "description": "Enable host name resolution.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "set": {
                  "aliases": [],
                  "description": "Set JVision arp.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "client_lists": {
              "aliases": [],
              "description": "Specify client list.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "addresses": {
                  "aliases": [],
                  "description": "Specify list of addresses/prefixes.",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "address": {
                      "aliases": [],
                      "description": "Specify address or prefix.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "restrict": {
                      "aliases": [],
                      "description": "Deny access.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "name": {
                  "aliases": [],
                  "description": "Specify client list name.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "communities": {
              "aliases": [],
              "description": "Specify list of community string.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "authorization": {
                  "aliases": [],
                  "description": "Specify Authorization type.",
                  "type": "str",
                  "required": false,
                  "choices": [
                    "read-only",
                    "read-write"
                  ],
                  "suboptions": {}
                },
                "client_list_name": {
                  "aliases": [],
                  "description": "Specify the name of client list or prefix list.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "clients": {
                  "aliases": [],
                  "description": "Specify List of source address prefix ranges to accept.",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "address": {
                      "aliases": [],
                      "description": "Specify address or prefix.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "restrict": {
                      "aliases": [],
                      "description": "Deny access.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "logical_system": {
                  "aliases": [],
                  "description": "Use logical-system name for v1/v2c clients.",
                  "type": "list",
                  "required": false,
                  "elements": "str",
                  "suboptions": {}
                },
                "name": {
                  "aliases": [],
                  "description": "Specify name of the community.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "routing_instances": {
                  "aliases": [],
                  "description": "Use routing-instance name for v1/v2c clients.",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "client_list_name": {
                      "aliases": [],
                      "description": "Specify the name of client list or prefix list.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "clients": {
                      "aliases": [],
                      "description": "Specify List of source address prefix ranges to accept.",
                      "type": "list",
                      "required": false,
                      "elements": "dict",
                      "suboptions": {
                        "address": {
                          "aliases": [],
                          "description": "Specify address or prefix.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "restrict": {
                          "aliases": [],
                          "description": "Deny access.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "name": {
                      "aliases": [],
                      "description": "Specify routing-instances.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "view": {
                  "aliases": [],
                  "description": "Specify view name.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "contact": {
              "aliases": [],
              "description": "Specify contact information for administrator.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "customization": {
              "aliases": [],
              "description": "Customize SNMP behaviour based on knob.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "ether_stats_ifd_only": {
                  "aliases": [],
                  "description": "To stop exposing IFLs as part of etherStatsTable.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "description": {
              "aliases": [],
              "description": "System description.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "engine_id": {
              "aliases": [],
              "description": "Specify SNMPv3 engine ID",
              "type": "dict",
              "required": false,
              "suboptions": {
                "local": {
                  "aliases": [],
                  "description": "Local engine ID.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "use_default_ip_address": {
                  "aliases": [],
                  "description": "Use default IP address for the engine ID.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "use_mac_address": {
                  "aliases": [],
                  "description": "Uses management interface MAC Address for the engine ID.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "filter_duplicates": {
              "aliases": [],
              "description": "Filter requests with duplicate source address/port and request ID.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "filter_interfaces": {
              "aliases": [],
              "description": "List of interfaces that needs to be filtered.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "all_internal_interfaces": {
                  "aliases": [],
                  "description": "Filter all internal interfaces.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "interfaces": {
                  "aliases": [],
                  "description": "Specify filter specified interfaces.",
                  "type": "list",
                  "required": false,
                  "elements": "str",
                  "suboptions": {}
                },
                "set": {
                  "aliases": [],
                  "description": "Set filter-interfaces.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "health_monitor": {
              "aliases": [],
              "description": "Specify health monitoring configuration.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "falling_threshold": {
                  "aliases": [],
                  "description": "Falling threshold applied to all monitored objects.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "idp": {
                  "aliases": [],
                  "description": "IDP health monitor configuration.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "interval": {
                  "aliases": [],
                  "description": "Interval between samples.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "rising_threshold": {
                  "aliases": [],
                  "description": "Rising threshold applied to all monitored objects.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "set": {
                  "aliases": [],
                  "description": "Set health-monitor configuration.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "if_count_with_filter_interfaces": {
              "aliases": [],
              "description": "Filter interfaces config for ifNumber and ipv6Interfaces.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "interfaces": {
              "aliases": [],
              "description": "Restrict SNMP requests to interfaces.",
              "type": "list",
              "required": false,
              "elements": "str",
              "suboptions": {}
            },
            "location": {
              "aliases": [],
              "description": "Specify physical location of system.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "logical_system_trap_filter": {
              "aliases": [],
              "description": "Allow only logical-system specific traps.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "name": {
              "aliases": [],
              "description": "System name override.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "nonvolatile": {
              "aliases": [],
              "description": "Configure the handling of nonvolatile SNMP Set requests.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "commit_delay": {
                  "aliases": [],
                  "description": "Delay between affirmative SNMP Set reply and start of commit (seconds).",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "proxies": {
              "aliases": [],
              "description": "SNMP proxy configuration.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "device_name": {
                  "aliases": [],
                  "description": "Satellite/Proxied Device name or IP address.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "logical_system": {
                  "aliases": [],
                  "description": "Use logical-system name for v1/v2c clients.",
                  "type": "list",
                  "required": false,
                  "elements": "str",
                  "suboptions": {}
                },
                "name": {
                  "aliases": [],
                  "description": "Specify proxy name.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "routing_instances": {
                  "aliases": [],
                  "description": "Use routing-instance name for v1/v2c clients.",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "client_list_name": {
                      "aliases": [],
                      "description": "Specify the name of client list or prefix list.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "clients": {
                      "aliases": [],
                      "description": "Specify List of source address prefix ranges to accept.",
                      "type": "list",
                      "required": false,
                      "elements": "dict",
                      "suboptions": {
                        "address": {
                          "aliases": [],
                          "description": "Specify address or prefix.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "restrict": {
                          "aliases": [],
                          "description": "Deny access.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "name": {
                      "aliases": [],
                      "description": "Specify routing-instances.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "version_v1": {
                  "aliases": [],
                  "description": "Specify For v1 proxy configuration define snmp-community.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "no_default_comm_to_v3_config": {
                      "aliases": [],
                      "description": "Specify No default snmp-community and v3 configuration.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "snmp_community": {
                      "aliases": [],
                      "description": "Specify community name.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "version_v2c": {
                  "aliases": [],
                  "description": "For v2c proxy configuration define snmp-community.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "no_default_comm_to_v3_config": {
                      "aliases": [],
                      "description": "Specify No default snmp-community and v3 configuration.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "snmp_community": {
                      "aliases": [],
                      "description": "Specify community name.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "version_v3": {
                  "aliases": [],
                  "description": "For v3 proxy configuration define security-name.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "context": {
                      "aliases": [],
                      "description": "pecify context name associated to this security-name.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "security_name": {
                      "aliases": [],
                      "description": "Specify v3 security-name.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                }
              }
            },
            "rmon": {
              "aliases": [],
              "description": "Specify Remote Monitoring configuration.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "alarms": {
                  "aliases": [],
                  "description": "RMON alarm entries.",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "description": {
                      "aliases": [],
                      "description": "General description of alarm (stored in alarmOwner).",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "falling_event_index": {
                      "aliases": [],
                      "description": "Event triggered after falling threshold is crossed.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "falling_threshold": {
                      "aliases": [],
                      "description": "Specify falling-threshold.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "falling_threshold_interval": {
                      "aliases": [],
                      "description": "Interval between samples during falling-threshold test.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "id": {
                      "aliases": [],
                      "description": "Specify alarm ID.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "interval": {
                      "aliases": [],
                      "description": "Interval between samples.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "request_type": {
                      "aliases": [],
                      "description": "Type of SNMP request to issue for alarm.",
                      "type": "str",
                      "required": false,
                      "choices": [
                        "get-next-request",
                        "get-request",
                        "walk-request"
                      ],
                      "suboptions": {}
                    },
                    "rising_event_index": {
                      "aliases": [],
                      "description": "Event triggered after rising threshold is crossed.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "rising_threshold": {
                      "aliases": [],
                      "description": "The rising threshold.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "sample_type": {
                      "aliases": [],
                      "description": "Method of sampling the selected variable.",
                      "type": "str",
                      "required": false,
                      "choices": [
                        "absolute-value",
                        "delta-value"
                      ],
                      "suboptions": {}
                    },
                    "startup_alarm": {
                      "aliases": [],
                      "description": "The alarm that may be sent upon entry startup.",
                      "type": "str",
                      "required": false,
                      "choices": [
                        "falling-alarm",
                        "rising-alarm",
                        "rising-or-falling-alarm"
                      ],
                      "suboptions": {}
                    },
                    "syslog_subtag": {
                      "aliases": [],
                      "description": "Tag to be added to syslog messages.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "variable": {
                      "aliases": [],
                      "description": "OID of MIB variable to be monitored.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "events": {
                  "aliases": [],
                  "description": "RMON event entries.",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "community": {
                      "aliases": [],
                      "description": "The community (trap group) for outgoing traps.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "description": {
                      "aliases": [],
                      "description": "General description of event.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "id": {
                      "aliases": [],
                      "description": "Specify event ID.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "type": {
                      "aliases": [],
                      "description": "The type of notification for this event.",
                      "type": "str",
                      "required": false,
                      "choices": [
                        "log",
                        "log-and-trap",
                        "none",
                        "snmptrap"
                      ],
                      "suboptions": {}
                    }
                  }
                },
                "set": {
                  "aliases": [],
                  "description": "Set Remote monitoring configuration.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "routing_instance_access": {
              "aliases": [],
              "description": "SNMP routing-instance options.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "access_lists": {
                  "aliases": [],
                  "description": "Allow/Deny SNMP access to routing-instances.",
                  "type": "list",
                  "required": false,
                  "elements": "str",
                  "suboptions": {}
                },
                "set": {
                  "aliases": [],
                  "description": "Set routing_instance_access.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "snmp_v3": {
              "aliases": [],
              "description": "SNMPv3 configuration information.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "notify": {
                  "aliases": [],
                  "description": "Used to select management targets for notifications as well as the type of notifications.",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "name": {
                      "aliases": [],
                      "description": "Specify notify name.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "tag": {
                      "aliases": [],
                      "description": "Notifications will be sent to all targets configured with this tag.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "type": {
                      "aliases": [],
                      "description": "Notification type.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "notify_filter": {
                  "aliases": [],
                  "description": "Filters to apply to SNMP notifications.",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "name": {
                      "aliases": [],
                      "description": "Specify notify filter name.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "oids": {
                      "aliases": [],
                      "description": "OID to include/exclude from notify filter.",
                      "type": "list",
                      "required": false,
                      "elements": "dict",
                      "suboptions": {
                        "exclude": {
                          "aliases": [],
                          "description": "Exclude this OID from the notify filtered.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "include": {
                          "aliases": [],
                          "description": "Include this OID in the notify filter.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "oid": {
                          "aliases": [],
                          "description": "Specify OID.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    }
                  }
                },
                "snmp_community": {
                  "aliases": [],
                  "description": "SNMP community and view-based access control model configuration.",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "community_index": {
                      "aliases": [],
                      "description": "Unique index value in this community table entry.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "community_name": {
                      "aliases": [],
                      "description": "SNMPv1/v2c community name (default is same as community-index).",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "context": {
                      "aliases": [],
                      "description": "Context used when performing access control.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "security_name": {
                      "aliases": [],
                      "description": "Security name used when performing access control.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "tag": {
                      "aliases": [],
                      "description": "Tag identifier for set of targets allowed to use this community string.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "target_addresses": {
                  "aliases": [],
                  "description": "Identifies notification targets as well as allowed management stations.",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "address": {
                      "aliases": [],
                      "description": "SNMP target address.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "address_mask": {
                      "aliases": [],
                      "description": "Mask range of addresses for community string access control.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "logical_system": {
                      "aliases": [],
                      "description": "Logical-system name for trap destination.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "name": {
                      "aliases": [],
                      "description": "SNMP target address name.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "port": {
                      "aliases": [],
                      "description": "SNMP target port number.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "retry_count": {
                      "aliases": [],
                      "description": "Maximum retry count for confirmed SNMP notifications.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "routing_instance": {
                      "aliases": [],
                      "description": "Routing instance for trap destination.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "tag_list": {
                      "aliases": [],
                      "description": "SNMP tag list used to select target addresses.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "target_parameters": {
                      "aliases": [],
                      "description": "SNMPv3 target parameter name in the target parameters table.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "timeout": {
                      "aliases": [],
                      "description": "Acknowledgment timeout for confirmed SNMP notifications (seconds).",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "target_parameters": {
                  "aliases": [],
                  "description": "SNMPv3 target parameter name in the target parameters table.",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "name": {
                      "aliases": [],
                      "description": "SNMPv3 target parameters name.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "notify_filter": {
                      "aliases": [],
                      "description": "Notify filter with filter name to apply to notifications.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "parameters": {
                      "aliases": [],
                      "description": "Parameters used when sending notifications.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "message_processing_model": {
                          "aliases": [],
                          "description": "The message processing model to be used when generating SNMP notifications.",
                          "type": "str",
                          "required": false,
                          "choices": [
                            "v1",
                            "v2c",
                            "v3"
                          ],
                          "suboptions": {}
                        },
                        "security_level": {
                          "aliases": [],
                          "description": "Security-level used when generating SNMP notifications.",
                          "type": "str",
                          "required": false,
                          "choices": [
                            "authentication",
                            "none",
                            "privacy"
                          ],
                          "suboptions": {}
                        },
                        "security_model": {
                          "aliases": [],
                          "description": "Security-model used when generating SNMP notifications.",
                          "type": "str",
                          "required": false,
                          "choices": [
                            "usm",
                            "v1",
                            "v2c"
                          ],
                          "suboptions": {}
                        },
                        "security_name": {
                          "aliases": [],
                          "description": "Security name used when generating SNMP notifications.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    }
                  }
                },
                "usm": {
                  "aliases": [],
                  "description": "User-based security model (USM) information.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "local_engine": {
                      "aliases": [],
                      "description": "Local engine user configuration.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "users": {
                          "aliases": [],
                          "description": "SNMPv3 USM user information.",
                          "type": "list",
                          "required": false,
                          "elements": "dict",
                          "suboptions": {
                            "authentication_md5": {
                              "aliases": [],
                              "description": "Configure MD5 authentication.",
                              "type": "dict",
                              "required": false,
                              "suboptions": {
                                "key": {
                                  "aliases": [],
                                  "description": "Encrypted key used for user authentication.",
                                  "type": "str",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "password": {
                                  "aliases": [],
                                  "description": "User's authentication password",
                                  "type": "str",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            },
                            "authentication_none": {
                              "aliases": [],
                              "description": "Set no authentication for the user.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "authentication_sha": {
                              "aliases": [],
                              "description": "Configure SHA authentication.",
                              "type": "dict",
                              "required": false,
                              "suboptions": {
                                "key": {
                                  "aliases": [],
                                  "description": "Encrypted key used for user authentication.",
                                  "type": "str",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "password": {
                                  "aliases": [],
                                  "description": "User's authentication password",
                                  "type": "str",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            },
                            "name": {
                              "aliases": [],
                              "description": "User name.",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            },
                            "privacy_3des": {
                              "aliases": [],
                              "description": "Configure Triple DES privacy.",
                              "type": "dict",
                              "required": false,
                              "suboptions": {
                                "key": {
                                  "aliases": [],
                                  "description": "Encrypted key used for user privacy.",
                                  "type": "str",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "password": {
                                  "aliases": [],
                                  "description": "User's privacy password",
                                  "type": "str",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            },
                            "privacy_aes128": {
                              "aliases": [],
                              "description": "Configure AES128 privacy.",
                              "type": "dict",
                              "required": false,
                              "suboptions": {
                                "key": {
                                  "aliases": [],
                                  "description": "Encrypted key used for user privacy.",
                                  "type": "str",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "password": {
                                  "aliases": [],
                                  "description": "User's privacy password",
                                  "type": "str",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            },
                            "privacy_des": {
                              "aliases": [],
                              "description": "Configure DES privacy.",
                              "type": "dict",
                              "required": false,
                              "suboptions": {
                                "key": {
                                  "aliases": [],
                                  "description": "Encrypted key used for user privacy.",
                                  "type": "str",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "password": {
                                  "aliases": [],
                                  "description": "User's privacy password",
                                  "type": "str",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            },
                            "privacy_none": {
                              "aliases": [],
                              "description": "Set no privacy for the user.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        }
                      }
                    },
                    "remote_engine": {
                      "aliases": [],
                      "description": "Remote engine user configuration.",
                      "type": "list",
                      "required": false,
                      "elements": "dict",
                      "suboptions": {
                        "id": {
                          "aliases": [],
                          "description": "Remote engine id.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "users": {
                          "aliases": [],
                          "description": "SNMPv3 USM user information.",
                          "type": "list",
                          "required": false,
                          "elements": "dict",
                          "suboptions": {
                            "authentication_md5": {
                              "aliases": [],
                              "description": "Configure MD5 authentication.",
                              "type": "dict",
                              "required": false,
                              "suboptions": {
                                "key": {
                                  "aliases": [],
                                  "description": "Encrypted key used for user authentication.",
                                  "type": "str",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "password": {
                                  "aliases": [],
                                  "description": "User's authentication password",
                                  "type": "str",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            },
                            "authentication_none": {
                              "aliases": [],
                              "description": "Set no authentication for the user.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "authentication_sha": {
                              "aliases": [],
                              "description": "Configure SHA authentication.",
                              "type": "dict",
                              "required": false,
                              "suboptions": {
                                "key": {
                                  "aliases": [],
                                  "description": "Encrypted key used for user authentication.",
                                  "type": "str",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "password": {
                                  "aliases": [],
                                  "description": "User's authentication password",
                                  "type": "str",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            },
                            "name": {
                              "aliases": [],
                              "description": "User name.",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            },
                            "privacy_3des": {
                              "aliases": [],
                              "description": "Configure Triple DES privacy.",
                              "type": "dict",
                              "required": false,
                              "suboptions": {
                                "key": {
                                  "aliases": [],
                                  "description": "Encrypted key used for user privacy.",
                                  "type": "str",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "password": {
                                  "aliases": [],
                                  "description": "User's privacy password",
                                  "type": "str",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            },
                            "privacy_aes128": {
                              "aliases": [],
                              "description": "Configure AES128 privacy.",
                              "type": "dict",
                              "required": false,
                              "suboptions": {
                                "key": {
                                  "aliases": [],
                                  "description": "Encrypted key used for user privacy.",
                                  "type": "str",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "password": {
                                  "aliases": [],
                                  "description": "User's privacy password",
                                  "type": "str",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            },
                            "privacy_des": {
                              "aliases": [],
                              "description": "Configure DES privacy.",
                              "type": "dict",
                              "required": false,
                              "suboptions": {
                                "key": {
                                  "aliases": [],
                                  "description": "Encrypted key used for user privacy.",
                                  "type": "str",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "password": {
                                  "aliases": [],
                                  "description": "User's privacy password",
                                  "type": "str",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            },
                            "privacy_none": {
                              "aliases": [],
                              "description": "Set no privacy for the user.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "subagent": {
              "aliases": [],
              "description": "SNMP subagent configuration.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "tcp": {
                  "aliases": [],
                  "description": "Allow SNMP subagent tcp connection.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "routing_instances_default": {
                      "aliases": [],
                      "description": "Specify routing-instance name for tcp connection.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "set": {
                      "aliases": [],
                      "description": "Set SNMP subagent TCP.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                }
              }
            },
            "traceoptions": {
              "aliases": [],
              "description": "Configure trace options for SNMP.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "file": {
                  "aliases": [],
                  "description": "Specify trace file options.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "files": {
                      "aliases": [],
                      "description": "Specify maximum number of trace files.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "match": {
                      "aliases": [],
                      "description": "Regular expression for lines to be logged.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "no_world_readable": {
                      "aliases": [],
                      "description": "Don't allow any user to read the log file.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "size": {
                      "aliases": [],
                      "description": "Specify maximum trace file size.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "world_readable": {
                      "aliases": [],
                      "description": "Allow any user to read the log file.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "flag": {
                  "aliases": [],
                  "description": "Specify flag traceoptions.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "all": {
                      "aliases": [],
                      "description": "Trace everything.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "general": {
                      "aliases": [],
                      "description": "Trace general events.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "interface_stats": {
                      "aliases": [],
                      "description": "Trace interface statistics (logical and physical).",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "nonvolatile_sets": {
                      "aliases": [],
                      "description": "Nonvolatile SNMP set request handling.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "pdu": {
                      "aliases": [],
                      "description": "Dump SNMP request/response packets.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "protocol_timeouts": {
                      "aliases": [],
                      "description": "Trace SNMP request timeouts.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "routing_socket": {
                      "aliases": [],
                      "description": "Trace routing socket calls.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "subagent": {
                      "aliases": [],
                      "description": "Trace master-agent interations with sub-agents.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "timer": {
                      "aliases": [],
                      "description": "Trace internal timer events.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "varbind_error": {
                      "aliases": [],
                      "description": "Trace varbind errors.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "memory_trace": {
                  "aliases": [],
                  "description": "Memory tracing information.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "set": {
                      "aliases": [],
                      "description": "set memory traceoptions.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "size": {
                      "aliases": [],
                      "description": "Specify Memory size reserved for tracing.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "no_remote_trace": {
                  "aliases": [],
                  "description": "Disable remote tracing.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "trap_groups": {
              "aliases": [],
              "description": "Specify SNMP trap options.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "categories": {
                  "aliases": [],
                  "description": "Specify Trap categories.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "authentication": {
                      "aliases": [],
                      "description": "Specify Authentication failures.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "chassis": {
                      "aliases": [],
                      "description": "Specify Chassis or environment notifications.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "chassis_cluster": {
                      "aliases": [],
                      "description": "Specify Clustering notifications.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "configuration": {
                      "aliases": [],
                      "description": "Configuration notifications.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "dot3oam_events": {
                      "aliases": [],
                      "description": "Specify 802.3ah notifications.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "link": {
                      "aliases": [],
                      "description": "Link up-down transitions.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "otn_alarms": {
                      "aliases": [],
                      "description": "OTN alarm trap subcategories.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "oc_lof": {
                          "aliases": [],
                          "description": "Loss of frame alarm notifications.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "oc_lom": {
                          "aliases": [],
                          "description": "Loss of multiframe alarm notification.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "oc_los": {
                          "aliases": [],
                          "description": "Loss of signal alarm notification.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "odu_ais": {
                          "aliases": [],
                          "description": "ODU Alarm indication signal alarm notification.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "odu_bbe_threshold": {
                          "aliases": [],
                          "description": "ODU Background block error threshold alarm notification.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "odu_bdi": {
                          "aliases": [],
                          "description": "ODU Backward defect indication alarm notification.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "odu_bdodu_es_threshold": {
                          "aliases": [],
                          "description": "ODU Errored Second threshold alarm notification.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "odu_lck": {
                          "aliases": [],
                          "description": "ODU Locked alarm notification.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "odu_oci": {
                          "aliases": [],
                          "description": "ODU Open connection indicator alarm notifications.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "odu_rx_aps_change": {
                          "aliases": [],
                          "description": "ODU Receive APS change notifications.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "odu_sd": {
                          "aliases": [],
                          "description": "ODU Signal degrade alarm notifications.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "odu_ses_threshold": {
                          "aliases": [],
                          "description": "ODU Severely Errored Second threshold alarm notification.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "odu_sf": {
                          "aliases": [],
                          "description": "ODU Signal fail alarm notification.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "odu_ttim": {
                          "aliases": [],
                          "description": "ODU Trace identification mismatch alarm notification.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "odu_uas_threshold": {
                          "aliases": [],
                          "description": "ODU Unavailable Second threshold alarm notification.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "opu_ptm": {
                          "aliases": [],
                          "description": "ODU Payload Type Mismatch alarm notification.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "otu_ais": {
                          "aliases": [],
                          "description": "OTU Alarm indication signal alarm notification.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "otu_bbe_threshold": {
                          "aliases": [],
                          "description": "OTU Background block error threshold alarm notification.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "otu_bdi": {
                          "aliases": [],
                          "description": "OTU Backward defect indication alarm notification.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "otu_es_threshold": {
                          "aliases": [],
                          "description": "OTU Errored Second threshold alarm notification.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "otu_fec_deg": {
                          "aliases": [],
                          "description": "OTU Fec degraded errors alarm notification.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "otu_fec_exe": {
                          "aliases": [],
                          "description": "OTU Fec excessive errors alarm notification.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "otu_iae": {
                          "aliases": [],
                          "description": "OTU Incoming alignment error alarm notification.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "otu_sd": {
                          "aliases": [],
                          "description": "OTU Signal degrade alarm notification.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "otu_ses_threshold": {
                          "aliases": [],
                          "description": "OTU Severely Errored Second threshold alarm notification.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "otu_sf": {
                          "aliases": [],
                          "description": "OTU Signal fail alarm notification.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "otu_ttim": {
                          "aliases": [],
                          "description": "OTU Trace identification mismatch alarm notification.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "otu_uas_threshold": {
                          "aliases": [],
                          "description": "OTU Unavailable Second threshold alarm notification.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "set": {
                          "aliases": [],
                          "description": "Set otn_alarms.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "wavelength_lock": {
                          "aliases": [],
                          "description": "Wavelength lock alarm notification.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "remote_operations": {
                      "aliases": [],
                      "description": "Remote operations.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "rmon_alarm": {
                      "aliases": [],
                      "description": "RMON rising and falling alarms.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "routing": {
                      "aliases": [],
                      "description": "Routing protocol notifications.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "services": {
                      "aliases": [],
                      "description": "Services notifications.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "startup": {
                      "aliases": [],
                      "description": "System warm and cold starts.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "vrrp_events": {
                      "aliases": [],
                      "description": "VRRP notifications.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "destination_port": {
                  "aliases": [],
                  "description": "SNMP trap receiver port number",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "logical_system": {
                  "aliases": [],
                  "description": "Use logical-system name for v1/v2c clients.",
                  "type": "list",
                  "required": false,
                  "elements": "str",
                  "suboptions": {}
                },
                "name": {
                  "aliases": [],
                  "description": "Specify trap group name.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "routing_instance": {
                  "aliases": [],
                  "description": "Routing instance for trap destination.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "targets": {
                  "aliases": [],
                  "description": "Targets for trap messages",
                  "type": "list",
                  "required": false,
                  "elements": "str",
                  "suboptions": {}
                },
                "version": {
                  "aliases": [],
                  "description": "SNMP version.",
                  "type": "str",
                  "required": false,
                  "choices": [
                    "all",
                    "v1",
                    "v2"
                  ],
                  "suboptions": {}
                }
              }
            },
            "trap_options": {
              "aliases": [],
              "description": "SNMP trap options.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "agent_address": {
                  "aliases": [],
                  "description": "Agent address for v1 trap PDUs.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "outgoing_interface": {
                      "aliases": [],
                      "description": "Use address on outgoing interfaces.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "context_oid": {
                  "aliases": [],
                  "description": "Add context oid in varbind of all traps at the end.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "enterprise_oid": {
                  "aliases": [],
                  "description": "Add snmpTrapEnterprise oid in varbind of all traps.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "logical_system": {
                  "aliases": [],
                  "description": "Use logical-system name for v1/v2c clients.",
                  "type": "list",
                  "required": false,
                  "elements": "str",
                  "suboptions": {}
                },
                "routing_instance": {
                  "aliases": [],
                  "description": "Specify routing-instance.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "set": {
                  "aliases": [],
                  "description": "Set trap options.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "source_address": {
                  "aliases": [],
                  "description": "IPv4/IPv6 source address for trap PDUs.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "address": {
                      "aliases": [],
                      "description": "Use specified address.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "lowest_loopback": {
                      "aliases": [],
                      "description": "Use lowest address on loopback interfaces.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                }
              }
            },
            "views": {
              "aliases": [],
              "description": "Define MIB views.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "name": {
                  "aliases": [],
                  "description": "MIB view name.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "oids": {
                  "aliases": [],
                  "description": "OID include/exclude list",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "exclude": {
                      "aliases": [],
                      "description": "Exclude this OID from the view.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "include": {
                      "aliases": [],
                      "description": "Include this OID from the view.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "oid": {
                      "aliases": [],
                      "description": "OID to include or exclude from view.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                }
              }
            }
          }
        },
        "running_config": {
          "aliases": [],
          "description": "This option is used only with state I(parsed).\nThe value of this option should be the output received from the Junos device by executing the command B(show system snmp).\nThe state I(parsed) reads the configuration from C(running_config) option and transforms it into Ansible structured data as per the resource module's argspec and the value is then returned in the I(parsed) key within the result.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The state the configuration should be left in.\nRefer to examples for more details.",
          "default": "merged",
          "type": "str",
          "required": false,
          "choices": [
            "merged",
            "replaced",
            "deleted",
            "overridden",
            "parsed",
            "gathered",
            "rendered"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "ncclient (>=v0.6.4)",
        "xmltodict (>=0.12.0)"
      ],
      "short_description": "Manage SNMP server configuration on Junos devices.",
      "version_added": "2.9.0"
    },
    "examples": "\n# Using merged\n#\n# Before state\n# ------------\n#\n# vagrant@vsrx# show routing-instances\n# clv1 {\n#     description clv1;\n# }\n# clv2 {\n#     description clv2;\n# }\n- name: Merge provided SNMP configuration into running configuration.\n  junipernetworks.junos.junos_snmp_server:\n    config:\n      arp:\n        set: true\n        host_name_resolution: true\n      client_lists:   # ATTR-----2\n         - name: cl1\n           addresses:\n             - address: \"192.16.1.0/24\"\n             - address: \"192.16.2.0/24\"\n             - address: \"11.11.11.11\"\n               restrict: true\n         - name: cl2\n           addresses:\n             - address: \"192.16.4.0/24\"\n      routing_instance_access:  # ATTR-----3\n        set: true\n        access_lists:\n          - \"clv1\"\n          - \"clv2\"\n    state: merged\n#\n# -------------------------\n# Module Execution Result\n# -------------------------\n#     \"after\": {\n#         \"arp\": {\n#             \"host_name_resolution\": true\n#         },\n#         \"client_lists\": [\n#             {\n#                 \"addresses\": [\n#                     {\n#                         \"address\": \"192.16.1.0/24\"\n#                     },\n#                     {\n#                         \"address\": \"192.16.2.0/24\"\n#                     },\n#                     {\n#                         \"address\": \"11.11.11.11/32\",\n#                         \"restrict\": true\n#                     }\n#                 ],\n#                 \"name\": \"cl1\"\n#             },\n#             {\n#                 \"addresses\": [\n#                     {\n#                         \"address\": \"192.16.4.0/24\"\n#                     }\n#                 ],\n#                 \"name\": \"cl2\"\n#             }\n#         ],\n#         \"routing_instance_access\": {\n#             \"access_lists\": [\n#                 \"clv1\",\n#                 \"clv2\"\n#             ]\n#         }\n#     },\n#     \"before\": {},\n#     \"changed\": true,\n#     \"commands\": [\n#           \"<nc:snmp xmlns:nc=\"urn:ietf:params:xml:ns:netconf:base:1.0\">\"\n#           \"<nc:arp><nc:host-name-resolution/></nc:arp><nc:client-list><nc:name>cl1</nc:name>\"\n#           \"<nc:client-address-list><nc:name>192.16.1.0/24</nc:name></nc:client-address-list>\"\n#           \"<nc:client-address-list><nc:name>192.16.2.0/24</nc:name></nc:client-address-list><nc:client-address-list>\"\n#           \"<nc:name>11.11.11.11</nc:name><nc:restrict/></nc:client-address-list></nc:client-list><nc:client-list>\"\n#           \"<nc:name>cl2</nc:name><nc:client-address-list><nc:name>192.16.4.0/24</nc:name></nc:client-address-list>\"\n#           \"</nc:client-list><nc:routing-instance-access><nc:access-list><nc:name>clv1</nc:name></nc:access-list>\"\n#           \"<nc:access-list><nc:name>clv2</nc:name></nc:access-list></nc:routing-instance-access></nc:snmp>\"\n#     ]\n# After state\n# -----------\n#\n# vagrant@vsrx# show snmp\n# client-list cl1 {\n#     192.16.1.0/24;\n#     192.16.2.0/24;\n#     11.11.11.11/32 {\n#         restrict;\n#     }\n# }\n# client-list cl2 {\n#     192.16.4.0/24;\n# }\n# routing-instance-access {\n#     access-list {\n#         clv1;\n#         clv2;\n#     }\n# }\n# arp {\n#     host-name-resolution;\n# }\n# vagrant@vsrx# show routing-instances\n# clv1 {\n#     description clv1;\n# }\n# clv2 {\n#     description clv2;\n# }\n#\n# Using Replaced\n# Before state\n# ------------\n#\n# vagrant@vsrx# show snmp\n# client-list cl1 {\n#     192.16.1.0/24;\n#     192.16.2.0/24;\n#     11.11.11.11/32 {\n#         restrict;\n#     }\n# }\n# client-list cl2 {\n#     192.16.4.0/24;\n# }\n# routing-instance-access {\n#     access-list {\n#         clv1;\n#         clv2;\n#     }\n# }\n# arp {\n#     host-name-resolution;\n# }\n# vagrant@vsrx# show routing-instances\n# clv1 {\n#     description clv1;\n# }\n# clv2 {\n#     description clv2;\n# }\n\n- name: Replaced running SNMP server configuration with provided configuration\n  junipernetworks.junos.junos_snmp_server:\n    config:\n      contact: \"ansiblesupport11@redhat.com\"\n      customization:\n        ether_stats_ifd_only: True\n      description: \"Local SNMP Server\"\n      engine_id:\n        local: \"local1\"\n        use_default_ip_address: True\n        use_mac_address: True\n      filter_duplicates: True\n      filter_interfaces:\n        set: True\n        all_internal_interfaces: True\n        interfaces:\n          - \"eth1\"\n          - \"eth2\"\n    state: replaced\n#\n# -------------------------\n# Module Execution Result\n# -------------------------\n#     \"after\": {\n#         \"contact\": \"ansiblesupport11@redhat.com\",\n#         \"customization\": {\n#             \"ether_stats_ifd_only\": true\n#         },\n#         \"description\": \"Local SNMP Server\",\n#         \"engine_id\": {\n#             \"use_mac_address\": true\n#         },\n#         \"filter_duplicates\": true,\n#         \"filter_interfaces\": {\n#             \"all_internal_interfaces\": true,\n#             \"interfaces\": [\n#                 \"eth1\",\n#                 \"eth2\"\n#             ]\n#         }\n#     },\n#     \"before\":\n#      {\n#         \"arp\": {\n#             \"host_name_resolution\": true\n#         },\n#         \"client_lists\": [\n#             {\n#                 \"addresses\": [\n#                     {\n#                         \"address\": \"192.16.1.0/24\"\n#                     },\n#                     {\n#                         \"address\": \"192.16.2.0/24\"\n#                     },\n#                     {\n#                         \"address\": \"11.11.11.11/32\",\n#                         \"restrict\": true\n#                     }\n#                 ],\n#                 \"name\": \"cl1\"\n#             },\n#             {\n#                 \"addresses\": [\n#                     {\n#                         \"address\": \"192.16.4.0/24\"\n#                     }\n#                 ],\n#                 \"name\": \"cl2\"\n#             }\n#         ],\n#         \"routing_instance_access\": {\n#             \"access_lists\": [\n#                 \"clv1\",\n#                 \"clv2\"\n#             ]\n#         }\n#     },\n#     \"changed\": true,\n#     \"commands\": [\n#         \"<nc:snmp xmlns:nc=\"urn:ietf:params:xml:ns:netconf:base:1.0\"/>\",\n#         \"<nc:snmp xmlns:nc=\"urn:ietf:params:xml:ns:netconf:base:1.0\" delete=\"delete\"/>\",\n#         \"<nc:snmp xmlns:nc=\"urn:ietf:params:xml:ns:netconf:base:1.0\">\"\n#         \"<nc:contact>ansiblesupport11@redhat.com</nc:contact><nc:customization>\"\n#         \"<nc:ether-stats-ifd-only/></nc:customization><nc:description>Local SNMP Server</nc:description>\"\n#         \"<nc:engine-id><nc:local>local1</nc:local><nc:use-default-ip-address/><nc:use-mac-address/>\"\n#         \"</nc:engine-id><nc:filter-duplicates/><nc:filter-interfaces><nc:all-internal-interfaces/><nc:interfaces>\"\n#         \"<nc:name>eth1</nc:name></nc:interfaces><nc:interfaces><nc:name>eth2</nc:name></nc:interfaces>\"\n#         \"</nc:filter-interfaces></nc:snmp>\"\n#     ]\n# After state\n# -----------\n#\n# vagrant@vsrx# show routing-instances\n# clv1 {\n#     description clv1;\n# }\n# clv2 {\n#     description clv2;\n# }\n# vagrant@vsrx# show snmp\n# description \"Local SNMP Server\";\n# contact \"ansiblesupport11@redhat.com\";\n# filter-interfaces {\n#     interfaces {\n#         eth1;\n#         eth2;\n#     }\n#     all-internal-interfaces;\n# }\n# filter-duplicates;\n# engine-id {\n#     use-mac-address;\n# }\n# customization {\n#     ether-stats-ifd-only;\n# }\n\n# Using overridden\n#\n# Before state\n# ------------\n#\n# vagrant@vsrx# show snmp\n# client-list cl1 {\n#     192.16.1.0/24;\n#     192.16.2.0/24;\n#     11.11.11.11/32 {\n#         restrict;\n#     }\n# }\n# client-list cl2 {\n#     192.16.4.0/24;\n# }\n# routing-instance-access {\n#     access-list {\n#         clv1;\n#         clv2;\n#     }\n# }\n# arp {\n#     host-name-resolution;\n# }\n# vagrant@vsrx# show routing-instances\n# clv1 {\n#     description clv1;\n# }\n# clv2 {\n#     description clv2;\n# }\n- name: Override running SNMP server configuration with provided configuration\n  junipernetworks.junos.junos_snmp_server:\n    config:\n      contact: \"ansiblesupport11@redhat.com\"\n      customization:\n        ether_stats_ifd_only: True\n      description: \"Local SNMP Server\"\n      engine_id:\n        local: \"local1\"\n        use_default_ip_address: True\n        use_mac_address: True\n      filter_duplicates: True\n      filter_interfaces:\n        set: True\n        all_internal_interfaces: True\n        interfaces:\n          - \"eth1\"\n          - \"eth2\"\n    state:  overridden\n#\n# -------------------------\n# Module Execution Result\n# -------------------------\n#     \"after\": {\n#         \"contact\": \"ansiblesupport11@redhat.com\",\n#         \"customization\": {\n#             \"ether_stats_ifd_only\": true\n#         },\n#         \"description\": \"Local SNMP Server\",\n#         \"engine_id\": {\n#             \"use_mac_address\": true\n#         },\n#         \"filter_duplicates\": true,\n#         \"filter_interfaces\": {\n#             \"all_internal_interfaces\": true,\n#             \"interfaces\": [\n#                 \"eth1\",\n#                 \"eth2\"\n#             ]\n#         }\n#     },\n#     \"before\":\n#      {\n#         \"arp\": {\n#             \"host_name_resolution\": true\n#         },\n#         \"client_lists\": [\n#             {\n#                 \"addresses\": [\n#                     {\n#                         \"address\": \"192.16.1.0/24\"\n#                     },\n#                     {\n#                         \"address\": \"192.16.2.0/24\"\n#                     },\n#                     {\n#                         \"address\": \"11.11.11.11/32\",\n#                         \"restrict\": true\n#                     }\n#                 ],\n#                 \"name\": \"cl1\"\n#             },\n#             {\n#                 \"addresses\": [\n#                     {\n#                         \"address\": \"192.16.4.0/24\"\n#                     }\n#                 ],\n#                 \"name\": \"cl2\"\n#             }\n#         ],\n#         \"routing_instance_access\": {\n#             \"access_lists\": [\n#                 \"clv1\",\n#                 \"clv2\"\n#             ]\n#         }\n#     },\n#     \"changed\": true,\n#     \"commands\": [\n#         \"<nc:snmp xmlns:nc=\"urn:ietf:params:xml:ns:netconf:base:1.0\"/>\",\n#         \"<nc:snmp xmlns:nc=\"urn:ietf:params:xml:ns:netconf:base:1.0\" delete=\"delete\"/>\",\n#         \"<nc:snmp xmlns:nc=\"urn:ietf:params:xml:ns:netconf:base:1.0\">\"\n#         \"<nc:contact>ansiblesupport11@redhat.com</nc:contact><nc:customization>\"\n#         \"<nc:ether-stats-ifd-only/></nc:customization><nc:description>Local SNMP Server</nc:description>\"\n#         \"<nc:engine-id><nc:local>local1</nc:local><nc:use-default-ip-address/><nc:use-mac-address/>\"\n#         \"</nc:engine-id><nc:filter-duplicates/><nc:filter-interfaces><nc:all-internal-interfaces/><nc:interfaces>\"\n#         \"<nc:name>eth1</nc:name></nc:interfaces><nc:interfaces><nc:name>eth2</nc:name></nc:interfaces>\"\n#         \"</nc:filter-interfaces></nc:snmp>\"\n#     ]\n# After state\n# -----------\n#\n# vagrant@vsrx# show routing-instances\n# clv1 {\n#     description clv1;\n# }\n# clv2 {\n#     description clv2;\n# }\n# vagrant@vsrx# show snmp\n# description \"Local SNMP Server\";\n# contact \"ansiblesupport11@redhat.com\";\n# filter-interfaces {\n#     interfaces {\n#         eth1;\n#         eth2;\n#     }\n#     all-internal-interfaces;\n# }\n# filter-duplicates;\n# engine-id {\n#     use-mac-address;\n# }\n# customization {\n#     ether-stats-ifd-only;\n# }\n#\n# Using deleted\n#\n# Before state\n# ------------\n#\n# vagrant@vsrx# show routing-instances\n# clv1 {\n#     description clv1;\n# }\n# clv2 {\n#     description clv2;\n# }\n# vagrant@vsrx# show snmp\n# description \"Local SNMP Server\";\n# contact \"ansiblesupport11@redhat.com\";\n# filter-interfaces {\n#     interfaces {\n#         eth1;\n#         eth2;\n#     }\n#     all-internal-interfaces;\n# }\n# filter-duplicates;\n# engine-id {\n#     use-mac-address;\n# }\n# customization {\n#     ether-stats-ifd-only;\n# }\n#\n- name: Delete running SNMP server configuration\n  junipernetworks.junos.junos_snmp_server:\n    config:\n    state: deleted\n#\n# -------------------------\n# Module Execution Result\n# -------------------------\n#     \"after\": {},\n#     \"before\": {\n#         \"contact\": \"ansiblesupport11@redhat.com\",\n#         \"customization\": {\n#             \"ether_stats_ifd_only\": true\n#         },\n#         \"description\": \"Local SNMP Server\",\n#         \"engine_id\": {\n#             \"use_mac_address\": true\n#         },\n#         \"filter_duplicates\": true,\n#         \"filter_interfaces\": {\n#             \"all_internal_interfaces\": true,\n#             \"interfaces\": [\n#                 \"eth1\",\n#                 \"eth2\"\n#             ]\n#         }\n#     },\n#     \"changed\": true,\n#     \"commands\": [\n#               \"<nc:snmp xmlns:nc=\"urn:ietf:params:xml:ns:netconf:base:1.0\"/>\",\n#               \"<nc:snmp xmlns:nc=\"urn:ietf:params:xml:ns:netconf:base:1.0\" delete=\"delete\"/>\"\n#     ]\n# After state\n# -----------\n#\n# vagrant@vsrx# show routing-instances\n# clv1 {\n#     description clv1;\n# }\n# clv2 {\n#     description clv2;\n# }\n# vagrant@vsrx# show snmp\n# description \"Local SNMP Server\";\n# contact \"ansiblesupport11@redhat.com\";\n# filter-interfaces {\n#     interfaces {\n#         eth1;\n#         eth2;\n#     }\n#     all-internal-interfaces;\n# }\n# filter-duplicates;\n# engine-id {\n#     use-mac-address;\n# }\n# customization {\n#     ether-stats-ifd-only;\n# }\n#\n- name: Gather running SNMP server configuration\n  junipernetworks.junos.junos_snmp_server:\n    state: gathered\n#\n# -------------------------\n# Module Execution Result\n# -------------------------\n#     \"gathered\": {\n#         \"contact\": \"ansiblesupport11@redhat.com\",\n#         \"customization\": {\n#             \"ether_stats_ifd_only\": true\n#         },\n#         \"description\": \"Local SNMP Server\",\n#         \"engine_id\": {\n#             \"use_mac_address\": true\n#         },\n#         \"filter_duplicates\": true,\n#         \"filter_interfaces\": {\n#             \"all_internal_interfaces\": true,\n#             \"interfaces\": [\n#                 \"eth1\",\n#                 \"eth2\"\n#             ]\n#         }\n#     },\n#     \"changed\": false,\n# Using rendered\n#\n# Before state\n# ------------\n#\n- name: Render xml for provided facts.\n  junipernetworks.junos.junos_snmp_server:\n    config:\n      arp:\n        set: true\n        host_name_resolution: true\n      routing_instance_access:  # ATTR-----3\n        set: true\n        access_lists:\n          - \"clv1\"\n          - \"clv2\"\n    state: rendered\n#\n# -------------------------\n# Module Execution Result\n# -------------------------\n#     \"rendered\": [\n#           \"<nc:snmp xmlns:nc=\"urn:ietf:params:xml:ns:netconf:base:1.0\">\"\n#           \"<nc:arp><nc:host-name-resolution/></nc:arp><nc:routing-instance-access>\"\n#           \"<nc:access-list><nc:name>clv1</nc:name></nc:access-list><nc:access-list><nc:name>clv2</nc:name>\"\n#           \"</nc:access-list></nc:routing-instance-access></nc:snmp>\"\n#     ]\n#\n# Using parsed\n# parsed.cfg\n# ------------\n# <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n# <rpc-reply message-id=\"urn:uuid:0cadb4e8-5bba-47f4-986e-72906227007f\">\n#     <configuration changed-seconds=\"1590139550\" changed-localtime=\"2020-05-22 09:25:50 UTC\">\n#         <version>18.4R1-S2.4</version>\n#         <system xmlns=\"http://yang.juniper.net/junos-es/conf/system\">\n#            <snmp>\n#         <client-list>\n#             <name>cl1</name>\n#             <client-address-list>\n#                 <name>192.16.1.0/24</name>\n#             </client-address-list>\n#             <client-address-list>\n#                 <name>192.16.2.0/24</name>\n#             </client-address-list>\n#             <client-address-list>\n#                 <name>11.11.11.11/32</name>\n#                 <restrict/>\n#             </client-address-list>\n#         </client-list>\n#         <client-list>\n#             <name>cl2</name>\n#             <client-address-list>\n#                 <name>192.16.4.0/24</name>\n#             </client-address-list>\n#         </client-list>\n#         <routing-instance-access>\n#             <access-list>\n#                 <name>clv1</name>\n#             </access-list>\n#             <access-list>\n#                 <name>clv2</name>\n#             </access-list>\n#         </routing-instance-access>\n#         <arp>\n#             <host-name-resolution/>\n#         </arp>\n#     </snmp>\n#     </system>\n#     </configuration>\n# </rpc-reply>\n#\n- name: Parse SNMP server running config\n  junipernetworks.junos.junos_snmp_server:\n    running_config: \"{{ lookup('file', './parsed.cfg') }}\"\n    state: parsed\n#\n#\n# -------------------------\n# Module Execution Result\n# -------------------------\n#\n#\n# \"parsed\":  {\n#         \"arp\": {\n#             \"host_name_resolution\": true\n#         },\n#         \"client_lists\": [\n#             {\n#                 \"addresses\": [\n#                     {\n#                         \"address\": \"192.16.1.0/24\"\n#                     },\n#                     {\n#                         \"address\": \"192.16.2.0/24\"\n#                     },\n#                     {\n#                         \"address\": \"11.11.11.11/32\",\n#                         \"restrict\": true\n#                     }\n#                 ],\n#                 \"name\": \"cl1\"\n#             },\n#             {\n#                 \"addresses\": [\n#                     {\n#                         \"address\": \"192.16.4.0/24\"\n#                     }\n#                 ],\n#                 \"name\": \"cl2\"\n#             }\n#         ],\n#         \"routing_instance_access\": {\n#             \"access_lists\": [\n#                 \"clv1\",\n#                 \"clv2\"\n#             ]\n#         }\n#     }\n#\n#\n"
  },
  "junipernetworks.junos.junos_static_route": {
    "doc": {
      "description": "This module provides declarative management of static IP routes on Juniper JUNOS network devices.",
      "has_action": true,
      "notes": "This module requires the netconf system service be enabled on the remote device being managed.\nTested against vSRX JUNOS version 15.1X49-D15.4, vqfx-10000 JUNOS Version 15.1X53-D60.4.\nRecommended connection is C(netconf). See L(the Junos OS Platform Options,../network/user_guide/platform_junos.html).\nThis module also works with C(local) connections for legacy playbooks.\nFor information on using CLI and netconf see the :ref:`Junos OS Platform Options guide <junos_platform_options>`\nFor more information on using Ansible to manage network devices see the :ref:`Ansible Network Guide <network_guide>`\nFor more information on using Ansible to manage Juniper network devices see U(https://www.ansible.com/ansible-juniper).",
      "options": {
        "active": {
          "aliases": [],
          "description": "Specifies whether or not the configuration is active or deactivated",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "address": {
          "aliases": [
            "prefix"
          ],
          "description": "Network address with prefix of the static route.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aggregate": {
          "aliases": [],
          "description": "List of static route definitions",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "active": {
              "aliases": [],
              "description": "Specifies whether or not the configuration is active or deactivated",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "address": {
              "aliases": [],
              "description": "Network address with prefix of the static route.",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "next_hop": {
              "aliases": [],
              "description": "Next hop IP of the static route.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "preference": {
              "aliases": [
                "admin_distance"
              ],
              "description": "Global admin preference of the static route.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "qualified_next_hop": {
              "aliases": [],
              "description": "Qualified next hop IP of the static route. Qualified next hops allow to associate preference with a particular next-hop address.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "qualified_preference": {
              "aliases": [],
              "description": "Assign preference for qualified next hop.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "state": {
              "aliases": [],
              "description": "State of the static route configuration.",
              "type": "str",
              "required": false,
              "choices": [
                "present",
                "absent"
              ],
              "suboptions": {}
            }
          }
        },
        "next_hop": {
          "aliases": [],
          "description": "Next hop IP of the static route.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "preference": {
          "aliases": [
            "admin_distance"
          ],
          "description": "Global admin preference of the static route.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "B(Deprecated)\nStarting with Ansible 2.5 we recommend using C(connection: network_cli) or C(connection: netconf).\nFor more information please see the L(Junos OS Platform Options guide, ../network/user_guide/platform_junos.html).\nHORIZONTALLINE\nA dict object containing connection details.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "host": {
              "aliases": [],
              "description": "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [],
              "description": "Specifies the password to use to authenticate the connection to the remote device.   This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "port": {
              "aliases": [],
              "description": "Specifies the port to use when building the connection to the remote device.  The port value will default to the well known SSH port of 22 (for C(transport=cli)) or port 830 (for C(transport=netconf)) device.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "ssh_keyfile": {
              "aliases": [],
              "description": "Specifies the SSH key to use to authenticate the connection to the remote device.   This value is the path to the key used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead.",
              "type": "path",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "netconf",
              "type": "str",
              "required": false,
              "choices": [
                "cli",
                "netconf"
              ],
              "suboptions": {}
            },
            "username": {
              "aliases": [],
              "description": "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "qualified_next_hop": {
          "aliases": [],
          "description": "Qualified next hop IP of the static route. Qualified next hops allow to associate preference with a particular next-hop address.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "qualified_preference": {
          "aliases": [],
          "description": "Assign preference for qualified next hop.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "State of the static route configuration.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "ncclient (>=v0.5.2)"
      ],
      "short_description": "(deprecated, removed after 2022-06-01) Manage static IP routes on Juniper JUNOS network devices",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: configure static route\n  junipernetworks.junos.junos_static_route:\n    address: 192.168.2.0/24\n    next_hop: 10.0.0.1\n    preference: 10\n    qualified_next_hop: 10.0.0.2\n    qualified_preference: 3\n    state: present\n\n- name: delete static route\n  junipernetworks.junos.junos_static_route:\n    address: 192.168.2.0/24\n    state: absent\n\n- name: deactivate static route configuration\n  junipernetworks.junos.junos_static_route:\n    address: 192.168.2.0/24\n    next_hop: 10.0.0.1\n    preference: 10\n    qualified_next_hop: 10.0.0.2\n    qualified_preference: 3\n    state: present\n    active: false\n\n- name: activate static route configuration\n  junipernetworks.junos.junos_static_route:\n    address: 192.168.2.0/24\n    next_hop: 10.0.0.1\n    preference: 10\n    qualified_next_hop: 10.0.0.2\n    qualified_preference: 3\n    state: present\n    active: true\n\n- name: Configure static route using aggregate\n  junipernetworks.junos.junos_static_route:\n    aggregate:\n    - {address: 4.4.4.0/24, next_hop: 3.3.3.3, qualified_next_hop: 5.5.5.5, qualified_preference: 30}\n    - {address: 5.5.5.0/24, next_hop: 6.6.6.6, qualified_next_hop: 7.7.7.7, qualified_preference: 12}\n    preference: 10\n\n- name: Delete static route using aggregate\n  junipernetworks.junos.junos_static_route:\n    aggregate:\n    - address: 4.4.4.0/24\n    - address: 5.5.5.0/24\n    state: absent\n"
  },
  "junipernetworks.junos.junos_static_routes": {
    "doc": {
      "description": "This module provides declarative management of static routes on Juniper JUNOS devices",
      "has_action": true,
      "notes": "This module requires the netconf system service be enabled on the device being managed.\nThis module works with connection C(netconf). See L(the Junos OS Platform Options,../network/user_guide/platform_junos.html).\nTested against JunOS v18.4R1",
      "options": {
        "config": {
          "aliases": [],
          "description": "A dictionary of static routes options",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "address_families": {
              "aliases": [],
              "description": "Address family to use for the static routes",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "afi": {
                  "aliases": [],
                  "description": "afi to use for the static routes",
                  "type": "str",
                  "required": true,
                  "choices": [
                    "ipv4",
                    "ipv6"
                  ],
                  "suboptions": {}
                },
                "routes": {
                  "aliases": [],
                  "description": "Static route configuration",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "dest": {
                      "aliases": [],
                      "description": "Static route destination including prefix",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "metric": {
                      "aliases": [],
                      "description": "Metric value for the static route",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "next_hop": {
                      "aliases": [],
                      "description": "Next hop to destination",
                      "type": "list",
                      "required": false,
                      "elements": "dict",
                      "suboptions": {
                        "forward_router_address": {
                          "aliases": [],
                          "description": "List of next hops",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    }
                  }
                }
              }
            },
            "vrf": {
              "aliases": [],
              "description": "Virtual Routing and Forwarding (VRF) name",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "running_config": {
          "aliases": [],
          "description": "This option is used only with state I(parsed).\nThe value of this option should be the output received from the Junos device by executing the command B(show routing-options).\nThe state I(parsed) reads the configuration from C(running_config) option and transforms it into Ansible structured data as per the resource module's argspec and the value is then returned in the I(parsed) key within the result",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The state the configuration should be left in",
          "default": "merged",
          "type": "str",
          "required": false,
          "choices": [
            "merged",
            "replaced",
            "overridden",
            "deleted",
            "gathered",
            "rendered",
            "parsed"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "ncclient (>=v0.6.4)",
        "xmltodict (>=0.12)"
      ],
      "short_description": "Static routes resource module",
      "version_added": "1.0.0"
    },
    "examples": "\n# Using deleted\n\n# Before state\n# ------------\n#\n# admin# show routing-options\n# static {\n#     route 192.168.47.0/24 next-hop 172.16.1.2;\n#     route 192.168.16.0/24 next-hop 172.16.1.2;\n#     route 10.200.16.75/24 next-hop 10.200.16.2;\n# }\n\n- name: Delete provided configuration (default operation is merge)\n  junipernetworks.junos.junos_static_routes:\n    config:\n    - address_families:\n      - afi: ipv4\n        routes:\n        - dest: 10.200.16.75/24\n          next_hop:\n          - forward_router_address: 10.200.16.2\n    state: deleted\n\n# After state:\n# ------------\n#\n# admin# show routing-options\n# static {\n#     route 192.168.47.0/24 next-hop 172.16.1.2;\n#     route 192.168.16.0/24 next-hop 172.16.1.2;\n# }\n\n# Using merged\n\n# Before state\n# ------------\n#\n# admin# show routing-options\n# static {\n#     route 192.168.47.0/24 next-hop 172.16.1.2;\n#     route 192.168.16.0/24 next-hop 172.16.1.2;\n# }\n\n- name: Merge provided configuration with device configuration (default operation\n    is merge)\n  junipernetworks.junos.junos_static_routes:\n    config:\n    - address_families:\n      - afi: ipv4\n        routes:\n        - dest: 10.200.16.75/24\n          next_hop:\n          - forward_router_address: 10.200.16.2\n    state: merged\n\n# After state:\n# ------------\n#\n# admin# show routing-options\n# static {\n#     route 192.168.47.0/24 next-hop 172.16.1.2;\n#     route 192.168.16.0/24 next-hop 172.16.1.2;\n#     route 10.200.16.75/24 next-hop 10.200.16.2;\n# }\n\n# Using overridden\n\n# Before state\n# ------------\n#\n# admin# show routing-options\n# static {\n#     route 192.168.47.0/24 next-hop 172.16.1.2;\n#     route 192.168.16.0/24 next-hop 172.16.0.1;\n# }\n\n- name: Override provided configuration with device configuration (default operation\n    is merge)\n  junipernetworks.junos.junos_static_routes:\n    config:\n    - address_families:\n      - afi: ipv4\n        routes:\n        - dest: 10.200.16.75/24\n          next_hop:\n          - forward_router_address: 10.200.16.2\n    state: overridden\n\n# After state:\n# ------------\n#\n# admin# show routing-options\n# static {\n#     route 10.200.16.75/24 next-hop 10.200.16.2;\n# }\n\n# Using replaced\n\n# Before state\n# ------------\n#\n# admin# show routing-options\n# static {\n#     route 192.168.47.0/24 next-hop 172.16.1.2;\n#     route 192.168.16.0/24 next-hop 172.16.1.2;\n# }\n\n- name: Replace provided configuration with device configuration (default operation\n    is merge)\n  junipernetworks.junos.junos_static_routes:\n    config:\n    - address_families:\n      - afi: ipv4\n        routes:\n        - dest: 192.168.47.0/24\n          next_hop:\n          - forward_router_address: 10.200.16.2\n    state: replaced\n\n# After state:\n# ------------\n#\n# admin# show routing-options\n# static {\n#     route 192.168.47.0/24 next-hop 10.200.16.2;\n#     route 192.168.16.0/24 next-hop 172.16.1.2;\n# }\n\n\n"
  },
  "junipernetworks.junos.junos_system": {
    "doc": {
      "description": "This module provides declarative management of node system attributes on Juniper JUNOS devices.  It provides an option to configure host system parameters or remove those parameters from the device active configuration.",
      "has_action": true,
      "notes": "This module requires the netconf system service be enabled on the remote device being managed.\nTested against vSRX JUNOS version 15.1X49-D15.4, vqfx-10000 JUNOS Version 15.1X53-D60.4.\nRecommended connection is C(netconf). See L(the Junos OS Platform Options,../network/user_guide/platform_junos.html).\nThis module also works with C(local) connections for legacy playbooks.\nFor information on using CLI and netconf see the :ref:`Junos OS Platform Options guide <junos_platform_options>`\nFor more information on using Ansible to manage network devices see the :ref:`Ansible Network Guide <network_guide>`\nFor more information on using Ansible to manage Juniper network devices see U(https://www.ansible.com/ansible-juniper).",
      "options": {
        "active": {
          "aliases": [],
          "description": "Specifies whether or not the configuration is active or deactivated",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "domain_name": {
          "aliases": [],
          "description": "Configure the IP domain name on the remote device to the provided value. Value should be in the dotted name form and will be appended to the C(hostname) to create a fully-qualified domain name.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "domain_search": {
          "aliases": [],
          "description": "Provides the list of domain suffixes to append to the hostname for the purpose of doing name resolution. This argument accepts a list of names and will be reconciled with the current active configuration on the running node.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "hostname": {
          "aliases": [],
          "description": "Configure the device hostname parameter. This option takes an ASCII string value.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name_servers": {
          "aliases": [],
          "description": "List of DNS name servers by IP address to use to perform name resolution lookups.  This argument accepts either a list of DNS servers See examples.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "B(Deprecated)\nStarting with Ansible 2.5 we recommend using C(connection: network_cli) or C(connection: netconf).\nFor more information please see the L(Junos OS Platform Options guide, ../network/user_guide/platform_junos.html).\nHORIZONTALLINE\nA dict object containing connection details.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "host": {
              "aliases": [],
              "description": "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [],
              "description": "Specifies the password to use to authenticate the connection to the remote device.   This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "port": {
              "aliases": [],
              "description": "Specifies the port to use when building the connection to the remote device.  The port value will default to the well known SSH port of 22 (for C(transport=cli)) or port 830 (for C(transport=netconf)) device.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "ssh_keyfile": {
              "aliases": [],
              "description": "Specifies the SSH key to use to authenticate the connection to the remote device.   This value is the path to the key used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead.",
              "type": "path",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "netconf",
              "type": "str",
              "required": false,
              "choices": [
                "cli",
                "netconf"
              ],
              "suboptions": {}
            },
            "username": {
              "aliases": [],
              "description": "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "State of the configuration values in the device's current active configuration.  When set to I(present), the values should be configured in the device active configuration and when set to I(absent) the values should not be in the device active configuration",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "ncclient (>=v0.5.2)"
      ],
      "short_description": "Manage the system attributes on Juniper JUNOS devices",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: configure hostname and domain name\n  junipernetworks.junos.junos_system:\n    hostname: junos01\n    domain_name: test.example.com\n    domain-search:\n    - ansible.com\n    - redhat.com\n    - juniper.net\n\n- name: remove configuration\n  junipernetworks.junos.junos_system:\n    state: absent\n\n- name: configure name servers\n  junipernetworks.junos.junos_system:\n    name_servers:\n    - 8.8.8.8\n    - 8.8.4.4\n"
  },
  "junipernetworks.junos.junos_user": {
    "doc": {
      "description": "This module manages locally configured user accounts on remote network devices running the JUNOS operating system.  It provides a set of arguments for creating, removing and updating locally defined accounts",
      "has_action": true,
      "notes": "This module requires the netconf system service be enabled on the remote device being managed.\nTested against vSRX JUNOS version 15.1X49-D15.4, vqfx-10000 JUNOS Version 15.1X53-D60.4.\nRecommended connection is C(netconf). See L(the Junos OS Platform Options,../network/user_guide/platform_junos.html).\nThis module also works with C(local) connections for legacy playbooks.\nFor information on using CLI and netconf see the :ref:`Junos OS Platform Options guide <junos_platform_options>`\nFor more information on using Ansible to manage network devices see the :ref:`Ansible Network Guide <network_guide>`\nFor more information on using Ansible to manage Juniper network devices see U(https://www.ansible.com/ansible-juniper).",
      "options": {
        "active": {
          "aliases": [],
          "description": "Specifies whether or not the configuration is active or deactivated",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "aggregate": {
          "aliases": [
            "users",
            "collection"
          ],
          "description": "The C(aggregate) argument defines a list of users to be configured on the remote device.  The list of users will be compared against the current users and only changes will be added or removed from the device configuration.  This argument is mutually exclusive with the name argument.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "active": {
              "aliases": [],
              "description": "Specifies whether or not the configuration is active or deactivated",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "encrypted_password": {
              "aliases": [],
              "description": "The C(encrypted_password) argument set already hashed password for the user account on the remote system.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "full_name": {
              "aliases": [],
              "description": "The C(full_name) argument provides the full name of the user account to be created on the remote device.  This argument accepts any text string value.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "name": {
              "aliases": [],
              "description": "The C(name) argument defines the username of the user to be created on the system.  This argument must follow appropriate usernaming conventions for the target device running JUNOS.  This argument is mutually exclusive with the C(aggregate) argument.",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "purge": {
              "aliases": [],
              "description": "The C(purge) argument instructs the module to consider the users definition absolute.  It will remove any previously configured users on the device with the exception of the current defined set of aggregate.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "role": {
              "aliases": [],
              "description": "The C(role) argument defines the role of the user account on the remote system.  User accounts can have more than one role configured.",
              "type": "str",
              "required": false,
              "choices": [
                "operator",
                "read-only",
                "super-user",
                "unauthorized"
              ],
              "suboptions": {}
            },
            "sshkey": {
              "aliases": [],
              "description": "The C(sshkey) argument defines the public SSH key to be configured for the user account on the remote system.  This argument must be a valid SSH key",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "state": {
              "aliases": [],
              "description": "The C(state) argument configures the state of the user definitions as it relates to the device operational configuration.  When set to I(present), the user should be configured in the device active configuration and when set to I(absent) the user should not be in the device active configuration",
              "type": "str",
              "required": false,
              "choices": [
                "present",
                "absent"
              ],
              "suboptions": {}
            }
          }
        },
        "encrypted_password": {
          "aliases": [],
          "description": "The C(encrypted_password) argument set already hashed password for the user account on the remote system.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "full_name": {
          "aliases": [],
          "description": "The C(full_name) argument provides the full name of the user account to be created on the remote device.  This argument accepts any text string value.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The C(name) argument defines the username of the user to be created on the system.  This argument must follow appropriate usernaming conventions for the target device running JUNOS.  This argument is mutually exclusive with the C(aggregate) argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "B(Deprecated)\nStarting with Ansible 2.5 we recommend using C(connection: network_cli) or C(connection: netconf).\nFor more information please see the L(Junos OS Platform Options guide, ../network/user_guide/platform_junos.html).\nHORIZONTALLINE\nA dict object containing connection details.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "host": {
              "aliases": [],
              "description": "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [],
              "description": "Specifies the password to use to authenticate the connection to the remote device.   This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "port": {
              "aliases": [],
              "description": "Specifies the port to use when building the connection to the remote device.  The port value will default to the well known SSH port of 22 (for C(transport=cli)) or port 830 (for C(transport=netconf)) device.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "ssh_keyfile": {
              "aliases": [],
              "description": "Specifies the SSH key to use to authenticate the connection to the remote device.   This value is the path to the key used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead.",
              "type": "path",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "netconf",
              "type": "str",
              "required": false,
              "choices": [
                "cli",
                "netconf"
              ],
              "suboptions": {}
            },
            "username": {
              "aliases": [],
              "description": "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "purge": {
          "aliases": [],
          "description": "The C(purge) argument instructs the module to consider the users definition absolute.  It will remove any previously configured users on the device with the exception of the current defined set of aggregate.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "role": {
          "aliases": [],
          "description": "The C(role) argument defines the role of the user account on the remote system.  User accounts can have more than one role configured.",
          "type": "str",
          "required": false,
          "choices": [
            "operator",
            "read-only",
            "super-user",
            "unauthorized"
          ],
          "suboptions": {}
        },
        "sshkey": {
          "aliases": [],
          "description": "The C(sshkey) argument defines the public SSH key to be configured for the user account on the remote system.  This argument must be a valid SSH key",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The C(state) argument configures the state of the user definitions as it relates to the device operational configuration.  When set to I(present), the user should be configured in the device active configuration and when set to I(absent) the user should not be in the device active configuration",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "ncclient (>=v0.5.2)"
      ],
      "short_description": "Manage local user accounts on Juniper JUNOS devices",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: create new user account\n  junipernetworks.junos.junos_user:\n    name: ansible\n    role: super-user\n    sshkey: \"{{ lookup('file', '~/.ssh/ansible.pub') }}\"\n    state: present\n\n- name: remove a user account\n  junipernetworks.junos.junos_user:\n    name: ansible\n    state: absent\n\n- name: remove all user accounts except ansible\n  junipernetworks.junos.junos_user:\n    aggregate:\n    - name: ansible\n    purge: yes\n\n- name: set user password\n  junipernetworks.junos.junos_user:\n    name: ansible\n    role: super-user\n    encrypted_password: \"{{ 'my-password' | password_hash('sha512') }}\"\n    state: present\n\n- name: Create list of users\n  junipernetworks.junos.junos_user:\n    aggregate:\n    - {name: test_user1, full_name: test_user2, role: operator, state: present}\n    - {name: test_user2, full_name: test_user2, role: read-only, state: present}\n\n- name: Delete list of users\n  junipernetworks.junos.junos_user:\n    aggregate:\n    - {name: test_user1, full_name: test_user2, role: operator, state: absent}\n    - {name: test_user2, full_name: test_user2, role: read-only, state: absent}\n"
  },
  "junipernetworks.junos.junos_vlan": {
    "doc": {
      "description": "This module provides declarative management of VLANs on Juniper JUNOS network devices.",
      "has_action": true,
      "notes": "This module requires the netconf system service be enabled on the remote device being managed.\nTested against vSRX JUNOS version 15.1X49-D15.4, vqfx-10000 JUNOS Version 15.1X53-D60.4.\nRecommended connection is C(netconf). See L(the Junos OS Platform Options,../network/user_guide/platform_junos.html).\nThis module also works with C(local) connections for legacy playbooks.\nFor information on using CLI and netconf see the :ref:`Junos OS Platform Options guide <junos_platform_options>`\nFor more information on using Ansible to manage network devices see the :ref:`Ansible Network Guide <network_guide>`\nFor more information on using Ansible to manage Juniper network devices see U(https://www.ansible.com/ansible-juniper).",
      "options": {
        "active": {
          "aliases": [],
          "description": "Specifies whether or not the configuration is active or deactivated",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "aggregate": {
          "aliases": [],
          "description": "List of VLANs definitions.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "active": {
              "aliases": [],
              "description": "Specifies whether or not the configuration is active or deactivated",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "description": {
              "aliases": [],
              "description": "Text description of VLANs.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "filter_input": {
              "aliases": [],
              "description": "The name of input filter.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "filter_output": {
              "aliases": [],
              "description": "The name of output filter.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "interfaces": {
              "aliases": [],
              "description": "List of interfaces to check the VLAN has been configured correctly.",
              "type": "list",
              "required": false,
              "elements": "str",
              "suboptions": {}
            },
            "l3_interface": {
              "aliases": [],
              "description": "Name of logical layer 3 interface.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "name": {
              "aliases": [],
              "description": "Name of the VLAN.",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "state": {
              "aliases": [],
              "description": "State of the VLAN configuration.",
              "type": "str",
              "required": false,
              "choices": [
                "present",
                "absent"
              ],
              "suboptions": {}
            },
            "vlan_id": {
              "aliases": [],
              "description": "ID of the VLAN. Range 1-4094.",
              "type": "int",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "description": {
          "aliases": [],
          "description": "Text description of VLANs.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filter_input": {
          "aliases": [],
          "description": "The name of input filter.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filter_output": {
          "aliases": [],
          "description": "The name of output filter.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "interfaces": {
          "aliases": [],
          "description": "List of interfaces to check the VLAN has been configured correctly.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "l3_interface": {
          "aliases": [],
          "description": "Name of logical layer 3 interface.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the VLAN.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "B(Deprecated)\nStarting with Ansible 2.5 we recommend using C(connection: network_cli) or C(connection: netconf).\nFor more information please see the L(Junos OS Platform Options guide, ../network/user_guide/platform_junos.html).\nHORIZONTALLINE\nA dict object containing connection details.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "host": {
              "aliases": [],
              "description": "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [],
              "description": "Specifies the password to use to authenticate the connection to the remote device.   This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "port": {
              "aliases": [],
              "description": "Specifies the port to use when building the connection to the remote device.  The port value will default to the well known SSH port of 22 (for C(transport=cli)) or port 830 (for C(transport=netconf)) device.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "ssh_keyfile": {
              "aliases": [],
              "description": "Specifies the SSH key to use to authenticate the connection to the remote device.   This value is the path to the key used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead.",
              "type": "path",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "netconf",
              "type": "str",
              "required": false,
              "choices": [
                "cli",
                "netconf"
              ],
              "suboptions": {}
            },
            "username": {
              "aliases": [],
              "description": "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "State of the VLAN configuration.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "vlan_id": {
          "aliases": [],
          "description": "ID of the VLAN. Range 1-4094.",
          "type": "int",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "ncclient (>=v0.5.2)"
      ],
      "short_description": "(deprecated, removed after 2022-06-01) Manage VLANs on Juniper JUNOS network devices",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: configure VLAN ID and name\n  junipernetworks.junos.junos_vlan:\n    name: test\n    vlan_id: 20\n\n- name: Link to logical layer 3 interface\n  junipernetworks.junos.junos_vlan:\n    name: test\n    vlan_id: 20\n    l3-interface: vlan.20\n\n- name: remove VLAN configuration\n  junipernetworks.junos.junos_vlan:\n    name: test\n    state: absent\n\n- name: deactive VLAN configuration\n  junipernetworks.junos.junos_vlan:\n    name: test\n    state: present\n    active: false\n\n- name: activate VLAN configuration\n  junipernetworks.junos.junos_vlan:\n    name: test\n    state: present\n    active: true\n\n- name: Create vlan configuration using aggregate\n  junipernetworks.junos.junos_vlan:\n    aggregate:\n    - {vlan_id: 159, name: test_vlan_1, description: test vlan-1}\n    - {vlan_id: 160, name: test_vlan_2, description: test vlan-2}\n\n- name: Delete vlan configuration using aggregate\n  junipernetworks.junos.junos_vlan:\n    aggregate:\n    - {vlan_id: 159, name: test_vlan_1}\n    - {vlan_id: 160, name: test_vlan_2}\n    state: absent\n"
  },
  "junipernetworks.junos.junos_vlans": {
    "doc": {
      "description": "This module creates and manages VLAN configurations on Junos OS.",
      "has_action": true,
      "notes": "This module requires the netconf system service be enabled on the remote device being managed\nTested against Junos OS 18.4R1\nThis module works with connection C(netconf).\nSee L(the Junos OS Platform Options,https://docs.ansible.com/ansible/latest/network/user_guide/platform_junos.html).",
      "options": {
        "config": {
          "aliases": [],
          "description": "A dictionary of Vlan options",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "description": {
              "aliases": [],
              "description": "Text description of VLANs",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "l3_interface": {
              "aliases": [],
              "description": "Name of logical layer 3 interface.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "name": {
              "aliases": [],
              "description": "Name of VLAN.",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "vlan_id": {
              "aliases": [],
              "description": "IEEE 802.1q VLAN identifier for VLAN (1..4094).",
              "type": "int",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "running_config": {
          "aliases": [],
          "description": "This option is used only with state I(parsed).\nThe value of this option should be the output received from the Junos device by executing the command B(show vlans).\nThe state I(parsed) reads the configuration from C(running_config) option and transforms it into Ansible structured data as per the resource module's argspec and the value is then returned in the I(parsed) key within the result",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The state of the configuration after module completion.",
          "default": "merged",
          "type": "str",
          "required": false,
          "choices": [
            "merged",
            "replaced",
            "overridden",
            "deleted",
            "gathered",
            "parsed",
            "rendered"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "ncclient (>=v0.6.4)"
      ],
      "short_description": "VLANs resource module",
      "version_added": "1.0.0"
    },
    "examples": "\n# Using merged\n#\n# Before state\n# ------------\n#\n# vagrant@vsrx# show vlans\n#\n# [edit]\n\n- name: Merge provided Junos vlans config with running-config\n  junipernetworks.junos.junos_vlans:\n    config:\n    - name: vlan1\n      vlan_id: 1\n    - name: vlan2\n      vlan_id: 2\n      l3_interface: irb.12\n    state: merged\n#\n# -------------------------\n# Module Execution Result\n# -------------------------\n#     \"after\": [\n#         {\n#             \"name\": \"vlan1\",\n#             \"vlan_id\": 1\n#         },\n#         {\n#             \"l3_interface\": \"irb.12\",\n#             \"name\": \"vlan2\",\n#             \"vlan_id\": 2\n#         }\n#     ],\n#     \"before\": [],\n#     \"changed\": true,\n#     \"commands\": [\n#         \"<nc:vlans xmlns:nc=\"urn:ietf:params:xml:ns:netconf:base:1.0\">\"\n#         \"<nc:vlan><nc:name>vlan1</nc:name><nc:vlan-id>1</nc:vlan-id></nc:vlan>\"\n#         \"<nc:vlan><nc:name>vlan2</nc:name><nc:vlan-id>2</nc:vlan-id><nc:l3-interface>irb.12</nc:l3-interface>\"\n#         \"</nc:vlan></nc:vlans>\"\n#     ]\n# After state\n# -----------\n#\n# vagrant@vsrx# show vlans\n# vlan1 {\n#     vlan-id 1;\n# }\n# vlan2 {\n#     vlan-id 2;\n#     l3-interface irb.12;\n# }\n\n# Using replaced\n#\n# Before state\n# ------------\n#\n# vagrant@vsrx# show vlans\n# vlan1 {\n#     vlan-id 1;\n# }\n# vlan2 {\n#     vlan-id 2;\n#     l3-interface irb.12;\n# }\n\n- name: Replace Junos vlans running-config with the provided config\n  junipernetworks.junos.junos_vlans:\n    config:\n    - name: vlan1\n      vlan_id: 11\n      l3_interface: irb.10\n\n    - name: vlan2\n      vlan_id: 2\n    state: replaced\n# -------------------------\n# Module Execution Result\n# -------------------------\n#     \"after\": [\n#         {\n#             \"l3_interface\": \"irb.10\",\n#             \"name\": \"vlan1\",\n#             \"vlan_id\": 11\n#         },\n#         {\n#             \"name\": \"vlan2\",\n#             \"vlan_id\": 2\n#         }\n#     ],\n#     \"before\": [\n#         {\n#             \"name\": \"vlan1\",\n#             \"vlan_id\": 1\n#         },\n#         {\n#             \"l3_interface\": \"irb.12\",\n#             \"name\": \"vlan2\",\n#             \"vlan_id\": 2\n#         }\n#     ],\n#     \"changed\": true,\n#     \"commands\": [\n#         \"<nc:vlans xmlns:nc=\"urn:ietf:params:xml:ns:netconf:base:1.0\">\"\n#         \"<nc:vlan delete=\"delete\"><nc:name>vlan1</nc:name></nc:vlan>\"\n#         \"<nc:vlan delete=\"delete\"><nc:name>vlan2</nc:name></nc:vlan>\"\n#         \"<nc:vlan><nc:name>vlan1</nc:name><nc:vlan-id>11</nc:vlan-id>\"\n#         \"<nc:l3-interface>irb.10</nc:l3-interface></nc:vlan><nc:vlan>\"\n#         \"<nc:name>vlan2</nc:name><nc:vlan-id>2</nc:vlan-id></nc:vlan></nc:vlans>\"\n#     ]\n# After state\n# -----------\n#\n# vagrant@vsrx# show vlans\n# vlan1 {\n#     vlan-id 11;\n#     l3-interface irb.10;\n# }\n# vlan2 {\n#     vlan-id 2;\n# }\n#\n# Using overridden\n#\n# Before state\n# ------------\n#\n# vagrant@vsrx# show vlans\n# vlan1 {\n#     vlan-id 11;\n#     l3-interface irb.10;\n# }\n# vlan2 {\n#     vlan-id 2;\n# }\n- name: Override Junos running-config with provided config\n  junipernetworks.junos.junos_vlans:\n    config:\n    - name: vlan3\n      vlan_id: 3\n      l3_interface: irb.13\n    state: overridden\n# -------------------------\n# Module Execution Result\n# -------------------------\n#     \"after\": [\n#         {\n#             \"l3_interface\": \"irb.13\",\n#             \"name\": \"vlan3\",\n#             \"vlan_id\": 3\n#         }\n#     ],\n#     \"before\": [\n#         {\n#             \"l3_interface\": \"irb.10\",\n#             \"name\": \"vlan1\",\n#             \"vlan_id\": 11\n#         },\n#         {\n#             \"name\": \"vlan2\",\n#             \"vlan_id\": 2\n#         }\n#     ],\n#     \"changed\": true,\n#     \"commands\": [\n#         \"<nc:vlans xmlns:nc=\"urn:ietf:params:xml:ns:netconf:base:1.0\">\"\n#         \"<nc:vlan delete=\"delete\"><nc:name>vlan1</nc:name></nc:vlan><nc:vlan delete=\"delete\">\"\n#         \"<nc:name>vlan2</nc:name></nc:vlan><nc:vlan><nc:name>vlan3</nc:name><nc:vlan-id>3</nc:vlan-id>\"\n#         \"<nc:l3-interface>irb.13</nc:l3-interface></nc:vlan></nc:vlans>\"\n#     ]\n# After state\n# -----------\n#\n# vagrant@vsrx# show vlans\n# vlan3 {\n#     vlan-id 3;\n#     l3-interface irb.13;\n# }\n#\n# Using deleted\n#\n# Before state\n# ------------\n#\n# vagrant@vsrx# show vlans\n# vlan3 {\n#     vlan-id 3;\n#     l3-interface irb.13;\n# }\n- name: Delete specific vlan\n  junipernetworks.junos.junos_vlans:\n    config:\n    - name: vlan3\n    state: deleted\n# -------------------------\n# Module Execution Result\n# -------------------------\n#     \"after\": [],\n#     \"changed\": true,\n#     \"commands\": [\n#         \"<nc:vlans xmlns:nc=\"urn:ietf:params:xml:ns:netconf:base:1.0\">\n#         \"<nc:vlan delete=\"delete\"><nc:name>vlan3</nc:name></nc:vlan></nc:vlans>\"\n#     ]\n# After state\n# -----------\n#\n# vagrant@vsrx# show vlans\n# vlan1 {\n#     vlan-id 11;\n#     l3-interface irb.10;\n# }\n# vlan2 {\n#     vlan-id 2;\n# }\n\n\n- name: Gather running vlans configuration\n  junipernetworks.junos.junos_vlans:\n    state: gathered\n#\n# -------------------------\n# Module Execution Result\n# -------------------------\n#     \"gathered\": [\n#         {\n#             \"l3_interface\": \"irb.10\",\n#             \"name\": \"vlan1\",\n#             \"vlan_id\": 11\n#         },\n#         {\n#             \"name\": \"vlan2\",\n#             \"vlan_id\": 2\n#         }\n#     ],\n#     \"changed\": false,\n#\n# Using rendered\n#\n# Before state\n# ------------\n#\n- name: Render xml for provided facts.\n  junipernetworks.junos.junos_vlans:\n    config:\n    - name: vlan1\n      vlan_id: 1\n\n    - name: vlan2\n      vlan_id: 2\n      l3_interface: irb.12\n    state: rendered\n#\n# -------------------------\n# Module Execution Result\n# -------------------------\n#     \"rendered\": [\n#         \"<nc:vlans xmlns:nc=\"urn:ietf:params:xml:ns:netconf:base:1.0\">\"\n#         \"<nc:vlan><nc:name>vlan1</nc:name><nc:vlan-id>1</nc:vlan-id></nc:vlan>\"\n#         \"<nc:vlan><nc:name>vlan2</nc:name><nc:vlan-id>2</nc:vlan-id><nc:l3-interface>irb.12</nc:l3-interface>\"\n#         \"</nc:vlan></nc:vlans>\"\n#     ]\n# Using parsed\n# parsed.cfg\n# ------------\n# <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n# <rpc-reply message-id=\"urn:uuid:0cadb4e8-5bba-47f4-986e-72906227007f\">\n#     <configuration changed-seconds=\"1590139550\" changed-localtime=\"2020-05-22 09:25:50 UTC\">\n#         <version>18.4R1-S2.4</version>\n#         <vlans>\n#           <vlan>\n#             <name>vlan1</name>\n#             <vlan-id>1</vlan-id>\n#           </vlan>\n#           <vlan>\n#             <name>vlan2</name>\n#             <vlan-id>2</vlan-id>\n#             <l3-interface>irb.12</l3-interface>\n#           </vlan>\n#        </vlans>\n#     </configuration>\n# </rpc-reply>\n\n- name: Parse routing instance running config\n  junipernetworks.junos.junos_vlans:\n    running_config: \"{{ lookup('file', './parsed.cfg') }}\"\n    state: parsed\n#\n#\n# -------------------------\n# Module Execution Result\n# -------------------------\n#\n#\n# \"parsed\":  [\n#         {\n#             \"name\": \"vlan1\",\n#             \"vlan_id\": 1\n#         },\n#         {\n#             \"l3_interface\": \"irb.12\",\n#             \"name\": \"vlan2\",\n#             \"vlan_id\": 2\n#         }\n#     ]\n#\n"
  },
  "junipernetworks.junos.junos_vrf": {
    "doc": {
      "description": "This module provides declarative management of VRF definitions on Juniper JUNOS devices.  It allows playbooks to manage individual or the entire VRF collection.",
      "has_action": true,
      "notes": "This module requires the netconf system service be enabled on the remote device being managed.\nTested against vSRX JUNOS version 15.1X49-D15.4, vqfx-10000 JUNOS Version 15.1X53-D60.4.\nRecommended connection is C(netconf). See L(the Junos OS Platform Options,../network/user_guide/platform_junos.html).\nThis module also works with C(local) connections for legacy playbooks.\nFor information on using CLI and netconf see the :ref:`Junos OS Platform Options guide <junos_platform_options>`\nFor more information on using Ansible to manage network devices see the :ref:`Ansible Network Guide <network_guide>`\nFor more information on using Ansible to manage Juniper network devices see U(https://www.ansible.com/ansible-juniper).",
      "options": {
        "active": {
          "aliases": [],
          "description": "Specifies whether or not the configuration is active or deactivated",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "aggregate": {
          "aliases": [],
          "description": "The set of VRF definition objects to be configured on the remote JUNOS device.  Ths list entries can either be the VRF name or a hash of VRF definitions and attributes.  This argument is mutually exclusive with the C(name) argument.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "active": {
              "aliases": [],
              "description": "Specifies whether or not the configuration is active or deactivated",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "description": {
              "aliases": [],
              "description": "Provides a short description of the VRF definition in the current active configuration.  The VRF definition value accepts alphanumeric characters used to provide additional information about the VRF.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "interfaces": {
              "aliases": [],
              "description": "Identifies the set of interfaces that should be configured in the VRF. Interfaces must be routed interfaces in order to be placed into a VRF.",
              "type": "list",
              "required": false,
              "elements": "str",
              "suboptions": {}
            },
            "name": {
              "aliases": [],
              "description": "The name of the VRF definition to be managed on the remote IOS device.  The VRF definition name is an ASCII string name used to uniquely identify the VRF.  This argument is mutually exclusive with the C(aggregate) argument",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "rd": {
              "aliases": [],
              "description": "The router-distinguisher value uniquely identifies the VRF to routing processes on the remote IOS system.  The RD value takes the form of C(A:B) where C(A) and C(B) are both numeric values.",
              "type": "list",
              "required": false,
              "elements": "str",
              "suboptions": {}
            },
            "state": {
              "aliases": [],
              "description": "Configures the state of the VRF definition as it relates to the device operational configuration.  When set to I(present), the VRF should be configured in the device active configuration and when set to I(absent) the VRF should not be in the device active configuration",
              "type": "str",
              "required": false,
              "choices": [
                "present",
                "absent"
              ],
              "suboptions": {}
            },
            "table_label": {
              "aliases": [],
              "description": "Causes JUNOS to allocate a VPN label per VRF rather than per VPN FEC. This allows for forwarding of traffic to directly connected subnets, COS Egress filtering etc.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "target": {
              "aliases": [],
              "description": "It configures VRF target community configuration. The target value takes the form of C(target:A:B) where C(A) and C(B) are both numeric values.",
              "type": "list",
              "required": false,
              "elements": "str",
              "suboptions": {}
            }
          }
        },
        "description": {
          "aliases": [],
          "description": "Provides a short description of the VRF definition in the current active configuration.  The VRF definition value accepts alphanumeric characters used to provide additional information about the VRF.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "interfaces": {
          "aliases": [],
          "description": "Identifies the set of interfaces that should be configured in the VRF. Interfaces must be routed interfaces in order to be placed into a VRF.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the VRF definition to be managed on the remote IOS device.  The VRF definition name is an ASCII string name used to uniquely identify the VRF.  This argument is mutually exclusive with the C(aggregate) argument",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "B(Deprecated)\nStarting with Ansible 2.5 we recommend using C(connection: network_cli) or C(connection: netconf).\nFor more information please see the L(Junos OS Platform Options guide, ../network/user_guide/platform_junos.html).\nHORIZONTALLINE\nA dict object containing connection details.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "host": {
              "aliases": [],
              "description": "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [],
              "description": "Specifies the password to use to authenticate the connection to the remote device.   This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "port": {
              "aliases": [],
              "description": "Specifies the port to use when building the connection to the remote device.  The port value will default to the well known SSH port of 22 (for C(transport=cli)) or port 830 (for C(transport=netconf)) device.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "ssh_keyfile": {
              "aliases": [],
              "description": "Specifies the SSH key to use to authenticate the connection to the remote device.   This value is the path to the key used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead.",
              "type": "path",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "netconf",
              "type": "str",
              "required": false,
              "choices": [
                "cli",
                "netconf"
              ],
              "suboptions": {}
            },
            "username": {
              "aliases": [],
              "description": "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "rd": {
          "aliases": [],
          "description": "The router-distinguisher value uniquely identifies the VRF to routing processes on the remote IOS system.  The RD value takes the form of C(A:B) where C(A) and C(B) are both numeric values.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Configures the state of the VRF definition as it relates to the device operational configuration.  When set to I(present), the VRF should be configured in the device active configuration and when set to I(absent) the VRF should not be in the device active configuration",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "table_label": {
          "aliases": [],
          "description": "Causes JUNOS to allocate a VPN label per VRF rather than per VPN FEC. This allows for forwarding of traffic to directly connected subnets, COS Egress filtering etc.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "target": {
          "aliases": [],
          "description": "It configures VRF target community configuration. The target value takes the form of C(target:A:B) where C(A) and C(B) are both numeric values.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        }
      },
      "requirements": [
        "ncclient (>=v0.5.2)"
      ],
      "short_description": "Manage the VRF definitions on Juniper JUNOS devices",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Configure vrf configuration\n  junipernetworks.junos.junos_vrf:\n    name: test-1\n    description: test-vrf-1\n    interfaces:\n    - ge-0/0/3\n    - ge-0/0/2\n    rd: 192.0.2.1:10\n    target: target:65514:113\n    state: present\n\n- name: Remove vrf configuration\n  junipernetworks.junos.junos_vrf:\n    name: test-1\n    description: test-vrf-1\n    interfaces:\n    - ge-0/0/3\n    - ge-0/0/2\n    rd: 192.0.2.1:10\n    target: target:65514:113\n    state: absent\n\n- name: Deactivate vrf configuration\n  junipernetworks.junos.junos_vrf:\n    name: test-1\n    description: test-vrf-1\n    interfaces:\n    - ge-0/0/3\n    - ge-0/0/2\n    rd: 192.0.2.1:10\n    target: target:65514:113\n    active: false\n\n- name: Activate vrf configuration\n  junipernetworks.junos.junos_vrf:\n    name: test-1\n    description: test-vrf-1\n    interfaces:\n    - ge-0/0/3\n    - ge-0/0/2\n    rd: 192.0.2.1:10\n    target: target:65514:113\n    active: true\n\n- name: Create vrf using aggregate\n  junipernetworks.junos.junos_vrf:\n    aggregate:\n    - name: test-1\n      description: test-vrf-1\n      interfaces:\n      - ge-0/0/3 - ge-0/0/2\n      rd: 192.0.2.1:10\n      target: target:65514:113\n    - name: test-2\n      description: test-vrf-2\n      interfaces:\n      - ge-0/0/4\n      - ge-0/0/5\n      rd: 192.0.2.2:10\n      target: target:65515:114\n  state: present\n"
  }
}