{
  "netapp_eseries.santricity.na_santricity_alerts": {
    "doc": {
      "description": "Certain E-Series systems have the capability to send email notifications on potentially critical events.\nThis module will allow the owner of the system to specify email recipients for these messages.",
      "has_action": false,
      "notes": "Check mode is supported.\nAlertable messages are a subset of messages shown by the Major Event Log (MEL), of the storage-system. Examples of alertable messages include drive failures, failed controllers, loss of redundancy, and other warning/critical events.\nThis API is currently only supported with the Embedded Web Services API v2.0 and higher.\nThe E-Series Ansible modules require either an instance of the Web Services Proxy (WSP), to be available to manage the storage-system, or an E-Series storage-system that supports the Embedded Web Services API.\nEmbedded Web Services is currently available on the E2800, E5700, EF570, and newer hardware models.\nM(netapp_e_storage_system) may be utilized for configuring the systems managed by a WSP instance.",
      "options": {
        "api_password": {
          "aliases": [],
          "description": "The password to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_url": {
          "aliases": [],
          "description": "The url to the SANtricity Web Services Proxy or Embedded Web Services API.\nExample https://prod-1.wahoo.acme.com:8443/devmgr/v2",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_username": {
          "aliases": [],
          "description": "The username to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "contact": {
          "aliases": [],
          "description": "Allows the owner to specify some free-form contact information to be included in the emails.\nThis is typically utilized to provide a contact phone number.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "recipients": {
          "aliases": [],
          "description": "The email addresses that will receive the email notifications.\nRequired when I(state=enabled).",
          "type": "list",
          "required": false,
          "suboptions": {}
        },
        "sender": {
          "aliases": [],
          "description": "This is the sender that the recipient will see. It doesn't necessarily need to be a valid email account.\nRequired when I(state=enabled).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "server": {
          "aliases": [],
          "description": "A fully qualified domain name, IPv4 address, or IPv6 address of a mail server.\nTo use a fully qualified domain name, you must configure a DNS server on both controllers using M(na_santricity_mgmt_interface). - Required when I(state=enabled).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ssid": {
          "aliases": [],
          "description": "The ID of the array to manage. This value must be unique for each array.",
          "default": "1",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Enable/disable the sending of email-based alerts.",
          "default": "enabled",
          "type": "str",
          "required": false,
          "choices": [
            "enabled",
            "disabled"
          ],
          "suboptions": {}
        },
        "test": {
          "aliases": [],
          "description": "When a change is detected in the configuration, a test email will be sent.\nThis may take a few minutes to process.\nOnly applicable if I(state=enabled).",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Should https certificates be validated?",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "NetApp E-Series manage email notification settings"
    },
    "examples": "\n    - name: Enable email-based alerting\n      na_santricity_alerts:\n        state: enabled\n        sender: noreply@example.com\n        server: mail@example.com\n        contact: \"Phone: 1-555-555-5555\"\n        recipients:\n            - name1@example.com\n            - name2@example.com\n        api_url: \"10.1.1.1:8443\"\n        api_username: \"admin\"\n        api_password: \"myPass\"\n\n    - name: Disable alerting\n      na_santricity_alerts:\n        state: disabled\n        api_url: \"10.1.1.1:8443\"\n        api_username: \"admin\"\n        api_password: \"myPass\"\n"
  },
  "netapp_eseries.santricity.na_santricity_alerts_syslog": {
    "doc": {
      "description": "Manage the list of syslog servers that will notifications on potentially critical events.",
      "has_action": false,
      "notes": "Check mode is supported.\nThis API is currently only supported with the Embedded Web Services API v2.12 (bundled with SANtricity OS 11.40.2) and higher.\nThe E-Series Ansible modules require either an instance of the Web Services Proxy (WSP), to be available to manage the storage-system, or an E-Series storage-system that supports the Embedded Web Services API.\nEmbedded Web Services is currently available on the E2800, E5700, EF570, and newer hardware models.\nM(netapp_e_storage_system) may be utilized for configuring the systems managed by a WSP instance.",
      "options": {
        "api_password": {
          "aliases": [],
          "description": "The password to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_url": {
          "aliases": [],
          "description": "The url to the SANtricity Web Services Proxy or Embedded Web Services API.\nExample https://prod-1.wahoo.acme.com:8443/devmgr/v2",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_username": {
          "aliases": [],
          "description": "The username to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "servers": {
          "aliases": [],
          "description": "List of dictionaries where each dictionary contains a syslog server entry.",
          "type": "list",
          "required": false,
          "suboptions": {
            "address": {
              "aliases": [],
              "description": "Syslog server address can be a fully qualified domain name, IPv4 address, or IPv6 address.",
              "required": true,
              "suboptions": {}
            },
            "port": {
              "aliases": [],
              "description": "UDP Port must be a numerical value between 0 and 65535. Typically, the UDP Port for syslog is 514.",
              "default": "514",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "ssid": {
          "aliases": [],
          "description": "The ID of the array to manage. This value must be unique for each array.",
          "default": "1",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "test": {
          "aliases": [],
          "description": "This forces a test syslog message to be sent to the stated syslog server.\nTest will only be issued when a change is made.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Should https certificates be validated?",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "NetApp E-Series manage syslog servers receiving storage system alerts."
    },
    "examples": "\n    - name: Add two syslog server configurations to NetApp E-Series storage array.\n      na_santricity_alerts_syslog:\n        ssid: \"1\"\n        api_url: \"https://192.168.1.100:8443/devmgr/v2\"\n        api_username: \"admin\"\n        api_password: \"adminpass\"\n        validate_certs: true\n        servers:\n            - address: \"192.168.1.100\"\n            - address: \"192.168.2.100\"\n              port: 514\n            - address: \"192.168.3.100\"\n              port: 1000\n"
  },
  "netapp_eseries.santricity.na_santricity_asup": {
    "doc": {
      "description": "Allow the auto-support settings to be configured for an individual E-Series storage-system",
      "has_action": false,
      "notes": "Check mode is supported.\nEnabling ASUP will allow our support teams to monitor the logs of the storage-system in order to proactively respond to issues with the system. It is recommended that all ASUP-related options be enabled, but they may be disabled if desired.\nThis API is currently only supported with the Embedded Web Services API v2.0 and higher.\nThe E-Series Ansible modules require either an instance of the Web Services Proxy (WSP), to be available to manage the storage-system, or an E-Series storage-system that supports the Embedded Web Services API.\nEmbedded Web Services is currently available on the E2800, E5700, EF570, and newer hardware models.\nM(netapp_e_storage_system) may be utilized for configuring the systems managed by a WSP instance.",
      "options": {
        "active": {
          "aliases": [],
          "description": "Enable active/proactive monitoring for ASUP. When a problem is detected by our monitoring systems, it's possible that the bundle did not contain all of the required information at the time of the event. Enabling this option allows NetApp support personnel to manually request transmission or re-transmission of support data in order ot resolve the problem.\nOnly applicable if I(state=enabled).",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "api_password": {
          "aliases": [],
          "description": "The password to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_url": {
          "aliases": [],
          "description": "The url to the SANtricity Web Services Proxy or Embedded Web Services API.\nExample https://prod-1.wahoo.acme.com:8443/devmgr/v2",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_username": {
          "aliases": [],
          "description": "The username to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "days": {
          "aliases": [
            "schedule_days",
            "days_of_week"
          ],
          "description": "A list of days of the week that ASUP bundles will be sent. A larger, weekly bundle will be sent on one of the provided days.",
          "type": "list",
          "required": false,
          "choices": [
            "monday",
            "tuesday",
            "wednesday",
            "thursday",
            "friday",
            "saturday",
            "sunday"
          ],
          "suboptions": {}
        },
        "email": {
          "aliases": [],
          "description": "Information particular to the e-mail delivery method.\nUses the SMTP protocol.\nRequired when M(method==email).",
          "type": "dict",
          "required": false,
          "suboptions": {
            "sender": {
              "aliases": [],
              "description": "Sender's email account\nRequired when M(routing_type==email).",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "Mail server's IP address or fully qualified domain name.\nRequired when M(routing_type==email).",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "test_recipient": {
              "aliases": [],
              "description": "Test verification email\nRequired when M(routing_type==email).",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "end": {
          "aliases": [],
          "description": "An end hour may be specified in a range from 1 to 24 hours.\nASUP bundles will be sent daily between the provided start and end time (UTC).\nI(start) must be less than I(end).",
          "default": "24",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "maintenance_duration": {
          "aliases": [],
          "description": "The duration of time the ASUP maintenance mode will be active.\nPermittable range is between 1 and 72 hours.\nRequired when I(state==maintenance_enabled).",
          "default": "24",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "maintenance_emails": {
          "aliases": [],
          "description": "List of email addresses for maintenance notifications.\nRequired when I(state==maintenance_enabled).",
          "type": "list",
          "required": false,
          "suboptions": {}
        },
        "method": {
          "aliases": [],
          "description": "AutoSupport dispatch delivery method.",
          "default": "https",
          "type": "str",
          "required": false,
          "choices": [
            "https",
            "http",
            "email"
          ],
          "suboptions": {}
        },
        "proxy": {
          "aliases": [],
          "description": "Information particular to the proxy delivery method.\nRequired when M((method==https or method==http) and routing_type==proxy).",
          "type": "dict",
          "required": false,
          "suboptions": {
            "host": {
              "aliases": [],
              "description": "Proxy host IP address or fully qualified domain name.\nRequired when M(method==http or method==https) and M(routing_type==proxy).",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [],
              "description": "Password for the proxy.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "port": {
              "aliases": [],
              "description": "Proxy host port.\nRequired when M(method==http or method==https) and M(routing_type==proxy).",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "script": {
              "aliases": [],
              "description": "Path to the AutoSupport routing script file.\nRequired when M(method==http or method==https) and M(routing_type==script).",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "username": {
              "aliases": [],
              "description": "Username for the proxy.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "routing_type": {
          "aliases": [],
          "description": "AutoSupport routing\nRequired when M(method==https or method==http).",
          "default": "direct",
          "type": "str",
          "required": false,
          "choices": [
            "direct",
            "proxy",
            "script"
          ],
          "suboptions": {}
        },
        "ssid": {
          "aliases": [],
          "description": "The ID of the array to manage. This value must be unique for each array.",
          "default": "1",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "start": {
          "aliases": [],
          "description": "A start hour may be specified in a range from 0 to 23 hours.\nASUP bundles will be sent daily between the provided start and end time (UTC).\nI(start) must be less than I(end).",
          "default": "0",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Enable/disable the E-Series auto-support configuration or maintenance mode.\nWhen this option is enabled, configuration, logs, and other support-related information will be relayed to NetApp to help better support your system. No personally identifiable information, passwords, etc, will be collected.\nThe maintenance state enables the maintenance window which allows maintenance activities to be performed on the storage array without generating support cases.\nMaintenance mode cannot be enabled unless ASUP has previously been enabled.",
          "default": "enabled",
          "type": "str",
          "required": false,
          "choices": [
            "enabled",
            "disabled",
            "maintenance_enabled",
            "maintenance_disabled"
          ],
          "suboptions": {}
        },
        "validate": {
          "aliases": [],
          "description": "Validate ASUP configuration.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Should https certificates be validated?",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "NetApp E-Series manage auto-support settings"
    },
    "examples": "\n    - name: Enable ASUP and allow pro-active retrieval of bundles\n      na_santricity_asup:\n        ssid: \"1\"\n        api_url: \"https://192.168.1.100:8443/devmgr/v2\"\n        api_username: \"admin\"\n        api_password: \"adminpass\"\n        validate_certs: true\n        state: enabled\n        active: true\n        days: [\"saturday\", \"sunday\"]\n        start: 17\n        end: 20\n    - name: Set the ASUP schedule to only send bundles from 12 AM CST to 3 AM CST.\n      na_santricity_asup:\n        ssid: \"1\"\n        api_url: \"https://192.168.1.100:8443/devmgr/v2\"\n        api_username: \"admin\"\n        api_password: \"adminpass\"\n        validate_certs: true\n        state: disabled\n    - name: Set the ASUP schedule to only send bundles from 12 AM CST to 3 AM CST.\n      na_santricity_asup:\n        ssid: \"1\"\n        api_url: \"https://192.168.1.100:8443/devmgr/v2\"\n        api_username: \"admin\"\n        api_password: \"adminpass\"\n        state: maintenance_enabled\n        maintenance_duration: 24\n        maintenance_emails:\n          - admin@example.com\n    - name: Set the ASUP schedule to only send bundles from 12 AM CST to 3 AM CST.\n      na_santricity_asup:\n        ssid: \"1\"\n        api_url: \"https://192.168.1.100:8443/devmgr/v2\"\n        api_username: \"admin\"\n        api_password: \"adminpass\"\n        validate_certs: true\n        state: maintenance_disabled\n"
  },
  "netapp_eseries.santricity.na_santricity_auditlog": {
    "doc": {
      "description": "This module allows an e-series storage system owner to set audit-log configuration parameters.",
      "has_action": false,
      "notes": "Check mode is supported.\nUse I(ssid==\"0\") or I(ssid==\"proxy\") to configure SANtricity Web Services Proxy auditlog settings otherwise.\nThe E-Series Ansible modules require either an instance of the Web Services Proxy (WSP), to be available to manage the storage-system, or an E-Series storage-system that supports the Embedded Web Services API.\nEmbedded Web Services is currently available on the E2800, E5700, EF570, and newer hardware models.\nM(netapp_e_storage_system) may be utilized for configuring the systems managed by a WSP instance.",
      "options": {
        "api_password": {
          "aliases": [],
          "description": "The password to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_url": {
          "aliases": [],
          "description": "The url to the SANtricity Web Services Proxy or Embedded Web Services API.\nExample https://prod-1.wahoo.acme.com:8443/devmgr/v2",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_username": {
          "aliases": [],
          "description": "The username to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "force": {
          "aliases": [],
          "description": "Forces the audit-log configuration to delete log history when log messages fullness cause immediate warning or full condition.\nWarning! This will cause any existing audit-log messages to be deleted.\nThis is only applicable for I(full_policy=preventSystemAccess).",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "full_policy": {
          "aliases": [],
          "description": "Specifies what audit-log should do once the number of entries approach the record limit.",
          "default": "overWrite",
          "type": "str",
          "required": false,
          "choices": [
            "overWrite",
            "preventSystemAccess"
          ],
          "suboptions": {}
        },
        "log_level": {
          "aliases": [],
          "description": "Filters the log messages according to the specified log level selection.",
          "default": "writeOnly",
          "type": "str",
          "required": false,
          "choices": [
            "all",
            "writeOnly"
          ],
          "suboptions": {}
        },
        "max_records": {
          "aliases": [],
          "description": "The maximum number log messages audit-log will retain.\nMax records must be between and including 100 and 50000.",
          "default": "50000",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "ssid": {
          "aliases": [],
          "description": "The ID of the array to manage. This value must be unique for each array.",
          "default": "1",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "threshold": {
          "aliases": [],
          "description": "This is the memory full percent threshold that audit-log will start issuing warning messages.\nPercent range must be between and including 60 and 90.",
          "default": "90",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Should https certificates be validated?",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "NetApp E-Series manage audit-log configuration"
    },
    "examples": "\n- name: Define audit-log to prevent system access if records exceed 50000 with warnings occurring at 60% capacity.\n  na_santricity_auditlog:\n    ssid: \"1\"\n    api_url: \"https://192.168.1.100:8443/devmgr/v2\"\n    api_username: \"admin\"\n    api_password: \"adminpass\"\n    validate_certs: true\n    max_records: 50000\n    log_level: all\n    full_policy: preventSystemAccess\n    threshold: 60\n"
  },
  "netapp_eseries.santricity.na_santricity_auth": {
    "doc": {
      "description": "Sets or updates the password for a storage array device or SANtricity Web Services Proxy.",
      "has_action": false,
      "notes": "Set I(ssid==\"0\") or I(ssid==\"proxy\") when attempting to change the password for SANtricity Web Services Proxy.\nSANtricity Web Services Proxy storage password will be updated when changing the password on a managed storage system from the proxy; This is only true when the storage system has been previously contacted.\nThe E-Series Ansible modules require either an instance of the Web Services Proxy (WSP), to be available to manage the storage-system, or an E-Series storage-system that supports the Embedded Web Services API.\nEmbedded Web Services is currently available on the E2800, E5700, EF570, and newer hardware models.\nM(netapp_e_storage_system) may be utilized for configuring the systems managed by a WSP instance.",
      "options": {
        "api_password": {
          "aliases": [],
          "description": "The password to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_url": {
          "aliases": [],
          "description": "The url to the SANtricity Web Services Proxy or Embedded Web Services API.\nExample https://prod-1.wahoo.acme.com:8443/devmgr/v2",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_username": {
          "aliases": [],
          "description": "The username to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "current_admin_password": {
          "aliases": [],
          "description": "The current admin password.\nWhen making changes to the embedded web services's login passwords, api_password will be used and current_admin_password will be ignored.\nWhen making changes to the proxy web services's login passwords, api_password will be used and current_admin_password will be ignored.\nOnly required when the password has been set and will be ignored if not set.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "minimum_password_length": {
          "aliases": [],
          "description": "This option defines the minimum password length.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "The password you would like to set.\nCannot be more than 30 characters.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ssid": {
          "aliases": [],
          "description": "The ID of the array to manage. This value must be unique for each array.",
          "default": "1",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "user": {
          "aliases": [],
          "description": "The local user account password to update\nFor systems prior to E2800, use admin to change the rw (system password).\nFor systems prior to E2800, all choices except admin will be ignored.",
          "default": "admin",
          "type": "str",
          "required": false,
          "choices": [
            "admin",
            "monitor",
            "support",
            "security",
            "storage"
          ],
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Should https certificates be validated?",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "NetApp E-Series set or update the password for a storage array device or SANtricity Web Services Proxy."
    },
    "examples": "\n- name: Set the initial password\n  na_santricity_auth:\n    ssid: 1\n    api_url: https://192.168.1.100:8443/devmgr/v2\n    api_username: admin\n    api_password: adminpass\n    validate_certs: true\n    current_admin_password: currentadminpass\n    password: newpassword123\n    user: admin\n"
  },
  "netapp_eseries.santricity.na_santricity_client_certificate": {
    "doc": {
      "description": "Manage NetApp E-Series storage array's remote server certificates.",
      "has_action": false,
      "notes": "Set I(ssid==\"0\") or I(ssid==\"proxy\") to specifically reference SANtricity Web Services Proxy.\nThe E-Series Ansible modules require either an instance of the Web Services Proxy (WSP), to be available to manage the storage-system, or an E-Series storage-system that supports the Embedded Web Services API.\nEmbedded Web Services is currently available on the E2800, E5700, EF570, and newer hardware models.\nM(netapp_e_storage_system) may be utilized for configuring the systems managed by a WSP instance.",
      "options": {
        "api_password": {
          "aliases": [],
          "description": "The password to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_url": {
          "aliases": [],
          "description": "The url to the SANtricity Web Services Proxy or Embedded Web Services API.\nExample https://prod-1.wahoo.acme.com:8443/devmgr/v2",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_username": {
          "aliases": [],
          "description": "The username to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "certificates": {
          "aliases": [],
          "description": "List of certificate files\nEach item must include the path to the file",
          "type": "list",
          "required": false,
          "suboptions": {}
        },
        "reload_certificates": {
          "aliases": [],
          "description": "Whether to reload certificates when certificates have been added or removed.\nCertificates will not be available or removed until the servers have been reloaded.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "remove_unspecified_user_certificates": {
          "aliases": [],
          "description": "Whether to remove user install client certificates that are not specified in I(certificates).",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ssid": {
          "aliases": [],
          "description": "The ID of the array to manage. This value must be unique for each array.",
          "default": "1",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Should https certificates be validated?",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "cryptography"
      ],
      "short_description": "NetApp E-Series manage remote server certificates."
    },
    "examples": "\n- name: Upload certificates\n  na_santricity_client_certificate:\n    ssid: 1\n    api_url: https://192.168.1.100:8443/devmgr/v2\n    api_username: admin\n    api_password: adminpass\n    certificates: [\"/path/to/certificates.crt\", \"/path/to/another_certificate.crt\"]\n- name: Remove all certificates\n  na_santricity_client_certificate:\n    ssid: 1\n    api_url: https://192.168.1.100:8443/devmgr/v2\n    api_username: admin\n    api_password: adminpass\n"
  },
  "netapp_eseries.santricity.na_santricity_discover": {
    "doc": {
      "description": "Module searches a subnet range and returns any available E-Series storage systems.",
      "has_action": false,
      "notes": "Only available for platforms E2800 or later (SANtricity Web Services Embedded REST API must be available).\nAll E-Series storage systems with SANtricity version 11.62 or later will be discovered.\nOnly E-Series storage systems without a set admin password running SANtricity versions prior to 11.62 will be discovered.\nUse SANtricity Web Services Proxy to discover all systems regardless of SANricity version or password.",
      "options": {
        "ports": {
          "aliases": [],
          "description": "This option specifies which ports to be tested during the discovery process.\nThe first usable port will be used in the returned API url.",
          "default": "[8443]",
          "type": "list",
          "required": false,
          "suboptions": {}
        },
        "prefer_embedded": {
          "aliases": [],
          "description": "Give preference to Web Services Embedded when an option exists for both Web Services Proxy and Embedded.\nWeb Services Proxy will be utilized when available by default.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "proxy_password": {
          "aliases": [],
          "description": "Web Service Proxy user password",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "proxy_url": {
          "aliases": [],
          "description": "Web Services Proxy REST API URL. Example https://192.168.1.100:8443/devmgr/v2/",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "proxy_username": {
          "aliases": [],
          "description": "Web Service Proxy username",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "proxy_validate_certs": {
          "aliases": [],
          "description": "Whether to validate Web Service Proxy SSL certificate",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "subnet_mask": {
          "aliases": [],
          "description": "This is the IPv4 search range for discovering E-Series storage arrays.\nIPv4 subnet mask specified in CIDR form. Example 192.168.1.0/24 would search the range 192.168.1.0 to 192.168.1.255.\nBe sure to include all management paths in the search range.",
          "type": "str",
          "required": true,
          "suboptions": {}
        }
      },
      "requirements": [
        "ipaddress"
      ],
      "short_description": "NetApp E-Series discover E-Series storage systems"
    },
    "examples": "\n- name: Discover all E-Series storage systems on the network.\n  na_santricity_discover:\n    subnet_mask: 192.168.1.0/24\n"
  },
  "netapp_eseries.santricity.na_santricity_drive_firmware": {
    "doc": {
      "description": "Ensure drive firmware version is activated on specified drive model.",
      "has_action": false,
      "notes": "The E-Series Ansible modules require either an instance of the Web Services Proxy (WSP), to be available to manage the storage-system, or an E-Series storage-system that supports the Embedded Web Services API.\nEmbedded Web Services is currently available on the E2800, E5700, EF570, and newer hardware models.\nM(netapp_e_storage_system) may be utilized for configuring the systems managed by a WSP instance.",
      "options": {
        "api_password": {
          "aliases": [],
          "description": "The password to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_url": {
          "aliases": [],
          "description": "The url to the SANtricity Web Services Proxy or Embedded Web Services API.\nExample https://prod-1.wahoo.acme.com:8443/devmgr/v2",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_username": {
          "aliases": [],
          "description": "The username to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "firmware": {
          "aliases": [],
          "description": "list of drive firmware file paths.\nNetApp E-Series drives require special firmware which can be downloaded from https://mysupport.netapp.com/NOW/download/tools/diskfw_eseries/",
          "type": "list",
          "required": true,
          "suboptions": {}
        },
        "ignore_inaccessible_drives": {
          "aliases": [],
          "description": "This flag will determine whether drive firmware upgrade should fail if any affected drives are inaccessible.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ssid": {
          "aliases": [],
          "description": "The ID of the array to manage. This value must be unique for each array.",
          "default": "1",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "upgrade_drives_online": {
          "aliases": [],
          "description": "This flag will determine whether drive firmware can be upgrade while drives are accepting I/O.\nWhen I(upgrade_drives_online==False) stop all I/O before running task.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Should https certificates be validated?",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "wait_for_completion": {
          "aliases": [],
          "description": "This flag will cause module to wait for any upgrade actions to complete.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "NetApp E-Series manage drive firmware"
    },
    "examples": "\n- name: Ensure correct firmware versions\n  na_santricity_drive_firmware:\n    ssid: \"1\"\n    api_url: \"https://192.168.1.100:8443/devmgr/v2\"\n    api_username: \"admin\"\n    api_password: \"adminpass\"\n    validate_certs: true\n    firmware: \"path/to/drive_firmware\"\n    wait_for_completion: true\n    ignore_inaccessible_drives: false\n"
  },
  "netapp_eseries.santricity.na_santricity_facts": {
    "doc": {
      "description": "The na_santricity_facts module returns a collection of facts regarding NetApp E-Series storage arrays.",
      "has_action": false,
      "notes": "The E-Series Ansible modules require either an instance of the Web Services Proxy (WSP), to be available to manage the storage-system, or an E-Series storage-system that supports the Embedded Web Services API.\nEmbedded Web Services is currently available on the E2800, E5700, EF570, and newer hardware models.\nM(netapp_e_storage_system) may be utilized for configuring the systems managed by a WSP instance.",
      "options": {
        "api_password": {
          "aliases": [],
          "description": "The password to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_url": {
          "aliases": [],
          "description": "The url to the SANtricity Web Services Proxy or Embedded Web Services API.\nExample https://prod-1.wahoo.acme.com:8443/devmgr/v2",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_username": {
          "aliases": [],
          "description": "The username to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "ssid": {
          "aliases": [],
          "description": "The ID of the array to manage. This value must be unique for each array.",
          "default": "1",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Should https certificates be validated?",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "NetApp E-Series retrieve facts about NetApp E-Series storage arrays"
    },
    "examples": "\n---\n- name: Get array facts\n  na_santricity_facts:\n    ssid: \"1\"\n    api_url: \"https://192.168.1.100:8443/devmgr/v2\"\n    api_username: \"admin\"\n    api_password: \"adminpass\"\n    validate_certs: true\n"
  },
  "netapp_eseries.santricity.na_santricity_firmware": {
    "doc": {
      "description": "Ensure specific firmware versions are activated on E-Series storage system.",
      "has_action": false,
      "notes": "The E-Series Ansible modules require either an instance of the Web Services Proxy (WSP), to be available to manage the storage-system, or an E-Series storage-system that supports the Embedded Web Services API.\nEmbedded Web Services is currently available on the E2800, E5700, EF570, and newer hardware models.\nM(netapp_e_storage_system) may be utilized for configuring the systems managed by a WSP instance.",
      "options": {
        "api_password": {
          "aliases": [],
          "description": "The password to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_url": {
          "aliases": [],
          "description": "The url to the SANtricity Web Services Proxy or Embedded Web Services API.\nExample https://prod-1.wahoo.acme.com:8443/devmgr/v2",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_username": {
          "aliases": [],
          "description": "The username to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "clear_mel_events": {
          "aliases": [],
          "description": "This flag will force firmware to be activated in spite of the storage system mel-event issues.\nWarning! This will clear all storage system mel-events. Use at your own risk!",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "firmware": {
          "aliases": [],
          "description": "Path to the firmware file.\nDue to concurrency issues, use M(na_santricity_proxy_firmware_upload) to upload firmware and nvsram to SANtricity Web Services Proxy when upgrading multiple systems at the same time on the same instance of the proxy.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "nvsram": {
          "aliases": [],
          "description": "Path to the NVSRAM file.\nNetApp recommends upgrading the NVSRAM when upgrading firmware.\nDue to concurrency issues, use M(na_santricity_proxy_firmware_upload) to upload firmware and nvsram to SANtricity Web Services Proxy when upgrading multiple systems at the same time on the same instance of the proxy.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ssid": {
          "aliases": [],
          "description": "The ID of the array to manage. This value must be unique for each array.",
          "default": "1",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Should https certificates be validated?",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "wait_for_completion": {
          "aliases": [],
          "description": "This flag will cause module to wait for any upgrade actions to complete.\nWhen changes are required to both firmware and nvsram and task is executed against SANtricity Web Services Proxy, the firmware will have to complete before nvsram can be installed.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "NetApp E-Series manage firmware."
    },
    "examples": "\n- name: Ensure correct firmware versions\n  na_santricity_firmware:\n    ssid: \"1\"\n    api_url: \"https://192.168.1.100:8443/devmgr/v2\"\n    api_username: \"admin\"\n    api_password: \"adminpass\"\n    validate_certs: true\n    nvsram: \"path/to/nvsram\"\n    firmware: \"path/to/bundle\"\n    wait_for_completion: true\n    clear_mel_events: true\n- name: Ensure correct firmware versions\n  na_santricity_firmware:\n    ssid: \"1\"\n    api_url: \"https://192.168.1.100:8443/devmgr/v2\"\n    api_username: \"admin\"\n    api_password: \"adminpass\"\n    validate_certs: true\n    nvsram: \"path/to/nvsram\"\n    firmware: \"path/to/firmware\"\n"
  },
  "netapp_eseries.santricity.na_santricity_global": {
    "doc": {
      "description": "Allow the user to configure several of the global settings associated with an E-Series storage-system",
      "has_action": false,
      "notes": "Check mode is supported.\nThis module requires Web Services API v1.3 or newer.\nThe E-Series Ansible modules require either an instance of the Web Services Proxy (WSP), to be available to manage the storage-system, or an E-Series storage-system that supports the Embedded Web Services API.\nEmbedded Web Services is currently available on the E2800, E5700, EF570, and newer hardware models.\nM(netapp_e_storage_system) may be utilized for configuring the systems managed by a WSP instance.",
      "options": {
        "api_password": {
          "aliases": [],
          "description": "The password to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_url": {
          "aliases": [],
          "description": "The url to the SANtricity Web Services Proxy or Embedded Web Services API.\nExample https://prod-1.wahoo.acme.com:8443/devmgr/v2",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_username": {
          "aliases": [],
          "description": "The username to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "automatic_load_balancing": {
          "aliases": [],
          "description": "Enable automatic load balancing to allow incoming traffic from the hosts to be dynamically managed and balanced across both controllers.\nAutomatic load balancing requires host connectivity reporting to be enabled.",
          "type": "str",
          "required": false,
          "choices": [
            "enabled",
            "disabled"
          ],
          "suboptions": {}
        },
        "cache_block_size": {
          "aliases": [],
          "description": "Size of the cache's block size.\nAll volumes on the storage system share the same cache space; therefore, the volumes can have only one cache block size.\nSee M(na_santricity_facts) for available sizes.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "cache_flush_threshold": {
          "aliases": [],
          "description": "This is the percentage threshold of the amount of unwritten data that is allowed to remain on the storage array's cache before flushing.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "default_host_type": {
          "aliases": [],
          "description": "Default host type for the storage system.\nEither one of the following names can be specified, Linux DM-MP, VMWare, Windows, Windows Clustered, or a host type index which can be found in M(na_santricity_facts)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "host_connectivity_reporting": {
          "aliases": [],
          "description": "Enable host connectivity reporting to allow host connections to be monitored for connection and multipath driver problems.\nWhen M(automatic_load_balancing==enabled) then M(host_connectivity_reporting) must be enabled",
          "type": "str",
          "required": false,
          "choices": [
            "enabled",
            "disabled"
          ],
          "suboptions": {}
        },
        "login_banner_message": {
          "aliases": [],
          "description": "Text message that appears prior to the login page.\nI(login_banner_message==\"\") will delete any existing banner message.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [
            "label"
          ],
          "description": "Set the name of the E-Series storage-system\nThis label/name doesn't have to be unique.\nMay be up to 30 characters in length.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ssid": {
          "aliases": [],
          "description": "The ID of the array to manage. This value must be unique for each array.",
          "default": "1",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Should https certificates be validated?",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "NetApp E-Series manage global settings configuration"
    },
    "examples": "\n    - name: Set the storage-system name\n      na_santricity_global:\n        ssid: \"1\"\n        api_url: \"https://192.168.1.100:8443/devmgr/v2\"\n        api_username: \"admin\"\n        api_password: \"adminpass\"\n        validate_certs: true\n        name: myArrayName\n        cache_block_size: 32768\n        cache_flush_threshold: 80\n        automatic_load_balancing: enabled\n        default_host_type: Linux DM-MP\n    - name: Set the storage-system name\n      na_santricity_global:\n        ssid: \"1\"\n        api_url: \"https://192.168.1.100:8443/devmgr/v2\"\n        api_username: \"admin\"\n        api_password: \"adminpass\"\n        validate_certs: true\n        name: myOtherArrayName\n        cache_block_size: 8192\n        cache_flush_threshold: 60\n        automatic_load_balancing: disabled\n        default_host_type: 28\n"
  },
  "netapp_eseries.santricity.na_santricity_host": {
    "doc": {
      "description": "Create, update, remove hosts on NetApp E-series storage arrays",
      "has_action": false,
      "notes": "The E-Series Ansible modules require either an instance of the Web Services Proxy (WSP), to be available to manage the storage-system, or an E-Series storage-system that supports the Embedded Web Services API.\nEmbedded Web Services is currently available on the E2800, E5700, EF570, and newer hardware models.\nM(netapp_e_storage_system) may be utilized for configuring the systems managed by a WSP instance.",
      "options": {
        "api_password": {
          "aliases": [],
          "description": "The password to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_url": {
          "aliases": [],
          "description": "The url to the SANtricity Web Services Proxy or Embedded Web Services API.\nExample https://prod-1.wahoo.acme.com:8443/devmgr/v2",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_username": {
          "aliases": [],
          "description": "The username to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "force_port": {
          "aliases": [],
          "description": "Allow ports that are already assigned to be re-assigned to your current host",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "host_type": {
          "aliases": [
            "host_type_index"
          ],
          "description": "Host type includes operating system and multipath considerations.\nIf not specified, the default host type will be utilized. Default host type can be set using M(netapp_eseries.santricity.na_santricity_global).\nFor storage array specific options see M(netapp_eseries.santricity.na_santricity_facts).\nAll values are case-insensitive.\nAIX MPIO - The Advanced Interactive Executive (AIX) OS and the native MPIO driver\nAVT 4M - Silicon Graphics, Inc. (SGI) proprietary multipath driver\nHP-UX - The HP-UX OS with native multipath driver\nLinux ATTO - The Linux OS and the ATTO Technology, Inc. driver (must use ATTO FC HBAs)\nLinux DM-MP - The Linux OS and the native DM-MP driver\nLinux Pathmanager - The Linux OS and the SGI proprietary multipath driver\nMac - The Mac OS and the ATTO Technology, Inc. driver\nONTAP - FlexArray\nSolaris 11 or later - The Solaris 11 or later OS and the native MPxIO driver\nSolaris 10 or earlier - The Solaris 10 or earlier OS and the native MPxIO driver\nSVC - IBM SAN Volume Controller\nVMware - ESXi OS\nWindows - Windows Server OS and Windows MPIO with a DSM driver\nWindows Clustered - Clustered Windows Server OS and Windows MPIO with a DSM driver\nWindows ATTO - Windows OS and the ATTO Technology, Inc. driver",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [
            "label"
          ],
          "description": "If the host doesn't yet exist, the label/name to assign at creation time.\nIf the hosts already exists, this will be used to uniquely identify the host to make any required changes",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "ports": {
          "aliases": [],
          "description": "A list of host ports you wish to associate with the host.\nHost ports are uniquely identified by their WWN or IQN. Their assignments to a particular host are uniquely identified by a label and these must be unique.",
          "type": "list",
          "required": false,
          "suboptions": {
            "label": {
              "aliases": [],
              "description": "A unique label to assign to this port assignment.",
              "required": true,
              "suboptions": {}
            },
            "port": {
              "aliases": [],
              "description": "The WWN or IQN of the hostPort to assign to this port definition.",
              "required": true,
              "suboptions": {}
            },
            "type": {
              "aliases": [],
              "description": "The interface type of the port to define.\nAcceptable choices depend on the capabilities of the target hardware/software platform.",
              "required": true,
              "choices": [
                "iscsi",
                "sas",
                "fc",
                "ib",
                "nvmeof"
              ],
              "suboptions": {}
            }
          }
        },
        "ssid": {
          "aliases": [],
          "description": "The ID of the array to manage. This value must be unique for each array.",
          "default": "1",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Set to absent to remove an existing host\nSet to present to modify or create a new host definition",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Should https certificates be validated?",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "NetApp E-Series manage eseries hosts"
    },
    "examples": "\n    - name: Define or update an existing host named \"Host1\"\n      na_santricity_host:\n        ssid: \"1\"\n        api_url: \"https://192.168.1.100:8443/devmgr/v2\"\n        api_username: \"admin\"\n        api_password: \"adminpass\"\n        validate_certs: true\n        name: \"Host1\"\n        state: present\n        host_type_index: Linux DM-MP\n        ports:\n          - type: \"iscsi\"\n            label: \"PORT_1\"\n            port: \"iqn.1996-04.de.suse:01:56f86f9bd1fe\"\n          - type: \"fc\"\n            label: \"FC_1\"\n            port: \"10:00:FF:7C:FF:FF:FF:01\"\n          - type: \"fc\"\n            label: \"FC_2\"\n            port: \"10:00:FF:7C:FF:FF:FF:00\"\n\n    - name: Ensure a host named \"Host2\" doesn\"t exist\n      na_santricity_host:\n        ssid: \"1\"\n        api_url: \"https://192.168.1.100:8443/devmgr/v2\"\n        api_username: \"admin\"\n        api_password: \"adminpass\"\n        validate_certs: true\n        name: \"Host2\"\n        state: absent\n"
  },
  "netapp_eseries.santricity.na_santricity_hostgroup": {
    "doc": {
      "description": "Create, update or destroy host groups on a NetApp E-Series storage array.",
      "has_action": false,
      "notes": "The E-Series Ansible modules require either an instance of the Web Services Proxy (WSP), to be available to manage the storage-system, or an E-Series storage-system that supports the Embedded Web Services API.\nEmbedded Web Services is currently available on the E2800, E5700, EF570, and newer hardware models.\nM(netapp_e_storage_system) may be utilized for configuring the systems managed by a WSP instance.",
      "options": {
        "api_password": {
          "aliases": [],
          "description": "The password to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_url": {
          "aliases": [],
          "description": "The url to the SANtricity Web Services Proxy or Embedded Web Services API.\nExample https://prod-1.wahoo.acme.com:8443/devmgr/v2",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_username": {
          "aliases": [],
          "description": "The username to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "hosts": {
          "aliases": [],
          "description": "List of host names/labels to add to the group",
          "type": "list",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the host group to manage",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ssid": {
          "aliases": [],
          "description": "The ID of the array to manage. This value must be unique for each array.",
          "default": "1",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the specified host group should exist or not.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Should https certificates be validated?",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "NetApp E-Series manage array host groups"
    },
    "examples": "\n    - name: Configure Hostgroup\n      na_santricity_hostgroup:\n        ssid: \"1\"\n        api_url: \"https://192.168.1.100:8443/devmgr/v2\"\n        api_username: \"admin\"\n        api_password: \"adminpass\"\n        validate_certs: true\n        state: present\n        name: example_hostgroup\n        hosts:\n          - host01\n          - host02\n"
  },
  "netapp_eseries.santricity.na_santricity_ib_iser_interface": {
    "doc": {
      "description": "Configure settings of an E-Series InfiniBand iSER interface IPv4 address configuration.",
      "has_action": false,
      "notes": "Check mode is supported.\nThe E-Series Ansible modules require either an instance of the Web Services Proxy (WSP), to be available to manage the storage-system, or an E-Series storage-system that supports the Embedded Web Services API.\nEmbedded Web Services is currently available on the E2800, E5700, EF570, and newer hardware models.\nM(netapp_e_storage_system) may be utilized for configuring the systems managed by a WSP instance.",
      "options": {
        "address": {
          "aliases": [],
          "description": "The IPv4 address to assign to the interface.\nShould be specified in xx.xx.xx.xx form.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_password": {
          "aliases": [],
          "description": "The password to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_url": {
          "aliases": [],
          "description": "The url to the SANtricity Web Services Proxy or Embedded Web Services API.\nExample https://prod-1.wahoo.acme.com:8443/devmgr/v2",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_username": {
          "aliases": [],
          "description": "The username to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "channel": {
          "aliases": [],
          "description": "The InfiniBand HCA port you wish to modify.\nPorts start left to right and start with 1.",
          "type": "int",
          "required": true,
          "suboptions": {}
        },
        "controller": {
          "aliases": [],
          "description": "The controller that owns the port you want to configure.\nController names are presented alphabetically, with the first controller as A, the second as B, and so on.\nCurrent hardware models have either 1 or 2 available controllers, but that is not a guaranteed hard limitation and could change in the future.",
          "type": "str",
          "required": true,
          "choices": [
            "A",
            "B"
          ],
          "suboptions": {}
        },
        "ssid": {
          "aliases": [],
          "description": "The ID of the array to manage. This value must be unique for each array.",
          "default": "1",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Should https certificates be validated?",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "NetApp E-Series manage InfiniBand iSER interface configuration"
    },
    "examples": "\n    - name: Configure the first port on the A controller with a static IPv4 address\n      na_santricity_ib_iser_interface:\n        ssid: \"1\"\n        api_url: \"https://192.168.1.100:8443/devmgr/v2\"\n        api_username: \"admin\"\n        api_password: \"adminpass\"\n        validate_certs: true\n        controller: \"A\"\n        channel: \"1\"\n        address: \"192.168.1.100\"\n"
  },
  "netapp_eseries.santricity.na_santricity_iscsi_interface": {
    "doc": {
      "description": "Configure settings of an E-Series iSCSI interface",
      "has_action": false,
      "notes": "Check mode is supported.\nThe interface settings are applied synchronously, but changes to the interface itself (receiving a new IP address via dhcp, etc), can take seconds or minutes longer to take effect.\nThis module will not be useful/usable on an E-Series system without any iSCSI interfaces.\nThis module requires a Web Services API version of >= 1.3.\nThe E-Series Ansible modules require either an instance of the Web Services Proxy (WSP), to be available to manage the storage-system, or an E-Series storage-system that supports the Embedded Web Services API.\nEmbedded Web Services is currently available on the E2800, E5700, EF570, and newer hardware models.\nM(netapp_e_storage_system) may be utilized for configuring the systems managed by a WSP instance.",
      "options": {
        "address": {
          "aliases": [],
          "description": "The IPv4 address to assign to the interface.\nShould be specified in xx.xx.xx.xx form.\nMutually exclusive with I(config_method=dhcp)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "api_password": {
          "aliases": [],
          "description": "The password to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_url": {
          "aliases": [],
          "description": "The url to the SANtricity Web Services Proxy or Embedded Web Services API.\nExample https://prod-1.wahoo.acme.com:8443/devmgr/v2",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_username": {
          "aliases": [],
          "description": "The username to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "config_method": {
          "aliases": [],
          "description": "The configuration method type to use for this interface.\ndhcp is mutually exclusive with I(address), I(subnet_mask), and I(gateway).",
          "default": "dhcp",
          "type": "str",
          "required": false,
          "choices": [
            "dhcp",
            "static"
          ],
          "suboptions": {}
        },
        "controller": {
          "aliases": [],
          "description": "The controller that owns the port you want to configure.\nController names are presented alphabetically, with the first controller as A, the second as B, and so on.\nCurrent hardware models have either 1 or 2 available controllers, but that is not a guaranteed hard limitation and could change in the future.",
          "type": "str",
          "required": true,
          "choices": [
            "A",
            "B"
          ],
          "suboptions": {}
        },
        "gateway": {
          "aliases": [],
          "description": "The IPv4 gateway address to utilize for the interface.\nShould be specified in xx.xx.xx.xx form.\nMutually exclusive with I(config_method=dhcp)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "mtu": {
          "aliases": [
            "max_frame_size"
          ],
          "description": "The maximum transmission units (MTU), in bytes.\nThis allows you to configure a larger value for the MTU, in order to enable jumbo frames (any value > 1500).\nGenerally, it is necessary to have your host, switches, and other components not only support jumbo frames, but also have it configured properly. Therefore, unless you know what you're doing, it's best to leave this at the default.",
          "default": "1500",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "port": {
          "aliases": [],
          "description": "The controller iSCSI HIC port to modify.\nYou can determine this value by numbering the iSCSI ports left to right on the controller you wish to modify starting with one.",
          "type": "int",
          "required": true,
          "suboptions": {}
        },
        "ssid": {
          "aliases": [],
          "description": "The ID of the array to manage. This value must be unique for each array.",
          "default": "1",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "When enabled, the provided configuration will be utilized.\nWhen disabled, the IPv4 configuration will be cleared and IPv4 connectivity disabled.",
          "default": "enabled",
          "type": "str",
          "required": false,
          "choices": [
            "enabled",
            "disabled"
          ],
          "suboptions": {}
        },
        "subnet_mask": {
          "aliases": [],
          "description": "The subnet mask to utilize for the interface.\nShould be specified in xx.xx.xx.xx form.\nMutually exclusive with I(config_method=dhcp)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Should https certificates be validated?",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "NetApp E-Series manage iSCSI interface configuration"
    },
    "examples": "\n    - name: Configure the first port on the A controller with a static IPv4 address\n      na_santricity_iscsi_interface:\n        ssid: \"1\"\n        api_url: \"https://192.168.1.100:8443/devmgr/v2\"\n        api_username: \"admin\"\n        api_password: \"adminpass\"\n        validate_certs: true\n        port: \"1\"\n        controller: \"A\"\n        config_method: static\n        address: \"192.168.1.100\"\n        subnet_mask: \"255.255.255.0\"\n        gateway: \"192.168.1.1\"\n\n    - name: Disable ipv4 connectivity for the second port on the B controller\n      na_santricity_iscsi_interface:\n        ssid: \"1\"\n        api_url: \"https://192.168.1.100:8443/devmgr/v2\"\n        api_username: \"admin\"\n        api_password: \"adminpass\"\n        validate_certs: true\n        port: \"2\"\n        controller: \"B\"\n        state: disabled\n\n    - name: Enable jumbo frames for the first 4 ports on controller A\n      na_santricity_iscsi_interface:\n        ssid: \"1\"\n        api_url: \"https://192.168.1.100:8443/devmgr/v2\"\n        api_username: \"admin\"\n        api_password: \"adminpass\"\n        validate_certs: true\n        port: \"{{ item }}\"\n        controller: \"A\"\n        state: enabled\n        mtu: 9000\n        config_method: dhcp\n      loop:\n        - 1\n        - 2\n        - 3\n        - 4\n"
  },
  "netapp_eseries.santricity.na_santricity_iscsi_target": {
    "doc": {
      "description": "Configure the settings of an E-Series iSCSI target",
      "has_action": false,
      "notes": "Check mode is supported.\nSome of the settings are dependent on the settings applied to the iSCSI interfaces. These can be configured using M(na_santricity_iscsi_interface).\nThis module requires a Web Services API version of >= 1.3.\nThe E-Series Ansible modules require either an instance of the Web Services Proxy (WSP), to be available to manage the storage-system, or an E-Series storage-system that supports the Embedded Web Services API.\nEmbedded Web Services is currently available on the E2800, E5700, EF570, and newer hardware models.\nM(netapp_e_storage_system) may be utilized for configuring the systems managed by a WSP instance.",
      "options": {
        "api_password": {
          "aliases": [],
          "description": "The password to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_url": {
          "aliases": [],
          "description": "The url to the SANtricity Web Services Proxy or Embedded Web Services API.\nExample https://prod-1.wahoo.acme.com:8443/devmgr/v2",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_username": {
          "aliases": [],
          "description": "The username to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "chap_secret": {
          "aliases": [
            "chap",
            "password"
          ],
          "description": "Enable Challenge-Handshake Authentication Protocol (CHAP), utilizing this value as the password.\nWhen this value is specified, we will always trigger an update (changed=True). We have no way of verifying whether or not the password has changed.\nThe chap secret may only use ascii characters with values between 32 and 126 decimal.\nThe chap secret must be no less than 12 characters, but no greater than 57 characters in length.\nThe chap secret is cleared when not specified or an empty string.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [
            "alias"
          ],
          "description": "The name/alias to assign to the iSCSI target.\nThis alias is often used by the initiator software in order to make an iSCSI target easier to identify.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ping": {
          "aliases": [],
          "description": "Enable ICMP ping responses from the configured iSCSI ports.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ssid": {
          "aliases": [],
          "description": "The ID of the array to manage. This value must be unique for each array.",
          "default": "1",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "unnamed_discovery": {
          "aliases": [],
          "description": "When an initiator initiates a discovery session to an initiator port, it is considered an unnamed discovery session if the iSCSI target iqn is not specified in the request.\nThis option may be disabled to increase security if desired.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Should https certificates be validated?",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "NetApp E-Series manage iSCSI target configuration"
    },
    "examples": "\n    - name: Enable ping responses and unnamed discovery sessions for all iSCSI ports\n      na_santricity_iscsi_target:\n        ssid: \"1\"\n        api_url: \"https://192.168.1.100:8443/devmgr/v2\"\n        api_username: \"admin\"\n        api_password: \"adminpass\"\n        validate_certs: true\n        name: myTarget\n        ping: true\n        unnamed_discovery: true\n\n    - name: Set the target alias and the CHAP secret\n      na_santricity_iscsi_target:\n        ssid: \"1\"\n        api_url: \"https://192.168.1.100:8443/devmgr/v2\"\n        api_username: \"admin\"\n        api_password: \"adminpass\"\n        validate_certs: true\n        name: myTarget\n        chap: password1234\n"
  },
  "netapp_eseries.santricity.na_santricity_ldap": {
    "doc": {
      "description": "Configure an E-Series system to allow authentication via an LDAP server",
      "has_action": false,
      "notes": "Check mode is supported\nThis module allows you to define one or more LDAP domains identified uniquely by I(identifier) to use for authentication. Authorization is determined by I(role_mappings), in that different groups of users may be given different (or no), access to certain aspects of the system and API.\nThe local user accounts will still be available if the LDAP server becomes unavailable/inaccessible.\nGenerally, you\"ll need to get the details of your organization\"s LDAP server before you\"ll be able to configure the system for using LDAP authentication; every implementation is likely to be very different.\nThis API is currently only supported with the Embedded Web Services API v2.0 and higher, or the Web Services Proxy v3.0 and higher.\nThe E-Series Ansible modules require either an instance of the Web Services Proxy (WSP), to be available to manage the storage-system, or an E-Series storage-system that supports the Embedded Web Services API.\nEmbedded Web Services is currently available on the E2800, E5700, EF570, and newer hardware models.\nM(netapp_e_storage_system) may be utilized for configuring the systems managed by a WSP instance.",
      "options": {
        "api_password": {
          "aliases": [],
          "description": "The password to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_url": {
          "aliases": [],
          "description": "The url to the SANtricity Web Services Proxy or Embedded Web Services API.\nExample https://prod-1.wahoo.acme.com:8443/devmgr/v2",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_username": {
          "aliases": [],
          "description": "The username to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "bind_password": {
          "aliases": [],
          "description": "This is the password for the bind user account.\nRequired when I(bind_user) is specified.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "bind_user": {
          "aliases": [],
          "description": "This is the user account that will be used for querying the LDAP server.\nRequired when I(bind_password) is specified.\nExample: CN=MyBindAcct,OU=ServiceAccounts,DC=example,DC=com",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "group_attributes": {
          "aliases": [],
          "description": "The user attributes that should be considered for the group to role mapping.\nTypically this is used with something like \"memberOf\", and a user\"s access is tested against group membership or lack thereof.",
          "default": "['memberOf']",
          "type": "list",
          "required": false,
          "suboptions": {}
        },
        "identifier": {
          "aliases": [],
          "description": "This is a unique identifier for the configuration (for cases where there are multiple domains configured).",
          "default": "default",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "names": {
          "aliases": [],
          "description": "The domain name[s] that will be utilized when authenticating to identify which domain to utilize.\nDefault to use the DNS name of the I(server).\nThe only requirement is that the name[s] be resolvable.\nExample: user@example.com",
          "type": "list",
          "required": false,
          "suboptions": {}
        },
        "role_mappings": {
          "aliases": [],
          "description": "This is where you specify which groups should have access to what permissions for the storage-system.\nFor example, all users in group A will be assigned all 4 available roles, which will allow access to all the management functionality of the system (super-user). Those in group B only have the storage.monitor role, which will allow only read-only access.\nThis is specified as a mapping of regular expressions to a list of roles. See the examples.\nThe roles that will be assigned to to the group/groups matching the provided regex.\nstorage.admin allows users full read/write access to storage objects and operations.\nstorage.monitor allows users read-only access to storage objects and operations.\nsupport.admin allows users access to hardware, diagnostic information, the Major Event Log, and other critical support-related functionality, but not the storage configuration.\nsecurity.admin allows users access to authentication/authorization configuration, as well as the audit log configuration, and certification management.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "search_base": {
          "aliases": [],
          "description": "The search base is used to find group memberships of the user.\nExample: ou=users,dc=example,dc=com",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "server_url": {
          "aliases": [],
          "description": "This is the LDAP server url.\nThe connection string should be specified as using the ldap or ldaps protocol along with the port information.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ssid": {
          "aliases": [],
          "description": "The ID of the array to manage. This value must be unique for each array.",
          "default": "1",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "When I(state==\"present\") the defined LDAP domain will be added to the storage system.\nWhen I(state==\"absent\") the domain specified will be removed from the storage system.\nI(state==\"disabled\") will result in deleting all existing LDAP domains on the storage system.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent",
            "disabled"
          ],
          "suboptions": {}
        },
        "user_attribute": {
          "aliases": [],
          "description": "This is the attribute we will use to match the provided username when a user attempts to authenticate.",
          "default": "sAMAccountName",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Should https certificates be validated?",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "NetApp E-Series manage LDAP integration to use for authentication"
    },
    "examples": "\n    - name: Disable LDAP authentication\n      na_santricity_ldap:\n        ssid: \"1\"\n        api_url: \"https://192.168.1.100:8443/devmgr/v2\"\n        api_username: \"admin\"\n        api_password: \"adminpass\"\n        validate_certs: true\n        state: absent\n\n    - name: Remove the \"default\" LDAP domain configuration\n      na_santricity_ldap:\n        ssid: \"1\"\n        api_url: \"https://192.168.1.100:8443/devmgr/v2\"\n        api_username: \"admin\"\n        api_password: \"adminpass\"\n        validate_certs: true\n        state: absent\n        identifier: default\n\n    - name: Define a new LDAP domain, utilizing defaults where possible\n      na_santricity_ldap:\n        ssid: \"1\"\n        api_url: \"https://192.168.1.100:8443/devmgr/v2\"\n        api_username: \"admin\"\n        api_password: \"adminpass\"\n        validate_certs: true\n        state: enabled\n        bind_username: \"CN=MyBindAccount,OU=ServiceAccounts,DC=example,DC=com\"\n        bind_password: \"mySecretPass\"\n        server: \"ldap://example.com:389\"\n        search_base: \"OU=Users,DC=example,DC=com\"\n        role_mappings:\n          \".*dist-dev-storage.*\":\n            - storage.admin\n            - security.admin\n            - support.admin\n            - storage.monitor\n"
  },
  "netapp_eseries.santricity.na_santricity_lun_mapping": {
    "doc": {
      "description": "Create, delete, or modify mappings between a volume and a targeted host/host+ group.",
      "has_action": false,
      "notes": "The E-Series Ansible modules require either an instance of the Web Services Proxy (WSP), to be available to manage the storage-system, or an E-Series storage-system that supports the Embedded Web Services API.\nEmbedded Web Services is currently available on the E2800, E5700, EF570, and newer hardware models.\nM(netapp_e_storage_system) may be utilized for configuring the systems managed by a WSP instance.",
      "options": {
        "api_password": {
          "aliases": [],
          "description": "The password to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_url": {
          "aliases": [],
          "description": "The url to the SANtricity Web Services Proxy or Embedded Web Services API.\nExample https://prod-1.wahoo.acme.com:8443/devmgr/v2",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_username": {
          "aliases": [],
          "description": "The username to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "lun": {
          "aliases": [],
          "description": "The LUN value you wish to give the mapping.\nIf the supplied I(volume_name) is associated with a different LUN, it will be updated to what is supplied here.\nLUN value will be determine by the storage-system when not specified.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "ssid": {
          "aliases": [],
          "description": "The ID of the array to manage. This value must be unique for each array.",
          "default": "1",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Present will ensure the mapping exists, absent will remove the mapping.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "target": {
          "aliases": [],
          "description": "The name of host or hostgroup you wish to assign to the mapping\nIf omitted, the default hostgroup is used.\nIf the supplied I(volume_name) is associated with a different target, it will be updated to what is supplied here.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Should https certificates be validated?",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "volume_name": {
          "aliases": [
            "volume"
          ],
          "description": "The name of the volume you wish to include in the mapping.\nUse ACCESS_VOLUME to reference the in-band access management volume.",
          "type": "str",
          "required": true,
          "suboptions": {}
        }
      },
      "short_description": "NetApp E-Series manage lun mappings"
    },
    "examples": "\n---\n    - name: Map volume1 to the host target host1\n      na_santricity_lun_mapping:\n        ssid: \"1\"\n        api_url: \"https://192.168.1.100:8443/devmgr/v2\"\n        api_username: \"admin\"\n        api_password: \"adminpass\"\n        validate_certs: true\n        state: present\n        target: host1\n        volume: volume1\n    - name: Delete the lun mapping between volume1 and host1\n      na_santricity_lun_mapping:\n        ssid: \"1\"\n        api_url: \"https://192.168.1.100:8443/devmgr/v2\"\n        api_username: \"admin\"\n        api_password: \"adminpass\"\n        validate_certs: true\n        state: absent\n        target: host1\n        volume: volume1\n"
  },
  "netapp_eseries.santricity.na_santricity_mgmt_interface": {
    "doc": {
      "description": "Configure the E-Series management interfaces",
      "has_action": false,
      "notes": "Check mode is supported.\nIt is highly recommended to have a minimum of one up management port on each controller.\nWhen using SANtricity Web Services Proxy, use M(na_santricity_storage_system) to update management paths. This is required because of a known issue and will be addressed in the proxy version 4.1. After the resolution the management ports should automatically be updated.\nThe interface settings are applied synchronously, but changes to the interface itself (receiving a new IP address via dhcp, etc), can take seconds or minutes longer to take effect.\nThe E-Series Ansible modules require either an instance of the Web Services Proxy (WSP), to be available to manage the storage-system, or an E-Series storage-system that supports the Embedded Web Services API.\nEmbedded Web Services is currently available on the E2800, E5700, EF570, and newer hardware models.\nM(netapp_e_storage_system) may be utilized for configuring the systems managed by a WSP instance.",
      "options": {
        "address": {
          "aliases": [],
          "description": "The IPv4 address to assign to the interface.\nShould be specified in xx.xx.xx.xx form.\nMutually exclusive with I(config_method=dhcp)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "api_password": {
          "aliases": [],
          "description": "The password to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_url": {
          "aliases": [],
          "description": "The url to the SANtricity Web Services Proxy or Embedded Web Services API.\nExample https://prod-1.wahoo.acme.com:8443/devmgr/v2",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_username": {
          "aliases": [],
          "description": "The username to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "config_method": {
          "aliases": [],
          "description": "The configuration method type to use for network interface ports.\ndhcp is mutually exclusive with I(address), I(subnet_mask), and I(gateway).",
          "type": "str",
          "required": false,
          "choices": [
            "dhcp",
            "static"
          ],
          "suboptions": {}
        },
        "controller": {
          "aliases": [],
          "description": "The controller that owns the port you want to configure.\nController names are represented alphabetically, with the first controller as A, the second as B, and so on.\nCurrent hardware models have either 1 or 2 available controllers, but that is not a guaranteed hard limitation and could change in the future.",
          "type": "str",
          "required": true,
          "choices": [
            "A",
            "B"
          ],
          "suboptions": {}
        },
        "dns_address": {
          "aliases": [],
          "description": "Primary IPv4 or IPv6 DNS server address",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "dns_address_backup": {
          "aliases": [],
          "description": "Secondary IPv4 or IPv6 DNS server address",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "dns_config_method": {
          "aliases": [],
          "description": "The configuration method type to use for DNS services.\ndhcp is mutually exclusive with I(dns_address), and I(dns_address_backup).",
          "type": "str",
          "required": false,
          "choices": [
            "dhcp",
            "static"
          ],
          "suboptions": {}
        },
        "gateway": {
          "aliases": [],
          "description": "The IPv4 gateway address to utilize for the interface.\nShould be specified in xx.xx.xx.xx form.\nMutually exclusive with I(config_method=dhcp)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ntp_address": {
          "aliases": [],
          "description": "Primary IPv4, IPv6, or FQDN NTP server address",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ntp_address_backup": {
          "aliases": [],
          "description": "Secondary IPv4, IPv6, or FQDN NTP server address",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ntp_config_method": {
          "aliases": [],
          "description": "The configuration method type to use for NTP services.\ndisable is mutually exclusive with I(ntp_address) and I(ntp_address_backup).\ndhcp is mutually exclusive with I(ntp_address) and I(ntp_address_backup).",
          "type": "str",
          "required": false,
          "choices": [
            "disabled",
            "dhcp",
            "static"
          ],
          "suboptions": {}
        },
        "port": {
          "aliases": [],
          "description": "The ethernet port configuration to modify.\nThe channel represents the port number left to right on the controller, beginning with 1.",
          "type": "int",
          "required": true,
          "suboptions": {}
        },
        "ssh": {
          "aliases": [],
          "description": "Enable ssh access to the controller for debug purposes.\nThis is a controller-level setting.\nrlogin/telnet will be enabled for ancient equipment where ssh is not available.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ssid": {
          "aliases": [],
          "description": "The ID of the array to manage. This value must be unique for each array.",
          "default": "1",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Enable or disable IPv4 network interface configuration.\nEither IPv4 or IPv6 must be enabled otherwise error will occur.",
          "default": "enabled",
          "type": "str",
          "required": false,
          "choices": [
            "enabled",
            "disabled"
          ],
          "suboptions": {}
        },
        "subnet_mask": {
          "aliases": [],
          "description": "The subnet mask to utilize for the interface.\nShould be specified in xx.xx.xx.xx form.\nMutually exclusive with I(config_method=dhcp)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Should https certificates be validated?",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "NetApp E-Series manage management interface configuration"
    },
    "examples": "\n    - name: Configure the first port on the A controller with a static IPv4 address\n      na_santricity_mgmt_interface:\n        ssid: \"1\"\n        api_url: \"https://192.168.1.100:8443/devmgr/v2\"\n        api_username: \"admin\"\n        api_password: \"adminpass\"\n        validate_certs: true\n        port: \"1\"\n        controller: \"A\"\n        config_method: static\n        address: \"192.168.1.100\"\n        subnet_mask: \"255.255.255.0\"\n        gateway: \"192.168.1.1\"\n\n    - name: Disable ipv4 connectivity for the second port on the B controller\n      na_santricity_mgmt_interface:\n        ssid: \"1\"\n        api_url: \"https://192.168.1.100:8443/devmgr/v2\"\n        api_username: \"admin\"\n        api_password: \"adminpass\"\n        validate_certs: true\n        port: \"2\"\n        controller: \"B\"\n        enable_interface: no\n\n    - name: Enable ssh access for ports one and two on controller A\n      na_santricity_mgmt_interface:\n        ssid: \"1\"\n        api_url: \"https://192.168.1.100:8443/devmgr/v2\"\n        api_username: \"admin\"\n        api_password: \"adminpass\"\n        validate_certs: true\n        port: \"1\"\n        controller: \"A\"\n        ssh: yes\n\n    - name: Configure static DNS settings for the first port on controller A\n      na_santricity_mgmt_interface:\n        ssid: \"1\"\n        api_url: \"https://192.168.1.100:8443/devmgr/v2\"\n        api_username: \"admin\"\n        api_password: \"adminpass\"\n        validate_certs: true\n        port: \"1\"\n        controller: \"A\"\n        dns_config_method: static\n        dns_address: \"192.168.1.100\"\n        dns_address_backup: \"192.168.1.1\"\n\n"
  },
  "netapp_eseries.santricity.na_santricity_nvme_interface": {
    "doc": {
      "description": "Configure settings of an E-Series NVMe interface",
      "has_action": false,
      "notes": "The E-Series Ansible modules require either an instance of the Web Services Proxy (WSP), to be available to manage the storage-system, or an E-Series storage-system that supports the Embedded Web Services API.\nEmbedded Web Services is currently available on the E2800, E5700, EF570, and newer hardware models.\nM(netapp_e_storage_system) may be utilized for configuring the systems managed by a WSP instance.",
      "options": {
        "address": {
          "aliases": [],
          "description": "The IPv4 address to assign to the NVMe interface",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "api_password": {
          "aliases": [],
          "description": "The password to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_url": {
          "aliases": [],
          "description": "The url to the SANtricity Web Services Proxy or Embedded Web Services API.\nExample https://prod-1.wahoo.acme.com:8443/devmgr/v2",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_username": {
          "aliases": [],
          "description": "The username to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "channel": {
          "aliases": [],
          "description": "This option specifies the which NVMe controller channel to configure.\nThe list of choices is not necessarily comprehensive. It depends on the number of ports that are available in the system.\nThe numerical value represents the number of the channel (typically from left to right on the HIC), beginning with a value of 1.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "config_method": {
          "aliases": [],
          "description": "The configuration method type to use for this interface.\nOnly applicable when configuring RoCE\ndhcp is mutually exclusive with I(address), I(subnet_mask), and I(gateway).",
          "default": "dhcp",
          "type": "str",
          "required": false,
          "choices": [
            "dhcp",
            "static"
          ],
          "suboptions": {}
        },
        "controller": {
          "aliases": [],
          "description": "The controller that owns the port you want to configure.\nController names are presented alphabetically, with the first controller as A and the second as B.",
          "type": "str",
          "required": false,
          "choices": [
            "A",
            "B"
          ],
          "suboptions": {}
        },
        "gateway": {
          "aliases": [],
          "description": "The IPv4 gateway address to utilize for the interface.\nOnly applicable when configuring RoCE\nMutually exclusive with I(config_method=dhcp)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "mtu": {
          "aliases": [
            "max_frame_size"
          ],
          "description": "The maximum transmission units (MTU), in bytes.\nOnly applicable when configuring RoCE\nThis allows you to configure a larger value for the MTU, in order to enable jumbo frames (any value > 1500).\nGenerally, it is necessary to have your host, switches, and other components not only support jumbo frames, but also have it configured properly. Therefore, unless you know what you're doing, it's best to leave this at the default.",
          "default": "1500",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "speed": {
          "aliases": [],
          "description": "This is the ethernet port speed measured in Gb/s.\nValue must be a supported speed or auto for automatically negotiating the speed with the port.\nOnly applicable when configuring RoCE\nThe configured ethernet port speed should match the speed capability of the SFP on the selected port.",
          "default": "auto",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ssid": {
          "aliases": [],
          "description": "The ID of the array to manage. This value must be unique for each array.",
          "default": "1",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether or not the specified RoCE interface should be enabled.\nOnly applicable when configuring RoCE",
          "default": "enabled",
          "type": "str",
          "required": false,
          "choices": [
            "enabled",
            "disabled"
          ],
          "suboptions": {}
        },
        "subnet_mask": {
          "aliases": [],
          "description": "The subnet mask to utilize for the interface.\nOnly applicable when configuring RoCE\nMutually exclusive with I(config_method=dhcp)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Should https certificates be validated?",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "NetApp E-Series manage NVMe interface configuration"
    },
    "examples": "\n"
  },
  "netapp_eseries.santricity.na_santricity_proxy_drive_firmware_upload": {
    "doc": {
      "description": "Ensure drive firmware files are available on SANtricity Web Service Proxy.",
      "has_action": false,
      "notes": "The E-Series Ansible modules require either an instance of the Web Services Proxy (WSP), to be available to manage the storage-system, or an E-Series storage-system that supports the Embedded Web Services API.\nEmbedded Web Services is currently available on the E2800, E5700, EF570, and newer hardware models.\nM(netapp_e_storage_system) may be utilized for configuring the systems managed by a WSP instance.",
      "options": {
        "api_password": {
          "aliases": [],
          "description": "The password to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_url": {
          "aliases": [],
          "description": "The url to the SANtricity Web Services Proxy or Embedded Web Services API.\nExample https://prod-1.wahoo.acme.com:8443/devmgr/v2",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_username": {
          "aliases": [],
          "description": "The username to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "firmware": {
          "aliases": [],
          "description": "This option can be a list of file paths and/or directories containing drive firmware.\nNote that only files with the extension .dlp will be attempted to be added to the proxy; all other files will be ignored.\nNetApp E-Series drives require special firmware which can be downloaded from https://mysupport.netapp.com/NOW/download/tools/diskfw_eseries/",
          "type": "list",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Should https certificates be validated?",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "NetApp E-Series manage proxy drive firmware files"
    },
    "examples": "\n- name: Ensure correct firmware versions\n  na_santricity_proxy_drive_firmware_upload:\n    api_url: \"https://192.168.1.100:8443/devmgr/v2\"\n    api_username: \"admin\"\n    api_password: \"adminpass\"\n    validate_certs: true\n    firmware:\n        - \"path/to/drive_firmware_file1.dlp\"\n        - \"path/to/drive_firmware_file2.dlp\"\n        - \"path/to/drive_firmware_directory\"\n"
  },
  "netapp_eseries.santricity.na_santricity_proxy_firmware_upload": {
    "doc": {
      "description": "Ensure specific firmware versions are available on SANtricity Web Services Proxy.",
      "has_action": false,
      "notes": "The E-Series Ansible modules require either an instance of the Web Services Proxy (WSP), to be available to manage the storage-system, or an E-Series storage-system that supports the Embedded Web Services API.\nEmbedded Web Services is currently available on the E2800, E5700, EF570, and newer hardware models.\nM(netapp_e_storage_system) may be utilized for configuring the systems managed by a WSP instance.",
      "options": {
        "api_password": {
          "aliases": [],
          "description": "The password to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_url": {
          "aliases": [],
          "description": "The url to the SANtricity Web Services Proxy or Embedded Web Services API.\nExample https://prod-1.wahoo.acme.com:8443/devmgr/v2",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_username": {
          "aliases": [],
          "description": "The username to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "firmware": {
          "aliases": [],
          "description": "List of paths and/or directories containing firmware/NVSRAM files.\nAll firmware/NVSRAM files that are not specified will be removed from the proxy if they exist.",
          "type": "list",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Should https certificates be validated?",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "NetApp E-Series manage proxy firmware uploads."
    },
    "examples": "\n- name: Ensure proxy has the expected firmware versions.\n  na_santricity_proxy_firmware_upload:\n    api_url: \"https://192.168.1.100:8443/devmgr/v2\"\n    api_username: \"admin\"\n    api_password: \"adminpass\"\n    validate_certs: true\n    firmware:\n      - \"path/to/firmware/dlp_files\"\n      - \"path/to/nvsram.dlp\"\n      - \"path/to/firmware.dlp\"\n"
  },
  "netapp_eseries.santricity.na_santricity_proxy_systems": {
    "doc": {
      "description": "Manage the arrays accessible via a NetApp Web Services Proxy for NetApp E-series storage arrays.",
      "has_action": false,
      "notes": "The E-Series Ansible modules require either an instance of the Web Services Proxy (WSP), to be available to manage the storage-system, or an E-Series storage-system that supports the Embedded Web Services API.\nEmbedded Web Services is currently available on the E2800, E5700, EF570, and newer hardware models.\nM(netapp_e_storage_system) may be utilized for configuring the systems managed by a WSP instance.",
      "options": {
        "accept_certificate": {
          "aliases": [],
          "description": "Accept the storage system's certificate automatically even when it is self-signed.\nUse M(na_santricity_certificates) to add certificates to SANtricity Web Services Proxy.\nSANtricity Web Services Proxy will fail to add any untrusted storage system.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "add_discovered_systems": {
          "aliases": [],
          "description": "This flag will force all discovered storage systems to be added to SANtricity Web Services Proxy.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "api_password": {
          "aliases": [],
          "description": "The password to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_url": {
          "aliases": [],
          "description": "The url to the SANtricity Web Services Proxy or Embedded Web Services API.\nExample https://prod-1.wahoo.acme.com:8443/devmgr/v2",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_username": {
          "aliases": [],
          "description": "The username to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Default storage system password which will be used anytime when password has not been provided in the I(systems) sub-options.\nThe storage system admin password will be set on the device itself with the provided admin password if it is not set.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subnet_mask": {
          "aliases": [],
          "description": "This is the IPv4 search range for discovering E-Series storage arrays.\nIPv4 subnet mask specified in CIDR form. Example 192.168.1.0/24 would search the range 192.168.1.0 to 192.168.1.255.\nBe sure to include all management paths in the search range.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "systems": {
          "aliases": [],
          "description": "List of storage system information which defines which systems should be added on SANtricity Web Services Proxy.\nAccepts a simple serial number list or list of dictionary containing at minimum the serial or addresses key from the sub-option list.\nNote that the serial number will be used as the storage system identifier when an identifier is not specified.\nWhen I(add_discovered_systems == False) and any system serial number not supplied that is discovered will be removed from the proxy.",
          "default": "[]",
          "type": "list",
          "required": false,
          "suboptions": {
            "addresses": {
              "aliases": [],
              "description": "List of storage system's IPv4 addresses.\nMutually exclusive with the sub-option serial.",
              "type": "list",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [],
              "description": "This is the storage system admin password.\nWhen not provided I(default_password) will be used.\nThe storage system admin password will be set on the device itself with the provided admin password if it is not set.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "serial": {
              "aliases": [],
              "description": "Storage system's serial number which can be located on the top of every NetApp E-Series enclosure.\nInclude any leading zeros.\nMutually exclusive with the sub-option address.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "ssid": {
              "aliases": [],
              "description": "This is the Web Services Proxy's identifier for a storage system.\nWhen ssid is not specified then either the serial or first controller IPv4 address will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "tags": {
              "aliases": [],
              "description": "Optional meta tags to associate to the storage system",
              "type": "dict",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "tags": {
          "aliases": [],
          "description": "Default meta tags to associate with all storage systems if not otherwise specified in I(systems) sub-options.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Should https certificates be validated?",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "NetApp E-Series manage SANtricity web services proxy storage arrays"
    },
    "examples": "\n---\n    - name: Add storage systems to SANtricity Web Services Proxy\n      na_santricity_proxy_systems:\n        api_url: \"https://192.168.1.100:8443/devmgr/v2\"\n        api_username: \"admin\"\n        api_password: \"adminpass\"\n        validate_certs: true\n        subnet_mask: 192.168.1.0/24\n        password: password\n        tags:\n          tag: value\n        accept_certificate: True\n        systems:\n          - ssid: \"system1\"\n            serial: \"056233035640\"\n            password: \"asecretpassword\"\n            tags:\n                use: corporate\n                location: sunnyvale\n          - ssid: \"system2\"\n            addresses:\n                - 192.168.1.100\n                - 192.168.2.100     # Second is not be required. It will be discovered\n            password: \"anothersecretpassword\"\n          - serial: \"021324673799\"\n          - \"021637323454\"\n    - name: Add storage system to SANtricity Web Services Proxy with serial number list only. The serial numbers will be used to identify each system.\n      na_santricity_proxy_systems:\n        api_url: \"https://192.168.1.100:8443/devmgr/v2\"\n        api_username: \"admin\"\n        api_password: \"adminpass\"\n        validate_certs: true\n        subnet_mask: 192.168.1.0/24\n        password: password\n        accept_certificate: True\n        systems:\n          - \"1144FG123018\"\n          - \"721716500123\"\n          - \"123540006043\"\n          - \"112123001239\"\n    - name: Add all discovered storage system to SANtricity Web Services Proxy found in the IP address range 192.168.1.0 to 192.168.1.255.\n      na_santricity_proxy_systems:\n        api_url: \"https://192.168.1.100:8443/devmgr/v2\"\n        api_username: \"admin\"\n        api_password: \"adminpass\"\n        validate_certs: true\n        add_discovered_systems: True\n        subnet_mask: 192.168.1.0/24\n        password: password\n        accept_certificate: True\n"
  },
  "netapp_eseries.santricity.na_santricity_server_certificate": {
    "doc": {
      "description": "Manage NetApp E-Series storage system's server SSL certificates.",
      "has_action": false,
      "notes": "Set I(ssid=='0') or I(ssid=='proxy') to specifically reference SANtricity Web Services Proxy.\nCertificates can be the following filetypes - PEM (.pem, .crt, .cer, or .key) or DER (.der or .cer)\nWhen I(certificates) is not defined then a self-signed certificate will be expected.\nThe E-Series Ansible modules require either an instance of the Web Services Proxy (WSP), to be available to manage the storage-system, or an E-Series storage-system that supports the Embedded Web Services API.\nEmbedded Web Services is currently available on the E2800, E5700, EF570, and newer hardware models.\nM(netapp_e_storage_system) may be utilized for configuring the systems managed by a WSP instance.",
      "options": {
        "api_password": {
          "aliases": [],
          "description": "The password to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_url": {
          "aliases": [],
          "description": "The url to the SANtricity Web Services Proxy or Embedded Web Services API.\nExample https://prod-1.wahoo.acme.com:8443/devmgr/v2",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_username": {
          "aliases": [],
          "description": "The username to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "certificates": {
          "aliases": [],
          "description": "Unordered list of all server certificate files which include PEM and DER encoded certificates as well as private keys.\nWhen I(certificates) is not defined then a self-signed certificate will be expected.",
          "type": "list",
          "required": false,
          "suboptions": {}
        },
        "controller": {
          "aliases": [],
          "description": "The controller that owns the port you want to configure.\nController names are represented alphabetically, with the first controller as A, the second as B, and so on.\nCurrent hardware models have either 1 or 2 available controllers, but that is not a guaranteed hard limitation and could change in the future.\nI(controller) must be specified unless managing SANtricity Web Services Proxy (ie I(ssid=\"proxy\"))",
          "type": "str",
          "required": false,
          "choices": [
            "A",
            "B"
          ],
          "suboptions": {}
        },
        "passphrase": {
          "aliases": [],
          "description": "Passphrase for PEM encoded private key encryption.\nIf I(passphrase) is not supplied then Ansible will prompt for private key certificate.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ssid": {
          "aliases": [],
          "description": "The ID of the array to manage. This value must be unique for each array.",
          "default": "1",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Should https certificates be validated?",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "cryptography"
      ],
      "short_description": "NetApp E-Series manage the storage system's server SSL certificates."
    },
    "examples": "\n- name: Ensure signed certificate is installed.\n  na_santricity_server_certificate:\n    ssid: 1\n    api_url: https://192.168.1.100:8443/devmgr/v2\n    api_username: admin\n    api_password: adminpass\n    controller: A\n    certificates:\n      - 'root_auth_cert.pem'\n      - 'intermediate_auth1_cert.pem'\n      - 'intermediate_auth2_cert.pem'\n      - 'public_cert.pem'\n      - 'private_key.pem'\n    passphrase: keypass\n- name: Ensure signed certificate bundle is installed.\n  na_santricity_server_certificate:\n    ssid: 1\n    api_url: https://192.168.1.100:8443/devmgr/v2\n    api_username: admin\n    api_password: adminpass\n    controller: B\n    certificates:\n      - 'cert_bundle.pem'\n    passphrase: keypass\n- name: Ensure storage system generated self-signed certificate is installed.\n  na_santricity_server_certificate:\n    ssid: 1\n    api_url: https://192.168.1.100:8443/devmgr/v2\n    api_username: admin\n    api_password: adminpass\n    controller: A\n"
  },
  "netapp_eseries.santricity.na_santricity_snapshot": {
    "doc": {
      "description": "Manage NetApp E-Series manage the storage system's snapshots.",
      "has_action": false,
      "notes": "Key-value pairs are used to keep track of snapshot names and descriptions since the snapshot point-in-time images do have metadata associated with their data structures; therefore, it is necessary to clean out old keys that are no longer associated with an actual image. This cleaning action is performed each time this module is executed.\nThe E-Series Ansible modules require either an instance of the Web Services Proxy (WSP), to be available to manage the storage-system, or an E-Series storage-system that supports the Embedded Web Services API.\nEmbedded Web Services is currently available on the E2800, E5700, EF570, and newer hardware models.\nM(netapp_e_storage_system) may be utilized for configuring the systems managed by a WSP instance.",
      "options": {
        "alert_threshold_pct": {
          "aliases": [],
          "description": "Percent of filled reserve capacity to issue alert.",
          "default": "75",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "api_password": {
          "aliases": [],
          "description": "The password to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_url": {
          "aliases": [],
          "description": "The url to the SANtricity Web Services Proxy or Embedded Web Services API.\nExample https://prod-1.wahoo.acme.com:8443/devmgr/v2",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_username": {
          "aliases": [],
          "description": "The username to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "group_name": {
          "aliases": [],
          "description": "Name of the snapshot consistency group or snapshot volume.\nBe sure to use different names for snapshot consistency groups and snapshot volumes to avoid name conflicts.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "maximum_snapshots": {
          "aliases": [],
          "description": "Total number of snapshot images to maintain.",
          "default": "32",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "pit_description": {
          "aliases": [],
          "description": "Arbitrary description for a consistency group's snapshot images",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "pit_name": {
          "aliases": [],
          "description": "Name of a consistency group's snapshot images.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "pit_timestamp": {
          "aliases": [],
          "description": "Snapshot image timestamp in the YYYY-MM-DD HH:MM:SS (AM|PM) (hours, minutes, seconds, and day-period are optional)\nDefine only as much time as necessary to distinguish the desired snapshot image from the others.\n24 hour time will be assumed if day-period indicator (AM, PM) is not specified.\nThe terms latest and oldest may be used to select newest and oldest consistency group images.\nMutually exclusive with I(pit_name or pit_description)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "preferred_reserve_storage_pool": {
          "aliases": [],
          "description": "Default preferred storage pool or volume group for the reserve capacity volume.\nThe base volume's storage pool or volume group will be selected by default if not defined.\nUsed to specify storage pool or volume group for both snapshot consistency group volume members and snapshot volumes",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "reserve_capacity_full_policy": {
          "aliases": [],
          "description": "Policy for full reserve capacity.\nPurge deletes the oldest snapshot image for the base volume in the consistency group.\nReject writes to base volume (keep snapshot images valid).",
          "default": "purge",
          "type": "str",
          "required": false,
          "choices": [
            "purge",
            "reject"
          ],
          "suboptions": {}
        },
        "reserve_capacity_pct": {
          "aliases": [],
          "description": "Default percentage of base volume capacity to reserve for snapshot copy-on-writes (COW).\nUsed to define reserve capacity for both snapshot consistency group volume members and snapshot volumes.",
          "default": "40",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "rollback_backup": {
          "aliases": [],
          "description": "Whether a point-in-time snapshot should be taken prior to performing a rollback.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "rollback_priority": {
          "aliases": [],
          "description": "Storage system priority given to restoring snapshot point in time.",
          "default": "medium",
          "type": "str",
          "required": false,
          "choices": [
            "highest",
            "high",
            "medium",
            "low",
            "lowest"
          ],
          "suboptions": {}
        },
        "ssid": {
          "aliases": [],
          "description": "The ID of the array to manage. This value must be unique for each array.",
          "default": "1",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "When I(state==absent) ensures the I(type) has been removed.\nWhen I(state==present) ensures the I(type) is available.\nWhen I(state==rollback) the consistency group will be rolled back to the point-in-time snapshot images selected by I(pit_name or pit_timestamp).\nI(state==rollback) will always return changed since it is not possible to evaluate the current state of the base volume in relation to a snapshot image.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present",
            "rollback"
          ],
          "suboptions": {}
        },
        "type": {
          "aliases": [],
          "description": "Type of snapshot object to effect.\nGroup indicates a snapshot consistency group; consistency groups may have one or more base volume members which are defined in I(volumes).\nPit indicates a snapshot consistency group point-in-time image(s); a snapshot image will be taken of each base volume when I(state==present).\nWarning! When I(state==absent and type==pit), I(pit_name) or I(pit_timestamp) must be defined and all point-in-time images created prior to the selection will also be deleted.\nView indicates a consistency group snapshot volume of particular point-in-time image(s); snapshot volumes will be created for each base volume member.\nViews are created from images from a single point-in-time so once created they cannot be modified.",
          "default": "group",
          "type": "str",
          "required": false,
          "choices": [
            "group",
            "pit",
            "view"
          ],
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Should https certificates be validated?",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "view_host": {
          "aliases": [],
          "description": "Default host or host group to map snapshot volumes.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "view_name": {
          "aliases": [],
          "description": "Consistency group snapshot volume group.\nRequired when I(state==volume) or when ensuring the views absence when I(state==absent).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "view_validate": {
          "aliases": [],
          "description": "Default whether snapshop volumes should be validated.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "view_writable": {
          "aliases": [],
          "description": "Default whether snapshot volumes should be writable.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "volumes": {
          "aliases": [],
          "description": "Details for each consistency group base volume for defining reserve capacity, preferred reserve capacity storage pool, and snapshot volume options.\nWhen I(state==present and type==group) the volume entries will be used to add or remove base volume from a snapshot consistency group.\nWhen I(state==present and type==view) the volume entries will be used to select images from a point-in-time for their respective snapshot volumes.\nIf I(state==present and type==view) and I(volume) is not specified then all volumes will be selected with the defaults.\nViews are created from images from a single point-in-time so once created they cannot be modified.\nWhen I(state==rollback) then I(volumes) can be used to specify which base volumes to rollback; otherwise all consistency group volumes will rollback.",
          "type": "list",
          "required": false,
          "suboptions": {
            "preferred_reserve_storage_pool": {
              "aliases": [],
              "description": "Preferred storage pool or volume group for the reserve capacity volume.\nThe base volume's storage pool or volume group will be selected by default if not defined.\nUsed to specify storage pool or volume group for both snapshot consistency group volume members and snapshot volumes",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "reserve_capacity_pct": {
              "aliases": [],
              "description": "Percentage of base volume capacity to reserve for snapshot copy-on-writes (COW).\nUsed to define reserve capacity for both snapshot consistency group volume members and snapshot volumes.",
              "default": "40",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "snapshot_volume_host": {
              "aliases": [],
              "description": "Host or host group to map snapshot volume.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "snapshot_volume_validate": {
              "aliases": [],
              "description": "Whether snapshot volume should be validated which includes both a media scan and parity validation.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "snapshot_volume_writable": {
              "aliases": [],
              "description": "Whether snapshot volume of base volume images should be writable.",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "volume": {
              "aliases": [],
              "description": "Base volume for consistency group.",
              "type": "str",
              "required": true,
              "suboptions": {}
            }
          }
        }
      },
      "short_description": "NetApp E-Series storage system's snapshots."
    },
    "examples": "\n- name: Ensure snapshot consistency group exists.\n  na_santricity_snapshot:\n    ssid: \"1\"\n    api_url: https://192.168.1.100:8443/devmgr/v2\n    api_username: admin\n    api_password: adminpass\n    state: present\n    type: group\n    group_name: snapshot_group1\n    volumes:\n      - volume: vol1\n        reserve_capacity_pct: 20\n        preferred_reserve_storage_pool: vg1\n      - volume: vol2\n        reserve_capacity_pct: 30\n      - volume: vol3\n    alert_threshold_pct: 80\n    maximum_snapshots: 30\n- name: Take the current consistency group's base volumes point-in-time snapshot images.\n  na_santricity_snapshot:\n    ssid: \"1\"\n    api_url: https://192.168.1.100:8443/devmgr/v2\n    api_username: admin\n    api_password: adminpass\n    state: present\n    type: pit\n    group_name: snapshot_group1\n    pit_name: pit1\n    pit_description: Initial consistency group's point-in-time snapshot images.\n- name: Ensure snapshot consistency group view exists and is mapped to host group.\n  na_santricity_snapshot:\n    ssid: \"1\"\n    api_url: https://192.168.1.100:8443/devmgr/v2\n    api_username: admin\n    api_password: adminpass\n    state: present\n    type: view\n    group_name: snapshot_group1\n    pit_name: pit1\n    view_name: view1\n    view_host: view1_hosts_group\n    volumes:\n      - volume: vol1\n        reserve_capacity_pct: 20\n        preferred_reserve_storage_pool: vg4\n        snapshot_volume_writable: false\n        snapshot_volume_validate: true\n      - volume: vol2\n        reserve_capacity_pct: 20\n        preferred_reserve_storage_pool: vg4\n        snapshot_volume_writable: true\n        snapshot_volume_validate: true\n      - volume: vol3\n        reserve_capacity_pct: 20\n        preferred_reserve_storage_pool: vg4\n        snapshot_volume_writable: false\n        snapshot_volume_validate: true\n    alert_threshold_pct: 80\n    maximum_snapshots: 30\n- name: Rollback base volumes to consistency group's point-in-time pit1.\n  na_santricity_snapshot:\n    ssid: \"1\"\n    api_url: https://192.168.1.100:8443/devmgr/v2\n    api_username: admin\n    api_password: adminpass\n    state: present\n    type: group\n    group_name: snapshot_group1\n    pit_name: pit1\n    rollback: true\n    rollback_priority: high\n- name: Ensure snapshot consistency group view no longer exists.\n  na_santricity_snapshot:\n    ssid: \"1\"\n    api_url: https://192.168.1.100:8443/devmgr/v2\n    api_username: admin\n    api_password: adminpass\n    state: absent\n    type: view\n    group_name: snapshot_group1\n    view_name: view1\n- name: Ensure that the consistency group's base volumes point-in-time snapshot images pit1 no longer exists.\n  na_santricity_snapshot:\n    ssid: \"1\"\n    api_url: https://192.168.1.100:8443/devmgr/v2\n    api_username: admin\n    api_password: adminpass\n    state: absent\n    type: image\n    group_name: snapshot_group1\n    pit_name: pit1\n- name: Ensure snapshot consistency group no longer exists.\n  na_santricity_snapshot:\n    ssid: \"1\"\n    api_url: https://192.168.1.100:8443/devmgr/v2\n    api_username: admin\n    api_password: adminpass\n    state: absent\n    type: group\n    group_name: snapshot_group1\n"
  },
  "netapp_eseries.santricity.na_santricity_storagepool": {
    "doc": {
      "description": "Create or remove volume groups and disk pools for NetApp E-series storage arrays.",
      "has_action": false,
      "notes": "The expansion operations are non-blocking due to the time consuming nature of expanding volume groups\nTraditional volume groups (raid0, raid1, raid5, raid6) are performed in steps dictated by the storage array. Each required step will be attempted until the request fails which is likely because of the required expansion time.\nraidUnsupported will be treated as raid0, raidAll as raidDiskPool and raid3 as raid5.\nTray loss protection and drawer loss protection will be chosen if at all possible.\nThe E-Series Ansible modules require either an instance of the Web Services Proxy (WSP), to be available to manage the storage-system, or an E-Series storage-system that supports the Embedded Web Services API.\nEmbedded Web Services is currently available on the E2800, E5700, EF570, and newer hardware models.\nM(netapp_e_storage_system) may be utilized for configuring the systems managed by a WSP instance.",
      "options": {
        "api_password": {
          "aliases": [],
          "description": "The password to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_url": {
          "aliases": [],
          "description": "The url to the SANtricity Web Services Proxy or Embedded Web Services API.\nExample https://prod-1.wahoo.acme.com:8443/devmgr/v2",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_username": {
          "aliases": [],
          "description": "The username to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "criteria_drive_count": {
          "aliases": [],
          "description": "The number of disks to use for building the storage pool.\nWhen I(state==\"present\") then I(criteria_drive_count) or I(criteria_min_usable_capacity) must be specified.\nThe pool will be expanded if this number exceeds the number of disks already in place (See expansion note below)",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "criteria_drive_interface_type": {
          "aliases": [],
          "description": "The interface type to use when selecting drives for the storage pool\nIf not provided then all interface types will be considered.",
          "type": "str",
          "required": false,
          "choices": [
            "scsi",
            "fibre",
            "sata",
            "pata",
            "fibre520b",
            "sas",
            "sas4k",
            "nvme4k"
          ],
          "suboptions": {}
        },
        "criteria_drive_max_size": {
          "aliases": [],
          "description": "The maximum individual drive size (in size_unit) to consider when choosing drives for the storage pool.",
          "type": "float",
          "required": false,
          "suboptions": {}
        },
        "criteria_drive_min_size": {
          "aliases": [],
          "description": "The minimum individual drive size (in size_unit) to consider when choosing drives for the storage pool.",
          "type": "float",
          "required": false,
          "suboptions": {}
        },
        "criteria_drive_require_da": {
          "aliases": [],
          "description": "Ensures the storage pool will be created with only data assurance (DA) capable drives.\nOnly available for new storage pools; existing storage pools cannot be converted.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "criteria_drive_require_fde": {
          "aliases": [],
          "description": "Whether full disk encryption ability is required for drives to be added to the storage pool",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "criteria_drive_type": {
          "aliases": [],
          "description": "The type of disk (hdd or ssd) to use when searching for candidates to use.\nWhen not specified each drive type will be evaluated until successful drive candidates are found starting with the most prevalent drive type.",
          "type": "str",
          "required": false,
          "choices": [
            "hdd",
            "ssd"
          ],
          "suboptions": {}
        },
        "criteria_min_usable_capacity": {
          "aliases": [],
          "description": "The minimum size of the storage pool (in size_unit).\nWhen I(state==\"present\") then I(criteria_drive_count) or I(criteria_min_usable_capacity) must be specified.\nThe pool will be expanded if this value exceeds its current size. (See expansion note below)\nDo not use when the storage system contains mixed drives and I(usable_drives) is specified since usable capacities may not be accurate.",
          "type": "float",
          "required": false,
          "suboptions": {}
        },
        "criteria_size_unit": {
          "aliases": [],
          "description": "The unit used to interpret size parameters",
          "default": "gb",
          "type": "str",
          "required": false,
          "choices": [
            "bytes",
            "b",
            "kb",
            "mb",
            "gb",
            "tb",
            "pb",
            "eb",
            "zb",
            "yb"
          ],
          "suboptions": {}
        },
        "ddp_critical_threshold_pct": {
          "aliases": [],
          "description": "Issues a critical alert when threshold of storage has been allocated.\nOnly applicable when I(raid_level==\"raidDiskPool\").\nSet I(ddp_critical_threshold_pct==0) to disable alert.",
          "default": "85",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "ddp_warning_threshold_pct": {
          "aliases": [],
          "description": "Issues a warning alert when threshold of storage has been allocated.\nOnly applicable when I(raid_level==\"raidDiskPool\").\nSet I(ddp_warning_threshold_pct==0) to disable alert.",
          "default": "85",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "erase_secured_drives": {
          "aliases": [],
          "description": "If I(state==\"absent\") then all storage pool drives will be erase\nIf I(state==\"present\") then delete all available storage array drives that have security enabled.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the storage pool to manage",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "raid_level": {
          "aliases": [],
          "description": "The RAID level of the storage pool to be created.\nRequired only when I(state==\"present\").\nWhen I(raid_level==\"raidDiskPool\") then I(criteria_drive_count >= 10 or criteria_drive_count >= 11) is required depending on the storage array specifications.\nWhen I(raid_level==\"raid0\") then I(1<=criteria_drive_count) is required.\nWhen I(raid_level==\"raid1\") then I(2<=criteria_drive_count) is required.\nWhen I(raid_level==\"raid3\") then I(3<=criteria_drive_count<=30) is required.\nWhen I(raid_level==\"raid5\") then I(3<=criteria_drive_count<=30) is required.\nWhen I(raid_level==\"raid6\") then I(5<=criteria_drive_count<=30) is required.\nNote that raidAll will be treated as raidDiskPool and raid3 as raid5.",
          "default": "raidDiskPool",
          "type": "str",
          "required": false,
          "choices": [
            "raidAll",
            "raid0",
            "raid1",
            "raid3",
            "raid5",
            "raid6",
            "raidDiskPool"
          ],
          "suboptions": {}
        },
        "remove_volumes": {
          "aliases": [],
          "description": "Prior to removing a storage pool, delete all volumes in the pool.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "reserve_drive_count": {
          "aliases": [],
          "description": "Set the number of drives reserved by the storage pool for reconstruction operations.\nOnly valid on raid disk pools.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "secure_pool": {
          "aliases": [],
          "description": "Enables security at rest feature on the storage pool.\nWill only work if all drives in the pool are security capable (FDE, FIPS, or mix)\nWarning, once security is enabled it is impossible to disable without erasing the drives.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ssid": {
          "aliases": [],
          "description": "The ID of the array to manage. This value must be unique for each array.",
          "default": "1",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the specified storage pool should exist or not.\nNote that removing a storage pool currently requires the removal of all defined volumes first.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "usable_drives": {
          "aliases": [],
          "description": "Ordered comma-separated list of tray/drive slots to be selected for drive candidates (drives that are used will be skipped).\nEach drive entry is represented as <tray_number>:<(optional) drawer_number>:<drive_slot_number> (e.g. 99:0 is the base tray's drive slot 0).\nThe base tray's default identifier is 99 and expansion trays are added in the order they are attached but these identifiers can be changed by the user.\nBe aware that trays with multiple drawers still have a dedicated drive slot for all drives and the slot number does not rely on the drawer; however, if you're planing to have drawer protection you need to order accordingly.\nWhen I(usable_drives) are not provided then the drive candidates will be selected by the storage system.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Should https certificates be validated?",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "NetApp E-Series manage volume groups and disk pools"
    },
    "examples": "\n- name: No disk groups\n  na_santricity_storagepool:\n    ssid: \"{{ ssid }}\"\n    name: \"{{ item }}\"\n    state: absent\n    api_url: \"{{ netapp_api_url }}\"\n    api_username: \"{{ netapp_api_username }}\"\n    api_password: \"{{ netapp_api_password }}\"\n    validate_certs: \"{{ netapp_api_validate_certs }}\"\n"
  },
  "netapp_eseries.santricity.na_santricity_syslog": {
    "doc": {
      "description": "Allow the syslog settings to be configured for an individual E-Series storage-system",
      "has_action": false,
      "notes": "Check mode is supported.\nThis API is currently only supported with the Embedded Web Services API v2.12 (bundled with SANtricity OS 11.40.2) and higher.\nThe E-Series Ansible modules require either an instance of the Web Services Proxy (WSP), to be available to manage the storage-system, or an E-Series storage-system that supports the Embedded Web Services API.\nEmbedded Web Services is currently available on the E2800, E5700, EF570, and newer hardware models.\nM(netapp_e_storage_system) may be utilized for configuring the systems managed by a WSP instance.",
      "options": {
        "address": {
          "aliases": [],
          "description": "The syslog server's IPv4 address or a fully qualified hostname.\nAll existing syslog configurations will be removed when I(state=absent) and I(address=None).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "api_password": {
          "aliases": [],
          "description": "The password to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_url": {
          "aliases": [],
          "description": "The url to the SANtricity Web Services Proxy or Embedded Web Services API.\nExample https://prod-1.wahoo.acme.com:8443/devmgr/v2",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_username": {
          "aliases": [],
          "description": "The username to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "components": {
          "aliases": [],
          "description": "The e-series logging components define the specific logs to transfer to the syslog server.\nAt the time of writing, 'auditLog' is the only logging component but more may become available.",
          "default": "['auditLog']",
          "type": "list",
          "required": false,
          "suboptions": {}
        },
        "port": {
          "aliases": [],
          "description": "This is the port the syslog server is using.",
          "default": "514",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "protocol": {
          "aliases": [],
          "description": "This is the transmission protocol the syslog server's using to receive syslog messages.",
          "default": "udp",
          "type": "str",
          "required": false,
          "choices": [
            "udp",
            "tcp",
            "tls"
          ],
          "suboptions": {}
        },
        "ssid": {
          "aliases": [],
          "description": "The ID of the array to manage. This value must be unique for each array.",
          "default": "1",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Add or remove the syslog server configuration for E-Series storage array.\nExisting syslog server configuration will be removed or updated when its address matches I(address).\nFully qualified hostname that resolve to an IPv4 address that matches I(address) will not be treated as a match.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "test": {
          "aliases": [],
          "description": "This forces a test syslog message to be sent to the stated syslog server.\nOnly attempts transmission when I(state=present).",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Should https certificates be validated?",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "NetApp E-Series manage syslog settings"
    },
    "examples": "\n    - name: Add two syslog server configurations to NetApp E-Series storage array.\n      na_santricity_syslog:\n        ssid: \"1\"\n        api_url: \"https://192.168.1.100:8443/devmgr/v2\"\n        api_username: \"admin\"\n        api_password: \"adminpass\"\n        validate_certs: true\n        state: present\n        address: \"{{ item }}\"\n        port: 514\n        protocol: tcp\n        component: \"auditLog\"\n      loop:\n        - \"192.168.1.1\"\n        - \"192.168.1.100\"\n"
  },
  "netapp_eseries.santricity.na_santricity_volume": {
    "doc": {
      "description": "Create or remove volumes (standard and thin) for NetApp E/EF-series storage arrays.",
      "has_action": false,
      "notes": "The E-Series Ansible modules require either an instance of the Web Services Proxy (WSP), to be available to manage the storage-system, or an E-Series storage-system that supports the Embedded Web Services API.\nEmbedded Web Services is currently available on the E2800, E5700, EF570, and newer hardware models.\nM(netapp_e_storage_system) may be utilized for configuring the systems managed by a WSP instance.",
      "options": {
        "api_password": {
          "aliases": [],
          "description": "The password to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_url": {
          "aliases": [],
          "description": "The url to the SANtricity Web Services Proxy or Embedded Web Services API.\nExample https://prod-1.wahoo.acme.com:8443/devmgr/v2",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_username": {
          "aliases": [],
          "description": "The username to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "cache_without_batteries": {
          "aliases": [],
          "description": "Indicates whether caching should be used without battery backup.\nWarning, M(cache_without_batteries==true) and the storage system looses power and there is no battery backup, data will be lost!",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "data_assurance_enabled": {
          "aliases": [],
          "description": "Determines whether data assurance (DA) should be enabled for the volume\nOnly available when creating a new volume and on a storage pool with drives supporting the DA capability.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the volume to manage.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "owning_controller": {
          "aliases": [],
          "description": "Specifies which controller will be the primary owner of the volume\nNot specifying will allow the controller to choose ownership.",
          "type": "str",
          "required": false,
          "choices": [
            "A",
            "B"
          ],
          "suboptions": {}
        },
        "read_ahead_enable": {
          "aliases": [],
          "description": "Indicates whether or not automatic cache read-ahead is enabled.\nThis option has no effect on thinly provisioned volumes since the architecture for thin volumes cannot benefit from read ahead caching.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "read_cache_enable": {
          "aliases": [],
          "description": "Indicates whether read caching should be enabled for the volume.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "segment_size_kb": {
          "aliases": [],
          "description": "Segment size of the volume\nAll values are in kibibytes.\nSome common choices include 8, 16, 32, 64, 128, 256, and 512 but options are system dependent.\nRetrieve the definitive s ystem list from M(na_santricity_facts) under segment_sizes.\nWhen the storage pool is a raidDiskPool then the segment size must be 128kb.\nSegment size migrations are not allowed in this module",
          "default": "128",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "size": {
          "aliases": [],
          "description": "Required only when I(state==\"present\").\nSize of the volume in I(size_unit).\nSize of the virtual volume in the case of a thin volume in I(size_unit).\nMaximum virtual volume size of a thin provisioned volume is 256tb; however other OS-level restrictions may exist.",
          "type": "float",
          "required": true,
          "suboptions": {}
        },
        "size_unit": {
          "aliases": [],
          "description": "The unit used to interpret the size parameter\npct unit defines a percent of total usable storage pool size.",
          "default": "gb",
          "type": "str",
          "required": false,
          "choices": [
            "bytes",
            "b",
            "kb",
            "mb",
            "gb",
            "tb",
            "pb",
            "eb",
            "zb",
            "yb",
            "pct"
          ],
          "suboptions": {}
        },
        "ssd_cache_enabled": {
          "aliases": [],
          "description": "Whether an existing SSD cache should be enabled on the volume (fails if no SSD cache defined)\nThe default value is to ignore existing SSD cache setting.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ssid": {
          "aliases": [],
          "description": "The ID of the array to manage. This value must be unique for each array.",
          "default": "1",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the specified volume should exist",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "storage_pool_name": {
          "aliases": [],
          "description": "Required only when requested I(state==\"present\").\nName of the storage pool wherein the volume should reside.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "thin_provision": {
          "aliases": [],
          "description": "Whether the volume should be thin provisioned.\nThin volumes can only be created when I(raid_level==\"raidDiskPool\").\nGenerally, use of thin-provisioning is not recommended due to performance impacts.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "thin_volume_expansion_policy": {
          "aliases": [],
          "description": "This is the thin volume expansion policy.\nWhen I(thin_volume_expansion_policy==\"automatic\") and I(thin_volume_growth_alert_threshold) is exceed the I(thin_volume_max_repo_size) will be automatically expanded.\nWhen I(thin_volume_expansion_policy==\"manual\") and I(thin_volume_growth_alert_threshold) is exceeded the storage system will wait for manual intervention.\nThe thin volume_expansion policy can not be modified on existing thin volumes in this module.\nGenerally speaking you should almost always use I(thin_volume_expansion_policy==\"automatic).",
          "default": "automatic",
          "type": "str",
          "required": false,
          "choices": [
            "automatic",
            "manual"
          ],
          "suboptions": {}
        },
        "thin_volume_growth_alert_threshold": {
          "aliases": [],
          "description": "This is the thin provision repository utilization threshold (in percent).\nWhen the pct of used storage of the maximum repository size exceeds this value then a alert will be issued and the I(thin_volume_expansion_policy) will be executed.\nValues must be between or equal to 10 and 99.",
          "default": "95",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "thin_volume_max_repo_size": {
          "aliases": [],
          "description": "This is the maximum amount the thin volume repository will be allowed to grow.\nOnly has significance when I(thin_volume_expansion_policy==\"automatic\").\nWhen the pct I(thin_volume_repo_size) of I(thin_volume_max_repo_size) exceeds I(thin_volume_growth_alert_threshold) then a warning will be issued and the storage array will execute the I(thin_volume_expansion_policy) policy.\nExpansion operations when I(thin_volume_expansion_policy==\"automatic\") will increase the maximum repository size.\nDefault will be the same as I(size).",
          "type": "float",
          "required": false,
          "suboptions": {}
        },
        "thin_volume_repo_size": {
          "aliases": [],
          "description": "This value (in size_unit) sets the allocated space for the thin provisioned repository.\nInitial value must between or equal to 4gb and 256gb in increments of 4gb.\nDuring expansion operations the increase must be between or equal to 4gb and 256gb in increments of 4gb.\nThis option has no effect during expansion if I(thin_volume_expansion_policy==\"automatic\").\nGenerally speaking you should almost always use I(thin_volume_expansion_policy==\"automatic).",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Should https certificates be validated?",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "volume_metadata": {
          "aliases": [],
          "description": "Dictionary containing metadata for the volume itself.\nDictionary key cannot be longer than 14 characters\nDictionary values cannot be longer than 240 characters",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "wait_for_initialization": {
          "aliases": [],
          "description": "Forces the module to wait for expansion operations to complete before continuing.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "workload_metadata": {
          "aliases": [
            "metadata"
          ],
          "description": "Dictionary containing meta data for the use, user, location, etc of the volume (dictionary is arbitrarily defined for whatever the user deems useful)\nWhen I(workload_name) exists on the storage array but the metadata is different then the workload definition will be updated. (Changes will update all associated volumes!)\nI(workload_name) must be specified when I(metadata) are defined.\nDictionary key cannot be longer than 16 characters\nDictionary values cannot be longer than 60 characters",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "workload_name": {
          "aliases": [],
          "description": "Label for the workload defined by the metadata.\nWhen I(workload_name) and I(metadata) are specified then the defined workload will be added to the storage array.\nWhen I(workload_name) exists on the storage array but the metadata is different then the workload definition will be updated. (Changes will update all associated volumes!)\nExisting workloads can be retrieved using M(na_santricity_facts).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "write_cache_enable": {
          "aliases": [],
          "description": "Indicates whether write-back caching should be enabled for the volume.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "NetApp E-Series manage storage volumes (standard and thin)"
    },
    "examples": "\n- name: Create simple volume with workload tags (volume meta data)\n  na_santricity_volume:\n    ssid: \"1\"\n    api_url: \"https://192.168.1.100:8443/devmgr/v2\"\n    api_username: \"admin\"\n    api_password: \"adminpass\"\n    validate_certs: true\n    state: present\n    name: volume\n    storage_pool_name: storage_pool\n    size: 300\n    size_unit: gb\n    workload_name: volume_tag\n    metadata:\n      key1: value1\n      key2: value2\n\n- name: Create a thin volume\n  na_santricity_volume:\n    ssid: \"1\"\n    api_url: \"https://192.168.1.100:8443/devmgr/v2\"\n    api_username: \"admin\"\n    api_password: \"adminpass\"\n    validate_certs: true\n    state: present\n    name: volume1\n    storage_pool_name: storage_pool\n    size: 131072\n    size_unit: gb\n    thin_provision: true\n    thin_volume_repo_size: 32\n    thin_volume_max_repo_size: 1024\n\n- name: Expand thin volume's virtual size\n  na_santricity_volume:\n    ssid: \"1\"\n    api_url: \"https://192.168.1.100:8443/devmgr/v2\"\n    api_username: \"admin\"\n    api_password: \"adminpass\"\n    validate_certs: true\n    state: present\n    name: volume1\n    storage_pool_name: storage_pool\n    size: 262144\n    size_unit: gb\n    thin_provision: true\n    thin_volume_repo_size: 32\n    thin_volume_max_repo_size: 1024\n\n- name: Expand thin volume's maximum repository size\n  na_santricity_volume:\n    ssid: \"1\"\n    api_url: \"https://192.168.1.100:8443/devmgr/v2\"\n    api_username: \"admin\"\n    api_password: \"adminpass\"\n    validate_certs: true\n    state: present\n    name: volume1\n    storage_pool_name: storage_pool\n    size: 262144\n    size_unit: gb\n    thin_provision: true\n    thin_volume_repo_size: 32\n    thin_volume_max_repo_size: 2048\n\n- name: Delete volume\n  na_santricity_volume:\n    ssid: \"1\"\n    api_url: \"https://192.168.1.100:8443/devmgr/v2\"\n    api_username: \"admin\"\n    api_password: \"adminpass\"\n    validate_certs: true\n    state: absent\n    name: volume\n"
  },
  "netapp_eseries.santricity.netapp_e_alerts": {
    "doc": {
      "description": "Certain E-Series systems have the capability to send email notifications on potentially critical events.\nThis module will allow the owner of the system to specify email recipients for these messages.",
      "has_action": false,
      "notes": "Check mode is supported.\nAlertable messages are a subset of messages shown by the Major Event Log (MEL), of the storage-system. Examples of alertable messages include drive failures, failed controllers, loss of redundancy, and other warning/critical events.\nThis API is currently only supported with the Embedded Web Services API v2.0 and higher.\nThe E-Series Ansible modules require either an instance of the Web Services Proxy (WSP), to be available to manage the storage-system, or an E-Series storage-system that supports the Embedded Web Services API.\nEmbedded Web Services is currently available on the E2800, E5700, EF570, and newer hardware models.\nM(netapp_e_storage_system) may be utilized for configuring the systems managed by a WSP instance.",
      "options": {
        "api_password": {
          "aliases": [],
          "description": "The password to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_url": {
          "aliases": [],
          "description": "The url to the SANtricity Web Services Proxy or Embedded Web Services API. Example https://prod-1.wahoo.acme.com/devmgr/v2",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_username": {
          "aliases": [],
          "description": "The username to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "contact": {
          "aliases": [],
          "description": "Allows the owner to specify some free-form contact information to be included in the emails.\nThis is typically utilized to provide a contact phone number.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Path to a file on the Ansible control node to be used for debug logging",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "recipients": {
          "aliases": [],
          "description": "The email addresses that will receive the email notifications.\nRequired when I(state=enabled).",
          "type": "list",
          "required": false,
          "suboptions": {}
        },
        "sender": {
          "aliases": [],
          "description": "This is the sender that the recipient will see. It doesn't necessarily need to be a valid email account.\nRequired when I(state=enabled).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "server": {
          "aliases": [],
          "description": "A fully qualified domain name, IPv4 address, or IPv6 address of a mail server.\nTo use a fully qualified domain name, you must configure a DNS server on both controllers using M(netapp_e_mgmt_interface). - Required when I(state=enabled).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ssid": {
          "aliases": [],
          "description": "The ID of the array to manage. This value must be unique for each array.",
          "default": "1",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Enable/disable the sending of email-based alerts.",
          "default": "enabled",
          "type": "str",
          "required": false,
          "choices": [
            "enabled",
            "disabled"
          ],
          "suboptions": {}
        },
        "test": {
          "aliases": [],
          "description": "When a change is detected in the configuration, a test email will be sent.\nThis may take a few minutes to process.\nOnly applicable if I(state=enabled).",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Should https certificates be validated?",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "NetApp E-Series manage email notification settings",
      "version_added": "2.7"
    },
    "examples": "\n    - name: Enable email-based alerting\n      netapp_e_alerts:\n        state: enabled\n        sender: noreply@example.com\n        server: mail@example.com\n        contact: \"Phone: 1-555-555-5555\"\n        recipients:\n            - name1@example.com\n            - name2@example.com\n        api_url: \"10.1.1.1:8443\"\n        api_username: \"admin\"\n        api_password: \"myPass\"\n\n    - name: Disable alerting\n      netapp_e_alerts:\n        state: disabled\n        api_url: \"10.1.1.1:8443\"\n        api_username: \"admin\"\n        api_password: \"myPass\"\n"
  },
  "netapp_eseries.santricity.netapp_e_amg": {
    "doc": {
      "description": "Allows for the creation, removal and updating of Asynchronous Mirror Groups for NetApp E-series storage arrays",
      "has_action": false,
      "notes": "The E-Series Ansible modules require either an instance of the Web Services Proxy (WSP), to be available to manage the storage-system, or an E-Series storage-system that supports the Embedded Web Services API.\nEmbedded Web Services is currently available on the E2800, E5700, EF570, and newer hardware models.\nM(netapp_e_storage_system) may be utilized for configuring the systems managed by a WSP instance.",
      "options": {
        "api_password": {
          "aliases": [],
          "description": "The password to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_url": {
          "aliases": [],
          "description": "The url to the SANtricity Web Services Proxy or Embedded Web Services API. Example https://prod-1.wahoo.acme.com/devmgr/v2",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_username": {
          "aliases": [],
          "description": "The username to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "interfaceType": {
          "aliases": [],
          "description": "The intended protocol to use if both Fibre and iSCSI are available.",
          "type": "str",
          "required": false,
          "choices": [
            "iscsi",
            "fibre"
          ],
          "suboptions": {}
        },
        "manualSync": {
          "aliases": [],
          "description": "Setting this to true will cause other synchronization values to be ignored",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the async array you wish to target, or create.\nIf C(state) is present and the name isn't found, it will attempt to create.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "new_name": {
          "aliases": [],
          "description": "New async array name",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "recoveryWarnThresholdMinutes": {
          "aliases": [],
          "description": "Recovery point warning threshold (minutes). The user will be warned when the age of the last good failures point exceeds this value",
          "default": "20",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "repoUtilizationWarnThreshold": {
          "aliases": [],
          "description": "Recovery point warning threshold",
          "default": "80",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "secondaryArrayId": {
          "aliases": [],
          "description": "The ID of the secondary array to be used in mirroring process",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "ssid": {
          "aliases": [],
          "description": "The ID of the array to manage. This value must be unique for each array.",
          "default": "1",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "A C(state) of present will either create or update the async mirror group.\nA C(state) of absent will remove the async mirror group.",
          "type": "str",
          "required": true,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "syncIntervalMinutes": {
          "aliases": [],
          "description": "The synchronization interval in minutes",
          "default": "10",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "syncWarnThresholdMinutes": {
          "aliases": [],
          "description": "The threshold (in minutes) for notifying the user that periodic synchronization has taken too long to complete.",
          "default": "10",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Should https certificates be validated?",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "NetApp E-Series create, remove, and update asynchronous mirror groups",
      "version_added": "2.2"
    },
    "examples": "\n    - name: AMG removal\n      na_eseries_amg:\n        state: absent\n        ssid: \"{{ ssid }}\"\n        secondaryArrayId: \"{{amg_secondaryArrayId}}\"\n        api_url: \"{{ netapp_api_url }}\"\n        api_username: \"{{ netapp_api_username }}\"\n        api_password: \"{{ netapp_api_password }}\"\n        new_name: \"{{amg_array_name}}\"\n        name: \"{{amg_name}}\"\n      when: amg_create\n\n    - name: AMG create\n      netapp_e_amg:\n        state: present\n        ssid: \"{{ ssid }}\"\n        secondaryArrayId: \"{{amg_secondaryArrayId}}\"\n        api_url: \"{{ netapp_api_url }}\"\n        api_username: \"{{ netapp_api_username }}\"\n        api_password: \"{{ netapp_api_password }}\"\n        new_name: \"{{amg_array_name}}\"\n        name: \"{{amg_name}}\"\n      when: amg_create\n"
  },
  "netapp_eseries.santricity.netapp_e_amg_role": {
    "doc": {
      "description": "Update a storage array to become the primary or secondary instance in an asynchronous mirror group",
      "has_action": false,
      "options": {
        "api_password": {
          "aliases": [],
          "description": "The password to authenticate with the SANtricity WebServices Proxy or embedded REST API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_url": {
          "aliases": [],
          "description": "The url to the SANtricity WebServices Proxy or embedded REST API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_username": {
          "aliases": [],
          "description": "The username to authenticate with the SANtricity WebServices Proxy or embedded REST API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "force": {
          "aliases": [],
          "description": "Whether to force the role reversal regardless of the online-state of the primary",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the role",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "noSync": {
          "aliases": [],
          "description": "Whether to avoid synchronization prior to role reversal",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "role": {
          "aliases": [],
          "description": "Whether the array should be the primary or secondary array for the AMG",
          "type": "str",
          "required": true,
          "choices": [
            "primary",
            "secondary"
          ],
          "suboptions": {}
        },
        "ssid": {
          "aliases": [],
          "description": "The ID of the primary storage array for the async mirror action",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Should https certificates be validated?",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "NetApp E-Series update the role of a storage array within an Asynchronous Mirror Group (AMG).",
      "version_added": "2.2"
    },
    "examples": "\n    - name: Update the role of a storage array\n      netapp_e_amg_role:\n        name: updating amg role\n        role: primary\n        ssid: \"{{ ssid }}\"\n        api_url: \"{{ netapp_api_url }}\"\n        api_username: \"{{ netapp_api_username }}\"\n        api_password: \"{{ netapp_api_password }}\"\n        validate_certs: \"{{ netapp_api_validate_certs }}\"\n"
  },
  "netapp_eseries.santricity.netapp_e_amg_sync": {
    "doc": {
      "description": "Allows for the initialization, suspension and resumption of an asynchronous mirror group's synchronization for NetApp E-series storage arrays.",
      "has_action": false,
      "options": {
        "api_password": {
          "aliases": [],
          "description": "The password to authenticate with the SANtricity WebServices Proxy or embedded REST API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_url": {
          "aliases": [],
          "description": "The url to the SANtricity WebServices Proxy or embedded REST API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_username": {
          "aliases": [],
          "description": "The username to authenticate with the SANtricity WebServices Proxy or embedded REST API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "delete_recovery_point": {
          "aliases": [],
          "description": "Indicates whether the failures point can be deleted on the secondary if necessary to achieve the synchronization.\nIf true, and if the amount of unsynchronized data exceeds the CoW repository capacity on the secondary for any member volume, the last failures point will be deleted and synchronization will continue.\nIf false, the synchronization will be suspended if the amount of unsynchronized data exceeds the CoW Repository capacity on the secondary and the failures point will be preserved.\nNOTE: This only has impact for newly launched syncs.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the async mirror group you wish to target",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "ssid": {
          "aliases": [],
          "description": "The ID of the storage array containing the AMG you wish to target",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The synchronization action you'd like to take.\nIf C(running) then it will begin syncing if there is no active sync or will resume a suspended sync. If there is already a sync in progress, it will return with an OK status.\nIf C(suspended) it will suspend any ongoing sync action, but return OK if there is no active sync or if the sync is already suspended",
          "type": "str",
          "required": true,
          "choices": [
            "running",
            "suspended"
          ],
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Should https certificates be validated?",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "NetApp E-Series conduct synchronization actions on asynchronous mirror groups.",
      "version_added": "2.2"
    },
    "examples": "\n    - name: start AMG async\n      netapp_e_amg_sync:\n        name: \"{{ amg_sync_name }}\"\n        state: running\n        ssid: \"{{ ssid }}\"\n        api_url: \"{{ netapp_api_url }}\"\n        api_username: \"{{ netapp_api_username }}\"\n        api_password: \"{{ netapp_api_password }}\"\n"
  },
  "netapp_eseries.santricity.netapp_e_asup": {
    "doc": {
      "description": "Allow the auto-support settings to be configured for an individual E-Series storage-system",
      "has_action": false,
      "notes": "Check mode is supported.\nEnabling ASUP will allow our support teams to monitor the logs of the storage-system in order to proactively respond to issues with the system. It is recommended that all ASUP-related options be enabled, but they may be disabled if desired.\nThis API is currently only supported with the Embedded Web Services API v2.0 and higher.\nThe E-Series Ansible modules require either an instance of the Web Services Proxy (WSP), to be available to manage the storage-system, or an E-Series storage-system that supports the Embedded Web Services API.\nEmbedded Web Services is currently available on the E2800, E5700, EF570, and newer hardware models.\nM(netapp_e_storage_system) may be utilized for configuring the systems managed by a WSP instance.",
      "options": {
        "active": {
          "aliases": [],
          "description": "Enable active/proactive monitoring for ASUP. When a problem is detected by our monitoring systems, it's possible that the bundle did not contain all of the required information at the time of the event. Enabling this option allows NetApp support personnel to manually request transmission or re-transmission of support data in order ot resolve the problem.\nOnly applicable if I(state=enabled).",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "api_password": {
          "aliases": [],
          "description": "The password to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_url": {
          "aliases": [],
          "description": "The url to the SANtricity Web Services Proxy or Embedded Web Services API. Example https://prod-1.wahoo.acme.com/devmgr/v2",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_username": {
          "aliases": [],
          "description": "The username to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "days": {
          "aliases": [
            "days_of_week",
            "schedule_days"
          ],
          "description": "A list of days of the week that ASUP bundles will be sent. A larger, weekly bundle will be sent on one of the provided days.",
          "type": "list",
          "required": false,
          "choices": [
            "monday",
            "tuesday",
            "wednesday",
            "thursday",
            "friday",
            "saturday",
            "sunday"
          ],
          "suboptions": {}
        },
        "end": {
          "aliases": [
            "end_time"
          ],
          "description": "An end hour may be specified in a range from 1 to 24 hours.\nASUP bundles will be sent daily between the provided start and end time (UTC).\nI(start) must be less than I(end).",
          "default": "24",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "A local path to a file to be used for debug logging",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ssid": {
          "aliases": [],
          "description": "The ID of the array to manage. This value must be unique for each array.",
          "default": "1",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "start": {
          "aliases": [
            "start_time"
          ],
          "description": "A start hour may be specified in a range from 0 to 23 hours.\nASUP bundles will be sent daily between the provided start and end time (UTC).\nI(start) must be less than I(end).",
          "default": "0",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [
            "asup",
            "auto_support",
            "autosupport"
          ],
          "description": "Enable/disable the E-Series auto-support configuration.\nWhen this option is enabled, configuration, logs, and other support-related information will be relayed to NetApp to help better support your system. No personally identifiable information, passwords, etc, will be collected.",
          "default": "enabled",
          "type": "str",
          "required": false,
          "choices": [
            "enabled",
            "disabled"
          ],
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Should https certificates be validated?",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "verbose": {
          "aliases": [],
          "description": "Provide the full ASUP configuration in the return.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "NetApp E-Series manage auto-support settings",
      "version_added": "2.7"
    },
    "examples": "\n    - name: Enable ASUP and allow pro-active retrieval of bundles\n      netapp_e_asup:\n        state: enabled\n        active: yes\n        api_url: \"10.1.1.1:8443\"\n        api_username: \"admin\"\n        api_password: \"myPass\"\n\n    - name: Set the ASUP schedule to only send bundles from 12 AM CST to 3 AM CST.\n      netapp_e_asup:\n        start: 17\n        end: 20\n        api_url: \"10.1.1.1:8443\"\n        api_username: \"admin\"\n        api_password: \"myPass\"\n"
  },
  "netapp_eseries.santricity.netapp_e_auditlog": {
    "doc": {
      "description": "This module allows an e-series storage system owner to set audit-log configuration parameters.",
      "has_action": false,
      "notes": "Check mode is supported.\nThis module is currently only supported with the Embedded Web Services API v3.0 and higher.\nThe E-Series Ansible modules require either an instance of the Web Services Proxy (WSP), to be available to manage the storage-system, or an E-Series storage-system that supports the Embedded Web Services API.\nEmbedded Web Services is currently available on the E2800, E5700, EF570, and newer hardware models.\nM(netapp_e_storage_system) may be utilized for configuring the systems managed by a WSP instance.",
      "options": {
        "api_password": {
          "aliases": [],
          "description": "The password to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_url": {
          "aliases": [],
          "description": "The url to the SANtricity Web Services Proxy or Embedded Web Services API. Example https://prod-1.wahoo.acme.com/devmgr/v2",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_username": {
          "aliases": [],
          "description": "The username to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "force": {
          "aliases": [],
          "description": "Forces the audit-log configuration to delete log history when log messages fullness cause immediate warning or full condition.\nWarning! This will cause any existing audit-log messages to be deleted.\nThis is only applicable for I(full_policy=preventSystemAccess).",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "full_policy": {
          "aliases": [],
          "description": "Specifies what audit-log should do once the number of entries approach the record limit.",
          "default": "overWrite",
          "type": "str",
          "required": false,
          "choices": [
            "overWrite",
            "preventSystemAccess"
          ],
          "suboptions": {}
        },
        "log_level": {
          "aliases": [],
          "description": "Filters the log messages according to the specified log level selection.",
          "default": "writeOnly",
          "type": "str",
          "required": false,
          "choices": [
            "all",
            "writeOnly"
          ],
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "A local path to a file to be used for debug logging.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "max_records": {
          "aliases": [],
          "description": "The maximum number log messages audit-log will retain.\nMax records must be between and including 100 and 50000.",
          "default": "50000",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "ssid": {
          "aliases": [],
          "description": "The ID of the array to manage. This value must be unique for each array.",
          "default": "1",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "threshold": {
          "aliases": [],
          "description": "This is the memory full percent threshold that audit-log will start issuing warning messages.\nPercent range must be between and including 60 and 90.",
          "default": "90",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Should https certificates be validated?",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "NetApp E-Series manage audit-log configuration",
      "version_added": "2.7"
    },
    "examples": "\n- name: Define audit-log to prevent system access if records exceed 50000 with warnings occurring at 60% capacity.\n  netapp_e_auditlog:\n     api_url: \"https://{{ netapp_e_api_host }}/devmgr/v2\"\n     api_username: \"{{ netapp_e_api_username }}\"\n     api_password: \"{{ netapp_e_api_password }}\"\n     ssid: \"{{ netapp_e_ssid }}\"\n     validate_certs: no\n     max_records: 50000\n     log_level: all\n     full_policy: preventSystemAccess\n     threshold: 60\n     log_path: /path/to/log_file.log\n- name: Define audit-log utilize the default values.\n  netapp_e_auditlog:\n     api_url: \"https://{{ netapp_e_api_host }}/devmgr/v2\"\n     api_username: \"{{ netapp_e_api_username }}\"\n     api_password: \"{{ netapp_e_api_password }}\"\n     ssid: \"{{ netapp_e_ssid }}\"\n- name: Force audit-log configuration when full or warning conditions occur while enacting preventSystemAccess policy.\n  netapp_e_auditlog:\n     api_url: \"https://{{ netapp_e_api_host }}/devmgr/v2\"\n     api_username: \"{{ netapp_e_api_username }}\"\n     api_password: \"{{ netapp_e_api_password }}\"\n     ssid: \"{{ netapp_e_ssid }}\"\n     max_records: 5000\n     log_level: all\n     full_policy: preventSystemAccess\n     threshold: 60\n     force: yes\n"
  },
  "netapp_eseries.santricity.netapp_e_auth": {
    "doc": {
      "description": "Sets or updates the password for a storage array.  When the password is updated on the storage array, it must be updated on the SANtricity Web Services proxy. Note, all storage arrays do not have a Monitor or RO role.",
      "has_action": false,
      "options": {
        "api_password": {
          "aliases": [],
          "description": "The password used to authenticate against the API\nThis can optionally be set via an environment variable, API_PASSWORD",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "api_url": {
          "aliases": [],
          "description": "The full API url.\nExample: http://ENDPOINT:8080/devmgr/v2\nThis can optionally be set via an environment variable, API_URL",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "api_username": {
          "aliases": [],
          "description": "The username used to authenticate against the API\nThis can optionally be set via an environment variable, API_USERNAME",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "current_password": {
          "aliases": [],
          "description": "The current admin password. This is not required if the password hasn't been set before.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the storage array. Note that if more than one storage array with this name is detected, the task will fail and you'll have to use the ID instead.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "new_password": {
          "aliases": [],
          "description": "The password you would like to set. Cannot be more than 30 characters.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "set_admin": {
          "aliases": [],
          "description": "Boolean value on whether to update the admin password. If set to false then the RO account is updated.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ssid": {
          "aliases": [],
          "description": "the identifier of the storage array in the Web Services Proxy.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Should https certificates be validated?",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "NetApp E-Series set or update the password for a storage array.",
      "version_added": "2.2"
    },
    "examples": "\n- name: Test module\n  netapp_e_auth:\n    name: trex\n    current_password: OldPasswd\n    new_password: NewPasswd\n    set_admin: yes\n    api_url: '{{ netapp_api_url }}'\n    api_username: '{{ netapp_api_username }}'\n    api_password: '{{ netapp_api_password }}'\n"
  },
  "netapp_eseries.santricity.netapp_e_drive_firmware": {
    "doc": {
      "description": "Ensure drive firmware version is activated on specified drive model.",
      "has_action": false,
      "notes": "The E-Series Ansible modules require either an instance of the Web Services Proxy (WSP), to be available to manage the storage-system, or an E-Series storage-system that supports the Embedded Web Services API.\nEmbedded Web Services is currently available on the E2800, E5700, EF570, and newer hardware models.\nM(netapp_e_storage_system) may be utilized for configuring the systems managed by a WSP instance.",
      "options": {
        "api_password": {
          "aliases": [],
          "description": "The password to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_url": {
          "aliases": [],
          "description": "The url to the SANtricity Web Services Proxy or Embedded Web Services API. Example https://prod-1.wahoo.acme.com/devmgr/v2",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_username": {
          "aliases": [],
          "description": "The username to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "firmware": {
          "aliases": [],
          "description": "list of drive firmware file paths.\nNetApp E-Series drives require special firmware which can be downloaded from https://mysupport.netapp.com/NOW/download/tools/diskfw_eseries/",
          "type": "list",
          "required": true,
          "suboptions": {}
        },
        "ignore_inaccessible_drives": {
          "aliases": [],
          "description": "This flag will determine whether drive firmware upgrade should fail if any affected drives are inaccessible.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ssid": {
          "aliases": [],
          "description": "The ID of the array to manage. This value must be unique for each array.",
          "default": "1",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "upgrade_drives_online": {
          "aliases": [],
          "description": "This flag will determine whether drive firmware can be upgrade while drives are accepting I/O.\nWhen I(upgrade_drives_online==False) stop all I/O before running task.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Should https certificates be validated?",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "wait_for_completion": {
          "aliases": [],
          "description": "This flag will cause module to wait for any upgrade actions to complete.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "NetApp E-Series manage drive firmware",
      "version_added": "2.9"
    },
    "examples": "\n- name: Ensure correct firmware versions\n  nac_santricity_drive_firmware:\n    ssid: \"1\"\n    api_url: \"https://192.168.1.100:8443/devmgr/v2\"\n    api_username: \"admin\"\n    api_password: \"adminpass\"\n    validate_certs: true\n    firmware: \"path/to/drive_firmware\"\n    wait_for_completion: true\n    ignore_inaccessible_drives: false\n"
  },
  "netapp_eseries.santricity.netapp_e_facts": {
    "doc": {
      "description": "The netapp_e_facts module returns a collection of facts regarding NetApp E-Series storage arrays.",
      "has_action": false,
      "notes": "The E-Series Ansible modules require either an instance of the Web Services Proxy (WSP), to be available to manage the storage-system, or an E-Series storage-system that supports the Embedded Web Services API.\nEmbedded Web Services is currently available on the E2800, E5700, EF570, and newer hardware models.\nM(netapp_e_storage_system) may be utilized for configuring the systems managed by a WSP instance.",
      "options": {
        "api_password": {
          "aliases": [],
          "description": "The password to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_url": {
          "aliases": [],
          "description": "The url to the SANtricity Web Services Proxy or Embedded Web Services API. Example https://prod-1.wahoo.acme.com/devmgr/v2",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_username": {
          "aliases": [],
          "description": "The username to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "ssid": {
          "aliases": [],
          "description": "The ID of the array to manage. This value must be unique for each array.",
          "default": "1",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Should https certificates be validated?",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "NetApp E-Series retrieve facts about NetApp E-Series storage arrays",
      "version_added": "2.2"
    },
    "examples": "\n---\n- name: Get array facts\n  netapp_e_facts:\n    ssid: \"1\"\n    api_url: \"https://192.168.1.100:8443/devmgr/v2\"\n    api_username: \"admin\"\n    api_password: \"adminpass\"\n    validate_certs: true\n"
  },
  "netapp_eseries.santricity.netapp_e_firmware": {
    "doc": {
      "description": "Ensure specific firmware versions are activated on E-Series storage system.",
      "has_action": false,
      "notes": "The E-Series Ansible modules require either an instance of the Web Services Proxy (WSP), to be available to manage the storage-system, or an E-Series storage-system that supports the Embedded Web Services API.\nEmbedded Web Services is currently available on the E2800, E5700, EF570, and newer hardware models.\nM(netapp_e_storage_system) may be utilized for configuring the systems managed by a WSP instance.",
      "options": {
        "api_password": {
          "aliases": [],
          "description": "The password to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_url": {
          "aliases": [],
          "description": "The url to the SANtricity Web Services Proxy or Embedded Web Services API. Example https://prod-1.wahoo.acme.com/devmgr/v2",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_username": {
          "aliases": [],
          "description": "The username to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "firmware": {
          "aliases": [],
          "description": "Path to the firmware file.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "ignore_health_check": {
          "aliases": [],
          "description": "This flag will force firmware to be activated in spite of the health check.\nUse at your own risk. Certain non-optimal states could result in data loss.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "nvsram": {
          "aliases": [],
          "description": "Path to the NVSRAM file.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "ssid": {
          "aliases": [],
          "description": "The ID of the array to manage. This value must be unique for each array.",
          "default": "1",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Should https certificates be validated?",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "wait_for_completion": {
          "aliases": [],
          "description": "This flag will cause module to wait for any upgrade actions to complete.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "NetApp E-Series manage firmware.",
      "version_added": "2.9"
    },
    "examples": "\n- name: Ensure correct firmware versions\n  netapp_e_firmware:\n    ssid: \"1\"\n    api_url: \"https://192.168.1.100:8443/devmgr/v2\"\n    api_username: \"admin\"\n    api_password: \"adminpass\"\n    validate_certs: true\n    nvsram: \"path/to/nvsram\"\n    bundle: \"path/to/bundle\"\n    wait_for_completion: true\n- name: Ensure correct firmware versions\n  netapp_e_firmware:\n    ssid: \"1\"\n    api_url: \"https://192.168.1.100:8443/devmgr/v2\"\n    api_username: \"admin\"\n    api_password: \"adminpass\"\n    validate_certs: true\n    nvsram: \"path/to/nvsram\"\n    firmware: \"path/to/firmware\"\n"
  },
  "netapp_eseries.santricity.netapp_e_flashcache": {
    "doc": {
      "description": "Create or remove SSD caches on a NetApp E-Series storage array.",
      "has_action": false,
      "options": {
        "api_password": {
          "aliases": [],
          "description": "The password to authenticate with the SANtricity WebServices Proxy or embedded REST API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_url": {
          "aliases": [],
          "description": "The url to the SANtricity WebServices Proxy or embedded REST API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_username": {
          "aliases": [],
          "description": "The username to authenticate with the SANtricity WebServices Proxy or embedded REST API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "cache_size_min": {
          "aliases": [],
          "description": "The minimum size (in size_units) of the ssd cache. The cache will be expanded if this exceeds the current size of the cache.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "criteria_disk_phy_type": {
          "aliases": [],
          "description": "Type of physical disk",
          "type": "str",
          "required": false,
          "choices": [
            "sas",
            "sas4k",
            "fibre",
            "fibre520b",
            "scsi",
            "sata",
            "pata"
          ],
          "suboptions": {}
        },
        "disk_count": {
          "aliases": [],
          "description": "The minimum number of disks to use for building the cache. The cache will be expanded if this number exceeds the number of disks already in place",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "disk_refs": {
          "aliases": [],
          "description": "List of disk references",
          "type": "list",
          "required": false,
          "suboptions": {}
        },
        "io_type": {
          "aliases": [],
          "description": "The type of workload to optimize the cache for.",
          "default": "filesystem",
          "type": "str",
          "required": false,
          "choices": [
            "filesystem",
            "database",
            "media"
          ],
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Log mode",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Log path",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the SSD cache to manage",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "size_unit": {
          "aliases": [],
          "description": "The unit to be applied to size arguments",
          "default": "gb",
          "type": "str",
          "required": false,
          "choices": [
            "bytes",
            "b",
            "kb",
            "mb",
            "gb",
            "tb",
            "pb",
            "eb",
            "zb",
            "yb"
          ],
          "suboptions": {}
        },
        "ssid": {
          "aliases": [],
          "description": "The ID of the array to manage (as configured on the web services proxy).",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the specified SSD cache should exist or not.",
          "default": "present",
          "type": "str",
          "required": true,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Should https certificates be validated?",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "NetApp E-Series manage SSD caches",
      "version_added": "2.2"
    },
    "examples": "\n    - name: Flash Cache\n      netapp_e_flashcache:\n        ssid: \"{{ ssid }}\"\n        api_url: \"{{ netapp_api_url }}\"\n        api_username: \"{{ netapp_api_username }}\"\n        api_password: \"{{ netapp_api_password }}\"\n        validate_certs: \"{{ netapp_api_validate_certs }}\"\n        name: SSDCacheBuiltByAnsible\n"
  },
  "netapp_eseries.santricity.netapp_e_global": {
    "doc": {
      "description": "Allow the user to configure several of the global settings associated with an E-Series storage-system",
      "has_action": false,
      "notes": "Check mode is supported.\nThis module requires Web Services API v1.3 or newer.\nThe E-Series Ansible modules require either an instance of the Web Services Proxy (WSP), to be available to manage the storage-system, or an E-Series storage-system that supports the Embedded Web Services API.\nEmbedded Web Services is currently available on the E2800, E5700, EF570, and newer hardware models.\nM(netapp_e_storage_system) may be utilized for configuring the systems managed by a WSP instance.",
      "options": {
        "api_password": {
          "aliases": [],
          "description": "The password to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_url": {
          "aliases": [],
          "description": "The url to the SANtricity Web Services Proxy or Embedded Web Services API. Example https://prod-1.wahoo.acme.com/devmgr/v2",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_username": {
          "aliases": [],
          "description": "The username to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "A local path to a file to be used for debug logging",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [
            "label"
          ],
          "description": "Set the name of the E-Series storage-system\nThis label/name doesn't have to be unique.\nMay be up to 30 characters in length.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ssid": {
          "aliases": [],
          "description": "The ID of the array to manage. This value must be unique for each array.",
          "default": "1",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Should https certificates be validated?",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "NetApp E-Series manage global settings configuration",
      "version_added": "2.7"
    },
    "examples": "\n    - name: Set the storage-system name\n      netapp_e_global:\n        name: myArrayName\n        api_url: \"10.1.1.1:8443\"\n        api_username: \"admin\"\n        api_password: \"myPass\"\n"
  },
  "netapp_eseries.santricity.netapp_e_host": {
    "doc": {
      "description": "Create, update, remove hosts on NetApp E-series storage arrays",
      "has_action": false,
      "notes": "The E-Series Ansible modules require either an instance of the Web Services Proxy (WSP), to be available to manage the storage-system, or an E-Series storage-system that supports the Embedded Web Services API.\nEmbedded Web Services is currently available on the E2800, E5700, EF570, and newer hardware models.\nM(netapp_e_storage_system) may be utilized for configuring the systems managed by a WSP instance.",
      "options": {
        "api_password": {
          "aliases": [],
          "description": "The password to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_url": {
          "aliases": [],
          "description": "The url to the SANtricity Web Services Proxy or Embedded Web Services API. Example https://prod-1.wahoo.acme.com/devmgr/v2",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_username": {
          "aliases": [],
          "description": "The username to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "force_port": {
          "aliases": [],
          "description": "Allow ports that are already assigned to be re-assigned to your current host",
          "type": "bool",
          "required": false,
          "version_added": "2.7",
          "suboptions": {}
        },
        "group": {
          "aliases": [
            "cluster"
          ],
          "description": "The unique identifier of the host-group you want the host to be a member of; this is used for clustering.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "host_type": {
          "aliases": [
            "host_type_index"
          ],
          "description": "This is the type of host to be mapped\nRequired when C(state=present)\nEither one of the following names can be specified, Linux DM-MP, VMWare, Windows, Windows Clustered, or a host type index which can be found in M(netapp_e_facts)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "A local path to a file to be used for debug logging",
          "type": "str",
          "required": false,
          "version_added": "2.7",
          "suboptions": {}
        },
        "name": {
          "aliases": [
            "label"
          ],
          "description": "If the host doesn't yet exist, the label/name to assign at creation time.\nIf the hosts already exists, this will be used to uniquely identify the host to make any required changes",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "ports": {
          "aliases": [],
          "description": "A list of host ports you wish to associate with the host.\nHost ports are uniquely identified by their WWN or IQN. Their assignments to a particular host are uniquely identified by a label and these must be unique.",
          "type": "list",
          "required": false,
          "suboptions": {
            "label": {
              "aliases": [],
              "description": "A unique label to assign to this port assignment.",
              "required": true,
              "suboptions": {}
            },
            "port": {
              "aliases": [],
              "description": "The WWN or IQN of the hostPort to assign to this port definition.",
              "required": true,
              "suboptions": {}
            },
            "type": {
              "aliases": [],
              "description": "The interface type of the port to define.\nAcceptable choices depend on the capabilities of the target hardware/software platform.",
              "required": true,
              "choices": [
                "iscsi",
                "sas",
                "fc",
                "ib",
                "nvmeof",
                "ethernet"
              ],
              "suboptions": {}
            }
          }
        },
        "ssid": {
          "aliases": [],
          "description": "The ID of the array to manage. This value must be unique for each array.",
          "default": "1",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Set to absent to remove an existing host\nSet to present to modify or create a new host definition",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "version_added": "2.7",
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Should https certificates be validated?",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "NetApp E-Series manage eseries hosts",
      "version_added": "2.2"
    },
    "examples": "\n    - name: Define or update an existing host named 'Host1'\n      netapp_e_host:\n        ssid: \"1\"\n        api_url: \"10.113.1.101:8443\"\n        api_username: admin\n        api_password: myPassword\n        name: \"Host1\"\n        state: present\n        host_type_index: Linux DM-MP\n        ports:\n          - type: 'iscsi'\n            label: 'PORT_1'\n            port: 'iqn.1996-04.de.suse:01:56f86f9bd1fe'\n          - type: 'fc'\n            label: 'FC_1'\n            port: '10:00:FF:7C:FF:FF:FF:01'\n          - type: 'fc'\n            label: 'FC_2'\n            port: '10:00:FF:7C:FF:FF:FF:00'\n\n    - name: Ensure a host named 'Host2' doesn't exist\n      netapp_e_host:\n        ssid: \"1\"\n        api_url: \"10.113.1.101:8443\"\n        api_username: admin\n        api_password: myPassword\n        name: \"Host2\"\n        state: absent\n"
  },
  "netapp_eseries.santricity.netapp_e_hostgroup": {
    "doc": {
      "description": "Create, update or destroy host groups on a NetApp E-Series storage array.",
      "has_action": false,
      "notes": "The E-Series Ansible modules require either an instance of the Web Services Proxy (WSP), to be available to manage the storage-system, or an E-Series storage-system that supports the Embedded Web Services API.\nEmbedded Web Services is currently available on the E2800, E5700, EF570, and newer hardware models.\nM(netapp_e_storage_system) may be utilized for configuring the systems managed by a WSP instance.",
      "options": {
        "api_password": {
          "aliases": [],
          "description": "The password to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_url": {
          "aliases": [],
          "description": "The url to the SANtricity Web Services Proxy or Embedded Web Services API. Example https://prod-1.wahoo.acme.com/devmgr/v2",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_username": {
          "aliases": [],
          "description": "The username to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "hosts": {
          "aliases": [],
          "description": "List of host names/labels to add to the group",
          "type": "list",
          "required": false,
          "suboptions": {}
        },
        "id": {
          "aliases": [],
          "description": "Host reference identifier for the host group to manage.\nThis option is mutually exclusive with I(name).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the host group to manage\nThis option is mutually exclusive with I(id).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "new_name": {
          "aliases": [],
          "description": "Specify this when you need to update the name of a host group",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ssid": {
          "aliases": [],
          "description": "The ID of the array to manage. This value must be unique for each array.",
          "default": "1",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the specified host group should exist or not.",
          "type": "str",
          "required": true,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Should https certificates be validated?",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "NetApp E-Series manage array host groups",
      "version_added": "2.2"
    },
    "examples": "\n    - name: Configure Hostgroup\n      netapp_e_hostgroup:\n        ssid: \"{{ ssid }}\"\n        api_url: \"{{ netapp_api_url }}\"\n        api_username: \"{{ netapp_api_username }}\"\n        api_password: \"{{ netapp_api_password }}\"\n        validate_certs: \"{{ netapp_api_validate_certs }}\"\n        state: present\n"
  },
  "netapp_eseries.santricity.netapp_e_iscsi_interface": {
    "doc": {
      "description": "Configure settings of an E-Series iSCSI interface",
      "has_action": false,
      "notes": "Check mode is supported.\nThe interface settings are applied synchronously, but changes to the interface itself (receiving a new IP address via dhcp, etc), can take seconds or minutes longer to take effect.\nThis module will not be useful/usable on an E-Series system without any iSCSI interfaces.\nThis module requires a Web Services API version of >= 1.3.\nThe E-Series Ansible modules require either an instance of the Web Services Proxy (WSP), to be available to manage the storage-system, or an E-Series storage-system that supports the Embedded Web Services API.\nEmbedded Web Services is currently available on the E2800, E5700, EF570, and newer hardware models.\nM(netapp_e_storage_system) may be utilized for configuring the systems managed by a WSP instance.",
      "options": {
        "address": {
          "aliases": [],
          "description": "The IPv4 address to assign to the interface.\nShould be specified in xx.xx.xx.xx form.\nMutually exclusive with I(config_method=dhcp)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "api_password": {
          "aliases": [],
          "description": "The password to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_url": {
          "aliases": [],
          "description": "The url to the SANtricity Web Services Proxy or Embedded Web Services API. Example https://prod-1.wahoo.acme.com/devmgr/v2",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_username": {
          "aliases": [],
          "description": "The username to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "config_method": {
          "aliases": [],
          "description": "The configuration method type to use for this interface.\ndhcp is mutually exclusive with I(address), I(subnet_mask), and I(gateway).",
          "default": "dhcp",
          "type": "str",
          "required": false,
          "choices": [
            "dhcp",
            "static"
          ],
          "suboptions": {}
        },
        "controller": {
          "aliases": [],
          "description": "The controller that owns the port you want to configure.\nController names are presented alphabetically, with the first controller as A, the second as B, and so on.\nCurrent hardware models have either 1 or 2 available controllers, but that is not a guaranteed hard limitation and could change in the future.",
          "type": "str",
          "required": true,
          "choices": [
            "A",
            "B"
          ],
          "suboptions": {}
        },
        "gateway": {
          "aliases": [],
          "description": "The IPv4 gateway address to utilize for the interface.\nShould be specified in xx.xx.xx.xx form.\nMutually exclusive with I(config_method=dhcp)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "A local path to a file to be used for debug logging",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "mtu": {
          "aliases": [
            "max_frame_size"
          ],
          "description": "The maximum transmission units (MTU), in bytes.\nThis allows you to configure a larger value for the MTU, in order to enable jumbo frames (any value > 1500).\nGenerally, it is necessary to have your host, switches, and other components not only support jumbo frames, but also have it configured properly. Therefore, unless you know what you're doing, it's best to leave this at the default.",
          "default": "1500",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [
            "channel"
          ],
          "description": "The channel of the port to modify the configuration of.\nThe list of choices is not necessarily comprehensive. It depends on the number of ports that are available in the system.\nThe numerical value represents the number of the channel (typically from left to right on the HIC), beginning with a value of 1.",
          "type": "int",
          "required": true,
          "suboptions": {}
        },
        "ssid": {
          "aliases": [],
          "description": "The ID of the array to manage. This value must be unique for each array.",
          "default": "1",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "When enabled, the provided configuration will be utilized.\nWhen disabled, the IPv4 configuration will be cleared and IPv4 connectivity disabled.",
          "default": "enabled",
          "type": "str",
          "required": false,
          "choices": [
            "enabled",
            "disabled"
          ],
          "suboptions": {}
        },
        "subnet_mask": {
          "aliases": [],
          "description": "The subnet mask to utilize for the interface.\nShould be specified in xx.xx.xx.xx form.\nMutually exclusive with I(config_method=dhcp)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Should https certificates be validated?",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "NetApp E-Series manage iSCSI interface configuration",
      "version_added": "2.7"
    },
    "examples": "\n    - name: Configure the first port on the A controller with a static IPv4 address\n      netapp_e_iscsi_interface:\n        name: \"1\"\n        controller: \"A\"\n        config_method: static\n        address: \"192.168.1.100\"\n        subnet_mask: \"255.255.255.0\"\n        gateway: \"192.168.1.1\"\n        ssid: \"1\"\n        api_url: \"10.1.1.1:8443\"\n        api_username: \"admin\"\n        api_password: \"myPass\"\n\n    - name: Disable ipv4 connectivity for the second port on the B controller\n      netapp_e_iscsi_interface:\n        name: \"2\"\n        controller: \"B\"\n        state: disabled\n        ssid: \"{{ ssid }}\"\n        api_url: \"{{ netapp_api_url }}\"\n        api_username: \"{{ netapp_api_username }}\"\n        api_password: \"{{ netapp_api_password }}\"\n\n    - name: Enable jumbo frames for the first 4 ports on controller A\n      netapp_e_iscsi_interface:\n        name: \"{{ item | int }}\"\n        controller: \"A\"\n        state: enabled\n        mtu: 9000\n        config_method: dhcp\n        ssid: \"{{ ssid }}\"\n        api_url: \"{{ netapp_api_url }}\"\n        api_username: \"{{ netapp_api_username }}\"\n        api_password: \"{{ netapp_api_password }}\"\n      loop:\n        - 1\n        - 2\n        - 3\n        - 4\n"
  },
  "netapp_eseries.santricity.netapp_e_iscsi_target": {
    "doc": {
      "description": "Configure the settings of an E-Series iSCSI target",
      "has_action": false,
      "notes": "Check mode is supported.\nSome of the settings are dependent on the settings applied to the iSCSI interfaces. These can be configured using M(netapp_e_iscsi_interface).\nThis module requires a Web Services API version of >= 1.3.\nThe E-Series Ansible modules require either an instance of the Web Services Proxy (WSP), to be available to manage the storage-system, or an E-Series storage-system that supports the Embedded Web Services API.\nEmbedded Web Services is currently available on the E2800, E5700, EF570, and newer hardware models.\nM(netapp_e_storage_system) may be utilized for configuring the systems managed by a WSP instance.",
      "options": {
        "api_password": {
          "aliases": [],
          "description": "The password to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_url": {
          "aliases": [],
          "description": "The url to the SANtricity Web Services Proxy or Embedded Web Services API. Example https://prod-1.wahoo.acme.com/devmgr/v2",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_username": {
          "aliases": [],
          "description": "The username to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "chap_secret": {
          "aliases": [
            "chap",
            "password"
          ],
          "description": "Enable Challenge-Handshake Authentication Protocol (CHAP), utilizing this value as the password.\nWhen this value is specified, we will always trigger an update (changed=True). We have no way of verifying whether or not the password has changed.\nThe chap secret may only use ascii characters with values between 32 and 126 decimal.\nThe chap secret must be no less than 12 characters, but no greater than 57 characters in length.\nThe chap secret is cleared when not specified or an empty string.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "A local path (on the Ansible controller), to a file to be used for debug logging.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [
            "alias"
          ],
          "description": "The name/alias to assign to the iSCSI target.\nThis alias is often used by the initiator software in order to make an iSCSI target easier to identify.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ping": {
          "aliases": [],
          "description": "Enable ICMP ping responses from the configured iSCSI ports.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ssid": {
          "aliases": [],
          "description": "The ID of the array to manage. This value must be unique for each array.",
          "default": "1",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "unnamed_discovery": {
          "aliases": [],
          "description": "When an initiator initiates a discovery session to an initiator port, it is considered an unnamed discovery session if the iSCSI target iqn is not specified in the request.\nThis option may be disabled to increase security if desired.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Should https certificates be validated?",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "NetApp E-Series manage iSCSI target configuration",
      "version_added": "2.7"
    },
    "examples": "\n    - name: Enable ping responses and unnamed discovery sessions for all iSCSI ports\n      netapp_e_iscsi_target:\n        api_url: \"https://localhost:8443/devmgr/v2\"\n        api_username: admin\n        api_password: myPassword\n        ssid: \"1\"\n        validate_certs: no\n        name: myTarget\n        ping: yes\n        unnamed_discovery: yes\n\n    - name: Set the target alias and the CHAP secret\n      netapp_e_iscsi_target:\n        ssid: \"{{ ssid }}\"\n        api_url: \"{{ netapp_api_url }}\"\n        api_username: \"{{ netapp_api_username }}\"\n        api_password: \"{{ netapp_api_password }}\"\n        name: myTarget\n        chap: password1234\n"
  },
  "netapp_eseries.santricity.netapp_e_ldap": {
    "doc": {
      "description": "Configure an E-Series system to allow authentication via an LDAP server",
      "has_action": false,
      "notes": "Check mode is supported.\nThis module allows you to define one or more LDAP domains identified uniquely by I(identifier) to use for authentication. Authorization is determined by I(role_mappings), in that different groups of users may be given different (or no), access to certain aspects of the system and API.\nThe local user accounts will still be available if the LDAP server becomes unavailable/inaccessible.\nGenerally, you'll need to get the details of your organization's LDAP server before you'll be able to configure the system for using LDAP authentication; every implementation is likely to be very different.\nThis API is currently only supported with the Embedded Web Services API v2.0 and higher, or the Web Services Proxy v3.0 and higher.\nThe E-Series Ansible modules require either an instance of the Web Services Proxy (WSP), to be available to manage the storage-system, or an E-Series storage-system that supports the Embedded Web Services API.\nEmbedded Web Services is currently available on the E2800, E5700, EF570, and newer hardware models.\nM(netapp_e_storage_system) may be utilized for configuring the systems managed by a WSP instance.",
      "options": {
        "api_password": {
          "aliases": [],
          "description": "The password to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_url": {
          "aliases": [],
          "description": "The url to the SANtricity Web Services Proxy or Embedded Web Services API. Example https://prod-1.wahoo.acme.com/devmgr/v2",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_username": {
          "aliases": [],
          "description": "The username to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "attributes": {
          "aliases": [],
          "description": "The user attributes that should be considered for the group to role mapping.\nTypically this is used with something like 'memberOf', and a user's access is tested against group membership or lack thereof.",
          "default": "memberOf",
          "type": "list",
          "required": false,
          "suboptions": {}
        },
        "identifier": {
          "aliases": [],
          "description": "This is a unique identifier for the configuration (for cases where there are multiple domains configured).\nIf this is not specified, but I(state=present), we will utilize a default value of 'default'.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "A local path to a file to be used for debug logging",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The domain name[s] that will be utilized when authenticating to identify which domain to utilize.\nDefault to use the DNS name of the I(server).\nThe only requirement is that the name[s] be resolvable.\nExample: user@example.com",
          "type": "list",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [
            "bind_password"
          ],
          "description": "This is the password for the bind user account.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "role_mappings": {
          "aliases": [],
          "description": "This is where you specify which groups should have access to what permissions for the storage-system.\nFor example, all users in group A will be assigned all 4 available roles, which will allow access to all the management functionality of the system (super-user). Those in group B only have the storage.monitor role, which will allow only read-only access.\nThis is specified as a mapping of regular expressions to a list of roles. See the examples.\nThe roles that will be assigned to to the group/groups matching the provided regex.\nstorage.admin allows users full read/write access to storage objects and operations.\nstorage.monitor allows users read-only access to storage objects and operations.\nsupport.admin allows users access to hardware, diagnostic information, the Major Event Log, and other critical support-related functionality, but not the storage configuration.\nsecurity.admin allows users access to authentication/authorization configuration, as well as the audit log configuration, and certification management.",
          "type": "dict",
          "required": true,
          "suboptions": {}
        },
        "search_base": {
          "aliases": [],
          "description": "The search base is used to find group memberships of the user.\nExample: ou=users,dc=example,dc=com",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "server": {
          "aliases": [
            "server_url"
          ],
          "description": "This is the LDAP server url.\nThe connection string should be specified as using the ldap or ldaps protocol along with the port information.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "ssid": {
          "aliases": [],
          "description": "The ID of the array to manage. This value must be unique for each array.",
          "default": "1",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Enable/disable LDAP support on the system. Disabling will clear out any existing defined domains.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "user_attribute": {
          "aliases": [],
          "description": "This is the attribute we will use to match the provided username when a user attempts to authenticate.",
          "default": "sAMAccountName",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "username": {
          "aliases": [
            "bind_username"
          ],
          "description": "This is the user account that will be used for querying the LDAP server.\nExample: CN=MyBindAcct,OU=ServiceAccounts,DC=example,DC=com",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Should https certificates be validated?",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "NetApp E-Series manage LDAP integration to use for authentication",
      "version_added": "2.7"
    },
    "examples": "\n    - name: Disable LDAP authentication\n      netapp_e_ldap:\n        api_url: \"10.1.1.1:8443\"\n        api_username: \"admin\"\n        api_password: \"myPass\"\n        ssid: \"1\"\n        state: absent\n\n    - name: Remove the 'default' LDAP domain configuration\n      netapp_e_ldap:\n        state: absent\n        identifier: default\n\n    - name: Define a new LDAP domain, utilizing defaults where possible\n      netapp_e_ldap:\n        state: present\n        bind_username: \"CN=MyBindAccount,OU=ServiceAccounts,DC=example,DC=com\"\n        bind_password: \"mySecretPass\"\n        server: \"ldap://example.com:389\"\n        search_base: 'OU=Users,DC=example,DC=com'\n        role_mappings:\n          \".*dist-dev-storage.*\":\n            - storage.admin\n            - security.admin\n            - support.admin\n            - storage.monitor\n"
  },
  "netapp_eseries.santricity.netapp_e_lun_mapping": {
    "doc": {
      "description": "Create, delete, or modify mappings between a volume and a targeted host/host+ group.",
      "has_action": false,
      "notes": "The E-Series Ansible modules require either an instance of the Web Services Proxy (WSP), to be available to manage the storage-system, or an E-Series storage-system that supports the Embedded Web Services API.\nEmbedded Web Services is currently available on the E2800, E5700, EF570, and newer hardware models.\nM(netapp_e_storage_system) may be utilized for configuring the systems managed by a WSP instance.",
      "options": {
        "api_password": {
          "aliases": [],
          "description": "The password to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_url": {
          "aliases": [],
          "description": "The url to the SANtricity Web Services Proxy or Embedded Web Services API. Example https://prod-1.wahoo.acme.com/devmgr/v2",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_username": {
          "aliases": [],
          "description": "The username to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "lun": {
          "aliases": [],
          "description": "The LUN value you wish to give the mapping.\nIf the supplied I(volume_name) is associated with a different LUN, it will be updated to what is supplied here.\nLUN value will be determine by the storage-system when not specified.",
          "type": "int",
          "required": false,
          "version_added": "2.7",
          "suboptions": {}
        },
        "ssid": {
          "aliases": [],
          "description": "The ID of the array to manage. This value must be unique for each array.",
          "default": "1",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Present will ensure the mapping exists, absent will remove the mapping.",
          "type": "str",
          "required": true,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "target": {
          "aliases": [],
          "description": "The name of host or hostgroup you wish to assign to the mapping\nIf omitted, the default hostgroup is used.\nIf the supplied I(volume_name) is associated with a different target, it will be updated to what is supplied here.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "target_type": {
          "aliases": [],
          "description": "This option specifies the whether the target should be a host or a group of hosts\nOnly necessary when the target name is used for both a host and a group of hosts",
          "type": "str",
          "required": false,
          "choices": [
            "host",
            "group"
          ],
          "version_added": "2.7",
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Should https certificates be validated?",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "volume_name": {
          "aliases": [
            "volume"
          ],
          "description": "The name of the volume you wish to include in the mapping.",
          "type": "str",
          "required": true,
          "suboptions": {}
        }
      },
      "short_description": "NetApp E-Series create, delete, or modify lun mappings",
      "version_added": "2.2"
    },
    "examples": "\n---\n    - name: Map volume1 to the host target host1\n      netapp_e_lun_mapping:\n        ssid: 1\n        api_url: \"{{ netapp_api_url }}\"\n        api_username: \"{{ netapp_api_username }}\"\n        api_password: \"{{ netapp_api_password }}\"\n        validate_certs: no\n        state: present\n        target: host1\n        volume: volume1\n    - name: Delete the lun mapping between volume1 and host1\n      netapp_e_lun_mapping:\n        ssid: 1\n        api_url: \"{{ netapp_api_url }}\"\n        api_username: \"{{ netapp_api_username }}\"\n        api_password: \"{{ netapp_api_password }}\"\n        validate_certs: yes\n        state: absent\n        target: host1\n        volume: volume1\n"
  },
  "netapp_eseries.santricity.netapp_e_mgmt_interface": {
    "doc": {
      "description": "Configure the E-Series management interfaces",
      "has_action": false,
      "notes": "Check mode is supported.\nThe interface settings are applied synchronously, but changes to the interface itself (receiving a new IP address via dhcp, etc), can take seconds or minutes longer to take effect.\nKnown issue: Changes specifically to down ports will result in a failure. However, this may not be the case in up coming NetApp E-Series firmware releases (released after firmware version 11.40.2).\nThe E-Series Ansible modules require either an instance of the Web Services Proxy (WSP), to be available to manage the storage-system, or an E-Series storage-system that supports the Embedded Web Services API.\nEmbedded Web Services is currently available on the E2800, E5700, EF570, and newer hardware models.\nM(netapp_e_storage_system) may be utilized for configuring the systems managed by a WSP instance.",
      "options": {
        "address": {
          "aliases": [],
          "description": "The IPv4 address to assign to the interface.\nShould be specified in xx.xx.xx.xx form.\nMutually exclusive with I(config_method=dhcp)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "api_password": {
          "aliases": [],
          "description": "The password to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_url": {
          "aliases": [],
          "description": "The url to the SANtricity Web Services Proxy or Embedded Web Services API. Example https://prod-1.wahoo.acme.com/devmgr/v2",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_username": {
          "aliases": [],
          "description": "The username to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "channel": {
          "aliases": [],
          "description": "The port to modify the configuration for.\nThe channel represents the port number (typically from left to right on the controller), beginning with a value of 1.\nMutually exclusive with I(name).",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "config_method": {
          "aliases": [],
          "description": "The configuration method type to use for network interface ports.\ndhcp is mutually exclusive with I(address), I(subnet_mask), and I(gateway).",
          "type": "str",
          "required": false,
          "choices": [
            "dhcp",
            "static"
          ],
          "suboptions": {}
        },
        "controller": {
          "aliases": [],
          "description": "The controller that owns the port you want to configure.\nController names are represented alphabetically, with the first controller as A, the second as B, and so on.\nCurrent hardware models have either 1 or 2 available controllers, but that is not a guaranteed hard limitation and could change in the future.",
          "type": "str",
          "required": true,
          "choices": [
            "A",
            "B"
          ],
          "suboptions": {}
        },
        "dns_address": {
          "aliases": [],
          "description": "Primary IPv4 DNS server address",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "dns_address_backup": {
          "aliases": [],
          "description": "Backup IPv4 DNS server address\nQueried when primary DNS server fails",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "dns_config_method": {
          "aliases": [],
          "description": "The configuration method type to use for DNS services.\ndhcp is mutually exclusive with I(dns_address), and I(dns_address_backup).",
          "type": "str",
          "required": false,
          "choices": [
            "dhcp",
            "static"
          ],
          "suboptions": {}
        },
        "gateway": {
          "aliases": [],
          "description": "The IPv4 gateway address to utilize for the interface.\nShould be specified in xx.xx.xx.xx form.\nMutually exclusive with I(config_method=dhcp)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "A local path to a file to be used for debug logging",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [
            "port",
            "iface"
          ],
          "description": "The port to modify the configuration for.\nThe list of choices is not necessarily comprehensive. It depends on the number of ports that are present in the system.\nThe name represents the port number (typically from left to right on the controller), beginning with a value of 1.\nMutually exclusive with I(channel).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ntp_address": {
          "aliases": [],
          "description": "Primary IPv4 NTP server address",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ntp_address_backup": {
          "aliases": [],
          "description": "Backup IPv4 NTP server address\nQueried when primary NTP server fails",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ntp_config_method": {
          "aliases": [],
          "description": "The configuration method type to use for NTP services.\ndisable is mutually exclusive with I(ntp_address) and I(ntp_address_backup).\ndhcp is mutually exclusive with I(ntp_address) and I(ntp_address_backup).",
          "type": "str",
          "required": false,
          "choices": [
            "disable",
            "dhcp",
            "static"
          ],
          "suboptions": {}
        },
        "ssh": {
          "aliases": [],
          "description": "Enable ssh access to the controller for debug purposes.\nThis is a controller-level setting.\nrlogin/telnet will be enabled for ancient equipment where ssh is not available.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ssid": {
          "aliases": [],
          "description": "The ID of the array to manage. This value must be unique for each array.",
          "default": "1",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [
            "enable_interface"
          ],
          "description": "Enable or disable IPv4 network interface configuration.\nEither IPv4 or IPv6 must be enabled otherwise error will occur.\nOnly required when enabling or disabling IPv4 network interface",
          "type": "str",
          "required": false,
          "choices": [
            "enable",
            "disable"
          ],
          "suboptions": {}
        },
        "subnet_mask": {
          "aliases": [],
          "description": "The subnet mask to utilize for the interface.\nShould be specified in xx.xx.xx.xx form.\nMutually exclusive with I(config_method=dhcp)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Should https certificates be validated?",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "NetApp E-Series management interface configuration",
      "version_added": "2.7"
    },
    "examples": "\n    - name: Configure the first port on the A controller with a static IPv4 address\n      netapp_e_mgmt_interface:\n        channel: 1\n        controller: \"A\"\n        config_method: static\n        address: \"192.168.1.100\"\n        subnet_mask: \"255.255.255.0\"\n        gateway: \"192.168.1.1\"\n        ssid: \"1\"\n        api_url: \"10.1.1.1:8443\"\n        api_username: \"admin\"\n        api_password: \"myPass\"\n\n    - name: Disable ipv4 connectivity for the second port on the B controller\n      netapp_e_mgmt_interface:\n        channel: 2\n        controller: \"B\"\n        enable_interface: no\n        ssid: \"{{ ssid }}\"\n        api_url: \"{{ netapp_api_url }}\"\n        api_username: \"{{ netapp_api_username }}\"\n        api_password: \"{{ netapp_api_password }}\"\n\n    - name: Enable ssh access for ports one and two on controller A\n      netapp_e_mgmt_interface:\n        channel: \"{{ item }}\"\n        controller: \"A\"\n        ssh: yes\n        ssid: \"{{ ssid }}\"\n        api_url: \"{{ netapp_api_url }}\"\n        api_username: \"{{ netapp_api_username }}\"\n        api_password: \"{{ netapp_api_password }}\"\n      loop:\n        - 1\n        - 2\n\n    - name: Configure static DNS settings for the first port on controller A\n      netapp_e_mgmt_interface:\n        channel: 1\n        controller: \"A\"\n        dns_config_method: static\n        dns_address: \"192.168.1.100\"\n        dns_address_backup: \"192.168.1.1\"\n        ssid: \"{{ ssid }}\"\n        api_url: \"{{ netapp_api_url }}\"\n        api_username: \"{{ netapp_api_username }}\"\n        api_password: \"{{ netapp_api_password }}\"\n\n    - name: Configure static NTP settings for ports one and two on controller B\n      netapp_e_mgmt_interface:\n        channel: \"{{ item }}\"\n        controller: \"B\"\n        ntp_config_method: static\n        ntp_address: \"129.100.1.100\"\n        ntp_address_backup: \"127.100.1.1\"\n        ssid: \"{{ ssid }}\"\n        api_url: \"{{ netapp_api_url }}\"\n        api_username: \"{{ netapp_api_username }}\"\n        api_password: \"{{ netapp_api_password }}\"\n      loop:\n        - 1\n        - 2\n"
  },
  "netapp_eseries.santricity.netapp_e_snapshot_group": {
    "doc": {
      "description": "Create, update, delete snapshot groups for NetApp E-series storage arrays",
      "has_action": false,
      "options": {
        "api_password": {
          "aliases": [],
          "description": "The password to authenticate with the SANtricity WebServices Proxy or embedded REST API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_url": {
          "aliases": [],
          "description": "The url to the SANtricity WebServices Proxy or embedded REST API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_username": {
          "aliases": [],
          "description": "The username to authenticate with the SANtricity WebServices Proxy or embedded REST API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "base_volume_name": {
          "aliases": [],
          "description": "The name of the base volume or thin volume to use as the base for the new snapshot group.\nIf a snapshot group with an identical C(name) already exists but with a different base volume an error will be returned.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "delete_limit": {
          "aliases": [],
          "description": "The automatic deletion indicator.\nIf non-zero, the oldest snapshot image will be automatically deleted when creating a new snapshot image to keep the total number of snapshot images limited to the number specified.\nThis value is overridden by the consistency group setting if this snapshot group is associated with a consistency group.",
          "default": "30",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "full_policy": {
          "aliases": [],
          "description": "The behavior on when the data repository becomes full.\nThis value is overridden by consistency group setting if this snapshot group is associated with a consistency group",
          "default": "purgepit",
          "type": "str",
          "required": false,
          "choices": [
            "unknown",
            "failbasewrites",
            "purgepit"
          ],
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name to give the snapshot group",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "repo_pct": {
          "aliases": [],
          "description": "The size of the repository in relation to the size of the base volume",
          "default": "20",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "rollback_priority": {
          "aliases": [],
          "description": "The importance of the rollback operation.\nThis value is overridden by consistency group setting if this snapshot group is associated with a consistency group",
          "default": "medium",
          "type": "str",
          "required": false,
          "choices": [
            "highest",
            "high",
            "medium",
            "low",
            "lowest"
          ],
          "suboptions": {}
        },
        "ssid": {
          "aliases": [],
          "description": "Storage system identifier",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether to ensure the group is present or absent.",
          "type": "str",
          "required": true,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "storage_pool_name": {
          "aliases": [],
          "description": "The name of the storage pool on which to allocate the repository volume.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Should https certificates be validated?",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "warning_threshold": {
          "aliases": [],
          "description": "The repository utilization warning threshold, as a percentage of the repository volume capacity.",
          "default": "80",
          "type": "int",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "NetApp E-Series manage snapshot groups",
      "version_added": "2.2"
    },
    "examples": "\n    - name: Configure Snapshot group\n      netapp_e_snapshot_group:\n        ssid: \"{{ ssid }}\"\n        api_url: \"{{ netapp_api_url }}\"\n        api_username: \"{{ netapp_api_username }}\"\n        api_password: \"{{ netapp_api_password }}\"\n        validate_certs: \"{{ netapp_api_validate_certs }}\"\n        base_volume_name: SSGroup_test\n        name=: OOSS_Group\n        repo_pct: 20\n        warning_threshold: 85\n        delete_limit: 30\n        full_policy: purgepit\n        storage_pool_name: Disk_Pool_1\n        rollback_priority: medium\n"
  },
  "netapp_eseries.santricity.netapp_e_snapshot_images": {
    "doc": {
      "description": "Create and delete snapshots images on snapshot groups for NetApp E-series storage arrays.\nOnly the oldest snapshot image can be deleted so consistency is preserved.\nRelated: Snapshot volumes are created from snapshot images.",
      "has_action": false,
      "options": {
        "api_password": {
          "aliases": [],
          "description": "The password to authenticate with the SANtricity WebServices Proxy or embedded REST API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_url": {
          "aliases": [],
          "description": "The url to the SANtricity WebServices Proxy or embedded REST API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_username": {
          "aliases": [],
          "description": "The username to authenticate with the SANtricity WebServices Proxy or embedded REST API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "snapshot_group": {
          "aliases": [],
          "description": "The name of the snapshot group in which you want to create a snapshot image.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "ssid": {
          "aliases": [],
          "description": "Storage system identifier",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether a new snapshot image should be created or oldest be deleted.",
          "type": "str",
          "required": true,
          "choices": [
            "create",
            "remove"
          ],
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Should https certificates be validated?",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "NetApp E-Series create and delete snapshot images",
      "version_added": "2.2"
    },
    "examples": "\n    - name: Create Snapshot\n      netapp_e_snapshot_images:\n        ssid: \"{{ ssid }}\"\n        api_url: \"{{ netapp_api_url }}\"\n        api_username: \"{{ netapp_api_username }}\"\n        api_password: \"{{ netapp_api_password }}\"\n        validate_certs: \"{{ validate_certs }}\"\n        snapshot_group: \"3300000060080E5000299C24000005B656D9F394\"\n        state: 'create'\n"
  },
  "netapp_eseries.santricity.netapp_e_snapshot_volume": {
    "doc": {
      "description": "Create, update, remove snapshot volumes for NetApp E/EF-Series storage arrays.",
      "has_action": false,
      "notes": "Only I(full_threshold) is supported for update operations. If the snapshot volume already exists and the threshold matches, then an C(ok) status will be returned, no other changes can be made to a pre-existing snapshot volume.",
      "options": {
        "api_password": {
          "aliases": [],
          "description": "The password to authenticate with the SANtricity WebServices Proxy or embedded REST API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_url": {
          "aliases": [],
          "description": "The url to the SANtricity WebServices Proxy or embedded REST API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_username": {
          "aliases": [],
          "description": "The username to authenticate with the SANtricity WebServices Proxy or embedded REST API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "full_threshold": {
          "aliases": [],
          "description": "The repository utilization warning threshold percentage",
          "default": "85",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name you wish to give the snapshot volume",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "repo_percentage": {
          "aliases": [],
          "description": "The size of the view in relation to the size of the base volume",
          "default": "20",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "snapshot_image_id": {
          "aliases": [],
          "description": "The identifier of the snapshot image used to create the new snapshot volume.\nNote: You'll likely want to use the M(netapp_e_facts) module to find the ID of the image you want.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "ssid": {
          "aliases": [],
          "description": "storage array ID",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether to create or remove the snapshot volume",
          "type": "str",
          "required": true,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "storage_pool_name": {
          "aliases": [],
          "description": "Name of the storage pool on which to allocate the repository volume.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Should https certificates be validated?",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "view_mode": {
          "aliases": [],
          "description": "The snapshot volume access mode",
          "default": "readOnly",
          "type": "str",
          "required": true,
          "choices": [
            "readOnly",
            "readWrite",
            "modeUnknown",
            "__Undefined"
          ],
          "suboptions": {}
        }
      },
      "short_description": "NetApp E-Series manage snapshot volumes.",
      "version_added": "2.2"
    },
    "examples": "\n    - name: Snapshot volume\n      netapp_e_snapshot_volume:\n        ssid: \"{{ ssid }}\"\n        api_url: \"{{ netapp_api_url }}/\"\n        api_username: \"{{ netapp_api_username }}\"\n        api_password: \"{{ netapp_api_password }}\"\n        state: present\n        storage_pool_name: \"{{ snapshot_volume_storage_pool_name }}\"\n        snapshot_image_id: \"{{ snapshot_volume_image_id }}\"\n        name: \"{{ snapshot_volume_name }}\"\n"
  },
  "netapp_eseries.santricity.netapp_e_storage_system": {
    "doc": {
      "description": "Manage the arrays accessible via a NetApp Web Services Proxy for NetApp E-series storage arrays.",
      "has_action": false,
      "options": {
        "api_password": {
          "aliases": [],
          "description": "The password to authenticate with the SANtricity WebServices Proxy or embedded REST API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_url": {
          "aliases": [],
          "description": "The url to the SANtricity WebServices Proxy or embedded REST API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_username": {
          "aliases": [],
          "description": "The username to authenticate with the SANtricity WebServices Proxy or embedded REST API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "array_password": {
          "aliases": [],
          "description": "The management password of the array to manage, if set.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "array_status_timeout_sec": {
          "aliases": [],
          "description": "Array status timeout measured in seconds",
          "default": "60",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "array_wwn": {
          "aliases": [],
          "description": "The WWN of the array to manage. Only necessary if in-band managing multiple arrays on the same agent host.  Mutually exclusive of controller_addresses parameter.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "controller_addresses": {
          "aliases": [],
          "description": "The list addresses for the out-of-band management adapter or the agent host. Mutually exclusive of array_wwn parameter.",
          "type": "list",
          "required": true,
          "suboptions": {}
        },
        "enable_trace": {
          "aliases": [],
          "description": "Enable trace logging for SYMbol calls to the storage system.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "meta_tags": {
          "aliases": [],
          "description": "Optional meta tags to associate to this storage system",
          "type": "list",
          "required": false,
          "suboptions": {}
        },
        "ssid": {
          "aliases": [],
          "description": "The ID of the array to manage. This value must be unique for each array.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the specified array should be configured on the Web Services Proxy or not.",
          "type": "str",
          "required": true,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Should https certificates be validated?",
          "default": "yes",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "NetApp E-Series Web Services Proxy manage storage arrays",
      "version_added": "2.2"
    },
    "examples": "\n---\n    - name:  Presence of storage system\n      netapp_e_storage_system:\n        ssid: \"{{ item.key }}\"\n        state: present\n        api_url: \"{{ netapp_api_url }}\"\n        api_username: \"{{ netapp_api_username }}\"\n        api_password: \"{{ netapp_api_password }}\"\n        validate_certs: \"{{ netapp_api_validate_certs }}\"\n        controller_addresses:\n          - \"{{ item.value.address1 }}\"\n          - \"{{ item.value.address2 }}\"\n      with_dict: \"{{ storage_systems }}\"\n      when: check_storage_system\n"
  },
  "netapp_eseries.santricity.netapp_e_storagepool": {
    "doc": {
      "description": "Create or remove volume groups and disk pools for NetApp E-series storage arrays.",
      "has_action": false,
      "notes": "The expansion operations are non-blocking due to the time consuming nature of expanding volume groups\nTraditional volume groups (raid0, raid1, raid5, raid6) are performed in steps dictated by the storage array. Each required step will be attempted until the request fails which is likely because of the required expansion time.\nraidUnsupported will be treated as raid0, raidAll as raidDiskPool and raid3 as raid5.\nTray loss protection and drawer loss protection will be chosen if at all possible.\nThe E-Series Ansible modules require either an instance of the Web Services Proxy (WSP), to be available to manage the storage-system, or an E-Series storage-system that supports the Embedded Web Services API.\nEmbedded Web Services is currently available on the E2800, E5700, EF570, and newer hardware models.\nM(netapp_e_storage_system) may be utilized for configuring the systems managed by a WSP instance.",
      "options": {
        "api_password": {
          "aliases": [],
          "description": "The password to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_url": {
          "aliases": [],
          "description": "The url to the SANtricity Web Services Proxy or Embedded Web Services API. Example https://prod-1.wahoo.acme.com/devmgr/v2",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_username": {
          "aliases": [],
          "description": "The username to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "criteria_drive_count": {
          "aliases": [],
          "description": "The number of disks to use for building the storage pool.\nWhen I(state==\"present\") then I(criteria_drive_count) or I(criteria_min_usable_capacity) must be specified.\nThe pool will be expanded if this number exceeds the number of disks already in place (See expansion note below)",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "criteria_drive_interface_type": {
          "aliases": [],
          "description": "The interface type to use when selecting drives for the storage pool\nIf not provided then all interface types will be considered.",
          "type": "str",
          "required": false,
          "choices": [
            "sas",
            "sas4k",
            "fibre",
            "fibre520b",
            "scsi",
            "sata",
            "pata"
          ],
          "suboptions": {}
        },
        "criteria_drive_min_size": {
          "aliases": [],
          "description": "The minimum individual drive size (in size_unit) to consider when choosing drives for the storage pool.",
          "type": "float",
          "required": false,
          "suboptions": {}
        },
        "criteria_drive_require_da": {
          "aliases": [],
          "description": "Ensures the storage pool will be created with only data assurance (DA) capable drives.\nOnly available for new storage pools; existing storage pools cannot be converted.",
          "default": "False",
          "type": "bool",
          "required": false,
          "version_added": "2.9",
          "suboptions": {}
        },
        "criteria_drive_require_fde": {
          "aliases": [],
          "description": "Whether full disk encryption ability is required for drives to be added to the storage pool",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "criteria_drive_type": {
          "aliases": [],
          "description": "The type of disk (hdd or ssd) to use when searching for candidates to use.\nWhen not specified each drive type will be evaluated until successful drive candidates are found starting with the most prevalent drive type.",
          "type": "str",
          "required": false,
          "choices": [
            "hdd",
            "ssd"
          ],
          "suboptions": {}
        },
        "criteria_min_usable_capacity": {
          "aliases": [],
          "description": "The minimum size of the storage pool (in size_unit).\nWhen I(state==\"present\") then I(criteria_drive_count) or I(criteria_min_usable_capacity) must be specified.\nThe pool will be expanded if this value exceeds its current size. (See expansion note below)",
          "type": "float",
          "required": false,
          "suboptions": {}
        },
        "criteria_size_unit": {
          "aliases": [],
          "description": "The unit used to interpret size parameters",
          "default": "gb",
          "type": "str",
          "required": false,
          "choices": [
            "bytes",
            "b",
            "kb",
            "mb",
            "gb",
            "tb",
            "pb",
            "eb",
            "zb",
            "yb"
          ],
          "suboptions": {}
        },
        "erase_secured_drives": {
          "aliases": [],
          "description": "If I(state==\"absent\") then all storage pool drives will be erase\nIf I(state==\"present\") then delete all available storage array drives that have security enabled.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the storage pool to manage",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "raid_level": {
          "aliases": [],
          "description": "The RAID level of the storage pool to be created.\nRequired only when I(state==\"present\").\nWhen I(raid_level==\"raidDiskPool\") then I(criteria_drive_count >= 10 or criteria_drive_count >= 11) is required depending on the storage array specifications.\nWhen I(raid_level==\"raid0\") then I(1<=criteria_drive_count) is required.\nWhen I(raid_level==\"raid1\") then I(2<=criteria_drive_count) is required.\nWhen I(raid_level==\"raid3\") then I(3<=criteria_drive_count<=30) is required.\nWhen I(raid_level==\"raid5\") then I(3<=criteria_drive_count<=30) is required.\nWhen I(raid_level==\"raid6\") then I(5<=criteria_drive_count<=30) is required.\nNote that raidAll will be treated as raidDiskPool and raid3 as raid5.",
          "default": "raidDiskPool",
          "type": "str",
          "required": false,
          "choices": [
            "raidAll",
            "raid0",
            "raid1",
            "raid3",
            "raid5",
            "raid6",
            "raidDiskPool"
          ],
          "suboptions": {}
        },
        "remove_volumes": {
          "aliases": [],
          "description": "Prior to removing a storage pool, delete all volumes in the pool.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "reserve_drive_count": {
          "aliases": [],
          "description": "Set the number of drives reserved by the storage pool for reconstruction operations.\nOnly valid on raid disk pools.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "secure_pool": {
          "aliases": [],
          "description": "Enables security at rest feature on the storage pool.\nWill only work if all drives in the pool are security capable (FDE, FIPS, or mix)\nWarning, once security is enabled it is impossible to disable without erasing the drives.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ssid": {
          "aliases": [],
          "description": "The ID of the array to manage. This value must be unique for each array.",
          "default": "1",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the specified storage pool should exist or not.\nNote that removing a storage pool currently requires the removal of all defined volumes first.",
          "type": "str",
          "required": true,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Should https certificates be validated?",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "NetApp E-Series manage volume groups and disk pools",
      "version_added": "2.2"
    },
    "examples": "\n- name: No disk groups\n  netapp_e_storagepool:\n    ssid: \"{{ ssid }}\"\n    name: \"{{ item }}\"\n    state: absent\n    api_url: \"{{ netapp_api_url }}\"\n    api_username: \"{{ netapp_api_username }}\"\n    api_password: \"{{ netapp_api_password }}\"\n    validate_certs: \"{{ netapp_api_validate_certs }}\"\n"
  },
  "netapp_eseries.santricity.netapp_e_syslog": {
    "doc": {
      "description": "Allow the syslog settings to be configured for an individual E-Series storage-system",
      "has_action": false,
      "notes": "Check mode is supported.\nThis API is currently only supported with the Embedded Web Services API v2.12 (bundled with SANtricity OS 11.40.2) and higher.\nThe E-Series Ansible modules require either an instance of the Web Services Proxy (WSP), to be available to manage the storage-system, or an E-Series storage-system that supports the Embedded Web Services API.\nEmbedded Web Services is currently available on the E2800, E5700, EF570, and newer hardware models.\nM(netapp_e_storage_system) may be utilized for configuring the systems managed by a WSP instance.",
      "options": {
        "address": {
          "aliases": [],
          "description": "The syslog server's IPv4 address or a fully qualified hostname.\nAll existing syslog configurations will be removed when I(state=absent) and I(address=None).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "api_password": {
          "aliases": [],
          "description": "The password to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_url": {
          "aliases": [],
          "description": "The url to the SANtricity Web Services Proxy or Embedded Web Services API. Example https://prod-1.wahoo.acme.com/devmgr/v2",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_username": {
          "aliases": [],
          "description": "The username to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "components": {
          "aliases": [],
          "description": "The e-series logging components define the specific logs to transfer to the syslog server.\nAt the time of writing, 'auditLog' is the only logging component but more may become available.",
          "default": "['auditLog']",
          "type": "list",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "This argument specifies a local path for logging purposes.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "port": {
          "aliases": [],
          "description": "This is the port the syslog server is using.",
          "default": "514",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "protocol": {
          "aliases": [],
          "description": "This is the transmission protocol the syslog server's using to receive syslog messages.",
          "default": "udp",
          "type": "str",
          "required": false,
          "choices": [
            "udp",
            "tcp",
            "tls"
          ],
          "suboptions": {}
        },
        "ssid": {
          "aliases": [],
          "description": "The ID of the array to manage. This value must be unique for each array.",
          "default": "1",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Add or remove the syslog server configuration for E-Series storage array.\nExisting syslog server configuration will be removed or updated when its address matches I(address).\nFully qualified hostname that resolve to an IPv4 address that matches I(address) will not be treated as a match.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "test": {
          "aliases": [],
          "description": "This forces a test syslog message to be sent to the stated syslog server.\nOnly attempts transmission when I(state=present).",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Should https certificates be validated?",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "NetApp E-Series manage syslog settings",
      "version_added": "2.7"
    },
    "examples": "\n    - name: Add two syslog server configurations to NetApp E-Series storage array.\n      netapp_e_syslog:\n        state: present\n        address: \"{{ item }}\"\n        port: 514\n        protocol: tcp\n        component: \"auditLog\"\n        api_url: \"10.1.1.1:8443\"\n        api_username: \"admin\"\n        api_password: \"myPass\"\n      loop:\n        - \"192.168.1.1\"\n        - \"192.168.1.100\"\n"
  },
  "netapp_eseries.santricity.netapp_e_volume": {
    "doc": {
      "description": "Create or remove volumes (standard and thin) for NetApp E/EF-series storage arrays.",
      "has_action": false,
      "notes": "The E-Series Ansible modules require either an instance of the Web Services Proxy (WSP), to be available to manage the storage-system, or an E-Series storage-system that supports the Embedded Web Services API.\nEmbedded Web Services is currently available on the E2800, E5700, EF570, and newer hardware models.\nM(netapp_e_storage_system) may be utilized for configuring the systems managed by a WSP instance.",
      "options": {
        "api_password": {
          "aliases": [],
          "description": "The password to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_url": {
          "aliases": [],
          "description": "The url to the SANtricity Web Services Proxy or Embedded Web Services API. Example https://prod-1.wahoo.acme.com/devmgr/v2",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_username": {
          "aliases": [],
          "description": "The username to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "cache_without_batteries": {
          "aliases": [],
          "description": "Indicates whether caching should be used without battery backup.\nWarning, M(cache_without_batteries==true) and the storage system looses power and there is no battery backup, data will be lost!",
          "default": "False",
          "type": "bool",
          "required": false,
          "version_added": "2.9",
          "suboptions": {}
        },
        "data_assurance_enabled": {
          "aliases": [],
          "description": "Determines whether data assurance (DA) should be enabled for the volume\nOnly available when creating a new volume and on a storage pool with drives supporting the DA capability.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "initialization_timeout": {
          "aliases": [],
          "description": "Duration in seconds before the wait_for_initialization operation will terminate.\nM(wait_for_initialization==True) to have any effect on module's operations.",
          "type": "int",
          "required": false,
          "version_added": "2.9",
          "suboptions": {}
        },
        "metadata": {
          "aliases": [],
          "description": "Dictionary containing meta data for the use, user, location, etc of the volume (dictionary is arbitrarily defined for whatever the user deems useful)\nWhen I(workload_name) exists on the storage array but the metadata is different then the workload definition will be updated. (Changes will update all associated volumes!)\nI(workload_name) must be specified when I(metadata) are defined.",
          "type": "dict",
          "required": false,
          "version_added": "2.8",
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the volume to manage.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "owning_controller": {
          "aliases": [],
          "description": "Specifies which controller will be the primary owner of the volume\nNot specifying will allow the controller to choose ownership.",
          "type": "str",
          "required": false,
          "choices": [
            "A",
            "B"
          ],
          "version_added": "2.9",
          "suboptions": {}
        },
        "read_ahead_enable": {
          "aliases": [],
          "description": "Indicates whether or not automatic cache read-ahead is enabled.\nThis option has no effect on thinly provisioned volumes since the architecture for thin volumes cannot benefit from read ahead caching.",
          "default": "True",
          "type": "bool",
          "required": false,
          "version_added": "2.8",
          "suboptions": {}
        },
        "read_cache_enable": {
          "aliases": [],
          "description": "Indicates whether read caching should be enabled for the volume.",
          "default": "True",
          "type": "bool",
          "required": false,
          "version_added": "2.8",
          "suboptions": {}
        },
        "segment_size_kb": {
          "aliases": [],
          "description": "Segment size of the volume\nAll values are in kibibytes.\nSome common choices include '8', '16', '32', '64', '128', '256', and '512' but options are system dependent.\nRetrieve the definitive system list from M(netapp_e_facts) under segment_sizes.\nWhen the storage pool is a raidDiskPool then the segment size must be 128kb.\nSegment size migrations are not allowed in this module",
          "default": "128",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "size": {
          "aliases": [],
          "description": "Required only when I(state=='present').\nSize of the volume in I(size_unit).\nSize of the virtual volume in the case of a thin volume in I(size_unit).\nMaximum virtual volume size of a thin provisioned volume is 256tb; however other OS-level restrictions may exist.",
          "type": "float",
          "required": true,
          "suboptions": {}
        },
        "size_unit": {
          "aliases": [],
          "description": "The unit used to interpret the size parameter",
          "default": "gb",
          "type": "str",
          "required": false,
          "choices": [
            "bytes",
            "b",
            "kb",
            "mb",
            "gb",
            "tb",
            "pb",
            "eb",
            "zb",
            "yb"
          ],
          "suboptions": {}
        },
        "ssd_cache_enabled": {
          "aliases": [],
          "description": "Whether an existing SSD cache should be enabled on the volume (fails if no SSD cache defined)\nThe default value is to ignore existing SSD cache setting.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ssid": {
          "aliases": [],
          "description": "The ID of the array to manage. This value must be unique for each array.",
          "default": "1",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the specified volume should exist",
          "type": "str",
          "required": true,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "storage_pool_name": {
          "aliases": [],
          "description": "Required only when requested I(state=='present').\nName of the storage pool wherein the volume should reside.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "thin_provision": {
          "aliases": [],
          "description": "Whether the volume should be thin provisioned.\nThin volumes can only be created when I(raid_level==\"raidDiskPool\").\nGenerally, use of thin-provisioning is not recommended due to performance impacts.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "thin_volume_expansion_policy": {
          "aliases": [],
          "description": "This is the thin volume expansion policy.\nWhen I(thin_volume_expansion_policy==\"automatic\") and I(thin_volume_growth_alert_threshold) is exceed the I(thin_volume_max_repo_size) will be automatically expanded.\nWhen I(thin_volume_expansion_policy==\"manual\") and I(thin_volume_growth_alert_threshold) is exceeded the storage system will wait for manual intervention.\nThe thin volume_expansion policy can not be modified on existing thin volumes in this module.\nGenerally speaking you should almost always use I(thin_volume_expansion_policy==\"automatic).",
          "default": "automatic",
          "type": "str",
          "required": false,
          "choices": [
            "automatic",
            "manual"
          ],
          "version_added": "2.8",
          "suboptions": {}
        },
        "thin_volume_growth_alert_threshold": {
          "aliases": [],
          "description": "This is the thin provision repository utilization threshold (in percent).\nWhen the percentage of used storage of the maximum repository size exceeds this value then a alert will be issued and the I(thin_volume_expansion_policy) will be executed.\nValues must be between or equal to 10 and 99.",
          "default": "95",
          "type": "int",
          "required": false,
          "version_added": "2.8",
          "suboptions": {}
        },
        "thin_volume_max_repo_size": {
          "aliases": [],
          "description": "This is the maximum amount the thin volume repository will be allowed to grow.\nOnly has significance when I(thin_volume_expansion_policy==\"automatic\").\nWhen the percentage I(thin_volume_repo_size) of I(thin_volume_max_repo_size) exceeds I(thin_volume_growth_alert_threshold) then a warning will be issued and the storage array will execute the I(thin_volume_expansion_policy) policy.\nExpansion operations when I(thin_volume_expansion_policy==\"automatic\") will increase the maximum repository size.\nThe default will be the same as size (in size_unit)",
          "type": "float",
          "required": false,
          "suboptions": {}
        },
        "thin_volume_repo_size": {
          "aliases": [],
          "description": "This value (in size_unit) sets the allocated space for the thin provisioned repository.\nInitial value must between or equal to 4gb and 256gb in increments of 4gb.\nDuring expansion operations the increase must be between or equal to 4gb and 256gb in increments of 4gb.\nThis option has no effect during expansion if I(thin_volume_expansion_policy==\"automatic\").\nGenerally speaking you should almost always use I(thin_volume_expansion_policy==\"automatic).",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Should https certificates be validated?",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "wait_for_initialization": {
          "aliases": [],
          "description": "Forces the module to wait for expansion operations to complete before continuing.",
          "default": "False",
          "type": "bool",
          "required": false,
          "version_added": "2.8",
          "suboptions": {}
        },
        "workload_name": {
          "aliases": [],
          "description": "Label for the workload defined by the metadata.\nWhen I(workload_name) and I(metadata) are specified then the defined workload will be added to the storage array.\nWhen I(workload_name) exists on the storage array but the metadata is different then the workload definition will be updated. (Changes will update all associated volumes!)\nExisting workloads can be retrieved using M(netapp_e_facts).",
          "type": "str",
          "required": false,
          "version_added": "2.8",
          "suboptions": {}
        },
        "write_cache_enable": {
          "aliases": [],
          "description": "Indicates whether write-back caching should be enabled for the volume.",
          "default": "True",
          "type": "bool",
          "required": false,
          "version_added": "2.8",
          "suboptions": {}
        }
      },
      "short_description": "NetApp E-Series manage storage volumes (standard and thin)",
      "version_added": "2.2"
    },
    "examples": "\n- name: Create simple volume with workload tags (volume meta data)\n  netapp_e_volume:\n    ssid: \"{{ ssid }}\"\n    api_url: \"{{ netapp_api_url }}\"\n    api_username: \"{{ netapp_api_username }}\"\n    api_password: \"{{ netapp_api_password }}\"\n    validate_certs: \"{{ netapp_api_validate_certs }}\"\n    state: present\n    name: volume\n    storage_pool_name: storage_pool\n    size: 300\n    size_unit: gb\n    workload_name: volume_tag\n    metadata:\n      key1: value1\n      key2: value2\n- name: Create a thin volume\n  netapp_e_volume:\n    ssid: \"{{ ssid }}\"\n    api_url: \"{{ netapp_api_url }}\"\n    api_username: \"{{ netapp_api_username }}\"\n    api_password: \"{{ netapp_api_password }}\"\n    validate_certs: \"{{ netapp_api_validate_certs }}\"\n    state: present\n    name: volume1\n    storage_pool_name: storage_pool\n    size: 131072\n    size_unit: gb\n    thin_provision: true\n    thin_volume_repo_size: 32\n    thin_volume_max_repo_size: 1024\n- name: Expand thin volume's virtual size\n  netapp_e_volume:\n    ssid: \"{{ ssid }}\"\n    api_url: \"{{ netapp_api_url }}\"\n    api_username: \"{{ netapp_api_username }}\"\n    api_password: \"{{ netapp_api_password }}\"\n    validate_certs: \"{{ netapp_api_validate_certs }}\"\n    state: present\n    name: volume1\n    storage_pool_name: storage_pool\n    size: 262144\n    size_unit: gb\n    thin_provision: true\n    thin_volume_repo_size: 32\n    thin_volume_max_repo_size: 1024\n- name: Expand thin volume's maximum repository size\n  netapp_e_volume:\n    ssid: \"{{ ssid }}\"\n    api_url: \"{{ netapp_api_url }}\"\n    api_username: \"{{ netapp_api_username }}\"\n    api_password: \"{{ netapp_api_password }}\"\n    validate_certs: \"{{ netapp_api_validate_certs }}\"\n    state: present\n    name: volume1\n    storage_pool_name: storage_pool\n    size: 262144\n    size_unit: gb\n    thin_provision: true\n    thin_volume_repo_size: 32\n    thin_volume_max_repo_size: 2048\n- name: Delete volume\n  netapp_e_volume:\n    ssid: \"{{ ssid }}\"\n    api_url: \"{{ netapp_api_url }}\"\n    api_username: \"{{ netapp_api_username }}\"\n    api_password: \"{{ netapp_api_password }}\"\n    validate_certs: \"{{ netapp_api_validate_certs }}\"\n    state: absent\n    name: volume\n"
  },
  "netapp_eseries.santricity.netapp_e_volume_copy": {
    "doc": {
      "description": "Create and delete snapshots images on volume groups for NetApp E-series storage arrays.",
      "has_action": false,
      "notes": "The E-Series Ansible modules require either an instance of the Web Services Proxy (WSP), to be available to manage the storage-system, or an E-Series storage-system that supports the Embedded Web Services API.\nEmbedded Web Services is currently available on the E2800, E5700, EF570, and newer hardware models.\nM(netapp_e_storage_system) may be utilized for configuring the systems managed by a WSP instance.",
      "options": {
        "api_password": {
          "aliases": [],
          "description": "The password to authenticate with the SANtricity WebServices Proxy or embedded REST API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_url": {
          "aliases": [],
          "description": "The url to the SANtricity WebServices Proxy or embedded REST API, for example C(https://prod-1.wahoo.acme.com/devmgr/v2).",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_username": {
          "aliases": [],
          "description": "The username to authenticate with the SANtricity WebServices Proxy or embedded REST API.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "copy_priority": {
          "aliases": [],
          "description": "Copy priority level",
          "default": "0",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "create_copy_pair_if_does_not_exist": {
          "aliases": [],
          "description": "Defines if a copy pair will be created if it does not exist.\nIf set to True destination_volume_id and source_volume_id are required.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "destination_volume_id": {
          "aliases": [],
          "description": "The id of the volume copy destination.\nIf used, must be paired with source_volume_id\nMutually exclusive with volume_copy_pair_id, and search_volume_id",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "onlineCopy": {
          "aliases": [],
          "description": "Whether copy should be online",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "search_volume_id": {
          "aliases": [],
          "description": "Searches for all valid potential target and source volumes that could be used in a copy_pair\nMutually exclusive with volume_copy_pair_id, destination_volume_id and source_volume_id",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "source_volume_id": {
          "aliases": [],
          "description": "The id of the volume copy source.\nIf used, must be paired with destination_volume_id\nMutually exclusive with volume_copy_pair_id, and search_volume_id",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ssid": {
          "aliases": [],
          "description": "Storage system identifier",
          "default": "1",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "start_stop_copy": {
          "aliases": [],
          "description": "starts a re-copy or stops a copy in progress\nNote: If you stop the initial file copy before it it done the copy pair will be destroyed\nRequires volume_copy_pair_id",
          "type": "str",
          "required": false,
          "choices": [
            "start",
            "stop"
          ],
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the specified volume copy pair should exist or not.",
          "type": "str",
          "required": true,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "targetWriteProtected": {
          "aliases": [],
          "description": "Whether target should be write protected",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Should https certificates be validated?",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "volume_copy_pair_id": {
          "aliases": [],
          "description": "The id of a given volume copy pair\nMutually exclusive with destination_volume_id, source_volume_id, and search_volume_id\nCan use to delete or check presence of volume pairs\nMust specify this or (destination_volume_id and source_volume_id)",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "NetApp E-Series create volume copy pairs",
      "version_added": "2.2"
    },
    "examples": "\n---\nmsg:\n    description: Success message\n    returned: success\n    type: str\n    sample: Json facts for the volume copy that was created.\n"
  }
}