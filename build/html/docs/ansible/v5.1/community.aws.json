{
  "community.aws.aws_acm": {
    "doc": {
      "description": "Import and delete certificates in Amazon Web Service's Certificate Manager (AWS ACM).\nThis module does not currently interact with AWS-provided certificates. It currently only manages certificates provided to AWS by the user.\n\nThe ACM API allows users to upload multiple certificates for the same domain name, and even multiple identical certificates. This module attempts to restrict such freedoms, to be idempotent, as per the Ansible philosophy. It does this through applying AWS resource \"Name\" tags to ACM certificates.\nWhen I(state=present), if there is one certificate in ACM with a C(Name) tag equal to the C(name_tag) parameter, and an identical body and chain, this task will succeed without effect.\n\nWhen I(state=present), if there is one certificate in ACM a I(Name) tag equal to the I(name_tag) parameter, and a different body, this task will overwrite that certificate.\n\nWhen I(state=present), if there are multiple certificates in ACM with a I(Name) tag equal to the I(name_tag) parameter, this task will fail.\n\nWhen I(state=absent) and I(certificate_arn) is defined, this module will delete the ACM resource with that ARN if it exists in this region, and succeed without effect if it doesn't exist.\n\nWhen I(state=absent) and I(domain_name) is defined, this module will delete all ACM resources in this AWS region with a corresponding domain name. If there are none, it will succeed without effect.\n\nWhen I(state=absent) and I(certificate_arn) is not defined, and I(domain_name) is not defined, this module will delete all ACM resources in this AWS region with a corresponding I(Name) tag. If there are none, it will succeed without effect.\n\nNote that this may not work properly with keys of size 4096 bits, due to a limitation of the ACM API.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "certificate": {
          "aliases": [],
          "description": "The body of the PEM encoded public certificate.\nRequired when I(state) is not C(absent).\nIf your certificate is in a file, use C(lookup('file', 'path/to/cert.pem')).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "certificate_arn": {
          "aliases": [
            "arn"
          ],
          "description": "The ARN of a certificate in ACM to delete\nIgnored when I(state=present).\nIf I(state=absent), you must provide one of I(certificate_arn), I(domain_name) or I(name_tag).\nIf I(state=absent) and no resource exists with this ARN in this region, the task will succeed with no effect.\n\nIf I(state=absent) and the corresponding resource exists in a different region, this task may report success without deleting that resource.\n",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "certificate_chain": {
          "aliases": [],
          "description": "The body of the PEM encoded chain for your certificate.\nIf your certificate chain is in a file, use C(lookup('file', 'path/to/chain.pem')).\nIgnored when I(state=absent)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "domain_name": {
          "aliases": [
            "domain"
          ],
          "description": "The domain name of the certificate.\nIf I(state=absent) and I(domain_name) is specified, this task will delete all ACM certificates with this domain.\n\nExactly one of I(domain_name), I(name_tag)  and I(certificate_arn) must be provided.\nIf I(state=present) this must not be specified. (Since the domain name is encoded within the public certificate's body.)\n",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name_tag": {
          "aliases": [
            "name"
          ],
          "description": "The unique identifier for tagging resources using AWS tags, with key I(Name).\nThis can be any set of characters accepted by AWS for tag values.\nThis is to ensure Ansible can treat certificates idempotently, even though the ACM API allows duplicate certificates.\n\nIf I(state=preset), this must be specified.\nIf I(state=absent), you must provide exactly one of I(certificate_arn), I(domain_name) or I(name_tag).\n",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "private_key": {
          "aliases": [],
          "description": "The body of the PEM encoded private key.\nRequired when I(state=present).\nIgnored when I(state=absent).\nIf your private key is in a file, use C(lookup('file', 'path/to/key.pem')).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "If I(state=present), the specified public certificate and private key will be uploaded, with I(Name) tag equal to I(name_tag).\n\nIf I(state=absent), any certificates in this region with a corresponding I(domain_name), I(name_tag) or I(certificate_arn) will be deleted.\n",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Upload and delete certificates in the AWS Certificate Manager service",
      "version_added": "1.0.0"
    },
    "examples": "\n\n- name: upload a self-signed certificate\n  community.aws.aws_acm:\n    certificate: \"{{ lookup('file', 'cert.pem' ) }}\"\n    privateKey: \"{{ lookup('file', 'key.pem' ) }}\"\n    name_tag: my_cert # to be applied through an AWS tag as  \"Name\":\"my_cert\"\n    region: ap-southeast-2 # AWS region\n\n- name: create/update a certificate with a chain\n  community.aws.aws_acm:\n    certificate: \"{{ lookup('file', 'cert.pem' ) }}\"\n    privateKey: \"{{ lookup('file', 'key.pem' ) }}\"\n    name_tag: my_cert\n    certificate_chain: \"{{ lookup('file', 'chain.pem' ) }}\"\n    state: present\n    region: ap-southeast-2\n  register: cert_create\n\n- name: print ARN of cert we just created\n  ansible.builtin.debug:\n    var: cert_create.certificate.arn\n\n- name: delete the cert we just created\n  community.aws.aws_acm:\n    name_tag: my_cert\n    state: absent\n    region: ap-southeast-2\n\n- name: delete a certificate with a particular ARN\n  community.aws.aws_acm:\n    certificate_arn: \"arn:aws:acm:ap-southeast-2:123456789012:certificate/01234567-abcd-abcd-abcd-012345678901\"\n    state: absent\n    region: ap-southeast-2\n\n- name: delete all certificates with a particular domain name\n  community.aws.aws_acm:\n    domain_name: acm.ansible.com\n    state: absent\n    region: ap-southeast-2\n\n"
  },
  "community.aws.aws_acm_facts": {
    "doc": {
      "description": "Retrieve information for ACM certificates\nThis module was called C(aws_acm_facts) before Ansible 2.9. The usage did not change.\nNote that this will not return information about uploaded keys of size 4096 bits, due to a limitation of the ACM API.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "certificate_arn": {
          "aliases": [
            "arn"
          ],
          "description": "If provided, the results will be filtered to show only the certificate with this ARN.\nIf no certificate with this ARN exists, this task will fail.\nIf a certificate with this ARN exists in a different region, this task will fail",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "domain_name": {
          "aliases": [
            "name"
          ],
          "description": "The domain name of an ACM certificate to limit the search to",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "statuses": {
          "aliases": [],
          "description": "Status to filter the certificate results",
          "type": "list",
          "required": false,
          "choices": [
            "PENDING_VALIDATION",
            "ISSUED",
            "INACTIVE",
            "EXPIRED",
            "VALIDATION_TIMED_OUT",
            "REVOKED",
            "FAILED"
          ],
          "elements": "str",
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Filter results to show only certificates with tags that match all the tags specified here.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Retrieve certificate information from AWS Certificate Manager service",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: obtain all ACM certificates\n  community.aws.aws_acm_info:\n\n- name: obtain all information for a single ACM certificate\n  community.aws.aws_acm_info:\n    domain_name: \"*.example_com\"\n\n- name: obtain all certificates pending validation\n  community.aws.aws_acm_info:\n    statuses:\n    - PENDING_VALIDATION\n\n- name: obtain all certificates with tag Name=foo and myTag=bar\n  community.aws.aws_acm_info:\n    tags:\n      Name: foo\n      myTag: bar\n\n\n# The output is still a list of certificates, just one item long.\n- name: obtain information about a certificate with a particular ARN\n  community.aws.aws_acm_info:\n    certificate_arn:  \"arn:aws:acm:ap-southeast-2:123456789876:certificate/abcdeabc-abcd-1234-4321-abcdeabcde12\"\n\n"
  },
  "community.aws.aws_acm_info": {
    "doc": {
      "description": "Retrieve information for ACM certificates\nThis module was called C(aws_acm_facts) before Ansible 2.9. The usage did not change.\nNote that this will not return information about uploaded keys of size 4096 bits, due to a limitation of the ACM API.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "certificate_arn": {
          "aliases": [
            "arn"
          ],
          "description": "If provided, the results will be filtered to show only the certificate with this ARN.\nIf no certificate with this ARN exists, this task will fail.\nIf a certificate with this ARN exists in a different region, this task will fail",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "domain_name": {
          "aliases": [
            "name"
          ],
          "description": "The domain name of an ACM certificate to limit the search to",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "statuses": {
          "aliases": [],
          "description": "Status to filter the certificate results",
          "type": "list",
          "required": false,
          "choices": [
            "PENDING_VALIDATION",
            "ISSUED",
            "INACTIVE",
            "EXPIRED",
            "VALIDATION_TIMED_OUT",
            "REVOKED",
            "FAILED"
          ],
          "elements": "str",
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Filter results to show only certificates with tags that match all the tags specified here.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Retrieve certificate information from AWS Certificate Manager service",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: obtain all ACM certificates\n  community.aws.aws_acm_info:\n\n- name: obtain all information for a single ACM certificate\n  community.aws.aws_acm_info:\n    domain_name: \"*.example_com\"\n\n- name: obtain all certificates pending validation\n  community.aws.aws_acm_info:\n    statuses:\n    - PENDING_VALIDATION\n\n- name: obtain all certificates with tag Name=foo and myTag=bar\n  community.aws.aws_acm_info:\n    tags:\n      Name: foo\n      myTag: bar\n\n\n# The output is still a list of certificates, just one item long.\n- name: obtain information about a certificate with a particular ARN\n  community.aws.aws_acm_info:\n    certificate_arn:  \"arn:aws:acm:ap-southeast-2:123456789876:certificate/abcdeabc-abcd-1234-4321-abcdeabcde12\"\n\n"
  },
  "community.aws.aws_api_gateway": {
    "doc": {
      "description": "Allows for the management of API Gateway APIs.\nNormally you should give the api_id since there is no other stable guaranteed unique identifier for the API.  If you do not give api_id then a new API will be created each time this is run.\nswagger_file and swagger_text are passed directly on to AWS transparently whilst swagger_dict is an ansible dict which is converted to JSON before the API definitions are uploaded.",
      "has_action": false,
      "notes": "A future version of this module will probably use tags or another ID so that an API can be created only once.\nAs an early work around an intermediate version will probably do the same using a tag embedded in the API name.\nIf parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "api_id": {
          "aliases": [],
          "description": "The ID of the API you want to manage.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cache_enabled": {
          "aliases": [],
          "description": "Enable API GW caching of backend responses.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "cache_size": {
          "aliases": [],
          "description": "Size in GB of the API GW cache, becomes effective when cache_enabled is true.",
          "default": "0.5",
          "type": "str",
          "required": false,
          "choices": [
            "0.5",
            "1.6",
            "6.1",
            "13.5",
            "28.4",
            "58.2",
            "118",
            "237"
          ],
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "deploy_desc": {
          "aliases": [],
          "description": "Description of the deployment.\nRecorded and visible in the AWS console.",
          "default": "Automatic deployment by Ansible.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "endpoint_type": {
          "aliases": [],
          "description": "Type of endpoint configuration.\nUse C(EDGE) for an edge optimized API endpoint, C(REGIONAL) for just a regional deploy or C(PRIVATE) for a private API.\nThis flag will only be used when creating a new API Gateway setup, not for updates.",
          "default": "EDGE",
          "type": "str",
          "required": false,
          "choices": [
            "EDGE",
            "REGIONAL",
            "PRIVATE"
          ],
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "stage": {
          "aliases": [],
          "description": "The name of the stage the API should be deployed to.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "stage_canary_settings": {
          "aliases": [],
          "description": "Canary settings for the deployment of the stage.\nDict with following settings:\nC(percentTraffic): The percent (0-100) of traffic diverted to a canary deployment.\nC(deploymentId): The ID of the canary deployment.\nC(stageVariableOverrides): Stage variables overridden for a canary release deployment.\nC(useStageCache): A Boolean flag to indicate whether the canary deployment uses the stage cache or not.\nSee docs U(https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/apigateway.html#APIGateway.Client.create_stage)",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "stage_variables": {
          "aliases": [],
          "description": "ENV variables for the stage. Define a dict of key values pairs for variables.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Create or delete API Gateway.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "swagger_dict": {
          "aliases": [],
          "description": "Swagger definitions API ansible dictionary which will be converted to JSON and uploaded.",
          "type": "json",
          "required": false,
          "suboptions": {}
        },
        "swagger_file": {
          "aliases": [
            "src",
            "api_file"
          ],
          "description": "JSON or YAML file containing swagger definitions for API. Exactly one of I(swagger_file), I(swagger_text) or I(swagger_dict) must be present.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "swagger_text": {
          "aliases": [],
          "description": "Swagger definitions for API in JSON or YAML as a string direct from playbook.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tracing_enabled": {
          "aliases": [],
          "description": "Specifies whether active tracing with X-ray is enabled for the API GW stage.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Manage AWS API Gateway APIs",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Setup AWS API Gateway setup on AWS and deploy API definition\n  community.aws.aws_api_gateway:\n    swagger_file: my_api.yml\n    stage: production\n    cache_enabled: true\n    cache_size: '1.6'\n    tracing_enabled: true\n    endpoint_type: EDGE\n    state: present\n\n- name: Update API definition to deploy new version\n  community.aws.aws_api_gateway:\n    api_id: 'abc123321cba'\n    swagger_file: my_api.yml\n    deploy_desc: Make auth fix available.\n    cache_enabled: true\n    cache_size: '1.6'\n    endpoint_type: EDGE\n    state: present\n\n- name: Update API definitions and settings and deploy as canary\n  community.aws.aws_api_gateway:\n    api_id: 'abc123321cba'\n    swagger_file: my_api.yml\n    cache_enabled: true\n    cache_size: '6.1'\n    canary_settings: { percentTraffic: 50.0, deploymentId: '123', useStageCache: True }\n    state: present\n"
  },
  "community.aws.aws_application_scaling_policy": {
    "doc": {
      "description": "Creates, updates or removes a Scaling Policy.",
      "has_action": false,
      "notes": "for details of the parameters and returns see U(http://boto3.readthedocs.io/en/latest/reference/services/application-autoscaling.html#ApplicationAutoScaling.Client.put_scaling_policy)\nIf parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "maximum_tasks": {
          "aliases": [],
          "description": "The maximum value to scale to in response to a scale out event. This parameter is required if you are creating a first new policy for the specified service.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "minimum_tasks": {
          "aliases": [],
          "description": "The minimum value to scale to in response to a scale in event. This parameter is required if you are creating a first new policy for the specified service.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "override_task_capacity": {
          "aliases": [],
          "description": "Whether or not to override values of minimum and/or maximum tasks if it's already set.\nDefaults to C(false).",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "policy_name": {
          "aliases": [],
          "description": "The name of the scaling policy.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "policy_type": {
          "aliases": [],
          "description": "The policy type.",
          "type": "str",
          "required": true,
          "choices": [
            "StepScaling",
            "TargetTrackingScaling"
          ],
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_id": {
          "aliases": [],
          "description": "The identifier of the resource associated with the scalable target.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "scalable_dimension": {
          "aliases": [],
          "description": "The scalable dimension associated with the scalable target.",
          "type": "str",
          "required": true,
          "choices": [
            "ecs:service:DesiredCount",
            "ec2:spot-fleet-request:TargetCapacity",
            "elasticmapreduce:instancegroup:InstanceCount",
            "appstream:fleet:DesiredCapacity",
            "dynamodb:table:ReadCapacityUnits",
            "dynamodb:table:WriteCapacityUnits",
            "dynamodb:index:ReadCapacityUnits",
            "dynamodb:index:WriteCapacityUnits"
          ],
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_namespace": {
          "aliases": [],
          "description": "The namespace of the AWS service.",
          "type": "str",
          "required": true,
          "choices": [
            "ecs",
            "elasticmapreduce",
            "ec2",
            "appstream",
            "dynamodb"
          ],
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether a policy should be C(present) or C(absent).",
          "type": "str",
          "required": true,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "step_scaling_policy_configuration": {
          "aliases": [],
          "description": "A step scaling policy. This parameter is required if you are creating a policy and I(policy_type=StepScaling).",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "target_tracking_scaling_policy_configuration": {
          "aliases": [],
          "description": "A target tracking policy. This parameter is required if you are creating a new policy and I(policy_type=TargetTrackingScaling).\nFull documentation of the suboptions can be found in the API documentation:\nU(https://docs.aws.amazon.com/autoscaling/application/APIReference/API_TargetTrackingScalingPolicyConfiguration.html)",
          "type": "dict",
          "required": false,
          "suboptions": {
            "CustomizedMetricSpecification": {
              "aliases": [],
              "description": "The metric to use if using a customized metric.",
              "type": "dict",
              "required": false,
              "suboptions": {}
            },
            "DisableScaleIn": {
              "aliases": [],
              "description": "Whether scaling-in should be disabled.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "PredefinedMetricSpecification": {
              "aliases": [],
              "description": "The metric to use if using a predefined metric.",
              "type": "dict",
              "required": false,
              "suboptions": {}
            },
            "ScaleInCooldown": {
              "aliases": [],
              "description": "The time (in seconds) to wait after scaling-in before another scaling action can occur.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "ScaleOutCooldown": {
              "aliases": [],
              "description": "The time (in seconds) to wait after scaling-out before another scaling action can occur.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "TargetValue": {
              "aliases": [],
              "description": "The target value for the metric.",
              "type": "float",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Manage Application Auto Scaling Scaling Policies",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n# Create step scaling policy for ECS Service\n- name: scaling_policy\n  community.aws.aws_application_scaling_policy:\n    state: present\n    policy_name: test_policy\n    service_namespace: ecs\n    resource_id: service/poc-pricing/test-as\n    scalable_dimension: ecs:service:DesiredCount\n    policy_type: StepScaling\n    minimum_tasks: 1\n    maximum_tasks: 6\n    step_scaling_policy_configuration:\n      AdjustmentType: ChangeInCapacity\n      StepAdjustments:\n        - MetricIntervalUpperBound: 123\n          ScalingAdjustment: 2\n        - MetricIntervalLowerBound: 123\n          ScalingAdjustment: -2\n      Cooldown: 123\n      MetricAggregationType: Average\n\n# Create target tracking scaling policy for ECS Service\n- name: scaling_policy\n  community.aws.aws_application_scaling_policy:\n    state: present\n    policy_name: test_policy\n    service_namespace: ecs\n    resource_id: service/poc-pricing/test-as\n    scalable_dimension: ecs:service:DesiredCount\n    policy_type: TargetTrackingScaling\n    minimum_tasks: 1\n    maximum_tasks: 6\n    target_tracking_scaling_policy_configuration:\n      TargetValue: 60\n      PredefinedMetricSpecification:\n        PredefinedMetricType: ECSServiceAverageCPUUtilization\n      ScaleOutCooldown: 60\n      ScaleInCooldown: 60\n\n# Remove scalable target for ECS Service\n- name: scaling_policy\n  community.aws.aws_application_scaling_policy:\n    state: absent\n    policy_name: test_policy\n    policy_type: StepScaling\n    service_namespace: ecs\n    resource_id: service/cluster-name/service-name\n    scalable_dimension: ecs:service:DesiredCount\n"
  },
  "community.aws.aws_batch_compute_environment": {
    "doc": {
      "description": "This module allows the management of AWS Batch Compute Environments.\nIt is idempotent and supports \"Check\" mode.\nUse module M(community.aws.aws_batch_compute_environment) to manage the compute environment, M(community.aws.aws_batch_job_queue) to manage job queues, M(community.aws.aws_batch_job_definition) to manage job definitions.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "bid_percentage": {
          "aliases": [],
          "description": "The minimum percentage that a Spot Instance price must be when compared with the On-Demand price for that instance type before instances are launched.\nFor example, if your bid percentage is 20%, then the Spot price must be below 20% of the current On-Demand price for that EC2 instance.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "compute_environment_name": {
          "aliases": [],
          "description": "The name for your compute environment.\nUp to 128 letters (uppercase and lowercase), numbers, and underscores are allowed.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "compute_environment_state": {
          "aliases": [],
          "description": "The state of the compute environment.\nIf the state is C(ENABLED), then the compute environment accepts jobs from a queue and can scale out automatically based on queues.",
          "default": "ENABLED",
          "type": "str",
          "required": false,
          "choices": [
            "ENABLED",
            "DISABLED"
          ],
          "suboptions": {}
        },
        "compute_resource_type": {
          "aliases": [],
          "description": "The type of compute resource.",
          "type": "str",
          "required": true,
          "choices": [
            "EC2",
            "SPOT"
          ],
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "desiredv_cpus": {
          "aliases": [],
          "description": "The desired number of EC2 vCPUS in the compute environment.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "ec2_key_pair": {
          "aliases": [],
          "description": "The EC2 key pair that is used for instances launched in the compute environment.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "image_id": {
          "aliases": [],
          "description": "The Amazon Machine Image (AMI) ID used for instances launched in the compute environment.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "instance_role": {
          "aliases": [],
          "description": "The Amazon ECS instance role applied to Amazon EC2 instances in a compute environment.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "instance_types": {
          "aliases": [],
          "description": "The instance types that may be launched.",
          "type": "list",
          "required": true,
          "elements": "str",
          "suboptions": {}
        },
        "maxv_cpus": {
          "aliases": [],
          "description": "The maximum number of EC2 vCPUs that an environment can reach.",
          "type": "int",
          "required": true,
          "suboptions": {}
        },
        "minv_cpus": {
          "aliases": [],
          "description": "The minimum number of EC2 vCPUs that an environment should maintain.",
          "type": "int",
          "required": true,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_group_ids": {
          "aliases": [],
          "description": "The EC2 security groups that are associated with instances launched in the compute environment.",
          "type": "list",
          "required": true,
          "elements": "str",
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_role": {
          "aliases": [],
          "description": "The full Amazon Resource Name (ARN) of the IAM role that allows AWS Batch to make calls to other AWS services on your behalf.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "spot_iam_fleet_role": {
          "aliases": [],
          "description": "The Amazon Resource Name (ARN) of the Amazon EC2 Spot Fleet IAM role applied to a SPOT compute environment.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Describes the desired state.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "subnets": {
          "aliases": [],
          "description": "The VPC subnets into which the compute resources are launched.",
          "type": "list",
          "required": true,
          "elements": "str",
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Key-value pair tags to be applied to resources that are launched in the compute environment.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "type": {
          "aliases": [],
          "description": "The type of the compute environment.",
          "type": "str",
          "required": true,
          "choices": [
            "MANAGED",
            "UNMANAGED"
          ],
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Manage AWS Batch Compute Environments",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: My Batch Compute Environment\n  community.aws.aws_batch_compute_environment:\n    compute_environment_name: computeEnvironmentName\n    state: present\n    region: us-east-1\n    compute_environment_state: ENABLED\n    type: MANAGED\n    compute_resource_type: EC2\n    minv_cpus: 0\n    maxv_cpus: 2\n    desiredv_cpus: 1\n    instance_types:\n      - optimal\n    subnets:\n      - my-subnet1\n      - my-subnet2\n    security_group_ids:\n      - my-sg1\n      - my-sg2\n    instance_role: arn:aws:iam::<account>:instance-profile/<role>\n    tags:\n      tag1: value1\n      tag2: value2\n    service_role: arn:aws:iam::<account>:role/service-role/<role>\n  register: aws_batch_compute_environment_action\n\n- name: show results\n  ansible.builtin.debug:\n    var: aws_batch_compute_environment_action\n"
  },
  "community.aws.aws_batch_job_definition": {
    "doc": {
      "description": "This module allows the management of AWS Batch Job Definitions.\nIt is idempotent and supports \"Check\" mode.\nUse module M(community.aws.aws_batch_compute_environment) to manage the compute environment, M(community.aws.aws_batch_job_queue) to manage job queues, M(community.aws.aws_batch_job_definition) to manage job definitions.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "attempts": {
          "aliases": [],
          "description": "Retry strategy - The number of times to move a job to the RUNNABLE status. You may specify between 1 and 10 attempts. If attempts is greater than one, the job is retried if it fails until it has moved to RUNNABLE that many times.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "command": {
          "aliases": [],
          "description": "The command that is passed to the container. This parameter maps to Cmd in the Create a container section of the Docker Remote API and the COMMAND parameter to docker run. For more information, see U(https://docs.docker.com/engine/reference/builder/#cmd).",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "environment": {
          "aliases": [],
          "description": "The environment variables to pass to a container. This parameter maps to Env in the Create a container section of the Docker Remote API and the --env option to docker run.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "name": {
              "aliases": [],
              "description": "The name of the key value pair. For environment variables, this is the name of the environment variable.",
              "required": false,
              "suboptions": {}
            },
            "value": {
              "aliases": [],
              "description": "The value of the key value pair. For environment variables, this is the value of the environment variable.",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "image": {
          "aliases": [],
          "description": "The image used to start a container. This string is passed directly to the Docker daemon. Images in the Docker Hub registry are available by default. Other repositories are specified with `` repository-url /image <colon>tag ``. Up to 255 letters (uppercase and lowercase), numbers, hyphens, underscores, colons, periods, forward slashes, and number signs are allowed. This parameter maps to Image in the Create a container section of the Docker Remote API and the IMAGE parameter of docker run.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "job_definition_arn": {
          "aliases": [],
          "description": "The ARN for the job definition.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "job_definition_name": {
          "aliases": [],
          "description": "The name for the job definition.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "job_role_arn": {
          "aliases": [],
          "description": "The Amazon Resource Name (ARN) of the IAM role that the container can assume for AWS permissions.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "memory": {
          "aliases": [],
          "description": "The hard limit (in MiB) of memory to present to the container. If your container attempts to exceed the memory specified here, the container is killed. This parameter maps to Memory in the Create a container section of the Docker Remote API and the --memory option to docker run.",
          "type": "int",
          "required": true,
          "suboptions": {}
        },
        "mount_points": {
          "aliases": [],
          "description": "The mount points for data volumes in your container. This parameter maps to Volumes in the Create a container section of the Docker Remote API and the --volume option to docker run.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "containerPath": {
              "aliases": [],
              "description": "The path on the container at which to mount the host volume.",
              "required": false,
              "suboptions": {}
            },
            "readOnly": {
              "aliases": [],
              "description": "If this value is true , the container has read-only access to the volume; otherwise, the container can write to the volume. The default value is C(false).",
              "required": false,
              "suboptions": {}
            },
            "sourceVolume": {
              "aliases": [],
              "description": "The name of the volume to mount.",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "parameters": {
          "aliases": [],
          "description": "Default parameter substitution placeholders to set in the job definition. Parameters are specified as a key-value pair mapping. Parameters in a SubmitJob request override any corresponding parameter defaults from the job definition.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "privileged": {
          "aliases": [],
          "description": "When this parameter is true, the container is given elevated privileges on the host container instance (similar to the root user). This parameter maps to Privileged in the Create a container section of the Docker Remote API and the --privileged option to docker run.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "readonly_root_filesystem": {
          "aliases": [],
          "description": "When this parameter is true, the container is given read-only access to its root file system. This parameter maps to ReadonlyRootfs in the Create a container section of the Docker Remote API and the --read-only option to docker run.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Describes the desired state.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "type": {
          "aliases": [],
          "description": "The type of job definition.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "ulimits": {
          "aliases": [],
          "description": "A list of ulimits to set in the container. This parameter maps to Ulimits in the Create a container section of the Docker Remote API and the --ulimit option to docker run.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "hardLimit": {
              "aliases": [],
              "description": "The hard limit for the ulimit type.",
              "required": false,
              "suboptions": {}
            },
            "name": {
              "aliases": [],
              "description": "The type of the ulimit.",
              "required": false,
              "suboptions": {}
            },
            "softLimit": {
              "aliases": [],
              "description": "The soft limit for the ulimit type.",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "user": {
          "aliases": [],
          "description": "The user name to use inside the container. This parameter maps to User in the Create a container section of the Docker Remote API and the --user option to docker run.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "vcpus": {
          "aliases": [],
          "description": "The number of vCPUs reserved for the container. This parameter maps to CpuShares in the Create a container section of the Docker Remote API and the --cpu-shares option to docker run. Each vCPU is equivalent to 1,024 CPU shares.",
          "type": "int",
          "required": true,
          "suboptions": {}
        },
        "volumes": {
          "aliases": [],
          "description": "A list of data volumes used in a job.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "host": {
              "aliases": [],
              "description": "The contents of the host parameter determine whether your data volume persists on the host container instance and where it is stored. If the host parameter is empty, then the Docker daemon assigns a host path for your data volume, but the data is not guaranteed to persist after the containers associated with it stop running. This is a dictionary with one property, sourcePath - The path on the host container instance that is presented to the container. If this parameter is empty,then the Docker daemon has assigned a host path for you. If the host parameter contains a sourcePath file location, then the data volume persists at the specified location on the host container instance until you delete it manually. If the sourcePath value does not exist on the host container instance, the Docker daemon creates it. If the location does exist, the contents of the source path folder are exported.",
              "required": false,
              "suboptions": {}
            },
            "name": {
              "aliases": [],
              "description": "The name of the volume. Up to 255 letters (uppercase and lowercase), numbers, hyphens, and underscores are allowed. This name is referenced in the sourceVolume parameter of container definition mountPoints.",
              "required": false,
              "suboptions": {}
            }
          }
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Manage AWS Batch Job Definitions",
      "version_added": "1.0.0"
    },
    "examples": "\n---\n- hosts: localhost\n  gather_facts: no\n  vars:\n    state: present\n  tasks:\n- name: My Batch Job Definition\n  community.aws.aws_batch_job_definition:\n    job_definition_name: My Batch Job Definition\n    state: present\n    type: container\n    parameters:\n      Param1: Val1\n      Param2: Val2\n    image: <Docker Image URL>\n    vcpus: 1\n    memory: 512\n    command:\n      - python\n      - run_my_script.py\n      - arg1\n    job_role_arn: <Job Role ARN>\n    attempts: 3\n  register: job_definition_create_result\n\n- name: show results\n  ansible.builtin.debug: var=job_definition_create_result\n"
  },
  "community.aws.aws_batch_job_queue": {
    "doc": {
      "description": "This module allows the management of AWS Batch Job Queues.\nIt is idempotent and supports \"Check\" mode.\nUse module M(community.aws.aws_batch_compute_environment) to manage the compute environment, M(community.aws.aws_batch_job_queue) to manage job queues, M(community.aws.aws_batch_job_definition) to manage job definitions.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "compute_environment_order": {
          "aliases": [],
          "description": "The set of compute environments mapped to a job queue and their order relative to each other. The job scheduler uses this parameter to determine which compute environment should execute a given job. Compute environments must be in the VALID state before you can associate them with a job queue. You can associate up to 3 compute environments with a job queue.",
          "type": "list",
          "required": true,
          "elements": "dict",
          "suboptions": {
            "compute_environment": {
              "aliases": [],
              "description": "The name of the compute environment.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "order": {
              "aliases": [],
              "description": "The relative priority of the environment.",
              "type": "int",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "job_queue_name": {
          "aliases": [],
          "description": "The name for the job queue",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "job_queue_state": {
          "aliases": [],
          "description": "The state of the job queue. If the job queue state is ENABLED, it is able to accept jobs.",
          "default": "ENABLED",
          "type": "str",
          "required": false,
          "choices": [
            "ENABLED",
            "DISABLED"
          ],
          "suboptions": {}
        },
        "priority": {
          "aliases": [],
          "description": "The priority of the job queue. Job queues with a higher priority (or a lower integer value for the priority parameter) are evaluated first when associated with same compute environment. Priority is determined in ascending order, for example, a job queue with a priority value of 1 is given scheduling preference over a job queue with a priority value of 10.",
          "type": "int",
          "required": true,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Describes the desired state.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Manage AWS Batch Job Queues",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: My Batch Job Queue\n  community.aws.aws_batch_job_queue:\n    job_queue_name: jobQueueName\n    state: present\n    region: us-east-1\n    job_queue_state: ENABLED\n    priority: 1\n    compute_environment_order:\n    - order: 1\n      compute_environment: my_compute_env1\n    - order: 2\n      compute_environment: my_compute_env2\n  register: batch_job_queue_action\n\n- name: show results\n  ansible.builtin.debug:\n    var: batch_job_queue_action\n"
  },
  "community.aws.aws_codebuild": {
    "doc": {
      "description": "Create or delete a CodeBuild projects on AWS, used for building code artifacts from source code.",
      "has_action": false,
      "notes": "For details of the parameters and returns see U(http://boto3.readthedocs.io/en/latest/reference/services/codebuild.html).\nIf parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "artifacts": {
          "aliases": [],
          "description": "Information about the build output artifacts for the build project.",
          "type": "dict",
          "required": true,
          "suboptions": {
            "location": {
              "aliases": [],
              "description": "Information about the build output artifact location. When choosing type S3, set the bucket name here.",
              "required": false,
              "suboptions": {}
            },
            "name": {
              "aliases": [],
              "description": "Along with path and namespace_type, the pattern that AWS CodeBuild will use to name and store the output artifact.",
              "required": false,
              "suboptions": {}
            },
            "namespace_type": {
              "aliases": [],
              "description": "Along with path and name, the pattern that AWS CodeBuild will use to determine the name and location to store the output artifacts.\nAccepts C(BUILD_ID) and C(NONE).\nSee docs here: U(http://boto3.readthedocs.io/en/latest/reference/services/codebuild.html#CodeBuild.Client.create_project).",
              "required": false,
              "suboptions": {}
            },
            "packaging": {
              "aliases": [],
              "description": "The type of build output artifact to create on S3, can be NONE for creating a folder or ZIP for a ZIP file.",
              "required": false,
              "suboptions": {}
            },
            "path": {
              "aliases": [],
              "description": "Along with namespace_type and name, the pattern that AWS CodeBuild will use to name and store the output artifacts.\nUsed for path in S3 bucket when type is C(S3).",
              "required": false,
              "suboptions": {}
            },
            "type": {
              "aliases": [],
              "description": "The type of build output for artifacts. Can be one of the following: C(CODEPIPELINE), C(NO_ARTIFACTS), C(S3).",
              "required": true,
              "suboptions": {}
            }
          }
        },
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cache": {
          "aliases": [],
          "description": "Caching params to speed up following builds.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "location": {
              "aliases": [],
              "description": "Caching location on S3.",
              "required": true,
              "suboptions": {}
            },
            "type": {
              "aliases": [],
              "description": "Cache type. Can be C(NO_CACHE) or C(S3).",
              "required": true,
              "suboptions": {}
            }
          }
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "Descriptive text of the CodeBuild project.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "encryption_key": {
          "aliases": [],
          "description": "The AWS Key Management Service (AWS KMS) customer master key (CMK) to be used for encrypting the build output artifacts.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "environment": {
          "aliases": [],
          "description": "Information about the build environment for the build project.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "compute_type": {
              "aliases": [],
              "description": "Information about the compute resources the build project will use.\nAvailable values include: C(BUILD_GENERAL1_SMALL), C(BUILD_GENERAL1_MEDIUM), C(BUILD_GENERAL1_LARGE).",
              "required": true,
              "suboptions": {}
            },
            "environment_variables": {
              "aliases": [],
              "description": "A set of environment variables to make available to builds for the build project. List of dictionaries with name and value fields.\nExample: { name: 'MY_ENV_VARIABLE', value: 'test' }",
              "required": false,
              "suboptions": {}
            },
            "image": {
              "aliases": [],
              "description": "The ID of the Docker image to use for this build project.",
              "required": true,
              "suboptions": {}
            },
            "privileged_mode": {
              "aliases": [],
              "description": "Enables running the Docker daemon inside a Docker container. Set to true only if the build project is be used to build Docker images.",
              "required": false,
              "suboptions": {}
            },
            "type": {
              "aliases": [],
              "description": "The type of build environment to use for the project. Usually C(LINUX_CONTAINER).",
              "required": true,
              "suboptions": {}
            }
          }
        },
        "name": {
          "aliases": [],
          "description": "Name of the CodeBuild project.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_role": {
          "aliases": [],
          "description": "The ARN of the AWS IAM role that enables AWS CodeBuild to interact with dependent AWS services on behalf of the AWS account.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "source": {
          "aliases": [],
          "description": "Configure service and location for the build input source.",
          "type": "dict",
          "required": true,
          "suboptions": {
            "buildspec": {
              "aliases": [],
              "description": "The build spec declaration to use for the builds in this build project. Leave empty if part of the code project.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "git_clone_depth": {
              "aliases": [],
              "description": "When using git you can specify the clone depth as an integer here.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "insecure_ssl": {
              "aliases": [],
              "description": "Enable this flag to ignore SSL warnings while connecting to the project source code.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "location": {
              "aliases": [],
              "description": "Information about the location of the source code to be built. For type CODEPIPELINE location should not be specified.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "type": {
              "aliases": [],
              "description": "The type of the source. Allows one of these: C(CODECOMMIT), C(CODEPIPELINE), C(GITHUB), C(S3), C(BITBUCKET), C(GITHUB_ENTERPRISE).",
              "type": "str",
              "required": true,
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "Create or remove code build project.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "A set of tags for the build project.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "key": {
              "aliases": [],
              "description": "The name of the Tag.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "value": {
              "aliases": [],
              "description": "The value of the Tag.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "timeout_in_minutes": {
          "aliases": [],
          "description": "How long CodeBuild should wait until timing out any build that has not been marked as completed.",
          "default": "60",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "vpc_config": {
          "aliases": [],
          "description": "The VPC config enables AWS CodeBuild to access resources in an Amazon VPC.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Create or delete an AWS CodeBuild project",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n- community.aws.aws_codebuild:\n    name: my_project\n    description: My nice little project\n    service_role: \"arn:aws:iam::123123:role/service-role/code-build-service-role\"\n    source:\n        # Possible values: BITBUCKET, CODECOMMIT, CODEPIPELINE, GITHUB, S3\n        type: CODEPIPELINE\n        buildspec: ''\n    artifacts:\n        namespaceType: NONE\n        packaging: NONE\n        type: CODEPIPELINE\n        name: my_project\n    environment:\n        computeType: BUILD_GENERAL1_SMALL\n        privilegedMode: \"true\"\n        image: \"aws/codebuild/docker:17.09.0\"\n        type: LINUX_CONTAINER\n        environmentVariables:\n            - { name: 'PROFILE', value: 'staging' }\n    encryption_key: \"arn:aws:kms:us-east-1:123123:alias/aws/s3\"\n    region: us-east-1\n    state: present\n"
  },
  "community.aws.aws_codecommit": {
    "doc": {
      "description": "Supports creation and deletion of CodeCommit repositories.\nSee U(https://aws.amazon.com/codecommit/) for more information about CodeCommit.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "description": {
          "aliases": [
            "comment"
          ],
          "description": "description or comment of repository.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "name of repository.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Specifies the state of repository.",
          "type": "str",
          "required": true,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Manage repositories in AWS CodeCommit",
      "version_added": "1.0.0"
    },
    "examples": "\n# Create a new repository\n- community.aws.aws_codecommit:\n    name: repo\n    state: present\n\n# Delete a repository\n- community.aws.aws_codecommit:\n    name: repo\n    state: absent\n"
  },
  "community.aws.aws_codepipeline": {
    "doc": {
      "description": "Create or delete a CodePipeline on AWS.",
      "has_action": false,
      "notes": "for details of the parameters and returns see U(http://boto3.readthedocs.io/en/latest/reference/services/codepipeline.html)\nIf parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "artifact_store": {
          "aliases": [],
          "description": "Location information where artifacts are stored (on S3). Dictionary with fields type and location.",
          "type": "dict",
          "required": true,
          "suboptions": {
            "location": {
              "aliases": [],
              "description": "Bucket name for artifacts.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "type": {
              "aliases": [],
              "description": "Type of the artifacts storage (only 'S3' is currently supported).",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the pipeline",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "role_arn": {
          "aliases": [],
          "description": "ARN of the IAM role to use when executing the pipeline",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "stages": {
          "aliases": [],
          "description": "List of stages to perform in the CodePipeline. List of dictionaries containing name and actions for each stage.",
          "type": "list",
          "required": true,
          "elements": "dict",
          "suboptions": {
            "actions": {
              "aliases": [],
              "description": "List of action configurations for that stage.\nSee the boto3 documentation for full documentation of suboptions:\nU(https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/codepipeline.html#CodePipeline.Client.create_pipeline)",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {}
            },
            "name": {
              "aliases": [],
              "description": "Name of the stage (step) in the codepipeline",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "Create or remove code pipeline",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "version": {
          "aliases": [],
          "description": "Version number of the pipeline. This number is automatically incremented when a pipeline is updated.",
          "type": "int",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Create or delete AWS CodePipelines",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n# Example for creating a pipeline for continuous deploy of Github code to an ECS cluster (container)\n- community.aws.aws_codepipeline:\n    name: my_deploy_pipeline\n    role_arn: arn:aws:iam::123456:role/AWS-CodePipeline-Service\n    artifact_store:\n      type: S3\n      location: my_s3_codepipline_bucket\n    stages:\n      - name: Get_source\n        actions:\n          -\n            name: Git_pull\n            actionTypeId:\n              category: Source\n              owner: ThirdParty\n              provider: GitHub\n              version: '1'\n            outputArtifacts:\n              - { name: my-app-source }\n            configuration:\n              Owner: mediapeers\n              Repo: my_gh_repo\n              PollForSourceChanges: 'true'\n              Branch: master\n              # Generate token like this:\n              # https://docs.aws.amazon.com/codepipeline/latest/userguide/GitHub-rotate-personal-token-CLI.html\n              # GH Link: https://github.com/settings/tokens\n              OAuthToken: 'abc123def456'\n            runOrder: 1\n      - name: Build\n        actions:\n          -\n            name: CodeBuild\n            actionTypeId:\n              category: Build\n              owner: AWS\n              provider: CodeBuild\n              version: '1'\n            inputArtifacts:\n              - { name: my-app-source }\n            outputArtifacts:\n              - { name: my-app-build }\n            configuration:\n              # A project with that name needs to be setup on AWS CodeBuild already (use code_build module).\n              ProjectName: codebuild-project-name\n            runOrder: 1\n      - name: ECS_deploy\n        actions:\n          -\n            name: ECS_deploy\n            actionTypeId:\n              category: Deploy\n              owner: AWS\n              provider: ECS\n              version: '1'\n            inputArtifacts:\n              - { name: vod-api-app-build }\n            configuration:\n              # an ECS cluster with that name needs to be setup on AWS ECS already (use ecs_cluster and ecs_service module)\n              ClusterName: ecs-cluster-name\n              ServiceName: ecs-cluster-service-name\n              FileName: imagedefinitions.json\n    region: us-east-1\n    state: present\n"
  },
  "community.aws.aws_config_aggregation_authorization": {
    "doc": {
      "description": "Module manages AWS Config resources.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "authorized_account_id": {
          "aliases": [],
          "description": "The 12-digit account ID of the account authorized to aggregate data.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "authorized_aws_region": {
          "aliases": [],
          "description": "The region authorized to collect aggregated data.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the Config rule should be present or absent.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Manage cross-account AWS Config authorizations",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Get current account ID\n  community.aws.aws_caller_info:\n  register: whoami\n- community.aws.aws_config_aggregation_authorization:\n    state: present\n    authorized_account_id: '{{ whoami.account }}'\n    authorized_aws_region: us-east-1\n"
  },
  "community.aws.aws_config_aggregator": {
    "doc": {
      "description": "Module manages AWS Config resources",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "account_sources": {
          "aliases": [],
          "description": "Provides a list of source accounts and regions to be aggregated.",
          "type": "list",
          "required": true,
          "elements": "dict",
          "suboptions": {
            "account_ids": {
              "aliases": [],
              "description": "A list of 12-digit account IDs of accounts being aggregated.",
              "type": "list",
              "required": false,
              "elements": "str",
              "suboptions": {}
            },
            "all_aws_regions": {
              "aliases": [],
              "description": "If true, aggregate existing AWS Config regions and future regions.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "aws_regions": {
              "aliases": [],
              "description": "A list of source regions being aggregated.",
              "type": "list",
              "required": false,
              "elements": "str",
              "suboptions": {}
            }
          }
        },
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the AWS Config resource.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "organization_source": {
          "aliases": [],
          "description": "The region authorized to collect aggregated data.",
          "type": "dict",
          "required": true,
          "suboptions": {
            "all_aws_regions": {
              "aliases": [],
              "description": "If true, aggregate existing AWS Config regions and future regions.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "aws_regions": {
              "aliases": [],
              "description": "The source regions being aggregated.",
              "type": "list",
              "required": false,
              "elements": "str",
              "suboptions": {}
            },
            "role_arn": {
              "aliases": [],
              "description": "ARN of the IAM role used to retrieve AWS Organization details associated with the aggregator account.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the Config rule should be present or absent.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Manage AWS Config aggregations across multiple accounts",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create cross-account aggregator\n  community.aws.aws_config_aggregator:\n    name: test_config_rule\n    state: present\n    account_sources:\n      account_ids:\n      - 1234567890\n      - 0123456789\n      - 9012345678\n      all_aws_regions: yes\n"
  },
  "community.aws.aws_config_delivery_channel": {
    "doc": {
      "description": "This module manages AWS Config delivery locations for rule checks and configuration info.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "delivery_frequency": {
          "aliases": [],
          "description": "The frequency with which AWS Config delivers configuration snapshots.",
          "type": "str",
          "required": false,
          "choices": [
            "One_Hour",
            "Three_Hours",
            "Six_Hours",
            "Twelve_Hours",
            "TwentyFour_Hours"
          ],
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the AWS Config resource.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "s3_bucket": {
          "aliases": [],
          "description": "The name of the Amazon S3 bucket to which AWS Config delivers configuration snapshots and configuration history files.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "s3_prefix": {
          "aliases": [],
          "description": "The prefix for the specified Amazon S3 bucket.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "sns_topic_arn": {
          "aliases": [],
          "description": "The Amazon Resource Name (ARN) of the Amazon SNS topic to which AWS Config sends notifications about configuration changes.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the Config rule should be present or absent.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Manage AWS Config delivery channels",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create Delivery Channel for AWS Config\n  community.aws.aws_config_delivery_channel:\n    name: test_delivery_channel\n    state: present\n    s3_bucket: 'test_aws_config_bucket'\n    sns_topic_arn: 'arn:aws:sns:us-east-1:123456789012:aws_config_topic:1234ab56-cdef-7g89-01hi-2jk34l5m67no'\n    delivery_frequency: 'Twelve_Hours'\n"
  },
  "community.aws.aws_config_recorder": {
    "doc": {
      "description": "Module manages AWS Config configuration recorder settings.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the AWS Config resource.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "recording_group": {
          "aliases": [],
          "description": "Specifies the types of AWS resources for which AWS Config records configuration changes.\nRequired when I(state=present)",
          "type": "dict",
          "required": false,
          "suboptions": {
            "all_supported": {
              "aliases": [],
              "description": "Specifies whether AWS Config records configuration changes for every supported type of regional resource.\nIf I(all_supported=true), when AWS Config adds support for a new type of regional resource, it starts recording resources of that type automatically.\nIf I(all_supported=true), you cannot enumerate a list of I(resource_types).",
              "required": false,
              "suboptions": {}
            },
            "include_global_types": {
              "aliases": [],
              "description": "Specifies whether AWS Config includes all supported types of global resources (for example, IAM resources) with the resources that it records.\nThe configuration details for any global resource are the same in all regions. To prevent duplicate configuration items, you should consider customizing AWS Config in only one region to record global resources.\nIf you set I(include_global_types=true), you must also set I(all_supported=true).\nIf you set I(include_global_types=true), when AWS Config adds support for a new type of global resource, it starts recording resources of that type automatically.",
              "required": false,
              "suboptions": {}
            },
            "resource_types": {
              "aliases": [],
              "description": "A list that specifies the types of AWS resources for which AWS Config records configuration changes (for example, C(AWS::EC2::Instance) or C(AWS::CloudTrail::Trail)).\nBefore you can set this option, you must set I(all_supported=false).",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "role_arn": {
          "aliases": [],
          "description": "Amazon Resource Name (ARN) of the IAM role used to describe the AWS resources associated with the account.\nRequired when I(state=present).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the Config rule should be present or absent.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Manage AWS Config Recorders",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create Configuration Recorder for AWS Config\n  community.aws.aws_config_recorder:\n    name: test_configuration_recorder\n    state: present\n    role_arn: 'arn:aws:iam::123456789012:role/AwsConfigRecorder'\n    recording_group:\n        all_supported: true\n        include_global_types: true\n"
  },
  "community.aws.aws_config_rule": {
    "doc": {
      "description": "Module manages AWS Config rules",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "The description that you provide for the AWS Config rule.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "execution_frequency": {
          "aliases": [],
          "description": "The maximum frequency with which AWS Config runs evaluations for a rule.",
          "type": "str",
          "required": false,
          "choices": [
            "One_Hour",
            "Three_Hours",
            "Six_Hours",
            "Twelve_Hours",
            "TwentyFour_Hours"
          ],
          "suboptions": {}
        },
        "input_parameters": {
          "aliases": [],
          "description": "A string, in JSON format, that is passed to the AWS Config rule Lambda function.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the AWS Config resource.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scope": {
          "aliases": [],
          "description": "Defines which resources can trigger an evaluation for the rule.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "compliance_id": {
              "aliases": [],
              "description": "The ID of the only AWS resource that you want to trigger an evaluation for the rule. If you specify a resource ID, you must specify one resource type for I(compliance_types).",
              "required": false,
              "suboptions": {}
            },
            "compliance_types": {
              "aliases": [],
              "description": "The resource types of only those AWS resources that you want to trigger an evaluation for the rule. You can only specify one type if you also specify a resource ID for I(compliance_id).",
              "required": false,
              "suboptions": {}
            },
            "tag_key": {
              "aliases": [],
              "description": "The tag key that is applied to only those AWS resources that you want to trigger an evaluation for the rule.",
              "required": false,
              "suboptions": {}
            },
            "tag_value": {
              "aliases": [],
              "description": "The tag value applied to only those AWS resources that you want to trigger an evaluation for the rule. If you specify a value for I(tag_value), you must also specify a value for I(tag_key).",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "source": {
          "aliases": [],
          "description": "Provides the rule owner (AWS or customer), the rule identifier, and the notifications that cause the function to evaluate your AWS resources.",
          "type": "dict",
          "required": true,
          "suboptions": {
            "details": {
              "aliases": [],
              "description": "Provides the source and type of the event that causes AWS Config to evaluate your AWS resources.\nThis parameter expects a list of dictionaries.  Each dictionary expects the following key/value pairs.\nKey `EventSource` The source of the event, such as an AWS service, that triggers AWS Config to evaluate your AWS resources.\nKey `MessageType` The type of notification that triggers AWS Config to run an evaluation for a rule.\nKey `MaximumExecutionFrequency` The frequency at which you want AWS Config to run evaluations for a custom rule with a periodic trigger.",
              "required": false,
              "suboptions": {}
            },
            "identifier": {
              "aliases": [],
              "description": "The ID of the only AWS resource that you want to trigger an evaluation for the rule. If you specify a resource ID, you must specify one resource type for I(compliance_types).",
              "required": false,
              "suboptions": {}
            },
            "owner": {
              "aliases": [],
              "description": "The resource types of only those AWS resources that you want to trigger an evaluation for the rule. You can only specify one type if you also specify a resource ID for I(compliance_id).",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "Whether the Config rule should be present or absent.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Manage AWS Config resources",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create Config Rule for AWS Config\n  community.aws.aws_config_rule:\n    name: test_config_rule\n    state: present\n    description: 'This AWS Config rule checks for public write access on S3 buckets'\n    scope:\n        compliance_types:\n            - 'AWS::S3::Bucket'\n    source:\n        owner: AWS\n        identifier: 'S3_BUCKET_PUBLIC_WRITE_PROHIBITED'\n\n"
  },
  "community.aws.aws_direct_connect_confirm_connection": {
    "doc": {
      "description": "Confirms the creation of a hosted DirectConnect, which requires approval before it can be used.\nDirectConnect connections that require approval would be in the 'ordering'.\nAfter confirmation, they will move to the 'pending' state and finally the 'available' state.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "connection_id": {
          "aliases": [],
          "description": "The ID of the Direct Connect connection.\nOne of I(connection_id) or I(name) must be specified.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the Direct Connect connection.\nOne of I(connection_id) or I(name) must be specified.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Confirms the creation of a hosted DirectConnect connection."
    },
    "examples": "\n\n# confirm a Direct Connect by name\n- name: confirm the connection id\n  aws_direct_connect_confirm_connection:\n    name: my_host_direct_connect\n\n# confirm a Direct Connect by connection_id\n- name: confirm the connection id\n  aws_direct_connect_confirm_connection:\n    connection_id: dxcon-xxxxxxxx\n"
  },
  "community.aws.aws_direct_connect_connection": {
    "doc": {
      "description": "Create, update, or delete a Direct Connect connection between a network and a specific AWS Direct Connect location. Upon creation the connection may be added to a link aggregation group or established as a standalone connection. The connection may later be associated or disassociated with a link aggregation group.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "bandwidth": {
          "aliases": [],
          "description": "The bandwidth of the Direct Connect connection.\nRequired when I(state=present).",
          "type": "str",
          "required": false,
          "choices": [
            "1Gbps",
            "10Gbps"
          ],
          "suboptions": {}
        },
        "connection_id": {
          "aliases": [],
          "description": "The ID of the Direct Connect connection.\nModifying attributes of a connection with I(forced_update) will result in a new Direct Connect connection ID.\nOne of I(connection_id) or I(name) must be specified.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "forced_update": {
          "aliases": [],
          "description": "To modify I(bandwidth) or I(location) the connection needs to be deleted and recreated.\nBy default this will not happen.  This option must be explicitly set to C(true) to change I(bandwith) or I(location).",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "link_aggregation_group": {
          "aliases": [],
          "description": "The ID of the link aggregation group you want to associate with the connection.\nThis is optional when a stand-alone connection is desired.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "location": {
          "aliases": [],
          "description": "Where the Direct Connect connection is located.\nRequired when I(state=present).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the Direct Connect connection. This is required to create a new connection.\nOne of I(connection_id) or I(name) must be specified.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The state of the Direct Connect connection.",
          "type": "str",
          "required": true,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Creates, deletes, modifies a DirectConnect connection",
      "version_added": "1.0.0"
    },
    "examples": "\n\n# create a Direct Connect connection\n- community.aws.aws_direct_connect_connection:\n    name: ansible-test-connection\n    state: present\n    location: EqDC2\n    link_aggregation_group: dxlag-xxxxxxxx\n    bandwidth: 1Gbps\n  register: dc\n\n# disassociate the LAG from the connection\n- community.aws.aws_direct_connect_connection:\n    state: present\n    connection_id: dc.connection.connection_id\n    location: EqDC2\n    bandwidth: 1Gbps\n\n# replace the connection with one with more bandwidth\n- community.aws.aws_direct_connect_connection:\n    state: present\n    name: ansible-test-connection\n    location: EqDC2\n    bandwidth: 10Gbps\n    forced_update: true\n\n# delete the connection\n- community.aws.aws_direct_connect_connection:\n    state: absent\n    name: ansible-test-connection\n"
  },
  "community.aws.aws_direct_connect_gateway": {
    "doc": {
      "description": "Creates AWS Direct Connect Gateway.\nDeletes AWS Direct Connect Gateway.\nAttaches Virtual Gateways to Direct Connect Gateway.\nDetaches Virtual Gateways to Direct Connect Gateway.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "amazon_asn": {
          "aliases": [],
          "description": "The Amazon side ASN.\nRequired when I(state=present).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "direct_connect_gateway_id": {
          "aliases": [],
          "description": "The ID of an existing Direct Connect Gateway.\nRequired when I(state=absent).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the Direct Connect Gateway to be created or deleted.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Set I(state=present) to ensure a resource is created.\nSet I(state=absent) to remove a resource.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "virtual_gateway_id": {
          "aliases": [],
          "description": "The VPN gateway ID of an existing virtual gateway.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "wait_timeout": {
          "aliases": [],
          "description": "How long to wait for the association to be deleted.",
          "default": "320",
          "type": "int",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Manage AWS Direct Connect gateway",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create a new direct connect gateway attached to virtual private gateway\n  community.aws.aws_direct_connect_gateway:\n    state: present\n    name: my-dx-gateway\n    amazon_asn: 7224\n    virtual_gateway_id: vpg-12345\n  register: created_dxgw\n\n- name: Create a new unattached dxgw\n  community.aws.aws_direct_connect_gateway:\n    state: present\n    name: my-dx-gateway\n    amazon_asn: 7224\n  register: created_dxgw\n\n"
  },
  "community.aws.aws_direct_connect_link_aggregation_group": {
    "doc": {
      "description": "Create, delete, or modify a Direct Connect link aggregation group.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "bandwidth": {
          "aliases": [],
          "description": "The bandwidth of the link aggregation group.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "connection_id": {
          "aliases": [],
          "description": "A connection ID to link with the link aggregation group upon creation.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "delete_with_disassociation": {
          "aliases": [],
          "description": "To be used with I(state=absent) to delete connections after disassociating them with the LAG.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "force_delete": {
          "aliases": [],
          "description": "This allows the minimum number of links to be set to 0, any hosted connections disassociated, and any virtual interfaces associated to the LAG deleted.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "link_aggregation_group_id": {
          "aliases": [],
          "description": "The ID of the Direct Connect link aggregation group.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "location": {
          "aliases": [],
          "description": "The location of the link aggregation group.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "min_links": {
          "aliases": [],
          "description": "The minimum number of physical connections that must be operational for the LAG itself to be operational.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the Direct Connect link aggregation group.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "num_connections": {
          "aliases": [],
          "description": "The number of connections with which to initialize the link aggregation group.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The state of the Direct Connect link aggregation group.",
          "type": "str",
          "required": true,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "wait": {
          "aliases": [],
          "description": "Whether or not to wait for the operation to complete.\nMay be useful when waiting for virtual interfaces to be deleted.\nThe time to wait can be controlled by setting I(wait_timeout).",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "wait_timeout": {
          "aliases": [],
          "description": "The duration in seconds to wait if I(wait=true).",
          "default": "120",
          "type": "int",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Manage Direct Connect LAG bundles",
      "version_added": "1.0.0"
    },
    "examples": "\n\n# create a Direct Connect connection\n- community.aws.aws_direct_connect_link_aggregation_group:\n  state: present\n  location: EqDC2\n  lag_id: dxlag-xxxxxxxx\n  bandwidth: 1Gbps\n\n"
  },
  "community.aws.aws_direct_connect_virtual_interface": {
    "doc": {
      "description": "Create, delete, or modify a Direct Connect public or private virtual interface.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "address_type": {
          "aliases": [],
          "description": "The type of IP address for the BGP peer.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "amazon_address": {
          "aliases": [],
          "description": "The amazon address CIDR with which to create the virtual interface.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "authentication_key": {
          "aliases": [],
          "description": "The authentication key for BGP configuration.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "bgp_asn": {
          "aliases": [],
          "description": "The autonomous system (AS) number for Border Gateway Protocol (BGP) configuration.",
          "default": "65000",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "cidr": {
          "aliases": [],
          "description": "A list of route filter prefix CIDRs with which to create the public virtual interface.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "customer_address": {
          "aliases": [],
          "description": "The customer address CIDR with which to create the virtual interface.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "direct_connect_gateway_id": {
          "aliases": [],
          "description": "The direct connect gateway ID for creating a private virtual interface.\nTo create a private virtual interface I(virtual_gateway_id) or I(direct_connect_gateway_id) is required. These options are mutually exclusive.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "id_to_associate": {
          "aliases": [
            "link_aggregation_group_id",
            "connection_id"
          ],
          "description": "The ID of the link aggregation group or connection to associate with the virtual interface.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the virtual interface.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "public": {
          "aliases": [],
          "description": "The type of virtual interface.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The desired state of the Direct Connect virtual interface.",
          "type": "str",
          "required": true,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "virtual_gateway_id": {
          "aliases": [],
          "description": "The virtual gateway ID required for creating a private virtual interface.\nTo create a private virtual interface I(virtual_gateway_id) or I(direct_connect_gateway_id) is required. These options are mutually exclusive.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "virtual_interface_id": {
          "aliases": [],
          "description": "The virtual interface ID.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "vlan": {
          "aliases": [],
          "description": "The VLAN ID.",
          "default": "100",
          "type": "int",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Manage Direct Connect virtual interfaces",
      "version_added": "1.0.0"
    },
    "examples": "\n---\n- name: create an association between a LAG and connection\n  community.aws.aws_direct_connect_virtual_interface:\n    state: present\n    name: \"{{ name }}\"\n    link_aggregation_group_id: LAG-XXXXXXXX\n    connection_id: dxcon-XXXXXXXX\n\n- name: remove an association between a connection and virtual interface\n  community.aws.aws_direct_connect_virtual_interface:\n    state: absent\n    connection_id: dxcon-XXXXXXXX\n    virtual_interface_id: dxv-XXXXXXXX\n\n"
  },
  "community.aws.aws_eks_cluster": {
    "doc": {
      "description": "Manage Elastic Kubernetes Service Clusters",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of EKS cluster",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "role_arn": {
          "aliases": [],
          "description": "ARN of IAM role used by the EKS cluster",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_groups": {
          "aliases": [],
          "description": "list of security group names or IDs",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "desired state of the EKS cluster",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "subnets": {
          "aliases": [],
          "description": "list of subnet IDs for the Kubernetes cluster",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "version": {
          "aliases": [],
          "description": "Kubernetes version - defaults to latest",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "wait": {
          "aliases": [],
          "description": "Specifies whether the module waits until the cluster is active or deleted before moving on. It takes \"usually less than 10 minutes\" per AWS documentation.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "wait_timeout": {
          "aliases": [],
          "description": "The duration in seconds to wait for the cluster to become active. Defaults to 1200 seconds (20 minutes).",
          "default": "1200",
          "type": "int",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Manage Elastic Kubernetes Service Clusters",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n- name: Create an EKS cluster\n  community.aws.aws_eks_cluster:\n    name: my_cluster\n    version: 1.14\n    role_arn: my_eks_role\n    subnets:\n      - subnet-aaaa1111\n    security_groups:\n      - my_eks_sg\n      - sg-abcd1234\n  register: caller_facts\n\n- name: Remove an EKS cluster\n  community.aws.aws_eks_cluster:\n    name: my_cluster\n    wait: yes\n    state: absent\n"
  },
  "community.aws.aws_elasticbeanstalk_app": {
    "doc": {
      "description": "Creates, updates, deletes beanstalk applications if app_name is provided.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "app_name": {
          "aliases": [
            "name"
          ],
          "description": "Name of the beanstalk application you wish to manage.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "The description of the application.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether to ensure the application is present or absent.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "terminate_by_force": {
          "aliases": [],
          "description": "When I(terminate_by_force=true), running environments will be terminated before deleting the application.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Create, update, and delete an elastic beanstalk application",
      "version_added": "1.0.0"
    },
    "examples": "\n# Create or update an application\n- community.aws.aws_elasticbeanstalk_app:\n    app_name: Sample_App\n    description: \"Hello World App\"\n    state: present\n\n# Delete application\n- community.aws.aws_elasticbeanstalk_app:\n    app_name: Sample_App\n    state: absent\n\n"
  },
  "community.aws.aws_glue_connection": {
    "doc": {
      "description": "Manage an AWS Glue connection. See U(https://aws.amazon.com/glue/) for details.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "availability_zone": {
          "aliases": [],
          "description": "Availability Zone used by the connection\nRequired when I(connection_type=NETWORK).",
          "type": "str",
          "required": false,
          "version_added": "1.5.0",
          "suboptions": {}
        },
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "catalog_id": {
          "aliases": [],
          "description": "The ID of the Data Catalog in which to create the connection. If none is supplied, the AWS account ID is used by default.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "connection_properties": {
          "aliases": [],
          "description": "A dict of key-value pairs used as parameters for this connection.\nRequired when I(state=present).",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "connection_type": {
          "aliases": [],
          "description": "The type of the connection. Currently, SFTP is not supported.",
          "default": "JDBC",
          "type": "str",
          "required": false,
          "choices": [
            "CUSTOM",
            "JDBC",
            "KAFKA",
            "MARKETPLACE",
            "MONGODB",
            "NETWORK"
          ],
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "The description of the connection.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "match_criteria": {
          "aliases": [],
          "description": "A list of UTF-8 strings that specify the criteria that you can use in selecting this connection.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the connection.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_groups": {
          "aliases": [],
          "description": "A list of security groups to be used by the connection. Use either security group name or ID.\nRequired when I(connection_type=NETWORK).",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Create or delete the AWS Glue connection.",
          "type": "str",
          "required": true,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "subnet_id": {
          "aliases": [],
          "description": "The subnet ID used by the connection.\nRequired when I(connection_type=NETWORK).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Manage an AWS Glue connection",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n# Create an AWS Glue connection\n- community.aws.aws_glue_connection:\n    name: my-glue-connection\n    connection_properties:\n      JDBC_CONNECTION_URL: jdbc:mysql://mydb:3306/databasename\n      USERNAME: my-username\n      PASSWORD: my-password\n    state: present\n\n# Create an AWS Glue network connection\n- community.aws.aws_glue_connection:\n    name: my-glue-network-connection\n    availability_zone: us-east-1a\n    connection_properties:\n      JDBC_ENFORCE_SSL: \"false\"\n    connection_type: NETWORK\n    description: Test connection\n    security_groups:\n      - sg-glue\n    subnet_id: subnet-123abc\n    state: present\n\n# Delete an AWS Glue connection\n- community.aws.aws_glue_connection:\n    name: my-glue-connection\n    state: absent\n\n"
  },
  "community.aws.aws_glue_job": {
    "doc": {
      "description": "Manage an AWS Glue job. See U(https://aws.amazon.com/glue/) for details.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "allocated_capacity": {
          "aliases": [],
          "description": "The number of AWS Glue data processing units (DPUs) to allocate to this Job. From 2 to 100 DPUs can be allocated; the default is 10. A DPU is a relative measure of processing power that consists of 4 vCPUs of compute capacity and 16 GB of memory.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "command_name": {
          "aliases": [],
          "description": "The name of the job command. This must be 'glueetl'.",
          "default": "glueetl",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "command_script_location": {
          "aliases": [],
          "description": "The S3 path to a script that executes a job.\nRequired when I(state=present).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "connections": {
          "aliases": [],
          "description": "A list of Glue connections used for this job.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "default_arguments": {
          "aliases": [],
          "description": "A dict of default arguments for this job.  You can specify arguments here that your own job-execution script consumes, as well as arguments that AWS Glue itself consumes.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "Description of the job being defined.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "glue_version": {
          "aliases": [],
          "description": "Glue version determines the versions of Apache Spark and Python that AWS Glue supports.",
          "type": "str",
          "required": false,
          "version_added": "1.5.0",
          "suboptions": {}
        },
        "max_concurrent_runs": {
          "aliases": [],
          "description": "The maximum number of concurrent runs allowed for the job. The default is 1. An error is returned when this threshold is reached. The maximum value you can specify is controlled by a service limit.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "max_retries": {
          "aliases": [],
          "description": "The maximum number of times to retry this job if it fails.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name you assign to this job definition. It must be unique in your account.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "number_of_workers": {
          "aliases": [],
          "description": "The number of workers of a defined workerType that are allocated when a job runs.",
          "type": "int",
          "required": false,
          "version_added": "1.5.0",
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "role": {
          "aliases": [],
          "description": "The name or ARN of the IAM role associated with this job.\nRequired when I(state=present).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Create or delete the AWS Glue job.",
          "type": "str",
          "required": true,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "timeout": {
          "aliases": [],
          "description": "The job timeout in minutes.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "worker_type": {
          "aliases": [],
          "description": "The type of predefined worker that is allocated when a job runs.",
          "type": "str",
          "required": false,
          "choices": [
            "Standard",
            "G.1X",
            "G.2X"
          ],
          "version_added": "1.5.0",
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Manage an AWS Glue job",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n# Create an AWS Glue job\n- community.aws.aws_glue_job:\n    command_script_location: s3bucket/script.py\n    name: my-glue-job\n    role: my-iam-role\n    state: present\n\n# Delete an AWS Glue job\n- community.aws.aws_glue_job:\n    name: my-glue-job\n    state: absent\n\n"
  },
  "community.aws.aws_inspector_target": {
    "doc": {
      "description": "Creates, updates, or deletes Amazon Inspector Assessment Targets and manages the required Resource Groups.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The user-defined name that identifies the assessment target.  The name must be unique within the AWS account.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The state of the assessment target.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Tags of the EC2 instances to be added to the assessment target.\nRequired if C(state=present).",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Create, Update and Delete Amazon Inspector Assessment Targets",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create my_target Assessment Target\n  community.aws.aws_inspector_target:\n    name: my_target\n    tags:\n      role: scan_target\n\n- name: Update Existing my_target Assessment Target with Additional Tags\n  community.aws.aws_inspector_target:\n    name: my_target\n    tags:\n      env: dev\n      role: scan_target\n\n- name: Delete my_target Assessment Target\n  community.aws.aws_inspector_target:\n    name: my_target\n    state: absent\n"
  },
  "community.aws.aws_kms": {
    "doc": {
      "description": "Manage role/user access to a KMS key. Not designed for encrypting/decrypting.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "alias": {
          "aliases": [
            "key_alias"
          ],
          "description": "An alias for a key. For safety, even though KMS does not require keys to have an alias, this module expects all new keys to be given an alias to make them easier to manage. Existing keys without an alias may be referred to by I(key_id). Use M(community.aws.aws_kms_info) to find key ids. Required if I(key_id) is not given. Note that passing a I(key_id) and I(alias) will only cause a new alias to be added, an alias will never be renamed. The 'alias/' prefix is optional.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "A description of the CMK. Use a description that helps you decide whether the CMK is appropriate for a task.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "enable_key_rotation": {
          "aliases": [],
          "description": "Whether the key should be automatically rotated every year.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "enabled": {
          "aliases": [],
          "description": "Whether or not a key is enabled",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "grants": {
          "aliases": [],
          "description": "A list of grants to apply to the key. Each item must contain I(grantee_principal). Each item can optionally contain I(retiring_principal), I(operations), I(constraints), I(name).\nI(grantee_principal) and I(retiring_principal) must be ARNs\nFor full documentation of suboptions see the boto3 documentation:\nU(https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/kms.html#KMS.Client.create_grant)",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "constraints": {
              "aliases": [],
              "description": "Constraints is a dict containing C(encryption_context_subset) or C(encryption_context_equals), either or both being a dict specifying an encryption context match. See U(https://docs.aws.amazon.com/kms/latest/APIReference/API_GrantConstraints.html) or U(https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/kms.html#KMS.Client.create_grant)",
              "type": "dict",
              "required": false,
              "suboptions": {}
            },
            "grantee_principal": {
              "aliases": [],
              "description": "The full ARN of the principal being granted permissions.",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "operations": {
              "aliases": [],
              "description": "A list of operations that the grantee may perform using the CMK.",
              "type": "list",
              "required": false,
              "choices": [
                "Decrypt",
                "Encrypt",
                "GenerateDataKey",
                "GenerateDataKeyWithoutPlaintext",
                "ReEncryptFrom",
                "ReEncryptTo",
                "CreateGrant",
                "RetireGrant",
                "DescribeKey",
                "Verify",
                "Sign"
              ],
              "elements": "str",
              "suboptions": {}
            },
            "retiring_principal": {
              "aliases": [],
              "description": "The full ARN of the principal permitted to revoke/retire the grant.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "key_id": {
          "aliases": [
            "key_arn"
          ],
          "description": "Key ID or ARN of the key.\nOne of I(alias) or I(key_id) are required.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "key_spec": {
          "aliases": [
            "customer_master_key_spec"
          ],
          "description": "Specifies the type of KMS key to create.\nThe specification is not changeable once the key is created.",
          "default": "SYMMETRIC_DEFAULT",
          "type": "str",
          "required": false,
          "choices": [
            "SYMMETRIC_DEFAULT",
            "RSA_2048",
            "RSA_3072",
            "RSA_4096",
            "ECC_NIST_P256",
            "ECC_NIST_P384",
            "ECC_NIST_P521",
            "ECC_SECG_P256K1"
          ],
          "version_added": "2.1.0",
          "suboptions": {}
        },
        "key_usage": {
          "aliases": [],
          "description": "Determines the cryptographic operations for which you can use the KMS key.\nThe usage is not changeable once the key is created.",
          "default": "ENCRYPT_DECRYPT",
          "type": "str",
          "required": false,
          "choices": [
            "ENCRYPT_DECRYPT",
            "SIGN_VERIFY"
          ],
          "version_added": "2.1.0",
          "suboptions": {}
        },
        "pending_window": {
          "aliases": [
            "deletion_delay"
          ],
          "description": "The number of days between requesting deletion of the CMK and when it will actually be deleted.\nOnly used when I(state=absent) and the CMK has not yet been deleted.\nValid values are between 7 and 30 (inclusive).\nSee also: U(https://docs.aws.amazon.com/kms/latest/APIReference/API_ScheduleKeyDeletion.html#KMS-ScheduleKeyDeletion-request-PendingWindowInDays)",
          "type": "int",
          "required": false,
          "version_added": "1.4.0",
          "suboptions": {}
        },
        "policy": {
          "aliases": [],
          "description": "policy to apply to the KMS key.\nSee U(https://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html)",
          "type": "json",
          "required": false,
          "suboptions": {}
        },
        "policy_clean_invalid_entries": {
          "aliases": [
            "clean_invalid_entries"
          ],
          "description": "(deprecated) If adding/removing a role and invalid grantees are found, remove them. These entries will cause an update to fail in all known cases.\nOnly cleans if changes are being made.\nUsed for modifying the Key Policy rather than modifying a grant and only works on the default policy created through the AWS Console.\nThis option has been deprecated, and will be removed in a release after 2021-12-01. Use I(policy) instead.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "policy_grant_types": {
          "aliases": [
            "grant_types"
          ],
          "description": "(deprecated) List of grants to give to user/role. Likely \"role,role grant\" or \"role,role grant,admin\".\nRequired when I(policy_mode=grant).\nUsed for modifying the Key Policy rather than modifying a grant and only works on the default policy created through the AWS Console.\nThis option has been deprecated, and will be removed in a release after 2021-12-01. Use I(policy) instead.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "policy_mode": {
          "aliases": [
            "mode"
          ],
          "description": "(deprecated) Grant or deny access.\nUsed for modifying the Key Policy rather than modifying a grant and only works on the default policy created through the AWS Console.\nThis option has been deprecated, and will be removed in a release after 2021-12-01. Use I(policy) instead.",
          "default": "grant",
          "type": "str",
          "required": false,
          "choices": [
            "grant",
            "deny"
          ],
          "suboptions": {}
        },
        "policy_role_arn": {
          "aliases": [
            "role_arn"
          ],
          "description": "(deprecated) ARN of role to allow/deny access.\nOne of I(policy_role_name) or I(policy_role_arn) are required.\nUsed for modifying the Key Policy rather than modifying a grant and only works on the default policy created through the AWS Console.\nThis option has been deprecated, and will be removed in a release after 2021-12-01. Use I(policy) instead.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "policy_role_name": {
          "aliases": [
            "role_name"
          ],
          "description": "(deprecated) Role to allow/deny access.\nOne of I(policy_role_name) or I(policy_role_arn) are required.\nUsed for modifying the Key Policy rather than modifying a grant and only works on the default policy created through the AWS Console.\nThis option has been deprecated, and will be removed in a release after 2021-12-01. Use I(policy) instead.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "purge_grants": {
          "aliases": [],
          "description": "Whether the I(grants) argument should cause grants not in the list to be removed",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "purge_tags": {
          "aliases": [],
          "description": "Whether the I(tags) argument should cause tags not in the list to be removed",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether a key should be present or absent. Note that making an existing key absent only schedules a key for deletion.  Passing a key that is scheduled for deletion with state present will cancel key deletion.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "A dictionary of tags to apply to a key.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Perform various KMS management tasks.",
      "version_added": "1.0.0"
    },
    "examples": "\n# Managing the KMS IAM Policy via policy_mode and policy_grant_types is fragile\n# and has been deprecated in favour of the policy option.\n- name: grant user-style access to production secrets\n  community.aws.aws_kms:\n  args:\n    alias: \"alias/my_production_secrets\"\n    policy_mode: grant\n    policy_role_name: \"prod-appServerRole-1R5AQG2BSEL6L\"\n    policy_grant_types: \"role,role grant\"\n- name: remove access to production secrets from role\n  community.aws.aws_kms:\n  args:\n    alias: \"alias/my_production_secrets\"\n    policy_mode: deny\n    policy_role_name: \"prod-appServerRole-1R5AQG2BSEL6L\"\n\n# Create a new KMS key\n- community.aws.aws_kms:\n    alias: mykey\n    tags:\n      Name: myKey\n      Purpose: protect_stuff\n\n# Update previous key with more tags\n- community.aws.aws_kms:\n    alias: mykey\n    tags:\n      Name: myKey\n      Purpose: protect_stuff\n      Owner: security_team\n\n# Update a known key with grants allowing an instance with the billing-prod IAM profile\n# to decrypt data encrypted with the environment: production, application: billing\n# encryption context\n- community.aws.aws_kms:\n    key_id: abcd1234-abcd-1234-5678-ef1234567890\n    grants:\n      - name: billing_prod\n        grantee_principal: arn:aws:iam::1234567890123:role/billing_prod\n        constraints:\n          encryption_context_equals:\n            environment: production\n            application: billing\n        operations:\n          - Decrypt\n          - RetireGrant\n\n- name: Update IAM policy on an existing KMS key\n  community.aws.aws_kms:\n    alias: my-kms-key\n    policy: '{\"Version\": \"2012-10-17\", \"Id\": \"my-kms-key-permissions\", \"Statement\": [ { <SOME STATEMENT> } ]}'\n    state: present\n\n- name: Example using lookup for policy json\n  community.aws.aws_kms:\n    alias: my-kms-key\n    policy: \"{{ lookup('template', 'kms_iam_policy_template.json.j2') }}\"\n    state: present\n"
  },
  "community.aws.aws_kms_facts": {
    "doc": {
      "description": "Gather information about AWS KMS keys including tags and grants\nThis module was called C(aws_kms_facts) before Ansible 2.9. The usage did not change.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "alias": {
          "aliases": [
            "key_alias"
          ],
          "description": "Alias for key.\nMutually exclusive with I(key_id) and I(filters).",
          "type": "str",
          "required": false,
          "version_added": "1.4.0",
          "suboptions": {}
        },
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filters": {
          "aliases": [],
          "description": "A dict of filters to apply. Each dict item consists of a filter key and a filter value. The filters aren't natively supported by boto3, but are supported to provide similar functionality to other modules. Standard tag filters (C(tag-key), C(tag-value) and C(tag:tagName)) are available, as are C(key-id) and C(alias)\nMutually exclusive with I(alias) and I(key_id).",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "key_id": {
          "aliases": [
            "key_arn"
          ],
          "description": "Key ID or ARN of the key.\nMutually exclusive with I(alias) and I(filters).",
          "type": "str",
          "required": false,
          "version_added": "1.4.0",
          "suboptions": {}
        },
        "keys_attr": {
          "aliases": [],
          "description": "Whether to return the results in the C(keys) attribute as well as the C(kms_keys) attribute.\nReturning the C(keys) attribute conflicts with the builtin keys() method on dictionaries and as such has been deprecated.\nAfter version C(3.0.0) this parameter will do nothing, and after version C(4.0.0) this parameter will be removed.",
          "default": "True",
          "type": "bool",
          "required": false,
          "version_added": "2.0.0",
          "suboptions": {}
        },
        "pending_deletion": {
          "aliases": [],
          "description": "Whether to get full details (tags, grants etc.) of keys pending deletion",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Gather information about AWS KMS keys",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n# Gather information about all KMS keys\n- community.aws.aws_kms_info:\n\n# Gather information about all keys with a Name tag\n- community.aws.aws_kms_info:\n    filters:\n      tag-key: Name\n\n# Gather information about all keys with a specific name\n- community.aws.aws_kms_info:\n    filters:\n      \"tag:Name\": Example\n"
  },
  "community.aws.aws_kms_info": {
    "doc": {
      "description": "Gather information about AWS KMS keys including tags and grants\nThis module was called C(aws_kms_facts) before Ansible 2.9. The usage did not change.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "alias": {
          "aliases": [
            "key_alias"
          ],
          "description": "Alias for key.\nMutually exclusive with I(key_id) and I(filters).",
          "type": "str",
          "required": false,
          "version_added": "1.4.0",
          "suboptions": {}
        },
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filters": {
          "aliases": [],
          "description": "A dict of filters to apply. Each dict item consists of a filter key and a filter value. The filters aren't natively supported by boto3, but are supported to provide similar functionality to other modules. Standard tag filters (C(tag-key), C(tag-value) and C(tag:tagName)) are available, as are C(key-id) and C(alias)\nMutually exclusive with I(alias) and I(key_id).",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "key_id": {
          "aliases": [
            "key_arn"
          ],
          "description": "Key ID or ARN of the key.\nMutually exclusive with I(alias) and I(filters).",
          "type": "str",
          "required": false,
          "version_added": "1.4.0",
          "suboptions": {}
        },
        "keys_attr": {
          "aliases": [],
          "description": "Whether to return the results in the C(keys) attribute as well as the C(kms_keys) attribute.\nReturning the C(keys) attribute conflicts with the builtin keys() method on dictionaries and as such has been deprecated.\nAfter version C(3.0.0) this parameter will do nothing, and after version C(4.0.0) this parameter will be removed.",
          "default": "True",
          "type": "bool",
          "required": false,
          "version_added": "2.0.0",
          "suboptions": {}
        },
        "pending_deletion": {
          "aliases": [],
          "description": "Whether to get full details (tags, grants etc.) of keys pending deletion",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Gather information about AWS KMS keys",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n# Gather information about all KMS keys\n- community.aws.aws_kms_info:\n\n# Gather information about all keys with a Name tag\n- community.aws.aws_kms_info:\n    filters:\n      tag-key: Name\n\n# Gather information about all keys with a specific name\n- community.aws.aws_kms_info:\n    filters:\n      \"tag:Name\": Example\n"
  },
  "community.aws.aws_msk_cluster": {
    "doc": {
      "description": "Create, delete and modify Amazon MSK (Managed Streaming for Apache Kafka) clusters.",
      "has_action": false,
      "notes": "All operations are time consuming, for example create takes 20-30 minutes, update kafka version -- more than one hour, update configuration -- 10-15 minutes;\nCluster's brokers get evenly distributed over a number of availability zones that's equal to the number of subnets.\nIf parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "authentication": {
          "aliases": [],
          "description": "Includes all client authentication related information.\nEffective only for new cluster and can not be updated.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "sasl_scram": {
              "aliases": [],
              "description": "SASL/SCRAM authentication is enabled or not.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "tls_ca_arn": {
              "aliases": [],
              "description": "List of ACM Certificate Authority ARNs.",
              "type": "list",
              "required": false,
              "elements": "str",
              "suboptions": {}
            }
          }
        },
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "configuration_arn": {
          "aliases": [],
          "description": "ARN of the configuration to use.\nThis parameter is required when I(state=present).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "configuration_revision": {
          "aliases": [],
          "description": "The revision of the configuration to use.\nThis parameter is required when I(state=present).",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ebs_volume_size": {
          "aliases": [],
          "description": "The size in GiB of the EBS volume for the data drive on each broker node.",
          "default": "100",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "encryption": {
          "aliases": [],
          "description": "Includes all encryption-related information.\nEffective only for new cluster and can not be updated.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "in_transit": {
              "aliases": [],
              "description": "The details for encryption in transit.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "client_broker": {
                  "aliases": [],
                  "description": "Indicates the encryption setting for data in transit between clients and brokers. The following are the possible values. TLS means that client-broker communication is enabled with TLS only. TLS_PLAINTEXT means that client-broker communication is enabled for both TLS-encrypted, as well as plaintext data. PLAINTEXT means that client-broker communication is enabled in plaintext only.",
                  "default": "TLS",
                  "type": "str",
                  "required": false,
                  "choices": [
                    "TLS",
                    "TLS_PLAINTEXT",
                    "PLAINTEXT"
                  ],
                  "suboptions": {}
                },
                "in_cluster": {
                  "aliases": [],
                  "description": "When set to true, it indicates that data communication among the broker nodes of the cluster is encrypted. When set to false, the communication happens in plaintext.",
                  "default": "True",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "kms_key_id": {
              "aliases": [],
              "description": "The ARN of the AWS KMS key for encrypting data at rest. If you don't specify a KMS key, MSK creates one for you and uses it.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "enhanced_monitoring": {
          "aliases": [],
          "description": "Specifies the level of monitoring for the MSK cluster.",
          "default": "DEFAULT",
          "type": "str",
          "required": false,
          "choices": [
            "DEFAULT",
            "PER_BROKER",
            "PER_TOPIC_PER_BROKER",
            "PER_TOPIC_PER_PARTITION"
          ],
          "suboptions": {}
        },
        "instance_type": {
          "aliases": [],
          "description": "The type of Amazon EC2 instances to use for Kafka brokers.\nUpdate operation requires botocore version >= 1.19.58.",
          "default": "kafka.t3.small",
          "type": "str",
          "required": false,
          "choices": [
            "kafka.t3.small",
            "kafka.m5.large",
            "kafka.m5.xlarge",
            "kafka.m5.2xlarge",
            "kafka.m5.4xlarge"
          ],
          "suboptions": {}
        },
        "logging": {
          "aliases": [],
          "description": "Logging configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "cloudwatch": {
              "aliases": [],
              "description": "Details of the CloudWatch Logs destination for broker logs.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "enabled": {
                  "aliases": [],
                  "description": "Specifies whether broker logs get sent to the specified CloudWatch Logs destination.",
                  "default": "False",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "log_group": {
                  "aliases": [],
                  "description": "The CloudWatch log group that is the destination for broker logs.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "firehose": {
              "aliases": [],
              "description": "Details of the Kinesis Data Firehose delivery stream that is the destination for broker logs.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "delivery_stream": {
                  "aliases": [],
                  "description": "The Kinesis Data Firehose delivery stream that is the destination for broker logs.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "enabled": {
                  "aliases": [],
                  "description": "Specifies whether broker logs get send to the specified Kinesis Data Firehose delivery stream.",
                  "default": "False",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "s3": {
              "aliases": [],
              "description": "Details of the Amazon S3 destination for broker logs.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "bucket": {
                  "aliases": [],
                  "description": "The name of the S3 bucket that is the destination for broker logs.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "enabled": {
                  "aliases": [],
                  "description": "Specifies whether broker logs get sent to the specified Amazon S3 destination.",
                  "default": "False",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "prefix": {
                  "aliases": [],
                  "description": "The S3 prefix that is the destination for broker logs.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            }
          }
        },
        "name": {
          "aliases": [],
          "description": "The name of the cluster.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "nodes": {
          "aliases": [],
          "description": "The number of broker nodes in the cluster. Should be greater or equal to two.",
          "default": "3",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "open_monitoring": {
          "aliases": [],
          "description": "The settings for open monitoring.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "jmx_exporter": {
              "aliases": [],
              "description": "Indicates whether you want to enable or disable the JMX Exporter.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "node_exporter": {
              "aliases": [],
              "description": "Indicates whether you want to enable or disable the Node Exporter.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "purge_tags": {
          "aliases": [],
          "description": "Remove tags not listed in I(tags) when tags is specified.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_groups": {
          "aliases": [],
          "description": "The AWS security groups to associate with the elastic network interfaces in order to specify who can connect to and communicate with the Amazon MSK cluster. If you don't specify a security group, Amazon MSK uses the default security group associated with the VPC.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Create (C(present)) or delete (C(absent)) cluster.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "subnets": {
          "aliases": [],
          "description": "The list of subnets to connect to in the client virtual private cloud (VPC). AWS creates elastic network interfaces inside these subnets. Client applications use elastic network interfaces to produce and consume data.\nClient subnets can't be in Availability Zone us-east-1e.\nThis parameter is required when I(state=present).",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Tag dictionary to apply to the cluster.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "version": {
          "aliases": [],
          "description": "The version of Apache Kafka.\nThis version should exist in given configuration.\nThis parameter is required when I(state=present).\nUpdate operation requires botocore version >= 1.16.19.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "wait": {
          "aliases": [],
          "description": "Whether to wait for the cluster to be available or deleted.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "wait_timeout": {
          "aliases": [],
          "description": "How many seconds to wait. Cluster creation can take up to 20-30 minutes.",
          "default": "3600",
          "type": "int",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Manage Amazon MSK clusters.",
      "version_added": "2.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n- aws_msk_cluster:\n    name: kafka-cluster\n    state: present\n    version: 2.6.1\n    nodes: 6\n    ebs_volume_size: \"{{ aws_msk_options.ebs_volume_size }}\"\n    subnets:\n      - subnet-e3b48ce7c25861eeb\n      - subnet-2990c8b25b07ddd43\n      - subnet-d9fbeaf46c54bfab6\n    wait: true\n    wait_timeout: 1800\n    configuration_arn: arn:aws:kafka:us-east-1:000000000001:configuration/kafka-cluster-configuration/aaaaaaaa-bbbb-4444-3333-ccccccccc-1\n    configuration_revision: 1\n\n- aws_msk_cluster:\n    name: kafka-cluster\n    state: absent\n"
  },
  "community.aws.aws_msk_config": {
    "doc": {
      "description": "Create, delete and modify Amazon MSK (Managed Streaming for Apache Kafka) cluster configurations.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "config": {
          "aliases": [
            "configuration"
          ],
          "description": "Contents of the server.properties file.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "The description of the configuration.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "kafka_versions": {
          "aliases": [],
          "description": "The versions of Apache Kafka with which you can use this MSK configuration.\nRequired when I(state=present).",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the configuration.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Create (C(present)) or delete (C(absent)) cluster configuration.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "boto3",
        "boto3 >= 1.15.0",
        "botocore >= 1.17.48",
        "botocore >= 1.18.0",
        "python >= 3.6"
      ],
      "short_description": "Manage Amazon MSK cluster configurations.",
      "version_added": "2.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n- aws_msk_config:\n    name: kafka-cluster-configuration\n    state: present\n    kafka_versions:\n      - 2.6.0\n      - 2.6.1\n    config:\n      auto.create.topics.enable: false\n      num.partitions: 1\n      default.replication.factor: 3\n      zookeeper.session.timeout.ms: 18000\n\n- aws_msk_config:\n    name: kafka-cluster-configuration\n    state: absent\n"
  },
  "community.aws.aws_region_facts": {
    "doc": {
      "description": "Gather information about AWS regions.\nThis module was called C(aws_region_facts) before Ansible 2.9. The usage did not change.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filters": {
          "aliases": [],
          "description": "A dict of filters to apply.\nEach dict item consists of a filter key and a filter value.\nSee U(https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeRegions.html) for possible filters.\nFilter names and values are case sensitive.\nYou can use underscores instead of dashes (-) in the filter keys.\nFilter keys with underscores will take precedence in case of conflict.",
          "default": "{}",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Gather information about AWS regions.",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n# Gather information about all regions\n- community.aws.aws_region_info:\n\n# Gather information about a single region\n- community.aws.aws_region_info:\n    filters:\n      region-name: eu-west-1\n"
  },
  "community.aws.aws_region_info": {
    "doc": {
      "description": "Gather information about AWS regions.\nThis module was called C(aws_region_facts) before Ansible 2.9. The usage did not change.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filters": {
          "aliases": [],
          "description": "A dict of filters to apply.\nEach dict item consists of a filter key and a filter value.\nSee U(https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeRegions.html) for possible filters.\nFilter names and values are case sensitive.\nYou can use underscores instead of dashes (-) in the filter keys.\nFilter keys with underscores will take precedence in case of conflict.",
          "default": "{}",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Gather information about AWS regions.",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n# Gather information about all regions\n- community.aws.aws_region_info:\n\n# Gather information about a single region\n- community.aws.aws_region_info:\n    filters:\n      region-name: eu-west-1\n"
  },
  "community.aws.aws_s3_bucket_facts": {
    "doc": {
      "description": "Lists S3 buckets and details about those buckets.\nThis module was called C(aws_s3_bucket_facts) before Ansible 2.9, returning C(ansible_facts). Note that the M(community.aws.aws_s3_bucket_info) module no longer returns C(ansible_facts)!",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "bucket_facts": {
          "aliases": [],
          "description": "Retrieve requested S3 bucket detailed information\nEach bucket_X option executes one API call, hence many options being set to C(true) will cause slower module execution.\nYou can limit buckets by using the I(name) or I(name_filter) option.",
          "type": "dict",
          "required": false,
          "version_added": "1.4.0",
          "suboptions": {
            "bucket_accelerate_configuration": {
              "aliases": [],
              "description": "Retrive S3 accelerate configuration.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "bucket_acl": {
              "aliases": [],
              "description": "Retrive S3 bucket ACLs.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "bucket_cors": {
              "aliases": [],
              "description": "Retrive S3 bucket CORS configuration.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "bucket_encryption": {
              "aliases": [],
              "description": "Retrive S3 bucket encryption.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "bucket_lifecycle_configuration": {
              "aliases": [],
              "description": "Retrive S3 bucket lifecycle configuration.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "bucket_location": {
              "aliases": [],
              "description": "Retrive S3 bucket location.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "bucket_logging": {
              "aliases": [],
              "description": "Retrive S3 bucket logging.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "bucket_notification_configuration": {
              "aliases": [],
              "description": "Retrive S3 bucket notification configuration.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "bucket_ownership_controls": {
              "aliases": [],
              "description": "Retrive S3 ownership controls.\nAccess to bucket ownership controls requires botocore>=1.18.11.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "bucket_policy": {
              "aliases": [],
              "description": "Retrive S3 bucket policy.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "bucket_policy_status": {
              "aliases": [],
              "description": "Retrive S3 bucket policy status.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "bucket_replication": {
              "aliases": [],
              "description": "Retrive S3 bucket replication.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "bucket_request_payment": {
              "aliases": [],
              "description": "Retrive S3 bucket request payment.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "bucket_tagging": {
              "aliases": [],
              "description": "Retrive S3 bucket tagging.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "bucket_website": {
              "aliases": [],
              "description": "Retrive S3 bucket website.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "public_access_block": {
              "aliases": [],
              "description": "Retrive S3 bucket public access block.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of bucket to query.",
          "default": "",
          "type": "str",
          "required": false,
          "version_added": "1.4.0",
          "suboptions": {}
        },
        "name_filter": {
          "aliases": [],
          "description": "Limits buckets to only buckets who's name contain the string in I(name_filter).",
          "default": "",
          "type": "str",
          "required": false,
          "version_added": "1.4.0",
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "transform_location": {
          "aliases": [],
          "description": "S3 bucket location for default us-east-1 is normally reported as C(null).\nSetting this option to C(true) will return C(us-east-1) instead.\nAffects only queries with I(bucket_facts=true) and I(bucket_location=true).",
          "default": "False",
          "type": "bool",
          "required": false,
          "version_added": "1.4.0",
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "lists S3 buckets in AWS",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n# Note: Only AWS S3 is currently supported\n\n# Lists all s3 buckets\n- community.aws.aws_s3_bucket_info:\n  register: result\n\n# Retrieve detailed bucket information\n- community.aws.aws_s3_bucket_info:\n    # Show only buckets with name matching\n    name_filter: your.testing\n    # Choose facts to retrieve\n    bucket_facts:\n      # bucket_accelerate_configuration: true\n      bucket_acl: true\n      bucket_cors: true\n      bucket_encryption: true\n      # bucket_lifecycle_configuration: true\n      bucket_location: true\n      # bucket_logging: true\n      # bucket_notification_configuration: true\n      # bucket_ownership_controls: true\n      # bucket_policy: true\n      # bucket_policy_status: true\n      # bucket_replication: true\n      # bucket_request_payment: true\n      # bucket_tagging: true\n      # bucket_website: true\n      # public_access_block: true\n    transform_location: true\n    register: result\n\n# Print out result\n- name: List buckets\n  ansible.builtin.debug:\n    msg: \"{{ result['buckets'] }}\"\n"
  },
  "community.aws.aws_s3_bucket_info": {
    "doc": {
      "description": "Lists S3 buckets and details about those buckets.\nThis module was called C(aws_s3_bucket_facts) before Ansible 2.9, returning C(ansible_facts). Note that the M(community.aws.aws_s3_bucket_info) module no longer returns C(ansible_facts)!",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "bucket_facts": {
          "aliases": [],
          "description": "Retrieve requested S3 bucket detailed information\nEach bucket_X option executes one API call, hence many options being set to C(true) will cause slower module execution.\nYou can limit buckets by using the I(name) or I(name_filter) option.",
          "type": "dict",
          "required": false,
          "version_added": "1.4.0",
          "suboptions": {
            "bucket_accelerate_configuration": {
              "aliases": [],
              "description": "Retrive S3 accelerate configuration.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "bucket_acl": {
              "aliases": [],
              "description": "Retrive S3 bucket ACLs.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "bucket_cors": {
              "aliases": [],
              "description": "Retrive S3 bucket CORS configuration.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "bucket_encryption": {
              "aliases": [],
              "description": "Retrive S3 bucket encryption.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "bucket_lifecycle_configuration": {
              "aliases": [],
              "description": "Retrive S3 bucket lifecycle configuration.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "bucket_location": {
              "aliases": [],
              "description": "Retrive S3 bucket location.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "bucket_logging": {
              "aliases": [],
              "description": "Retrive S3 bucket logging.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "bucket_notification_configuration": {
              "aliases": [],
              "description": "Retrive S3 bucket notification configuration.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "bucket_ownership_controls": {
              "aliases": [],
              "description": "Retrive S3 ownership controls.\nAccess to bucket ownership controls requires botocore>=1.18.11.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "bucket_policy": {
              "aliases": [],
              "description": "Retrive S3 bucket policy.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "bucket_policy_status": {
              "aliases": [],
              "description": "Retrive S3 bucket policy status.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "bucket_replication": {
              "aliases": [],
              "description": "Retrive S3 bucket replication.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "bucket_request_payment": {
              "aliases": [],
              "description": "Retrive S3 bucket request payment.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "bucket_tagging": {
              "aliases": [],
              "description": "Retrive S3 bucket tagging.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "bucket_website": {
              "aliases": [],
              "description": "Retrive S3 bucket website.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "public_access_block": {
              "aliases": [],
              "description": "Retrive S3 bucket public access block.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of bucket to query.",
          "default": "",
          "type": "str",
          "required": false,
          "version_added": "1.4.0",
          "suboptions": {}
        },
        "name_filter": {
          "aliases": [],
          "description": "Limits buckets to only buckets who's name contain the string in I(name_filter).",
          "default": "",
          "type": "str",
          "required": false,
          "version_added": "1.4.0",
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "transform_location": {
          "aliases": [],
          "description": "S3 bucket location for default us-east-1 is normally reported as C(null).\nSetting this option to C(true) will return C(us-east-1) instead.\nAffects only queries with I(bucket_facts=true) and I(bucket_location=true).",
          "default": "False",
          "type": "bool",
          "required": false,
          "version_added": "1.4.0",
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "lists S3 buckets in AWS",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n# Note: Only AWS S3 is currently supported\n\n# Lists all s3 buckets\n- community.aws.aws_s3_bucket_info:\n  register: result\n\n# Retrieve detailed bucket information\n- community.aws.aws_s3_bucket_info:\n    # Show only buckets with name matching\n    name_filter: your.testing\n    # Choose facts to retrieve\n    bucket_facts:\n      # bucket_accelerate_configuration: true\n      bucket_acl: true\n      bucket_cors: true\n      bucket_encryption: true\n      # bucket_lifecycle_configuration: true\n      bucket_location: true\n      # bucket_logging: true\n      # bucket_notification_configuration: true\n      # bucket_ownership_controls: true\n      # bucket_policy: true\n      # bucket_policy_status: true\n      # bucket_replication: true\n      # bucket_request_payment: true\n      # bucket_tagging: true\n      # bucket_website: true\n      # public_access_block: true\n    transform_location: true\n    register: result\n\n# Print out result\n- name: List buckets\n  ansible.builtin.debug:\n    msg: \"{{ result['buckets'] }}\"\n"
  },
  "community.aws.aws_s3_cors": {
    "doc": {
      "description": "Manage CORS for S3 buckets in AWS",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the s3 bucket",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "rules": {
          "aliases": [],
          "description": "Cors rules to put on the s3 bucket",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Create or remove cors on the s3 bucket",
          "type": "str",
          "required": true,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Manage CORS for S3 buckets in AWS",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n# Create a simple cors for s3 bucket\n- community.aws.aws_s3_cors:\n    name: mys3bucket\n    state: present\n    rules:\n      - allowed_origins:\n          - http://www.example.com/\n        allowed_methods:\n          - GET\n          - POST\n        allowed_headers:\n          - Authorization\n        expose_headers:\n          - x-amz-server-side-encryption\n          - x-amz-request-id\n        max_age_seconds: 30000\n\n# Remove cors for s3 bucket\n- community.aws.aws_s3_cors:\n    name: mys3bucket\n    state: absent\n"
  },
  "community.aws.aws_secret": {
    "doc": {
      "description": "Create, update, and delete secrets stored in AWS Secrets Manager.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "Specifies a user-provided description of the secret.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "kms_key_id": {
          "aliases": [],
          "description": "Specifies the ARN or alias of the AWS KMS customer master key (CMK) to be used to encrypt the `secret_string` or `secret_binary` values in the versions stored in this secret.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Friendly name for the secret you are creating.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "recovery_window": {
          "aliases": [],
          "description": "Only used if state is absent.\nSpecifies the number of days that Secrets Manager waits before it can delete the secret.\nIf set to 0, the deletion is forced without recovery.",
          "default": "30",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "rotation_interval": {
          "aliases": [],
          "description": "Specifies the number of days between automatic scheduled rotations of the secret.",
          "default": "30",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "rotation_lambda": {
          "aliases": [],
          "description": "Specifies the ARN of the Lambda function that can rotate the secret.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Specifies string or binary data that you want to encrypt and store in the new version of the secret.",
          "default": "",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "secret_type": {
          "aliases": [],
          "description": "Specifies the type of data that you want to encrypt.",
          "default": "string",
          "type": "str",
          "required": false,
          "choices": [
            "binary",
            "string"
          ],
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the secret should be exist or not.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Specifies a list of user-defined tags that are attached to the secret.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Manage secrets stored in AWS Secrets Manager.",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Add string to AWS Secrets Manager\n  community.aws.aws_secret:\n    name: 'test_secret_string'\n    state: present\n    secret_type: 'string'\n    secret: \"{{ super_secret_string }}\"\n\n- name: remove string from AWS Secrets Manager\n  community.aws.aws_secret:\n    name: 'test_secret_string'\n    state: absent\n    secret_type: 'string'\n    secret: \"{{ super_secret_string }}\"\n"
  },
  "community.aws.aws_ses_identity": {
    "doc": {
      "description": "This module allows the user to manage verified email and domain identity for SES.\nThis covers verifying and removing identities as well as setting up complaint, bounce and delivery notification settings.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "bounce_notifications": {
          "aliases": [],
          "description": "Setup the SNS topic used to report bounce notifications.\nIf omitted, bounce notifications will not be delivered to a SNS topic.\nIf bounce notifications are not delivered to a SNS topic, I(feedback_forwarding) must be enabled.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "include_headers": {
              "aliases": [],
              "description": "Whether or not to include headers when delivering to the SNS topic.\nIf I(topic) is not specified this will have no impact, but the SES setting is updated even if there is no topic.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "topic": {
              "aliases": [],
              "description": "The ARN of the topic to send notifications to.\nIf omitted, notifications will not be delivered to a SNS topic.",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "complaint_notifications": {
          "aliases": [],
          "description": "Setup the SNS topic used to report complaint notifications.\nIf omitted, complaint notifications will not be delivered to a SNS topic.\nIf complaint notifications are not delivered to a SNS topic, I(feedback_forwarding) must be enabled.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "include_headers": {
              "aliases": [],
              "description": "Whether or not to include headers when delivering to the SNS topic.\nIf I(topic) is not specified this will have no impact, but the SES setting is updated even if there is no topic.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "topic": {
              "aliases": [],
              "description": "The ARN of the topic to send notifications to.\nIf omitted, notifications will not be delivered to a SNS topic.",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "delivery_notifications": {
          "aliases": [],
          "description": "Setup the SNS topic used to report delivery notifications.\nIf omitted, delivery notifications will not be delivered to a SNS topic.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "include_headers": {
              "aliases": [],
              "description": "Whether or not to include headers when delivering to the SNS topic.\nIf I(topic) is not specified this will have no impact, but the SES setting is updated even if there is no topic.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "topic": {
              "aliases": [],
              "description": "The ARN of the topic to send notifications to.\nIf omitted, notifications will not be delivered to a SNS topic.",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "feedback_forwarding": {
          "aliases": [],
          "description": "Whether or not to enable feedback forwarding.\nThis can only be false if both I(bounce_notifications) and I(complaint_notifications) specify SNS topics.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "identity": {
          "aliases": [],
          "description": "This is the email address or domain to verify / delete.\nIf this contains an '@' then it will be considered an email. Otherwise it will be considered a domain.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether to create(or update) or delete the identity.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Manages SES email and domain identity",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n- name: Ensure example@example.com email identity exists\n  community.aws.aws_ses_identity:\n    identity: example@example.com\n    state: present\n\n- name: Delete example@example.com email identity\n  community.aws.aws_ses_identity:\n    email: example@example.com\n    state: absent\n\n- name: Ensure example.com domain identity exists\n  community.aws.aws_ses_identity:\n    identity: example.com\n    state: present\n\n# Create an SNS topic and send bounce and complaint notifications to it\n# instead of emailing the identity owner\n- name: Ensure complaints-topic exists\n  community.aws.sns_topic:\n    name: \"complaints-topic\"\n    state: present\n    purge_subscriptions: False\n  register: topic_info\n\n- name: Deliver feedback to topic instead of owner email\n  community.aws.aws_ses_identity:\n    identity: example@example.com\n    state: present\n    complaint_notifications:\n      topic: \"{{ topic_info.sns_arn }}\"\n      include_headers: True\n    bounce_notifications:\n      topic: \"{{ topic_info.sns_arn }}\"\n      include_headers: False\n    feedback_forwarding: False\n\n# Create an SNS topic for delivery notifications and leave complaints\n# Being forwarded to the identity owner email\n- name: Ensure delivery-notifications-topic exists\n  community.aws.sns_topic:\n    name: \"delivery-notifications-topic\"\n    state: present\n    purge_subscriptions: False\n  register: topic_info\n\n- name: Delivery notifications to topic\n  community.aws.aws_ses_identity:\n    identity: example@example.com\n    state: present\n    delivery_notifications:\n      topic: \"{{ topic_info.sns_arn }}\"\n"
  },
  "community.aws.aws_ses_identity_policy": {
    "doc": {
      "description": "This module allows the user to manage sending authorization policies associated with an SES identity (email or domain).\nSES authorization sending policies can be used to control what actors are able to send email on behalf of the validated identity and what conditions must be met by the sent emails.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "identity": {
          "aliases": [],
          "description": "The SES identity to attach or remove a policy from. This can be either the full ARN or just\nthe verified email or domain.\n",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "policy": {
          "aliases": [],
          "description": "A properly formatted JSON sending authorization policy. Required when I(state=present).",
          "type": "json",
          "required": false,
          "suboptions": {}
        },
        "policy_name": {
          "aliases": [],
          "description": "The name used to identify the policy within the scope of the identity it's attached to.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether to create(or update) or delete the authorization policy on the identity.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Manages SES sending authorization policies",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n- name: add sending authorization policy to domain identity\n  community.aws.aws_ses_identity_policy:\n    identity: example.com\n    policy_name: ExamplePolicy\n    policy: \"{{ lookup('template', 'policy.json.j2') }}\"\n    state: present\n\n- name: add sending authorization policy to email identity\n  community.aws.aws_ses_identity_policy:\n    identity: example@example.com\n    policy_name: ExamplePolicy\n    policy: \"{{ lookup('template', 'policy.json.j2') }}\"\n    state: present\n\n- name: add sending authorization policy to identity using ARN\n  community.aws.aws_ses_identity_policy:\n    identity: \"arn:aws:ses:us-east-1:12345678:identity/example.com\"\n    policy_name: ExamplePolicy\n    policy: \"{{ lookup('template', 'policy.json.j2') }}\"\n    state: present\n\n- name: remove sending authorization policy\n  community.aws.aws_ses_identity_policy:\n    identity: example.com\n    policy_name: ExamplePolicy\n    state: absent\n"
  },
  "community.aws.aws_ses_rule_set": {
    "doc": {
      "description": "The M(community.aws.aws_ses_rule_set) module allows you to create, delete, and manage SES receipt rule sets",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "active": {
          "aliases": [],
          "description": "Whether or not this rule set should be the active rule set. Only has an impact if I(state) is C(present).\nIf omitted, the active rule set will not be changed.\nIf C(True) then this rule set will be made active and all others inactive.\nif C(False) then this rule set will be deactivated. Be careful with this as you can end up with no active rule set.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "force": {
          "aliases": [],
          "description": "When deleting a rule set, deactivate it first (AWS prevents deletion of the active rule set).",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the receipt rule set.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether to create (or update) or destroy the receipt rule set.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Manages SES inbound receipt rule sets",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: None of these examples set aws_access_key, aws_secret_key, or region.\n# It is assumed that their matching environment variables are set.\n---\n- name: Create default rule set and activate it if not already\n  community.aws.aws_ses_rule_set:\n    name: default-rule-set\n    state: present\n    active: yes\n\n- name: Create some arbitrary rule set but do not activate it\n  community.aws.aws_ses_rule_set:\n    name: arbitrary-rule-set\n    state: present\n\n- name: Explicitly deactivate the default rule set leaving no active rule set\n  community.aws.aws_ses_rule_set:\n    name: default-rule-set\n    state: present\n    active: no\n\n- name: Remove an arbitrary inactive rule set\n  community.aws.aws_ses_rule_set:\n    name: arbitrary-rule-set\n    state: absent\n\n- name: Remove an ruleset even if we have to first deactivate it to remove it\n  community.aws.aws_ses_rule_set:\n    name: default-rule-set\n    state: absent\n    force: yes\n"
  },
  "community.aws.aws_sgw_facts": {
    "doc": {
      "description": "Fetch AWS Storage Gateway information\nThis module was called C(aws_sgw_facts) before Ansible 2.9. The usage did not change.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "gather_file_shares": {
          "aliases": [],
          "description": "Gather file share information for storage gateways in s3 mode.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "gather_local_disks": {
          "aliases": [],
          "description": "Gather local disks attached to the storage gateway.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "gather_tapes": {
          "aliases": [],
          "description": "Gather tape information for storage gateways in tape mode.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "gather_volumes": {
          "aliases": [],
          "description": "Gather volume information for storage gateways in iSCSI (cached & stored) modes.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Fetch AWS Storage Gateway information",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n- name: \"Get AWS storage gateway information\"\n  community.aws.aws_sgw_info:\n\n- name: \"Get AWS storage gateway information for region eu-west-3\"\n  community.aws.aws_sgw_info:\n    region: eu-west-3\n"
  },
  "community.aws.aws_sgw_info": {
    "doc": {
      "description": "Fetch AWS Storage Gateway information\nThis module was called C(aws_sgw_facts) before Ansible 2.9. The usage did not change.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "gather_file_shares": {
          "aliases": [],
          "description": "Gather file share information for storage gateways in s3 mode.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "gather_local_disks": {
          "aliases": [],
          "description": "Gather local disks attached to the storage gateway.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "gather_tapes": {
          "aliases": [],
          "description": "Gather tape information for storage gateways in tape mode.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "gather_volumes": {
          "aliases": [],
          "description": "Gather volume information for storage gateways in iSCSI (cached & stored) modes.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Fetch AWS Storage Gateway information",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n- name: \"Get AWS storage gateway information\"\n  community.aws.aws_sgw_info:\n\n- name: \"Get AWS storage gateway information for region eu-west-3\"\n  community.aws.aws_sgw_info:\n    region: eu-west-3\n"
  },
  "community.aws.aws_ssm_parameter_store": {
    "doc": {
      "description": "Manage key-value pairs in aws parameter store.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "decryption": {
          "aliases": [],
          "description": "Work with SecureString type to get plain text secrets",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "Parameter key description.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "key_id": {
          "aliases": [],
          "description": "AWS KMS key to decrypt the secrets.\nThe default key (C(alias/aws/ssm)) is automatically generated the first time it's requested.",
          "default": "alias/aws/ssm",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Parameter key name.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "overwrite_value": {
          "aliases": [],
          "description": "Option to overwrite an existing value if it already exists.",
          "default": "changed",
          "type": "str",
          "required": false,
          "choices": [
            "never",
            "changed",
            "always"
          ],
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Creates or modifies an existing parameter.\nDeletes a parameter.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "string_type": {
          "aliases": [],
          "description": "Parameter String type.",
          "default": "String",
          "type": "str",
          "required": false,
          "choices": [
            "String",
            "StringList",
            "SecureString"
          ],
          "suboptions": {}
        },
        "tier": {
          "aliases": [],
          "description": "Parameter store tier type.",
          "default": "Standard",
          "type": "str",
          "required": false,
          "choices": [
            "Standard",
            "Advanced",
            "Intelligent-Tiering"
          ],
          "version_added": "1.5.0",
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "value": {
          "aliases": [],
          "description": "Parameter value.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Manage key-value pairs in aws parameter store.",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create or update key/value pair in aws parameter store\n  community.aws.aws_ssm_parameter_store:\n    name: \"Hello\"\n    description: \"This is your first key\"\n    value: \"World\"\n\n- name: Delete the key\n  community.aws.aws_ssm_parameter_store:\n    name: \"Hello\"\n    state: absent\n\n- name: Create or update secure key/value pair with default kms key (aws/ssm)\n  community.aws.aws_ssm_parameter_store:\n    name: \"Hello\"\n    description: \"This is your first key\"\n    string_type: \"SecureString\"\n    value: \"World\"\n\n- name: Create or update secure key/value pair with nominated kms key\n  community.aws.aws_ssm_parameter_store:\n    name: \"Hello\"\n    description: \"This is your first key\"\n    string_type: \"SecureString\"\n    key_id: \"alias/demo\"\n    value: \"World\"\n\n- name: Always update a parameter store value and create a new version\n  community.aws.aws_ssm_parameter_store:\n    name: \"overwrite_example\"\n    description: \"This example will always overwrite the value\"\n    string_type: \"String\"\n    value: \"Test1234\"\n    overwrite_value: \"always\"\n\n- name: Create or update key/value pair in aws parameter store with tier\n  community.aws.aws_ssm_parameter_store:\n    name: \"Hello\"\n    description: \"This is your first key\"\n    value: \"World\"\n    tier: \"Advanced\"\n\n- name: recommend to use with aws_ssm lookup plugin\n  ansible.builtin.debug:\n    msg: \"{{ lookup('amazon.aws.aws_ssm', 'hello') }}\"\n"
  },
  "community.aws.aws_step_functions_state_machine": {
    "doc": {
      "description": "Create, update and delete state machines in AWS Step Functions.\nCalling the module in C(state=present) for an existing AWS Step Functions state machine will attempt to update the state machine definition, IAM Role, or tags with the provided data.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "definition": {
          "aliases": [],
          "description": "The Amazon States Language definition of the state machine. See U(https://docs.aws.amazon.com/step-functions/latest/dg/concepts-amazon-states-language.html) for more information on the Amazon States Language.\nThis parameter is required when C(state=present).",
          "type": "json",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the state machine",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "purge_tags": {
          "aliases": [],
          "description": "If yes, existing tags will be purged from the resource to match exactly what is defined by I(tags) parameter. If the I(tags) parameter is not set then tags will not be modified.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "role_arn": {
          "aliases": [],
          "description": "The ARN of the IAM Role that will be used by the state machine for its executions.\nThis parameter is required when C(state=present).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Desired state for the state machine",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "A hash/dictionary of tags to add to the new state machine or to add/remove from an existing one.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Manage AWS Step Functions state machines",
      "version_added": "1.0.0"
    },
    "examples": "\n# Create a new AWS Step Functions state machine\n- name: Setup HelloWorld state machine\n  community.aws.aws_step_functions_state_machine:\n    name: \"HelloWorldStateMachine\"\n    definition: \"{{ lookup('file','state_machine.json') }}\"\n    role_arn: arn:aws:iam::987654321012:role/service-role/invokeLambdaStepFunctionsRole\n    tags:\n      project: helloWorld\n\n# Update an existing state machine\n- name: Change IAM Role and tags of HelloWorld state machine\n  community.aws.aws_step_functions_state_machine:\n    name: HelloWorldStateMachine\n    definition: \"{{ lookup('file','state_machine.json') }}\"\n    role_arn: arn:aws:iam::987654321012:role/service-role/anotherStepFunctionsRole\n    tags:\n      otherTag: aDifferentTag\n\n# Remove the AWS Step Functions state machine\n- name: Delete HelloWorld state machine\n  community.aws.aws_step_functions_state_machine:\n    name: HelloWorldStateMachine\n    state: absent\n"
  },
  "community.aws.aws_step_functions_state_machine_execution": {
    "doc": {
      "description": "Start or stop execution of a state machine in AWS Step Functions.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "action": {
          "aliases": [],
          "description": "Desired action (start or stop) for a state machine execution.",
          "default": "start",
          "type": "str",
          "required": false,
          "choices": [
            "start",
            "stop"
          ],
          "suboptions": {}
        },
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cause": {
          "aliases": [],
          "description": "A detailed explanation of the cause for stopping the execution.",
          "default": "",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "error": {
          "aliases": [],
          "description": "The error code of the failure to pass in when stopping the execution.",
          "default": "",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "execution_arn": {
          "aliases": [],
          "description": "The ARN of the execution you wish to stop.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "execution_input": {
          "aliases": [],
          "description": "The JSON input data for the execution.",
          "default": "{}",
          "type": "json",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the execution.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state_machine_arn": {
          "aliases": [],
          "description": "The ARN of the state machine that will be executed.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Start or stop execution of an AWS Step Functions state machine.",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Start an execution of a state machine\n  community.aws.aws_step_functions_state_machine_execution:\n    name: an_execution_name\n    execution_input: '{ \"IsHelloWorldExample\": true }'\n    state_machine_arn: \"arn:aws:states:us-west-2:682285639423:stateMachine:HelloWorldStateMachine\"\n\n- name: Stop an execution of a state machine\n  community.aws.aws_step_functions_state_machine_execution:\n    action: stop\n    execution_arn: \"arn:aws:states:us-west-2:682285639423:execution:HelloWorldStateMachineCopy:a1e8e2b5-5dfe-d40e-d9e3-6201061047c8\"\n    cause: \"cause of task failure\"\n    error: \"error code of the failure\"\n"
  },
  "community.aws.aws_waf_condition": {
    "doc": {
      "description": "Read the AWS documentation for WAF U(https://aws.amazon.com/documentation/waf/)",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filters": {
          "aliases": [],
          "description": "A list of the filters against which to match.\nFor I(type=byte), valid keys are I(field_to_match), I(position), I(header), I(transformation) and I(target_string).\nFor I(type=geo), the only valid key is I(country).\nFor I(type=ip), the only valid key is I(ip_address).\nFor I(type=regex), valid keys are I(field_to_match), I(transformation) and I(regex_pattern).\nFor I(type=size), valid keys are I(field_to_match), I(transformation), I(comparison) and I(size).\nFor I(type=sql), valid keys are I(field_to_match) and I(transformation).\nFor I(type=xss), valid keys are I(field_to_match) and I(transformation).\nRequired when I(state=present).",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "comparison": {
              "aliases": [],
              "description": "What type of comparison to perform.\nOnly valid key when I(type=size).",
              "type": "str",
              "required": false,
              "choices": [
                "EQ",
                "NE",
                "LE",
                "LT",
                "GE",
                "GT"
              ],
              "suboptions": {}
            },
            "country": {
              "aliases": [],
              "description": "Value of geo constraint (typically a two letter country code).\nThe only valid key when I(type=geo).",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "field_to_match": {
              "aliases": [],
              "description": "The field upon which to perform the match.\nValid when I(type=byte), I(type=regex), I(type=sql) or I(type=xss).",
              "type": "str",
              "required": false,
              "choices": [
                "uri",
                "query_string",
                "header",
                "method",
                "body"
              ],
              "suboptions": {}
            },
            "header": {
              "aliases": [],
              "description": "Which specific header should be matched.\nRequired when I(field_to_match=header).\nValid when I(type=byte).",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "ip_address": {
              "aliases": [],
              "description": "An IP Address or CIDR to match.\nThe only valid key when I(type=ip).",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "position": {
              "aliases": [],
              "description": "Where in the field the match needs to occur.\nOnly valid when I(type=byte).",
              "type": "str",
              "required": false,
              "choices": [
                "exactly",
                "starts_with",
                "ends_with",
                "contains",
                "contains_word"
              ],
              "suboptions": {}
            },
            "regex_pattern": {
              "aliases": [],
              "description": "A dict describing the regular expressions used to perform the match.\nOnly valid when I(type=regex).",
              "type": "dict",
              "required": false,
              "suboptions": {
                "name": {
                  "aliases": [],
                  "description": "A name to describe the set of patterns.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "regex_strings": {
                  "aliases": [],
                  "description": "A list of regular expressions to match.",
                  "type": "list",
                  "required": false,
                  "elements": "str",
                  "suboptions": {}
                }
              }
            },
            "size": {
              "aliases": [],
              "description": "The size of the field (in bytes).\nOnly valid key when I(type=size).",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "target_string": {
              "aliases": [],
              "description": "The string to search for.\nMay be up to 50 bytes.\nValid when I(type=byte).",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "transformation": {
              "aliases": [],
              "description": "A transform to apply on the field prior to performing the match.\nValid when I(type=byte), I(type=regex), I(type=sql) or I(type=xss).",
              "type": "str",
              "required": false,
              "choices": [
                "none",
                "compress_white_space",
                "html_entity_decode",
                "lowercase",
                "cmd_line",
                "url_decode"
              ],
              "suboptions": {}
            }
          }
        },
        "name": {
          "aliases": [],
          "description": "Name of the Web Application Firewall condition to manage.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "purge_filters": {
          "aliases": [],
          "description": "Whether to remove existing filters from a condition if not passed in I(filters).",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the condition should be C(present) or C(absent).",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "type": {
          "aliases": [],
          "description": "The type of matching to perform.",
          "type": "str",
          "required": true,
          "choices": [
            "byte",
            "geo",
            "ip",
            "regex",
            "size",
            "sql",
            "xss"
          ],
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "waf_regional": {
          "aliases": [],
          "description": "Whether to use waf-regional module.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Create and delete WAF Conditions",
      "version_added": "1.0.0"
    },
    "examples": "\n  - name: create WAF byte condition\n    community.aws.aws_waf_condition:\n      name: my_byte_condition\n      filters:\n      - field_to_match: header\n        position: STARTS_WITH\n        target_string: Hello\n        header: Content-type\n      type: byte\n\n  - name: create WAF geo condition\n    community.aws.aws_waf_condition:\n      name: my_geo_condition\n      filters:\n        - country: US\n        - country: AU\n        - country: AT\n      type: geo\n\n  - name: create IP address condition\n    community.aws.aws_waf_condition:\n      name: \"{{ resource_prefix }}_ip_condition\"\n      filters:\n        - ip_address: \"10.0.0.0/8\"\n        - ip_address: \"192.168.0.0/24\"\n      type: ip\n\n  - name: create WAF regex condition\n    community.aws.aws_waf_condition:\n      name: my_regex_condition\n      filters:\n        - field_to_match: query_string\n          regex_pattern:\n            name: greetings\n            regex_strings:\n              - '[hH]ello'\n              - '^Hi there'\n              - '.*Good Day to You'\n      type: regex\n\n  - name: create WAF size condition\n    community.aws.aws_waf_condition:\n      name: my_size_condition\n      filters:\n        - field_to_match: query_string\n          size: 300\n          comparison: GT\n      type: size\n\n  - name: create WAF sql injection condition\n    community.aws.aws_waf_condition:\n      name: my_sql_condition\n      filters:\n        - field_to_match: query_string\n          transformation: url_decode\n      type: sql\n\n  - name: create WAF xss condition\n    community.aws.aws_waf_condition:\n      name: my_xss_condition\n      filters:\n        - field_to_match: query_string\n          transformation: url_decode\n      type: xss\n\n"
  },
  "community.aws.aws_waf_facts": {
    "doc": {
      "description": "Retrieve information for WAF ACLs, Rule , Conditions and Filters.\nThis module was called C(aws_waf_facts) before Ansible 2.9. The usage did not change.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of a Web Application Firewall.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "waf_regional": {
          "aliases": [],
          "description": "Whether to use the waf-regional module.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Retrieve information for WAF ACLs, Rule , Conditions and Filters.",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: obtain all WAF information\n  community.aws.aws_waf_info:\n\n- name: obtain all information for a single WAF\n  community.aws.aws_waf_info:\n    name: test_waf\n\n- name: obtain all information for a single WAF Regional\n  community.aws.aws_waf_info:\n    name: test_waf\n    waf_regional: true\n"
  },
  "community.aws.aws_waf_info": {
    "doc": {
      "description": "Retrieve information for WAF ACLs, Rule , Conditions and Filters.\nThis module was called C(aws_waf_facts) before Ansible 2.9. The usage did not change.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of a Web Application Firewall.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "waf_regional": {
          "aliases": [],
          "description": "Whether to use the waf-regional module.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Retrieve information for WAF ACLs, Rule , Conditions and Filters.",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: obtain all WAF information\n  community.aws.aws_waf_info:\n\n- name: obtain all information for a single WAF\n  community.aws.aws_waf_info:\n    name: test_waf\n\n- name: obtain all information for a single WAF Regional\n  community.aws.aws_waf_info:\n    name: test_waf\n    waf_regional: true\n"
  },
  "community.aws.aws_waf_rule": {
    "doc": {
      "description": "Read the AWS documentation for WAF U(https://aws.amazon.com/documentation/waf/).",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "conditions": {
          "aliases": [],
          "description": "List of conditions used in the rule. M(community.aws.aws_waf_condition) can be used to create new conditions.\n",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "condition": {
              "aliases": [],
              "description": "The name of the condition.  The condition must already exist.",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "negated": {
              "aliases": [],
              "description": "Whether the condition should be negated.",
              "type": "bool",
              "required": true,
              "suboptions": {}
            },
            "type": {
              "aliases": [],
              "description": "The type of rule to match.",
              "type": "str",
              "required": true,
              "choices": [
                "byte",
                "geo",
                "ip",
                "size",
                "sql",
                "xss"
              ],
              "suboptions": {}
            }
          }
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "metric_name": {
          "aliases": [],
          "description": "A friendly name or description for the metrics for the rule.\nThe name can contain only alphanumeric characters (A-Z, a-z, 0-9); the name can't contain whitespace.\nYou can't change I(metric_name) after you create the rule.\nDefaults to the same as I(name) with disallowed characters removed.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the Web Application Firewall rule.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "purge_conditions": {
          "aliases": [],
          "description": "Whether or not to remove conditions that are not passed when updating `conditions`.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the rule should be present or absent.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "waf_regional": {
          "aliases": [],
          "description": "Whether to use waf-regional module.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Create and delete WAF Rules",
      "version_added": "1.0.0"
    },
    "examples": "\n  - name: create WAF rule\n    community.aws.aws_waf_rule:\n      name: my_waf_rule\n      conditions:\n        - name: my_regex_condition\n          type: regex\n          negated: no\n        - name: my_geo_condition\n          type: geo\n          negated: no\n        - name: my_byte_condition\n          type: byte\n          negated: yes\n\n  - name: remove WAF rule\n    community.aws.aws_waf_rule:\n      name: \"my_waf_rule\"\n      state: absent\n"
  },
  "community.aws.aws_waf_web_acl": {
    "doc": {
      "description": "Read the AWS documentation for WAF U(https://aws.amazon.com/documentation/waf/).",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "default_action": {
          "aliases": [],
          "description": "The action that you want AWS WAF to take when a request doesn't match the criteria specified in any of the Rule objects that are associated with the WebACL.",
          "type": "str",
          "required": false,
          "choices": [
            "block",
            "allow",
            "count"
          ],
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "metric_name": {
          "aliases": [],
          "description": "A friendly name or description for the metrics for this WebACL.\nThe name can contain only alphanumeric characters (A-Z, a-z, 0-9); the name can't contain whitespace.\nYou can't change I(metric_name) after you create the WebACL.\nMetric name will default to I(name) with disallowed characters stripped out.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the Web Application Firewall ACL to manage.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "purge_rules": {
          "aliases": [],
          "description": "Whether to remove rules that aren't passed with I(rules).",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "rules": {
          "aliases": [],
          "description": "A list of rules that the Web ACL will enforce.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "action": {
              "aliases": [],
              "description": "The action to perform.",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "name": {
              "aliases": [],
              "description": "Name of the rule.",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "priority": {
              "aliases": [],
              "description": "The priority of the action.  Priorities must be unique. Lower numbered priorities are evaluated first.",
              "type": "int",
              "required": true,
              "suboptions": {}
            },
            "type": {
              "aliases": [],
              "description": "The type of rule.",
              "type": "str",
              "required": false,
              "choices": [
                "rate_based",
                "regular"
              ],
              "suboptions": {}
            }
          }
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the Web ACL should be present or absent.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "waf_regional": {
          "aliases": [],
          "description": "Whether to use waf-regional module.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Create and delete WAF Web ACLs.",
      "version_added": "1.0.0"
    },
    "examples": "\n  - name: create web ACL\n    community.aws.aws_waf_web_acl:\n      name: my_web_acl\n      rules:\n        - name: my_rule\n          priority: 1\n          action: block\n      default_action: block\n      purge_rules: yes\n      state: present\n\n  - name: delete the web acl\n    community.aws.aws_waf_web_acl:\n      name: my_web_acl\n      state: absent\n"
  },
  "community.aws.cloudformation_exports_info": {
    "doc": {
      "description": "Module retrieves a value from CloudFormation Exports",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Read a value from CloudFormation Exports",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Get Exports\n  community.aws.cloudformation_exports_info:\n    profile: 'my_aws_profile'\n    region: 'my_region'\n  register: cf_exports\n- ansible.builtin.debug:\n    msg: \"{{ cf_exports }}\"\n"
  },
  "community.aws.cloudformation_stack_set": {
    "doc": {
      "description": "Launches/updates/deletes AWS CloudFormation Stack Sets.",
      "has_action": false,
      "notes": "To make an individual stack, you want the M(amazon.aws.cloudformation) module.\nIf parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "accounts": {
          "aliases": [],
          "description": "A list of AWS accounts in which to create instance of CloudFormation stacks.\nAt least one region must be specified to create a stack set. On updates, if fewer regions are specified only the specified regions will have their stack instances updated.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "administration_role_arn": {
          "aliases": [
            "admin_role_arn",
            "admin_role",
            "administration_role"
          ],
          "description": "ARN of the administration role, meaning the role that CloudFormation Stack Sets use to assume the roles in your child accounts.\nThis defaults to C(arn:aws:iam::{{ account ID }}:role/AWSCloudFormationStackSetAdministrationRole) where C({{ account ID }}) is replaced with the account number of the current IAM role/user/STS credentials.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "capabilities": {
          "aliases": [],
          "description": "Capabilities allow stacks to create and modify IAM resources, which may include adding users or roles.\nCurrently the only available values are 'CAPABILITY_IAM' and 'CAPABILITY_NAMED_IAM'. Either or both may be provided.\nThe following resources require that one or both of these parameters is specified: AWS::IAM::AccessKey, AWS::IAM::Group, AWS::IAM::InstanceProfile, AWS::IAM::Policy, AWS::IAM::Role, AWS::IAM::User, AWS::IAM::UserToGroupAddition\n",
          "type": "list",
          "required": false,
          "choices": [
            "CAPABILITY_IAM",
            "CAPABILITY_NAMED_IAM"
          ],
          "elements": "str",
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "A description of what this stack set creates.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "execution_role_name": {
          "aliases": [
            "exec_role_name",
            "exec_role",
            "execution_role"
          ],
          "description": "ARN of the execution role, meaning the role that CloudFormation Stack Sets assumes in your child accounts.\nThis MUST NOT be an ARN, and the roles must exist in each child account specified.\nThe default name for the execution role is C(AWSCloudFormationStackSetExecutionRole)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "failure_tolerance": {
          "aliases": [],
          "description": "Settings to change what is considered \"failed\" when running stack instance updates, and how many to do at a time.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "fail_count": {
              "aliases": [],
              "description": "The number of accounts, per region, for which this operation can fail before CloudFormation stops the operation in that region.\nYou must specify one of I(fail_count) and I(fail_percentage).",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "fail_percentage": {
              "aliases": [],
              "description": "The percentage of accounts, per region, for which this stack operation can fail before CloudFormation stops the operation in that region.\nYou must specify one of I(fail_count) and I(fail_percentage).",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "parallel_count": {
              "aliases": [],
              "description": "The maximum number of accounts in which to perform this operation at one time.\nI(parallel_count) may be at most one more than the I(fail_count).\nYou must specify one of I(parallel_count) and I(parallel_percentage).\nNote that this setting lets you specify the maximum for operations. For large deployments, under certain circumstances the actual count may be lower.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "parallel_percentage": {
              "aliases": [],
              "description": "The maximum percentage of accounts in which to perform this operation at one time.\nYou must specify one of I(parallel_count) and I(parallel_percentage).\nNote that this setting lets you specify the maximum for operations. For large deployments, under certain circumstances the actual percentage may be lower.",
              "type": "int",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "name": {
          "aliases": [],
          "description": "Name of the CloudFormation stack set.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "parameters": {
          "aliases": [],
          "description": "A list of hashes of all the template variables for the stack. The value can be a string or a dict.\nDict can be used to set additional template parameter attributes like UsePreviousValue (see example).",
          "default": "{}",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "purge_stacks": {
          "aliases": [],
          "description": "Only applicable when I(state=absent). Sets whether, when deleting a stack set, the stack instances should also be deleted.\nBy default, instances will be deleted. To keep stacks when stack set is deleted set I(purge_stacks=false).",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "regions": {
          "aliases": [],
          "description": "A list of AWS regions to create instances of a stack in. The I(region) parameter chooses where the Stack Set is created, and I(regions) specifies the region for stack instances.\nAt least one region must be specified to create a stack set. On updates, if fewer regions are specified only the specified regions will have their stack instances updated.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "If I(state=present), stack will be created.  If I(state=present) and if stack exists and template has changed, it will be updated. If I(state=absent), stack will be removed.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of tags to associate with stack and its resources during stack creation.\nCan be updated later, updating tags removes previous entries.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "template": {
          "aliases": [],
          "description": "The local path of the CloudFormation template.\nThis must be the full path to the file, relative to the working directory. If using roles this may look like C(roles/cloudformation/files/cloudformation-example.json).\nIf I(state=present) and the stack does not exist yet, either I(template), I(template_body) or I(template_url) must be specified (but only one of them).\nIf I(state=present), the stack does exist, and neither I(template), I(template_body) nor I(template_url) are specified, the previous template will be reused.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "template_body": {
          "aliases": [],
          "description": "Template body. Use this to pass in the actual body of the CloudFormation template.\nIf I(state=present) and the stack does not exist yet, either I(template), I(template_body) or I(template_url) must be specified (but only one of them).\nIf I(state=present), the stack does exist, and neither I(template), I(template_body) nor I(template_url) are specified, the previous template will be reused.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "template_url": {
          "aliases": [],
          "description": "Location of file containing the template body.\nThe URL must point to a template (max size 307,200 bytes) located in an S3 bucket in the same region as the stack.\nIf I(state=present) and the stack does not exist yet, either I(template), I(template_body) or I(template_url) must be specified (but only one of them).\nIf I(state=present), the stack does exist, and neither I(template), I(template_body) nor I(template_url) are specified, the previous template will be reused.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "wait": {
          "aliases": [],
          "description": "Whether or not to wait for stack operation to complete. This includes waiting for stack instances to reach UPDATE_COMPLETE status.\nIf you choose not to wait, this module will not notify when stack operations fail because it will not wait for them to finish.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "wait_timeout": {
          "aliases": [],
          "description": "How long to wait (in seconds) for stacks to complete create/update/delete operations.",
          "default": "900",
          "type": "int",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Manage groups of CloudFormation stacks",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create a stack set with instances in two accounts\n  community.aws.cloudformation_stack_set:\n    name: my-stack\n    description: Test stack in two accounts\n    state: present\n    template_url: https://s3.amazonaws.com/my-bucket/cloudformation.template\n    accounts: [1234567890, 2345678901]\n    regions:\n    - us-east-1\n\n- name: on subsequent calls, templates are optional but parameters and tags can be altered\n  community.aws.cloudformation_stack_set:\n    name: my-stack\n    state: present\n    parameters:\n      InstanceName: my_stacked_instance\n    tags:\n      foo: bar\n      test: stack\n    accounts: [1234567890, 2345678901]\n    regions:\n    - us-east-1\n\n- name: The same type of update, but wait for the update to complete in all stacks\n  community.aws.cloudformation_stack_set:\n    name: my-stack\n    state: present\n    wait: true\n    parameters:\n      InstanceName: my_restacked_instance\n    tags:\n      foo: bar\n      test: stack\n    accounts: [1234567890, 2345678901]\n    regions:\n    - us-east-1\n"
  },
  "community.aws.cloudfront_distribution": {
    "doc": {
      "description": "Allows for easy creation, updating and deletion of CloudFront distributions.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "alias": {
          "aliases": [],
          "description": "The name of an alias (CNAME) that is used in a distribution. This is used to effectively reference a distribution by its alias as an alias can only be used by one distribution per AWS account. This variable avoids having to provide the I(distribution_id) as well as the I(e_tag), or I(caller_reference) of an existing distribution.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aliases": {
          "aliases": [],
          "description": "A list of domain name aliases (CNAMEs) as strings to be used for the distribution.\nEach alias must be unique across all distribution for the AWS account.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cache_behaviors": {
          "aliases": [],
          "description": "A list of dictionaries describing the cache behaviors for the distribution.\nThe order of the list is preserved across runs unless I(purge_cache_behaviors) is enabled.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "forwarded_values": {
              "aliases": [],
              "description": "A dict that specifies how CloudFront handles query strings and cookies.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "allowed_methods": {
                  "aliases": [],
                  "description": "A dict that controls which HTTP methods CloudFront processes and forwards.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "cached_methods": {
                      "aliases": [],
                      "description": "A list of HTTP methods that you want CloudFront to apply caching to.\nThis can either be C([GET,HEAD]), or C([GET,HEAD,OPTIONS]).",
                      "type": "list",
                      "required": false,
                      "elements": "str",
                      "suboptions": {}
                    },
                    "items": {
                      "aliases": [],
                      "description": "A list of HTTP methods that you want CloudFront to process and forward.",
                      "type": "list",
                      "required": false,
                      "elements": "str",
                      "suboptions": {}
                    }
                  }
                },
                "compress": {
                  "aliases": [],
                  "description": "Whether you want CloudFront to automatically compress files.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "cookies": {
                  "aliases": [],
                  "description": "A dict that specifies whether you want CloudFront to forward cookies to the origin and, if so, which ones.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "forward": {
                      "aliases": [],
                      "description": "Specifies which cookies to forward to the origin for this cache behavior.\nValid values are C(all), C(none), or C(whitelist).",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "whitelisted_names": {
                      "aliases": [],
                      "description": "A list of cookies to forward to the origin for this cache behavior.",
                      "type": "list",
                      "required": false,
                      "elements": "str",
                      "suboptions": {}
                    }
                  }
                },
                "default_ttl": {
                  "aliases": [],
                  "description": "The default amount of time that you want objects to stay in CloudFront caches.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "field_level_encryption_id": {
                  "aliases": [],
                  "description": "The field-level encryption configuration that you want CloudFront to use for encrypting specific fields of data.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "headers": {
                  "aliases": [],
                  "description": "A list of headers to forward to the origin for this cache behavior.\nTo forward all headers use a list containing a single element '*' (C(['*']))",
                  "type": "list",
                  "required": false,
                  "elements": "str",
                  "suboptions": {}
                },
                "lambda_function_associations": {
                  "aliases": [],
                  "description": "A list of Lambda function associations to use for this cache behavior.",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "event_type": {
                      "aliases": [],
                      "description": "Specifies the event type that triggers a Lambda function invocation.\nThis can be C(viewer-request), C(origin-request), C(origin-response) or C(viewer-response).",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "lambda_function_arn": {
                      "aliases": [],
                      "description": "The ARN of the Lambda function.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "max_ttl": {
                  "aliases": [],
                  "description": "The maximum amount of time that you want objects to stay in CloudFront caches.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "min_ttl": {
                  "aliases": [],
                  "description": "The minimum amount of time that you want objects to stay in CloudFront caches.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "query_string": {
                  "aliases": [],
                  "description": "Indicates whether you want CloudFront to forward query strings to the origin that is associated with this cache behavior.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "query_string_cache_keys": {
                  "aliases": [],
                  "description": "A list that contains the query string parameters you want CloudFront to use as a basis for caching for a cache behavior.",
                  "type": "list",
                  "required": false,
                  "elements": "str",
                  "suboptions": {}
                },
                "smooth_streaming": {
                  "aliases": [],
                  "description": "Whether you want to distribute media files in the Microsoft Smooth Streaming format.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "trusted_signers": {
                  "aliases": [],
                  "description": "A dict that specifies the AWS accounts that you want to allow to create signed URLs for private content.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "enabled": {
                      "aliases": [],
                      "description": "Whether you want to require viewers to use signed URLs to access the files specified by I(path_pattern) and I(target_origin_id)",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "items": {
                      "aliases": [],
                      "description": "A list of trusted signers for this cache behavior.",
                      "type": "list",
                      "required": false,
                      "elements": "str",
                      "suboptions": {}
                    }
                  }
                },
                "viewer_protocol_policy": {
                  "aliases": [],
                  "description": "The protocol that viewers can use to access the files in the origin specified by I(target_origin_id) when a request matches I(path_pattern).\nValid values are C(allow-all), C(redirect-to-https) and C(https-only).",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "path_pattern": {
              "aliases": [],
              "description": "The pattern that specifies which requests to apply the behavior to.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "target_origin_id": {
              "aliases": [],
              "description": "The ID of the origin that you want CloudFront to route requests to by default.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "caller_reference": {
          "aliases": [],
          "description": "A unique identifier for creating and updating CloudFront distributions.\nEach caller reference must be unique across all distributions. e.g. a caller reference used in a web distribution cannot be reused in a streaming distribution. This parameter can be used instead of I(distribution_id) to reference an existing distribution. If not specified, this defaults to a datetime stamp of the format C(YYYY-MM-DDTHH:MM:SS.ffffff).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "comment": {
          "aliases": [],
          "description": "A comment that describes the CloudFront distribution.\nIf not specified, it defaults to a generic message that it has been created with Ansible, and a datetime stamp.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "custom_error_responses": {
          "aliases": [],
          "description": "A config element that is a I(list[]) of complex custom error responses to be specified for the distribution.\nThis attribute configures custom http error messages returned to the user.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "error_caching_min_ttl": {
              "aliases": [],
              "description": "The length of time (in seconds) that CloudFront will cache status codes for.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "error_code": {
              "aliases": [],
              "description": "The error code the custom error page is for.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "response_code": {
              "aliases": [],
              "description": "The HTTP status code that CloudFront should return to a user when the origin returns the HTTP status code specified by I(error_code).",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "response_page_path": {
              "aliases": [],
              "description": "The path to the custom error page that you want CloudFront to return to a viewer when your origin returns the HTTP status code specified by I(error_code).",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "default_cache_behavior": {
          "aliases": [],
          "description": "A dict specifying the default cache behavior of the distribution.\nIf not specified, the I(target_origin_id) is defined as the I(target_origin_id) of the first valid cache_behavior in I(cache_behaviors) with defaults.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "forwarded_values": {
              "aliases": [],
              "description": "A dict that specifies how CloudFront handles query strings and cookies.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "allowed_methods": {
                  "aliases": [],
                  "description": "A dict that controls which HTTP methods CloudFront processes and forwards.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "cached_methods": {
                      "aliases": [],
                      "description": "A list of HTTP methods that you want CloudFront to apply caching to.\nThis can either be C([GET,HEAD]), or C([GET,HEAD,OPTIONS]).",
                      "type": "list",
                      "required": false,
                      "elements": "str",
                      "suboptions": {}
                    },
                    "items": {
                      "aliases": [],
                      "description": "A list of HTTP methods that you want CloudFront to process and forward.",
                      "type": "list",
                      "required": false,
                      "elements": "str",
                      "suboptions": {}
                    }
                  }
                },
                "compress": {
                  "aliases": [],
                  "description": "Whether you want CloudFront to automatically compress files.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "cookies": {
                  "aliases": [],
                  "description": "A dict that specifies whether you want CloudFront to forward cookies to the origin and, if so, which ones.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "forward": {
                      "aliases": [],
                      "description": "Specifies which cookies to forward to the origin for this cache behavior.\nValid values are C(all), C(none), or C(whitelist).",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "whitelisted_names": {
                      "aliases": [],
                      "description": "A list of cookies to forward to the origin for this cache behavior.",
                      "type": "list",
                      "required": false,
                      "elements": "str",
                      "suboptions": {}
                    }
                  }
                },
                "default_ttl": {
                  "aliases": [],
                  "description": "The default amount of time that you want objects to stay in CloudFront caches.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "field_level_encryption_id": {
                  "aliases": [],
                  "description": "The field-level encryption configuration that you want CloudFront to use for encrypting specific fields of data.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "headers": {
                  "aliases": [],
                  "description": "A list of headers to forward to the origin for this cache behavior.\nTo forward all headers use a list containing a single element '*' (C(['*']))",
                  "type": "list",
                  "required": false,
                  "elements": "str",
                  "suboptions": {}
                },
                "lambda_function_associations": {
                  "aliases": [],
                  "description": "A list of Lambda function associations to use for this cache behavior.",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "event_type": {
                      "aliases": [],
                      "description": "Specifies the event type that triggers a Lambda function invocation.\nThis can be C(viewer-request), C(origin-request), C(origin-response) or C(viewer-response).",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "lambda_function_arn": {
                      "aliases": [],
                      "description": "The ARN of the Lambda function.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "max_ttl": {
                  "aliases": [],
                  "description": "The maximum amount of time that you want objects to stay in CloudFront caches.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "min_ttl": {
                  "aliases": [],
                  "description": "The minimum amount of time that you want objects to stay in CloudFront caches.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "query_string": {
                  "aliases": [],
                  "description": "Indicates whether you want CloudFront to forward query strings to the origin that is associated with this cache behavior.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "query_string_cache_keys": {
                  "aliases": [],
                  "description": "A list that contains the query string parameters you want CloudFront to use as a basis for caching for a cache behavior.",
                  "type": "list",
                  "required": false,
                  "elements": "str",
                  "suboptions": {}
                },
                "smooth_streaming": {
                  "aliases": [],
                  "description": "Whether you want to distribute media files in the Microsoft Smooth Streaming format.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "trusted_signers": {
                  "aliases": [],
                  "description": "A dict that specifies the AWS accounts that you want to allow to create signed URLs for private content.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "enabled": {
                      "aliases": [],
                      "description": "Whether you want to require viewers to use signed URLs to access the files specified by I(target_origin_id)",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "items": {
                      "aliases": [],
                      "description": "A list of trusted signers for this cache behavior.",
                      "type": "list",
                      "required": false,
                      "elements": "str",
                      "suboptions": {}
                    }
                  }
                },
                "viewer_protocol_policy": {
                  "aliases": [],
                  "description": "The protocol that viewers can use to access the files in the origin specified by I(target_origin_id).\nValid values are C(allow-all), C(redirect-to-https) and C(https-only).",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "target_origin_id": {
              "aliases": [],
              "description": "The ID of the origin that you want CloudFront to route requests to by default.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "default_origin_domain_name": {
          "aliases": [],
          "description": "The domain name to use for an origin if no I(origins) have been specified.\nShould only be used on a first run of generating a distribution and not on subsequent runs.\nShould not be used in conjunction with I(distribution_id), I(caller_reference) or I(alias).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "default_origin_path": {
          "aliases": [],
          "description": "The default origin path to specify for an origin if no I(origins) have been specified. Defaults to empty if not specified.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "default_root_object": {
          "aliases": [],
          "description": "A config element that specifies the path to request when the user requests the origin.\ne.g. if specified as 'index.html', this maps to www.example.com/index.html when www.example.com is called by the user.\nThis prevents the entire distribution origin from being exposed at the root.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "distribution_id": {
          "aliases": [],
          "description": "The ID of the CloudFront distribution.\nThis parameter can be exchanged with I(alias) or I(caller_reference) and is used in conjunction with I(e_tag).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "e_tag": {
          "aliases": [],
          "description": "A unique identifier of a modified or existing distribution. Used in conjunction with I(distribution_id).\nIs determined automatically if not specified.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "enabled": {
          "aliases": [],
          "description": "A boolean value that specifies whether the distribution is enabled or disabled.\nDefaults to C(false).",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "http_version": {
          "aliases": [],
          "description": "The version of the http protocol to use for the distribution.\nAWS defaults this to C(http2).\nValid values are C(http1.1) and C(http2).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ipv6_enabled": {
          "aliases": [],
          "description": "Determines whether IPv6 support is enabled or not.\nDefaults to C(false).",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "logging": {
          "aliases": [],
          "description": "A config element that is a complex object that defines logging for the distribution.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "bucket": {
              "aliases": [],
              "description": "The S3 bucket to store the log in.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "enabled": {
              "aliases": [],
              "description": "When I(enabled=true) CloudFront will log access to an S3 bucket.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "include_cookies": {
              "aliases": [],
              "description": "When I(include_cookies=true) CloudFront will include cookies in the logs.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "prefix": {
              "aliases": [],
              "description": "A prefix to include in the S3 object names.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "origins": {
          "aliases": [],
          "description": "A config element that is a list of complex origin objects to be specified for the distribution. Used for creating and updating distributions.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "custom_headers": {
              "aliases": [],
              "description": "Custom headers you wish to add to the request before passing it to the origin.\nFor more information see the CloudFront documentation at U(https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/forward-custom-headers.html).",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "header_name": {
                  "aliases": [],
                  "description": "The name of a header that you want CloudFront to forward to your origin.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "header_value": {
                  "aliases": [],
                  "description": "The value for the header that you specified in the I(header_name) field.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "custom_origin_config": {
              "aliases": [],
              "description": "Connection information about the origin.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "http_port": {
                  "aliases": [],
                  "description": "The HTTP port the custom origin listens on.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "https_port": {
                  "aliases": [],
                  "description": "The HTTPS port the custom origin listens on.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "origin_keepalive_timeout": {
                  "aliases": [],
                  "description": "A keep-alive timeout (in seconds).",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "origin_protocol_policy": {
                  "aliases": [],
                  "description": "The origin protocol policy to apply to your origin.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "origin_read_timeout": {
                  "aliases": [],
                  "description": "A timeout (in seconds) when reading from your origin.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "origin_ssl_protocols": {
                  "aliases": [],
                  "description": "A list of SSL/TLS protocols that you want CloudFront to use when communicating to the origin over HTTPS.",
                  "type": "list",
                  "required": false,
                  "elements": "str",
                  "suboptions": {}
                }
              }
            },
            "domain_name": {
              "aliases": [],
              "description": "The domain name which CloudFront will query as the origin.\nFor more information see the CloudFront documentation at U(https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesDomainName)",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "id": {
              "aliases": [],
              "description": "A unique identifier for the origin or origin group. I(id) must be unique within the distribution.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "origin_path": {
              "aliases": [],
              "description": "Tells CloudFront to request your content from a directory in your Amazon S3 bucket or your custom origin.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "s3_origin_access_identity_enabled": {
              "aliases": [],
              "description": "Use an origin access identity to configure the origin so that viewers can only access objects in an Amazon S3 bucket through CloudFront.\nWill automatically create an Identity for you if no I(s3_origin_config) is specified.\nSee also U(https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html).",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "s3_origin_config": {
              "aliases": [],
              "description": "Specify origin access identity for S3 origins.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "origin_access_identity": {
                  "aliases": [],
                  "description": "Existing origin access identity in the format C(origin-access-identity/cloudfront/OID_ID).",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            }
          }
        },
        "price_class": {
          "aliases": [],
          "description": "A string that specifies the pricing class of the distribution. As per U(https://aws.amazon.com/cloudfront/pricing/)\nI(price_class=PriceClass_100) consists of the areas United States, Canada and Europe.\nI(price_class=PriceClass_200) consists of the areas United States, Canada, Europe, Japan, India, Hong Kong, Philippines, S. Korea, Singapore & Taiwan.\nI(price_class=PriceClass_All) consists of the areas United States, Canada, Europe, Japan, India, South America, Australia, Hong Kong, Philippines, S. Korea, Singapore & Taiwan.\nAWS defaults this to C(PriceClass_All).\nValid values are C(PriceClass_100), C(PriceClass_200) and C(PriceClass_All)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "purge_aliases": {
          "aliases": [],
          "description": "Specifies whether existing aliases will be removed before adding new aliases.\nWhen I(purge_aliases=yes), existing aliases are removed and I(aliases) are added.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "purge_cache_behaviors": {
          "aliases": [],
          "description": "Whether to remove any cache behaviors that aren't listed in I(cache_behaviors).\nThis switch also allows the reordering of I(cache_behaviors).",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "purge_custom_error_responses": {
          "aliases": [],
          "description": "Whether to remove any custom error responses that aren't listed in I(custom_error_responses).",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "purge_origins": {
          "aliases": [],
          "description": "Whether to remove any origins that aren't listed in I(origins).",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "purge_tags": {
          "aliases": [],
          "description": "Specifies whether existing tags will be removed before adding new tags.\nWhen I(purge_tags=yes), existing tags are removed and I(tags) are added, if specified. If no tags are specified, it removes all existing tags for the distribution.\nWhen I(purge_tags=no), existing tags are kept and I(tags) are added, if specified.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "restrictions": {
          "aliases": [],
          "description": "A config element that is a complex object that describes how a distribution should restrict it's content.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "geo_restriction": {
              "aliases": [],
              "description": "Apply a restriction based on the location of the requester.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "items": {
                  "aliases": [],
                  "description": "A list of ISO 3166-1 two letter (Alpha 2) country codes that the restriction should apply to.\nSee the ISO website for a full list of codes U(https://www.iso.org/obp/ui/#search/code/).",
                  "type": "list",
                  "required": false,
                  "suboptions": {}
                },
                "restriction_type": {
                  "aliases": [],
                  "description": "The method that you want to use to restrict distribution of your content by country.\nValid values are C(none), C(whitelist), C(blacklist).",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            }
          }
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The desired state of the distribution.\nI(state=present) creates a new distribution or updates an existing distribution.\nI(state=absent) deletes an existing distribution.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Should be input as a dict of key-value pairs.\nNote that numeric keys or values must be wrapped in quotes. e.g. C(Priority: '1')",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "viewer_certificate": {
          "aliases": [],
          "description": "A dict that specifies the encryption details of the distribution.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "acm_certificate_arn": {
              "aliases": [],
              "description": "The ID of a certificate stored in ACM to use for HTTPS connections.\nIf I(acm_certificate_id) is set then you must also specify I(ssl_support_method).",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "cloudfront_default_certificate": {
              "aliases": [],
              "description": "If you're using the CloudFront domain name for your distribution, such as C(123456789abcde.cloudfront.net) you should set I(cloudfront_default_certificate=true).\nIf I(cloudfront_default_certificate=true) do not set I(ssl_support_method).",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "iam_certificate_id": {
              "aliases": [],
              "description": "The ID of a certificate stored in IAM to use for HTTPS connections.\nIf I(iam_certificate_id) is set then you must also specify I(ssl_support_method).",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "minimum_protocol_version": {
              "aliases": [],
              "description": "The security policy that you want CloudFront to use for HTTPS connections.\nSee U(https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/secure-connections-supported-viewer-protocols-ciphers.html) for supported security policies.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "ssl_support_method": {
              "aliases": [],
              "description": "How CloudFront should serve SSL certificates.\nValid values are C(sni-only) for SNI, and C(vip) if CloudFront is configured to use a dedicated IP for your content.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "wait": {
          "aliases": [],
          "description": "Specifies whether the module waits until the distribution has completed processing the creation or update.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "wait_timeout": {
          "aliases": [],
          "description": "Specifies the duration in seconds to wait for a timeout of a cloudfront create or update.",
          "default": "1800",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "web_acl_id": {
          "aliases": [],
          "description": "The ID of a Web Application Firewall (WAF) Access Control List (ACL).",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Create, update and delete AWS CloudFront distributions.",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: create a basic distribution with defaults and tags\n  community.aws.cloudfront_distribution:\n    state: present\n    default_origin_domain_name: www.my-cloudfront-origin.com\n    tags:\n      Name: example distribution\n      Project: example project\n      Priority: '1'\n\n- name: update a distribution comment by distribution_id\n  community.aws.cloudfront_distribution:\n    state: present\n    distribution_id: E1RP5A2MJ8073O\n    comment: modified by ansible cloudfront.py\n\n- name: update a distribution comment by caller_reference\n  community.aws.cloudfront_distribution:\n    state: present\n    caller_reference: my cloudfront distribution 001\n    comment: modified by ansible cloudfront.py\n\n- name: update a distribution's aliases and comment using the distribution_id as a reference\n  community.aws.cloudfront_distribution:\n    state: present\n    distribution_id: E1RP5A2MJ8073O\n    comment: modified by cloudfront.py again\n    aliases: [ 'www.my-distribution-source.com', 'zzz.aaa.io' ]\n\n- name: update a distribution's aliases and comment using an alias as a reference\n  community.aws.cloudfront_distribution:\n    state: present\n    caller_reference: my test distribution\n    comment: modified by cloudfront.py again\n    aliases:\n      - www.my-distribution-source.com\n      - zzz.aaa.io\n\n- name: update a distribution's comment and aliases and tags and remove existing tags\n  community.aws.cloudfront_distribution:\n    state: present\n    distribution_id: E15BU8SDCGSG57\n    comment: modified by cloudfront.py again\n    aliases:\n      - tested.com\n    tags:\n      Project: distribution 1.2\n    purge_tags: yes\n\n- name: create a distribution with an origin, logging and default cache behavior\n  community.aws.cloudfront_distribution:\n    state: present\n    caller_reference: unique test distribution ID\n    origins:\n        - id: 'my test origin-000111'\n          domain_name: www.example.com\n          origin_path: /production\n          custom_headers:\n            - header_name: MyCustomHeaderName\n              header_value: MyCustomHeaderValue\n    default_cache_behavior:\n      target_origin_id: 'my test origin-000111'\n      forwarded_values:\n        query_string: true\n        cookies:\n          forward: all\n        headers:\n         - '*'\n      viewer_protocol_policy: allow-all\n      smooth_streaming: true\n      compress: true\n      allowed_methods:\n        items:\n          - GET\n          - HEAD\n        cached_methods:\n          - GET\n          - HEAD\n    logging:\n      enabled: true\n      include_cookies: false\n      bucket: mylogbucket.s3.amazonaws.com\n      prefix: myprefix/\n    enabled: false\n    comment: this is a CloudFront distribution with logging\n\n- name: delete a distribution\n  community.aws.cloudfront_distribution:\n    state: absent\n    caller_reference: replaceable distribution\n"
  },
  "community.aws.cloudfront_facts": {
    "doc": {
      "description": "Gets information about an AWS CloudFront distribution.\nThis module was called C(cloudfront_facts) before Ansible 2.9, returning C(ansible_facts). Note that the M(community.aws.cloudfront_info) module no longer returns C(ansible_facts)!",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "all_lists": {
          "aliases": [],
          "description": "Get all CloudFront lists that do not require parameters.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "distribution": {
          "aliases": [],
          "description": "Get information about a distribution.\nRequires I(distribution_id) or I(domain_name_alias) to be specified.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "distribution_config": {
          "aliases": [],
          "description": "Get the configuration information about a distribution.\nRequires I(distribution_id) or I(domain_name_alias) to be specified.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "distribution_id": {
          "aliases": [],
          "description": "The id of the CloudFront distribution. Used with I(distribution), I(distribution_config), I(invalidation), I(streaming_distribution), I(streaming_distribution_config), I(list_invalidations).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "domain_name_alias": {
          "aliases": [],
          "description": "Can be used instead of I(distribution_id) - uses the aliased CNAME for the CloudFront distribution to get the distribution id where required.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "invalidation": {
          "aliases": [],
          "description": "Get information about an invalidation.\nRequires I(invalidation_id) to be specified.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "invalidation_id": {
          "aliases": [],
          "description": "The id of the invalidation to get information about.\nUsed with I(invalidation).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "list_distributions": {
          "aliases": [],
          "description": "Get a list of CloudFront distributions.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "list_distributions_by_web_acl_id": {
          "aliases": [],
          "description": "Get a list of distributions using web acl id as a filter.\nRequires I(web_acl_id) to be set.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "list_invalidations": {
          "aliases": [],
          "description": "Get a list of invalidations.\nRequires I(distribution_id) or I(domain_name_alias) to be specified.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "list_origin_access_identities": {
          "aliases": [],
          "description": "Get a list of CloudFront origin access identities.\nRequires I(origin_access_identity_id) to be set.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "list_streaming_distributions": {
          "aliases": [],
          "description": "Get a list of streaming distributions.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "origin_access_identity": {
          "aliases": [],
          "description": "Get information about an origin access identity.\nRequires I(origin_access_identity_id) to be specified.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "origin_access_identity_config": {
          "aliases": [],
          "description": "Get the configuration information about an origin access identity.\nRequires I(origin_access_identity_id) to be specified.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "origin_access_identity_id": {
          "aliases": [],
          "description": "The id of the CloudFront origin access identity to get information about.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "streaming_distribution": {
          "aliases": [],
          "description": "Get information about a specified RTMP distribution.\nRequires I(distribution_id) or I(domain_name_alias) to be specified.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "streaming_distribution_config": {
          "aliases": [],
          "description": "Get the configuration information about a specified RTMP distribution.\nRequires I(distribution_id) or I(domain_name_alias) to be specified.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "summary": {
          "aliases": [],
          "description": "Returns a summary of all distributions, streaming distributions and origin_access_identities.\nThis is the default behaviour if no option is selected.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Obtain facts about an AWS CloudFront distribution",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n- name: Get a summary of distributions\n  community.aws.cloudfront_info:\n    summary: true\n  register: result\n\n- name: Get information about a distribution\n  community.aws.cloudfront_info:\n    distribution: true\n    distribution_id: my-cloudfront-distribution-id\n  register: result_did\n- ansible.builtin.debug:\n    msg: \"{{ result_did['cloudfront']['my-cloudfront-distribution-id'] }}\"\n\n- name: Get information about a distribution using the CNAME of the cloudfront distribution.\n  community.aws.cloudfront_info:\n    distribution: true\n    domain_name_alias: www.my-website.com\n  register: result_website\n- ansible.builtin.debug:\n    msg: \"{{ result_website['cloudfront']['www.my-website.com'] }}\"\n\n# When the module is called as cloudfront_facts, return values are published\n# in ansible_facts['cloudfront'][<id>] and can be used as follows.\n# Note that this is deprecated and will stop working in a release after 2021-12-01.\n- name: Gather facts\n  community.aws.cloudfront_facts:\n    distribution: true\n    distribution_id: my-cloudfront-distribution-id\n- ansible.builtin.debug:\n    msg: \"{{ ansible_facts['cloudfront']['my-cloudfront-distribution-id'] }}\"\n\n- community.aws.cloudfront_facts:\n    distribution: true\n    domain_name_alias: www.my-website.com\n- ansible.builtin.debug:\n    msg: \"{{ ansible_facts['cloudfront']['www.my-website.com'] }}\"\n\n- name: Get all information about an invalidation for a distribution.\n  community.aws.cloudfront_info:\n    invalidation: true\n    distribution_id: my-cloudfront-distribution-id\n    invalidation_id: my-cloudfront-invalidation-id\n\n- name: Get all information about a CloudFront origin access identity.\n  community.aws.cloudfront_info:\n    origin_access_identity: true\n    origin_access_identity_id: my-cloudfront-origin-access-identity-id\n\n- name: Get all information about lists not requiring parameters (ie. list_origin_access_identities, list_distributions, list_streaming_distributions)\n  community.aws.cloudfront_info:\n    origin_access_identity: true\n    origin_access_identity_id: my-cloudfront-origin-access-identity-id\n\n- name: Get all information about lists not requiring parameters (ie. list_origin_access_identities, list_distributions, list_streaming_distributions)\n  community.aws.cloudfront_info:\n    all_lists: true\n"
  },
  "community.aws.cloudfront_info": {
    "doc": {
      "description": "Gets information about an AWS CloudFront distribution.\nThis module was called C(cloudfront_facts) before Ansible 2.9, returning C(ansible_facts). Note that the M(community.aws.cloudfront_info) module no longer returns C(ansible_facts)!",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "all_lists": {
          "aliases": [],
          "description": "Get all CloudFront lists that do not require parameters.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "distribution": {
          "aliases": [],
          "description": "Get information about a distribution.\nRequires I(distribution_id) or I(domain_name_alias) to be specified.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "distribution_config": {
          "aliases": [],
          "description": "Get the configuration information about a distribution.\nRequires I(distribution_id) or I(domain_name_alias) to be specified.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "distribution_id": {
          "aliases": [],
          "description": "The id of the CloudFront distribution. Used with I(distribution), I(distribution_config), I(invalidation), I(streaming_distribution), I(streaming_distribution_config), I(list_invalidations).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "domain_name_alias": {
          "aliases": [],
          "description": "Can be used instead of I(distribution_id) - uses the aliased CNAME for the CloudFront distribution to get the distribution id where required.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "invalidation": {
          "aliases": [],
          "description": "Get information about an invalidation.\nRequires I(invalidation_id) to be specified.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "invalidation_id": {
          "aliases": [],
          "description": "The id of the invalidation to get information about.\nUsed with I(invalidation).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "list_distributions": {
          "aliases": [],
          "description": "Get a list of CloudFront distributions.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "list_distributions_by_web_acl_id": {
          "aliases": [],
          "description": "Get a list of distributions using web acl id as a filter.\nRequires I(web_acl_id) to be set.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "list_invalidations": {
          "aliases": [],
          "description": "Get a list of invalidations.\nRequires I(distribution_id) or I(domain_name_alias) to be specified.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "list_origin_access_identities": {
          "aliases": [],
          "description": "Get a list of CloudFront origin access identities.\nRequires I(origin_access_identity_id) to be set.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "list_streaming_distributions": {
          "aliases": [],
          "description": "Get a list of streaming distributions.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "origin_access_identity": {
          "aliases": [],
          "description": "Get information about an origin access identity.\nRequires I(origin_access_identity_id) to be specified.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "origin_access_identity_config": {
          "aliases": [],
          "description": "Get the configuration information about an origin access identity.\nRequires I(origin_access_identity_id) to be specified.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "origin_access_identity_id": {
          "aliases": [],
          "description": "The id of the CloudFront origin access identity to get information about.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "streaming_distribution": {
          "aliases": [],
          "description": "Get information about a specified RTMP distribution.\nRequires I(distribution_id) or I(domain_name_alias) to be specified.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "streaming_distribution_config": {
          "aliases": [],
          "description": "Get the configuration information about a specified RTMP distribution.\nRequires I(distribution_id) or I(domain_name_alias) to be specified.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "summary": {
          "aliases": [],
          "description": "Returns a summary of all distributions, streaming distributions and origin_access_identities.\nThis is the default behaviour if no option is selected.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Obtain facts about an AWS CloudFront distribution",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n- name: Get a summary of distributions\n  community.aws.cloudfront_info:\n    summary: true\n  register: result\n\n- name: Get information about a distribution\n  community.aws.cloudfront_info:\n    distribution: true\n    distribution_id: my-cloudfront-distribution-id\n  register: result_did\n- ansible.builtin.debug:\n    msg: \"{{ result_did['cloudfront']['my-cloudfront-distribution-id'] }}\"\n\n- name: Get information about a distribution using the CNAME of the cloudfront distribution.\n  community.aws.cloudfront_info:\n    distribution: true\n    domain_name_alias: www.my-website.com\n  register: result_website\n- ansible.builtin.debug:\n    msg: \"{{ result_website['cloudfront']['www.my-website.com'] }}\"\n\n# When the module is called as cloudfront_facts, return values are published\n# in ansible_facts['cloudfront'][<id>] and can be used as follows.\n# Note that this is deprecated and will stop working in a release after 2021-12-01.\n- name: Gather facts\n  community.aws.cloudfront_facts:\n    distribution: true\n    distribution_id: my-cloudfront-distribution-id\n- ansible.builtin.debug:\n    msg: \"{{ ansible_facts['cloudfront']['my-cloudfront-distribution-id'] }}\"\n\n- community.aws.cloudfront_facts:\n    distribution: true\n    domain_name_alias: www.my-website.com\n- ansible.builtin.debug:\n    msg: \"{{ ansible_facts['cloudfront']['www.my-website.com'] }}\"\n\n- name: Get all information about an invalidation for a distribution.\n  community.aws.cloudfront_info:\n    invalidation: true\n    distribution_id: my-cloudfront-distribution-id\n    invalidation_id: my-cloudfront-invalidation-id\n\n- name: Get all information about a CloudFront origin access identity.\n  community.aws.cloudfront_info:\n    origin_access_identity: true\n    origin_access_identity_id: my-cloudfront-origin-access-identity-id\n\n- name: Get all information about lists not requiring parameters (ie. list_origin_access_identities, list_distributions, list_streaming_distributions)\n  community.aws.cloudfront_info:\n    origin_access_identity: true\n    origin_access_identity_id: my-cloudfront-origin-access-identity-id\n\n- name: Get all information about lists not requiring parameters (ie. list_origin_access_identities, list_distributions, list_streaming_distributions)\n  community.aws.cloudfront_info:\n    all_lists: true\n"
  },
  "community.aws.cloudfront_invalidation": {
    "doc": {
      "description": "Allows for invalidation of a batch of paths for a CloudFront distribution.",
      "has_action": false,
      "notes": "does not support check mode\nIf parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "alias": {
          "aliases": [],
          "description": "The alias of the CloudFront distribution to invalidate paths for. Can be specified instead of distribution_id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "caller_reference": {
          "aliases": [],
          "description": "A unique reference identifier for the invalidation paths.\nDefaults to current datetime stamp.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "distribution_id": {
          "aliases": [],
          "description": "The ID of the CloudFront distribution to invalidate paths for. Can be specified instead of the alias.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "target_paths": {
          "aliases": [],
          "description": "A list of paths on the distribution to invalidate. Each path should begin with '/'. Wildcards are allowed. eg. '/foo/bar/*'",
          "type": "list",
          "required": true,
          "elements": "str",
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "create invalidations for AWS CloudFront distributions",
      "version_added": "1.0.0"
    },
    "examples": "\n\n- name: create a batch of invalidations using a distribution_id for a reference\n  community.aws.cloudfront_invalidation:\n    distribution_id: E15BU8SDCGSG57\n    caller_reference: testing 123\n    target_paths:\n      - /testpathone/test1.css\n      - /testpathtwo/test2.js\n      - /testpaththree/test3.ss\n\n- name: create a batch of invalidations using an alias as a reference and one path using a wildcard match\n  community.aws.cloudfront_invalidation:\n    alias: alias.test.com\n    caller_reference: testing 123\n    target_paths:\n      - /testpathone/test4.css\n      - /testpathtwo/test5.js\n      - /testpaththree/*\n\n"
  },
  "community.aws.cloudfront_origin_access_identity": {
    "doc": {
      "description": "Allows for easy creation, updating and deletion of origin access identities.",
      "has_action": false,
      "notes": "Does not support check mode.\nIf parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "caller_reference": {
          "aliases": [],
          "description": "A unique identifier to reference the origin access identity by.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "comment": {
          "aliases": [],
          "description": "A comment to describe the CloudFront origin access identity.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "origin_access_identity_id": {
          "aliases": [],
          "description": "The origin_access_identity_id of the CloudFront distribution.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "If the named resource should exist.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Create, update and delete origin access identities for a CloudFront distribution",
      "version_added": "1.0.0"
    },
    "examples": "\n\n- name: create an origin access identity\n  community.aws.cloudfront_origin_access_identity:\n    state: present\n    caller_reference: this is an example reference\n    comment: this is an example comment\n\n- name: update an existing origin access identity using caller_reference as an identifier\n  community.aws.cloudfront_origin_access_identity:\n     origin_access_identity_id: E17DRN9XUOAHZX\n     caller_reference: this is an example reference\n     comment: this is a new comment\n\n- name: delete an existing origin access identity using caller_reference as an identifier\n  community.aws.cloudfront_origin_access_identity:\n     state: absent\n     caller_reference: this is an example reference\n     comment: this is a new comment\n\n"
  },
  "community.aws.cloudtrail": {
    "doc": {
      "description": "Creates, deletes, or updates CloudTrail configuration. Ensures logging is also enabled.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloudwatch_logs_log_group_arn": {
          "aliases": [],
          "description": "A full ARN specifying a valid CloudWatch log group to which CloudTrail logs will be delivered. The log group should already exist.\nSee U(https://docs.aws.amazon.com/awscloudtrail/latest/userguide/send-cloudtrail-events-to-cloudwatch-logs.html).\nRequired when C(cloudwatch_logs_role_arn).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloudwatch_logs_role_arn": {
          "aliases": [],
          "description": "Specifies a full ARN for an IAM role that assigns the proper permissions for CloudTrail to create and write to the log group.\nSee U(https://docs.aws.amazon.com/awscloudtrail/latest/userguide/send-cloudtrail-events-to-cloudwatch-logs.html).\nRequired when C(cloudwatch_logs_log_group_arn).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "enable_log_file_validation": {
          "aliases": [
            "log_file_validation_enabled"
          ],
          "description": "Specifies whether log file integrity validation is enabled.\nCloudTrail will create a hash for every log file delivered and produce a signed digest file that can be used to ensure log files have not been tampered.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "enable_logging": {
          "aliases": [],
          "description": "Start or stop the CloudTrail logging. If stopped the trail will be paused and will not record events or deliver log files.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "include_global_events": {
          "aliases": [
            "include_global_service_events"
          ],
          "description": "Record API calls from global services such as IAM and STS.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "is_multi_region_trail": {
          "aliases": [],
          "description": "Specify whether the trail belongs only to one region or exists in all regions.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "kms_key_id": {
          "aliases": [],
          "description": "Specifies the KMS key ID to use to encrypt the logs delivered by CloudTrail. This also has the effect of enabling log file encryption.\nThe value can be an alias name prefixed by \"alias/\", a fully specified ARN to an alias, a fully specified ARN to a key, or a globally unique identifier.\nSee U(https://docs.aws.amazon.com/awscloudtrail/latest/userguide/encrypting-cloudtrail-log-files-with-aws-kms.html).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name for the CloudTrail.\nNames are unique per-region unless the CloudTrail is a multi-region trail, in which case it is unique per-account.",
          "default": "default",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "s3_bucket_name": {
          "aliases": [],
          "description": "An existing S3 bucket where CloudTrail will deliver log files.\nThis bucket should exist and have the proper policy.\nSee U(https://docs.aws.amazon.com/awscloudtrail/latest/userguide/aggregating_logs_regions_bucket_policy.html).\nRequired when I(state=present).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "s3_key_prefix": {
          "aliases": [],
          "description": "S3 Key prefix for delivered log files. A trailing slash is not necessary and will be removed.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "sns_topic_name": {
          "aliases": [],
          "description": "SNS Topic name to send notifications to when a log file is delivered.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Add or remove CloudTrail configuration.\nThe following states have been preserved for backwards compatibility: I(state=enabled) and I(state=disabled).\nI(state=enabled) is equivalet to I(state=present).\nI(state=disabled) is equivalet to I(state=absent).",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent",
            "enabled",
            "disabled"
          ],
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "A hash/dictionary of tags to be applied to the CloudTrail resource.\nRemove completely or specify an empty dictionary to remove all tags.",
          "default": "{}",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "manage CloudTrail create, delete, update",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: create single region cloudtrail\n  community.aws.cloudtrail:\n    state: present\n    name: default\n    s3_bucket_name: mylogbucket\n    s3_key_prefix: cloudtrail\n    region: us-east-1\n\n- name: create multi-region trail with validation and tags\n  community.aws.cloudtrail:\n    state: present\n    name: default\n    s3_bucket_name: mylogbucket\n    region: us-east-1\n    is_multi_region_trail: true\n    enable_log_file_validation: true\n    cloudwatch_logs_role_arn: \"arn:aws:iam::123456789012:role/CloudTrail_CloudWatchLogs_Role\"\n    cloudwatch_logs_log_group_arn: \"arn:aws:logs:us-east-1:123456789012:log-group:CloudTrail/DefaultLogGroup:*\"\n    kms_key_id: \"alias/MyAliasName\"\n    tags:\n      environment: dev\n      Name: default\n\n- name: show another valid kms_key_id\n  community.aws.cloudtrail:\n    state: present\n    name: default\n    s3_bucket_name: mylogbucket\n    kms_key_id: \"arn:aws:kms:us-east-1:123456789012:key/12345678-1234-1234-1234-123456789012\"\n    # simply \"12345678-1234-1234-1234-123456789012\" would be valid too.\n\n- name: pause logging the trail we just created\n  community.aws.cloudtrail:\n    state: present\n    name: default\n    enable_logging: false\n    s3_bucket_name: mylogbucket\n    region: us-east-1\n    is_multi_region_trail: true\n    enable_log_file_validation: true\n    tags:\n      environment: dev\n      Name: default\n\n- name: delete a trail\n  community.aws.cloudtrail:\n    state: absent\n    name: default\n"
  },
  "community.aws.cloudwatchevent_rule": {
    "doc": {
      "description": "This module creates and manages CloudWatch event rules and targets.",
      "has_action": false,
      "notes": "A rule must contain at least an I(event_pattern) or I(schedule_expression). A rule can have both an I(event_pattern) and a I(schedule_expression), in which case the rule will trigger on matching events as well as on a schedule.\nWhen specifying targets, I(input) and I(input_path) are mutually-exclusive and optional parameters.\nIf parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "A description of the rule.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "event_pattern": {
          "aliases": [],
          "description": "A string pattern (in valid JSON format) that is used to match against incoming events to determine if the rule should be triggered.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the rule you are creating, updating or deleting. No spaces or special characters allowed (i.e. must match C([\\.\\-_A-Za-z0-9]+)).",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "role_arn": {
          "aliases": [],
          "description": "The Amazon Resource Name (ARN) of the IAM role associated with the rule.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "schedule_expression": {
          "aliases": [],
          "description": "A cron or rate expression that defines the schedule the rule will trigger on. For example, C(cron(0 20 * * ? *)), C(rate(5 minutes)).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the rule is present (and enabled), disabled, or absent.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "disabled",
            "absent"
          ],
          "suboptions": {}
        },
        "targets": {
          "aliases": [],
          "description": "A list of targets to add to or update for the rule.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "arn": {
              "aliases": [],
              "description": "The ARN associated with the target.",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "ecs_parameters": {
              "aliases": [],
              "description": "Contains the ECS task definition and task count to be used, if the event target is an ECS task.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "task_count": {
                  "aliases": [],
                  "description": "The number of tasks to create based on I(task_definition).",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "task_definition_arn": {
                  "aliases": [],
                  "description": "The full ARN of the task definition.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "id": {
              "aliases": [],
              "description": "The unique target assignment ID.",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "input": {
              "aliases": [],
              "description": "A JSON object that will override the event data when passed to the target.\nIf neither I(input) nor I(input_path) is specified, then the entire event is passed to the target in JSON form.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "input_path": {
              "aliases": [],
              "description": "A JSONPath string (e.g. C($.detail)) that specifies the part of the event data to be passed to the target.\nIf neither I(input) nor I(input_path) is specified, then the entire event is passed to the target in JSON form.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "role_arn": {
              "aliases": [],
              "description": "The ARN of the IAM role to be used for this target when the rule is triggered.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Manage CloudWatch Event rules and targets",
      "version_added": "1.0.0"
    },
    "examples": "\n- community.aws.cloudwatchevent_rule:\n    name: MyCronTask\n    schedule_expression: \"cron(0 20 * * ? *)\"\n    description: Run my scheduled task\n    targets:\n      - id: MyTargetId\n        arn: arn:aws:lambda:us-east-1:123456789012:function:MyFunction\n\n- community.aws.cloudwatchevent_rule:\n    name: MyDisabledCronTask\n    schedule_expression: \"rate(5 minutes)\"\n    description: Run my disabled scheduled task\n    state: disabled\n    targets:\n      - id: MyOtherTargetId\n        arn: arn:aws:lambda:us-east-1:123456789012:function:MyFunction\n        input: '{\"foo\": \"bar\"}'\n\n- community.aws.cloudwatchevent_rule:\n    name: MyCronTask\n    state: absent\n"
  },
  "community.aws.cloudwatchlogs_log_group": {
    "doc": {
      "description": "Create or delete log_group in CloudWatchLogs.",
      "has_action": false,
      "notes": "For details of the parameters and returns see U(http://boto3.readthedocs.io/en/latest/reference/services/logs.html).\nIf parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "kms_key_id": {
          "aliases": [],
          "description": "The Amazon Resource Name (ARN) of the CMK to use when encrypting log data.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_group_name": {
          "aliases": [],
          "description": "The name of the log group.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "overwrite": {
          "aliases": [],
          "description": "Whether an existing log group should be overwritten on create.\nMutually exclusive with I(purge_retention_policy).",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "purge_retention_policy": {
          "aliases": [],
          "description": "Whether to purge the retention policy or not.\nMutually exclusive with I(retention) and I(overwrite).",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "retention": {
          "aliases": [],
          "description": "The number of days to retain the log events in the specified log group.\nValid values are: [1, 3, 5, 7, 14, 30, 60, 90, 120, 150, 180, 365, 400, 545, 731, 1827, 3653]\nMutually exclusive with I(purge_retention_policy).",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the rule is present or absent.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "The key-value pairs to use for the tags.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "create or delete log_group in CloudWatchLogs",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n- community.aws.cloudwatchlogs_log_group:\n    log_group_name: test-log-group\n\n- community.aws.cloudwatchlogs_log_group:\n    state: present\n    log_group_name: test-log-group\n    tags: { \"Name\": \"test-log-group\", \"Env\" : \"QA\" }\n\n- community.aws.cloudwatchlogs_log_group:\n    state: present\n    log_group_name: test-log-group\n    tags: { \"Name\": \"test-log-group\", \"Env\" : \"QA\" }\n    kms_key_id: arn:aws:kms:region:account-id:key/key-id\n\n- community.aws.cloudwatchlogs_log_group:\n    state: absent\n    log_group_name: test-log-group\n\n"
  },
  "community.aws.cloudwatchlogs_log_group_facts": {
    "doc": {
      "description": "Lists the specified log groups. You can list all your log groups or filter the results by prefix.\nThis module was called C(cloudwatchlogs_log_group_facts) before Ansible 2.9. The usage did not change.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_group_name": {
          "aliases": [],
          "description": "The name or prefix of the log group to filter by.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Get information about log_group in CloudWatchLogs",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n- community.aws.cloudwatchlogs_log_group_info:\n    log_group_name: test-log-group\n"
  },
  "community.aws.cloudwatchlogs_log_group_info": {
    "doc": {
      "description": "Lists the specified log groups. You can list all your log groups or filter the results by prefix.\nThis module was called C(cloudwatchlogs_log_group_facts) before Ansible 2.9. The usage did not change.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_group_name": {
          "aliases": [],
          "description": "The name or prefix of the log group to filter by.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Get information about log_group in CloudWatchLogs",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n- community.aws.cloudwatchlogs_log_group_info:\n    log_group_name: test-log-group\n"
  },
  "community.aws.cloudwatchlogs_log_group_metric_filter": {
    "doc": {
      "description": "Create, modify and delete CloudWatch log group metric filter.\nCloudWatch log group metric filter can be use with M(community.aws.ec2_metric_alarm).",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filter_name": {
          "aliases": [],
          "description": "A name for the metric filter you create.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "filter_pattern": {
          "aliases": [],
          "description": "A filter pattern for extracting metric data out of ingested log events. Required when I(state=present).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_group_name": {
          "aliases": [],
          "description": "The name of the log group where the metric filter is applied on.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "metric_transformation": {
          "aliases": [],
          "description": "A collection of information that defines how metric data gets emitted. Required when I(state=present).",
          "type": "dict",
          "required": false,
          "suboptions": {
            "default_value": {
              "aliases": [],
              "description": "The value to emit when a filter pattern does not match a log event.",
              "type": "float",
              "required": false,
              "suboptions": {}
            },
            "metric_name": {
              "aliases": [],
              "description": "The name of the cloudWatch metric.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "metric_namespace": {
              "aliases": [],
              "description": "The namespace of the cloudWatch metric.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "metric_value": {
              "aliases": [],
              "description": "The value to publish to the cloudWatch metric when a filter pattern matches a log event.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the rule is present or absent.",
          "type": "str",
          "required": true,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Manage CloudWatch log group metric filter",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: set metric filter on log group /fluentd/testcase\n  community.aws.cloudwatchlogs_log_group_metric_filter:\n    log_group_name: /fluentd/testcase\n    filter_name: BoxFreeStorage\n    filter_pattern: '{($.value = *) && ($.hostname = \"box\")}'\n    state: present\n    metric_transformation:\n        metric_name: box_free_space\n        metric_namespace: fluentd_metrics\n        metric_value: \"$.value\"\n\n- name: delete metric filter on log group /fluentd/testcase\n  community.aws.cloudwatchlogs_log_group_metric_filter:\n    log_group_name: /fluentd/testcase\n    filter_name: BoxFreeStorage\n    state: absent\n"
  },
  "community.aws.data_pipeline": {
    "doc": {
      "description": "Create and manage AWS Datapipelines. Creation is not idempotent in AWS, so the C(uniqueId) is created by hashing the options (minus objects) given to the datapipeline.\nThe pipeline definition must be in the format given here U(https://docs.aws.amazon.com/datapipeline/latest/APIReference/API_PutPipelineDefinition.html#API_PutPipelineDefinition_RequestSyntax).\nOperations will wait for a configurable amount of time to ensure the pipeline is in the requested state.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "An optional description for the pipeline being created.",
          "default": "",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the Datapipeline to create/modify/delete.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "objects": {
          "aliases": [],
          "description": "A list of pipeline object definitions, each of which is a dict that takes the keys I(id), I(name) and I(fields).",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "fields": {
              "aliases": [],
              "description": "Key-value pairs that define the properties of the object.\nThe value is specified as a reference to another object I(refValue) or as a string value I(stringValue) but not as both.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "key": {
                  "aliases": [],
                  "description": "The field identifier.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "refValue": {
                  "aliases": [],
                  "description": "The field value, expressed as the identifier of another object.\nExactly one of I(stringValue) and I(refValue) may be specified.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "stringValue": {
                  "aliases": [],
                  "description": "The field value.\nExactly one of I(stringValue) and I(refValue) may be specified.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "id": {
              "aliases": [],
              "description": "The ID of the object.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "name": {
              "aliases": [],
              "description": "The name of the object.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "parameters": {
          "aliases": [],
          "description": "A list of parameter objects (dicts) in the pipeline definition.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "attributes": {
              "aliases": [],
              "description": "A list of attributes (dicts) of the parameter object.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "key": {
                  "aliases": [],
                  "description": "The field identifier.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "stringValue": {
                  "aliases": [],
                  "description": "The field value.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "id": {
              "aliases": [],
              "description": "The ID of the parameter object.",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The requested state of the pipeline.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent",
            "active",
            "inactive"
          ],
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "A dict of key:value pair(s) to add to the pipeline.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "timeout": {
          "aliases": [],
          "description": "Time in seconds to wait for the pipeline to transition to the requested state, fail otherwise.",
          "default": "300",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "values": {
          "aliases": [],
          "description": "A list of parameter values (dicts) in the pipeline definition.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "id": {
              "aliases": [],
              "description": "The ID of the parameter value",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "stringValue": {
              "aliases": [],
              "description": "The field value",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "version": {
          "aliases": [],
          "description": "The version option has never had any effect and will be removed after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Create and manage AWS Datapipelines",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n# Create pipeline\n- community.aws.data_pipeline:\n    name: test-dp\n    region: us-west-2\n    objects: \"{{pipelineObjects}}\"\n    parameters: \"{{pipelineParameters}}\"\n    values: \"{{pipelineValues}}\"\n    tags:\n      key1: val1\n      key2: val2\n    state: present\n\n# Example populating and activating a pipeline that demonstrates two ways of providing pipeline objects\n- community.aws.data_pipeline:\n  name: test-dp\n  objects:\n    - \"id\": \"DefaultSchedule\"\n      \"name\": \"Every 1 day\"\n      \"fields\":\n        - \"key\": \"period\"\n          \"stringValue\": \"1 days\"\n        - \"key\": \"type\"\n          \"stringValue\": \"Schedule\"\n        - \"key\": \"startAt\"\n          \"stringValue\": \"FIRST_ACTIVATION_DATE_TIME\"\n    - \"id\": \"Default\"\n      \"name\": \"Default\"\n      \"fields\": [ { \"key\": \"resourceRole\", \"stringValue\": \"my_resource_role\" },\n                  { \"key\": \"role\", \"stringValue\": \"DataPipelineDefaultRole\" },\n                  { \"key\": \"pipelineLogUri\", \"stringValue\": \"s3://my_s3_log.txt\" },\n                  { \"key\": \"scheduleType\", \"stringValue\": \"cron\" },\n                  { \"key\": \"schedule\", \"refValue\": \"DefaultSchedule\" },\n                  { \"key\": \"failureAndRerunMode\", \"stringValue\": \"CASCADE\" } ]\n  state: active\n\n# Activate pipeline\n- community.aws.data_pipeline:\n    name: test-dp\n    region: us-west-2\n    state: active\n\n# Delete pipeline\n- community.aws.data_pipeline:\n    name: test-dp\n    region: us-west-2\n    state: absent\n\n"
  },
  "community.aws.dms_endpoint": {
    "doc": {
      "description": "Creates or destroys a data migration services endpoint, that can be used to replicate data.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "certificatearn": {
          "aliases": [],
          "description": "Amazon Resource Name (ARN) for the certificate.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "databasename": {
          "aliases": [],
          "description": "Name for the database on the origin or target side.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "dmstransfersettings": {
          "aliases": [],
          "description": "The settings in JSON format for the DMS transfer type of source endpoint.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "dynamodbsettings": {
          "aliases": [],
          "description": "Settings in JSON format for the target Amazon DynamoDB endpoint if source or target is dynamodb.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "elasticsearchsettings": {
          "aliases": [],
          "description": "Settings in JSON format for the target Elasticsearch endpoint.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "endpointidentifier": {
          "aliases": [],
          "description": "An identifier name for the endpoint.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "endpointtype": {
          "aliases": [],
          "description": "Type of endpoint we want to manage.",
          "type": "str",
          "required": true,
          "choices": [
            "source",
            "target"
          ],
          "suboptions": {}
        },
        "enginename": {
          "aliases": [],
          "description": "Database engine that we want to use, please refer to the AWS DMS for more information on the supported engines and their limitations.",
          "type": "str",
          "required": true,
          "choices": [
            "mysql",
            "oracle",
            "postgres",
            "mariadb",
            "aurora",
            "redshift",
            "s3",
            "db2",
            "azuredb",
            "sybase",
            "dynamodb",
            "mongodb",
            "sqlserver"
          ],
          "suboptions": {}
        },
        "externaltabledefinition": {
          "aliases": [],
          "description": "The external table definition.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "extraconnectionattributes": {
          "aliases": [],
          "description": "Extra attributes for the database connection, the AWS documentation states \" For more information about extra connection attributes, see the documentation section for your data store.\"",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "kinesissettings": {
          "aliases": [],
          "description": "Settings in JSON format for the target Amazon Kinesis Data Streams endpoint.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "kmskeyid": {
          "aliases": [],
          "description": "Encryption key to use to encrypt replication storage and connection information.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "mongodbsettings": {
          "aliases": [],
          "description": "Settings in JSON format for the source MongoDB endpoint.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Password used to connect to the database this attribute can only be written the AWS API does not return this parameter.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "port": {
          "aliases": [],
          "description": "TCP port for access to the database.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "retries": {
          "aliases": [],
          "description": "number of times we should retry when deleting a resource\nRequired when I(wait=true).",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "s3settings": {
          "aliases": [],
          "description": "S3 buckets settings for the target Amazon S3 endpoint.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "servername": {
          "aliases": [],
          "description": "Servername that the endpoint will connect to.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "serviceaccessrolearn": {
          "aliases": [],
          "description": "Amazon Resource Name (ARN) for the service access role that you want to use to create the endpoint.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "sslmode": {
          "aliases": [],
          "description": "Mode used for the SSL connection.",
          "default": "none",
          "type": "str",
          "required": false,
          "choices": [
            "none",
            "require",
            "verify-ca",
            "verify-full"
          ],
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "State of the endpoint.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "A list of tags to add to the endpoint.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "timeout": {
          "aliases": [],
          "description": "Time in seconds we should wait for when deleting a resource.\nRequired when I(wait=true).",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "username": {
          "aliases": [],
          "description": "Username our endpoint will use to connect to the database.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "wait": {
          "aliases": [],
          "description": "Whether Ansible should wait for the object to be deleted when I(state=absent).",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Creates or destroys a data migration services endpoint",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details\n- name: Endpoint Creation\n  community.aws.dms_endpoint:\n    state: absent\n    endpointidentifier: 'testsource'\n    endpointtype: source\n    enginename: aurora\n    username: testing1\n    password: testint1234\n    servername: testing.domain.com\n    port: 3306\n    databasename: 'testdb'\n    sslmode: none\n    wait: false\n"
  },
  "community.aws.dms_replication_subnet_group": {
    "doc": {
      "description": "Creates or destroys a data migration services subnet group.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "The description for the subnet group.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "identifier": {
          "aliases": [],
          "description": "The name for the replication subnet group. This value is stored as a lowercase string. Must contain no more than 255 alphanumeric characters, periods, spaces, underscores, or hyphens. Must not be \"default\".",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "State of the subnet group.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "subnet_ids": {
          "aliases": [],
          "description": "A list containing the subnet ids for the replication subnet group, needs to be at least 2 items in the list.",
          "type": "list",
          "required": true,
          "elements": "str",
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "creates or destroys a data migration services subnet group",
      "version_added": "1.0.0"
    },
    "examples": "\n- community.aws.dms_replication_subnet_group:\n    state: present\n    identifier: \"dev-sngroup\"\n    description: \"Development Subnet Group asdasdas\"\n    subnet_ids: ['subnet-id1','subnet-id2']\n"
  },
  "community.aws.dynamodb_table": {
    "doc": {
      "description": "Create or delete AWS Dynamo DB tables.\nCan update the provisioned throughput on existing tables.\nReturns the status of the specified table.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "billing_mode": {
          "aliases": [],
          "description": "Controls whether provisoned pr on-demand tables are created.",
          "type": "str",
          "required": false,
          "choices": [
            "PROVISIONED",
            "PAY_PER_REQUEST"
          ],
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "hash_key_name": {
          "aliases": [],
          "description": "Name of the hash key.\nRequired when I(state=present) and table doesn't exist.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "hash_key_type": {
          "aliases": [],
          "description": "Type of the hash key.\nDefaults to C('STRING') when creating a new table.",
          "type": "str",
          "required": false,
          "choices": [
            "STRING",
            "NUMBER",
            "BINARY"
          ],
          "suboptions": {}
        },
        "indexes": {
          "aliases": [],
          "description": "list of dictionaries describing indexes to add to the table. global indexes can be updated. local indexes don't support updates or have throughput.\nrequired options: ['name', 'type', 'hash_key_name']\nother options: ['hash_key_type', 'range_key_name', 'range_key_type', 'includes', 'read_capacity', 'write_capacity']",
          "default": "[]",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "hash_key_name": {
              "aliases": [],
              "description": "The name of the hash-based key.\nRequired if index doesn't already exist.\nCan not be modified once the index has been created.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "hash_key_type": {
              "aliases": [],
              "description": "The type of the hash-based key.\nDefaults to C('STRING') when creating a new index.\nCan not be modified once the index has been created.",
              "type": "str",
              "required": false,
              "choices": [
                "STRING",
                "NUMBER",
                "BINARY"
              ],
              "suboptions": {}
            },
            "includes": {
              "aliases": [],
              "description": "A list of fields to include when using C(global_include) or C(include) indexes.",
              "type": "list",
              "required": false,
              "elements": "str",
              "suboptions": {}
            },
            "name": {
              "aliases": [],
              "description": "The name of the index.",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "range_key_name": {
              "aliases": [],
              "description": "The name of the range-based key.\nCan not be modified once the index has been created.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "range_key_type": {
              "aliases": [],
              "description": "The type of the range-based key.\nDefaults to C('STRING') when creating a new index.\nCan not be modified once the index has been created.",
              "type": "str",
              "required": false,
              "choices": [
                "STRING",
                "NUMBER",
                "BINARY"
              ],
              "suboptions": {}
            },
            "read_capacity": {
              "aliases": [],
              "description": "Read throughput capacity (units) to provision for the index.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "type": {
              "aliases": [],
              "description": "The type of index.",
              "type": "str",
              "required": true,
              "choices": [
                "all",
                "global_all",
                "global_include",
                "global_keys_only",
                "include",
                "keys_only"
              ],
              "suboptions": {}
            },
            "write_capacity": {
              "aliases": [],
              "description": "Write throughput capacity (units) to provision for the index.",
              "type": "int",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "name": {
          "aliases": [],
          "description": "Name of the table.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "purge_tags": {
          "aliases": [],
          "description": "Remove tags not listed in I(tags).",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "range_key_name": {
          "aliases": [],
          "description": "Name of the range key.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "range_key_type": {
          "aliases": [],
          "description": "Type of the range key.\nDefaults to C('STRING') when creating a new range key.",
          "type": "str",
          "required": false,
          "choices": [
            "STRING",
            "NUMBER",
            "BINARY"
          ],
          "suboptions": {}
        },
        "read_capacity": {
          "aliases": [],
          "description": "Read throughput capacity (units) to provision.\nDefaults to C(1) when creating a new table.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Create or delete the table.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "A hash/dictionary of tags to add to the new instance or for starting/stopping instance by tag.\nFor example: C({\"key\":\"value\"}) or C({\"key\":\"value\",\"key2\":\"value2\"})",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "wait": {
          "aliases": [],
          "description": "When I(wait=True) the module will wait for up to I(wait_timeout) seconds for table creation or deletion to complete before returning.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "wait_timeout": {
          "aliases": [
            "wait_for_active_timeout"
          ],
          "description": "How long (in seconds) to wait for creation / update / deletion to complete.",
          "default": "300",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "write_capacity": {
          "aliases": [],
          "description": "Write throughput capacity (units) to provision.\nDefaults to C(1) when creating a new table.",
          "type": "int",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Create, update or delete AWS Dynamo DB tables",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create dynamo table with hash and range primary key\n  community.aws.dynamodb_table:\n    name: my-table\n    region: us-east-1\n    hash_key_name: id\n    hash_key_type: STRING\n    range_key_name: create_time\n    range_key_type: NUMBER\n    read_capacity: 2\n    write_capacity: 2\n    tags:\n      tag_name: tag_value\n\n- name: Update capacity on existing dynamo table\n  community.aws.dynamodb_table:\n    name: my-table\n    region: us-east-1\n    read_capacity: 10\n    write_capacity: 10\n\n- name: Create pay-per-request table\n  community.aws.dynamodb_table:\n    name: my-table\n    region: us-east-1\n    hash_key_name: id\n    hash_key_type: STRING\n    billing_mode: PAY_PER_REQUEST\n\n- name: set index on existing dynamo table\n  community.aws.dynamodb_table:\n    name: my-table\n    region: us-east-1\n    indexes:\n      - name: NamedIndex\n        type: global_include\n        hash_key_name: id\n        range_key_name: create_time\n        includes:\n          - other_field\n          - other_field2\n        read_capacity: 10\n        write_capacity: 10\n\n- name: Delete dynamo table\n  community.aws.dynamodb_table:\n    name: my-table\n    region: us-east-1\n    state: absent\n"
  },
  "community.aws.dynamodb_ttl": {
    "doc": {
      "description": "Sets the TTL for a given DynamoDB table.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "attribute_name": {
          "aliases": [],
          "description": "The name of the Time To Live attribute used to store the expiration time for items in the table.\nThis appears to be required by the API even when disabling TTL.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "State to set DynamoDB table to.",
          "type": "str",
          "required": false,
          "choices": [
            "enable",
            "disable"
          ],
          "suboptions": {}
        },
        "table_name": {
          "aliases": [],
          "description": "Name of the DynamoDB table to work on.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Set TTL for a given DynamoDB table",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: enable TTL on my cowfacts table\n  community.aws.dynamodb_ttl:\n    state: enable\n    table_name: cowfacts\n    attribute_name: cow_deleted_date\n\n- name: disable TTL on my cowfacts table\n  community.aws.dynamodb_ttl:\n    state: disable\n    table_name: cowfacts\n    attribute_name: cow_deleted_date\n"
  },
  "community.aws.ec2_ami_copy": {
    "doc": {
      "description": "Copies AMI from a source region to a destination region. B(Since version 2.3 this module depends on boto3.)",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "An optional human-readable string describing the contents and purpose of the new AMI.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "encrypted": {
          "aliases": [],
          "description": "Whether or not the destination snapshots of the copied AMI should be encrypted.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "kms_key_id": {
          "aliases": [],
          "description": "KMS key id used to encrypt the image. If not specified, uses default EBS Customer Master Key (CMK) for your account.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the new AMI to copy. (As of 2.3 the default is C(default), in prior versions it was C(null).)",
          "default": "default",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "source_image_id": {
          "aliases": [],
          "description": "The ID of the AMI in source region that should be copied.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "source_region": {
          "aliases": [],
          "description": "The source region the AMI should be copied from.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "tag_equality": {
          "aliases": [],
          "description": "Whether to use tags if the source AMI already exists in the target region. If this is set, and all tags match in an existing AMI, the AMI will not be copied again.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "A hash/dictionary of tags to add to the new copied AMI: C({\"key\":\"value\"}) and C({\"key\":\"value\",\"key\":\"value\"})",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "wait": {
          "aliases": [],
          "description": "Wait for the copied AMI to be in state C(available) before returning.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "wait_timeout": {
          "aliases": [],
          "description": "How long before wait gives up, in seconds.\nPrior to 2.3 the default was C(1200).\nFrom 2.3-2.5 this option was deprecated in favor of boto3 waiter defaults.\nThis was reenabled in 2.6 to allow timeouts greater than 10 minutes.",
          "default": "600",
          "type": "int",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "copies AMI between AWS regions, return new image id",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Basic AMI Copy\n  community.aws.ec2_ami_copy:\n    source_region: us-east-1\n    region: eu-west-1\n    source_image_id: ami-xxxxxxx\n\n- name: AMI copy wait until available\n  community.aws.ec2_ami_copy:\n    source_region: us-east-1\n    region: eu-west-1\n    source_image_id: ami-xxxxxxx\n    wait: yes\n    wait_timeout: 1200  # Default timeout is 600\n  register: image_id\n\n- name: Named AMI copy\n  community.aws.ec2_ami_copy:\n    source_region: us-east-1\n    region: eu-west-1\n    source_image_id: ami-xxxxxxx\n    name: My-Awesome-AMI\n    description: latest patch\n\n- name: Tagged AMI copy (will not copy the same AMI twice)\n  community.aws.ec2_ami_copy:\n    source_region: us-east-1\n    region: eu-west-1\n    source_image_id: ami-xxxxxxx\n    tags:\n        Name: My-Super-AMI\n        Patch: 1.2.3\n    tag_equality: yes\n\n- name: Encrypted AMI copy\n  community.aws.ec2_ami_copy:\n    source_region: us-east-1\n    region: eu-west-1\n    source_image_id: ami-xxxxxxx\n    encrypted: yes\n\n- name: Encrypted AMI copy with specified key\n  community.aws.ec2_ami_copy:\n    source_region: us-east-1\n    region: eu-west-1\n    source_image_id: ami-xxxxxxx\n    encrypted: yes\n    kms_key_id: arn:aws:kms:us-east-1:XXXXXXXXXXXX:key/746de6ea-50a4-4bcb-8fbc-e3b29f2d367b\n"
  },
  "community.aws.ec2_asg": {
    "doc": {
      "description": "Can create or delete AWS AutoScaling Groups.\nCan be used with the M(community.aws.ec2_lc) module to manage Launch Configurations.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "availability_zones": {
          "aliases": [],
          "description": "List of availability zone names in which to create the group.\nDefaults to all the availability zones in the region if I(vpc_zone_identifier) is not set.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "default_cooldown": {
          "aliases": [],
          "description": "The number of seconds after a scaling activity completes before another can begin.",
          "default": "300",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "desired_capacity": {
          "aliases": [],
          "description": "Desired number of instances in group, if unspecified then the current group value will be used.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "health_check_period": {
          "aliases": [],
          "description": "Length of time in seconds after a new EC2 instance comes into service that Auto Scaling starts checking its health.",
          "default": "300",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "health_check_type": {
          "aliases": [],
          "description": "The service you want the health status from, Amazon EC2 or Elastic Load Balancer.",
          "default": "EC2",
          "type": "str",
          "required": false,
          "choices": [
            "EC2",
            "ELB"
          ],
          "suboptions": {}
        },
        "launch_config_name": {
          "aliases": [],
          "description": "Name of the Launch configuration to use for the group. See the community.aws.ec2_lc) module for managing these.\nIf unspecified then the current group value will be used.  One of I(launch_config_name) or I(launch_template) must be provided.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "launch_template": {
          "aliases": [],
          "description": "Dictionary describing the Launch Template to use",
          "type": "dict",
          "required": false,
          "suboptions": {
            "launch_template_id": {
              "aliases": [],
              "description": "The id of the launch template. Only one of I(launch_template_name) or I(launch_template_id) is required.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "launch_template_name": {
              "aliases": [],
              "description": "The name of the launch template. Only one of I(launch_template_name) or I(launch_template_id) is required.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "version": {
              "aliases": [],
              "description": "The version number of the launch template to use.\nDefaults to latest version if not provided.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "lc_check": {
          "aliases": [],
          "description": "Check to make sure instances that are being replaced with I(replace_instances) do not already have the current I(launch_config).",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "load_balancers": {
          "aliases": [],
          "description": "List of ELB names to use for the group. Use for classic load balancers.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "lt_check": {
          "aliases": [],
          "description": "Check to make sure instances that are being replaced with I(replace_instances) do not already have the current I(launch_template or I(launch_template) I(version).",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "max_instance_lifetime": {
          "aliases": [],
          "description": "The maximum amount of time, in seconds, that an instance can be in service.\nMaximum instance lifetime must be equal to 0, between 604800 and 31536000 seconds (inclusive), or not specified.\nValue of 0 removes lifetime restriction.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "max_size": {
          "aliases": [],
          "description": "Maximum number of instances in group, if unspecified then the current group value will be used.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "metrics_collection": {
          "aliases": [],
          "description": "Enable ASG metrics collection.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "metrics_granularity": {
          "aliases": [],
          "description": "When I(metrics_collection=true) this will determine the granularity of metrics collected by CloudWatch.",
          "default": "1Minute",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "metrics_list": {
          "aliases": [],
          "description": "List of autoscaling metrics to collect when I(metrics_collection=true).",
          "default": "['GroupMinSize', 'GroupMaxSize', 'GroupDesiredCapacity', 'GroupInServiceInstances', 'GroupPendingInstances', 'GroupStandbyInstances', 'GroupTerminatingInstances', 'GroupTotalInstances']",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "min_size": {
          "aliases": [],
          "description": "Minimum number of instances in group, if unspecified then the current group value will be used.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "mixed_instances_policy": {
          "aliases": [],
          "description": "A mixed instance policy to use for the ASG.\nOnly used when the ASG is configured to use a Launch Template (I(launch_template)).\nSee also U(https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-mixedinstancespolicy.html)",
          "type": "dict",
          "required": false,
          "suboptions": {
            "instance_types": {
              "aliases": [],
              "description": "A list of instance_types.",
              "type": "list",
              "required": false,
              "elements": "str",
              "suboptions": {}
            },
            "instances_distribution": {
              "aliases": [],
              "description": "Specifies the distribution of On-Demand Instances and Spot Instances, the maximum price to pay for Spot Instances, and how the Auto Scaling group allocates instance types to fulfill On-Demand and Spot capacity.\nSee also U(https://docs.aws.amazon.com/autoscaling/ec2/APIReference/API_InstancesDistribution.html)",
              "type": "dict",
              "required": false,
              "version_added": "1.5.0",
              "suboptions": {
                "on_demand_allocation_strategy": {
                  "aliases": [],
                  "description": "Indicates how to allocate instance types to fulfill On-Demand capacity.",
                  "type": "str",
                  "required": false,
                  "version_added": "1.5.0",
                  "suboptions": {}
                },
                "on_demand_base_capacity": {
                  "aliases": [],
                  "description": "The minimum amount of the Auto Scaling group's capacity that must be fulfilled by On-Demand Instances. This base portion is provisioned first as your group scales.\nDefault if not set is 0. If you leave it set to 0, On-Demand Instances are launched as a percentage of the Auto Scaling group's desired capacity, per the OnDemandPercentageAboveBaseCapacity setting.",
                  "type": "int",
                  "required": false,
                  "version_added": "1.5.0",
                  "suboptions": {}
                },
                "on_demand_percentage_above_base_capacity": {
                  "aliases": [],
                  "description": "Controls the percentages of On-Demand Instances and Spot Instances for your additional capacity beyond OnDemandBaseCapacity.\nDefault if not set is 100. If you leave it set to 100, the percentages are 100% for On-Demand Instances and 0% for Spot Instances.\nValid range: 0 to 100",
                  "type": "int",
                  "required": false,
                  "version_added": "1.5.0",
                  "suboptions": {}
                },
                "spot_allocation_strategy": {
                  "aliases": [],
                  "description": "Indicates how to allocate instances across Spot Instance pools.",
                  "type": "str",
                  "required": false,
                  "version_added": "1.5.0",
                  "suboptions": {}
                },
                "spot_instance_pools": {
                  "aliases": [],
                  "description": "The number of Spot Instance pools across which to allocate your Spot Instances. The Spot pools are determined from the different instance types in the Overrides array of LaunchTemplate. Default if not set is 2.\nUsed only when the Spot allocation strategy is lowest-price.\nValid Range: Minimum value of 1. Maximum value of 20.",
                  "type": "int",
                  "required": false,
                  "version_added": "1.5.0",
                  "suboptions": {}
                },
                "spot_max_price": {
                  "aliases": [],
                  "description": "The maximum price per unit hour that you are willing to pay for a Spot Instance.\nIf you leave the value of this parameter blank (which is the default), the maximum Spot price is set at the On-Demand price.\nTo remove a value that you previously set, include the parameter but leave the value blank.",
                  "type": "str",
                  "required": false,
                  "version_added": "1.5.0",
                  "suboptions": {}
                }
              }
            }
          }
        },
        "name": {
          "aliases": [],
          "description": "Unique name for group to be created or deleted.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "notification_topic": {
          "aliases": [],
          "description": "A SNS topic ARN to send auto scaling notifications to.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "notification_types": {
          "aliases": [],
          "description": "A list of auto scaling events to trigger notifications on.",
          "default": "['autoscaling:EC2_INSTANCE_LAUNCH', 'autoscaling:EC2_INSTANCE_LAUNCH_ERROR', 'autoscaling:EC2_INSTANCE_TERMINATE', 'autoscaling:EC2_INSTANCE_TERMINATE_ERROR']",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "placement_group": {
          "aliases": [],
          "description": "Physical location of your cluster placement group created in Amazon EC2.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "replace_all_instances": {
          "aliases": [],
          "description": "In a rolling fashion, replace all instances that used the old launch configuration with one from the new launch configuration. It increases the ASG size by I(replace_batch_size), waits for the new instances to be up and running. After that, it terminates a batch of old instances, waits for the replacements, and repeats, until all old instances are replaced. Once that's done the ASG size is reduced back to the expected size.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "replace_batch_size": {
          "aliases": [],
          "description": "Number of instances you'd like to replace at a time.  Used with I(replace_all_instances).",
          "default": "1",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "replace_instances": {
          "aliases": [],
          "description": "List of I(instance_ids) belonging to the named AutoScalingGroup that you would like to terminate and be replaced with instances matching the current launch configuration.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Register or deregister the instance.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "suspend_processes": {
          "aliases": [],
          "description": "A list of scaling processes to suspend.\nValid values include:\nC(Launch), C(Terminate), C(HealthCheck), C(ReplaceUnhealthy), C(AZRebalance), C(AlarmNotification), C(ScheduledActions), C(AddToLoadBalancer)\nFull documentation of valid values can be found in the AWS documentation:\nU(https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-suspend-resume-processes.html)",
          "default": "[]",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "A list of tags to add to the Auto Scale Group.\nOptional key is I(propagate_at_launch), which defaults to true.\nWhen I(propagate_at_launch) is true the tags will be propagated to the Instances created.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {}
        },
        "target_group_arns": {
          "aliases": [],
          "description": "List of target group ARNs to use for the group. Use for application load balancers.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "termination_policies": {
          "aliases": [],
          "description": "An ordered list of criteria used for selecting instances to be removed from the Auto Scaling group when reducing capacity.\nUsing I(termination_policies=Default) when modifying an existing AutoScalingGroup will result in the existing policy being retained instead of changed to C(Default).\nValid values include: C(Default), C(OldestInstance), C(NewestInstance), C(OldestLaunchConfiguration), C(ClosestToNextInstanceHour)\nFull documentation of valid values can be found in the AWS documentation:\nU(https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-instance-termination.html#custom-termination-policy)",
          "default": "Default",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "vpc_zone_identifier": {
          "aliases": [],
          "description": "List of VPC subnets to use",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "wait_for_instances": {
          "aliases": [],
          "description": "Wait for the ASG instances to be in a ready state before exiting.  If instances are behind an ELB, it will wait until the ELB determines all instances have a lifecycle_state of  \"InService\" and  a health_status of \"Healthy\".",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "wait_timeout": {
          "aliases": [],
          "description": "How long to wait for instances to become viable when replaced.  If you experience the error \"Waited too long for ELB instances to be healthy\", try increasing this value.",
          "default": "300",
          "type": "int",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Create or delete AWS AutoScaling Groups (ASGs)",
      "version_added": "1.0.0"
    },
    "examples": "\n# Basic configuration with Launch Configuration\n\n- community.aws.ec2_asg:\n    name: special\n    load_balancers: [ 'lb1', 'lb2' ]\n    availability_zones: [ 'eu-west-1a', 'eu-west-1b' ]\n    launch_config_name: 'lc-1'\n    min_size: 1\n    max_size: 10\n    desired_capacity: 5\n    vpc_zone_identifier: [ 'subnet-abcd1234', 'subnet-1a2b3c4d' ]\n    tags:\n      - environment: production\n        propagate_at_launch: no\n\n# Rolling ASG Updates\n\n# Below is an example of how to assign a new launch config to an ASG and terminate old instances.\n#\n# All instances in \"myasg\" that do not have the launch configuration named \"my_new_lc\" will be terminated in\n# a rolling fashion with instances using the current launch configuration, \"my_new_lc\".\n#\n# This could also be considered a rolling deploy of a pre-baked AMI.\n#\n# If this is a newly created group, the instances will not be replaced since all instances\n# will have the current launch configuration.\n\n- name: create launch config\n  community.aws.ec2_lc:\n    name: my_new_lc\n    image_id: ami-lkajsf\n    key_name: mykey\n    region: us-east-1\n    security_groups: sg-23423\n    instance_type: m1.small\n    assign_public_ip: yes\n\n- community.aws.ec2_asg:\n    name: myasg\n    launch_config_name: my_new_lc\n    health_check_period: 60\n    health_check_type: ELB\n    replace_all_instances: yes\n    min_size: 5\n    max_size: 5\n    desired_capacity: 5\n    region: us-east-1\n\n# To only replace a couple of instances instead of all of them, supply a list\n# to \"replace_instances\":\n\n- community.aws.ec2_asg:\n    name: myasg\n    launch_config_name: my_new_lc\n    health_check_period: 60\n    health_check_type: ELB\n    replace_instances:\n    - i-b345231\n    - i-24c2931\n    min_size: 5\n    max_size: 5\n    desired_capacity: 5\n    region: us-east-1\n\n# Basic Configuration with Launch Template\n\n- community.aws.ec2_asg:\n    name: special\n    load_balancers: [ 'lb1', 'lb2' ]\n    availability_zones: [ 'eu-west-1a', 'eu-west-1b' ]\n    launch_template:\n        version: '1'\n        launch_template_name: 'lt-example'\n        launch_template_id: 'lt-123456'\n    min_size: 1\n    max_size: 10\n    desired_capacity: 5\n    vpc_zone_identifier: [ 'subnet-abcd1234', 'subnet-1a2b3c4d' ]\n    tags:\n      - environment: production\n        propagate_at_launch: no\n\n# Basic Configuration with Launch Template using mixed instance policy\n\n- community.aws.ec2_asg:\n    name: special\n    load_balancers: [ 'lb1', 'lb2' ]\n    availability_zones: [ 'eu-west-1a', 'eu-west-1b' ]\n    launch_template:\n        version: '1'\n        launch_template_name: 'lt-example'\n        launch_template_id: 'lt-123456'\n    mixed_instances_policy:\n        instance_types:\n            - t3a.large\n            - t3.large\n            - t2.large\n        instances_distribution:\n            on_demand_percentage_above_base_capacity: 0\n            spot_allocation_strategy: capacity-optimized\n    min_size: 1\n    max_size: 10\n    desired_capacity: 5\n    vpc_zone_identifier: [ 'subnet-abcd1234', 'subnet-1a2b3c4d' ]\n    tags:\n      - environment: production\n        propagate_at_launch: no\n"
  },
  "community.aws.ec2_asg_facts": {
    "doc": {
      "description": "Gather information about ec2 Auto Scaling Groups (ASGs) in AWS\nThis module was called C(ec2_asg_facts) before Ansible 2.9. The usage did not change.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The prefix or name of the auto scaling group(s) you are searching for.\nNote: This is a regular expression match with implicit '^' (beginning of string). Append '$' for a complete name match.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "A dictionary/hash of tags in the format { tag1_name: 'tag1_value', tag2_name: 'tag2_value' } to match against the auto scaling group(s) you are searching for.\n",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Gather information about ec2 Auto Scaling Groups (ASGs) in AWS",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n- name: Find all groups\n  community.aws.ec2_asg_info:\n  register: asgs\n\n- name: Find a group with matching name/prefix\n  community.aws.ec2_asg_info:\n    name: public-webserver-asg\n  register: asgs\n\n- name: Find a group with matching tags\n  community.aws.ec2_asg_info:\n    tags:\n      project: webapp\n      env: production\n  register: asgs\n\n- name: Find a group with matching name/prefix and tags\n  community.aws.ec2_asg_info:\n    name: myproject\n    tags:\n      env: production\n  register: asgs\n\n- name: Fail if no groups are found\n  community.aws.ec2_asg_info:\n    name: public-webserver-asg\n  register: asgs\n  failed_when: \"{{ asgs.results | length == 0 }}\"\n\n- name: Fail if more than 1 group is found\n  community.aws.ec2_asg_info:\n    name: public-webserver-asg\n  register: asgs\n  failed_when: \"{{ asgs.results | length > 1 }}\"\n"
  },
  "community.aws.ec2_asg_info": {
    "doc": {
      "description": "Gather information about ec2 Auto Scaling Groups (ASGs) in AWS\nThis module was called C(ec2_asg_facts) before Ansible 2.9. The usage did not change.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The prefix or name of the auto scaling group(s) you are searching for.\nNote: This is a regular expression match with implicit '^' (beginning of string). Append '$' for a complete name match.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "A dictionary/hash of tags in the format { tag1_name: 'tag1_value', tag2_name: 'tag2_value' } to match against the auto scaling group(s) you are searching for.\n",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Gather information about ec2 Auto Scaling Groups (ASGs) in AWS",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n- name: Find all groups\n  community.aws.ec2_asg_info:\n  register: asgs\n\n- name: Find a group with matching name/prefix\n  community.aws.ec2_asg_info:\n    name: public-webserver-asg\n  register: asgs\n\n- name: Find a group with matching tags\n  community.aws.ec2_asg_info:\n    tags:\n      project: webapp\n      env: production\n  register: asgs\n\n- name: Find a group with matching name/prefix and tags\n  community.aws.ec2_asg_info:\n    name: myproject\n    tags:\n      env: production\n  register: asgs\n\n- name: Fail if no groups are found\n  community.aws.ec2_asg_info:\n    name: public-webserver-asg\n  register: asgs\n  failed_when: \"{{ asgs.results | length == 0 }}\"\n\n- name: Fail if more than 1 group is found\n  community.aws.ec2_asg_info:\n    name: public-webserver-asg\n  register: asgs\n  failed_when: \"{{ asgs.results | length > 1 }}\"\n"
  },
  "community.aws.ec2_asg_lifecycle_hook": {
    "doc": {
      "description": "Will create a new hook when I(state=present) and no given Hook is found.\nWill update an existing hook when I(state=present) and a Hook is found, but current and provided parameters differ.\nWill delete the hook when I(state=absent) and a Hook is found.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "autoscaling_group_name": {
          "aliases": [],
          "description": "The name of the Auto Scaling group to which you want to assign the lifecycle hook.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "default_result": {
          "aliases": [],
          "description": "Defines the action the Auto Scaling group should take when the lifecycle hook timeout elapses or if an unexpected failure occurs.",
          "default": "ABANDON",
          "type": "str",
          "required": false,
          "choices": [
            "ABANDON",
            "CONTINUE"
          ],
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "heartbeat_timeout": {
          "aliases": [],
          "description": "The amount of time, in seconds, that can elapse before the lifecycle hook times out. When the lifecycle hook times out, Auto Scaling performs the default action. You can prevent the lifecycle hook from timing out by calling RecordLifecycleActionHeartbeat.\nBy default Amazon AWS will use 3600 (1 hour)",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "lifecycle_hook_name": {
          "aliases": [],
          "description": "The name of the lifecycle hook.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "notification_meta_data": {
          "aliases": [],
          "description": "Contains additional information that you want to include any time Auto Scaling sends a message to the notification target.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "notification_target_arn": {
          "aliases": [],
          "description": "The ARN of the notification target that Auto Scaling will use to notify you when an instance is in the transition state for the lifecycle hook.\nThis target can be either an SQS queue or an SNS topic.\nIf you specify an empty string, this overrides the current ARN.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "role_arn": {
          "aliases": [],
          "description": "The ARN of the IAM role that allows the Auto Scaling group to publish to the specified notification target.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Create or delete Lifecycle Hook.\nWhen I(state=present) updates existing hook or creates a new hook if not found.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "transition": {
          "aliases": [],
          "description": "The instance state to which you want to attach the lifecycle hook.\nRequired when I(state=present).",
          "type": "str",
          "required": false,
          "choices": [
            "autoscaling:EC2_INSTANCE_TERMINATING",
            "autoscaling:EC2_INSTANCE_LAUNCHING"
          ],
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Create, delete or update AWS ASG Lifecycle Hooks.",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create / Update lifecycle hook\n  community.aws.ec2_asg_lifecycle_hook:\n    region: eu-central-1\n    state: present\n    autoscaling_group_name: example\n    lifecycle_hook_name: example\n    transition: autoscaling:EC2_INSTANCE_LAUNCHING\n    heartbeat_timeout: 7000\n    default_result: ABANDON\n\n- name: Delete lifecycle hook\n  community.aws.ec2_asg_lifecycle_hook:\n    region: eu-central-1\n    state: absent\n    autoscaling_group_name: example\n    lifecycle_hook_name: example\n\n"
  },
  "community.aws.ec2_customer_gateway": {
    "doc": {
      "description": "Manage an AWS customer gateway.",
      "has_action": false,
      "notes": "You cannot create more than one customer gateway with the same IP address. If you run an identical request more than one time, the first request creates the customer gateway, and subsequent requests return information about the existing customer gateway. The subsequent requests do not create new customer gateway resources.\nReturn values contain customer_gateway and customer_gateways keys which are identical dicts. You should use customer_gateway. See U(https://github.com/ansible/ansible-modules-extras/issues/2773) for details.\nIf parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "bgp_asn": {
          "aliases": [],
          "description": "Border Gateway Protocol (BGP) Autonomous System Number (ASN), required when I(state=present).",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ip_address": {
          "aliases": [],
          "description": "Internet-routable IP address for customers gateway, must be a static address.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the customer gateway.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "routing": {
          "aliases": [],
          "description": "The type of routing.",
          "default": "dynamic",
          "type": "str",
          "required": false,
          "choices": [
            "static",
            "dynamic"
          ],
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Create or terminate the Customer Gateway.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Manage an AWS customer gateway",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create Customer Gateway\n  community.aws.ec2_customer_gateway:\n    bgp_asn: 12345\n    ip_address: 1.2.3.4\n    name: IndianapolisOffice\n    region: us-east-1\n  register: cgw\n\n- name: Delete Customer Gateway\n  community.aws.ec2_customer_gateway:\n    ip_address: 1.2.3.4\n    name: IndianapolisOffice\n    state: absent\n    region: us-east-1\n  register: cgw\n"
  },
  "community.aws.ec2_customer_gateway_facts": {
    "doc": {
      "description": "Gather information about customer gateways in AWS.\nThis module was called C(ec2_customer_gateway_facts) before Ansible 2.9. The usage did not change.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "customer_gateway_ids": {
          "aliases": [],
          "description": "Get details of a specific customer gateways using customer gateway ID/IDs. This value should be provided as a list.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filters": {
          "aliases": [],
          "description": "A dict of filters to apply. Each dict item consists of a filter key and a filter value. See U(https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeCustomerGateways.html) for possible filters.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Gather information about customer gateways in AWS",
      "version_added": "1.0.0"
    },
    "examples": "\n# # Note: These examples do not set authentication details, see the AWS Guide for details.\n\n- name: Gather information about all customer gateways\n  community.aws.ec2_customer_gateway_info:\n\n- name: Gather information about a filtered list of customer gateways, based on tags\n  community.aws.ec2_customer_gateway_info:\n    region: ap-southeast-2\n    filters:\n      \"tag:Name\": test-customer-gateway\n      \"tag:AltName\": test-customer-gateway-alt\n  register: cust_gw_info\n\n- name: Gather information about a specific customer gateway by specifying customer gateway ID\n  community.aws.ec2_customer_gateway_info:\n    region: ap-southeast-2\n    customer_gateway_ids:\n      - 'cgw-48841a09'\n      - 'cgw-fec021ce'\n  register: cust_gw_info\n"
  },
  "community.aws.ec2_customer_gateway_info": {
    "doc": {
      "description": "Gather information about customer gateways in AWS.\nThis module was called C(ec2_customer_gateway_facts) before Ansible 2.9. The usage did not change.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "customer_gateway_ids": {
          "aliases": [],
          "description": "Get details of a specific customer gateways using customer gateway ID/IDs. This value should be provided as a list.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filters": {
          "aliases": [],
          "description": "A dict of filters to apply. Each dict item consists of a filter key and a filter value. See U(https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeCustomerGateways.html) for possible filters.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Gather information about customer gateways in AWS",
      "version_added": "1.0.0"
    },
    "examples": "\n# # Note: These examples do not set authentication details, see the AWS Guide for details.\n\n- name: Gather information about all customer gateways\n  community.aws.ec2_customer_gateway_info:\n\n- name: Gather information about a filtered list of customer gateways, based on tags\n  community.aws.ec2_customer_gateway_info:\n    region: ap-southeast-2\n    filters:\n      \"tag:Name\": test-customer-gateway\n      \"tag:AltName\": test-customer-gateway-alt\n  register: cust_gw_info\n\n- name: Gather information about a specific customer gateway by specifying customer gateway ID\n  community.aws.ec2_customer_gateway_info:\n    region: ap-southeast-2\n    customer_gateway_ids:\n      - 'cgw-48841a09'\n      - 'cgw-fec021ce'\n  register: cust_gw_info\n"
  },
  "community.aws.ec2_eip": {
    "doc": {
      "description": "This module can allocate or release an EIP.\nThis module can associate/disassociate an EIP with instances or network interfaces.",
      "has_action": false,
      "notes": "There may be a delay between the time the EIP is assigned and when the cloud instance is reachable via the new address. Use wait_for and pause to delay further playbook execution until the instance is reachable, if necessary.\nThis module returns multiple changed statuses on disassociation or release. It returns an overall status based on any changes occurring. It also returns individual changed statuses for disassociation and release.\nIf parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "allow_reassociation": {
          "aliases": [],
          "description": "Specify this option to allow an Elastic IP address that is already associated with another network interface or instance to be re-associated with the specified instance or interface.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "device_id": {
          "aliases": [
            "instance_id"
          ],
          "description": "The id of the device for the EIP. Can be an EC2 Instance id or Elastic Network Interface (ENI) id.\nThe I(instance_id) alias has been deprecated and will be removed after 2022-12-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "in_vpc": {
          "aliases": [],
          "description": "Allocate an EIP inside a VPC or not.\nRequired if specifying an ENI with I(device_id).",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "private_ip_address": {
          "aliases": [],
          "description": "The primary or secondary private IP address to associate with the Elastic IP address.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "public_ip": {
          "aliases": [
            "ip"
          ],
          "description": "The IP address of a previously allocated EIP.\nWhen I(public_ip=present) and device is specified, the EIP is associated with the device.\nWhen I(public_ip=absent) and device is specified, the EIP is disassociated from the device.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "public_ipv4_pool": {
          "aliases": [],
          "description": "Allocates the new Elastic IP from the provided public IPv4 pool (BYOIP) only applies to newly allocated Elastic IPs, isn't validated when I(reuse_existing_ip_allowed=true).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "purge_tags": {
          "aliases": [],
          "description": "Whether the I(tags) argument should cause tags not in the dictionary to be removed.",
          "default": "True",
          "type": "bool",
          "required": false,
          "version_added": "2.1.0",
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "release_on_disassociation": {
          "aliases": [],
          "description": "Whether or not to automatically release the EIP when it is disassociated.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "reuse_existing_ip_allowed": {
          "aliases": [],
          "description": "Reuse an EIP that is not associated to a device (when available), instead of allocating a new one.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "When C(state=present), allocate an EIP or associate an existing EIP with a device.\nWhen C(state=absent), disassociate the EIP from the device and optionally release it.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "tag_name": {
          "aliases": [],
          "description": "When I(reuse_existing_ip_allowed=true), supplement with this option to only reuse an Elastic IP if it is tagged with I(tag_name).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tag_value": {
          "aliases": [],
          "description": "Supplements I(tag_name) but also checks that the value of the tag provided in I(tag_name) matches I(tag_value).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "A dictionary of tags to apply to the EIP.",
          "type": "dict",
          "required": false,
          "version_added": "2.1.0",
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "wait_timeout": {
          "aliases": [],
          "description": "The I(wait_timeout) option does nothing and will be removed after 2022-06-01",
          "type": "int",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "manages EC2 elastic IP (EIP) addresses.",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n- name: associate an elastic IP with an instance\n  community.aws.ec2_eip:\n    device_id: i-1212f003\n    ip: 93.184.216.119\n\n- name: associate an elastic IP with a device\n  community.aws.ec2_eip:\n    device_id: eni-c8ad70f3\n    ip: 93.184.216.119\n\n- name: associate an elastic IP with a device and allow reassociation\n  community.aws.ec2_eip:\n    device_id: eni-c8ad70f3\n    public_ip: 93.184.216.119\n    allow_reassociation: true\n\n- name: disassociate an elastic IP from an instance\n  community.aws.ec2_eip:\n    device_id: i-1212f003\n    ip: 93.184.216.119\n    state: absent\n\n- name: disassociate an elastic IP with a device\n  community.aws.ec2_eip:\n    device_id: eni-c8ad70f3\n    ip: 93.184.216.119\n    state: absent\n\n- name: allocate a new elastic IP and associate it with an instance\n  community.aws.ec2_eip:\n    device_id: i-1212f003\n\n- name: allocate a new elastic IP without associating it to anything\n  community.aws.ec2_eip:\n    state: present\n  register: eip\n\n- name: output the IP\n  ansible.builtin.debug:\n    msg: \"Allocated IP is {{ eip.public_ip }}\"\n\n- name: provision new instances with ec2\n  amazon.aws.ec2:\n    keypair: mykey\n    instance_type: c1.medium\n    image: ami-40603AD1\n    wait: true\n    group: webserver\n    count: 3\n  register: ec2\n\n- name: associate new elastic IPs with each of the instances\n  community.aws.ec2_eip:\n    device_id: \"{{ item }}\"\n  loop: \"{{ ec2.instance_ids }}\"\n\n- name: allocate a new elastic IP inside a VPC in us-west-2\n  community.aws.ec2_eip:\n    region: us-west-2\n    in_vpc: true\n  register: eip\n\n- name: output the IP\n  ansible.builtin.debug:\n    msg: \"Allocated IP inside a VPC is {{ eip.public_ip }}\"\n\n- name: allocate eip - reuse unallocated ips (if found) with FREE tag\n  community.aws.ec2_eip:\n    region: us-east-1\n    in_vpc: true\n    reuse_existing_ip_allowed: true\n    tag_name: FREE\n\n- name: allocate eip - reuse unallocated ips if tag reserved is nope\n  community.aws.ec2_eip:\n    region: us-east-1\n    in_vpc: true\n    reuse_existing_ip_allowed: true\n    tag_name: reserved\n    tag_value: nope\n\n- name: allocate new eip - from servers given ipv4 pool\n  community.aws.ec2_eip:\n    region: us-east-1\n    in_vpc: true\n    public_ipv4_pool: ipv4pool-ec2-0588c9b75a25d1a02\n\n- name: allocate eip - from a given pool (if no free addresses where dev-servers tag is dynamic)\n  community.aws.ec2_eip:\n    region: us-east-1\n    in_vpc: true\n    reuse_existing_ip_allowed: true\n    tag_name: dev-servers\n    public_ipv4_pool: ipv4pool-ec2-0588c9b75a25d1a02\n\n- name: allocate eip from pool - check if tag reserved_for exists and value is our hostname\n  community.aws.ec2_eip:\n    region: us-east-1\n    in_vpc: true\n    reuse_existing_ip_allowed: true\n    tag_name: reserved_for\n    tag_value: \"{{ inventory_hostname }}\"\n    public_ipv4_pool: ipv4pool-ec2-0588c9b75a25d1a02\n"
  },
  "community.aws.ec2_eip_facts": {
    "doc": {
      "description": "List details of EC2 Elastic IP addresses.\nThis module was called C(ec2_eip_facts) before Ansible 2.9. The usage did not change.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filters": {
          "aliases": [],
          "description": "A dict of filters to apply. Each dict item consists of a filter key and filter value.  See U(https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-addresses.html#options) for possible filters. Filter names and values are case sensitive.",
          "default": "{}",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "List EC2 EIP details",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details or the AWS region,\n# see the AWS Guide for details.\n\n- name: List all EIP addresses in the current region.\n  community.aws.ec2_eip_info:\n  register: regional_eip_addresses\n\n- name: List all EIP addresses for a VM.\n  community.aws.ec2_eip_info:\n    filters:\n       instance-id: i-123456789\n  register: my_vm_eips\n\n- ansible.builtin.debug:\n    msg: \"{{ my_vm_eips.addresses | json_query(\\\"[?private_ip_address=='10.0.0.5']\\\") }}\"\n\n- name: List all EIP addresses for several VMs.\n  community.aws.ec2_eip_info:\n    filters:\n       instance-id:\n         - i-123456789\n         - i-987654321\n  register: my_vms_eips\n\n- name: List all EIP addresses using the 'Name' tag as a filter.\n  community.aws.ec2_eip_info:\n    filters:\n      tag:Name: www.example.com\n  register: my_vms_eips\n\n- name: List all EIP addresses using the Allocation-id as a filter\n  community.aws.ec2_eip_info:\n    filters:\n      allocation-id: eipalloc-64de1b01\n  register: my_vms_eips\n\n# Set the variable eip_alloc to the value of the first allocation_id\n# and set the variable my_pub_ip to the value of the first public_ip\n- ansible.builtin.set_fact:\n    eip_alloc: my_vms_eips.addresses[0].allocation_id\n    my_pub_ip: my_vms_eips.addresses[0].public_ip\n\n"
  },
  "community.aws.ec2_eip_info": {
    "doc": {
      "description": "List details of EC2 Elastic IP addresses.\nThis module was called C(ec2_eip_facts) before Ansible 2.9. The usage did not change.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filters": {
          "aliases": [],
          "description": "A dict of filters to apply. Each dict item consists of a filter key and filter value.  See U(https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-addresses.html#options) for possible filters. Filter names and values are case sensitive.",
          "default": "{}",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "List EC2 EIP details",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details or the AWS region,\n# see the AWS Guide for details.\n\n- name: List all EIP addresses in the current region.\n  community.aws.ec2_eip_info:\n  register: regional_eip_addresses\n\n- name: List all EIP addresses for a VM.\n  community.aws.ec2_eip_info:\n    filters:\n       instance-id: i-123456789\n  register: my_vm_eips\n\n- ansible.builtin.debug:\n    msg: \"{{ my_vm_eips.addresses | json_query(\\\"[?private_ip_address=='10.0.0.5']\\\") }}\"\n\n- name: List all EIP addresses for several VMs.\n  community.aws.ec2_eip_info:\n    filters:\n       instance-id:\n         - i-123456789\n         - i-987654321\n  register: my_vms_eips\n\n- name: List all EIP addresses using the 'Name' tag as a filter.\n  community.aws.ec2_eip_info:\n    filters:\n      tag:Name: www.example.com\n  register: my_vms_eips\n\n- name: List all EIP addresses using the Allocation-id as a filter\n  community.aws.ec2_eip_info:\n    filters:\n      allocation-id: eipalloc-64de1b01\n  register: my_vms_eips\n\n# Set the variable eip_alloc to the value of the first allocation_id\n# and set the variable my_pub_ip to the value of the first public_ip\n- ansible.builtin.set_fact:\n    eip_alloc: my_vms_eips.addresses[0].allocation_id\n    my_pub_ip: my_vms_eips.addresses[0].public_ip\n\n"
  },
  "community.aws.ec2_elb_facts": {
    "doc": {
      "description": "Gather information about EC2 Elastic Load Balancers in AWS\nThis module was called C(ec2_elb_facts) before Ansible 2.9. The usage did not change.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "names": {
          "aliases": [],
          "description": "List of ELB names to gather information about. Pass this option to gather information about a set of ELBs, otherwise, all ELBs are returned.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "boto >= 2.49.0",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0",
        "python >= 3.6"
      ],
      "short_description": "Gather information about EC2 Elastic Load Balancers in AWS",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n# Output format tries to match amazon.aws.ec2_elb_lb module input parameters\n\n- name: Gather information about all ELBs\n  community.aws.ec2_elb_info:\n  register: elb_info\n- ansible.builtin.debug:\n    msg: \"{{ item.dns_name }}\"\n  loop: \"{{ elb_info.elbs }}\"\n\n- name: Gather information about a particular ELB\n  community.aws.ec2_elb_info:\n    names: frontend-prod-elb\n  register: elb_info\n\n- ansible.builtin.debug:\n    msg: \"{{ elb_info.elbs.0.dns_name }}\"\n\n- name: Gather information about a set of ELBs\n  community.aws.ec2_elb_info:\n    names:\n    - frontend-prod-elb\n    - backend-prod-elb\n  register: elb_info\n\n- ansible.builtin.debug:\n    msg: \"{{ item.dns_name }}\"\n  loop: \"{{ elb_info.elbs }}\"\n\n"
  },
  "community.aws.ec2_elb_info": {
    "doc": {
      "description": "Gather information about EC2 Elastic Load Balancers in AWS\nThis module was called C(ec2_elb_facts) before Ansible 2.9. The usage did not change.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "names": {
          "aliases": [],
          "description": "List of ELB names to gather information about. Pass this option to gather information about a set of ELBs, otherwise, all ELBs are returned.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "boto >= 2.49.0",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0",
        "python >= 3.6"
      ],
      "short_description": "Gather information about EC2 Elastic Load Balancers in AWS",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n# Output format tries to match amazon.aws.ec2_elb_lb module input parameters\n\n- name: Gather information about all ELBs\n  community.aws.ec2_elb_info:\n  register: elb_info\n- ansible.builtin.debug:\n    msg: \"{{ item.dns_name }}\"\n  loop: \"{{ elb_info.elbs }}\"\n\n- name: Gather information about a particular ELB\n  community.aws.ec2_elb_info:\n    names: frontend-prod-elb\n  register: elb_info\n\n- ansible.builtin.debug:\n    msg: \"{{ elb_info.elbs.0.dns_name }}\"\n\n- name: Gather information about a set of ELBs\n  community.aws.ec2_elb_info:\n    names:\n    - frontend-prod-elb\n    - backend-prod-elb\n  register: elb_info\n\n- ansible.builtin.debug:\n    msg: \"{{ item.dns_name }}\"\n  loop: \"{{ elb_info.elbs }}\"\n\n"
  },
  "community.aws.ec2_launch_template": {
    "doc": {
      "description": "Create, modify, and delete EC2 Launch Templates, which can be used to create individual instances or with Autoscaling Groups.\nThe M(amazon.aws.ec2_instance) and M(community.aws.ec2_asg) modules can, instead of specifying all parameters on those tasks, be passed a Launch Template which contains settings like instance size, disk type, subnet, and more.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "block_device_mappings": {
          "aliases": [],
          "description": "The block device mapping. Supplying both a snapshot ID and an encryption value as arguments for block-device mapping results in an error. This is because only blank volumes can be encrypted on start, and these are not created from a snapshot. If a snapshot is the basis for the volume, it contains data by definition and its encryption status cannot be changed using this action.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "device_name": {
              "aliases": [],
              "description": "The device name (for example, /dev/sdh or xvdh).",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "ebs": {
              "aliases": [],
              "description": "Parameters used to automatically set up EBS volumes when the instance is launched.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "delete_on_termination": {
                  "aliases": [],
                  "description": "Indicates whether the EBS volume is deleted on instance termination.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "encrypted": {
                  "aliases": [],
                  "description": "Indicates whether the EBS volume is encrypted. Encrypted volumes can only be attached to instances that support Amazon EBS encryption. If you are creating a volume from a snapshot, you can't specify an encryption value.\n",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "iops": {
                  "aliases": [],
                  "description": "The number of I/O operations per second (IOPS) that the volume supports. For io1, this represents the number of IOPS that are provisioned for the volume. For gp2, this represents the baseline performance of the volume and the rate at which the volume accumulates I/O credits for bursting. For more information about General Purpose SSD baseline performance, I/O credits, and bursting, see Amazon EBS Volume Types in the Amazon Elastic Compute Cloud User Guide.\nCondition: This parameter is required for requests to create io1 volumes; it is not used in requests to create gp2, st1, sc1, or standard volumes.\n",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "kms_key_id": {
                  "aliases": [],
                  "description": "The ARN of the AWS Key Management Service (AWS KMS) CMK used for encryption.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "snapshot_id": {
                  "aliases": [],
                  "description": "The ID of the snapshot to create the volume from.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "volume_size": {
                  "aliases": [],
                  "description": "The size of the volume, in GiB.\nDefault: If you're creating the volume from a snapshot and don't specify a volume size, the default is the snapshot size.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "volume_type": {
                  "aliases": [],
                  "description": "The volume type",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "no_device": {
              "aliases": [],
              "description": "Suppresses the specified device included in the block device mapping of the AMI.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "virtual_name": {
              "aliases": [],
              "description": "The virtual device name (ephemeralN). Instance store volumes are numbered starting from 0. An instance type with 2 available instance store volumes can specify mappings for ephemeral0 and ephemeral1. The number of available instance store volumes depends on the instance type. After you connect to the instance, you must mount the volume.\n",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "cpu_options": {
          "aliases": [],
          "description": "Choose CPU settings for the EC2 instances that will be created with this template.\nFor more information, see U(http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-optimize-cpu.html)",
          "type": "dict",
          "required": false,
          "suboptions": {
            "core_count": {
              "aliases": [],
              "description": "The number of CPU cores for the instance.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "threads_per_core": {
              "aliases": [],
              "description": "The number of threads per CPU core. To disable Intel Hyper-Threading Technology for the instance, specify a value of 1. Otherwise, specify the default value of 2.\n",
              "type": "int",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "credit_specification": {
          "aliases": [],
          "description": "The credit option for CPU usage of the instance. Valid for T2 or T3 instances only.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "cpu_credits": {
              "aliases": [],
              "description": "The credit option for CPU usage of a T2 or T3 instance. Valid values are C(standard) and C(unlimited).\n",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "default_version": {
          "aliases": [],
          "description": "Which version should be the default when users spin up new instances based on this template? By default, the latest version will be made the default.",
          "default": "latest",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "disable_api_termination": {
          "aliases": [],
          "description": "This helps protect instances from accidental termination. If set to true, you can't terminate the instance using the Amazon EC2 console, CLI, or API. To change this attribute to false after launch, use I(ModifyInstanceAttribute).\n",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ebs_optimized": {
          "aliases": [],
          "description": "Indicates whether the instance is optimized for Amazon EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal Amazon EBS I/O performance. This optimization isn't available with all instance types. Additional usage charges apply when using an EBS-optimized instance.\n",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "elastic_gpu_specifications": {
          "aliases": [],
          "description": "Settings for Elastic GPU attachments. See U(https://aws.amazon.com/ec2/elastic-gpus/) for details.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "type": {
              "aliases": [],
              "description": "The type of Elastic GPU to attach",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "iam_instance_profile": {
          "aliases": [],
          "description": "The name or ARN of an IAM instance profile. Requires permissions to describe existing instance roles to confirm ARN is properly formed.\n",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "image_id": {
          "aliases": [],
          "description": "The AMI ID to use for new instances launched with this template. This value is region-dependent since AMIs are not global resources.\n",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "instance_initiated_shutdown_behavior": {
          "aliases": [],
          "description": "Indicates whether an instance stops or terminates when you initiate shutdown from the instance using the operating system shutdown command.\n",
          "type": "str",
          "required": false,
          "choices": [
            "stop",
            "terminate"
          ],
          "suboptions": {}
        },
        "instance_market_options": {
          "aliases": [],
          "description": "Options for alternative instance markets, currently only the spot market is supported.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "market_type": {
              "aliases": [],
              "description": "The market type. This should always be 'spot'.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "spot_options": {
              "aliases": [],
              "description": "Spot-market specific settings.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "block_duration_minutes": {
                  "aliases": [],
                  "description": "The required duration for the Spot Instances (also known as Spot blocks), in minutes. This value must be a multiple of 60 (60, 120, 180, 240, 300, or 360).\n",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "instance_interruption_behavior": {
                  "aliases": [],
                  "description": "The behavior when a Spot Instance is interrupted. The default is C(terminate).",
                  "type": "str",
                  "required": false,
                  "choices": [
                    "hibernate",
                    "stop",
                    "terminate"
                  ],
                  "suboptions": {}
                },
                "max_price": {
                  "aliases": [],
                  "description": "The highest hourly price you're willing to pay for this Spot Instance.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "spot_instance_type": {
                  "aliases": [],
                  "description": "The request type to send.",
                  "type": "str",
                  "required": false,
                  "choices": [
                    "one-time",
                    "persistent"
                  ],
                  "suboptions": {}
                }
              }
            }
          }
        },
        "instance_type": {
          "aliases": [],
          "description": "The instance type, such as C(c5.2xlarge). For a full list of instance types, see U(http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html).\n",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "kernel_id": {
          "aliases": [],
          "description": "The ID of the kernel. We recommend that you use PV-GRUB instead of kernels and RAM disks. For more information, see U(http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UserProvidedkernels.html)\n",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "key_name": {
          "aliases": [],
          "description": "The name of the key pair. You can create a key pair using M(amazon.aws.ec2_key).\nIf you do not specify a key pair, you can't connect to the instance unless you choose an AMI that is configured to allow users another way to log in.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "metadata_options": {
          "aliases": [],
          "description": "Configure EC2 Metadata options.\nFor more information see the IMDS documentation U(https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/configuring-instance-metadata-service.html).",
          "type": "dict",
          "required": false,
          "version_added": "1.5.0",
          "suboptions": {
            "http_endpoint": {
              "aliases": [],
              "description": "This parameter enables or disables the HTTP metadata endpoint on your instances.\n",
              "default": "enabled",
              "type": "str",
              "required": false,
              "choices": [
                "enabled",
                "disabled"
              ],
              "suboptions": {}
            },
            "http_put_response_hop_limit": {
              "aliases": [],
              "description": "The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel.\n",
              "default": "1",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "http_tokens": {
              "aliases": [],
              "description": "The state of token usage for your instance metadata requests.\n",
              "default": "optional",
              "type": "str",
              "required": false,
              "choices": [
                "optional",
                "required"
              ],
              "suboptions": {}
            }
          }
        },
        "monitoring": {
          "aliases": [],
          "description": "Settings for instance monitoring.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "enabled": {
              "aliases": [],
              "description": "Whether to turn on detailed monitoring for new instances. This will incur extra charges.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "network_interfaces": {
          "aliases": [],
          "description": "One or more network interfaces.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "associate_public_ip_address": {
              "aliases": [],
              "description": "Associates a public IPv4 address with eth0 for a new network interface.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "delete_on_termination": {
              "aliases": [],
              "description": "Indicates whether the network interface is deleted when the instance is terminated.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "description": {
              "aliases": [],
              "description": "A description for the network interface.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "device_index": {
              "aliases": [],
              "description": "The device index for the network interface attachment.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "groups": {
              "aliases": [],
              "description": "List of security group IDs to include on this instance.",
              "type": "list",
              "required": false,
              "elements": "str",
              "suboptions": {}
            },
            "ipv6_address_count": {
              "aliases": [],
              "description": "The number of IPv6 addresses to assign to a network interface. Amazon EC2 automatically selects the IPv6 addresses from the subnet range. You can't use this option if specifying the I(ipv6_addresses) option.\n",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "ipv6_addresses": {
              "aliases": [],
              "description": "A list of one or more specific IPv6 addresses from the IPv6 CIDR block range of your subnet. You can't use this option if you're specifying the I(ipv6_address_count) option.\n",
              "type": "list",
              "required": false,
              "elements": "str",
              "suboptions": {}
            },
            "network_interface_id": {
              "aliases": [],
              "description": "The eni ID of a network interface to attach.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "private_ip_address": {
              "aliases": [],
              "description": "The primary private IPv4 address of the network interface.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "subnet_id": {
              "aliases": [],
              "description": "The ID of the subnet for the network interface.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "placement": {
          "aliases": [],
          "description": "The placement group settings for the instance.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "affinity": {
              "aliases": [],
              "description": "The affinity setting for an instance on a Dedicated Host.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "availability_zone": {
              "aliases": [],
              "description": "The Availability Zone for the instance.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "group_name": {
              "aliases": [],
              "description": "The name of the placement group for the instance.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "host_id": {
              "aliases": [],
              "description": "The ID of the Dedicated Host for the instance.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "tenancy": {
              "aliases": [],
              "description": "The tenancy of the instance (if the instance is running in a VPC). An instance with a tenancy of dedicated runs on single-tenant hardware.\n",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ram_disk_id": {
          "aliases": [],
          "description": "The ID of the RAM disk to launch the instance with. We recommend that you use PV-GRUB instead of kernels and RAM disks. For more information, see U(http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UserProvidedkernels.html)\n",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_group_ids": {
          "aliases": [],
          "description": "A list of security group IDs (VPC or EC2-Classic) that the new instances will be added to.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "security_groups": {
          "aliases": [],
          "description": "A list of security group names (Default VPC or EC2-Classic) that the new instances will be added to. For any VPC other than Default, you must use I(security_group_ids).\n",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the launch template should exist or not.\nDeleting specific versions of a launch template is not supported at this time.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "A set of key-value pairs to be applied to resources when this Launch Template is used.\nTag key constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with I(aws:)\nTag value constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "template_id": {
          "aliases": [
            "id"
          ],
          "description": "The ID for the launch template, can be used for all cases except creating a new Launch Template.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "template_name": {
          "aliases": [
            "name"
          ],
          "description": "The template name. This must be unique in the region-account combination you are using.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "user_data": {
          "aliases": [],
          "description": "The Base64-encoded user data to make available to the instance. For more information, see the Linux U(http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/user-data.html) and Windows U(http://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/ec2-instance-metadata.html#instancedata-add-user-data) documentation on user-data.\n",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Manage EC2 launch templates",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create an ec2 launch template\n  community.aws.ec2_launch_template:\n    name: \"my_template\"\n    image_id: \"ami-04b762b4289fba92b\"\n    key_name: my_ssh_key\n    instance_type: t2.micro\n    iam_instance_profile: myTestProfile\n    disable_api_termination: true\n\n- name: >\n    Create a new version of an existing ec2 launch template with a different instance type,\n    while leaving an older version as the default version\n  community.aws.ec2_launch_template:\n    name: \"my_template\"\n    default_version: 1\n    instance_type: c5.4xlarge\n\n- name: Delete an ec2 launch template\n  community.aws.ec2_launch_template:\n    name: \"my_template\"\n    state: absent\n\n# This module does not yet allow deletion of specific versions of launch templates\n"
  },
  "community.aws.ec2_lc": {
    "doc": {
      "description": "Can create or delete AWS Autoscaling Configurations.\nWorks with the ec2_asg module to manage Autoscaling Groups.",
      "has_action": false,
      "notes": "Amazon ASG Autoscaling Launch Configurations are immutable once created, so modifying the configuration after it is changed will not modify the launch configuration on AWS. You must create a new config and assign it to the ASG instead.\nIf parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "assign_public_ip": {
          "aliases": [],
          "description": "Used for Auto Scaling groups that launch instances into an Amazon Virtual Private Cloud. Specifies whether to assign a public IP address to each instance launched in a Amazon VPC.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "associate_public_ip_address": {
          "aliases": [],
          "description": "The I(associate_public_ip_address) option does nothing and will be removed after 2022-06-01",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "classic_link_vpc_id": {
          "aliases": [],
          "description": "Id of ClassicLink enabled VPC",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "classic_link_vpc_security_groups": {
          "aliases": [],
          "description": "A list of security group IDs with which to associate the ClassicLink VPC instances.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ebs_optimized": {
          "aliases": [],
          "description": "Specifies whether the instance is optimized for EBS I/O (true) or not (false).",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "image_id": {
          "aliases": [],
          "description": "The AMI unique identifier to be used for the group.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "instance_id": {
          "aliases": [],
          "description": "The Id of a running instance to use as a basis for a launch configuration. Can be used in place of I(image_id) and I(instance_type).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "instance_monitoring": {
          "aliases": [],
          "description": "Specifies whether instances are launched with detailed monitoring.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "instance_profile_name": {
          "aliases": [],
          "description": "The name or the Amazon Resource Name (ARN) of the instance profile associated with the IAM role for the instances.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "instance_type": {
          "aliases": [],
          "description": "Instance type to use for the instance.\nRequired when creating a new Launch Configuration.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "kernel_id": {
          "aliases": [],
          "description": "Kernel id for the EC2 instance.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "key_name": {
          "aliases": [],
          "description": "The SSH key name to be used for access to managed instances.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Unique name for configuration.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "placement_tenancy": {
          "aliases": [],
          "description": "Determines whether the instance runs on single-tenant hardware or not.\nWhen not set AWS will default to C(default).",
          "type": "str",
          "required": false,
          "choices": [
            "default",
            "dedicated"
          ],
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ramdisk_id": {
          "aliases": [],
          "description": "A RAM disk id for the instances.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_groups": {
          "aliases": [],
          "description": "A list of security groups to apply to the instances. Since version 2.4 you can specify either security group names or IDs or a mix.  Previous to 2.4, for VPC instances, specify security group IDs and for EC2-Classic, specify either security group names or IDs.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "spot_price": {
          "aliases": [],
          "description": "The spot price you are bidding. Only applies for an autoscaling group with spot instances.",
          "type": "float",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Register or deregister the instance.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "user_data": {
          "aliases": [],
          "description": "Opaque blob of data which is made available to the ec2 instance. Mutually exclusive with I(user_data_path).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "user_data_path": {
          "aliases": [],
          "description": "Path to the file that contains userdata for the ec2 instances. Mutually exclusive with I(user_data).",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "volumes": {
          "aliases": [],
          "description": "A list dictionaries defining the volumes to create.\nFor any volume, a volume size less than 1 will be interpreted as a request not to create the volume.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "delete_on_termination": {
              "aliases": [],
              "description": "Whether the volume should be automatically deleted when the instance is terminated.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "device_name": {
              "aliases": [],
              "description": "The name for the volume (For example C(/dev/sda)).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "encrypted": {
              "aliases": [],
              "description": "Whether the volume should be encrypted using the 'aws/ebs' KMS CMK.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "ephemeral": {
              "aliases": [],
              "description": "Whether the volume should be ephemeral.\nData on ephemeral volumes is lost when the instance is stopped.\nMutually exclusive with the I(snapshot) parameter.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "iops": {
              "aliases": [],
              "description": "The number of IOPS per second to provision for the volume.\nRequired when I(volume_type=io1).",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "no_device": {
              "aliases": [],
              "description": "When I(no_device=true) the device will not be created.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "snapshot": {
              "aliases": [],
              "description": "The ID of an EBS snapshot to copy when creating the volume.\nMutually exclusive with the I(ephemeral) parameter.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "volume_size": {
              "aliases": [],
              "description": "The size of the volume (in GiB).\nRequired unless one of I(ephemeral), I(snapshot) or I(no_device) is set.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "volume_type": {
              "aliases": [],
              "description": "The type of volume to create.\nSee U(https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html) for more information on the available volume types.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "vpc_id": {
          "aliases": [],
          "description": "VPC ID, used when resolving security group names to IDs.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Create or delete AWS Autoscaling Launch Configurations",
      "version_added": "1.0.0"
    },
    "examples": "\n\n- name: create a launch configuration with an encrypted volume\n  community.aws.ec2_lc:\n    name: special\n    image_id: ami-XXX\n    key_name: default\n    security_groups: ['group', 'group2' ]\n    instance_type: t1.micro\n    volumes:\n    - device_name: /dev/sda1\n      volume_size: 100\n      volume_type: io1\n      iops: 3000\n      delete_on_termination: true\n      encrypted: true\n    - device_name: /dev/sdb\n      ephemeral: ephemeral0\n\n- name: create a launch configuration using a running instance id as a basis\n  community.aws.ec2_lc:\n    name: special\n    instance_id: i-00a48b207ec59e948\n    key_name: default\n    security_groups: ['launch-wizard-2' ]\n    volumes:\n    - device_name: /dev/sda1\n      volume_size: 120\n      volume_type: io1\n      iops: 3000\n      delete_on_termination: true\n\n- name: create a launch configuration to omit the /dev/sdf EBS device that is included in the AMI image\n  community.aws.ec2_lc:\n    name: special\n    image_id: ami-XXX\n    key_name: default\n    security_groups: ['group', 'group2' ]\n    instance_type: t1.micro\n    volumes:\n    - device_name: /dev/sdf\n      no_device: true\n\n- name: Use EBS snapshot ID for volume\n  block:\n  - name: Set Volume Facts\n    ansible.builtin.set_fact:\n      volumes:\n      - device_name: /dev/sda1\n        volume_size: 20\n        ebs:\n          snapshot: snap-XXXX\n          volume_type: gp2\n          delete_on_termination: true\n          encrypted: no\n\n  - name: Create launch configuration\n    community.aws.ec2_lc:\n      name: lc1\n      image_id: ami-xxxx\n      assign_public_ip: yes\n      instance_type: t2.medium\n      key_name: my-key\n      security_groups: \"['sg-xxxx']\"\n      volumes: \"{{ volumes }}\"\n    register: lc_info\n"
  },
  "community.aws.ec2_lc_facts": {
    "doc": {
      "description": "Gather information about AWS Autoscaling Launch Configurations.\nThis module was called C(ec2_lc_facts) before Ansible 2.9. The usage did not change.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "A name or a list of name to match.",
          "default": "[]",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "sort": {
          "aliases": [],
          "description": "Optional attribute which with to sort the results.",
          "type": "str",
          "required": false,
          "choices": [
            "launch_configuration_name",
            "image_id",
            "created_time",
            "instance_type",
            "kernel_id",
            "ramdisk_id",
            "key_name"
          ],
          "suboptions": {}
        },
        "sort_end": {
          "aliases": [],
          "description": "Which result to end with (when sorting).\nCorresponds to Python slice notation.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "sort_order": {
          "aliases": [],
          "description": "Order in which to sort results.\nOnly used when the 'sort' parameter is specified.",
          "default": "ascending",
          "type": "str",
          "required": false,
          "choices": [
            "ascending",
            "descending"
          ],
          "suboptions": {}
        },
        "sort_start": {
          "aliases": [],
          "description": "Which result to start with (when sorting).\nCorresponds to Python slice notation.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Gather information about AWS Autoscaling Launch Configurations.",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n- name: Gather information about all launch configurations\n  community.aws.ec2_lc_info:\n\n- name: Gather information about launch configuration with name \"example\"\n  community.aws.ec2_lc_info:\n    name: example\n\n- name: Gather information sorted by created_time from most recent to least recent\n  community.aws.ec2_lc_info:\n    sort: created_time\n    sort_order: descending\n"
  },
  "community.aws.ec2_lc_find": {
    "doc": {
      "description": "Returns list of matching Launch Configurations for a given name, along with other useful information.\nResults can be sorted and sliced.\nBased on the work by Tom Bamford U(https://github.com/tombamford)",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "limit": {
          "aliases": [],
          "description": "How many results to show.\nCorresponds to Python slice notation like list[:limit].",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "name_regex": {
          "aliases": [],
          "description": "A Launch Configuration to match.\nIt'll be compiled as regex.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "sort_order": {
          "aliases": [],
          "description": "Order in which to sort results.",
          "default": "ascending",
          "type": "str",
          "required": false,
          "choices": [
            "ascending",
            "descending"
          ],
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Find AWS Autoscaling Launch Configurations",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n- name: Search for the Launch Configurations that start with \"app\"\n  community.aws.ec2_lc_find:\n    name_regex: app.*\n    sort_order: descending\n    limit: 2\n"
  },
  "community.aws.ec2_lc_info": {
    "doc": {
      "description": "Gather information about AWS Autoscaling Launch Configurations.\nThis module was called C(ec2_lc_facts) before Ansible 2.9. The usage did not change.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "A name or a list of name to match.",
          "default": "[]",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "sort": {
          "aliases": [],
          "description": "Optional attribute which with to sort the results.",
          "type": "str",
          "required": false,
          "choices": [
            "launch_configuration_name",
            "image_id",
            "created_time",
            "instance_type",
            "kernel_id",
            "ramdisk_id",
            "key_name"
          ],
          "suboptions": {}
        },
        "sort_end": {
          "aliases": [],
          "description": "Which result to end with (when sorting).\nCorresponds to Python slice notation.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "sort_order": {
          "aliases": [],
          "description": "Order in which to sort results.\nOnly used when the 'sort' parameter is specified.",
          "default": "ascending",
          "type": "str",
          "required": false,
          "choices": [
            "ascending",
            "descending"
          ],
          "suboptions": {}
        },
        "sort_start": {
          "aliases": [],
          "description": "Which result to start with (when sorting).\nCorresponds to Python slice notation.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Gather information about AWS Autoscaling Launch Configurations.",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n- name: Gather information about all launch configurations\n  community.aws.ec2_lc_info:\n\n- name: Gather information about launch configuration with name \"example\"\n  community.aws.ec2_lc_info:\n    name: example\n\n- name: Gather information sorted by created_time from most recent to least recent\n  community.aws.ec2_lc_info:\n    sort: created_time\n    sort_order: descending\n"
  },
  "community.aws.ec2_metric_alarm": {
    "doc": {
      "description": "Can create or delete AWS metric alarms.\nMetrics you wish to alarm on must already exist.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "alarm_actions": {
          "aliases": [],
          "description": "A list of the names action(s) taken when the alarm is in the C(alarm) status, denoted as Amazon Resource Name(s).",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "comparison": {
          "aliases": [],
          "description": "Determines how the threshold value is compared\nSymbolic comparison operators have been deprecated, and will be removed after 2022-06-22.",
          "type": "str",
          "required": false,
          "choices": [
            "GreaterThanOrEqualToThreshold",
            "GreaterThanThreshold",
            "LessThanThreshold",
            "LessThanOrEqualToThreshold",
            "<=",
            "<",
            ">=",
            ">"
          ],
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "A longer description of the alarm.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "dimensions": {
          "aliases": [],
          "description": "A dictionary describing which metric the alarm is applied to.\nFor more information see the AWS documentation:\nU(https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html#Dimension)",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "evaluation_periods": {
          "aliases": [],
          "description": "The number of times in which the metric is evaluated before final calculation.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "insufficient_data_actions": {
          "aliases": [],
          "description": "A list of the names of action(s) to take when the alarm is in the C(insufficient_data) status.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "metric": {
          "aliases": [],
          "description": "Name of the monitored metric (e.g. C(CPUUtilization)).\nMetric must already exist.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Unique name for the alarm.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "namespace": {
          "aliases": [],
          "description": "Name of the appropriate namespace (C(AWS/EC2), C(System/Linux), etc.), which determines the category it will appear under in cloudwatch.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ok_actions": {
          "aliases": [],
          "description": "A list of the names of action(s) to take when the alarm is in the C(ok) status, denoted as Amazon Resource Name(s).",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "period": {
          "aliases": [],
          "description": "The time (in seconds) between metric evaluations.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Register or deregister the alarm.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "statistic": {
          "aliases": [],
          "description": "Operation applied to the metric.\nWorks in conjunction with I(period) and I(evaluation_periods) to determine the comparison value.",
          "type": "str",
          "required": false,
          "choices": [
            "SampleCount",
            "Average",
            "Sum",
            "Minimum",
            "Maximum"
          ],
          "suboptions": {}
        },
        "threshold": {
          "aliases": [],
          "description": "Sets the min/max bound for triggering the alarm.",
          "type": "float",
          "required": false,
          "suboptions": {}
        },
        "treat_missing_data": {
          "aliases": [],
          "description": "Sets how the alarm handles missing data points.",
          "default": "missing",
          "type": "str",
          "required": false,
          "choices": [
            "breaching",
            "notBreaching",
            "ignore",
            "missing"
          ],
          "suboptions": {}
        },
        "unit": {
          "aliases": [],
          "description": "The threshold's unit of measurement.",
          "type": "str",
          "required": false,
          "choices": [
            "Seconds",
            "Microseconds",
            "Milliseconds",
            "Bytes",
            "Kilobytes",
            "Megabytes",
            "Gigabytes",
            "Terabytes",
            "Bits",
            "Kilobits",
            "Megabits",
            "Gigabits",
            "Terabits",
            "Percent",
            "Count",
            "Bytes/Second",
            "Kilobytes/Second",
            "Megabytes/Second",
            "Gigabytes/Second",
            "Terabytes/Second",
            "Bits/Second",
            "Kilobits/Second",
            "Megabits/Second",
            "Gigabits/Second",
            "Terabits/Second",
            "Count/Second",
            "None"
          ],
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Create/update or delete AWS Cloudwatch 'metric alarms'",
      "version_added": "1.0.0"
    },
    "examples": "\n  - name: create alarm\n    community.aws.ec2_metric_alarm:\n      state: present\n      region: ap-southeast-2\n      name: \"cpu-low\"\n      metric: \"CPUUtilization\"\n      namespace: \"AWS/EC2\"\n      statistic: Average\n      comparison: \"LessThanOrEqualToThreshold\"\n      threshold: 5.0\n      period: 300\n      evaluation_periods: 3\n      unit: \"Percent\"\n      description: \"This will alarm when a instance's CPU usage average is lower than 5% for 15 minutes\"\n      dimensions: {'InstanceId':'i-XXX'}\n      alarm_actions: [\"action1\",\"action2\"]\n\n  - name: Create an alarm to recover a failed instance\n    community.aws.ec2_metric_alarm:\n      state: present\n      region: us-west-1\n      name: \"recover-instance\"\n      metric: \"StatusCheckFailed_System\"\n      namespace: \"AWS/EC2\"\n      statistic: \"Minimum\"\n      comparison: \">=\"\n      threshold: 1.0\n      period: 60\n      evaluation_periods: 2\n      unit: \"Count\"\n      description: \"This will recover an instance when it fails\"\n      dimensions: {\"InstanceId\":'i-XXX'}\n      alarm_actions: [\"arn:aws:automate:us-west-1:ec2:recover\"]\n\n"
  },
  "community.aws.ec2_placement_group": {
    "doc": {
      "description": "Create an EC2 Placement Group; if the placement group already exists, nothing is done. Or, delete an existing placement group. If the placement group is absent, do nothing. See also U(https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/placement-groups.html)",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name for the placement group.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Create or delete placement group.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "strategy": {
          "aliases": [],
          "description": "Placement group strategy. Cluster will cluster instances into a low-latency group in a single Availability Zone, while Spread spreads instances across underlying hardware.",
          "default": "cluster",
          "type": "str",
          "required": false,
          "choices": [
            "cluster",
            "spread"
          ],
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Create or delete an EC2 Placement Group",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide\n# for details.\n\n- name: Create a placement group.\n  community.aws.ec2_placement_group:\n    name: my-cluster\n    state: present\n\n- name: Create a Spread placement group.\n  community.aws.ec2_placement_group:\n    name: my-cluster\n    state: present\n    strategy: spread\n\n- name: Delete a placement group.\n  community.aws.ec2_placement_group:\n    name: my-cluster\n    state: absent\n\n"
  },
  "community.aws.ec2_placement_group_facts": {
    "doc": {
      "description": "List details of EC2 Placement Group(s).\nThis module was called C(ec2_placement_group_facts) before Ansible 2.9. The usage did not change.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "names": {
          "aliases": [],
          "description": "A list of names to filter on. If a listed group does not exist, there will be no corresponding entry in the result; no error will be raised.",
          "default": "[]",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "List EC2 Placement Group(s) details",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details or the AWS region,\n# see the AWS Guide for details.\n\n- name: List all placement groups.\n  community.aws.ec2_placement_group_info:\n  register: all_ec2_placement_groups\n\n- name: List two placement groups.\n  community.aws.ec2_placement_group_info:\n    names:\n     - my-cluster\n     - my-other-cluster\n  register: specific_ec2_placement_groups\n\n- ansible.builtin.debug:\n    msg: \"{{ specific_ec2_placement_groups | json_query(\\\"[?name=='my-cluster']\\\") }}\"\n\n"
  },
  "community.aws.ec2_placement_group_info": {
    "doc": {
      "description": "List details of EC2 Placement Group(s).\nThis module was called C(ec2_placement_group_facts) before Ansible 2.9. The usage did not change.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "names": {
          "aliases": [],
          "description": "A list of names to filter on. If a listed group does not exist, there will be no corresponding entry in the result; no error will be raised.",
          "default": "[]",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "List EC2 Placement Group(s) details",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details or the AWS region,\n# see the AWS Guide for details.\n\n- name: List all placement groups.\n  community.aws.ec2_placement_group_info:\n  register: all_ec2_placement_groups\n\n- name: List two placement groups.\n  community.aws.ec2_placement_group_info:\n    names:\n     - my-cluster\n     - my-other-cluster\n  register: specific_ec2_placement_groups\n\n- ansible.builtin.debug:\n    msg: \"{{ specific_ec2_placement_groups | json_query(\\\"[?name=='my-cluster']\\\") }}\"\n\n"
  },
  "community.aws.ec2_scaling_policy": {
    "doc": {
      "description": "Can create or delete scaling policies for autoscaling groups.\nReferenced autoscaling groups must already exist.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "adjustment_type": {
          "aliases": [],
          "description": "The type of change in capacity of the autoscaling group.\nRequired if I(state) is C(present).",
          "type": "str",
          "required": false,
          "choices": [
            "ChangeInCapacity",
            "ExactCapacity",
            "PercentChangeInCapacity"
          ],
          "suboptions": {}
        },
        "asg_name": {
          "aliases": [],
          "description": "Name of the associated autoscaling group.\nRequired if I(state) is C(present).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cooldown": {
          "aliases": [],
          "description": "The minimum period of time (in seconds) between which autoscaling actions can take place.\nOnly used when I(policy_type) is C(SimpleScaling).",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "estimated_instance_warmup": {
          "aliases": [],
          "description": "The estimated time, in seconds, until a newly launched instance can contribute to the CloudWatch metrics.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "metric_aggregation": {
          "aliases": [],
          "description": "The aggregation type for the CloudWatch metrics.\nOnly used when I(policy_type) is not C(SimpleScaling).",
          "default": "Average",
          "type": "str",
          "required": false,
          "choices": [
            "Minimum",
            "Maximum",
            "Average"
          ],
          "suboptions": {}
        },
        "min_adjustment_step": {
          "aliases": [],
          "description": "Minimum amount of adjustment when policy is triggered.\nOnly used when I(adjustment_type) is C(PercentChangeInCapacity).",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Unique name for the scaling policy.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "policy_type": {
          "aliases": [],
          "description": "Auto scaling adjustment policy.",
          "default": "SimpleScaling",
          "type": "str",
          "required": false,
          "choices": [
            "StepScaling",
            "SimpleScaling"
          ],
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scaling_adjustment": {
          "aliases": [],
          "description": "The amount by which the autoscaling group is adjusted by the policy.\nA negative number has the effect of scaling down the ASG.\nUnits are numbers of instances for C(ExactCapacity) or C(ChangeInCapacity) or percent of existing instances for C(PercentChangeInCapacity).\nRequired when I(policy_type) is C(SimpleScaling).",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Register or deregister the policy.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "step_adjustments": {
          "aliases": [],
          "description": "list of dicts containing I(lower_bound), I(upper_bound) and I(scaling_adjustment)\nIntervals must not overlap or have a gap between them.\nAt most, one item can have an undefined I(lower_bound). If any item has a negative lower_bound, then there must be a step adjustment with an undefined I(lower_bound).\nAt most, one item can have an undefined I(upper_bound). If any item has a positive upper_bound, then there must be a step adjustment with an undefined I(upper_bound).\nThe bounds are the amount over the alarm threshold at which the adjustment will trigger. This means that for an alarm threshold of 50, triggering at 75 requires a lower bound of 25. See U(http://docs.aws.amazon.com/AutoScaling/latest/APIReference/API_StepAdjustment.html).",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "lower_bound": {
              "aliases": [],
              "description": "The lower bound for the difference between the alarm threshold and the CloudWatch metric.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "scaling_adjustment": {
              "aliases": [],
              "description": "The amount by which to scale.",
              "type": "int",
              "required": true,
              "suboptions": {}
            },
            "upper_bound": {
              "aliases": [],
              "description": "The upper bound for the difference between the alarm threshold and the CloudWatch metric.",
              "type": "int",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Create or delete AWS scaling policies for Autoscaling groups",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Simple Scale Down policy\n  community.aws.ec2_scaling_policy:\n    state: present\n    region: US-XXX\n    name: \"scaledown-policy\"\n    adjustment_type: \"ChangeInCapacity\"\n    asg_name: \"application-asg\"\n    scaling_adjustment: -1\n    min_adjustment_step: 1\n    cooldown: 300\n\n# For an alarm with a breach threshold of 20, the\n# following creates a stepped policy:\n# From 20-40 (0-20 above threshold), increase by 50% of existing capacity\n# From 41-infinity, increase by 100% of existing capacity\n- community.aws.ec2_scaling_policy:\n    state: present\n    region: US-XXX\n    name: \"step-scale-up-policy\"\n    policy_type: StepScaling\n    metric_aggregation: Maximum\n    step_adjustments:\n      - upper_bound: 20\n        scaling_adjustment: 50\n      - lower_bound: 20\n        scaling_adjustment: 100\n    adjustment_type: \"PercentChangeInCapacity\"\n    asg_name: \"application-asg\"\n"
  },
  "community.aws.ec2_snapshot_copy": {
    "doc": {
      "description": "Copies an EC2 Snapshot from a source region to a destination region.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "An optional human-readable string describing purpose of the new Snapshot.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "encrypted": {
          "aliases": [],
          "description": "Whether or not the destination Snapshot should be encrypted.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "kms_key_id": {
          "aliases": [],
          "description": "KMS key id used to encrypt snapshot. If not specified, AWS defaults to C(alias/aws/ebs).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "source_region": {
          "aliases": [],
          "description": "The source region the Snapshot should be copied from.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "source_snapshot_id": {
          "aliases": [],
          "description": "The ID of the Snapshot in source region that should be copied.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "A hash/dictionary of tags to add to the new Snapshot; '{\"key\":\"value\"}' and '{\"key\":\"value\",\"key\":\"value\"}'",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "wait": {
          "aliases": [],
          "description": "Wait for the copied Snapshot to be in 'Available' state before returning.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "wait_timeout": {
          "aliases": [],
          "description": "How long before wait gives up, in seconds.",
          "default": "600",
          "type": "int",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Copies an EC2 snapshot and returns the new Snapshot ID.",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Basic Snapshot Copy\n  community.aws.ec2_snapshot_copy:\n    source_region: eu-central-1\n    region: eu-west-1\n    source_snapshot_id: snap-xxxxxxx\n\n- name: Copy Snapshot and wait until available\n  community.aws.ec2_snapshot_copy:\n    source_region: eu-central-1\n    region: eu-west-1\n    source_snapshot_id: snap-xxxxxxx\n    wait: yes\n    wait_timeout: 1200   # Default timeout is 600\n  register: snapshot_id\n\n- name: Tagged Snapshot copy\n  community.aws.ec2_snapshot_copy:\n    source_region: eu-central-1\n    region: eu-west-1\n    source_snapshot_id: snap-xxxxxxx\n    tags:\n        Name: Snapshot-Name\n\n- name: Encrypted Snapshot copy\n  community.aws.ec2_snapshot_copy:\n    source_region: eu-central-1\n    region: eu-west-1\n    source_snapshot_id: snap-xxxxxxx\n    encrypted: yes\n\n- name: Encrypted Snapshot copy with specified key\n  community.aws.ec2_snapshot_copy:\n    source_region: eu-central-1\n    region: eu-west-1\n    source_snapshot_id: snap-xxxxxxx\n    encrypted: yes\n    kms_key_id: arn:aws:kms:eu-central-1:XXXXXXXXXXXX:key/746de6ea-50a4-4bcb-8fbc-e3b29f2d367b\n"
  },
  "community.aws.ec2_transit_gateway": {
    "doc": {
      "description": "Creates AWS Transit Gateways.\nDeletes AWS Transit Gateways.\nUpdates tags on existing transit gateways.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "asn": {
          "aliases": [],
          "description": "A private Autonomous System Number (ASN) for the Amazon side of a BGP session.\nThe range is 64512 to 65534 for 16-bit ASNs and 4200000000 to 4294967294 for 32-bit ASNs.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "auto_associate": {
          "aliases": [],
          "description": "Enable or disable automatic association with the default association route table.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auto_attach": {
          "aliases": [],
          "description": "Enable or disable automatic acceptance of attachment requests.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auto_propagate": {
          "aliases": [],
          "description": "Enable or disable automatic propagation of routes to the default propagation route table.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "The description of the transit gateway.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "dns_support": {
          "aliases": [],
          "description": "Whether to enable AWS DNS support.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "purge_tags": {
          "aliases": [],
          "description": "Whether to purge existing tags not included with tags argument.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "C(present) to ensure resource is created.\nC(absent) to remove resource.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "A dictionary of resource tags",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "transit_gateway_id": {
          "aliases": [],
          "description": "The ID of the transit gateway.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "vpn_ecmp_support": {
          "aliases": [],
          "description": "Enable or disable Equal Cost Multipath Protocol support.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "wait": {
          "aliases": [],
          "description": "Whether to wait for status",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "wait_timeout": {
          "aliases": [],
          "description": "number of seconds to wait for status",
          "default": "300",
          "type": "int",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Create and delete AWS Transit Gateways",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create a new transit gateway using defaults\n  community.aws.ec2_transit_gateway:\n    state: present\n    region: us-east-1\n    description: personal-testing\n  register: created_tgw\n\n- name: Create a new transit gateway with options\n  community.aws.ec2_transit_gateway:\n    asn: 64514\n    auto_associate: no\n    auto_propagate: no\n    dns_support: True\n    description: \"nonprod transit gateway\"\n    purge_tags: False\n    state: present\n    region: us-east-1\n    tags:\n      Name: nonprod transit gateway\n      status: testing\n\n- name: Remove a transit gateway by description\n  community.aws.ec2_transit_gateway:\n    state: absent\n    region: us-east-1\n    description: personal-testing\n\n- name: Remove a transit gateway by id\n  community.aws.ec2_transit_gateway:\n    state: absent\n    region: ap-southeast-2\n    transit_gateway_id: tgw-3a9aa123\n  register: deleted_tgw\n"
  },
  "community.aws.ec2_transit_gateway_info": {
    "doc": {
      "description": "Gather information about ec2 transit gateways in AWS",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filters": {
          "aliases": [],
          "description": "A dict of filters to apply. Each dict item consists of a filter key and a filter value. See U(https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTransitGateways.html) for filters.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "transit_gateway_ids": {
          "aliases": [
            "transit_gateway_id"
          ],
          "description": "A list of transit gateway IDs to gather information for.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Gather information about ec2 transit gateways in AWS",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n- name: Gather info about all transit gateways\n  community.aws.ec2_transit_gateway_info:\n\n- name: Gather info about a particular transit gateway using filter transit gateway ID\n  community.aws.ec2_transit_gateway_info:\n    filters:\n      transit-gateway-id: tgw-02c42332e6b7da829\n\n- name: Gather info about a particular transit gateway using multiple option filters\n  community.aws.ec2_transit_gateway_info:\n    filters:\n      options.dns-support: enable\n      options.vpn-ecmp-support: enable\n\n- name: Gather info about multiple transit gateways using module param\n  community.aws.ec2_transit_gateway_info:\n    transit_gateway_ids:\n      - tgw-02c42332e6b7da829\n      - tgw-03c53443d5a8cb716\n"
  },
  "community.aws.ec2_vpc_egress_igw": {
    "doc": {
      "description": "Manage an AWS VPC Egress Only Internet gateway",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Create or delete the EIGW.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "vpc_id": {
          "aliases": [],
          "description": "The VPC ID for the VPC that this Egress Only Internet Gateway should be attached.",
          "type": "str",
          "required": true,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Manage an AWS VPC Egress Only Internet gateway",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n# Ensure that the VPC has an Internet Gateway.\n# The Internet Gateway ID is can be accessed via {{eigw.gateway_id}} for use in setting up NATs etc.\n- community.aws.ec2_vpc_egress_igw:\n    vpc_id: vpc-abcdefgh\n    state: present\n  register: eigw\n\n"
  },
  "community.aws.ec2_vpc_nacl": {
    "doc": {
      "description": "Read the AWS documentation for Network ACLS U(https://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_ACLs.html)",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "egress": {
          "aliases": [],
          "description": "A list of rules for outgoing traffic. Each rule must be specified as a list. Each rule may contain the rule number (integer 1-32766), protocol (one of ['tcp', 'udp', 'icmp', 'ipv6-icmp', '-1', 'all']), the rule action ('allow' or 'deny') the CIDR of the IPv4 or IPv6 network range to allow or deny, the ICMP type (-1 means all types), the ICMP code (-1 means all codes), the last port in the range for TCP or UDP protocols, and the first port in the range for TCP or UDP protocols. See examples.",
          "default": "[]",
          "type": "list",
          "required": false,
          "elements": "list",
          "suboptions": {}
        },
        "ingress": {
          "aliases": [],
          "description": "List of rules for incoming traffic. Each rule must be specified as a list. Each rule may contain the rule number (integer 1-32766), protocol (one of ['tcp', 'udp', 'icmp', 'ipv6-icmp', '-1', 'all']), the rule action ('allow' or 'deny') the CIDR of the IPv4 or IPv6 network range to allow or deny, the ICMP type (-1 means all types), the ICMP code (-1 means all codes), the last port in the range for TCP or UDP protocols, and the first port in the range for TCP or UDP protocols. See examples.",
          "default": "[]",
          "type": "list",
          "required": false,
          "elements": "list",
          "suboptions": {}
        },
        "nacl_id": {
          "aliases": [],
          "description": "NACL id identifying a network ACL.\nOne and only one of the I(name) or I(nacl_id) is required.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Tagged name identifying a network ACL.\nOne and only one of the I(name) or I(nacl_id) is required.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Creates or modifies an existing NACL\nDeletes a NACL and reassociates subnets to the default NACL",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "subnets": {
          "aliases": [],
          "description": "The list of subnets that should be associated with the network ACL.\nMust be specified as a list\nEach subnet can be specified as subnet ID, or its tagged name.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of tags to look for and apply when creating a network ACL.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "vpc_id": {
          "aliases": [],
          "description": "VPC id of the requesting VPC.\nRequired when state present.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "create and delete Network ACLs.",
      "version_added": "1.0.0"
    },
    "examples": "\n\n# Complete example to create and delete a network ACL\n# that allows SSH, HTTP and ICMP in, and all traffic out.\n- name: \"Create and associate production DMZ network ACL with DMZ subnets\"\n  community.aws.ec2_vpc_nacl:\n    vpc_id: vpc-12345678\n    name: prod-dmz-nacl\n    region: ap-southeast-2\n    subnets: ['prod-dmz-1', 'prod-dmz-2']\n    tags:\n      CostCode: CC1234\n      Project: phoenix\n      Description: production DMZ\n    ingress:\n        # rule no, protocol, allow/deny, cidr, icmp_type, icmp_code,\n        #                                             port from, port to\n        - [100, 'tcp', 'allow', '0.0.0.0/0', null, null, 22, 22]\n        - [200, 'tcp', 'allow', '0.0.0.0/0', null, null, 80, 80]\n        - [205, 'tcp', 'allow', '::/0', null, null, 80, 80]\n        - [300, 'icmp', 'allow', '0.0.0.0/0', 0, 8]\n        - [305, 'ipv6-icmp', 'allow', '::/0', 0, 8]\n    egress:\n        - [100, 'all', 'allow', '0.0.0.0/0', null, null, null, null]\n        - [105, 'all', 'allow', '::/0', null, null, null, null]\n    state: 'present'\n\n- name: \"Remove the ingress and egress rules - defaults to deny all\"\n  community.aws.ec2_vpc_nacl:\n    vpc_id: vpc-12345678\n    name: prod-dmz-nacl\n    region: ap-southeast-2\n    subnets:\n      - prod-dmz-1\n      - prod-dmz-2\n    tags:\n      CostCode: CC1234\n      Project: phoenix\n      Description: production DMZ\n    state: present\n\n- name: \"Remove the NACL subnet associations and tags\"\n  community.aws.ec2_vpc_nacl:\n    vpc_id: 'vpc-12345678'\n    name: prod-dmz-nacl\n    region: ap-southeast-2\n    state: present\n\n- name: \"Delete nacl and subnet associations\"\n  community.aws.ec2_vpc_nacl:\n    vpc_id: vpc-12345678\n    name: prod-dmz-nacl\n    state: absent\n\n- name: \"Delete nacl by its id\"\n  community.aws.ec2_vpc_nacl:\n    nacl_id: acl-33b4ee5b\n    state: absent\n"
  },
  "community.aws.ec2_vpc_nacl_facts": {
    "doc": {
      "description": "Gather information about Network ACLs in an AWS VPC\nThis module was called C(ec2_vpc_nacl_facts) before Ansible 2.9. The usage did not change.",
      "has_action": false,
      "notes": "By default, the module will return all Network ACLs.\nIf parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filters": {
          "aliases": [],
          "description": "A dict of filters to apply. Each dict item consists of a filter key and a filter value. See U(https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkAcls.html) for possible filters. Filter names and values are case sensitive.",
          "default": "{}",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "nacl_ids": {
          "aliases": [
            "nacl_id"
          ],
          "description": "A list of Network ACL IDs to retrieve information about.",
          "default": "[]",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Gather information about Network ACLs in an AWS VPC",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n# Gather information about all Network ACLs:\n- name: Get All NACLs\n  community.aws.ec2_vpc_nacl_info:\n    region: us-west-2\n  register: all_nacls\n\n# Retrieve default Network ACLs:\n- name: Get Default NACLs\n  community.aws.ec2_vpc_nacl_info:\n    region: us-west-2\n    filters:\n      'default': 'true'\n  register: default_nacls\n"
  },
  "community.aws.ec2_vpc_nacl_info": {
    "doc": {
      "description": "Gather information about Network ACLs in an AWS VPC\nThis module was called C(ec2_vpc_nacl_facts) before Ansible 2.9. The usage did not change.",
      "has_action": false,
      "notes": "By default, the module will return all Network ACLs.\nIf parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filters": {
          "aliases": [],
          "description": "A dict of filters to apply. Each dict item consists of a filter key and a filter value. See U(https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkAcls.html) for possible filters. Filter names and values are case sensitive.",
          "default": "{}",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "nacl_ids": {
          "aliases": [
            "nacl_id"
          ],
          "description": "A list of Network ACL IDs to retrieve information about.",
          "default": "[]",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Gather information about Network ACLs in an AWS VPC",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n# Gather information about all Network ACLs:\n- name: Get All NACLs\n  community.aws.ec2_vpc_nacl_info:\n    region: us-west-2\n  register: all_nacls\n\n# Retrieve default Network ACLs:\n- name: Get Default NACLs\n  community.aws.ec2_vpc_nacl_info:\n    region: us-west-2\n    filters:\n      'default': 'true'\n  register: default_nacls\n"
  },
  "community.aws.ec2_vpc_peer": {
    "doc": {
      "description": "Read the AWS documentation for VPC Peering Connections U(https://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/vpc-peering.html).",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "peer_owner_id": {
          "aliases": [],
          "description": "The AWS account number for cross account peering.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "peer_region": {
          "aliases": [],
          "description": "Region of the accepting VPC.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "peer_vpc_id": {
          "aliases": [],
          "description": "VPC id of the accepting VPC.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "peering_id": {
          "aliases": [],
          "description": "Peering connection id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "purge_tags": {
          "aliases": [],
          "description": "Remove tags not listed in I(tags).",
          "default": "True",
          "type": "bool",
          "required": false,
          "version_added": "2.0.0",
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Create, delete, accept, reject a peering connection.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent",
            "accept",
            "reject"
          ],
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of tags to look for and apply when creating a Peering Connection.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "vpc_id": {
          "aliases": [],
          "description": "VPC id of the requesting VPC.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "wait": {
          "aliases": [],
          "description": "Wait for peering state changes to complete.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "create, delete, accept, and reject VPC peering connections between two VPCs.",
      "version_added": "1.0.0"
    },
    "examples": "\n# Complete example to create and accept a local peering connection.\n- name: Create local account VPC peering Connection\n  community.aws.ec2_vpc_peer:\n    region: ap-southeast-2\n    vpc_id: vpc-12345678\n    peer_vpc_id: vpc-87654321\n    state: present\n    tags:\n      Name: Peering connection for VPC 21 to VPC 22\n      CostCode: CC1234\n      Project: phoenix\n  register: vpc_peer\n\n- name: Accept local VPC peering request\n  community.aws.ec2_vpc_peer:\n    region: ap-southeast-2\n    peering_id: \"{{ vpc_peer.peering_id }}\"\n    state: accept\n  register: action_peer\n\n# Complete example to delete a local peering connection.\n- name: Create local account VPC peering Connection\n  community.aws.ec2_vpc_peer:\n    region: ap-southeast-2\n    vpc_id: vpc-12345678\n    peer_vpc_id: vpc-87654321\n    state: present\n    tags:\n      Name: Peering connection for VPC 21 to VPC 22\n      CostCode: CC1234\n      Project: phoenix\n  register: vpc_peer\n\n- name: delete a local VPC peering Connection\n  community.aws.ec2_vpc_peer:\n    region: ap-southeast-2\n    peering_id: \"{{ vpc_peer.peering_id }}\"\n    state: absent\n  register: vpc_peer\n\n  # Complete example to create and accept a cross account peering connection.\n- name: Create cross account VPC peering Connection\n  community.aws.ec2_vpc_peer:\n    region: ap-southeast-2\n    vpc_id: vpc-12345678\n    peer_vpc_id: vpc-12345678\n    peer_owner_id: 123456789102\n    state: present\n    tags:\n      Name: Peering connection for VPC 21 to VPC 22\n      CostCode: CC1234\n      Project: phoenix\n  register: vpc_peer\n\n- name: Accept peering connection from remote account\n  community.aws.ec2_vpc_peer:\n    region: ap-southeast-2\n    peering_id: \"{{ vpc_peer.peering_id }}\"\n    profile: bot03_profile_for_cross_account\n    state: accept\n  register: vpc_peer\n\n# Complete example to create and accept an intra-region peering connection.\n- name: Create intra-region VPC peering Connection\n  community.aws.ec2_vpc_peer:\n    region: us-east-1\n    vpc_id: vpc-12345678\n    peer_vpc_id: vpc-87654321\n    peer_region: us-west-2\n    state: present\n    tags:\n      Name: Peering connection for us-east-1 VPC to us-west-2 VPC\n      CostCode: CC1234\n      Project: phoenix\n  register: vpc_peer\n\n- name: Accept peering connection from peer region\n  community.aws.ec2_vpc_peer:\n    region: us-west-2\n    peering_id: \"{{ vpc_peer.peering_id }}\"\n    state: accept\n  register: vpc_peer\n\n# Complete example to create and reject a local peering connection.\n- name: Create local account VPC peering Connection\n  community.aws.ec2_vpc_peer:\n    region: ap-southeast-2\n    vpc_id: vpc-12345678\n    peer_vpc_id: vpc-87654321\n    state: present\n    tags:\n      Name: Peering connection for VPC 21 to VPC 22\n      CostCode: CC1234\n      Project: phoenix\n  register: vpc_peer\n\n- name: Reject a local VPC peering Connection\n  community.aws.ec2_vpc_peer:\n    region: ap-southeast-2\n    peering_id: \"{{ vpc_peer.peering_id }}\"\n    state: reject\n\n# Complete example to create and accept a cross account peering connection.\n- name: Create cross account VPC peering Connection\n  community.aws.ec2_vpc_peer:\n    region: ap-southeast-2\n    vpc_id: vpc-12345678\n    peer_vpc_id: vpc-12345678\n    peer_owner_id: 123456789102\n    state: present\n    tags:\n      Name: Peering connection for VPC 21 to VPC 22\n      CostCode: CC1234\n      Project: phoenix\n  register: vpc_peer\n\n- name: Accept a cross account VPC peering connection request\n  community.aws.ec2_vpc_peer:\n    region: ap-southeast-2\n    peering_id: \"{{ vpc_peer.peering_id }}\"\n    profile: bot03_profile_for_cross_account\n    state: accept\n    tags:\n      Name: Peering connection for VPC 21 to VPC 22\n      CostCode: CC1234\n      Project: phoenix\n\n# Complete example to create and reject a cross account peering connection.\n- name: Create cross account VPC peering Connection\n  community.aws.ec2_vpc_peer:\n    region: ap-southeast-2\n    vpc_id: vpc-12345678\n    peer_vpc_id: vpc-12345678\n    peer_owner_id: 123456789102\n    state: present\n    tags:\n      Name: Peering connection for VPC 21 to VPC 22\n      CostCode: CC1234\n      Project: phoenix\n  register: vpc_peer\n\n- name: Reject a cross account VPC peering Connection\n  community.aws.ec2_vpc_peer:\n    region: ap-southeast-2\n    peering_id: \"{{ vpc_peer.peering_id }}\"\n    profile: bot03_profile_for_cross_account\n    state: reject\n\n"
  },
  "community.aws.ec2_vpc_peering_facts": {
    "doc": {
      "description": "Gets various details related to AWS VPC Peers\nThis module was called C(ec2_vpc_peering_facts) before Ansible 2.9. The usage did not change.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filters": {
          "aliases": [],
          "description": "A dict of filters to apply. Each dict item consists of a filter key and a filter value. See U(https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcPeeringConnections.html) for possible filters.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "peer_connection_ids": {
          "aliases": [],
          "description": "List of specific VPC peer IDs to get details for.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Retrieves AWS VPC Peering details using AWS methods.",
      "version_added": "1.0.0"
    },
    "examples": "\n# Simple example of listing all VPC Peers\n- name: List all vpc peers\n  community.aws.ec2_vpc_peering_info:\n    region: ap-southeast-2\n  register: all_vpc_peers\n\n- name: Debugging the result\n  ansible.builtin.debug:\n    msg: \"{{ all_vpc_peers.result }}\"\n\n- name: Get details on specific VPC peer\n  community.aws.ec2_vpc_peering_info:\n    peer_connection_ids:\n      - pcx-12345678\n      - pcx-87654321\n    region: ap-southeast-2\n  register: all_vpc_peers\n\n- name: Get all vpc peers with specific filters\n  community.aws.ec2_vpc_peering_info:\n    region: ap-southeast-2\n    filters:\n      status-code: ['pending-acceptance']\n  register: pending_vpc_peers\n"
  },
  "community.aws.ec2_vpc_peering_info": {
    "doc": {
      "description": "Gets various details related to AWS VPC Peers\nThis module was called C(ec2_vpc_peering_facts) before Ansible 2.9. The usage did not change.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filters": {
          "aliases": [],
          "description": "A dict of filters to apply. Each dict item consists of a filter key and a filter value. See U(https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcPeeringConnections.html) for possible filters.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "peer_connection_ids": {
          "aliases": [],
          "description": "List of specific VPC peer IDs to get details for.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Retrieves AWS VPC Peering details using AWS methods.",
      "version_added": "1.0.0"
    },
    "examples": "\n# Simple example of listing all VPC Peers\n- name: List all vpc peers\n  community.aws.ec2_vpc_peering_info:\n    region: ap-southeast-2\n  register: all_vpc_peers\n\n- name: Debugging the result\n  ansible.builtin.debug:\n    msg: \"{{ all_vpc_peers.result }}\"\n\n- name: Get details on specific VPC peer\n  community.aws.ec2_vpc_peering_info:\n    peer_connection_ids:\n      - pcx-12345678\n      - pcx-87654321\n    region: ap-southeast-2\n  register: all_vpc_peers\n\n- name: Get all vpc peers with specific filters\n  community.aws.ec2_vpc_peering_info:\n    region: ap-southeast-2\n    filters:\n      status-code: ['pending-acceptance']\n  register: pending_vpc_peers\n"
  },
  "community.aws.ec2_vpc_route_table": {
    "doc": {
      "description": "Manage route tables for AWS virtual private clouds",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "lookup": {
          "aliases": [],
          "description": "Look up route table by either tags or by route table ID. Non-unique tag lookup will fail. If no tags are specified then no lookup for an existing route table is performed and a new route table will be created. To change tags of a route table you must look up by id.",
          "default": "tag",
          "type": "str",
          "required": false,
          "choices": [
            "tag",
            "id"
          ],
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "propagating_vgw_ids": {
          "aliases": [],
          "description": "Enable route propagation from virtual gateways specified by ID.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "purge_routes": {
          "aliases": [],
          "description": "Purge existing routes that are not found in routes.",
          "default": "yes",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "purge_subnets": {
          "aliases": [],
          "description": "Purge existing subnets that are not found in subnets. Ignored unless the subnets option is supplied.",
          "default": "true",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "purge_tags": {
          "aliases": [],
          "description": "Purge existing tags that are not found in route table.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "route_table_id": {
          "aliases": [],
          "description": "The ID of the route table to update or delete.\nRequired when I(lookup=id).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "routes": {
          "aliases": [],
          "description": "List of routes in the route table. Routes are specified as dicts containing the keys 'dest' and one of 'gateway_id', 'instance_id', 'network_interface_id', or 'vpc_peering_connection_id'. If 'gateway_id' is specified, you can refer to the VPC's IGW by using the value 'igw'. Routes are required for present states.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Create or destroy the VPC route table.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "subnets": {
          "aliases": [],
          "description": "An array of subnets to add to this route table. Subnets may be specified by either subnet ID, Name tag, or by a CIDR such as '10.0.0.0/24'.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "tags": {
          "aliases": [
            "resource_tags"
          ],
          "description": "A dictionary of resource tags of the form: C({ tag1: value1, tag2: value2 }). Tags are used to uniquely identify route tables within a VPC when the route_table_id is not supplied.\n",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "vpc_id": {
          "aliases": [],
          "description": "VPC ID of the VPC in which to create the route table.\nRequired when I(state=present) or I(lookup=tag).",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Manage route tables for AWS virtual private clouds",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n# Basic creation example:\n- name: Set up public subnet route table\n  community.aws.ec2_vpc_route_table:\n    vpc_id: vpc-1245678\n    region: us-west-1\n    tags:\n      Name: Public\n    subnets:\n      - \"{{ jumpbox_subnet.subnet.id }}\"\n      - \"{{ frontend_subnet.subnet.id }}\"\n      - \"{{ vpn_subnet.subnet_id }}\"\n    routes:\n      - dest: 0.0.0.0/0\n        gateway_id: \"{{ igw.gateway_id }}\"\n  register: public_route_table\n\n- name: Set up NAT-protected route table\n  community.aws.ec2_vpc_route_table:\n    vpc_id: vpc-1245678\n    region: us-west-1\n    tags:\n      Name: Internal\n    subnets:\n      - \"{{ application_subnet.subnet.id }}\"\n      - 'Database Subnet'\n      - '10.0.0.0/8'\n    routes:\n      - dest: 0.0.0.0/0\n        instance_id: \"{{ nat.instance_id }}\"\n  register: nat_route_table\n\n- name: delete route table\n  community.aws.ec2_vpc_route_table:\n    vpc_id: vpc-1245678\n    region: us-west-1\n    route_table_id: \"{{ route_table.id }}\"\n    lookup: id\n    state: absent\n"
  },
  "community.aws.ec2_vpc_route_table_facts": {
    "doc": {
      "description": "Gather information about ec2 VPC route tables in AWS\nThis module was called C(ec2_vpc_route_table_facts) before Ansible 2.9. The usage did not change.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filters": {
          "aliases": [],
          "description": "A dict of filters to apply. Each dict item consists of a filter key and a filter value. See U(https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeRouteTables.html) for possible filters.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Gather information about ec2 VPC route tables in AWS",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n- name: Gather information about all VPC route tables\n  community.aws.ec2_vpc_route_table_info:\n\n- name: Gather information about a particular VPC route table using route table ID\n  community.aws.ec2_vpc_route_table_info:\n    filters:\n      route-table-id: rtb-00112233\n\n- name: Gather information about any VPC route table with a tag key Name and value Example\n  community.aws.ec2_vpc_route_table_info:\n    filters:\n      \"tag:Name\": Example\n\n- name: Gather information about any VPC route table within VPC with ID vpc-abcdef00\n  community.aws.ec2_vpc_route_table_info:\n    filters:\n      vpc-id: vpc-abcdef00\n"
  },
  "community.aws.ec2_vpc_route_table_info": {
    "doc": {
      "description": "Gather information about ec2 VPC route tables in AWS\nThis module was called C(ec2_vpc_route_table_facts) before Ansible 2.9. The usage did not change.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filters": {
          "aliases": [],
          "description": "A dict of filters to apply. Each dict item consists of a filter key and a filter value. See U(https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeRouteTables.html) for possible filters.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Gather information about ec2 VPC route tables in AWS",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n- name: Gather information about all VPC route tables\n  community.aws.ec2_vpc_route_table_info:\n\n- name: Gather information about a particular VPC route table using route table ID\n  community.aws.ec2_vpc_route_table_info:\n    filters:\n      route-table-id: rtb-00112233\n\n- name: Gather information about any VPC route table with a tag key Name and value Example\n  community.aws.ec2_vpc_route_table_info:\n    filters:\n      \"tag:Name\": Example\n\n- name: Gather information about any VPC route table within VPC with ID vpc-abcdef00\n  community.aws.ec2_vpc_route_table_info:\n    filters:\n      vpc-id: vpc-abcdef00\n"
  },
  "community.aws.ec2_vpc_vgw": {
    "doc": {
      "description": "Creates AWS VPN Virtual Gateways\nDeletes AWS VPN Virtual Gateways\nAttaches Virtual Gateways to VPCs\nDetaches Virtual Gateways from VPCs",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "asn": {
          "aliases": [],
          "description": "the BGP ASN of the amazon side",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "name of the vgw to be created or deleted",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "present to ensure resource is created.\nabsent to remove resource",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "tags": {
          "aliases": [
            "resource_tags"
          ],
          "description": "dictionary of resource tags",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "type": {
          "aliases": [],
          "description": "type of the virtual gateway to be created",
          "default": "ipsec.1",
          "type": "str",
          "required": false,
          "choices": [
            "ipsec.1"
          ],
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "vpc_id": {
          "aliases": [],
          "description": "the vpc-id of a vpc to attach or detach",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "vpn_gateway_id": {
          "aliases": [],
          "description": "vpn gateway id of an existing virtual gateway",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "wait_timeout": {
          "aliases": [],
          "description": "number of seconds to wait for status during vpc attach and detach",
          "default": "320",
          "type": "int",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Create and delete AWS VPN Virtual Gateways.",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create a new vgw attached to a specific VPC\n  community.aws.ec2_vpc_vgw:\n    state: present\n    region: ap-southeast-2\n    profile: personal\n    vpc_id: vpc-12345678\n    name: personal-testing\n    type: ipsec.1\n  register: created_vgw\n\n- name: Create a new unattached vgw\n  community.aws.ec2_vpc_vgw:\n    state: present\n    region: ap-southeast-2\n    profile: personal\n    name: personal-testing\n    type: ipsec.1\n    tags:\n      environment: production\n      owner: ABC\n  register: created_vgw\n\n- name: Remove a new vgw using the name\n  community.aws.ec2_vpc_vgw:\n    state: absent\n    region: ap-southeast-2\n    profile: personal\n    name: personal-testing\n    type: ipsec.1\n  register: deleted_vgw\n\n- name: Remove a new vgw using the vpn_gateway_id\n  community.aws.ec2_vpc_vgw:\n    state: absent\n    region: ap-southeast-2\n    profile: personal\n    vpn_gateway_id: vgw-3a9aa123\n  register: deleted_vgw\n"
  },
  "community.aws.ec2_vpc_vgw_facts": {
    "doc": {
      "description": "Gather information about virtual gateways in AWS.\nThis module was called C(ec2_vpc_vgw_facts) before Ansible 2.9. The usage did not change.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filters": {
          "aliases": [],
          "description": "A dict of filters to apply. Each dict item consists of a filter key and a filter value. See U(https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpnGateways.html) for possible filters.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "vpn_gateway_ids": {
          "aliases": [],
          "description": "Get details of a specific Virtual Gateway ID. This value should be provided as a list.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Gather information about virtual gateways in AWS",
      "version_added": "1.0.0"
    },
    "examples": "\n# # Note: These examples do not set authentication details, see the AWS Guide for details.\n\n- name: Gather information about all virtual gateways for an account or profile\n  community.aws.ec2_vpc_vgw_info:\n    region: ap-southeast-2\n    profile: production\n  register: vgw_info\n\n- name: Gather information about a filtered list of Virtual Gateways\n  community.aws.ec2_vpc_vgw_info:\n    region: ap-southeast-2\n    profile: production\n    filters:\n        \"tag:Name\": \"main-virt-gateway\"\n  register: vgw_info\n\n- name: Gather information about a specific virtual gateway by VpnGatewayIds\n  community.aws.ec2_vpc_vgw_info:\n    region: ap-southeast-2\n    profile: production\n    vpn_gateway_ids: vgw-c432f6a7\n  register: vgw_info\n"
  },
  "community.aws.ec2_vpc_vgw_info": {
    "doc": {
      "description": "Gather information about virtual gateways in AWS.\nThis module was called C(ec2_vpc_vgw_facts) before Ansible 2.9. The usage did not change.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filters": {
          "aliases": [],
          "description": "A dict of filters to apply. Each dict item consists of a filter key and a filter value. See U(https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpnGateways.html) for possible filters.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "vpn_gateway_ids": {
          "aliases": [],
          "description": "Get details of a specific Virtual Gateway ID. This value should be provided as a list.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Gather information about virtual gateways in AWS",
      "version_added": "1.0.0"
    },
    "examples": "\n# # Note: These examples do not set authentication details, see the AWS Guide for details.\n\n- name: Gather information about all virtual gateways for an account or profile\n  community.aws.ec2_vpc_vgw_info:\n    region: ap-southeast-2\n    profile: production\n  register: vgw_info\n\n- name: Gather information about a filtered list of Virtual Gateways\n  community.aws.ec2_vpc_vgw_info:\n    region: ap-southeast-2\n    profile: production\n    filters:\n        \"tag:Name\": \"main-virt-gateway\"\n  register: vgw_info\n\n- name: Gather information about a specific virtual gateway by VpnGatewayIds\n  community.aws.ec2_vpc_vgw_info:\n    region: ap-southeast-2\n    profile: production\n    vpn_gateway_ids: vgw-c432f6a7\n  register: vgw_info\n"
  },
  "community.aws.ec2_vpc_vpn": {
    "doc": {
      "description": "This module creates, modifies, and deletes VPN connections. Idempotence is achieved by using the filters option or specifying the VPN connection identifier.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "connection_type": {
          "aliases": [],
          "description": "The type of VPN connection.\nAt this time only C(ipsec.1) is supported.",
          "default": "ipsec.1",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "customer_gateway_id": {
          "aliases": [],
          "description": "The ID of the customer gateway.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "delay": {
          "aliases": [],
          "description": "The time, in seconds, to wait before checking operation again.",
          "default": "15",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filters": {
          "aliases": [],
          "description": "An alternative to using I(vpn_connection_id). If multiple matches are found, vpn_connection_id is required. If one of the following suboptions is a list of items to filter by, only one item needs to match to find the VPN that correlates. e.g. if the filter I(cidr) is C(['194.168.2.0/24', '192.168.2.0/24']) and the VPN route only has the destination cidr block of C(192.168.2.0/24) it will be found with this filter (assuming there are not multiple VPNs that are matched). Another example, if the filter I(vpn) is equal to C(['vpn-ccf7e7ad', 'vpn-cb0ae2a2']) and one of of the VPNs has the state deleted (exists but is unmodifiable) and the other exists and is not deleted, it will be found via this filter. See examples.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "bgp": {
              "aliases": [],
              "description": "The BGP ASN number associated with a BGP device. Only works if the connection is attached. This filtering option is currently not working.",
              "required": false,
              "suboptions": {}
            },
            "cgw": {
              "aliases": [],
              "description": "The customer gateway id as a string or a list of those strings.",
              "required": false,
              "suboptions": {}
            },
            "cgw-config": {
              "aliases": [],
              "description": "The customer gateway configuration of the VPN as a string (in the format of the return value) or a list of those strings.",
              "required": false,
              "suboptions": {}
            },
            "cidr": {
              "aliases": [],
              "description": "The destination cidr of the VPN's route as a string or a list of those strings.",
              "required": false,
              "suboptions": {}
            },
            "static-routes-only": {
              "aliases": [],
              "description": "The type of routing; C(true) or C(false).",
              "required": false,
              "suboptions": {}
            },
            "tag-keys": {
              "aliases": [],
              "description": "The key of a tag as a string or a list of those strings.",
              "required": false,
              "suboptions": {}
            },
            "tag-values": {
              "aliases": [],
              "description": "The value of a tag as a string or a list of those strings.",
              "required": false,
              "suboptions": {}
            },
            "tags": {
              "aliases": [],
              "description": "A dict of key value pairs.",
              "required": false,
              "suboptions": {}
            },
            "vgw": {
              "aliases": [],
              "description": "The virtual private gateway as a string or a list of those strings.",
              "required": false,
              "suboptions": {}
            },
            "vpn": {
              "aliases": [],
              "description": "The VPN connection id as a string or a list of those strings.",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "purge_routes": {
          "aliases": [],
          "description": "Whether or not to delete VPN connections routes that are not specified in the task.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "purge_tags": {
          "aliases": [],
          "description": "Whether or not to delete VPN connections tags that are associated with the connection but not specified in the task.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "routes": {
          "aliases": [],
          "description": "Routes to add to the connection.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The desired state of the VPN connection.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "static_only": {
          "aliases": [],
          "description": "Indicates whether the VPN connection uses static routes only. Static routes must be used for devices that don't support BGP.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Tags to attach to the VPN connection.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tunnel_options": {
          "aliases": [],
          "description": "An optional list object containing no more than two dict members, each of which may contain I(TunnelInsideCidr) and/or I(PreSharedKey) keys with appropriate string values.  AWS defaults will apply in absence of either of the aforementioned keys.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "PreSharedKey": {
              "aliases": [],
              "description": "The pre-shared key (PSK) to establish initial authentication between the virtual private gateway and customer gateway.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "TunnelInsideCidr": {
              "aliases": [],
              "description": "The range of inside IP addresses for the tunnel.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "vpn_connection_id": {
          "aliases": [],
          "description": "The ID of the VPN connection. Required to modify or delete a connection if the filters option does not provide a unique match.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "vpn_gateway_id": {
          "aliases": [],
          "description": "The ID of the virtual private gateway.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "wait_timeout": {
          "aliases": [],
          "description": "How long, in seconds, before wait gives up.",
          "default": "600",
          "type": "int",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Create, modify, and delete EC2 VPN connections.",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: None of these examples set aws_access_key, aws_secret_key, or region.\n# It is assumed that their matching environment variables are set.\n\n- name: create a VPN connection\n  community.aws.ec2_vpc_vpn:\n    state: present\n    vpn_gateway_id: vgw-XXXXXXXX\n    customer_gateway_id: cgw-XXXXXXXX\n\n- name: modify VPN connection tags\n  community.aws.ec2_vpc_vpn:\n    state: present\n    vpn_connection_id: vpn-XXXXXXXX\n    tags:\n      Name: ansible-tag-1\n      Other: ansible-tag-2\n\n- name: delete a connection\n  community.aws.ec2_vpc_vpn:\n    vpn_connection_id: vpn-XXXXXXXX\n    state: absent\n\n- name: modify VPN tags (identifying VPN by filters)\n  community.aws.ec2_vpc_vpn:\n    state: present\n    filters:\n      cidr: 194.168.1.0/24\n      tag-keys:\n        - Ansible\n        - Other\n    tags:\n      New: Tag\n    purge_tags: true\n    static_only: true\n\n- name: set up VPN with tunnel options utilizing 'TunnelInsideCidr' only\n  community.aws.ec2_vpc_vpn:\n    state: present\n    filters:\n      vpn: vpn-XXXXXXXX\n    static_only: true\n    tunnel_options:\n      -\n        TunnelInsideCidr: '169.254.100.1/30'\n      -\n        TunnelInsideCidr: '169.254.100.5/30'\n\n- name: add routes and remove any preexisting ones\n  community.aws.ec2_vpc_vpn:\n    state: present\n    filters:\n      vpn: vpn-XXXXXXXX\n    routes:\n      - 195.168.2.0/24\n      - 196.168.2.0/24\n    purge_routes: true\n\n- name: remove all routes\n  community.aws.ec2_vpc_vpn:\n    state: present\n    vpn_connection_id: vpn-XXXXXXXX\n    routes: []\n    purge_routes: true\n\n- name: delete a VPN identified by filters\n  community.aws.ec2_vpc_vpn:\n    state: absent\n    filters:\n      tags:\n        Ansible: Tag\n"
  },
  "community.aws.ec2_vpc_vpn_facts": {
    "doc": {
      "description": "Gather information about VPN Connections in AWS.\nThis module was called C(ec2_vpc_vpn_facts) before Ansible 2.9. The usage did not change.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filters": {
          "aliases": [],
          "description": "A dict of filters to apply. Each dict item consists of a filter key and a filter value. See U(https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpnConnections.html) for possible filters.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "vpn_connection_ids": {
          "aliases": [],
          "description": "Get details of a specific VPN connections using vpn connection ID/IDs. This value should be provided as a list.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Gather information about VPN Connections in AWS.",
      "version_added": "1.0.0"
    },
    "examples": "\n# # Note: These examples do not set authentication details, see the AWS Guide for details.\n- name: Gather information about all vpn connections\n  community.aws.ec2_vpc_vpn_info:\n\n- name: Gather information about a filtered list of vpn connections, based on tags\n  community.aws.ec2_vpc_vpn_info:\n    filters:\n      \"tag:Name\": test-connection\n  register: vpn_conn_info\n\n- name: Gather information about vpn connections by specifying connection IDs.\n  community.aws.ec2_vpc_vpn_info:\n    filters:\n      vpn-gateway-id: vgw-cbe66beb\n  register: vpn_conn_info\n"
  },
  "community.aws.ec2_vpc_vpn_info": {
    "doc": {
      "description": "Gather information about VPN Connections in AWS.\nThis module was called C(ec2_vpc_vpn_facts) before Ansible 2.9. The usage did not change.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filters": {
          "aliases": [],
          "description": "A dict of filters to apply. Each dict item consists of a filter key and a filter value. See U(https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpnConnections.html) for possible filters.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "vpn_connection_ids": {
          "aliases": [],
          "description": "Get details of a specific VPN connections using vpn connection ID/IDs. This value should be provided as a list.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Gather information about VPN Connections in AWS.",
      "version_added": "1.0.0"
    },
    "examples": "\n# # Note: These examples do not set authentication details, see the AWS Guide for details.\n- name: Gather information about all vpn connections\n  community.aws.ec2_vpc_vpn_info:\n\n- name: Gather information about a filtered list of vpn connections, based on tags\n  community.aws.ec2_vpc_vpn_info:\n    filters:\n      \"tag:Name\": test-connection\n  register: vpn_conn_info\n\n- name: Gather information about vpn connections by specifying connection IDs.\n  community.aws.ec2_vpc_vpn_info:\n    filters:\n      vpn-gateway-id: vgw-cbe66beb\n  register: vpn_conn_info\n"
  },
  "community.aws.ec2_win_password": {
    "doc": {
      "description": "Gets the default administrator password from any EC2 Windows instance. The instance is referenced by its id (e.g. C(i-XXXXXXX)).",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "instance_id": {
          "aliases": [],
          "description": "The instance id to get the password data from.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "key_data": {
          "aliases": [],
          "description": "The private key (usually stored in vault).\nConflicts with I(key_file),",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "key_file": {
          "aliases": [],
          "description": "Path to the file containing the key pair used on the instance.\nConflicts with I(key_data).",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "key_passphrase": {
          "aliases": [],
          "description": "The passphrase for the instance key pair. The key must use DES or 3DES encryption for this module to decrypt it. You can use openssl to convert your password protected keys if they do not use DES or 3DES. ex) C(openssl rsa -in current_key -out new_key -des3).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "wait": {
          "aliases": [],
          "description": "Whether or not to wait for the password to be available before returning.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "wait_timeout": {
          "aliases": [],
          "description": "Number of seconds to wait before giving up.",
          "default": "120",
          "type": "int",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0",
        "cryptography",
        "python >= 3.6"
      ],
      "short_description": "Gets the default administrator password for EC2 Windows instances",
      "version_added": "1.0.0"
    },
    "examples": "\n# Example of getting a password\n- name: get the Administrator password\n  community.aws.ec2_win_password:\n    profile: my-boto-profile\n    instance_id: i-XXXXXX\n    region: us-east-1\n    key_file: \"~/aws-creds/my_test_key.pem\"\n\n# Example of getting a password using a variable\n- name: get the Administrator password\n  community.aws.ec2_win_password:\n    profile: my-boto-profile\n    instance_id: i-XXXXXX\n    region: us-east-1\n    key_data: \"{{ ec2_private_key }}\"\n\n# Example of getting a password with a password protected key\n- name: get the Administrator password\n  community.aws.ec2_win_password:\n    profile: my-boto-profile\n    instance_id: i-XXXXXX\n    region: us-east-1\n    key_file: \"~/aws-creds/my_protected_test_key.pem\"\n    key_passphrase: \"secret\"\n\n# Example of waiting for a password\n- name: get the Administrator password\n  community.aws.ec2_win_password:\n    profile: my-boto-profile\n    instance_id: i-XXXXXX\n    region: us-east-1\n    key_file: \"~/aws-creds/my_test_key.pem\"\n    wait: yes\n    wait_timeout: 45\n"
  },
  "community.aws.ecs_attribute": {
    "doc": {
      "description": "Create, update or delete ECS container instance attributes.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "attributes": {
          "aliases": [],
          "description": "List of attributes.",
          "type": "list",
          "required": true,
          "elements": "dict",
          "suboptions": {
            "name": {
              "aliases": [],
              "description": "The name of the attribute. Up to 128 letters (uppercase and lowercase), numbers, hyphens, underscores, and periods are allowed.",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "value": {
              "aliases": [],
              "description": "The value of the attribute. Up to 128 letters (uppercase and lowercase), numbers, hyphens, underscores, periods, at signs (@), forward slashes, colons, and spaces are allowed.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cluster": {
          "aliases": [],
          "description": "The short name or full Amazon Resource Name (ARN) of the cluster that contains the resource to apply attributes.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_instance_id": {
          "aliases": [],
          "description": "EC2 instance ID of ECS cluster container instance.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The desired state of the attributes.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "manage ecs attributes",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n- name: Set attributes\n  community.aws.ecs_attribute:\n    state: present\n    cluster: test-cluster\n    ec2_instance_id: \"{{ ec2_id }}\"\n    attributes:\n      - flavor: test\n      - migrated\n  delegate_to: localhost\n\n- name: Delete attributes\n  community.aws.ecs_attribute:\n    state: absent\n    cluster: test-cluster\n    ec2_instance_id: \"{{ ec2_id }}\"\n    attributes:\n      - flavor: test\n      - migrated\n  delegate_to: localhost\n"
  },
  "community.aws.ecs_cluster": {
    "doc": {
      "description": "Creates or terminates ecs clusters.",
      "has_action": false,
      "notes": "When deleting a cluster, the information returned is the state of the cluster prior to deletion.\nIt will also wait for a cluster to have instances registered to it.\nIf parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "delay": {
          "aliases": [],
          "description": "Number of seconds to wait.",
          "default": "10",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The cluster name.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "repeat": {
          "aliases": [],
          "description": "The number of times to wait for the cluster to have an instance.",
          "default": "10",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The desired state of the cluster.",
          "type": "str",
          "required": true,
          "choices": [
            "present",
            "absent",
            "has_instances"
          ],
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Create or terminate ECS clusters.",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n- name: Cluster creation\n  community.aws.ecs_cluster:\n    name: default\n    state: present\n\n- name: Cluster deletion\n  community.aws.ecs_cluster:\n    name: default\n    state: absent\n\n- name: Wait for register\n  community.aws.ecs_cluster:\n    name: \"{{ new_cluster }}\"\n    state: has_instances\n    delay: 10\n    repeat: 10\n  register: task_output\n\n"
  },
  "community.aws.ecs_ecr": {
    "doc": {
      "description": "Manage Elastic Container Registry repositories.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "force_set_policy": {
          "aliases": [],
          "description": "If I(force_set_policy=false), it prevents setting a policy that would prevent you from setting another policy in the future.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "image_tag_mutability": {
          "aliases": [],
          "description": "Configure whether repository should be mutable (ie. an already existing tag can be overwritten) or not.",
          "default": "mutable",
          "type": "str",
          "required": false,
          "choices": [
            "mutable",
            "immutable"
          ],
          "suboptions": {}
        },
        "lifecycle_policy": {
          "aliases": [],
          "description": "JSON or dict that represents the new lifecycle policy.",
          "type": "json",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the repository.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "policy": {
          "aliases": [],
          "description": "JSON or dict that represents the new policy.",
          "type": "json",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "purge_lifecycle_policy": {
          "aliases": [],
          "description": "if C(true), remove the lifecycle policy from the repository.\nDefaults to C(false).",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "purge_policy": {
          "aliases": [
            "delete_policy"
          ],
          "description": "If yes, remove the policy from the repository.\nAlias C(delete_policy) has been deprecated and will be removed after 2022-06-01.\nDefaults to C(false).",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "registry_id": {
          "aliases": [],
          "description": "AWS account id associated with the registry.\nIf not specified, the default registry is assumed.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scan_on_push": {
          "aliases": [],
          "description": "if C(true), images are scanned for known vulnerabilities after being pushed to the repository.",
          "default": "False",
          "type": "bool",
          "required": false,
          "version_added": "1.3.0",
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Create or destroy the repository.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Manage Elastic Container Registry repositories",
      "version_added": "1.0.0"
    },
    "examples": "\n# If the repository does not exist, it is created. If it does exist, would not\n# affect any policies already on it.\n- name: ecr-repo\n  community.aws.ecs_ecr:\n    name: super/cool\n\n- name: destroy-ecr-repo\n  community.aws.ecs_ecr:\n    name: old/busted\n    state: absent\n\n- name: Cross account ecr-repo\n  community.aws.ecs_ecr:\n    registry_id: 999999999999\n    name: cross/account\n\n- name: set-policy as object\n  community.aws.ecs_ecr:\n    name: needs-policy-object\n    policy:\n      Version: '2008-10-17'\n      Statement:\n        - Sid: read-only\n          Effect: Allow\n          Principal:\n            AWS: '{{ read_only_arn }}'\n          Action:\n            - ecr:GetDownloadUrlForLayer\n            - ecr:BatchGetImage\n            - ecr:BatchCheckLayerAvailability\n\n- name: set-policy as string\n  community.aws.ecs_ecr:\n    name: needs-policy-string\n    policy: \"{{ lookup('template', 'policy.json.j2') }}\"\n\n- name: delete-policy\n  community.aws.ecs_ecr:\n    name: needs-no-policy\n    purge_policy: yes\n\n- name: create immutable ecr-repo\n  community.aws.ecs_ecr:\n    name: super/cool\n    image_tag_mutability: immutable\n\n- name: set-lifecycle-policy\n  community.aws.ecs_ecr:\n    name: needs-lifecycle-policy\n    scan_on_push: yes\n    lifecycle_policy:\n      rules:\n        - rulePriority: 1\n          description: new policy\n          selection:\n            tagStatus: untagged\n            countType: sinceImagePushed\n            countUnit: days\n            countNumber: 365\n          action:\n            type: expire\n\n- name: purge-lifecycle-policy\n  community.aws.ecs_ecr:\n    name: needs-no-lifecycle-policy\n    purge_lifecycle_policy: true\n"
  },
  "community.aws.ecs_service": {
    "doc": {
      "description": "Creates or terminates ECS. services.",
      "has_action": false,
      "notes": "The service role specified must be assumable. (i.e. have a trust relationship for the ecs service, ecs.amazonaws.com)\nFor details of the parameters and returns see U(https://boto3.readthedocs.io/en/latest/reference/services/ecs.html).\nAn IAM role must have been previously created.\nIf parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "client_token": {
          "aliases": [],
          "description": "Unique, case-sensitive identifier you provide to ensure the idempotency of the request. Up to 32 ASCII characters are allowed.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cluster": {
          "aliases": [],
          "description": "The name of the cluster in which the service exists.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "delay": {
          "aliases": [],
          "description": "The time to wait before checking that the service is available.",
          "default": "10",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "deployment_configuration": {
          "aliases": [],
          "description": "Optional parameters that control the deployment_configuration.\nFormat is '{\"maximum_percent\":<integer>, \"minimum_healthy_percent\":<integer>}",
          "type": "dict",
          "required": false,
          "suboptions": {
            "maximum_percent": {
              "aliases": [],
              "description": "Upper limit on the number of tasks in a service that are allowed in the RUNNING or PENDING state during a deployment.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "minimum_healthy_percent": {
              "aliases": [],
              "description": "A lower limit on the number of tasks in a service that must remain in the RUNNING state during a deployment.",
              "type": "int",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "desired_count": {
          "aliases": [],
          "description": "The count of how many instances of the service.\nThis parameter is required when I(state=present).",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "force_deletion": {
          "aliases": [],
          "description": "Forcabily delete the service. Required when deleting a service with >0 scale, or no target group.",
          "default": "False",
          "type": "bool",
          "required": false,
          "version_added": "2.1.0",
          "suboptions": {}
        },
        "force_new_deployment": {
          "aliases": [],
          "description": "Force deployment of service even if there are no changes.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "health_check_grace_period_seconds": {
          "aliases": [],
          "description": "Seconds to wait before health checking the freshly added/updated services.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "launch_type": {
          "aliases": [],
          "description": "The launch type on which to run your service.",
          "type": "str",
          "required": false,
          "choices": [
            "EC2",
            "FARGATE"
          ],
          "suboptions": {}
        },
        "load_balancers": {
          "aliases": [],
          "description": "The list of ELBs defined for this service.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the service.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "network_configuration": {
          "aliases": [],
          "description": "Network configuration of the service. Only applicable for task definitions created with I(network_mode=awsvpc).",
          "type": "dict",
          "required": false,
          "suboptions": {
            "assign_public_ip": {
              "aliases": [],
              "description": "Whether the task's elastic network interface receives a public IP address.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "security_groups": {
              "aliases": [],
              "description": "A list of security group names or group IDs to associate with the task.",
              "type": "list",
              "required": false,
              "elements": "str",
              "suboptions": {}
            },
            "subnets": {
              "aliases": [],
              "description": "A list of subnet IDs to associate with the task.",
              "type": "list",
              "required": false,
              "elements": "str",
              "suboptions": {}
            }
          }
        },
        "placement_constraints": {
          "aliases": [],
          "description": "The placement constraints for the tasks in the service.\nSee U(https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_PlacementConstraint.html) for more details.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "expression": {
              "aliases": [],
              "description": "A cluster query language expression to apply to the constraint.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "type": {
              "aliases": [],
              "description": "The type of constraint.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "placement_strategy": {
          "aliases": [],
          "description": "The placement strategy objects to use for tasks in your service. You can specify a maximum of 5 strategy rules per service.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "field": {
              "aliases": [],
              "description": "The field to apply the placement strategy against.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "type": {
              "aliases": [],
              "description": "The type of placement strategy.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "platform_version": {
          "aliases": [],
          "description": "Numeric part of platform version or LATEST\nSee U(https://docs.aws.amazon.com/AmazonECS/latest/developerguide/platform_versions.html) for more details.",
          "type": "str",
          "required": false,
          "version_added": "1.5.0",
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "repeat": {
          "aliases": [],
          "description": "The number of times to check that the service is available.",
          "default": "10",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "role": {
          "aliases": [],
          "description": "The name or full Amazon Resource Name (ARN) of the IAM role that allows your Amazon ECS container agent to make calls to your load balancer on your behalf.\nThis parameter is only required if you are using a load balancer with your service in a network mode other than C(awsvpc).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scheduling_strategy": {
          "aliases": [],
          "description": "The scheduling strategy.\nDefaults to C(REPLICA) if not given to preserve previous behavior.",
          "type": "str",
          "required": false,
          "choices": [
            "DAEMON",
            "REPLICA"
          ],
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_registries": {
          "aliases": [],
          "description": "Describes service discovery registries this service will register with.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "arn": {
              "aliases": [],
              "description": "Service discovery registry ARN.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "container_name": {
              "aliases": [],
              "description": "Container name for service discovery registration.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "container_port": {
              "aliases": [],
              "description": "Container port for service discovery registration.",
              "type": "int",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "The desired state of the service.",
          "type": "str",
          "required": true,
          "choices": [
            "present",
            "absent",
            "deleting"
          ],
          "suboptions": {}
        },
        "task_definition": {
          "aliases": [],
          "description": "The task definition the service will run.\nThis parameter is required when I(state=present).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Create, terminate, start or stop a service in ECS",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n# Basic provisioning example\n- community.aws.ecs_service:\n    state: present\n    name: console-test-service\n    cluster: new_cluster\n    task_definition: 'new_cluster-task:1'\n    desired_count: 0\n\n- name: create ECS service on VPC network\n  community.aws.ecs_service:\n    state: present\n    name: console-test-service\n    cluster: new_cluster\n    task_definition: 'new_cluster-task:1'\n    desired_count: 0\n    network_configuration:\n      subnets:\n      - subnet-abcd1234\n      security_groups:\n      - sg-aaaa1111\n      - my_security_group\n\n# Simple example to delete\n- community.aws.ecs_service:\n    name: default\n    state: absent\n    cluster: new_cluster\n\n# With custom deployment configuration (added in version 2.3), placement constraints and strategy (added in version 2.4)\n- community.aws.ecs_service:\n    state: present\n    name: test-service\n    cluster: test-cluster\n    task_definition: test-task-definition\n    desired_count: 3\n    deployment_configuration:\n      minimum_healthy_percent: 75\n      maximum_percent: 150\n    placement_constraints:\n      - type: memberOf\n        expression: 'attribute:flavor==test'\n    placement_strategy:\n      - type: binpack\n        field: memory\n"
  },
  "community.aws.ecs_service_facts": {
    "doc": {
      "description": "Lists or describes services in ECS.\nThis module was called C(ecs_service_facts) before Ansible 2.9, returning C(ansible_facts). Note that the M(community.aws.ecs_service_info) module no longer returns C(ansible_facts)!",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cluster": {
          "aliases": [],
          "description": "The cluster ARNS in which to list the services.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "details": {
          "aliases": [],
          "description": "Set this to true if you want detailed information about the services.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "events": {
          "aliases": [],
          "description": "Whether to return ECS service events. Only has an effect if I(details=true).",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service": {
          "aliases": [],
          "description": "One or more services to get details for",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "List or describe services in ECS",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n# Basic listing example\n- community.aws.ecs_service_info:\n    cluster: test-cluster\n    service: console-test-service\n    details: true\n  register: output\n\n# Basic listing example\n- community.aws.ecs_service_info:\n    cluster: test-cluster\n  register: output\n"
  },
  "community.aws.ecs_service_info": {
    "doc": {
      "description": "Lists or describes services in ECS.\nThis module was called C(ecs_service_facts) before Ansible 2.9, returning C(ansible_facts). Note that the M(community.aws.ecs_service_info) module no longer returns C(ansible_facts)!",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cluster": {
          "aliases": [],
          "description": "The cluster ARNS in which to list the services.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "details": {
          "aliases": [],
          "description": "Set this to true if you want detailed information about the services.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "events": {
          "aliases": [],
          "description": "Whether to return ECS service events. Only has an effect if I(details=true).",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service": {
          "aliases": [],
          "description": "One or more services to get details for",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "List or describe services in ECS",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n# Basic listing example\n- community.aws.ecs_service_info:\n    cluster: test-cluster\n    service: console-test-service\n    details: true\n  register: output\n\n# Basic listing example\n- community.aws.ecs_service_info:\n    cluster: test-cluster\n  register: output\n"
  },
  "community.aws.ecs_tag": {
    "doc": {
      "description": "Creates and removes tags for Amazon ECS resources.\nResources are referenced by their cluster name.",
      "has_action": false,
      "notes": "none\nIf parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cluster_name": {
          "aliases": [],
          "description": "The name of the cluster whose resources we are tagging.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "purge_tags": {
          "aliases": [],
          "description": "Whether unspecified tags should be removed from the resource.\nNote that when combined with I(state=absent), specified tags with non-matching values are not purged.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource": {
          "aliases": [],
          "description": "The ECS resource name.\nRequired unless I(resource_type=cluster).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_type": {
          "aliases": [],
          "description": "The type of resource.",
          "default": "cluster",
          "type": "str",
          "required": false,
          "choices": [
            "cluster",
            "task",
            "service",
            "task_definition",
            "container"
          ],
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the tags should be present or absent on the resource.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "A dictionary of tags to add or remove from the resource.\nIf the value provided for a tag is null and I(state=absent), the tag will be removed regardless of its current value.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "create and remove tags on Amazon ECS resources",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Ensure tags are present on a resource\n  community.aws.ecs_tag:\n    cluster_name: mycluster\n    resource_type: cluster\n    state: present\n    tags:\n      Name: ubervol\n      env: prod\n\n- name: Remove the Env tag\n  community.aws.ecs_tag:\n    cluster_name: mycluster\n    resource_type: cluster\n    tags:\n      Env:\n    state: absent\n\n- name: Remove the Env tag if it's currently 'development'\n  community.aws.ecs_tag:\n    cluster_name: mycluster\n    resource_type: cluster\n    tags:\n      Env: development\n    state: absent\n\n- name: Remove all tags except for Name from a cluster\n  community.aws.ecs_tag:\n    cluster_name: mycluster\n    resource_type: cluster\n    tags:\n        Name: foo\n    state: absent\n    purge_tags: true\n"
  },
  "community.aws.ecs_task": {
    "doc": {
      "description": "Creates or deletes instances of task definitions.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cluster": {
          "aliases": [],
          "description": "The name of the cluster to run the task on.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "container_instances": {
          "aliases": [],
          "description": "The list of container instances on which to deploy the task.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "count": {
          "aliases": [],
          "description": "How many new instances to start.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "launch_type": {
          "aliases": [],
          "description": "The launch type on which to run your service.",
          "type": "str",
          "required": false,
          "choices": [
            "EC2",
            "FARGATE"
          ],
          "suboptions": {}
        },
        "network_configuration": {
          "aliases": [],
          "description": "Network configuration of the service. Only applicable for task definitions created with I(network_mode=awsvpc).",
          "type": "dict",
          "required": false,
          "suboptions": {
            "assign_public_ip": {
              "aliases": [],
              "description": "Whether the task's elastic network interface receives a public IP address.",
              "type": "bool",
              "required": false,
              "version_added": "1.5.0",
              "suboptions": {}
            },
            "security_groups": {
              "aliases": [],
              "description": "A list of group names or group IDs for the task.",
              "type": "list",
              "required": false,
              "elements": "str",
              "suboptions": {}
            },
            "subnets": {
              "aliases": [],
              "description": "A list of subnet IDs to which the task is attached.",
              "type": "list",
              "required": false,
              "elements": "str",
              "suboptions": {}
            }
          }
        },
        "operation": {
          "aliases": [],
          "description": "Which task operation to execute.\nWhen I(operation=run) I(task_definition) must be set.\nWhen I(operation=start) both I(task_definition) and I(container_instances) must be set.\nWhen I(operation=stop) both I(task_definition) and I(task) must be set.",
          "type": "str",
          "required": true,
          "choices": [
            "run",
            "start",
            "stop"
          ],
          "suboptions": {}
        },
        "overrides": {
          "aliases": [],
          "description": "A dictionary of values to pass to the new instances.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "started_by": {
          "aliases": [],
          "description": "A value showing who or what started the task (for informational purposes).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Tags that will be added to ecs tasks on start and run",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "task": {
          "aliases": [],
          "description": "The ARN of the task to stop.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "task_definition": {
          "aliases": [],
          "description": "The task definition to start, run or stop.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Run, start or stop a task in ecs",
      "version_added": "1.0.0"
    },
    "examples": "\n# Simple example of run task\n- name: Run task\n  community.aws.ecs_task:\n    operation: run\n    cluster: console-sample-app-static-cluster\n    task_definition: console-sample-app-static-taskdef\n    count: 1\n    started_by: ansible_user\n  register: task_output\n\n# Simple example of start task\n\n- name: Start a task\n  community.aws.ecs_task:\n      operation: start\n      cluster: console-sample-app-static-cluster\n      task_definition: console-sample-app-static-taskdef\n      task: \"arn:aws:ecs:us-west-2:172139249013:task/3f8353d1-29a8-4689-bbf6-ad79937ffe8a\"\n      tags:\n        resourceName: a_task_for_ansible_to_run\n        type: long_running_task\n        network: internal\n        version: 1.4\n      container_instances:\n      - arn:aws:ecs:us-west-2:172139249013:container-instance/79c23f22-876c-438a-bddf-55c98a3538a8\n      started_by: ansible_user\n      network_configuration:\n        subnets:\n        - subnet-abcd1234\n        security_groups:\n        - sg-aaaa1111\n        - my_security_group\n  register: task_output\n\n- name: RUN a task on Fargate\n  community.aws.ecs_task:\n      operation: run\n      cluster: console-sample-app-static-cluster\n      task_definition: console-sample-app-static-taskdef\n      task: \"arn:aws:ecs:us-west-2:172139249013:task/3f8353d1-29a8-4689-bbf6-ad79937ffe8a\"\n      started_by: ansible_user\n      launch_type: FARGATE\n      network_configuration:\n        subnets:\n        - subnet-abcd1234\n        security_groups:\n        - sg-aaaa1111\n        - my_security_group\n  register: task_output\n\n- name: RUN a task on Fargate with public ip assigned\n  community.aws.ecs_task:\n      operation: run\n      count: 2\n      cluster: console-sample-app-static-cluster\n      task_definition: console-sample-app-static-taskdef\n      task: \"arn:aws:ecs:us-west-2:172139249013:task/3f8353d1-29a8-4689-bbf6-ad79937ffe8a\"\n      started_by: ansible_user\n      launch_type: FARGATE\n      network_configuration:\n        assign_public_ip: yes\n        subnets:\n        - subnet-abcd1234\n  register: task_output\n\n- name: Stop a task\n  community.aws.ecs_task:\n      operation: stop\n      cluster: console-sample-app-static-cluster\n      task_definition: console-sample-app-static-taskdef\n      task: \"arn:aws:ecs:us-west-2:172139249013:task/3f8353d1-29a8-4689-bbf6-ad79937ffe8a\"\n"
  },
  "community.aws.ecs_taskdefinition": {
    "doc": {
      "description": "Registers or deregisters task definitions in the Amazon Web Services (AWS) EC2 Container Service (ECS).",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "arn": {
          "aliases": [],
          "description": "The ARN of the task description to delete.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "containers": {
          "aliases": [],
          "description": "A list of containers definitions.\nSee U(https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/ecs.html) for a complete list of parameters.",
          "type": "list",
          "required": true,
          "elements": "dict",
          "suboptions": {
            "command": {
              "aliases": [],
              "description": "The command that is passed to the container.",
              "type": "list",
              "required": false,
              "suboptions": {}
            },
            "cpu": {
              "aliases": [],
              "description": "The number of cpu units reserved for the container.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "dependsOn": {
              "aliases": [],
              "description": "The dependencies defined for container startup and shutdown.\nWhen a dependency is defined for container startup, for container shutdown it is reversed.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "condition": {
                  "aliases": [],
                  "description": "The dependency condition of the container.",
                  "type": "str",
                  "required": true,
                  "choices": [
                    "start",
                    "complete",
                    "success",
                    "healthy"
                  ],
                  "suboptions": {}
                },
                "containerName": {
                  "aliases": [],
                  "description": "The name of a container.",
                  "type": "str",
                  "required": true,
                  "suboptions": {}
                }
              }
            },
            "disableNetworking": {
              "aliases": [],
              "description": "When this parameter is C(True), networking is disabled within the container.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "dnsSearchDomains": {
              "aliases": [],
              "description": "A list of DNS search domains that are presented to the container.\nThis parameter is not supported for Windows containers.",
              "type": "list",
              "required": false,
              "suboptions": {}
            },
            "dnsServers": {
              "aliases": [],
              "description": "A list of DNS servers that are presented to the container.\nThis parameter is not supported for Windows containers.",
              "type": "list",
              "required": false,
              "suboptions": {}
            },
            "dockerLabels": {
              "aliases": [],
              "description": "A key/value map of labels to add to the container.",
              "type": "dict",
              "required": false,
              "suboptions": {}
            },
            "dockerSecurityOptions": {
              "aliases": [],
              "description": "A list of strings to provide custom labels for SELinux and AppArmor multi-level security systems.\nThis parameter is not supported for Windows containers.",
              "type": "list",
              "required": false,
              "suboptions": {}
            },
            "entryPoint": {
              "aliases": [],
              "description": "The entry point that is passed to the container.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "environment": {
              "aliases": [],
              "description": "The environment variables to pass to a container.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "name": {
                  "aliases": [],
                  "description": "The name of the key-value pair.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "value": {
                  "aliases": [],
                  "description": "The value of the key-value pair.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "environmentFiles": {
              "aliases": [],
              "description": "A list of files containing the environment variables to pass to a container.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "type": {
                  "aliases": [],
                  "description": "The file type to use. The only supported value is C(s3).",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "value": {
                  "aliases": [],
                  "description": "The Amazon Resource Name (ARN) of the Amazon S3 object containing the environment variable file.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "essential": {
              "aliases": [],
              "description": "If I(essential=True), and the container fails or stops for any reason, all other containers that are part of the task are stopped.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "extraHosts": {
              "aliases": [],
              "description": "A list of hostnames and IP address mappings to append to the /etc/hosts file on the container.\nThis parameter is not supported for Windows containers or tasks that use I(network_mode=awsvpc).",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "hostname": {
                  "aliases": [],
                  "description": "The hostname to use in the /etc/hosts entry.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "ipAddress": {
                  "aliases": [],
                  "description": "The IP address to use in the /etc/hosts entry.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "healthCheck": {
              "aliases": [],
              "description": "The health check command and associated configuration parameters for the container.",
              "type": "dict",
              "required": false,
              "suboptions": {}
            },
            "hostname": {
              "aliases": [],
              "description": "The hostname to use for your container.\nThis parameter is not supported if I(network_mode=awsvpc).",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "image": {
              "aliases": [],
              "description": "The image used to start a container.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "interactive": {
              "aliases": [],
              "description": "When I(interactive=True), it allows to deploy containerized applications that require stdin or a tty to be allocated.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "links": {
              "aliases": [],
              "description": "Allows containers to communicate with each other without the need for port mappings.\nThis parameter is only supported if I(network_mode=bridge).",
              "type": "list",
              "required": false,
              "suboptions": {}
            },
            "linuxParameters": {
              "aliases": [],
              "description": "Linux-specific modifications that are applied to the container, such as Linux kernel capabilities.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "capabilities": {
                  "aliases": [],
                  "description": "The Linux capabilities for the container that are added to or dropped from the default configuration provided by Docker.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "add": {
                      "aliases": [],
                      "description": "The Linux capabilities for the container that have been added to the default configuration provided by Docker.\nIf I(launch_type=FARGATE), this parameter is not supported.",
                      "type": "list",
                      "required": false,
                      "choices": [
                        "ALL",
                        "AUDIT_CONTROL",
                        "AUDIT_WRITE",
                        "BLOCK_SUSPEND",
                        "CHOWN",
                        "DAC_OVERRIDE",
                        "DAC_READ_SEARCH",
                        "FOWNER",
                        "FSETID",
                        "IPC_LOCK",
                        "IPC_OWNER",
                        "KILL",
                        "LEASE",
                        "LINUX_IMMUTABLE",
                        "MAC_ADMIN",
                        "MAC_OVERRIDE",
                        "MKNOD",
                        "NET_ADMIN",
                        "NET_BIND_SERVICE",
                        "NET_BROADCAST",
                        "NET_RAW",
                        "SETFCAP",
                        "SETGID",
                        "SETPCAP",
                        "SETUID",
                        "SYS_ADMIN",
                        "SYS_BOOT",
                        "SYS_CHROOT",
                        "SYS_MODULE",
                        "SYS_NICE",
                        "SYS_PACCT",
                        "SYS_PTRACE",
                        "SYS_RAWIO",
                        "SYS_RESOURCE",
                        "SYS_TIME",
                        "SYS_TTY_CONFIG",
                        "SYSLOG",
                        "WAKE_ALARM"
                      ],
                      "suboptions": {}
                    },
                    "drop": {
                      "aliases": [],
                      "description": "The Linux capabilities for the container that have been removed from the default configuration provided by Docker.",
                      "type": "list",
                      "required": false,
                      "choices": [
                        "ALL",
                        "AUDIT_CONTROL",
                        "AUDIT_WRITE",
                        "BLOCK_SUSPEND",
                        "CHOWN",
                        "DAC_OVERRIDE",
                        "DAC_READ_SEARCH",
                        "FOWNER",
                        "FSETID",
                        "IPC_LOCK",
                        "IPC_OWNER",
                        "KILL",
                        "LEASE",
                        "LINUX_IMMUTABLE",
                        "MAC_ADMIN",
                        "MAC_OVERRIDE",
                        "MKNOD",
                        "NET_ADMIN",
                        "NET_BIND_SERVICE",
                        "NET_BROADCAST",
                        "NET_RAW",
                        "SETFCAP",
                        "SETGID",
                        "SETPCAP",
                        "SETUID",
                        "SYS_ADMIN",
                        "SYS_BOOT",
                        "SYS_CHROOT",
                        "SYS_MODULE",
                        "SYS_NICE",
                        "SYS_PACCT",
                        "SYS_PTRACE",
                        "SYS_RAWIO",
                        "SYS_RESOURCE",
                        "SYS_TIME",
                        "SYS_TTY_CONFIG",
                        "SYSLOG",
                        "WAKE_ALARM"
                      ],
                      "suboptions": {}
                    }
                  }
                },
                "devices": {
                  "aliases": [],
                  "description": "Any host devices to expose to the container.\nIf I(launch_type=FARGATE), this parameter is not supported.",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "containerPath": {
                      "aliases": [],
                      "description": "The path inside the container at which to expose the host device.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "hostPath": {
                      "aliases": [],
                      "description": "The path for the device on the host container instance.",
                      "type": "str",
                      "required": true,
                      "suboptions": {}
                    },
                    "permissions": {
                      "aliases": [],
                      "description": "The explicit permissions to provide to the container for the device.",
                      "type": "list",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "initProcessEnabled": {
                  "aliases": [],
                  "description": "Run an init process inside the container that forwards signals and reaps processes.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "maxSwap": {
                  "aliases": [],
                  "description": "The total amount of swap memory (in MiB) a container can use.\nIf I(launch_type=FARGATE), this parameter is not supported.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "sharedMemorySize": {
                  "aliases": [],
                  "description": "The value for the size (in MiB) of the /dev/shm volume.\nIf I(launch_type=FARGATE), this parameter is not supported.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "swappiness": {
                  "aliases": [],
                  "description": "This allows you to tune a container's memory swappiness behavior.\nIf I(launch_type=FARGATE), this parameter is not supported.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "tmpfs": {
                  "aliases": [],
                  "description": "The container path, mount options, and size (in MiB) of the tmpfs mount.\nIf I(launch_type=FARGATE), this parameter is not supported.",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "containerPath": {
                      "aliases": [],
                      "description": "The absolute file path where the tmpfs volume is to be mounted.",
                      "type": "str",
                      "required": true,
                      "suboptions": {}
                    },
                    "mountOptions": {
                      "aliases": [],
                      "description": "The list of tmpfs volume mount options.",
                      "type": "list",
                      "required": false,
                      "choices": [
                        "defaults",
                        "ro",
                        "rw",
                        "suid",
                        "nosuid",
                        "dev",
                        "nodev",
                        "exec",
                        "noexec",
                        "sync",
                        "async",
                        "dirsync",
                        "remount",
                        "mand",
                        "nomand",
                        "atime",
                        "noatime",
                        "diratime",
                        "nodiratime",
                        "bind",
                        "rbind",
                        "unbindable",
                        "runbindable",
                        "private",
                        "rprivate",
                        "shared",
                        "rshared",
                        "slave",
                        "rslave",
                        "relatime",
                        "norelatime",
                        "strictatime",
                        "nostrictatime",
                        "mode",
                        "uid",
                        "gid",
                        "nr_inodes",
                        "nr_blocks",
                        "mpol"
                      ],
                      "suboptions": {}
                    },
                    "size": {
                      "aliases": [],
                      "description": "The size (in MiB) of the tmpfs volume.",
                      "type": "int",
                      "required": true,
                      "suboptions": {}
                    }
                  }
                }
              }
            },
            "logConfiguration": {
              "aliases": [],
              "description": "The log configuration specification for the container.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "logDriver": {
                  "aliases": [],
                  "description": "The log driver to use for the container.\nFor tasks on AWS Fargate, the supported log drivers are C(awslogs), C(splunk), and C(awsfirelens).\nFor tasks hosted on Amazon EC2 instances, the supported log drivers are C(awslogs), C(fluentd), C(gelf), C(json-file), C(journald), C(logentries), C(syslog), C(splunk), and C(awsfirelens).",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "memory": {
              "aliases": [],
              "description": "The amount (in MiB) of memory to present to the container.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "memoryReservation": {
              "aliases": [],
              "description": "The soft limit (in MiB) of memory to reserve for the container.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "mountPoints": {
              "aliases": [],
              "description": "The mount points for data volumes in your container.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "containerPath": {
                  "aliases": [],
                  "description": "The path on the container to mount the host volume at.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "readOnly": {
                  "aliases": [],
                  "description": "If this value is C(True), the container has read-only access to the volume.\nIf this value is C(False), then the container can write to the volume.",
                  "default": "False",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "sourceVolume": {
                  "aliases": [],
                  "description": "The name of the volume to mount.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "name": {
              "aliases": [],
              "description": "The name of a container.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "options": {
              "aliases": [],
              "description": "The configuration options to send to the log driver.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "portMappings": {
              "aliases": [],
              "description": "The list of port mappings for the container.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "containerPort": {
                  "aliases": [],
                  "description": "The port number on the container that is bound to the user-specified or automatically assigned host port.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "hostPort": {
                  "aliases": [],
                  "description": "The port number on the container instance to reserve for your container.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "protocol": {
                  "aliases": [],
                  "description": "The protocol used for the port mapping.",
                  "default": "tcp",
                  "type": "str",
                  "required": false,
                  "choices": [
                    "tcp",
                    "udp"
                  ],
                  "suboptions": {}
                }
              }
            },
            "privileged": {
              "aliases": [],
              "description": "When this parameter is C(True), the container is given elevated privileges on the host container instance.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "pseudoTerminal": {
              "aliases": [],
              "description": "When this parameter is C(True), a TTY is allocated.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "readonlyRootFilesystem": {
              "aliases": [],
              "description": "When this parameter is C(True), the container is given read-only access to its root file system.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "repositoryCredentials": {
              "aliases": [],
              "description": "The private repository authentication credentials to use.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "credentialsParameter": {
                  "aliases": [],
                  "description": "The Amazon Resource Name (ARN) of the secret containing the private repository credentials.",
                  "type": "str",
                  "required": true,
                  "suboptions": {}
                }
              }
            },
            "resourceRequirements": {
              "aliases": [],
              "description": "The type and amount of a resource to assign to a container.\nThe only supported resource is a C(GPU).",
              "type": "list",
              "required": false,
              "suboptions": {}
            },
            "secretOptions": {
              "aliases": [],
              "description": "The secrets to pass to the log configuration.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "name": {
                  "aliases": [],
                  "description": "The name of the secret.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "valueFrom": {
                  "aliases": [],
                  "description": "The secret to expose to the container.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "secrets": {
              "aliases": [],
              "description": "The secrets to pass to the container.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "name": {
                  "aliases": [],
                  "description": "The value to set as the environment variable on the container.",
                  "type": "str",
                  "required": true,
                  "suboptions": {}
                },
                "size": {
                  "aliases": [],
                  "description": "The secret to expose to the container.",
                  "type": "str",
                  "required": true,
                  "suboptions": {}
                }
              }
            },
            "startTimeout": {
              "aliases": [],
              "description": "Time duration (in seconds) to wait before giving up on resolving dependencies for a container.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "stopTimeout": {
              "aliases": [],
              "description": "Time duration (in seconds) to wait before the container is forcefully killed if it doesn't exit normally on its own.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "systemControls": {
              "aliases": [],
              "description": "A list of namespaced kernel parameters to set in the container.",
              "type": "list",
              "required": false,
              "suboptions": {}
            },
            "ulimits": {
              "aliases": [],
              "description": "A list of ulimits to set in the container.\nThis parameter is not supported for Windows containers.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "hardLimit": {
                  "aliases": [],
                  "description": "The hard limit for the ulimit type.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "name": {
                  "aliases": [],
                  "description": "The type of the ulimit.",
                  "type": "str",
                  "required": false,
                  "choices": [
                    "core",
                    "cpu",
                    "data",
                    "fsize",
                    "locks",
                    "memlock",
                    "msgqueue",
                    "nice",
                    "nofile",
                    "nproc",
                    "rss",
                    "rtprio",
                    "rttime",
                    "sigpending",
                    "stack"
                  ],
                  "suboptions": {}
                },
                "softLimit": {
                  "aliases": [],
                  "description": "The soft limit for the ulimit type.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "user": {
              "aliases": [],
              "description": "The user to use inside the container.\nThis parameter is not supported for Windows containers.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "volumesFrom": {
              "aliases": [],
              "description": "Data volumes to mount from another container.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "readOnly": {
                  "aliases": [],
                  "description": "If this value is C(True), the container has read-only access to the volume.\nIf this value is C(False), then the container can write to the volume.",
                  "default": "False",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "sourceContainer": {
                  "aliases": [],
                  "description": "The name of another container within the same task definition from which to mount volumes.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "workingDirectory": {
              "aliases": [],
              "description": "The working directory in which to run commands inside the container.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "cpu": {
          "aliases": [],
          "description": "The number of cpu units used by the task. If I(launch_type=EC2), this field is optional and any value can be used.\nIf I(launch_type=FARGATE), this field is required and you must use one of C(256), C(512), C(1024), C(2048), C(4096).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "execution_role_arn": {
          "aliases": [],
          "description": "The Amazon Resource Name (ARN) of the task execution role that the Amazon ECS container agent and the Docker daemon can assume.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "family": {
          "aliases": [],
          "description": "A Name that would be given to the task definition.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "force_create": {
          "aliases": [],
          "description": "Always create new task definition.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "launch_type": {
          "aliases": [],
          "description": "The launch type on which to run your task.",
          "type": "str",
          "required": false,
          "choices": [
            "EC2",
            "FARGATE"
          ],
          "suboptions": {}
        },
        "memory": {
          "aliases": [],
          "description": "The amount (in MiB) of memory used by the task. If I(launch_type=EC2), this field is optional and any value can be used.\nIf I(launch_type=FARGATE), this field is required and is limited by the CPU.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "network_mode": {
          "aliases": [],
          "description": "The Docker networking mode to use for the containers in the task.\nWindows containers must use I(network_mode=default), which will utilize docker NAT networking.\nSetting I(network_mode=default) for a Linux container will use C(bridge) mode.",
          "default": "bridge",
          "type": "str",
          "required": false,
          "choices": [
            "default",
            "bridge",
            "host",
            "none",
            "awsvpc"
          ],
          "suboptions": {}
        },
        "placement_constraints": {
          "aliases": [],
          "description": "Placement constraint objects to use for the task.\nYou can specify a maximum of 10 constraints per task.\nTask placement constraints are not supported for tasks run on Fargate.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "version_added": "2.1.0",
          "suboptions": {
            "expression": {
              "aliases": [],
              "description": "A cluster query language expression to apply to the constraint.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "type": {
              "aliases": [],
              "description": "The type of constraint.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "revision": {
          "aliases": [],
          "description": "A revision number for the task definition.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "State whether the task definition should exist or be deleted.",
          "type": "str",
          "required": true,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "task_role_arn": {
          "aliases": [],
          "description": "The Amazon Resource Name (ARN) of the IAM role that containers in this task can assume. All containers in this task are granted the permissions that are specified in this role.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "volumes": {
          "aliases": [],
          "description": "A list of names of volumes to be attached.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "name": {
              "aliases": [],
              "description": "The name of the volume.",
              "type": "str",
              "required": true,
              "suboptions": {}
            }
          }
        }
      },
      "requirements": [
        "boto3",
        "boto3 >= 1.15.0",
        "botocore",
        "botocore >= 1.18.0",
        "json",
        "python >= 3.6"
      ],
      "short_description": "register a task definition in ecs",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create task definition\n  community.aws.ecs_taskdefinition:\n    containers:\n    - name: simple-app\n      cpu: 10\n      essential: true\n      image: \"httpd:2.4\"\n      memory: 300\n      mountPoints:\n      - containerPath: /usr/local/apache2/htdocs\n        sourceVolume: my-vol\n      portMappings:\n      - containerPort: 80\n        hostPort: 80\n      logConfiguration:\n        logDriver: awslogs\n        options:\n          awslogs-group: /ecs/test-cluster-taskdef\n          awslogs-region: us-west-2\n          awslogs-stream-prefix: ecs\n    - name: busybox\n      command:\n        - >\n          /bin/sh -c \"while true; do echo '<html><head><title>Amazon ECS Sample App</title></head><body><div><h1>Amazon ECS Sample App</h1><h2>Congratulations!\n          </h2><p>Your application is now running on a container in Amazon ECS.</p>' > top; /bin/date > date ; echo '</div></body></html>' > bottom;\n          cat top date bottom > /usr/local/apache2/htdocs/index.html ; sleep 1; done\"\n      cpu: 10\n      entryPoint:\n      - sh\n      - \"-c\"\n      essential: false\n      image: busybox\n      memory: 200\n      volumesFrom:\n      - sourceContainer: simple-app\n    volumes:\n    - name: my-vol\n    family: test-cluster-taskdef\n    state: present\n  register: task_output\n\n- name: Create task definition\n  community.aws.ecs_taskdefinition:\n    family: nginx\n    containers:\n    - name: nginx\n      essential: true\n      image: \"nginx\"\n      portMappings:\n      - containerPort: 8080\n        hostPort: 8080\n      cpu: 512\n      memory: 1024\n    state: present\n\n- name: Create task definition\n  community.aws.ecs_taskdefinition:\n    family: nginx\n    containers:\n    - name: nginx\n      essential: true\n      image: \"nginx\"\n      portMappings:\n      - containerPort: 8080\n        hostPort: 8080\n    launch_type: FARGATE\n    cpu: 512\n    memory: 1024\n    state: present\n    network_mode: awsvpc\n\n- name: Create task definition\n  community.aws.ecs_taskdefinition:\n    family: nginx\n    containers:\n    - name: nginx\n      essential: true\n      image: \"nginx\"\n      portMappings:\n      - containerPort: 8080\n        hostPort: 8080\n      cpu: 512\n      memory: 1024\n      dependsOn:\n      - containerName: \"simple-app\"\n        condition: \"start\"\n\n# Create Task Definition with Environment Variables and Secrets\n- name: Create task definition\n  community.aws.ecs_taskdefinition:\n    family: nginx\n    containers:\n    - name: nginx\n      essential: true\n      image: \"nginx\"\n      environment:\n        - name: \"PORT\"\n          value: \"8080\"\n      secrets:\n        # For variables stored in Secrets Manager\n        - name: \"NGINX_HOST\"\n          valueFrom: \"arn:aws:secretsmanager:us-west-2:123456789012:secret:nginx/NGINX_HOST\"\n        # For variables stored in Parameter Store\n        - name: \"API_KEY\"\n          valueFrom: \"arn:aws:ssm:us-west-2:123456789012:parameter/nginx/API_KEY\"\n    launch_type: FARGATE\n    cpu: 512\n    memory: 1GB\n    state: present\n    network_mode: awsvpc\n"
  },
  "community.aws.ecs_taskdefinition_facts": {
    "doc": {
      "description": "Describes a task definition in ECS.",
      "has_action": false,
      "notes": "For details of the parameters and returns see U(http://boto3.readthedocs.io/en/latest/reference/services/ecs.html#ECS.Client.describe_task_definition)\nThis module was called C(ecs_taskdefinition_facts) before Ansible 2.9. The usage did not change.\nIf parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "task_definition": {
          "aliases": [],
          "description": "The name of the task definition to get details for",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Describe a task definition in ECS",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n- community.aws.ecs_taskdefinition_info:\n    task_definition: test-td\n"
  },
  "community.aws.ecs_taskdefinition_info": {
    "doc": {
      "description": "Describes a task definition in ECS.",
      "has_action": false,
      "notes": "For details of the parameters and returns see U(http://boto3.readthedocs.io/en/latest/reference/services/ecs.html#ECS.Client.describe_task_definition)\nThis module was called C(ecs_taskdefinition_facts) before Ansible 2.9. The usage did not change.\nIf parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "task_definition": {
          "aliases": [],
          "description": "The name of the task definition to get details for",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Describe a task definition in ECS",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n- community.aws.ecs_taskdefinition_info:\n    task_definition: test-td\n"
  },
  "community.aws.efs": {
    "doc": {
      "description": "Module allows create, search and destroy Amazon EFS file systems.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "encrypt": {
          "aliases": [],
          "description": "If I(encrypt=true) creates an encrypted file system. This can not be modified after the file system is created.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "id": {
          "aliases": [],
          "description": "ID of Amazon EFS. Either name or ID required for delete.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "kms_key_id": {
          "aliases": [],
          "description": "The id of the AWS KMS CMK that will be used to protect the encrypted file system. This parameter is only required if you want to use a non-default CMK. If this parameter is not specified, the default CMK for Amazon EFS is used. The key id can be Key ID, Key ID ARN, Key Alias or Key Alias ARN.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Creation Token of Amazon EFS file system. Required for create and update. Either name or ID required for delete.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "performance_mode": {
          "aliases": [],
          "description": "File system's performance mode to use. Only takes effect during creation.",
          "default": "general_purpose",
          "type": "str",
          "required": false,
          "choices": [
            "general_purpose",
            "max_io"
          ],
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provisioned_throughput_in_mibps": {
          "aliases": [],
          "description": "If the throughput_mode is provisioned, select the amount of throughput to provisioned in Mibps.",
          "type": "float",
          "required": false,
          "suboptions": {}
        },
        "purge_tags": {
          "aliases": [],
          "description": "If yes, existing tags will be purged from the resource to match exactly what is defined by I(tags) parameter. If the I(tags) parameter is not set then tags will not be modified.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Allows to create, search and destroy Amazon EFS file system.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "List of tags of Amazon EFS. Should be defined as dictionary In case of 'present' state with list of tags and existing EFS (matched by 'name'), tags of EFS will be replaced with provided data.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "targets": {
          "aliases": [],
          "description": "List of mounted targets. It should be a list of dictionaries, every dictionary should include next attributes: This data may be modified for existing EFS using state 'present' and new list of mount targets.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "ip_address": {
              "aliases": [],
              "description": "A valid IPv4 address within the address range of the specified subnet.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "security_groups": {
              "aliases": [],
              "description": "List of security group IDs, of the form 'sg-xxxxxxxx'. These must be for the same VPC as subnet specified",
              "type": "list",
              "required": false,
              "elements": "str",
              "suboptions": {}
            },
            "subnet_id": {
              "aliases": [],
              "description": "The ID of the subnet to add the mount target in.",
              "required": true,
              "suboptions": {}
            }
          }
        },
        "throughput_mode": {
          "aliases": [],
          "description": "The throughput_mode for the file system to be created.",
          "type": "str",
          "required": false,
          "choices": [
            "bursting",
            "provisioned"
          ],
          "suboptions": {}
        },
        "transition_to_ia": {
          "aliases": [],
          "description": "How many days before objects transition to the lower-cost EFS Infrequent Access (IA) storage class.\nIf set to the string C(None), any existing lifecyle policy will be removed, and objects will not transition to an IA storage class.\nIf this parameter is absent, any existing lifecycle policy will not be affected.",
          "type": "str",
          "required": false,
          "choices": [
            "None",
            "7",
            "14",
            "30",
            "60",
            "90"
          ],
          "version_added": "2.1.0",
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "wait": {
          "aliases": [],
          "description": "In case of 'present' state should wait for EFS 'available' life cycle state (of course, if current state not 'deleting' or 'deleted') In case of 'absent' state should wait for EFS 'deleted' life cycle state",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "wait_timeout": {
          "aliases": [],
          "description": "How long the module should wait (in seconds) for desired state before returning. Zero means wait as long as necessary.",
          "default": "0",
          "type": "int",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "create and maintain EFS file systems",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: EFS provisioning\n  community.aws.efs:\n    state: present\n    name: myTestEFS\n    tags:\n        Name: myTestNameTag\n        purpose: file-storage\n    targets:\n        - subnet_id: subnet-748c5d03\n          security_groups: [ \"sg-1a2b3c4d\" ]\n\n- name: Modifying EFS data\n  community.aws.efs:\n    state: present\n    name: myTestEFS\n    tags:\n        name: myAnotherTestTag\n    targets:\n        - subnet_id: subnet-7654fdca\n          security_groups: [ \"sg-4c5d6f7a\" ]\n\n- name: Set a lifecycle policy\n  community.aws.efs:\n    state: present\n    name: myTestEFS\n    transition_to_ia: 7\n    targets:\n        - subnet_id: subnet-7654fdca\n          security_groups: [ \"sg-4c5d6f7a\" ]\n\n- name: Remove a lifecycle policy\n  community.aws.efs:\n    state: present\n    name: myTestEFS\n    transition_to_ia: None\n    targets:\n        - subnet_id: subnet-7654fdca\n          security_groups: [ \"sg-4c5d6f7a\" ]\n\n- name: Deleting EFS\n  community.aws.efs:\n    state: absent\n    name: myTestEFS\n"
  },
  "community.aws.efs_facts": {
    "doc": {
      "description": "This module can be used to search Amazon EFS file systems.\nThis module was called C(efs_facts) before Ansible 2.9, returning C(ansible_facts). Note that the M(community.aws.efs_info) module no longer returns C(ansible_facts)!",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "id": {
          "aliases": [],
          "description": "ID of Amazon EFS.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [
            "creation_token"
          ],
          "description": "Creation Token of Amazon EFS file system.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "List of tags of Amazon EFS. Should be defined as dictionary.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "targets": {
          "aliases": [],
          "description": "List of targets on which to filter the returned results.\nResult must match all of the specified targets, each of which can be a security group ID, a subnet ID or an IP address.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Get information about Amazon EFS file systems",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Find all existing efs\n  community.aws.efs_info:\n  register: result\n\n- name: Find efs using id\n  community.aws.efs_info:\n    id: fs-1234abcd\n  register: result\n\n- name: Searching all EFS instances with tag Name = 'myTestNameTag', in subnet 'subnet-1a2b3c4d' and with security group 'sg-4d3c2b1a'\n  community.aws.efs_info:\n    tags:\n        Name: myTestNameTag\n    targets:\n        - subnet-1a2b3c4d\n        - sg-4d3c2b1a\n  register: result\n\n- ansible.builtin.debug:\n    msg: \"{{ result['efs'] }}\"\n"
  },
  "community.aws.efs_info": {
    "doc": {
      "description": "This module can be used to search Amazon EFS file systems.\nThis module was called C(efs_facts) before Ansible 2.9, returning C(ansible_facts). Note that the M(community.aws.efs_info) module no longer returns C(ansible_facts)!",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "id": {
          "aliases": [],
          "description": "ID of Amazon EFS.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [
            "creation_token"
          ],
          "description": "Creation Token of Amazon EFS file system.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "List of tags of Amazon EFS. Should be defined as dictionary.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "targets": {
          "aliases": [],
          "description": "List of targets on which to filter the returned results.\nResult must match all of the specified targets, each of which can be a security group ID, a subnet ID or an IP address.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Get information about Amazon EFS file systems",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Find all existing efs\n  community.aws.efs_info:\n  register: result\n\n- name: Find efs using id\n  community.aws.efs_info:\n    id: fs-1234abcd\n  register: result\n\n- name: Searching all EFS instances with tag Name = 'myTestNameTag', in subnet 'subnet-1a2b3c4d' and with security group 'sg-4d3c2b1a'\n  community.aws.efs_info:\n    tags:\n        Name: myTestNameTag\n    targets:\n        - subnet-1a2b3c4d\n        - sg-4d3c2b1a\n  register: result\n\n- ansible.builtin.debug:\n    msg: \"{{ result['efs'] }}\"\n"
  },
  "community.aws.efs_tag": {
    "doc": {
      "description": "Creates and removes tags for Amazon EFS resources.\nResources are referenced by their ID (filesystem or filesystem access point).",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "purge_tags": {
          "aliases": [],
          "description": "Whether unspecified tags should be removed from the resource.\nNote that when combined with I(state=absent), specified tags with non-matching values are not purged.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource": {
          "aliases": [],
          "description": "EFS Filesystem ID or EFS Filesystem Access Point ID.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the tags should be present or absent on the resource.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "A dictionary of tags to add or remove from the resource.\nIf the value provided for a tag is null and I(state=absent), the tag will be removed regardless of its current value.",
          "type": "dict",
          "required": true,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "create and remove tags on Amazon EFS resources",
      "version_added": "2.0.0"
    },
    "examples": "\n- name: Ensure tags are present on a resource\n  community.aws.efs_tag:\n    resource: fs-123456ab\n    state: present\n    tags:\n      Name: MyEFS\n      Env: Production\n\n- name: Remove the Env tag if it's currently 'development'\n  community.aws.efs_tag:\n    resource: fsap-78945ff\n    state: absent\n    tags:\n      Env: development\n\n- name: Remove all tags except for Name\n  community.aws.efs_tag:\n    resource: fsap-78945ff\n    state: absent\n    tags:\n        Name: foo\n    purge_tags: true\n\n- name: Remove all tags\n  community.aws.efs_tag:\n    resource: fsap-78945ff\n    state: absent\n    tags: {}\n    purge_tags: true\n"
  },
  "community.aws.elasticache": {
    "doc": {
      "description": "Manage cache clusters in Amazon ElastiCache.\nReturns information about the specified cache cluster.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cache_engine_version": {
          "aliases": [],
          "description": "The version number of the cache engine.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cache_parameter_group": {
          "aliases": [
            "parameter_group"
          ],
          "description": "The name of the cache parameter group to associate with this cache cluster. If this argument is omitted, the default cache parameter group for the specified engine will be used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cache_port": {
          "aliases": [],
          "description": "The port number on which each of the cache nodes will accept connections.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "cache_security_groups": {
          "aliases": [],
          "description": "A list of cache security group names to associate with this cache cluster.\nDon't use if your Cache is inside a VPC. In that case use I(security_group_ids) instead!",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "cache_subnet_group": {
          "aliases": [],
          "description": "The subnet group name to associate with. Only use if inside a VPC.\nRequired if inside a VPC.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "engine": {
          "aliases": [],
          "description": "Name of the cache engine to be used.\nSupported values are C(redis) and C(memcached).",
          "default": "memcached",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "hard_modify": {
          "aliases": [],
          "description": "Whether to destroy and recreate an existing cache cluster if necessary in order to modify its state.\nDefaults to C(false).",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The cache cluster identifier.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "node_type": {
          "aliases": [],
          "description": "The compute and memory capacity of the nodes in the cache cluster.",
          "default": "cache.t2.small",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "num_nodes": {
          "aliases": [],
          "description": "The initial number of cache nodes that the cache cluster will have.\nRequired when I(state=present).",
          "default": "1",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_group_ids": {
          "aliases": [],
          "description": "A list of VPC security group IDs to associate with this cache cluster. Only use if inside a VPC.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "C(absent) or C(present) are idempotent actions that will create or destroy a cache cluster as needed.\nC(rebooted) will reboot the cluster, resulting in a momentary outage.",
          "type": "str",
          "required": true,
          "choices": [
            "present",
            "absent",
            "rebooted"
          ],
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "wait": {
          "aliases": [],
          "description": "Wait for cache cluster result before returning.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "zone": {
          "aliases": [],
          "description": "The EC2 Availability Zone in which the cache cluster will be created.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Manage cache clusters in Amazon ElastiCache",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: None of these examples set aws_access_key, aws_secret_key, or region.\n# It is assumed that their matching environment variables are set.\n\n- name: Basic example\n  community.aws.elasticache:\n    name: \"test-please-delete\"\n    state: present\n    engine: memcached\n    cache_engine_version: 1.4.14\n    node_type: cache.m1.small\n    num_nodes: 1\n    cache_port: 11211\n    cache_security_groups:\n      - default\n    zone: us-east-1d\n\n\n- name: Ensure cache cluster is gone\n  community.aws.elasticache:\n    name: \"test-please-delete\"\n    state: absent\n\n- name: Reboot cache cluster\n  community.aws.elasticache:\n    name: \"test-please-delete\"\n    state: rebooted\n\n"
  },
  "community.aws.elasticache_facts": {
    "doc": {
      "description": "Retrieve information from AWS ElastiCache clusters\nThis module was called C(elasticache_facts) before Ansible 2.9. The usage did not change.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of an ElastiCache cluster.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Retrieve information for AWS ElastiCache clusters",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: obtain all ElastiCache information\n  community.aws.elasticache_info:\n\n- name: obtain all information for a single ElastiCache cluster\n  community.aws.elasticache_info:\n    name: test_elasticache\n"
  },
  "community.aws.elasticache_info": {
    "doc": {
      "description": "Retrieve information from AWS ElastiCache clusters\nThis module was called C(elasticache_facts) before Ansible 2.9. The usage did not change.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of an ElastiCache cluster.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Retrieve information for AWS ElastiCache clusters",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: obtain all ElastiCache information\n  community.aws.elasticache_info:\n\n- name: obtain all information for a single ElastiCache cluster\n  community.aws.elasticache_info:\n    name: test_elasticache\n"
  },
  "community.aws.elasticache_parameter_group": {
    "doc": {
      "description": "Manage cache security groups in Amazon ElastiCache.\nReturns information about the specified cache cluster.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "A user-specified description for the cache parameter group.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "group_family": {
          "aliases": [],
          "description": "The name of the cache parameter group family that the cache parameter group can be used with. Required when creating a cache parameter group.",
          "type": "str",
          "required": false,
          "choices": [
            "memcached1.4",
            "memcached1.5",
            "redis2.6",
            "redis2.8",
            "redis3.2",
            "redis4.0",
            "redis5.0"
          ],
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "A user-specified name for the cache parameter group.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Idempotent actions that will create/modify, destroy, or reset a cache parameter group as needed.",
          "type": "str",
          "required": true,
          "choices": [
            "present",
            "absent",
            "reset"
          ],
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "values": {
          "aliases": [],
          "description": "A user-specified dictionary of parameters to reset or modify for the cache parameter group.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Manage cache parameter groups in Amazon ElastiCache.",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: None of these examples set aws_access_key, aws_secret_key, or region.\n# It is assumed that their matching environment variables are set.\n---\n- hosts: localhost\n  connection: local\n  tasks:\n    - name: 'Create a test parameter group'\n      community.aws.elasticache_parameter_group:\n        name: 'test-param-group'\n        group_family: 'redis3.2'\n        description: 'This is a cache parameter group'\n        state: 'present'\n    - name: 'Modify a test parameter group'\n      community.aws.elasticache_parameter_group:\n        name: 'test-param-group'\n        values:\n          activerehashing: yes\n          client-output-buffer-limit-normal-hard-limit: 4\n        state: 'present'\n    - name: 'Reset all modifiable parameters for the test parameter group'\n      community.aws.elasticache_parameter_group:\n        name: 'test-param-group'\n        state: reset\n    - name: 'Delete a test parameter group'\n      community.aws.elasticache_parameter_group:\n        name: 'test-param-group'\n        state: 'absent'\n"
  },
  "community.aws.elasticache_snapshot": {
    "doc": {
      "description": "Manage cache snapshots in Amazon ElastiCache.\nReturns information about the specified snapshot.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "bucket": {
          "aliases": [],
          "description": "The s3 bucket to which the snapshot is exported.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cluster_id": {
          "aliases": [],
          "description": "The name of an existing cache cluster in the replication group to make the snapshot.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the snapshot we want to create, copy, delete.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "replication_id": {
          "aliases": [],
          "description": "The name of the existing replication group to make the snapshot.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Actions that will create, destroy, or copy a snapshot.",
          "type": "str",
          "required": true,
          "choices": [
            "present",
            "absent",
            "copy"
          ],
          "suboptions": {}
        },
        "target": {
          "aliases": [],
          "description": "The name of a snapshot copy.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Manage cache snapshots in Amazon ElastiCache",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: None of these examples set aws_access_key, aws_secret_key, or region.\n# It is assumed that their matching environment variables are set.\n\n- name: 'Create a snapshot'\n  community.aws.elasticache_snapshot:\n    name: 'test-snapshot'\n    state: 'present'\n    cluster_id: '{{ cluster }}'\n    replication_id: '{{ replication }}'\n"
  },
  "community.aws.elasticache_subnet_group": {
    "doc": {
      "description": "Creates, modifies, and deletes ElastiCache subnet groups.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "ElastiCache subnet group description.\nWhen not provided defaults to I(name) on subnet group creation.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Database subnet group identifier.\nThis value is automatically converted to lowercase.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Specifies whether the subnet should be present or absent.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "subnets": {
          "aliases": [],
          "description": "List of subnet IDs that make up the ElastiCache subnet group.\nAt least one subnet must be provided when creating an ElastiCache subnet group.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "manage ElastiCache subnet groups",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Add or change a subnet group\n  community.aws.elasticache_subnet_group:\n    state: present\n    name: norwegian-blue\n    description: My Fancy Ex Parrot Subnet Group\n    subnets:\n      - subnet-aaaaaaaa\n      - subnet-bbbbbbbb\n\n- name: Remove a subnet group\n  community.aws.elasticache_subnet_group:\n    state: absent\n    name: norwegian-blue\n"
  },
  "community.aws.elb_application_lb": {
    "doc": {
      "description": "Manage an AWS Application Elastic Load Balancer. See U(https://aws.amazon.com/blogs/aws/new-aws-application-load-balancer/) for details.",
      "has_action": false,
      "notes": "Listeners are matched based on port. If a listener's port is changed then a new listener will be created.\nListener rules are matched based on priority. If a rule's priority is changed then a new rule will be created.\nIf parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "access_logs_enabled": {
          "aliases": [],
          "description": "Whether or not to enable access logs.\nWhen set, I(access_logs_s3_bucket) must also be set.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "access_logs_s3_bucket": {
          "aliases": [],
          "description": "The name of the S3 bucket for the access logs.\nThe bucket must exist in the same region as the load balancer and have a bucket policy that grants Elastic Load Balancing permission to write to the bucket.\nRequired if access logs in Amazon S3 are enabled.\nWhen set, I(access_logs_enabled) must also be set.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "access_logs_s3_prefix": {
          "aliases": [],
          "description": "The prefix for the log location in the S3 bucket.\nIf you don't specify a prefix, the access logs are stored in the root of the bucket.\nCannot begin or end with a slash.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "deletion_protection": {
          "aliases": [],
          "description": "Indicates whether deletion protection for the ELB is enabled.\nDefaults to C(false).",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "http2": {
          "aliases": [],
          "description": "Indicates whether to enable HTTP2 routing.\nDefaults to C(false).",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "idle_timeout": {
          "aliases": [],
          "description": "The number of seconds to wait before an idle connection is closed.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "ip_address_type": {
          "aliases": [],
          "description": "Sets the type of IP addresses used by the subnets of the specified Application Load Balancer.",
          "type": "str",
          "required": false,
          "choices": [
            "ipv4",
            "dualstack"
          ],
          "suboptions": {}
        },
        "listeners": {
          "aliases": [],
          "description": "A list of dicts containing listeners to attach to the ELB. See examples for detail of the dict required. Note that listener keys are CamelCased.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "Certificates": {
              "aliases": [],
              "description": "The SSL server certificate.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "CertificateArn": {
                  "aliases": [],
                  "description": "The Amazon Resource Name (ARN) of the certificate.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "DefaultActions": {
              "aliases": [],
              "description": "The default actions for the listener.",
              "type": "list",
              "required": true,
              "elements": "dict",
              "suboptions": {
                "TargetGroupArn": {
                  "aliases": [],
                  "description": "The Amazon Resource Name (ARN) of the target group.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "Type": {
                  "aliases": [],
                  "description": "The type of action.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "Port": {
              "aliases": [],
              "description": "The port on which the load balancer is listening.",
              "type": "int",
              "required": true,
              "suboptions": {}
            },
            "Protocol": {
              "aliases": [],
              "description": "The protocol for connections from clients to the load balancer.",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "Rules": {
              "aliases": [],
              "description": "A list of ALB Listener Rules.\nFor the complete documentation of possible Conditions and Actions please see the boto3 documentation:\nhttps://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/elbv2.html#ElasticLoadBalancingv2.Client.create_rule",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "Actions": {
                  "aliases": [],
                  "description": "Actions to apply if all of the rule's conditions are met.",
                  "type": "list",
                  "required": false,
                  "suboptions": {}
                },
                "Conditions": {
                  "aliases": [],
                  "description": "Conditions which must be met for the actions to be applied.",
                  "type": "list",
                  "required": false,
                  "suboptions": {}
                },
                "Priority": {
                  "aliases": [],
                  "description": "The rule priority.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "SslPolicy": {
              "aliases": [],
              "description": "The security policy that defines which ciphers and protocols are supported.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "name": {
          "aliases": [],
          "description": "The name of the load balancer. This name must be unique within your AWS account, can have a maximum of 32 characters, must contain only alphanumeric characters or hyphens, and must not begin or end with a hyphen.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "purge_listeners": {
          "aliases": [],
          "description": "If C(yes), existing listeners will be purged from the ELB to match exactly what is defined by I(listeners) parameter.\nIf the I(listeners) parameter is not set then listeners will not be modified.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "purge_rules": {
          "aliases": [],
          "description": "When set to C(no), keep the existing load balancer rules in place. Will modify and add, but will not delete.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "purge_tags": {
          "aliases": [],
          "description": "If yes, existing tags will be purged from the resource to match exactly what is defined by I(tags) parameter.\nIf the I(tags) parameter is not set then tags will not be modified.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scheme": {
          "aliases": [],
          "description": "Internet-facing or internal load balancer. An ELB scheme can not be modified after creation.",
          "default": "internet-facing",
          "type": "str",
          "required": false,
          "choices": [
            "internet-facing",
            "internal"
          ],
          "suboptions": {}
        },
        "security_groups": {
          "aliases": [],
          "description": "A list of the names or IDs of the security groups to assign to the load balancer.\nRequired if I(state=present).",
          "default": "[]",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Create or destroy the load balancer.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "subnets": {
          "aliases": [],
          "description": "A list of the IDs of the subnets to attach to the load balancer. You can specify only one subnet per Availability Zone. You must specify subnets from at least two Availability Zones.\nRequired if I(state=present).",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "A dictionary of one or more tags to assign to the load balancer.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "wait": {
          "aliases": [],
          "description": "Wait for the load balancer to have a state of 'active' before completing. A status check is performed every 15 seconds until a successful state is reached. An error is returned after 40 failed checks.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "wait_timeout": {
          "aliases": [],
          "description": "The time in seconds to use in conjunction with I(wait).",
          "type": "int",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Manage an Application Load Balancer",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n# Create an ELB and attach a listener\n- community.aws.elb_application_lb:\n    name: myelb\n    security_groups:\n      - sg-12345678\n      - my-sec-group\n    subnets:\n      - subnet-012345678\n      - subnet-abcdef000\n    listeners:\n      - Protocol: HTTP # Required. The protocol for connections from clients to the load balancer (HTTP or HTTPS) (case-sensitive).\n        Port: 80 # Required. The port on which the load balancer is listening.\n        # The security policy that defines which ciphers and protocols are supported. The default is the current predefined security policy.\n        SslPolicy: ELBSecurityPolicy-2015-05\n        Certificates: # The ARN of the certificate (only one certficate ARN should be provided)\n          - CertificateArn: arn:aws:iam::12345678987:server-certificate/test.domain.com\n        DefaultActions:\n          - Type: forward # Required.\n            TargetGroupName: # Required. The name of the target group\n    state: present\n\n# Create an ELB and attach a listener with logging enabled\n- community.aws.elb_application_lb:\n    access_logs_enabled: yes\n    access_logs_s3_bucket: mybucket\n    access_logs_s3_prefix: \"logs\"\n    name: myelb\n    security_groups:\n      - sg-12345678\n      - my-sec-group\n    subnets:\n      - subnet-012345678\n      - subnet-abcdef000\n    listeners:\n      - Protocol: HTTP # Required. The protocol for connections from clients to the load balancer (HTTP or HTTPS) (case-sensitive).\n        Port: 80 # Required. The port on which the load balancer is listening.\n        # The security policy that defines which ciphers and protocols are supported. The default is the current predefined security policy.\n        SslPolicy: ELBSecurityPolicy-2015-05\n        Certificates: # The ARN of the certificate (only one certficate ARN should be provided)\n          - CertificateArn: arn:aws:iam::12345678987:server-certificate/test.domain.com\n        DefaultActions:\n          - Type: forward # Required.\n            TargetGroupName: # Required. The name of the target group\n    state: present\n\n# Create an ALB with listeners and rules\n- community.aws.elb_application_lb:\n    name: test-alb\n    subnets:\n      - subnet-12345678\n      - subnet-87654321\n    security_groups:\n      - sg-12345678\n    scheme: internal\n    listeners:\n      - Protocol: HTTPS\n        Port: 443\n        DefaultActions:\n          - Type: forward\n            TargetGroupName: test-target-group\n        Certificates:\n          - CertificateArn: arn:aws:iam::12345678987:server-certificate/test.domain.com\n        SslPolicy: ELBSecurityPolicy-2015-05\n        Rules:\n          - Conditions:\n              - Field: path-pattern\n                Values:\n                  - '/test'\n            Priority: '1'\n            Actions:\n              - TargetGroupName: test-target-group\n                Type: forward\n          - Conditions:\n              - Field: path-pattern\n                Values:\n                  - \"/redirect-path/*\"\n            Priority: '2'\n            Actions:\n              - Type: redirect\n                RedirectConfig:\n                  Host: \"#{host}\"\n                  Path: \"/example/redir\" # or /#{path}\n                  Port: \"#{port}\"\n                  Protocol: \"#{protocol}\"\n                  Query: \"#{query}\"\n                  StatusCode: \"HTTP_302\" # or HTTP_301\n          - Conditions:\n              - Field: path-pattern\n                Values:\n                  - \"/fixed-response-path/\"\n            Priority: '3'\n            Actions:\n              - Type: fixed-response\n                FixedResponseConfig:\n                  ContentType: \"text/plain\"\n                  MessageBody: \"This is the page you're looking for\"\n                  StatusCode: \"200\"\n          - Conditions:\n              - Field: host-header\n                Values:\n                  - \"hostname.domain.com\"\n                  - \"alternate.domain.com\"\n            Priority: '4'\n            Actions:\n              - TargetGroupName: test-target-group\n                Type: forward\n    state: present\n\n# Remove an ELB\n- community.aws.elb_application_lb:\n    name: myelb\n    state: absent\n\n"
  },
  "community.aws.elb_application_lb_facts": {
    "doc": {
      "description": "Gather information about application ELBs in AWS\nThis module was called C(elb_application_lb_facts) before Ansible 2.9. The usage did not change.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "load_balancer_arns": {
          "aliases": [],
          "description": "The Amazon Resource Names (ARN) of the load balancers. You can specify up to 20 load balancers in a single call.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "names": {
          "aliases": [],
          "description": "The names of the load balancers.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Gather information about application ELBs in AWS",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n- name: Gather information about all target groups\n  community.aws.elb_application_lb_info:\n\n- name: Gather information about the target group attached to a particular ELB\n  community.aws.elb_application_lb_info:\n    load_balancer_arns:\n      - \"arn:aws:elasticloadbalancing:ap-southeast-2:001122334455:loadbalancer/app/my-elb/aabbccddeeff\"\n\n- name: Gather information about a target groups named 'tg1' and 'tg2'\n  community.aws.elb_application_lb_info:\n    names:\n      - elb1\n      - elb2\n\n- name: Gather information about specific ALB\n  community.aws.elb_application_lb_info:\n    names: \"alb-name\"\n    region: \"aws-region\"\n  register: alb_info\n- ansible.builtin.debug:\n    var: alb_info\n"
  },
  "community.aws.elb_application_lb_info": {
    "doc": {
      "description": "Gather information about application ELBs in AWS\nThis module was called C(elb_application_lb_facts) before Ansible 2.9. The usage did not change.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "load_balancer_arns": {
          "aliases": [],
          "description": "The Amazon Resource Names (ARN) of the load balancers. You can specify up to 20 load balancers in a single call.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "names": {
          "aliases": [],
          "description": "The names of the load balancers.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Gather information about application ELBs in AWS",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n- name: Gather information about all target groups\n  community.aws.elb_application_lb_info:\n\n- name: Gather information about the target group attached to a particular ELB\n  community.aws.elb_application_lb_info:\n    load_balancer_arns:\n      - \"arn:aws:elasticloadbalancing:ap-southeast-2:001122334455:loadbalancer/app/my-elb/aabbccddeeff\"\n\n- name: Gather information about a target groups named 'tg1' and 'tg2'\n  community.aws.elb_application_lb_info:\n    names:\n      - elb1\n      - elb2\n\n- name: Gather information about specific ALB\n  community.aws.elb_application_lb_info:\n    names: \"alb-name\"\n    region: \"aws-region\"\n  register: alb_info\n- ansible.builtin.debug:\n    var: alb_info\n"
  },
  "community.aws.elb_classic_lb_facts": {
    "doc": {
      "description": "Gather information about EC2 Elastic Load Balancers in AWS\nThis module was called C(elb_classic_lb_facts) before Ansible 2.9. The usage did not change.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "names": {
          "aliases": [],
          "description": "List of ELB names to gather information about. Pass this option to gather information about a set of ELBs, otherwise, all ELBs are returned.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Gather information about EC2 Elastic Load Balancers in AWS",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n# Output format tries to match amazon.aws.ec2_elb_lb module input parameters\n\n# Gather information about all ELBs\n- community.aws.elb_classic_lb_info:\n  register: elb_info\n\n- ansible.builtin.debug:\n    msg: \"{{ item.dns_name }}\"\n  loop: \"{{ elb_info.elbs }}\"\n\n# Gather information about a particular ELB\n- community.aws.elb_classic_lb_info:\n    names: frontend-prod-elb\n  register: elb_info\n\n- ansible.builtin.debug:\n    msg: \"{{ elb_info.elbs.0.dns_name }}\"\n\n# Gather information about a set of ELBs\n- community.aws.elb_classic_lb_info:\n    names:\n    - frontend-prod-elb\n    - backend-prod-elb\n  register: elb_info\n\n- ansible.builtin.debug:\n    msg: \"{{ item.dns_name }}\"\n  loop: \"{{ elb_info.elbs }}\"\n\n"
  },
  "community.aws.elb_classic_lb_info": {
    "doc": {
      "description": "Gather information about EC2 Elastic Load Balancers in AWS\nThis module was called C(elb_classic_lb_facts) before Ansible 2.9. The usage did not change.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "names": {
          "aliases": [],
          "description": "List of ELB names to gather information about. Pass this option to gather information about a set of ELBs, otherwise, all ELBs are returned.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Gather information about EC2 Elastic Load Balancers in AWS",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n# Output format tries to match amazon.aws.ec2_elb_lb module input parameters\n\n# Gather information about all ELBs\n- community.aws.elb_classic_lb_info:\n  register: elb_info\n\n- ansible.builtin.debug:\n    msg: \"{{ item.dns_name }}\"\n  loop: \"{{ elb_info.elbs }}\"\n\n# Gather information about a particular ELB\n- community.aws.elb_classic_lb_info:\n    names: frontend-prod-elb\n  register: elb_info\n\n- ansible.builtin.debug:\n    msg: \"{{ elb_info.elbs.0.dns_name }}\"\n\n# Gather information about a set of ELBs\n- community.aws.elb_classic_lb_info:\n    names:\n    - frontend-prod-elb\n    - backend-prod-elb\n  register: elb_info\n\n- ansible.builtin.debug:\n    msg: \"{{ item.dns_name }}\"\n  loop: \"{{ elb_info.elbs }}\"\n\n"
  },
  "community.aws.elb_instance": {
    "doc": {
      "description": "This module de-registers or registers an AWS EC2 instance from the ELBs that it belongs to.\nWill be marked changed when called only if there are ELBs found to operate on.",
      "has_action": false,
      "notes": "The ec2_elb fact currently set by this module has been deprecated and will no longer be set after release 4.0.0 of the collection.\nIf parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_elbs": {
          "aliases": [],
          "description": "List of ELB names\nRequired when I(state=present).",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "enable_availability_zone": {
          "aliases": [],
          "description": "Whether to enable the availability zone of the instance on the target ELB if the availability zone has not already been enabled.\nIf I(enable_availability_zone=no), the task will fail if the availability zone is not enabled on the ELB.",
          "default": "yes",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "instance_id": {
          "aliases": [],
          "description": "EC2 Instance ID.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Register or deregister the instance.",
          "type": "str",
          "required": true,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "wait": {
          "aliases": [],
          "description": "Wait for instance registration or deregistration to complete successfully before returning.",
          "default": "yes",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "wait_timeout": {
          "aliases": [],
          "description": "Number of seconds to wait for an instance to change state.\nIf I(wait_timeout=0) then this module may return an error if a transient error occurs.\nIf non-zero then any transient errors are ignored until the timeout is reached.\nIgnored when I(wait=no).",
          "default": "0",
          "type": "int",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "De-registers or registers instances from EC2 ELBs",
      "version_added": "1.0.0"
    },
    "examples": "\n# basic pre_task and post_task example\npre_tasks:\n  - name: Instance De-register\n    community.aws.elb_instance:\n      instance_id: \"{{ ansible_ec2_instance_id }}\"\n      state: absent\n    register: deregister_instances\n    delegate_to: localhost\nroles:\n  - myrole\npost_tasks:\n  - name: Instance Register\n    community.aws.elb_instance:\n      instance_id: \"{{ ansible_ec2_instance_id }}\"\n      ec2_elbs: \"{{ deregister_instances.updated_elbs }}\"\n      state: present\n    delegate_to: localhost\n"
  },
  "community.aws.elb_network_lb": {
    "doc": {
      "description": "Manage an AWS Network Elastic Load Balancer. See U(https://aws.amazon.com/blogs/aws/new-network-load-balancer-effortless-scaling-to-millions-of-requests-per-second/) for details.",
      "has_action": false,
      "notes": "Listeners are matched based on port. If a listener's port is changed then a new listener will be created.\nListener rules are matched based on priority. If a rule's priority is changed then a new rule will be created.\nIf parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cross_zone_load_balancing": {
          "aliases": [],
          "description": "Indicates whether cross-zone load balancing is enabled.\nDefaults to C(false).",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "deletion_protection": {
          "aliases": [],
          "description": "Indicates whether deletion protection for the ELB is enabled.\nDefaults to C(false).",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ip_address_type": {
          "aliases": [],
          "description": "Sets the type of IP addresses used by the subnets of the specified Application Load Balancer.",
          "type": "str",
          "required": false,
          "choices": [
            "ipv4",
            "dualstack"
          ],
          "suboptions": {}
        },
        "listeners": {
          "aliases": [],
          "description": "A list of dicts containing listeners to attach to the ELB. See examples for detail of the dict required. Note that listener keys are CamelCased.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "Certificates": {
              "aliases": [],
              "description": "The SSL server certificate.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "CertificateArn": {
                  "aliases": [],
                  "description": "The Amazon Resource Name (ARN) of the certificate.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "DefaultActions": {
              "aliases": [],
              "description": "The default actions for the listener.",
              "type": "list",
              "required": true,
              "elements": "dict",
              "suboptions": {
                "TargetGroupArn": {
                  "aliases": [],
                  "description": "The Amazon Resource Name (ARN) of the target group.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "Type": {
                  "aliases": [],
                  "description": "The type of action.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "Port": {
              "aliases": [],
              "description": "The port on which the load balancer is listening.",
              "type": "int",
              "required": true,
              "suboptions": {}
            },
            "Protocol": {
              "aliases": [],
              "description": "The protocol for connections from clients to the load balancer.",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "SslPolicy": {
              "aliases": [],
              "description": "The security policy that defines which ciphers and protocols are supported.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "name": {
          "aliases": [],
          "description": "The name of the load balancer. This name must be unique within your AWS account, can have a maximum of 32 characters, must contain only alphanumeric characters or hyphens, and must not begin or end with a hyphen.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "purge_listeners": {
          "aliases": [],
          "description": "If I(purge_listeners=true), existing listeners will be purged from the ELB to match exactly what is defined by I(listeners) parameter.\nIf the I(listeners) parameter is not set then listeners will not be modified.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "purge_tags": {
          "aliases": [],
          "description": "If I(purge_tags=true), existing tags will be purged from the resource to match exactly what is defined by I(tags) parameter.\nIf the I(tags) parameter is not set then tags will not be modified.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scheme": {
          "aliases": [],
          "description": "Internet-facing or internal load balancer. An ELB scheme can not be modified after creation.",
          "default": "internet-facing",
          "type": "str",
          "required": false,
          "choices": [
            "internet-facing",
            "internal"
          ],
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Create or destroy the load balancer.\nThe current default is C(absent).  However, this behavior is inconsistent with other modules and as such the default will change to C(present) in a release after 2022-06-01. To maintain the existing behavior explicitly set I(state=absent).",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "subnet_mappings": {
          "aliases": [],
          "description": "A list of dicts containing the IDs of the subnets to attach to the load balancer. You can also specify the allocation ID of an Elastic IP to attach to the load balancer or the internal IP address for an internal load balancer. You can specify one Elastic IP address or internal address per subnet.\nThis parameter is mutually exclusive with I(subnets).",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {}
        },
        "subnets": {
          "aliases": [],
          "description": "A list of the IDs of the subnets to attach to the load balancer. You can specify only one subnet per Availability Zone. You must specify subnets from at least two Availability Zones.\nRequired when I(state=present).\nThis parameter is mutually exclusive with I(subnet_mappings).",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "A dictionary of one or more tags to assign to the load balancer.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "wait": {
          "aliases": [],
          "description": "Whether or not to wait for the network load balancer to reach the desired state.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "wait_timeout": {
          "aliases": [],
          "description": "The duration in seconds to wait, used in conjunction with I(wait).",
          "type": "int",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Manage a Network Load Balancer",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n- name: Create an ELB and attach a listener\n  community.aws.elb_network_lb:\n    name: myelb\n    subnets:\n      - subnet-012345678\n      - subnet-abcdef000\n    listeners:\n      - Protocol: TCP # Required. The protocol for connections from clients to the load balancer (TCP, TLS, UDP or TCP_UDP) (case-sensitive).\n        Port: 80 # Required. The port on which the load balancer is listening.\n        DefaultActions:\n          - Type: forward # Required. Only 'forward' is accepted at this time\n            TargetGroupName: mytargetgroup # Required. The name of the target group\n    state: present\n\n- name: Create an ELB with an attached Elastic IP address\n  community.aws.elb_network_lb:\n    name: myelb\n    subnet_mappings:\n      - SubnetId: subnet-012345678\n        AllocationId: eipalloc-aabbccdd\n    listeners:\n      - Protocol: TCP # Required. The protocol for connections from clients to the load balancer (TCP, TLS, UDP or TCP_UDP) (case-sensitive).\n        Port: 80 # Required. The port on which the load balancer is listening.\n        DefaultActions:\n          - Type: forward # Required. Only 'forward' is accepted at this time\n            TargetGroupName: mytargetgroup # Required. The name of the target group\n    state: present\n\n- name: Create an internal ELB with a specified IP address\n  community.aws.elb_network_lb:\n    name: myelb\n    scheme: internal\n    subnet_mappings:\n      - SubnetId: subnet-012345678\n        PrivateIPv4Address: 192.168.0.1 # Must be an address from within the CIDR of the subnet.\n    listeners:\n      - Protocol: TCP # Required. The protocol for connections from clients to the load balancer (TCP, TLS, UDP or TCP_UDP) (case-sensitive).\n        Port: 80 # Required. The port on which the load balancer is listening.\n        DefaultActions:\n          - Type: forward # Required. Only 'forward' is accepted at this time\n            TargetGroupName: mytargetgroup # Required. The name of the target group\n    state: present\n\n- name: Remove an ELB\n  community.aws.elb_network_lb:\n    name: myelb\n    state: absent\n\n"
  },
  "community.aws.elb_target": {
    "doc": {
      "description": "Used to register or deregister a target in a target group.",
      "has_action": false,
      "notes": "If you specified a port override when you registered a target, you must specify both the target ID and the port when you deregister it.\nIf parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "deregister_unused": {
          "aliases": [],
          "description": "The default behaviour for targets that are unused is to leave them registered.\nIf instead you would like to remove them set I(deregister_unused=true).",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Register or deregister the target.",
          "type": "str",
          "required": true,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "target_az": {
          "aliases": [],
          "description": "An Availability Zone or C(all). This determines whether the target receives traffic from the load balancer nodes in the specified Availability Zone or from all enabled Availability Zones for the load balancer. This parameter is not supported if the target type of the target group is instance.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "target_group_arn": {
          "aliases": [],
          "description": "The Amazon Resource Name (ARN) of the target group.\nMutually exclusive of I(target_group_name).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "target_group_name": {
          "aliases": [],
          "description": "The name of the target group.\nMutually exclusive of I(target_group_arn).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "target_id": {
          "aliases": [],
          "description": "The ID of the target.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "target_port": {
          "aliases": [],
          "description": "The port on which the target is listening. You can specify a port override. If a target is already registered, you can register it again using a different port.\nThe default port for a target is the port for the target group.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "target_status": {
          "aliases": [],
          "description": "Blocks and waits for the target status to equal given value. For more detail on target status see U(https://docs.aws.amazon.com/elasticloadbalancing/latest/application/target-group-health-checks.html#target-health-states)",
          "type": "str",
          "required": false,
          "choices": [
            "initial",
            "healthy",
            "unhealthy",
            "unused",
            "draining",
            "unavailable"
          ],
          "suboptions": {}
        },
        "target_status_timeout": {
          "aliases": [],
          "description": "Maximum time in seconds to wait for I(target_status) change.",
          "default": "60",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Manage a target in a target group",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n- name: Register an IP address target to a target group\n  community.aws.elb_target:\n    target_group_name: myiptargetgroup\n    target_id: i-1234567\n    state: present\n\n- name: Register an instance target to a target group\n  community.aws.elb_target:\n    target_group_name: mytargetgroup\n    target_id: i-1234567\n    state: present\n\n- name: Deregister a target from a target group\n  community.aws.elb_target:\n    target_group_name: mytargetgroup\n    target_id: i-1234567\n    state: absent\n\n# Modify a target to use a different port\n- name: Register a target to a target group\n  community.aws.elb_target:\n    target_group_name: mytargetgroup\n    target_id: i-1234567\n    target_port: 8080\n    state: present\n\n"
  },
  "community.aws.elb_target_facts": {
    "doc": {
      "description": "This module will search through every target group in a region to find which ones have registered a given instance ID or IP.\nThis module was called C(elb_target_facts) before Ansible 2.9. The usage did not change.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "get_unused_target_groups": {
          "aliases": [],
          "description": "Whether or not to get target groups not used by any load balancers.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "instance_id": {
          "aliases": [],
          "description": "What instance ID to get information for.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Gathers which target groups a target is associated with.",
      "version_added": "1.0.0"
    },
    "examples": "\n# practical use case - dynamically de-registering and re-registering nodes\n\n  - name: Get EC2 Metadata\n    amazon.aws.ec2_metadata_facts:\n\n  - name: Get initial list of target groups\n    delegate_to: localhost\n    community.aws.elb_target_info:\n      instance_id: \"{{ ansible_ec2_instance_id }}\"\n      region: \"{{ ansible_ec2_placement_region }}\"\n    register: target_info\n\n  - name: save fact for later\n    ansible.builtin.set_fact:\n      original_tgs: \"{{ target_info.instance_target_groups }}\"\n\n  - name: Deregister instance from all target groups\n    delegate_to: localhost\n    community.aws.elb_target:\n        target_group_arn: \"{{ item.0.target_group_arn }}\"\n        target_port: \"{{ item.1.target_port }}\"\n        target_az: \"{{ item.1.target_az }}\"\n        target_id: \"{{ item.1.target_id }}\"\n        state: absent\n        target_status: \"draining\"\n        region: \"{{ ansible_ec2_placement_region }}\"\n    with_subelements:\n      - \"{{ original_tgs }}\"\n      - \"targets\"\n\n    # This avoids having to wait for 'elb_target' to serially deregister each\n    # target group.  An alternative would be to run all of the 'elb_target'\n    # tasks async and wait for them to finish.\n\n  - name: wait for all targets to deregister simultaneously\n    delegate_to: localhost\n    community.aws.elb_target_info:\n      get_unused_target_groups: false\n      instance_id: \"{{ ansible_ec2_instance_id }}\"\n      region: \"{{ ansible_ec2_placement_region }}\"\n    register: target_info\n    until: (target_info.instance_target_groups | length) == 0\n    retries: 60\n    delay: 10\n\n  - name: reregister in elbv2s\n    community.aws.elb_target:\n      region: \"{{ ansible_ec2_placement_region }}\"\n      target_group_arn: \"{{ item.0.target_group_arn }}\"\n      target_port: \"{{ item.1.target_port }}\"\n      target_az: \"{{ item.1.target_az }}\"\n      target_id: \"{{ item.1.target_id }}\"\n      state: present\n      target_status: \"initial\"\n    with_subelements:\n      - \"{{ original_tgs }}\"\n      - \"targets\"\n\n  # wait until all groups associated with this instance are 'healthy' or\n  # 'unused'\n  - name: wait for registration\n    community.aws.elb_target_info:\n      get_unused_target_groups: false\n      instance_id: \"{{ ansible_ec2_instance_id }}\"\n      region: \"{{ ansible_ec2_placement_region }}\"\n    register: target_info\n    until: (target_info.instance_target_groups |\n            map(attribute='targets') |\n            flatten |\n            map(attribute='target_health') |\n            rejectattr('state', 'equalto', 'healthy') |\n            rejectattr('state', 'equalto', 'unused') |\n            list |\n            length) == 0\n    retries: 61\n    delay: 10\n\n# using the target groups to generate AWS CLI commands to reregister the\n# instance - useful in case the playbook fails mid-run and manual\n#            rollback is required\n  - name: \"reregistration commands: ELBv2s\"\n    ansible.builtin.debug:\n      msg: >\n             aws --region {{ansible_ec2_placement_region}} elbv2\n             register-targets --target-group-arn {{item.target_group_arn}}\n             --targets{%for target in item.targets%}\n             Id={{target.target_id}},\n             Port={{target.target_port}}{%if target.target_az%},AvailabilityZone={{target.target_az}}\n             {%endif%}\n             {%endfor%}\n    loop: \"{{target_info.instance_target_groups}}\"\n\n"
  },
  "community.aws.elb_target_group": {
    "doc": {
      "description": "Manage an AWS Elastic Load Balancer target group. See U(https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-target-groups.html) or U(https://docs.aws.amazon.com/elasticloadbalancing/latest/network/load-balancer-target-groups.html) for details.",
      "has_action": false,
      "notes": "Once a target group has been created, only its health check can then be modified using subsequent calls\nIf parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "deregistration_delay_timeout": {
          "aliases": [],
          "description": "The amount time for Elastic Load Balancing to wait before changing the state of a deregistering target from draining to unused. The range is 0-3600 seconds.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "health_check_interval": {
          "aliases": [],
          "description": "The approximate amount of time, in seconds, between health checks of an individual target.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "health_check_path": {
          "aliases": [],
          "description": "The ping path that is the destination on the targets for health checks. The path must be defined in order to set a health check.\nRequires the I(health_check_protocol) parameter to be set.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "health_check_port": {
          "aliases": [],
          "description": "The port the load balancer uses when performing health checks on targets. Can be set to 'traffic-port' to match target port.\nWhen not defined will default to the port on which each target receives traffic from the load balancer.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "health_check_protocol": {
          "aliases": [],
          "description": "The protocol the load balancer uses when performing health checks on targets.",
          "type": "str",
          "required": false,
          "choices": [
            "http",
            "https",
            "tcp",
            "tls",
            "udp",
            "tcp_udp",
            "HTTP",
            "HTTPS",
            "TCP",
            "TLS",
            "UDP",
            "TCP_UDP"
          ],
          "suboptions": {}
        },
        "health_check_timeout": {
          "aliases": [],
          "description": "The amount of time, in seconds, during which no response from a target means a failed health check.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "healthy_threshold_count": {
          "aliases": [],
          "description": "The number of consecutive health checks successes required before considering an unhealthy target healthy.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "modify_targets": {
          "aliases": [],
          "description": "Whether or not to alter existing targets in the group to match what is passed with the module",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the target group.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "port": {
          "aliases": [],
          "description": "The port on which the targets receive traffic. This port is used unless you specify a port override when registering the target. Required if I(state) is C(present).",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "preserve_client_ip_enabled": {
          "aliases": [],
          "description": "Indicates whether client IP preservation is enabled.\nThe default is disabled if the target group type is C(ip) address and the target group protocol is C(tcp) or C(tls). Otherwise, the default is enabled. Client IP preservation cannot be disabled for C(udp) and C(tcp_udp) target groups.\nI(preserve_client_ip_enabled) is supported only by Network Load Balancers.",
          "type": "bool",
          "required": false,
          "version_added": "2.1.0",
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "protocol": {
          "aliases": [],
          "description": "The protocol to use for routing traffic to the targets. Required when I(state) is C(present).",
          "type": "str",
          "required": false,
          "choices": [
            "http",
            "https",
            "tcp",
            "tls",
            "udp",
            "tcp_udp",
            "HTTP",
            "HTTPS",
            "TCP",
            "TLS",
            "UDP",
            "TCP_UDP"
          ],
          "suboptions": {}
        },
        "proxy_protocol_v2_enabled": {
          "aliases": [],
          "description": "Indicates whether Proxy Protocol version 2 is enabled.\nThe value is C(true) or C(false).\nI(proxy_protocol_v2_enabled) is supported only by Network Load Balancers.",
          "type": "bool",
          "required": false,
          "version_added": "2.1.0",
          "suboptions": {}
        },
        "purge_tags": {
          "aliases": [],
          "description": "If yes, existing tags will be purged from the resource to match exactly what is defined by I(tags) parameter. If the tag parameter is not set then tags will not be modified.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Create or destroy the target group.",
          "type": "str",
          "required": true,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "stickiness_app_cookie_duration": {
          "aliases": [],
          "description": "The time period, in seconds, during which requests from a client should be routed to the same target. After this time period expires, the application-generated cookie is considered stale. The range is 1 second to 1 week (604800 seconds).",
          "type": "int",
          "required": false,
          "version_added": "1.5.0",
          "suboptions": {}
        },
        "stickiness_app_cookie_name": {
          "aliases": [],
          "description": "The name of the application cookie. Required if I(stickiness_type=app_cookie).",
          "type": "str",
          "required": false,
          "version_added": "1.5.0",
          "suboptions": {}
        },
        "stickiness_enabled": {
          "aliases": [],
          "description": "Indicates whether sticky sessions are enabled.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "stickiness_lb_cookie_duration": {
          "aliases": [],
          "description": "The time period, in seconds, during which requests from a client should be routed to the same target. After this time period expires, the load balancer-generated cookie is considered stale. The range is 1 second to 1 week (604800 seconds).",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "stickiness_type": {
          "aliases": [],
          "description": "The type of sticky sessions.\nValid values are C(lb_cookie), C(app_cookie) or C(source_ip).\nIf not set AWS will default to C(lb_cookie) for Application Load Balancers or C(source_ip) for Network Load Balancers.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "successful_response_codes": {
          "aliases": [],
          "description": "The HTTP codes to use when checking for a successful response from a target.\nAccepts multiple values (for example, \"200,202\") or a range of values (for example, \"200-299\").\nRequires the I(health_check_protocol) parameter to be set.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "A dictionary of one or more tags to assign to the target group.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "target_type": {
          "aliases": [],
          "description": "The type of target that you must specify when registering targets with this target group. The possible values are C(instance) (targets are specified by instance ID), C(ip) (targets are specified by IP address) or C(lambda) (target is specified by ARN). Note that you can't specify targets for a target group using more than one type. Target type lambda only accept one target. When more than one target is specified, only the first one is used. All additional targets are ignored. If the target type is ip, specify IP addresses from the subnets of the virtual private cloud (VPC) for the target group, the RFC 1918 range (10.0.0.0/8, 172.16.0.0/12, and 192.168.0.0/16), and the RFC 6598 range (100.64.0.0/10). You can't specify publicly routable IP addresses.\nThe default behavior is C(instance).",
          "type": "str",
          "required": false,
          "choices": [
            "instance",
            "ip",
            "lambda"
          ],
          "suboptions": {}
        },
        "targets": {
          "aliases": [],
          "description": "A list of targets to assign to the target group. This parameter defaults to an empty list. Unless you set the 'modify_targets' parameter then all existing targets will be removed from the group. The list should be an Id and a Port parameter. See the Examples for detail.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {}
        },
        "unhealthy_threshold_count": {
          "aliases": [],
          "description": "The number of consecutive health check failures required before considering a target unhealthy.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "vpc_id": {
          "aliases": [],
          "description": "The identifier of the virtual private cloud (VPC). Required when I(state) is C(present).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "wait": {
          "aliases": [],
          "description": "Whether or not to wait for the target group.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "wait_timeout": {
          "aliases": [],
          "description": "The time to wait for the target group.",
          "default": "200",
          "type": "int",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Manage a target group for an Application or Network load balancer",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n- name: Create a target group with a default health check\n  community.aws.elb_target_group:\n    name: mytargetgroup\n    protocol: http\n    port: 80\n    vpc_id: vpc-01234567\n    state: present\n\n- name: Modify the target group with a custom health check\n  community.aws.elb_target_group:\n    name: mytargetgroup\n    protocol: http\n    port: 80\n    vpc_id: vpc-01234567\n    health_check_protocol: http\n    health_check_path: /health_check\n    health_check_port: 80\n    successful_response_codes: 200\n    health_check_interval: 15\n    health_check_timeout: 3\n    healthy_threshold_count: 4\n    unhealthy_threshold_count: 3\n    state: present\n\n- name: Delete a target group\n  community.aws.elb_target_group:\n    name: mytargetgroup\n    state: absent\n\n- name: Create a target group with instance targets\n  community.aws.elb_target_group:\n    name: mytargetgroup\n    protocol: http\n    port: 81\n    vpc_id: vpc-01234567\n    health_check_protocol: http\n    health_check_path: /\n    successful_response_codes: \"200,250-260\"\n    targets:\n      - Id: i-01234567\n        Port: 80\n      - Id: i-98765432\n        Port: 80\n    state: present\n    wait_timeout: 200\n    wait: True\n\n- name: Create a target group with IP address targets\n  community.aws.elb_target_group:\n    name: mytargetgroup\n    protocol: http\n    port: 81\n    vpc_id: vpc-01234567\n    health_check_protocol: http\n    health_check_path: /\n    successful_response_codes: \"200,250-260\"\n    target_type: ip\n    targets:\n      - Id: 10.0.0.10\n        Port: 80\n        AvailabilityZone: all\n      - Id: 10.0.0.20\n        Port: 80\n    state: present\n    wait_timeout: 200\n    wait: True\n\n# Using lambda as targets require that the target group\n# itself is allow to invoke the lambda function.\n# therefore you need first to create an empty target group\n# to receive its arn, second, allow the target group\n# to invoke the lambda function and third, add the target\n# to the target group\n- name: first, create empty target group\n  community.aws.elb_target_group:\n    name: my-lambda-targetgroup\n    target_type: lambda\n    state: present\n    modify_targets: False\n  register: out\n\n- name: second, allow invoke of the lambda\n  community.aws.lambda_policy:\n    state: \"{{ state | default('present') }}\"\n    function_name: my-lambda-function\n    statement_id: someID\n    action: lambda:InvokeFunction\n    principal: elasticloadbalancing.amazonaws.com\n    source_arn: \"{{ out.target_group_arn }}\"\n\n- name: third, add target\n  community.aws.elb_target_group:\n    name: my-lambda-targetgroup\n    target_type: lambda\n    state: present\n    targets:\n        - Id: arn:aws:lambda:eu-central-1:123456789012:function:my-lambda-function\n\n"
  },
  "community.aws.elb_target_group_facts": {
    "doc": {
      "description": "Gather information about ELB target groups in AWS\nThis module was called C(elb_target_group_facts) before Ansible 2.9. The usage did not change.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "collect_targets_health": {
          "aliases": [],
          "description": "When set to \"yes\", output contains targets health description",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "load_balancer_arn": {
          "aliases": [],
          "description": "The Amazon Resource Name (ARN) of the load balancer.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "names": {
          "aliases": [],
          "description": "The names of the target groups.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "target_group_arns": {
          "aliases": [],
          "description": "The Amazon Resource Names (ARN) of the target groups.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Gather information about ELB target groups in AWS",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n- name: Gather information about all target groups\n  community.aws.elb_target_group_info:\n\n- name: Gather information about the target group attached to a particular ELB\n  community.aws.elb_target_group_info:\n    load_balancer_arn: \"arn:aws:elasticloadbalancing:ap-southeast-2:001122334455:loadbalancer/app/my-elb/aabbccddeeff\"\n\n- name: Gather information about a target groups named 'tg1' and 'tg2'\n  community.aws.elb_target_group_info:\n    names:\n      - tg1\n      - tg2\n\n"
  },
  "community.aws.elb_target_group_info": {
    "doc": {
      "description": "Gather information about ELB target groups in AWS\nThis module was called C(elb_target_group_facts) before Ansible 2.9. The usage did not change.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "collect_targets_health": {
          "aliases": [],
          "description": "When set to \"yes\", output contains targets health description",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "load_balancer_arn": {
          "aliases": [],
          "description": "The Amazon Resource Name (ARN) of the load balancer.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "names": {
          "aliases": [],
          "description": "The names of the target groups.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "target_group_arns": {
          "aliases": [],
          "description": "The Amazon Resource Names (ARN) of the target groups.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Gather information about ELB target groups in AWS",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n- name: Gather information about all target groups\n  community.aws.elb_target_group_info:\n\n- name: Gather information about the target group attached to a particular ELB\n  community.aws.elb_target_group_info:\n    load_balancer_arn: \"arn:aws:elasticloadbalancing:ap-southeast-2:001122334455:loadbalancer/app/my-elb/aabbccddeeff\"\n\n- name: Gather information about a target groups named 'tg1' and 'tg2'\n  community.aws.elb_target_group_info:\n    names:\n      - tg1\n      - tg2\n\n"
  },
  "community.aws.elb_target_info": {
    "doc": {
      "description": "This module will search through every target group in a region to find which ones have registered a given instance ID or IP.\nThis module was called C(elb_target_facts) before Ansible 2.9. The usage did not change.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "get_unused_target_groups": {
          "aliases": [],
          "description": "Whether or not to get target groups not used by any load balancers.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "instance_id": {
          "aliases": [],
          "description": "What instance ID to get information for.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Gathers which target groups a target is associated with.",
      "version_added": "1.0.0"
    },
    "examples": "\n# practical use case - dynamically de-registering and re-registering nodes\n\n  - name: Get EC2 Metadata\n    amazon.aws.ec2_metadata_facts:\n\n  - name: Get initial list of target groups\n    delegate_to: localhost\n    community.aws.elb_target_info:\n      instance_id: \"{{ ansible_ec2_instance_id }}\"\n      region: \"{{ ansible_ec2_placement_region }}\"\n    register: target_info\n\n  - name: save fact for later\n    ansible.builtin.set_fact:\n      original_tgs: \"{{ target_info.instance_target_groups }}\"\n\n  - name: Deregister instance from all target groups\n    delegate_to: localhost\n    community.aws.elb_target:\n        target_group_arn: \"{{ item.0.target_group_arn }}\"\n        target_port: \"{{ item.1.target_port }}\"\n        target_az: \"{{ item.1.target_az }}\"\n        target_id: \"{{ item.1.target_id }}\"\n        state: absent\n        target_status: \"draining\"\n        region: \"{{ ansible_ec2_placement_region }}\"\n    with_subelements:\n      - \"{{ original_tgs }}\"\n      - \"targets\"\n\n    # This avoids having to wait for 'elb_target' to serially deregister each\n    # target group.  An alternative would be to run all of the 'elb_target'\n    # tasks async and wait for them to finish.\n\n  - name: wait for all targets to deregister simultaneously\n    delegate_to: localhost\n    community.aws.elb_target_info:\n      get_unused_target_groups: false\n      instance_id: \"{{ ansible_ec2_instance_id }}\"\n      region: \"{{ ansible_ec2_placement_region }}\"\n    register: target_info\n    until: (target_info.instance_target_groups | length) == 0\n    retries: 60\n    delay: 10\n\n  - name: reregister in elbv2s\n    community.aws.elb_target:\n      region: \"{{ ansible_ec2_placement_region }}\"\n      target_group_arn: \"{{ item.0.target_group_arn }}\"\n      target_port: \"{{ item.1.target_port }}\"\n      target_az: \"{{ item.1.target_az }}\"\n      target_id: \"{{ item.1.target_id }}\"\n      state: present\n      target_status: \"initial\"\n    with_subelements:\n      - \"{{ original_tgs }}\"\n      - \"targets\"\n\n  # wait until all groups associated with this instance are 'healthy' or\n  # 'unused'\n  - name: wait for registration\n    community.aws.elb_target_info:\n      get_unused_target_groups: false\n      instance_id: \"{{ ansible_ec2_instance_id }}\"\n      region: \"{{ ansible_ec2_placement_region }}\"\n    register: target_info\n    until: (target_info.instance_target_groups |\n            map(attribute='targets') |\n            flatten |\n            map(attribute='target_health') |\n            rejectattr('state', 'equalto', 'healthy') |\n            rejectattr('state', 'equalto', 'unused') |\n            list |\n            length) == 0\n    retries: 61\n    delay: 10\n\n# using the target groups to generate AWS CLI commands to reregister the\n# instance - useful in case the playbook fails mid-run and manual\n#            rollback is required\n  - name: \"reregistration commands: ELBv2s\"\n    ansible.builtin.debug:\n      msg: >\n             aws --region {{ansible_ec2_placement_region}} elbv2\n             register-targets --target-group-arn {{item.target_group_arn}}\n             --targets{%for target in item.targets%}\n             Id={{target.target_id}},\n             Port={{target.target_port}}{%if target.target_az%},AvailabilityZone={{target.target_az}}\n             {%endif%}\n             {%endfor%}\n    loop: \"{{target_info.instance_target_groups}}\"\n\n"
  },
  "community.aws.execute_lambda": {
    "doc": {
      "description": "This module executes AWS Lambda functions, allowing synchronous and asynchronous invocation.",
      "has_action": false,
      "notes": "Async invocation will always return an empty C(output) key.\nSynchronous invocation may result in a function timeout, resulting in an empty C(output) key.\nIf parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "dry_run": {
          "aliases": [],
          "description": "Do not *actually* invoke the function. A C(DryRun) call will check that the caller has permissions to call the function, especially for checking cross-account permissions.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "function_arn": {
          "aliases": [],
          "description": "The name of the function to be invoked",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the function to be invoked. This can only be used for invocations within the calling account. To invoke a function in another account, use I(function_arn) to specify the full ARN.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "payload": {
          "aliases": [],
          "description": "A dictionary in any form to be provided as input to the Lambda function.",
          "default": "{}",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tail_log": {
          "aliases": [],
          "description": "If I(tail_log=yes), the result of the task will include the last 4 KB of the CloudWatch log for the function execution. Log tailing only works if you use synchronous invocation I(wait=yes). This is usually used for development or testing Lambdas.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "version_qualifier": {
          "aliases": [],
          "description": "Which version/alias of the function to run. This defaults to the C(LATEST) revision, but can be set to any existing version or alias. See U(https://docs.aws.amazon.com/lambda/latest/dg/versioning-aliases.html) for details.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "wait": {
          "aliases": [],
          "description": "Whether to wait for the function results or not. If I(wait=no) the task will not return any results. To wait for the Lambda function to complete, set I(wait=yes) and the result will be available in the I(output) key.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Execute an AWS Lambda function",
      "version_added": "1.0.0"
    },
    "examples": "\n- community.aws.execute_lambda:\n    name: test-function\n    # the payload is automatically serialized and sent to the function\n    payload:\n      foo: bar\n      value: 8\n  register: response\n\n# Test that you have sufficient permissions to execute a Lambda function in\n# another account\n- community.aws.execute_lambda:\n    function_arn: arn:aws:lambda:us-east-1:123456789012:function/some-function\n    dry_run: true\n\n- community.aws.execute_lambda:\n    name: test-function\n    payload:\n      foo: bar\n      value: 8\n    wait: true\n    tail_log: true\n  register: response\n  # the response will have a `logs` key that will contain a log (up to 4KB) of the function execution in Lambda\n\n# Pass the Lambda event payload as a json file.\n- community.aws.execute_lambda:\n    name: test-function\n    payload: \"{{ lookup('file','lambda_event.json') }}\"\n  register: response\n\n- community.aws.execute_lambda:\n    name: test-function\n    version_qualifier: PRODUCTION\n"
  },
  "community.aws.iam": {
    "doc": {
      "description": "Allows for the management of IAM users, user API keys, groups, roles.",
      "has_action": false,
      "notes": "Currently boto does not support the removal of Managed Policies, the module will error out if your user/group/role has managed policies when you try to do state=absent. They will need to be removed manually.\nIf parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "access_key_ids": {
          "aliases": [],
          "description": "A list of the keys that you want affected by the I(access_key_state) parameter.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "access_key_state": {
          "aliases": [],
          "description": "When type is user, it creates, removes, deactivates or activates a user's access key(s). Note that actions apply only to keys specified.",
          "type": "str",
          "required": false,
          "choices": [
            "create",
            "remove",
            "active",
            "inactive",
            "Create",
            "Remove",
            "Active",
            "Inactive"
          ],
          "suboptions": {}
        },
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "groups": {
          "aliases": [],
          "description": "A list of groups the user should belong to. When I(state=update), will gracefully remove groups not listed.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "iam_type": {
          "aliases": [],
          "description": "Type of IAM resource.",
          "type": "str",
          "required": true,
          "choices": [
            "user",
            "group",
            "role"
          ],
          "suboptions": {}
        },
        "key_count": {
          "aliases": [],
          "description": "When I(access_key_state=create) it will ensure this quantity of keys are present.",
          "default": "1",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of IAM resource to create or identify.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "new_name": {
          "aliases": [],
          "description": "When I(state=update), will replace I(name) with I(new_name) on IAM resource.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "new_path": {
          "aliases": [],
          "description": "When I(state=update), will replace the path with new_path on the IAM resource.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "When I(type=user) and either I(state=present) or I(state=update), define the users login password.\nNote that this will always return 'changed'.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "path": {
          "aliases": [],
          "description": "When creating or updating, specify the desired path of the resource.\nIf I(state=present), it will replace the current path to match what is passed in when they do not match.",
          "default": "/",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether to create, delete or update the IAM resource. Note, roles cannot be updated.",
          "type": "str",
          "required": true,
          "choices": [
            "present",
            "absent",
            "update"
          ],
          "suboptions": {}
        },
        "trust_policy": {
          "aliases": [],
          "description": "The inline (JSON or YAML) trust policy document that grants an entity permission to assume the role.\nMutually exclusive with I(trust_policy_filepath).",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "trust_policy_filepath": {
          "aliases": [],
          "description": "The path to the trust policy document that grants an entity permission to assume the role.\nMutually exclusive with I(trust_policy).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "update_password": {
          "aliases": [],
          "description": "When to update user passwords.\nI(update_password=always) will ensure the password is set to I(password).\nI(update_password=on_create) will only set the password for newly created users.",
          "default": "always",
          "type": "str",
          "required": false,
          "choices": [
            "always",
            "on_create"
          ],
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "boto >= 2.49.0",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0",
        "python >= 3.6"
      ],
      "short_description": "Manage IAM users, groups, roles and keys",
      "version_added": "1.0.0"
    },
    "examples": "\n# Basic user creation example\n- name: Create two new IAM users with API keys\n  community.aws.iam:\n    iam_type: user\n    name: \"{{ item }}\"\n    state: present\n    password: \"{{ temp_pass }}\"\n    access_key_state: create\n  loop:\n    - jcleese\n    - mpython\n\n# Advanced example, create two new groups and add the pre-existing user\n# jdavila to both groups.\n- name: Create Two Groups, Mario and Luigi\n  community.aws.iam:\n    iam_type: group\n    name: \"{{ item }}\"\n    state: present\n  loop:\n     - Mario\n     - Luigi\n  register: new_groups\n\n- name: Update user\n  community.aws.iam:\n    iam_type: user\n    name: jdavila\n    state: update\n    groups: \"{{ item.created_group.group_name }}\"\n  loop: \"{{ new_groups.results }}\"\n\n# Example of role with custom trust policy for Lambda service\n- name: Create IAM role with custom trust relationship\n  community.aws.iam:\n    iam_type: role\n    name: AAALambdaTestRole\n    state: present\n    trust_policy:\n      Version: '2012-10-17'\n      Statement:\n      - Action: sts:AssumeRole\n        Effect: Allow\n        Principal:\n          Service: lambda.amazonaws.com\n\n"
  },
  "community.aws.iam_access_key": {
    "doc": {
      "description": "Manage AWS IAM user access keys.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "active": {
          "aliases": [
            "enabled"
          ],
          "description": "Whether the key should be enabled or disabled.\nDefaults to C(true) when creating a new key.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "id": {
          "aliases": [],
          "description": "The ID of the access key.\nRequired when I(state=absent).\nMutually exclusive with I(rotate_keys).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "rotate_keys": {
          "aliases": [],
          "description": "When there are already 2 access keys attached to the IAM user the oldest key will be removed and a new key created.\nIgnored if I(state=absent)\nMutually exclusive with I(id).",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Create or remove the access key.\nWhen I(state=present) and I(id) is not defined a new key will be created.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "user_name": {
          "aliases": [
            "username"
          ],
          "description": "The name of the IAM User to which the key belongs.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Manage AWS IAM User access keys",
      "version_added": "2.1.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n- name: Create a new access key\n  community.aws.iam_access_key:\n    user_name: example_user\n    state: present\n\n- name: Delete the access_key\n  community.aws.iam_access_key:\n    name: example_user\n    access_key_id: AKIA1EXAMPLE1EXAMPLE\n    state: absent\n"
  },
  "community.aws.iam_access_key_info": {
    "doc": {
      "description": "Fetches information AWS IAM user access keys.\nNote: It is not possible to fetch the secret access key.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "user_name": {
          "aliases": [
            "username"
          ],
          "description": "The name of the IAM User to which the keys belong.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "fetch information about AWS IAM User access keys",
      "version_added": "2.1.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n- name: Fetch Access keys for a user\n  community.aws.iam_access_key_info:\n    user_name: example_user\n"
  },
  "community.aws.iam_cert_facts": {
    "doc": {
      "description": "Retrieve the attributes of a server certificate.\nThis module was called C(iam_server_certificate_facts) before Ansible 2.9. The usage did not change.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the server certificate you are retrieving attributes for.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Retrieve the information of a server certificate",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Retrieve server certificate\n  community.aws.iam_server_certificate_info:\n    name: production-cert\n  register: server_cert\n\n- name: Fail if the server certificate name was not found\n  community.aws.iam_server_certificate_info:\n    name: production-cert\n  register: server_cert\n  failed_when: \"{{ server_cert.results | length == 0 }}\"\n"
  },
  "community.aws.iam_group": {
    "doc": {
      "description": "Manage AWS IAM groups.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "managed_policies": {
          "aliases": [
            "managed_policy"
          ],
          "description": "A list of managed policy ARNs or friendly names to attach to the role.\nTo embed an inline policy, use M(community.aws.iam_policy).",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the group to create.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "purge_policies": {
          "aliases": [
            "purge_policy",
            "purge_managed_policies"
          ],
          "description": "When I(purge_policies=true) any managed policies not listed in I(managed_policies) will be detatched.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "purge_users": {
          "aliases": [],
          "description": "When I(purge_users=true) users which are not included in I(users) will be detached.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Create or remove the IAM group.",
          "type": "str",
          "required": true,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "users": {
          "aliases": [],
          "description": "A list of existing users to add as members of the group.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Manage AWS IAM groups",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n- name: Create a group\n  community.aws.iam_group:\n    name: testgroup1\n    state: present\n\n- name: Create a group and attach a managed policy using its ARN\n  community.aws.iam_group:\n    name: testgroup1\n    managed_policies:\n      - arn:aws:iam::aws:policy/AmazonSNSFullAccess\n    state: present\n\n- name: Create a group with users as members and attach a managed policy using its ARN\n  community.aws.iam_group:\n    name: testgroup1\n    managed_policies:\n      - arn:aws:iam::aws:policy/AmazonSNSFullAccess\n    users:\n      - test_user1\n      - test_user2\n    state: present\n\n- name: Remove all managed policies from an existing group with an empty list\n  community.aws.iam_group:\n    name: testgroup1\n    state: present\n    purge_policies: true\n\n- name: Remove all group members from an existing group\n  community.aws.iam_group:\n    name: testgroup1\n    managed_policies:\n      - arn:aws:iam::aws:policy/AmazonSNSFullAccess\n    purge_users: true\n    state: present\n\n- name: Delete the group\n  community.aws.iam_group:\n    name: testgroup1\n    state: absent\n\n"
  },
  "community.aws.iam_managed_policy": {
    "doc": {
      "description": "Allows creating and removing managed IAM policies",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "fail_on_delete": {
          "aliases": [],
          "description": "The I(fail_on_delete) option does nothing and will be removed after 2022-06-01",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "make_default": {
          "aliases": [],
          "description": "Make this revision the default revision.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "only_version": {
          "aliases": [],
          "description": "Remove all other non default revisions, if this is used with C(make_default) it will result in all other versions of this policy being deleted.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "policy": {
          "aliases": [],
          "description": "A properly json formatted policy",
          "type": "json",
          "required": false,
          "suboptions": {}
        },
        "policy_description": {
          "aliases": [],
          "description": "A helpful description of this policy, this value is immutable and only set when creating a new policy.",
          "default": "",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "policy_name": {
          "aliases": [],
          "description": "The name of the managed policy.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Should this managed policy be present or absent. Set to absent to detach all entities from this policy and remove it if found.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Manage User Managed IAM policies",
      "version_added": "1.0.0"
    },
    "examples": "\n# Create Policy ex nihilo\n- name: Create IAM Managed Policy\n  community.aws.iam_managed_policy:\n    policy_name: \"ManagedPolicy\"\n    policy_description: \"A Helpful managed policy\"\n    policy: \"{{ lookup('template', 'managed_policy.json.j2') }}\"\n    state: present\n\n# Update a policy with a new default version\n- name: Create IAM Managed Policy\n  community.aws.iam_managed_policy:\n    policy_name: \"ManagedPolicy\"\n    policy: \"{{ lookup('file', 'managed_policy_update.json') }}\"\n    state: present\n\n# Update a policy with a new non default version\n- name: Create IAM Managed Policy\n  community.aws.iam_managed_policy:\n    policy_name: \"ManagedPolicy\"\n    policy:\n      Version: \"2012-10-17\"\n      Statement:\n      - Effect: \"Allow\"\n        Action: \"logs:CreateLogGroup\"\n        Resource: \"*\"\n    make_default: false\n    state: present\n\n# Update a policy and make it the only version and the default version\n- name: Create IAM Managed Policy\n  community.aws.iam_managed_policy:\n    policy_name: \"ManagedPolicy\"\n    policy: |\n      {\n        \"Version\": \"2012-10-17\",\n        \"Statement\":[{\n          \"Effect\": \"Allow\",\n          \"Action\": \"logs:PutRetentionPolicy\",\n          \"Resource\": \"*\"\n        }]\n      }\n    only_version: true\n    state: present\n\n# Remove a policy\n- name: Create IAM Managed Policy\n  community.aws.iam_managed_policy:\n    policy_name: \"ManagedPolicy\"\n    state: absent\n"
  },
  "community.aws.iam_mfa_device_facts": {
    "doc": {
      "description": "List the MFA (Multi-Factor Authentication) devices registered for a user\nThis module was called C(iam_mfa_device_facts) before Ansible 2.9. The usage did not change.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "user_name": {
          "aliases": [],
          "description": "The name of the user whose MFA devices will be listed",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "List the MFA (Multi-Factor Authentication) devices registered for a user",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n# more details: https://docs.aws.amazon.com/IAM/latest/APIReference/API_ListMFADevices.html\n- name: List MFA devices\n  community.aws.iam_mfa_device_info:\n  register: mfa_devices\n\n# more details: https://docs.aws.amazon.com/STS/latest/APIReference/API_AssumeRole.html\n- name: Assume an existing role\n  community.aws.sts_assume_role:\n    mfa_serial_number: \"{{ mfa_devices.mfa_devices[0].serial_number }}\"\n    role_arn: \"arn:aws:iam::123456789012:role/someRole\"\n    role_session_name: \"someRoleSession\"\n  register: assumed_role\n"
  },
  "community.aws.iam_mfa_device_info": {
    "doc": {
      "description": "List the MFA (Multi-Factor Authentication) devices registered for a user\nThis module was called C(iam_mfa_device_facts) before Ansible 2.9. The usage did not change.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "user_name": {
          "aliases": [],
          "description": "The name of the user whose MFA devices will be listed",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "List the MFA (Multi-Factor Authentication) devices registered for a user",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n# more details: https://docs.aws.amazon.com/IAM/latest/APIReference/API_ListMFADevices.html\n- name: List MFA devices\n  community.aws.iam_mfa_device_info:\n  register: mfa_devices\n\n# more details: https://docs.aws.amazon.com/STS/latest/APIReference/API_AssumeRole.html\n- name: Assume an existing role\n  community.aws.sts_assume_role:\n    mfa_serial_number: \"{{ mfa_devices.mfa_devices[0].serial_number }}\"\n    role_arn: \"arn:aws:iam::123456789012:role/someRole\"\n    role_session_name: \"someRoleSession\"\n  register: assumed_role\n"
  },
  "community.aws.iam_password_policy": {
    "doc": {
      "description": "Module updates an IAM Password Policy on a given AWS account",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "allow_pw_change": {
          "aliases": [
            "allow_password_change"
          ],
          "description": "Allow users to change their password.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "min_pw_length": {
          "aliases": [
            "minimum_password_length"
          ],
          "description": "Minimum password length.",
          "default": "6",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "pw_expire": {
          "aliases": [
            "password_expire",
            "expire"
          ],
          "description": "Prevents users from change an expired password.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "pw_max_age": {
          "aliases": [
            "password_max_age"
          ],
          "description": "Maximum age for a password in days. When this option is 0 then passwords do not expire automatically.",
          "default": "0",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "pw_reuse_prevent": {
          "aliases": [
            "password_reuse_prevent",
            "prevent_reuse"
          ],
          "description": "Prevent re-use of passwords.",
          "default": "0",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "require_lowercase": {
          "aliases": [],
          "description": "Require lowercase letters in password.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "require_numbers": {
          "aliases": [],
          "description": "Require numbers in password.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "require_symbols": {
          "aliases": [],
          "description": "Require symbols in password.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "require_uppercase": {
          "aliases": [],
          "description": "Require uppercase letters in password.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Specifies the overall state of the password policy.",
          "type": "str",
          "required": true,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Update an IAM Password Policy",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Password policy for AWS account\n  community.aws.iam_password_policy:\n    state: present\n    min_pw_length: 8\n    require_symbols: false\n    require_numbers: true\n    require_uppercase: true\n    require_lowercase: true\n    allow_pw_change: true\n    pw_max_age: 60\n    pw_reuse_prevent: 5\n    pw_expire: false\n"
  },
  "community.aws.iam_policy": {
    "doc": {
      "description": "Allows uploading or removing inline IAM policies for IAM users, groups or roles.\nTo administer managed policies please see M(community.aws.iam_user), M(community.aws.iam_role), M(community.aws.iam_group) and M(community.aws.iam_managed_policy)",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "iam_name": {
          "aliases": [],
          "description": "Name of IAM resource you wish to target for policy actions. In other words, the user name, group name or role name.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "iam_type": {
          "aliases": [],
          "description": "Type of IAM resource.",
          "type": "str",
          "required": true,
          "choices": [
            "user",
            "group",
            "role"
          ],
          "suboptions": {}
        },
        "policy_document": {
          "aliases": [],
          "description": "The path to the properly json formatted policy file.\nMutually exclusive with I(policy_json).\nThis option has been deprecated and will be removed in a release after 2022-06-01.  The existing behavior can be reproduced by using the I(policy_json) option and reading the file using the lookup plugin.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "policy_json": {
          "aliases": [],
          "description": "A properly json formatted policy as string.\nMutually exclusive with I(policy_document).\nSee U(https://github.com/ansible/ansible/issues/7005#issuecomment-42894813) on how to use it properly.",
          "type": "json",
          "required": false,
          "suboptions": {}
        },
        "policy_name": {
          "aliases": [],
          "description": "The name label for the policy to create or remove.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "skip_duplicates": {
          "aliases": [],
          "description": "When I(skip_duplicates=true) the module looks for any policies that match the document you pass in. If there is a match it will not make a new policy object with the same rules.\nThe current default is C(true).  However, this behavior can be confusing and as such the default will change to C(false) in a release after 2022-06-01.  To maintain the existing behavior explicitly set I(skip_duplicates=true).",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether to create or delete the IAM policy.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Manage inline IAM policies for users, groups, and roles",
      "version_added": "1.0.0"
    },
    "examples": "\n# Create a policy with the name of 'Admin' to the group 'administrators'\n- name: Assign a policy called Admin to the administrators group\n  community.aws.iam_policy:\n    iam_type: group\n    iam_name: administrators\n    policy_name: Admin\n    state: present\n    policy_document: admin_policy.json\n\n# Advanced example, create two new groups and add a READ-ONLY policy to both\n# groups.\n- name: Create Two Groups, Mario and Luigi\n  community.aws.iam:\n    iam_type: group\n    name: \"{{ item }}\"\n    state: present\n  loop:\n     - Mario\n     - Luigi\n  register: new_groups\n\n- name: Apply READ-ONLY policy to new groups that have been recently created\n  community.aws.iam_policy:\n    iam_type: group\n    iam_name: \"{{ item.created_group.group_name }}\"\n    policy_name: \"READ-ONLY\"\n    policy_document: readonlypolicy.json\n    state: present\n  loop: \"{{ new_groups.results }}\"\n\n# Create a new S3 policy with prefix per user\n- name: Create S3 policy from template\n  community.aws.iam_policy:\n    iam_type: user\n    iam_name: \"{{ item.user }}\"\n    policy_name: \"s3_limited_access_{{ item.prefix }}\"\n    state: present\n    policy_json: \" {{ lookup( 'template', 's3_policy.json.j2') }} \"\n    loop:\n      - user: s3_user\n        prefix: s3_user_prefix\n\n"
  },
  "community.aws.iam_policy_info": {
    "doc": {
      "description": "Supports fetching of inline IAM policies for IAM users, groups and roles.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "iam_name": {
          "aliases": [],
          "description": "Name of IAM resource you wish to retrieve inline policies for. In other words, the user name, group name or role name.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "iam_type": {
          "aliases": [],
          "description": "Type of IAM resource you wish to retrieve inline policies for.",
          "type": "str",
          "required": true,
          "choices": [
            "user",
            "group",
            "role"
          ],
          "suboptions": {}
        },
        "policy_name": {
          "aliases": [],
          "description": "Name of a specific IAM inline policy you with to retrieve.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Retrieve inline IAM policies for users, groups, and roles",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Describe all inline IAM policies on an IAM User\n  community.aws.iam_policy_info:\n    iam_type: user\n    iam_name: example_user\n\n- name: Describe a specific inline policy on an IAM Role\n  community.aws.iam_policy_info:\n    iam_type: role\n    iam_name: example_role\n    policy_name: example_policy\n\n"
  },
  "community.aws.iam_role": {
    "doc": {
      "description": "Manage AWS IAM roles.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "assume_role_policy_document": {
          "aliases": [],
          "description": "The trust relationship policy document that grants an entity permission to assume the role.\nThis parameter is required when I(state=present).",
          "type": "json",
          "required": false,
          "suboptions": {}
        },
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "boundary": {
          "aliases": [
            "boundary_policy_arn"
          ],
          "description": "The ARN of an IAM managed policy to use to restrict the permissions this role can pass on to IAM roles/users that it creates.\nBoundaries cannot be set on Instance Profiles, as such if this option is specified then I(create_instance_profile) must be C(false).\nThis is intended for roles/users that have permissions to create new IAM objects.\nFor more information on boundaries, see U(https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_boundaries.html).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "create_instance_profile": {
          "aliases": [],
          "description": "Creates an IAM instance profile along with the role.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "delete_instance_profile": {
          "aliases": [],
          "description": "When I(delete_instance_profile=true) and I(state=absent) deleting a role will also delete the instance profile created with the same I(name) as the role.\nOnly applies when I(state=absent).",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "Provides a description of the role.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "managed_policies": {
          "aliases": [
            "managed_policy"
          ],
          "description": "A list of managed policy ARNs, managed policy ARNs or friendly names.\nTo remove all policies set I(purge_polices=true) and I(managed_policies=[None]).\nTo embed an inline policy, use M(community.aws.iam_policy).",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "max_session_duration": {
          "aliases": [],
          "description": "The maximum duration (in seconds) of a session when assuming the role.\nValid values are between 1 and 12 hours (3600 and 43200 seconds).",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the role to create.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "path": {
          "aliases": [],
          "description": "The path to the role. For more information about paths, see U(https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_identifiers.html).",
          "default": "/",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "purge_policies": {
          "aliases": [
            "purge_policy",
            "purge_managed_policies"
          ],
          "description": "When I(purge_policies=true) any managed policies not listed in I(managed_policies) will be detatched.\nBy default I(purge_policies=true).  In a release after 2022-06-01 this will be changed to I(purge_policies=false).",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "purge_tags": {
          "aliases": [],
          "description": "Remove tags not listed in I(tags) when tags is specified.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Create or remove the IAM role.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Tag dict to apply to the queue.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "wait": {
          "aliases": [],
          "description": "When I(wait=True) the module will wait for up to I(wait_timeout) seconds for IAM role creation before returning.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "wait_timeout": {
          "aliases": [],
          "description": "How long (in seconds) to wait for creation / update to complete.",
          "default": "120",
          "type": "int",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Manage AWS IAM roles",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n- name: Create a role with description and tags\n  community.aws.iam_role:\n    name: mynewrole\n    assume_role_policy_document: \"{{ lookup('file','policy.json') }}\"\n    description: This is My New Role\n    tags:\n      env: dev\n\n- name: \"Create a role and attach a managed policy called 'PowerUserAccess'\"\n  community.aws.iam_role:\n    name: mynewrole\n    assume_role_policy_document: \"{{ lookup('file','policy.json') }}\"\n    managed_policies:\n      - arn:aws:iam::aws:policy/PowerUserAccess\n\n- name: Keep the role created above but remove all managed policies\n  community.aws.iam_role:\n    name: mynewrole\n    assume_role_policy_document: \"{{ lookup('file','policy.json') }}\"\n    managed_policies: []\n\n- name: Delete the role\n  community.aws.iam_role:\n    name: mynewrole\n    assume_role_policy_document: \"{{ lookup('file', 'policy.json') }}\"\n    state: absent\n\n"
  },
  "community.aws.iam_role_facts": {
    "doc": {
      "description": "Gathers information about IAM roles.\nThis module was called C(iam_role_facts) before Ansible 2.9. The usage did not change.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [
            "role_name"
          ],
          "description": "Name of a role to search for.\nMutually exclusive with I(path_prefix).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "path_prefix": {
          "aliases": [],
          "description": "Prefix of role to restrict IAM role search for.\nMutually exclusive with I(name).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Gather information on IAM roles",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: find all existing IAM roles\n  community.aws.iam_role_info:\n  register: result\n\n- name: describe a single role\n  community.aws.iam_role_info:\n    name: MyIAMRole\n\n- name: describe all roles matching a path prefix\n  community.aws.iam_role_info:\n    path_prefix: /application/path\n"
  },
  "community.aws.iam_role_info": {
    "doc": {
      "description": "Gathers information about IAM roles.\nThis module was called C(iam_role_facts) before Ansible 2.9. The usage did not change.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [
            "role_name"
          ],
          "description": "Name of a role to search for.\nMutually exclusive with I(path_prefix).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "path_prefix": {
          "aliases": [],
          "description": "Prefix of role to restrict IAM role search for.\nMutually exclusive with I(name).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Gather information on IAM roles",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: find all existing IAM roles\n  community.aws.iam_role_info:\n  register: result\n\n- name: describe a single role\n  community.aws.iam_role_info:\n    name: MyIAMRole\n\n- name: describe all roles matching a path prefix\n  community.aws.iam_role_info:\n    path_prefix: /application/path\n"
  },
  "community.aws.iam_saml_federation": {
    "doc": {
      "description": "Provides a mechanism to manage AWS IAM SAML Identity Federation providers (create/update/delete metadata).",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the provider to create.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "saml_metadata_document": {
          "aliases": [],
          "description": "The XML document generated by an identity provider (IdP) that supports SAML 2.0.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether to create or delete identity provider. If 'present' is specified it will attempt to update the identity provider matching the name field.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Maintain IAM SAML federation configuration.",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n# It is assumed that their matching environment variables are set.\n# Creates a new iam saml identity provider if not present\n- name: saml provider\n  community.aws.iam_saml_federation:\n      name: example1\n      # the > below opens an indented block, so no escaping/quoting is needed when in the indentation level under this key\n      saml_metadata_document: >\n          <?xml version=\"1.0\"?>...\n          <md:EntityDescriptor\n# Creates a new iam saml identity provider if not present\n- name: saml provider\n  community.aws.iam_saml_federation:\n      name: example2\n      saml_metadata_document: \"{{ item }}\"\n  with_file: /path/to/idp/metdata.xml\n# Removes iam saml identity provider\n- name: remove saml provider\n  community.aws.iam_saml_federation:\n      name: example3\n      state: absent\n"
  },
  "community.aws.iam_server_certificate": {
    "doc": {
      "description": "Allows for the management of server certificates.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cert": {
          "aliases": [],
          "description": "The path to, or content of the certificate body in PEM encoded format.\nIf the parameter is not a file, it is assumed to be content.\nPassing a file name is deprecated, and support will be dropped in version 4.0.0 of this collection.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cert_chain": {
          "aliases": [],
          "description": "The path to, or content of, the CA certificate chain in PEM encoded format.\nIf the parameter is not a file, it is assumed to be content.\nPassing a file name is deprecated, and support will be dropped in version 4.0.0 of this collection.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "dup_ok": {
          "aliases": [],
          "description": "By default the module will not upload a certificate that is already uploaded into AWS.\nIf I(dup_ok=True), it will upload the certificate as long as the name is unique.\nCurrently defaults to C(false), this will default to C(true) in release 4.0.0.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "key": {
          "aliases": [],
          "description": "The path to, or content of the private key in PEM encoded format. If the parameter is not a file, it is assumed to be content.\nPassing a file name is deprecated, and support will be dropped in version 4.0.0 of this collection.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of certificate to add, update or remove.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "new_name": {
          "aliases": [],
          "description": "When I(state=present), this will update the name of the cert.\nThe I(cert), I(key) and I(cert_chain) parameters will be ignored if this is defined.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "new_path": {
          "aliases": [],
          "description": "When I(state=present), this will update the path of the cert.\nThe I(cert), I(key) and I(cert_chain) parameters will be ignored if this is defined.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "path": {
          "aliases": [],
          "description": "When creating or updating, specify the desired path of the certificate.",
          "default": "/",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether to create (or update) or delete the certificate.\nIf I(new_path) or I(new_name) is defined, specifying present will attempt to make an update these.",
          "type": "str",
          "required": true,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "boto >= 2.49.0",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0",
        "python >= 3.6"
      ],
      "short_description": "Manage server certificates for use on ELBs and CloudFront",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Basic server certificate upload from local file\n  community.aws.iam_server_certificate:\n    name: very_ssl\n    state: present\n    cert: \"{{ lookup('file', 'path/to/cert') }}\"\n    key: \"{{ lookup('file', 'path/to/key') }}\"\n    cert_chain: \"{{ lookup('file', 'path/to/certchain') }}\"\n\n- name: Basic server certificate upload\n  community.aws.iam_server_certificate:\n    name: very_ssl\n    state: present\n    cert: path/to/cert\n    key: path/to/key\n    cert_chain: path/to/certchain\n\n- name: Server certificate upload using key string\n  community.aws.iam_server_certificate:\n    name: very_ssl\n    state: present\n    path: \"/a/cert/path/\"\n    cert: body_of_somecert\n    key: vault_body_of_privcertkey\n    cert_chain: body_of_myverytrustedchain\n\n- name: Basic rename of existing certificate\n  community.aws.iam_server_certificate:\n    name: very_ssl\n    new_name: new_very_ssl\n    state: present\n\n"
  },
  "community.aws.iam_server_certificate_facts": {
    "doc": {
      "description": "Retrieve the attributes of a server certificate.\nThis module was called C(iam_server_certificate_facts) before Ansible 2.9. The usage did not change.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the server certificate you are retrieving attributes for.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Retrieve the information of a server certificate",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Retrieve server certificate\n  community.aws.iam_server_certificate_info:\n    name: production-cert\n  register: server_cert\n\n- name: Fail if the server certificate name was not found\n  community.aws.iam_server_certificate_info:\n    name: production-cert\n  register: server_cert\n  failed_when: \"{{ server_cert.results | length == 0 }}\"\n"
  },
  "community.aws.iam_server_certificate_info": {
    "doc": {
      "description": "Retrieve the attributes of a server certificate.\nThis module was called C(iam_server_certificate_facts) before Ansible 2.9. The usage did not change.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the server certificate you are retrieving attributes for.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Retrieve the information of a server certificate",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Retrieve server certificate\n  community.aws.iam_server_certificate_info:\n    name: production-cert\n  register: server_cert\n\n- name: Fail if the server certificate name was not found\n  community.aws.iam_server_certificate_info:\n    name: production-cert\n  register: server_cert\n  failed_when: \"{{ server_cert.results | length == 0 }}\"\n"
  },
  "community.aws.iam_user": {
    "doc": {
      "description": "Manage AWS IAM users.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "managed_policies": {
          "aliases": [
            "managed_policy"
          ],
          "description": "A list of managed policy ARNs or friendly names to attach to the user.\nTo embed an inline policy, use M(community.aws.iam_policy).",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the user to create.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "purge_policies": {
          "aliases": [
            "purge_policy",
            "purge_managed_policies"
          ],
          "description": "When I(purge_policies=true) any managed policies not listed in I(managed_policies) will be detatched.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "purge_tags": {
          "aliases": [],
          "description": "Remove tags not listed in I(tags) when tags is specified.",
          "default": "True",
          "type": "bool",
          "required": false,
          "version_added": "2.1.0",
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Create or remove the IAM user.",
          "type": "str",
          "required": true,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Tag dict to apply to the user.",
          "type": "dict",
          "required": false,
          "version_added": "2.1.0",
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Manage AWS IAM users",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n# Note: This module does not allow management of groups that users belong to.\n#       Groups should manage their membership directly using `iam_group`,\n#       as users belong to them.\n\n- name: Create a user\n  community.aws.iam_user:\n    name: testuser1\n    state: present\n\n- name: Create a user and attach a managed policy using its ARN\n  community.aws.iam_user:\n    name: testuser1\n    managed_policies:\n      - arn:aws:iam::aws:policy/AmazonSNSFullAccess\n    state: present\n\n- name: Remove all managed policies from an existing user with an empty list\n  community.aws.iam_user:\n    name: testuser1\n    state: present\n    purge_policies: true\n\n- name: Create user with tags\n  community.aws.iam_user:\n    name: testuser1\n    state: present\n    tags:\n      Env: Prod\n\n- name: Delete the user\n  community.aws.iam_user:\n    name: testuser1\n    state: absent\n\n"
  },
  "community.aws.iam_user_info": {
    "doc": {
      "description": "This module can be used to gather IAM user(s) facts in AWS.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "group": {
          "aliases": [],
          "description": "The group name name of the IAM user to look for. Mutually exclusive with C(path).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the IAM user to look for.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "path": {
          "aliases": [],
          "description": "The path to the IAM user. Mutually exclusive with C(group).\nIf specified, then would get all user names whose path starts with user provided value.",
          "default": "/",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Gather IAM user(s) facts in AWS",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n# Gather facts about \"test\" user.\n- name: Get IAM user facts\n  community.aws.iam_user_info:\n    name: \"test\"\n\n# Gather facts about all users in the \"dev\" group.\n- name: Get IAM user facts\n  community.aws.iam_user_info:\n    group: \"dev\"\n\n# Gather facts about all users with \"/division_abc/subdivision_xyz/\" path.\n- name: Get IAM user facts\n  community.aws.iam_user_info:\n    path: \"/division_abc/subdivision_xyz/\"\n"
  },
  "community.aws.kinesis_stream": {
    "doc": {
      "description": "Create or Delete a Kinesis Stream.\nUpdate the retention period of a Kinesis Stream.\nUpdate Tags on a Kinesis Stream.\nEnable/disable server side encryption on a Kinesis Stream.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "encryption_state": {
          "aliases": [],
          "description": "Enable or Disable encryption on the Kinesis Stream.",
          "type": "str",
          "required": false,
          "choices": [
            "enabled",
            "disabled"
          ],
          "suboptions": {}
        },
        "encryption_type": {
          "aliases": [],
          "description": "The type of encryption.\nDefaults to C(KMS)",
          "type": "str",
          "required": false,
          "choices": [
            "KMS",
            "NONE"
          ],
          "suboptions": {}
        },
        "key_id": {
          "aliases": [],
          "description": "The GUID or alias for the KMS key.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the Kinesis Stream you are managing.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "retention_period": {
          "aliases": [],
          "description": "The length of time (in hours) data records are accessible after they are added to the stream.\nThe default retention period is 24 hours and can not be less than 24 hours.\nThe maximum retention period is 168 hours.\nThe retention period can be modified during any point in time.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "shards": {
          "aliases": [],
          "description": "The number of shards you want to have with this stream.\nThis is required when I(state=present)",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Create or Delete the Kinesis Stream.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "tags": {
          "aliases": [
            "resource_tags"
          ],
          "description": "A dictionary of resource tags of the form: C({ tag1: value1, tag2: value2 }).",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "wait": {
          "aliases": [],
          "description": "Wait for operation to complete before returning.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "wait_timeout": {
          "aliases": [],
          "description": "How many seconds to wait for an operation to complete before timing out.",
          "default": "300",
          "type": "int",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Manage a Kinesis Stream.",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n# Basic creation example:\n- name: Set up Kinesis Stream with 10 shards and wait for the stream to become ACTIVE\n  community.aws.kinesis_stream:\n    name: test-stream\n    shards: 10\n    wait: yes\n    wait_timeout: 600\n  register: test_stream\n\n# Basic creation example with tags:\n- name: Set up Kinesis Stream with 10 shards, tag the environment, and wait for the stream to become ACTIVE\n  community.aws.kinesis_stream:\n    name: test-stream\n    shards: 10\n    tags:\n      Env: development\n    wait: yes\n    wait_timeout: 600\n  register: test_stream\n\n# Basic creation example with tags and increase the retention period from the default 24 hours to 48 hours:\n- name: Set up Kinesis Stream with 10 shards, tag the environment, increase the retention period and wait for the stream to become ACTIVE\n  community.aws.kinesis_stream:\n    name: test-stream\n    retention_period: 48\n    shards: 10\n    tags:\n      Env: development\n    wait: yes\n    wait_timeout: 600\n  register: test_stream\n\n# Basic delete example:\n- name: Delete Kinesis Stream test-stream and wait for it to finish deleting.\n  community.aws.kinesis_stream:\n    name: test-stream\n    state: absent\n    wait: yes\n    wait_timeout: 600\n  register: test_stream\n\n# Basic enable encryption example:\n- name: Encrypt Kinesis Stream test-stream.\n  community.aws.kinesis_stream:\n    name: test-stream\n    state: present\n    shards: 1\n    encryption_state: enabled\n    encryption_type: KMS\n    key_id: alias/aws/kinesis\n    wait: yes\n    wait_timeout: 600\n  register: test_stream\n\n# Basic disable encryption example:\n- name: Encrypt Kinesis Stream test-stream.\n  community.aws.kinesis_stream:\n    name: test-stream\n    state: present\n    shards: 1\n    encryption_state: disabled\n    encryption_type: KMS\n    key_id: alias/aws/kinesis\n    wait: yes\n    wait_timeout: 600\n  register: test_stream\n"
  },
  "community.aws.lambda": {
    "doc": {
      "description": "Allows for the management of Lambda functions.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "dead_letter_arn": {
          "aliases": [],
          "description": "The parent object that contains the target Amazon Resource Name (ARN) of an Amazon SQS queue or Amazon SNS topic.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "A short, user-defined function description. Lambda does not use this value. Assign a meaningful description as you see fit.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "environment_variables": {
          "aliases": [],
          "description": "A dictionary of environment variables the Lambda function is given.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "handler": {
          "aliases": [],
          "description": "The function within your code that Lambda calls to begin execution.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "memory_size": {
          "aliases": [],
          "description": "The amount of memory, in MB, your Lambda function is given.",
          "default": "128",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name you want to assign to the function you are uploading. Cannot be changed.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "role": {
          "aliases": [],
          "description": "The Amazon Resource Name (ARN) of the IAM role that Lambda assumes when it executes your function to access any other Amazon Web Services (AWS) resources. You may use the bare ARN if the role belongs to the same AWS account.\nRequired when I(state=present).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "runtime": {
          "aliases": [],
          "description": "The runtime environment for the Lambda function you are uploading.\nRequired when creating a function. Uses parameters as described in boto3 docs.\nRequired when I(state=present).\nFor supported list of runtimes, see U(https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "s3_bucket": {
          "aliases": [],
          "description": "Amazon S3 bucket name where the .zip file containing your deployment package is stored.\nIf I(state=present) then either I(zip_file) or I(s3_bucket) must be present.\nI(s3_bucket) and I(s3_key) are required together.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "s3_key": {
          "aliases": [],
          "description": "The Amazon S3 object (the deployment package) key name you want to upload.\nI(s3_bucket) and I(s3_key) are required together.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "s3_object_version": {
          "aliases": [],
          "description": "The Amazon S3 object (the deployment package) version you want to upload.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Create or delete Lambda function.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Tag dict to apply to the function.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "timeout": {
          "aliases": [],
          "description": "The function maximum execution time in seconds after which Lambda should terminate the function.",
          "default": "3",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "tracing_mode": {
          "aliases": [],
          "description": "Set mode to 'Active' to sample and trace incoming requests with AWS X-Ray. Turned off (set to 'PassThrough') by default.",
          "type": "str",
          "required": false,
          "choices": [
            "Active",
            "PassThrough"
          ],
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "vpc_security_group_ids": {
          "aliases": [],
          "description": "List of VPC security group IDs to associate with the Lambda function.\nRequired when I(vpc_subnet_ids) is used.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "vpc_subnet_ids": {
          "aliases": [],
          "description": "List of subnet IDs to run Lambda function in.\nUse this option if you need to access resources in your VPC. Leave empty if you don't want to run the function in a VPC.\nIf set, I(vpc_security_group_ids) must also be set.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "zip_file": {
          "aliases": [
            "src"
          ],
          "description": "A .zip file containing your deployment package\nIf I(state=present) then either I(zip_file) or I(s3_bucket) must be present.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Manage AWS Lambda functions",
      "version_added": "1.0.0"
    },
    "examples": "\n# Create Lambda functions\n- name: looped creation\n  community.aws.lambda:\n    name: '{{ item.name }}'\n    state: present\n    zip_file: '{{ item.zip_file }}'\n    runtime: 'python2.7'\n    role: 'arn:aws:iam::987654321012:role/lambda_basic_execution'\n    handler: 'hello_python.my_handler'\n    vpc_subnet_ids:\n    - subnet-123abcde\n    - subnet-edcba321\n    vpc_security_group_ids:\n    - sg-123abcde\n    - sg-edcba321\n    environment_variables: '{{ item.env_vars }}'\n    tags:\n      key1: 'value1'\n  loop:\n    - name: HelloWorld\n      zip_file: hello-code.zip\n      env_vars:\n        key1: \"first\"\n        key2: \"second\"\n    - name: ByeBye\n      zip_file: bye-code.zip\n      env_vars:\n        key1: \"1\"\n        key2: \"2\"\n\n# To remove previously added tags pass an empty dict\n- name: remove tags\n  community.aws.lambda:\n    name: 'Lambda function'\n    state: present\n    zip_file: 'code.zip'\n    runtime: 'python2.7'\n    role: 'arn:aws:iam::987654321012:role/lambda_basic_execution'\n    handler: 'hello_python.my_handler'\n    tags: {}\n\n# Basic Lambda function deletion\n- name: Delete Lambda functions HelloWorld and ByeBye\n  community.aws.lambda:\n    name: '{{ item }}'\n    state: absent\n  loop:\n    - HelloWorld\n    - ByeBye\n"
  },
  "community.aws.lambda_alias": {
    "doc": {
      "description": "This module allows the management of AWS Lambda functions aliases via the Ansible framework.  It is idempotent and supports \"Check\" mode.    Use module M(community.aws.lambda) to manage the lambda function itself and M(community.aws.lambda_event) to manage event source mappings.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "A short, user-defined function alias description.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "function_name": {
          "aliases": [],
          "description": "The name of the function alias.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "function_version": {
          "aliases": [
            "version"
          ],
          "description": "Version associated with the Lambda function alias. A value of 0 (or omitted parameter) sets the alias to the $LATEST version.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [
            "alias_name"
          ],
          "description": "Name of the function alias.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Describes the desired state.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Creates, updates or deletes AWS Lambda function aliases",
      "version_added": "1.0.0"
    },
    "examples": "\n---\n# Simple example to create a lambda function and publish a version\n- hosts: localhost\n  gather_facts: no\n  vars:\n    state: present\n    project_folder: /path/to/deployment/package\n    deployment_package: lambda.zip\n    account: 123456789012\n    production_version: 5\n  tasks:\n  - name: AWS Lambda Function\n    lambda:\n      state: \"{{ state | default('present') }}\"\n      name: myLambdaFunction\n      publish: True\n      description: lambda function description\n      code_s3_bucket: package-bucket\n      code_s3_key: \"lambda/{{ deployment_package }}\"\n      local_path: \"{{ project_folder }}/{{ deployment_package }}\"\n      runtime: python2.7\n      timeout: 5\n      handler: lambda.handler\n      memory_size: 128\n      role: \"arn:aws:iam::{{ account }}:role/API2LambdaExecRole\"\n\n  - name: Get information\n    lambda_info:\n      name: myLambdaFunction\n    register: lambda_info\n  - name: show results\n    ansible.builtin.debug:\n      msg: \"{{ lambda_info['lambda_facts'] }}\"\n\n# The following will set the Dev alias to the latest version ($LATEST) since version is omitted (or = 0)\n  - name: \"alias 'Dev' for function {{ lambda_info.lambda_facts.FunctionName }} \"\n    community.aws.lambda_alias:\n      state: \"{{ state | default('present') }}\"\n      function_name: \"{{ lambda_info.lambda_facts.FunctionName }}\"\n      name: Dev\n      description: Development is $LATEST version\n\n# The QA alias will only be created when a new version is published (i.e. not = '$LATEST')\n  - name: \"alias 'QA' for function {{ lambda_info.lambda_facts.FunctionName }} \"\n    community.aws.lambda_alias:\n      state: \"{{ state | default('present') }}\"\n      function_name: \"{{ lambda_info.lambda_facts.FunctionName }}\"\n      name: QA\n      version: \"{{ lambda_info.lambda_facts.Version }}\"\n      description: \"QA is version {{ lambda_info.lambda_facts.Version }}\"\n    when: lambda_info.lambda_facts.Version != \"$LATEST\"\n\n# The Prod alias will have a fixed version based on a variable\n  - name: \"alias 'Prod' for function {{ lambda_info.lambda_facts.FunctionName }} \"\n    community.aws.lambda_alias:\n      state: \"{{ state | default('present') }}\"\n      function_name: \"{{ lambda_info.lambda_facts.FunctionName }}\"\n      name: Prod\n      version: \"{{ production_version }}\"\n      description: \"Production is version {{ production_version }}\"\n"
  },
  "community.aws.lambda_event": {
    "doc": {
      "description": "This module allows the management of AWS Lambda function event source mappings such as DynamoDB and Kinesis stream events via the Ansible framework. These event source mappings are relevant only in the AWS Lambda pull model, where AWS Lambda invokes the function. It is idempotent and supports \"Check\" mode.  Use module M(community.aws.lambda) to manage the lambda function itself and M(community.aws.lambda_alias) to manage function aliases.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "alias": {
          "aliases": [],
          "description": "Name of the function alias.\nMutually exclusive with I(version).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "event_source": {
          "aliases": [],
          "description": "Source of the event that triggers the lambda function.\nFor DynamoDB and Kinesis events, select C(stream)\nFor SQS queues, select C(sqs)",
          "default": "stream",
          "type": "str",
          "required": false,
          "choices": [
            "stream",
            "sqs"
          ],
          "suboptions": {}
        },
        "lambda_function_arn": {
          "aliases": [
            "function_name",
            "function_arn"
          ],
          "description": "The name or ARN of the lambda function.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "source_params": {
          "aliases": [],
          "description": "Sub-parameters required for event source.",
          "type": "dict",
          "required": true,
          "suboptions": {
            "batch_size": {
              "aliases": [],
              "description": "The largest number of records that AWS Lambda will retrieve from your event source at the time of invoking your function.",
              "default": "100",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "enabled": {
              "aliases": [],
              "description": "Indicates whether AWS Lambda should begin polling or readin from the event source.",
              "default": "true.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "source_arn": {
              "aliases": [],
              "description": "The Amazon Resource Name (ARN) of the SQS queue, Kinesis stream or DynamoDB stream that is the event source.",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "starting_position": {
              "aliases": [],
              "description": "The position in the stream where AWS Lambda should start reading.\nRequired when I(event_source=stream).",
              "type": "str",
              "required": false,
              "choices": [
                "TRIM_HORIZON",
                "LATEST"
              ],
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "Describes the desired state.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "version": {
          "aliases": [],
          "description": "Version of the Lambda function.\nMutually exclusive with I(alias).",
          "type": "int",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Creates, updates or deletes AWS Lambda function event mappings",
      "version_added": "1.0.0"
    },
    "examples": "\n# Example that creates a lambda event notification for a DynamoDB stream\n- name: DynamoDB stream event mapping\n  community.aws.lambda_event:\n    state: present\n    event_source: stream\n    function_name: \"{{ function_name }}\"\n    alias: Dev\n    source_params:\n    source_arn: arn:aws:dynamodb:us-east-1:123456789012:table/tableName/stream/2016-03-19T19:51:37.457\n    enabled: True\n    batch_size: 100\n    starting_position: TRIM_HORIZON\n  register: event\n\n- name: Show source event\n  ansible.builtin.debug:\n    var: event.lambda_stream_events\n"
  },
  "community.aws.lambda_facts": {
    "doc": {
      "description": "Gathers various details related to Lambda functions, including aliases, versions and event source mappings. Use module M(community.aws.lambda) to manage the lambda function itself, M(community.aws.lambda_alias) to manage function aliases and M(community.aws.lambda_event) to manage lambda event source mappings.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "event_source_arn": {
          "aliases": [],
          "description": "For query type 'mappings', this is the Amazon Resource Name (ARN) of the Amazon Kinesis or DynamoDB stream.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "function_name": {
          "aliases": [
            "function",
            "name"
          ],
          "description": "The name of the lambda function for which facts are requested.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "query": {
          "aliases": [],
          "description": "Specifies the resource type for which to gather facts.  Leave blank to retrieve all facts.",
          "default": "all",
          "type": "str",
          "required": false,
          "choices": [
            "aliases",
            "all",
            "config",
            "mappings",
            "policy",
            "versions"
          ],
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Gathers AWS Lambda function details as Ansible facts",
      "version_added": "1.0.0"
    },
    "examples": "\n---\n# Simple example of listing all info for a function\n- name: List all for a specific function\n  community.aws.lambda_facts:\n    query: all\n    function_name: myFunction\n  register: my_function_details\n\n# List all versions of a function\n- name: List function versions\n  community.aws.lambda_facts:\n    query: versions\n    function_name: myFunction\n  register: my_function_versions\n\n# List all lambda function versions\n- name: List all function\n  community.aws.lambda_facts:\n    query: all\n    max_items: 20\n- name: show Lambda facts\n  ansible.builtin.debug:\n    var: lambda_facts\n"
  },
  "community.aws.lambda_info": {
    "doc": {
      "description": "Gathers various details related to Lambda functions, including aliases, versions and event source mappings.\nUse module M(community.aws.lambda) to manage the lambda function itself, M(community.aws.lambda_alias) to manage function aliases and M(community.aws.lambda_event) to manage lambda event source mappings.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "event_source_arn": {
          "aliases": [],
          "description": "When I(query=mappings), this is the Amazon Resource Name (ARN) of the Amazon Kinesis or DynamoDB stream.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "function_name": {
          "aliases": [
            "function",
            "name"
          ],
          "description": "The name of the lambda function for which information is requested.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "query": {
          "aliases": [],
          "description": "Specifies the resource type for which to gather information.  Leave blank to retrieve all information.",
          "default": "all",
          "type": "str",
          "required": false,
          "choices": [
            "aliases",
            "all",
            "config",
            "mappings",
            "policy",
            "versions",
            "tags"
          ],
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Gathers AWS Lambda function details",
      "version_added": "1.0.0"
    },
    "examples": "\n---\n# Simple example of listing all info for a function\n- name: List all for a specific function\n  community.aws.lambda_info:\n    query: all\n    function_name: myFunction\n  register: my_function_details\n# List all versions of a function\n- name: List function versions\n  community.aws.lambda_info:\n    query: versions\n    function_name: myFunction\n  register: my_function_versions\n# List all lambda function versions\n- name: List all function\n  community.aws.lambda_info:\n    query: all\n  register: output\n- name: show Lambda information\n  ansible.builtin.debug:\n    msg: \"{{ output['function'] }}\"\n"
  },
  "community.aws.lambda_policy": {
    "doc": {
      "description": "This module allows the management of AWS Lambda policy statements.\nIt is idempotent and supports \"Check\" mode.\nUse module M(community.aws.lambda) to manage the lambda function itself, M(community.aws.lambda_alias) to manage function aliases, M(community.aws.lambda_event) to manage event source mappings such as Kinesis streams, M(community.aws.execute_lambda) to execute a lambda function and M(community.aws.lambda_info) to gather information relating to one or more lambda functions.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "action": {
          "aliases": [],
          "description": "The AWS Lambda action you want to allow in this statement. Each Lambda action is a string starting with lambda: followed by the API name (see Operations ). For example, C(lambda:CreateFunction) . You can use wildcard (C(lambda:*)) to grant permission for all AWS Lambda actions.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "alias": {
          "aliases": [],
          "description": "Name of the function alias. Mutually exclusive with I(version).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "event_source_token": {
          "aliases": [],
          "description": "Token string representing source ARN or account. Mutually exclusive with I(source_arn) or I(source_account).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "function_name": {
          "aliases": [
            "lambda_function_arn",
            "function_arn"
          ],
          "description": "Name of the Lambda function whose resource policy you are updating by adding a new permission.\nYou can specify a function name (for example, Thumbnail ) or you can specify Amazon Resource Name (ARN) of the\nfunction (for example, C(arn:aws:lambda:us-west-2:account-id:function:ThumbNail) ). AWS Lambda also allows you to\nspecify partial ARN (for example, C(account-id:Thumbnail) ). Note that the length constraint applies only to the\nARN. If you specify only the function name, it is limited to 64 character in length.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "principal": {
          "aliases": [],
          "description": "The principal who is getting this permission. It can be Amazon S3 service Principal (s3.amazonaws.com ) if you want Amazon S3 to invoke the function, an AWS account ID if you are granting cross-account permission, or any valid AWS service principal such as sns.amazonaws.com . For example, you might want to allow a custom application in another AWS account to push events to AWS Lambda by invoking your function.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "source_account": {
          "aliases": [],
          "description": "The AWS account ID (without a hyphen) of the source owner. For example, if I(source_arn) identifies a bucket, then this is the bucket owner's account ID. You can use this additional condition to ensure the bucket you specify is owned by a specific account (it is possible the bucket owner deleted the bucket and some other AWS account created the bucket). You can also use this condition to specify all sources (that is, you don't specify the I(source_arn) ) owned by a specific account.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "source_arn": {
          "aliases": [],
          "description": "This is optional; however, when granting Amazon S3 permission to invoke your function, you should specify this field with the bucket Amazon Resource Name (ARN) as its value. This ensures that only events generated from the specified bucket can invoke the function.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Describes the desired state.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "statement_id": {
          "aliases": [
            "sid"
          ],
          "description": "A unique statement identifier.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "version": {
          "aliases": [],
          "description": "Version of the Lambda function. Mutually exclusive with I(alias).",
          "type": "int",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Creates, updates or deletes AWS Lambda policy statements.",
      "version_added": "1.0.0"
    },
    "examples": "\n\n- name: Lambda S3 event notification\n  community.aws.lambda_policy:\n    state: present\n    function_name: functionName\n    alias: Dev\n    statement_id: lambda-s3-myBucket-create-data-log\n    action: lambda:InvokeFunction\n    principal: s3.amazonaws.com\n    source_arn: arn:aws:s3:eu-central-1:123456789012:bucketName\n    source_account: 123456789012\n  register: lambda_policy_action\n\n- name: show results\n  ansible.builtin.debug:\n    var: lambda_policy_action\n"
  },
  "community.aws.lightsail": {
    "doc": {
      "description": "Manage instances in AWS Lightsail.\nInstance tagging is not yet supported in this module.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "blueprint_id": {
          "aliases": [],
          "description": "ID of the instance blueprint image.\nRequired when I(state=present)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "bundle_id": {
          "aliases": [],
          "description": "Bundle of specification info for the instance.\nRequired when I(state=present).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "key_pair_name": {
          "aliases": [],
          "description": "Name of the key pair to use with the instance.\nIf I(state=present) and a key_pair_name is not provided, the default keypair from the region will be used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the instance.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Indicate desired state of the target.\nI(rebooted) and I(restarted) are aliases.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent",
            "running",
            "restarted",
            "rebooted",
            "stopped"
          ],
          "suboptions": {}
        },
        "user_data": {
          "aliases": [],
          "description": "Launch script that can configure the instance with additional data.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "wait": {
          "aliases": [],
          "description": "Wait for the instance to be in state 'running' before returning.\nIf I(wait=false) an ip_address may not be returned.\nHas no effect when I(state=rebooted) or I(state=absent).",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "wait_timeout": {
          "aliases": [],
          "description": "How long before I(wait) gives up, in seconds.",
          "default": "300",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "zone": {
          "aliases": [],
          "description": "AWS availability zone in which to launch the instance.\nRequired when I(state=present)",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Manage instances in AWS Lightsail",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create a new Lightsail instance\n  community.aws.lightsail:\n    state: present\n    name: my_instance\n    region: us-east-1\n    zone: us-east-1a\n    blueprint_id: ubuntu_16_04\n    bundle_id: nano_1_0\n    key_pair_name: id_rsa\n    user_data: \" echo 'hello world' > /home/ubuntu/test.txt\"\n  register: my_instance\n\n- name: Delete an instance\n  community.aws.lightsail:\n    state: absent\n    region: us-east-1\n    name: my_instance\n\n"
  },
  "community.aws.rds": {
    "doc": {
      "description": "Creates, deletes, or modifies rds resources.\nWhen creating an instance it can be either a new instance or a read-only replica of an existing instance.\nThe 'promote' command requires boto >= 2.18.0. Certain features such as tags rely on boto.rds2 (boto >= 2.26.0).\nPlease use the boto3 based M(community.aws.rds_instance) instead.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "apply_immediately": {
          "aliases": [],
          "description": "When I(apply_immediately=true), the modifications will be applied as soon as possible rather than waiting for the next preferred maintenance window.\nUsed only when I(command=modify).",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "backup_retention": {
          "aliases": [],
          "description": "Number of days backups are retained.\nSet to 0 to disable backups.\nDefault is 1 day.\nValid range: 0-35.\nUsed only when I(command=create) or I(command=modify).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "backup_window": {
          "aliases": [],
          "description": "Backup window in format of C(hh24:mi-hh24:mi). (Example: C(18:00-20:30))\nTimes are specified in UTC.\nIf not specified then a random backup window is assigned.\nUsed only when command=create or command=modify.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "character_set_name": {
          "aliases": [],
          "description": "Associate the DB instance with a specified character set.\nUsed with I(command=create).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "command": {
          "aliases": [],
          "description": "Specifies the action to take. The 'reboot' option is available starting at version 2.0.",
          "type": "str",
          "required": true,
          "choices": [
            "create",
            "replicate",
            "delete",
            "facts",
            "modify",
            "promote",
            "snapshot",
            "reboot",
            "restore"
          ],
          "suboptions": {}
        },
        "db_engine": {
          "aliases": [],
          "description": "The type of database.\nUsed only when I(command=create).\nmariadb was added in version 2.2.",
          "type": "str",
          "required": false,
          "choices": [
            "mariadb",
            "MySQL",
            "oracle-se1",
            "oracle-se2",
            "oracle-se",
            "oracle-ee",
            "sqlserver-ee",
            "sqlserver-se",
            "sqlserver-ex",
            "sqlserver-web",
            "postgres",
            "aurora"
          ],
          "suboptions": {}
        },
        "db_name": {
          "aliases": [],
          "description": "Name of a database to create within the instance.\nIf not specified then no database is created.\nUsed only when I(command=create).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "engine_version": {
          "aliases": [],
          "description": "Version number of the database engine to use.\nIf not specified then the current Amazon RDS default engine version is used\nUsed only when I(command=create).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "force_failover": {
          "aliases": [],
          "description": "If enabled, the reboot is done using a MultiAZ failover.\nUsed only when I(command=reboot).",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "instance_name": {
          "aliases": [],
          "description": "Database instance identifier.\nRequired except when using I(command=facts) or I(command=delete) on just a snapshot.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "instance_type": {
          "aliases": [
            "type"
          ],
          "description": "The instance type of the database.\nIf not specified then the replica inherits the same instance type as the source instance.\nRequired when I(command=create).\nOptional when I(command=replicate), I(command=modify) or I(command=restore).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "iops": {
          "aliases": [],
          "description": "Specifies the number of IOPS for the instance.\nUsed only when I(command=create) or I(command=modify).\nMust be an integer greater than 1000.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "license_model": {
          "aliases": [],
          "description": "The license model for this DB instance.\nUsed only when I(command=create) or I(command=restore).",
          "type": "str",
          "required": false,
          "choices": [
            "license-included",
            "bring-your-own-license",
            "general-public-license",
            "postgresql-license"
          ],
          "suboptions": {}
        },
        "maint_window": {
          "aliases": [],
          "description": "Maintenance window in format of C(ddd:hh24:mi-ddd:hh24:mi).  (Example: C(Mon:22:00-Mon:23:15))\nTimes are specified in UTC.\nIf not specified then a random maintenance window is assigned.\nUsed only when I(command=create) or I(command=modify).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "multi_zone": {
          "aliases": [],
          "description": "Specifies if this is a Multi-availability-zone deployment.\nCan not be used in conjunction with I(zone) parameter.\nUsed only when I(command=create) or I(command=modify).",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "new_instance_name": {
          "aliases": [],
          "description": "Name to rename an instance to.\nUsed only when I(command=modify).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "option_group": {
          "aliases": [],
          "description": "The name of the option group to use.\nIf not specified then the default option group is used.\nUsed only when I(command=create).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "parameter_group": {
          "aliases": [],
          "description": "Name of the DB parameter group to associate with this instance.\nIf omitted then the RDS default DBParameterGroup will be used.\nUsed only when I(command=create) or I(command=modify).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Password for the master database username.\nUsed only when I(command=create) or I(command=modify).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "port": {
          "aliases": [],
          "description": "Port number that the DB instance uses for connections.\nUsed only when I(command=create) or I(command=replicate).\nDefaults to the standard ports for each I(db_engine): C(3306) for MySQL and MariaDB, C(1521) for Oracle C(1433) for SQL Server, C(5432) for PostgreSQL.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "publicly_accessible": {
          "aliases": [],
          "description": "Explicitly set whether the resource should be publicly accessible or not.\nUsed with I(command=create), I(command=replicate).\nRequires boto >= 2.26.0",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_groups": {
          "aliases": [],
          "description": "Comma separated list of one or more security groups.\nUsed only when I(command=create) or I(command=modify).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "size": {
          "aliases": [],
          "description": "Size in gigabytes of the initial storage for the DB instance.\nUsed only when I(command=create) or I(command=modify).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "snapshot": {
          "aliases": [],
          "description": "Name of snapshot to take.\nWhen I(command=delete), if no I(snapshot) name is provided then no snapshot is taken.\nWhen I(command=delete), if no I(instance_name) is provided the snapshot is deleted.\nUsed with I(command=facts), I(command=delete) or I(command=snapshot).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "source_instance": {
          "aliases": [],
          "description": "Name of the database to replicate.\nUsed only when I(command=replicate).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subnet": {
          "aliases": [],
          "description": "VPC subnet group.\nIf specified then a VPC instance is created.\nUsed only when I(command=create).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "tags dict to apply to a resource.\nUsed with I(command=create), I(command=replicate), I(command=restore).\nRequires boto >= 2.26.0",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "upgrade": {
          "aliases": [],
          "description": "Indicates that minor version upgrades should be applied automatically.\nUsed only when I(command=create) or I(command=modify) or I(command=restore) or I(command=replicate).",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "username": {
          "aliases": [],
          "description": "Master database username.\nUsed only when I(command=create).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "vpc_security_groups": {
          "aliases": [],
          "description": "Comma separated list of one or more vpc security group ids.\nAlso requires I(subnet) to be specified.\nUsed only when I(command=create) or I(command=modify).",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "wait": {
          "aliases": [],
          "description": "When I(command=create), replicate, modify or restore then wait for the database to enter the 'available' state.\nWhen I(command=delete), wait for the database to be terminated.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "wait_timeout": {
          "aliases": [],
          "description": "How long before wait gives up, in seconds.\nUsed when I(wait=true).",
          "default": "300",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "zone": {
          "aliases": [
            "aws_zone",
            "ec2_zone"
          ],
          "description": "availability zone in which to launch the instance.\nUsed only when I(command=create), I(command=replicate) or I(command=restore).\nCan not be used in conjunction with I(multi_zone) parameter.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "boto >= 2.49.0",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0",
        "python >= 3.6"
      ],
      "short_description": "create, delete, or modify Amazon rds instances, rds snapshots, and related facts",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Basic mysql provisioning example\n  community.aws.rds:\n    command: create\n    instance_name: new-database\n    db_engine: MySQL\n    size: 10\n    instance_type: db.m1.small\n    username: mysql_admin\n    password: 1nsecure\n    tags:\n      Environment: testing\n      Application: cms\n\n- name: Create a read-only replica and wait for it to become available\n  community.aws.rds:\n    command: replicate\n    instance_name: new-database-replica\n    source_instance: new_database\n    wait: yes\n    wait_timeout: 600\n\n- name: Delete an instance, but create a snapshot before doing so\n  community.aws.rds:\n    command: delete\n    instance_name: new-database\n    snapshot: new_database_snapshot\n\n- name: Get facts about an instance\n  community.aws.rds:\n    command: facts\n    instance_name: new-database\n  register: new_database_facts\n\n- name: Rename an instance and wait for the change to take effect\n  community.aws.rds:\n    command: modify\n    instance_name: new-database\n    new_instance_name: renamed-database\n    wait: yes\n\n- name: Reboot an instance and wait for it to become available again\n  community.aws.rds:\n    command: reboot\n    instance_name: database\n    wait: yes\n\n# Restore a Postgres db instance from a snapshot, wait for it to become available again, and\n#  then modify it to add your security group. Also, display the new endpoint.\n#  Note that the \"publicly_accessible\" option is allowed here just as it is in the AWS CLI\n- community.aws.rds:\n    command: restore\n    snapshot: mypostgres-snapshot\n    instance_name: MyNewInstanceName\n    region: us-west-2\n    zone: us-west-2b\n    subnet: default-vpc-xx441xxx\n    publicly_accessible: yes\n    wait: yes\n    wait_timeout: 600\n    tags:\n        Name: pg1_test_name_tag\n  register: rds\n\n- community.aws.rds:\n    command: modify\n    instance_name: MyNewInstanceName\n    region: us-west-2\n    vpc_security_groups: sg-xxx945xx\n\n- ansible.builtin.debug:\n    msg: \"The new db endpoint is {{ rds.instance.endpoint }}\"\n"
  },
  "community.aws.rds_instance": {
    "doc": {
      "description": "Create, modify, and delete RDS instances.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "allocated_storage": {
          "aliases": [],
          "description": "The amount of storage (in gibibytes) to allocate for the DB instance.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "allow_major_version_upgrade": {
          "aliases": [],
          "description": "Whether to allow major version upgrades.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "apply_immediately": {
          "aliases": [],
          "description": "A value that specifies whether modifying a cluster with I(new_db_instance_identifier) and I(master_user_password) should be applied as soon as possible, regardless of the I(preferred_maintenance_window) setting. If false, changes are applied during the next maintenance window.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auto_minor_version_upgrade": {
          "aliases": [],
          "description": "Whether minor version upgrades are applied automatically to the DB instance during the maintenance window.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "availability_zone": {
          "aliases": [
            "az",
            "zone"
          ],
          "description": "A list of EC2 Availability Zones that instances in the DB cluster can be created in. May be used when creating a cluster or when restoring from S3 or a snapshot. Mutually exclusive with I(multi_az).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "backup_retention_period": {
          "aliases": [],
          "description": "The number of days for which automated backups are retained.\nWhen set to C(0), automated backups will be disabled. (Not applicable if the DB instance is a source to read replicas)\nMay be used when creating a new cluster, when restoring from S3, or when modifying a cluster.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "ca_certificate_identifier": {
          "aliases": [],
          "description": "The identifier of the CA certificate for the DB instance.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "character_set_name": {
          "aliases": [],
          "description": "The character set to associate with the DB cluster.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "copy_tags_to_snapshot": {
          "aliases": [],
          "description": "Whether or not to copy all tags from the DB instance to snapshots of the instance. When initially creating a DB instance the RDS API defaults this to false if unspecified.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "creation_source": {
          "aliases": [],
          "description": "Which source to use if restoring from a template (an existing instance, S3 bucket, or snapshot).",
          "type": "str",
          "required": false,
          "choices": [
            "snapshot",
            "s3",
            "instance"
          ],
          "suboptions": {}
        },
        "db_cluster_identifier": {
          "aliases": [
            "cluster_id"
          ],
          "description": "The DB cluster (lowercase) identifier to add the aurora DB instance to. The identifier must contain from 1 to 63 letters, numbers, or hyphens and the first character must be a letter and may not end in a hyphen or contain consecutive hyphens.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "db_instance_class": {
          "aliases": [
            "class",
            "instance_type"
          ],
          "description": "The compute and memory capacity of the DB instance, for example db.t2.micro.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "db_instance_identifier": {
          "aliases": [
            "instance_id",
            "id"
          ],
          "description": "The DB instance (lowercase) identifier. The identifier must contain from 1 to 63 letters, numbers, or hyphens and the first character must be a letter and may not end in a hyphen or contain consecutive hyphens.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "db_name": {
          "aliases": [],
          "description": "The name for your database. If a name is not provided Amazon RDS will not create a database.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "db_parameter_group_name": {
          "aliases": [],
          "description": "The name of the DB parameter group to associate with this DB instance. When creating the DB instance if this argument is omitted the default DBParameterGroup for the specified engine is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "db_security_groups": {
          "aliases": [],
          "description": "(EC2-Classic platform) A list of DB security groups to associate with this DB instance.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "db_snapshot_identifier": {
          "aliases": [],
          "description": "The identifier for the DB snapshot to restore from if using I(creation_source=snapshot).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "db_subnet_group_name": {
          "aliases": [
            "subnet_group"
          ],
          "description": "The DB subnet group name to use for the DB instance.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "domain": {
          "aliases": [],
          "description": "The Active Directory Domain to restore the instance in.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "domain_iam_role_name": {
          "aliases": [],
          "description": "The name of the IAM role to be used when making API calls to the Directory Service.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "enable_cloudwatch_logs_exports": {
          "aliases": [
            "cloudwatch_log_exports"
          ],
          "description": "A list of log types that need to be enabled for exporting to CloudWatch Logs.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "enable_iam_database_authentication": {
          "aliases": [],
          "description": "Enable mapping of AWS Identity and Access Management (IAM) accounts to database accounts. If this option is omitted when creating the cluster, Amazon RDS sets this to False.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "enable_performance_insights": {
          "aliases": [],
          "description": "Whether to enable Performance Insights for the DB instance.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "engine": {
          "aliases": [],
          "description": "The name of the database engine to be used for this DB instance. This is required to create an instance. Valid choices are aurora | aurora-mysql | aurora-postgresql | mariadb | mysql | oracle-ee | oracle-se | oracle-se1 | oracle-se2 | postgres | sqlserver-ee | sqlserver-ex | sqlserver-se | sqlserver-web",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "engine_version": {
          "aliases": [],
          "description": "The version number of the database engine to use. For Aurora MySQL that could be 5.6.10a , 5.7.12. Aurora PostgreSQL example, 9.6.3",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "final_db_snapshot_identifier": {
          "aliases": [
            "final_snapshot_identifier"
          ],
          "description": "The DB instance snapshot identifier of the new DB instance snapshot created when I(skip_final_snapshot) is false.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "force_failover": {
          "aliases": [],
          "description": "Set to true to conduct the reboot through a MultiAZ failover.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "force_update_password": {
          "aliases": [],
          "description": "Set to True to update your cluster password with I(master_user_password). Since comparing passwords to determine if it needs to be updated is not possible this is set to False by default to allow idempotence.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "iops": {
          "aliases": [],
          "description": "The Provisioned IOPS (I/O operations per second) value. Is only set when using I(storage_type) is set to io1.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "kms_key_id": {
          "aliases": [],
          "description": "The ARN of the AWS KMS key identifier for an encrypted DB instance. If you are creating a DB instance with the same AWS account that owns the KMS encryption key used to encrypt the new DB instance, then you can use the KMS key alias instead of the ARN for the KM encryption key.\nIf I(storage_encrypted) is true and and this option is not provided, the default encryption key is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "license_model": {
          "aliases": [],
          "description": "The license model for the DB instance.\nSeveral options are license-included, bring-your-own-license, and general-public-license.\nThis option can also be omitted to default to an accepted value.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "master_user_password": {
          "aliases": [
            "password"
          ],
          "description": "An 8-41 character password for the master database user. The password can contain any printable ASCII character except \"/\", \"\"\", or \"@\". To modify the password use I(force_password_update). Use I(apply immediately) to change the password immediately, otherwise it is updated during the next maintenance window.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "master_username": {
          "aliases": [
            "username"
          ],
          "description": "The name of the master user for the DB cluster. Must be 1-16 letters or numbers and begin with a letter.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "max_allocated_storage": {
          "aliases": [],
          "description": "The upper limit to which Amazon RDS can automatically scale the storage of the DB instance.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "monitoring_interval": {
          "aliases": [],
          "description": "The interval, in seconds, when Enhanced Monitoring metrics are collected for the DB instance. To disable collecting metrics, specify 0. Amazon RDS defaults this to 0 if omitted when initially creating a DB instance.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "monitoring_role_arn": {
          "aliases": [],
          "description": "The ARN for the IAM role that permits RDS to send enhanced monitoring metrics to Amazon CloudWatch Logs.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "multi_az": {
          "aliases": [],
          "description": "Specifies if the DB instance is a Multi-AZ deployment. Mutually exclusive with I(availability_zone).",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "new_db_instance_identifier": {
          "aliases": [
            "new_instance_id",
            "new_id"
          ],
          "description": "The new DB cluster (lowercase) identifier for the DB cluster when renaming a DB instance. The identifier must contain from 1 to 63 letters, numbers, or hyphens and the first character must be a letter and may not end in a hyphen or contain consecutive hyphens. Use I(apply_immediately) to rename immediately, otherwise it is updated during the next maintenance window.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "option_group_name": {
          "aliases": [],
          "description": "The option group to associate with the DB instance.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "performance_insights_kms_key_id": {
          "aliases": [],
          "description": "The AWS KMS key identifier (ARN, name, or alias) for encryption of Performance Insights data.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "performance_insights_retention_period": {
          "aliases": [],
          "description": "The amount of time, in days, to retain Performance Insights data. Valid values are 7 or 731.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "port": {
          "aliases": [],
          "description": "The port number on which the instances accept connections.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "preferred_backup_window": {
          "aliases": [
            "backup_window"
          ],
          "description": "The daily time range (in UTC) of at least 30 minutes, during which automated backups are created if automated backups are enabled using I(backup_retention_period). The option must be in the format of \"hh24:mi-hh24:mi\" and not conflict with I(preferred_maintenance_window).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "preferred_maintenance_window": {
          "aliases": [
            "maintenance_window"
          ],
          "description": "The weekly time range (in UTC) of at least 30 minutes, during which system maintenance can occur. The option must be in the format \"ddd:hh24:mi-ddd:hh24:mi\" where ddd is one of Mon, Tue, Wed, Thu, Fri, Sat, Sun.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "processor_features": {
          "aliases": [],
          "description": "A dictionary of Name, Value pairs to indicate the number of CPU cores and the number of threads per core for the DB instance class of the DB instance. Names are threadsPerCore and coreCount. Set this option to an empty dictionary to use the default processor features.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "coreCount": {
              "aliases": [],
              "description": "The number of CPU cores",
              "required": false,
              "suboptions": {}
            },
            "threadsPerCore": {
              "aliases": [],
              "description": "The number of threads per core",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "promotion_tier": {
          "aliases": [],
          "description": "An integer that specifies the order in which an Aurora Replica is promoted to the primary instance after a failure of the existing primary instance.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "publicly_accessible": {
          "aliases": [],
          "description": "Specifies the accessibility options for the DB instance. A value of true specifies an Internet-facing instance with a publicly resolvable DNS name, which resolves to a public IP address. A value of false specifies an internal instance with a DNS name that resolves to a private IP address.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "purge_cloudwatch_logs_exports": {
          "aliases": [],
          "description": "Set to False to retain any enabled cloudwatch logs that aren't specified in the task and are associated with the instance.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "purge_security_groups": {
          "aliases": [],
          "description": "Set to False to retain any enabled security groups that aren't specified in the task and are associated with the instance.\nCan be applied to I(vpc_security_group_ids) and I(db_security_groups)",
          "default": "True",
          "type": "bool",
          "required": false,
          "version_added": "1.5.0",
          "suboptions": {}
        },
        "purge_tags": {
          "aliases": [],
          "description": "Set to False to retain any tags that aren't specified in task and are associated with the instance.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "read_replica": {
          "aliases": [],
          "description": "Set to False to promote a read replica cluster or true to create one. When creating a read replica C(creation_source) should be set to 'instance' or not provided. C(source_db_instance_identifier) must be provided with this option.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "restore_time": {
          "aliases": [],
          "description": "If using I(creation_source=instance) this indicates the UTC date and time to restore from the source instance. For example, \"2009-09-07T23:45:00Z\".\nMay alternatively set I(use_latest_restore_time=True).\nOnly one of I(use_latest_restorable_time) and I(restore_time) may be provided.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "s3_bucket_name": {
          "aliases": [],
          "description": "The name of the Amazon S3 bucket that contains the data used to create the Amazon DB instance.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "s3_ingestion_role_arn": {
          "aliases": [],
          "description": "The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that authorizes Amazon RDS to access the Amazon S3 bucket on your behalf.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "s3_prefix": {
          "aliases": [],
          "description": "The prefix for all of the file names that contain the data used to create the Amazon DB instance. If you do not specify a SourceS3Prefix value, then the Amazon DB instance is created by using all of the files in the Amazon S3 bucket.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "skip_final_snapshot": {
          "aliases": [],
          "description": "Whether a final DB cluster snapshot is created before the DB cluster is deleted. If this is false I(final_db_snapshot_identifier) must be provided.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "snapshot_identifier": {
          "aliases": [],
          "description": "The ARN of the DB snapshot to restore from when using I(creation_source=snapshot).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "source_db_instance_identifier": {
          "aliases": [],
          "description": "The identifier or ARN of the source DB instance from which to restore when creating a read replica or spinning up a point-in-time DB instance using I(creation_source=instance). If the source DB is not in the same region this should be an ARN.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "source_engine": {
          "aliases": [],
          "description": "The identifier for the database engine that was backed up to create the files stored in the Amazon S3 bucket.",
          "type": "str",
          "required": false,
          "choices": [
            "mysql"
          ],
          "suboptions": {}
        },
        "source_engine_version": {
          "aliases": [],
          "description": "The version of the database that the backup files were created from.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "source_region": {
          "aliases": [],
          "description": "The region of the DB instance from which the replica is created.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the snapshot should exist or not. I(rebooted) is not idempotent and will leave the DB instance in a running state and start it prior to rebooting if it was stopped. I(present) will leave the DB instance in the current running/stopped state, (running if creating the DB instance).\nI(state=running) and I(state=started) are synonyms, as are I(state=rebooted) and I(state=restarted). Note - rebooting the instance is not idempotent.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent",
            "terminated",
            "running",
            "started",
            "stopped",
            "rebooted",
            "restarted"
          ],
          "suboptions": {}
        },
        "storage_encrypted": {
          "aliases": [],
          "description": "Whether the DB instance is encrypted.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "storage_type": {
          "aliases": [],
          "description": "The storage type to be associated with the DB instance. I(storage_type) does not apply to Aurora DB instances.",
          "type": "str",
          "required": false,
          "choices": [
            "standard",
            "gp2",
            "io1"
          ],
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "A dictionary of key value pairs to assign the DB cluster.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tde_credential_arn": {
          "aliases": [
            "transparent_data_encryption_arn"
          ],
          "description": "The ARN from the key store with which to associate the instance for Transparent Data Encryption. This is supported by Oracle or SQL Server DB instances and may be used in conjunction with C(storage_encrypted) though it might slightly affect the performance of your database.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tde_credential_password": {
          "aliases": [
            "transparent_data_encryption_password"
          ],
          "description": "The password for the given ARN from the key store in order to access the device.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "timezone": {
          "aliases": [],
          "description": "The time zone of the DB instance.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "use_latest_restorable_time": {
          "aliases": [
            "restore_from_latest"
          ],
          "description": "Whether to restore the DB instance to the latest restorable backup time.\nOnly one of I(use_latest_restorable_time) and I(restore_time) may be provided.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "vpc_security_group_ids": {
          "aliases": [],
          "description": "A list of EC2 VPC security groups to associate with the DB cluster.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "wait": {
          "aliases": [],
          "description": "Whether to wait for the cluster to be available, stopped, or deleted. At a later time a wait_timeout option may be added. Following each API call to create/modify/delete the instance a waiter is used with a 60 second delay 30 times until the instance reaches the expected state (available/stopped/deleted). The total task time may also be influenced by AWSRetry which helps stabilize if the instance is in an invalid state to operate on to begin with (such as if you try to stop it when it is in the process of rebooting). If setting this to False task retries and delays may make your playbook execution better handle timeouts for major modifications.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Manage RDS instances",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n- name: create minimal aurora instance in default VPC and default subnet group\n  community.aws.rds_instance:\n    engine: aurora\n    db_instance_identifier: ansible-test-aurora-db-instance\n    instance_type: db.t2.small\n    password: \"{{ password }}\"\n    username: \"{{ username }}\"\n    cluster_id: ansible-test-cluster  # This cluster must exist - see rds_cluster to manage it\n\n- name: Create a DB instance using the default AWS KMS encryption key\n  community.aws.rds_instance:\n    id: test-encrypted-db\n    state: present\n    engine: mariadb\n    storage_encrypted: True\n    db_instance_class: db.t2.medium\n    username: \"{{ username }}\"\n    password: \"{{ password }}\"\n    allocated_storage: \"{{ allocated_storage }}\"\n\n- name: remove the DB instance without a final snapshot\n  community.aws.rds_instance:\n    id: \"{{ instance_id }}\"\n    state: absent\n    skip_final_snapshot: True\n\n- name: remove the DB instance with a final snapshot\n  community.aws.rds_instance:\n    id: \"{{ instance_id }}\"\n    state: absent\n    final_snapshot_identifier: \"{{ snapshot_id }}\"\n\n- name: Add a new security group without purge\n  community.aws.rds_instance:\n    id: \"{{ instance_id }}\"\n    state: present\n    vpc_security_group_ids:\n      - sg-0be17ba10c9286b0b\n    purge_security_groups: false\n    register: result\n"
  },
  "community.aws.rds_instance_facts": {
    "doc": {
      "description": "Obtain information about one or more RDS instances.\nThis module was called C(rds_instance_facts) before Ansible 2.9. The usage did not change.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "db_instance_identifier": {
          "aliases": [
            "id"
          ],
          "description": "The RDS instance's unique identifier.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filters": {
          "aliases": [],
          "description": "A filter that specifies one or more DB instances to describe. See U(https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_DescribeDBInstances.html)",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "obtain information about one or more RDS instances",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Get information about an instance\n  community.aws.rds_instance_info:\n    db_instance_identifier: new-database\n  register: new_database_info\n\n- name: Get all RDS instances\n  community.aws.rds_instance_info:\n"
  },
  "community.aws.rds_instance_info": {
    "doc": {
      "description": "Obtain information about one or more RDS instances.\nThis module was called C(rds_instance_facts) before Ansible 2.9. The usage did not change.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "db_instance_identifier": {
          "aliases": [
            "id"
          ],
          "description": "The RDS instance's unique identifier.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filters": {
          "aliases": [],
          "description": "A filter that specifies one or more DB instances to describe. See U(https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_DescribeDBInstances.html)",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "obtain information about one or more RDS instances",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Get information about an instance\n  community.aws.rds_instance_info:\n    db_instance_identifier: new-database\n  register: new_database_info\n\n- name: Get all RDS instances\n  community.aws.rds_instance_info:\n"
  },
  "community.aws.rds_instance_snapshot": {
    "doc": {
      "description": "Creates or deletes RDS snapshots.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "db_instance_identifier": {
          "aliases": [
            "instance_id"
          ],
          "description": "Database instance identifier. Required when state is present.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "db_snapshot_identifier": {
          "aliases": [
            "id",
            "snapshot_id"
          ],
          "description": "The snapshot to manage.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "purge_tags": {
          "aliases": [],
          "description": "whether to remove tags not present in the C(tags) parameter.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Specify the desired state of the snapshot.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "tags dict to apply to a snapshot.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "wait": {
          "aliases": [],
          "description": "Whether or not to wait for snapshot creation or deletion.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "wait_timeout": {
          "aliases": [],
          "description": "how long before wait gives up, in seconds.",
          "default": "300",
          "type": "int",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "manage Amazon RDS snapshots.",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create snapshot\n  community.aws.rds_instance_snapshot:\n    db_instance_identifier: new-database\n    db_snapshot_identifier: new-database-snapshot\n\n- name: Delete snapshot\n  community.aws.rds_instance_snapshot:\n    db_snapshot_identifier: new-database-snapshot\n    state: absent\n"
  },
  "community.aws.rds_option_group": {
    "doc": {
      "description": "Manages the creation, modification, deletion of RDS option groups.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "apply_immediately": {
          "aliases": [],
          "description": "Indicates whether the changes should be applied immediately, or during the next maintenance window.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "engine_name": {
          "aliases": [],
          "description": "Specifies the name of the engine that this option group should be associated with.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "major_engine_version": {
          "aliases": [],
          "description": "Specifies the major version of the engine that this option group should be associated with.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "option_group_description": {
          "aliases": [],
          "description": "The description of the option group.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "option_group_name": {
          "aliases": [],
          "description": "Specifies the name of the option group to be created.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "options": {
          "aliases": [],
          "description": "Options in this list are added to the option group.\nIf already present, the specified configuration is used to update the existing configuration.\nIf none are supplied, any existing options are removed.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "db_security_group_memberships": {
              "aliases": [],
              "description": "A list of C(DBSecurityGroupMembership) name strings used for this option.",
              "type": "list",
              "required": false,
              "suboptions": {}
            },
            "option_name": {
              "aliases": [],
              "description": "The configuration of options to include in a group.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "option_settings": {
              "aliases": [],
              "description": "The option settings to include in an option group.",
              "type": "list",
              "required": false,
              "suboptions": {
                "allowed_values": {
                  "aliases": [],
                  "description": "The allowed values of the option setting.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "apply_type": {
                  "aliases": [],
                  "description": "The DB engine specific parameter type.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "data_type": {
                  "aliases": [],
                  "description": "The data type of the option setting.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "default_value": {
                  "aliases": [],
                  "description": "The default value of the option setting.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "description": {
                  "aliases": [],
                  "description": "The description of the option setting.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "is_collection": {
                  "aliases": [],
                  "description": "Indicates if the option setting is part of a collection.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "is_modifiable": {
                  "aliases": [],
                  "description": "A Boolean value that, when C(true), indicates the option setting can be modified from the default.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "name": {
                  "aliases": [],
                  "description": "The name of the option that has settings that you can set.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "value": {
                  "aliases": [],
                  "description": "The current value of the option setting.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "option_version": {
              "aliases": [],
              "description": "The version for the option.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "port": {
              "aliases": [],
              "description": "The optional port for the option.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "vpc_security_group_memberships": {
              "aliases": [],
              "description": "A list of C(VpcSecurityGroupMembership) name strings used for this option.",
              "type": "list",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "purge_tags": {
          "aliases": [],
          "description": "Remove tags not listed in I(tags).",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Specifies whether the option group should be C(present) or C(absent).",
          "type": "str",
          "required": true,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "A dictionary of key value pairs to assign the option group.\nTo remove all tags set I(tags={}) and I(purge_tags=true).",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "wait": {
          "aliases": [],
          "description": "Whether to wait for the cluster to be available or deleted.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "rds_option_group module",
      "version_added": "2.1.0"
    },
    "examples": "\n# Create an RDS Mysql Option group\n- name: Create an RDS Mysql option group\n  community.aws.rds_option_group:\n    state: present\n    option_group_name: test-mysql-option-group\n    engine_name: mysql\n    major_engine_version: 5.6\n    option_group_description: test mysql option group\n    apply_immediately: true\n    options:\n        - option_name: MEMCACHED\n          port: 11211\n          vpc_security_group_memberships:\n            - \"sg-d188c123\"\n          option_settings:\n            - name: MAX_SIMULTANEOUS_CONNECTIONS\n              value: \"20\"\n            - name: CHUNK_SIZE_GROWTH_FACTOR\n              value: \"1.25\"\n  register: new_rds_mysql_option_group\n\n# Remove currently configured options for an option group by removing options argument\n- name: Create an RDS Mysql option group\n  community.aws.rds_option_group:\n    state: present\n    option_group_name: test-mysql-option-group\n    engine_name: mysql\n    major_engine_version: 5.6\n    option_group_description: test mysql option group\n    apply_immediately: true\n  register: rds_mysql_option_group\n\n- name: Create an RDS Mysql option group using tags\n  community.aws.rds_option_group:\n    state: present\n    option_group_name: test-mysql-option-group\n    engine_name: mysql\n    major_engine_version: 5.6\n    option_group_description: test mysql option group\n    apply_immediately: true\n    tags:\n        Tag1: tag1\n        Tag2: tag2\n  register: rds_mysql_option_group\n\n# Delete an RDS Mysql Option group\n- name: Delete an RDS Mysql option group\n  community.aws.rds_option_group:\n    state: absent\n    option_group_name: test-mysql-option-group\n  register: deleted_rds_mysql_option_group\n"
  },
  "community.aws.rds_option_group_info": {
    "doc": {
      "description": "Gather information about RDS option groups.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "engine_name": {
          "aliases": [],
          "description": "Filters the list of option groups to only include groups associated with a specific database engine.",
          "default": "",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "major_engine_version": {
          "aliases": [],
          "description": "Filters the list of option groups to only include groups associated with a specific database engine version.\nIf specified, then I(engine_name) must also be specified.",
          "default": "",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "marker": {
          "aliases": [],
          "description": "If this parameter is specified, the response includes only records beyond the marker, up to the value specified by I(max_records).\nAllowed values are between C(20) and C(100).",
          "default": "",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "max_records": {
          "aliases": [],
          "description": "The maximum number of records to include in the response.",
          "default": "100",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "option_group_name": {
          "aliases": [],
          "description": "The name of the option group to describe.\nCan't be supplied together with I(engine_name) or I(major_engine_version).",
          "default": "",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "rds_option_group_info module",
      "version_added": "2.1.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n- name: List an option group\n  community.aws.rds_option_group_info:\n    option_group_name: test-mysql-option-group\n  register: option_group\n\n- name: List all the option groups\n  community.aws.rds_option_group_info:\n    region: ap-southeast-2\n    profile: production\n  register: option_group\n"
  },
  "community.aws.rds_param_group": {
    "doc": {
      "description": "Creates, modifies, and deletes RDS parameter groups.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "Database parameter group description. Only set when a new group is added.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "engine": {
          "aliases": [],
          "description": "The type of database for this group.\nPlease use following command to get list of all supported db engines and their respective versions.\n# aws rds describe-db-engine-versions --query \"DBEngineVersions[].DBParameterGroupFamily\"\nRequired for I(state=present).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "immediate": {
          "aliases": [
            "apply_immediately"
          ],
          "description": "Whether to apply the changes immediately, or after the next reboot of any associated instances.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Database parameter group identifier.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "params": {
          "aliases": [
            "parameters"
          ],
          "description": "Map of parameter names and values. Numeric values may be represented as K for kilo (1024), M for mega (1024^2), G for giga (1024^3), or T for tera (1024^4), and these values will be expanded into the appropriate number before being set in the parameter group.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "purge_tags": {
          "aliases": [],
          "description": "Whether or not to remove tags that do not appear in the C(tags) list.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Specifies whether the group should be present or absent.",
          "type": "str",
          "required": true,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of tags to attach to the parameter group.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "manage RDS parameter groups",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Add or change a parameter group, in this case setting auto_increment_increment to 42 * 1024\n  community.aws.rds_param_group:\n      state: present\n      name: norwegian-blue\n      description: 'My Fancy Ex Parrot Group'\n      engine: 'mysql5.6'\n      params:\n          auto_increment_increment: \"42K\"\n      tags:\n          Environment: production\n          Application: parrot\n\n- name: Remove a parameter group\n  community.aws.rds_param_group:\n      state: absent\n      name: norwegian-blue\n"
  },
  "community.aws.rds_snapshot_facts": {
    "doc": {
      "description": "Obtain information about one or more RDS snapshots. These can be for unclustered snapshots or snapshots of clustered DBs (Aurora).\nAurora snapshot information may be obtained if no identifier parameters are passed or if one of the cluster parameters are passed.\nThis module was called C(rds_snapshot_facts) before Ansible 2.9. The usage did not change.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "db_cluster_identifier": {
          "aliases": [],
          "description": "RDS cluster name for which to find snapshots.\nMutually exclusive with I(db_snapshot_identifier), I(db_instance_identifier), I(db_cluster_snapshot_identifier)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "db_cluster_snapshot_identifier": {
          "aliases": [],
          "description": "Name of an RDS cluster snapshot.\nMutually exclusive with I(db_instance_identifier), I(db_snapshot_identifier), I(db_cluster_identifier)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "db_instance_identifier": {
          "aliases": [],
          "description": "RDS instance name for which to find snapshots.\nMutually exclusive with I(db_snapshot_identifier), I(db_cluster_identifier), I(db_cluster_snapshot_identifier)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "db_snapshot_identifier": {
          "aliases": [
            "snapshot_name"
          ],
          "description": "Name of an RDS (unclustered) snapshot.\nMutually exclusive with I(db_instance_identifier), I(db_cluster_identifier), I(db_cluster_snapshot_identifier)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "snapshot_type": {
          "aliases": [],
          "description": "Type of snapshot to find.\nBy default both automated and manual snapshots will be returned.",
          "type": "str",
          "required": false,
          "choices": [
            "automated",
            "manual",
            "shared",
            "public"
          ],
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "obtain information about one or more RDS snapshots",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Get information about an snapshot\n  community.aws.rds_snapshot_info:\n    db_snapshot_identifier: snapshot_name\n  register: new_database_info\n\n- name: Get all RDS snapshots for an RDS instance\n  community.aws.rds_snapshot_info:\n    db_instance_identifier: helloworld-rds-master\n"
  },
  "community.aws.rds_snapshot_info": {
    "doc": {
      "description": "Obtain information about one or more RDS snapshots. These can be for unclustered snapshots or snapshots of clustered DBs (Aurora).\nAurora snapshot information may be obtained if no identifier parameters are passed or if one of the cluster parameters are passed.\nThis module was called C(rds_snapshot_facts) before Ansible 2.9. The usage did not change.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "db_cluster_identifier": {
          "aliases": [],
          "description": "RDS cluster name for which to find snapshots.\nMutually exclusive with I(db_snapshot_identifier), I(db_instance_identifier), I(db_cluster_snapshot_identifier)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "db_cluster_snapshot_identifier": {
          "aliases": [],
          "description": "Name of an RDS cluster snapshot.\nMutually exclusive with I(db_instance_identifier), I(db_snapshot_identifier), I(db_cluster_identifier)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "db_instance_identifier": {
          "aliases": [],
          "description": "RDS instance name for which to find snapshots.\nMutually exclusive with I(db_snapshot_identifier), I(db_cluster_identifier), I(db_cluster_snapshot_identifier)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "db_snapshot_identifier": {
          "aliases": [
            "snapshot_name"
          ],
          "description": "Name of an RDS (unclustered) snapshot.\nMutually exclusive with I(db_instance_identifier), I(db_cluster_identifier), I(db_cluster_snapshot_identifier)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "snapshot_type": {
          "aliases": [],
          "description": "Type of snapshot to find.\nBy default both automated and manual snapshots will be returned.",
          "type": "str",
          "required": false,
          "choices": [
            "automated",
            "manual",
            "shared",
            "public"
          ],
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "obtain information about one or more RDS snapshots",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Get information about an snapshot\n  community.aws.rds_snapshot_info:\n    db_snapshot_identifier: snapshot_name\n  register: new_database_info\n\n- name: Get all RDS snapshots for an RDS instance\n  community.aws.rds_snapshot_info:\n    db_instance_identifier: helloworld-rds-master\n"
  },
  "community.aws.rds_subnet_group": {
    "doc": {
      "description": "Creates, modifies, and deletes RDS database subnet groups.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "Database subnet group description.\nRequired when I(state=present).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Database subnet group identifier.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Specifies whether the subnet should be present or absent.",
          "type": "str",
          "required": true,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "subnets": {
          "aliases": [],
          "description": "List of subnet IDs that make up the database subnet group.\nRequired when I(state=present).",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "manage RDS database subnet groups",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Add or change a subnet group\n  community.aws.rds_subnet_group:\n    state: present\n    name: norwegian-blue\n    description: My Fancy Ex Parrot Subnet Group\n    subnets:\n      - subnet-aaaaaaaa\n      - subnet-bbbbbbbb\n\n- name: Remove a subnet group\n  community.aws.rds_subnet_group:\n    state: absent\n    name: norwegian-blue\n"
  },
  "community.aws.redshift": {
    "doc": {
      "description": "Creates, deletes, or modifies Amazon Redshift cluster instances.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "allow_version_upgrade": {
          "aliases": [
            "version_upgrade"
          ],
          "description": "When I(allow_version_upgrade=true) the cluster may be automatically upgraded during the maintenance window.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "automated_snapshot_retention_period": {
          "aliases": [
            "retention_period"
          ],
          "description": "The number of days that automated snapshots are retained.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "availability_zone": {
          "aliases": [
            "zone",
            "aws_zone"
          ],
          "description": "Availability zone in which to launch cluster.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cluster_parameter_group_name": {
          "aliases": [
            "param_group_name"
          ],
          "description": "Name of the cluster parameter group.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cluster_security_groups": {
          "aliases": [
            "security_groups"
          ],
          "description": "In which security group the cluster belongs.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "cluster_subnet_group_name": {
          "aliases": [
            "subnet"
          ],
          "description": "Which subnet to place the cluster.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cluster_type": {
          "aliases": [],
          "description": "The type of cluster.",
          "default": "single-node",
          "type": "str",
          "required": false,
          "choices": [
            "multi-node",
            "single-node"
          ],
          "suboptions": {}
        },
        "cluster_version": {
          "aliases": [
            "version"
          ],
          "description": "Which version the cluster should have.",
          "type": "str",
          "required": false,
          "choices": [
            "1.0"
          ],
          "suboptions": {}
        },
        "command": {
          "aliases": [],
          "description": "Specifies the action to take.",
          "type": "str",
          "required": true,
          "choices": [
            "create",
            "facts",
            "delete",
            "modify"
          ],
          "suboptions": {}
        },
        "db_name": {
          "aliases": [],
          "description": "Name of the database.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "elastic_ip": {
          "aliases": [],
          "description": "An Elastic IP to use for the cluster.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "encrypted": {
          "aliases": [],
          "description": "If the cluster is encrypted or not.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "enhanced_vpc_routing": {
          "aliases": [],
          "description": "Whether the cluster should have enhanced VPC routing enabled.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "final_cluster_snapshot_identifier": {
          "aliases": [
            "final_snapshot_id"
          ],
          "description": "Identifier of the final snapshot to be created before deleting the cluster.\nIf this parameter is provided, I(skip_final_cluster_snapshot) must be C(false).\nUsed only when I(command=delete).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "identifier": {
          "aliases": [],
          "description": "Redshift cluster identifier.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "new_cluster_identifier": {
          "aliases": [
            "new_identifier"
          ],
          "description": "Only used when command=modify.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "node_type": {
          "aliases": [],
          "description": "The node type of the cluster.\nRequire when I(command=create).",
          "type": "str",
          "required": false,
          "choices": [
            "ds1.xlarge",
            "ds1.8xlarge",
            "ds2.xlarge",
            "ds2.8xlarge",
            "dc1.large",
            "dc2.large",
            "dc1.8xlarge",
            "dw1.xlarge",
            "dw1.8xlarge",
            "dw2.large",
            "dw2.8xlarge"
          ],
          "suboptions": {}
        },
        "number_of_nodes": {
          "aliases": [],
          "description": "Number of nodes.\nOnly used when I(cluster_type=multi-node).",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Master database password.\nUsed only when I(command=create).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "port": {
          "aliases": [],
          "description": "Which port the cluster is listening on.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "preferred_maintenance_window": {
          "aliases": [
            "maintance_window",
            "maint_window"
          ],
          "description": "Maintenance window in format of C(ddd:hh24:mi-ddd:hh24:mi).  (Example: C(Mon:22:00-Mon:23:15))\nTimes are specified in UTC.\nIf not specified then a random 30 minute maintenance window is assigned.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "publicly_accessible": {
          "aliases": [],
          "description": "If the cluster is accessible publicly or not.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "purge_tags": {
          "aliases": [],
          "description": "Purge existing tags that are not found in the cluster",
          "default": "yes",
          "type": "bool",
          "required": false,
          "version_added": "1.3.0",
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "skip_final_cluster_snapshot": {
          "aliases": [
            "skip_final_snapshot"
          ],
          "description": "Skip a final snapshot before deleting the cluster.\nUsed only when I(command=delete).",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [
            "resource_tags"
          ],
          "description": "A dictionary of resource tags.",
          "type": "dict",
          "required": false,
          "version_added": "1.3.0",
          "suboptions": {}
        },
        "username": {
          "aliases": [],
          "description": "Master database username.\nUsed only when I(command=create).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "vpc_security_group_ids": {
          "aliases": [
            "vpc_security_groups"
          ],
          "description": "VPC security group",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "wait": {
          "aliases": [],
          "description": "When I(command=create), I(command=modify) or I(command=restore) then wait for the database to enter the 'available' state.\nWhen I(command=delete) wait for the database to be terminated.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "wait_timeout": {
          "aliases": [],
          "description": "When I(wait=true) defines how long in seconds before giving up.",
          "default": "300",
          "type": "int",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "create, delete, or modify an Amazon Redshift instance",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Basic cluster provisioning example\n  community.aws.redshift:\n    command: create\n    node_type: ds1.xlarge\n    identifier: new_cluster\n    username: cluster_admin\n    password: 1nsecure\n\n- name: Cluster delete example\n  community.aws.redshift:\n    command: delete\n    identifier: new_cluster\n    skip_final_cluster_snapshot: true\n    wait: true\n"
  },
  "community.aws.redshift_cross_region_snapshots": {
    "doc": {
      "description": "Manage Redshift Cross Region Snapshots. Supports KMS-Encrypted Snapshots.\nFor more information, see U(https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-snapshots.html#cross-region-snapshot-copy)",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cluster_name": {
          "aliases": [
            "cluster"
          ],
          "description": "The name of the cluster to configure cross-region snapshots for.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "destination_region": {
          "aliases": [
            "destination"
          ],
          "description": "The region to copy snapshots to.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "source"
          ],
          "description": "The cluster's region.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "snapshot_copy_grant": {
          "aliases": [
            "copy_grant"
          ],
          "description": "A grant for Amazon Redshift to use a master key in the I(destination_region).\nSee U(http://boto3.readthedocs.io/en/latest/reference/services/redshift.html#Redshift.Client.create_snapshot_copy_grant)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "snapshot_retention_period": {
          "aliases": [
            "retention_period"
          ],
          "description": "The number of days to keep cross-region snapshots for.",
          "type": "int",
          "required": true,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Create or remove the cross-region snapshot configuration.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Manage Redshift Cross Region Snapshots",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: configure cross-region snapshot on cluster `johniscool`\n  community.aws.redshift_cross_region_snapshots:\n    cluster_name: johniscool\n    state: present\n    region: us-east-1\n    destination_region: us-west-2\n    retention_period: 1\n\n- name: configure cross-region snapshot on kms-encrypted cluster\n  community.aws.redshift_cross_region_snapshots:\n    cluster_name: whatever\n    state: present\n    region: us-east-1\n    destination: us-west-2\n    copy_grant: 'my-grant-in-destination'\n    retention_period: 10\n\n- name: disable cross-region snapshots, necessary before most cluster modifications (rename, resize)\n  community.aws.redshift_cross_region_snapshots:\n    cluster_name: whatever\n    state: absent\n    region: us-east-1\n    destination_region: us-west-2\n"
  },
  "community.aws.redshift_facts": {
    "doc": {
      "description": "Gather information about Redshift cluster(s).\nThis module was called C(redshift_facts) before Ansible 2.9. The usage did not change.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cluster_identifier": {
          "aliases": [
            "name",
            "identifier"
          ],
          "description": "The prefix of cluster identifier of the Redshift cluster you are searching for.\nThis is a regular expression match with implicit '^'. Append '$' for a complete match.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "A dictionary/hash of tags in the format { tag1_name: 'tag1_value', tag2_name: 'tag2_value' } to match against the security group(s) you are searching for.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Gather information about Redshift cluster(s)",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do net set authentication details, see the AWS guide for details.\n\n- name: Find all clusters\n  community.aws.redshift_info:\n  register: redshift\n\n- name: Find cluster(s) with matching tags\n  community.aws.redshift_info:\n    tags:\n      env: prd\n      stack: monitoring\n  register: redshift_tags\n\n- name: Find cluster(s) with matching name/prefix and tags\n  community.aws.redshift_info:\n    tags:\n      env: dev\n      stack: web\n    name: user-\n  register: redshift_web\n\n- name: Fail if no cluster(s) is/are found\n  community.aws.redshift_info:\n    tags:\n      env: stg\n      stack: db\n  register: redshift_user\n  failed_when: \"{{ redshift_user.results | length == 0 }}\"\n"
  },
  "community.aws.redshift_info": {
    "doc": {
      "description": "Gather information about Redshift cluster(s).\nThis module was called C(redshift_facts) before Ansible 2.9. The usage did not change.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cluster_identifier": {
          "aliases": [
            "name",
            "identifier"
          ],
          "description": "The prefix of cluster identifier of the Redshift cluster you are searching for.\nThis is a regular expression match with implicit '^'. Append '$' for a complete match.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "A dictionary/hash of tags in the format { tag1_name: 'tag1_value', tag2_name: 'tag2_value' } to match against the security group(s) you are searching for.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Gather information about Redshift cluster(s)",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do net set authentication details, see the AWS guide for details.\n\n- name: Find all clusters\n  community.aws.redshift_info:\n  register: redshift\n\n- name: Find cluster(s) with matching tags\n  community.aws.redshift_info:\n    tags:\n      env: prd\n      stack: monitoring\n  register: redshift_tags\n\n- name: Find cluster(s) with matching name/prefix and tags\n  community.aws.redshift_info:\n    tags:\n      env: dev\n      stack: web\n    name: user-\n  register: redshift_web\n\n- name: Fail if no cluster(s) is/are found\n  community.aws.redshift_info:\n    tags:\n      env: stg\n      stack: db\n  register: redshift_user\n  failed_when: \"{{ redshift_user.results | length == 0 }}\"\n"
  },
  "community.aws.redshift_subnet_group": {
    "doc": {
      "description": "Create, modifies, and deletes Redshift cluster subnet groups.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "description": {
          "aliases": [
            "group_description"
          ],
          "description": "Cluster subnet group description.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [
            "group_name"
          ],
          "description": "Cluster subnet group name.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Specifies whether the subnet group should be present or absent.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "subnets": {
          "aliases": [
            "group_subnets"
          ],
          "description": "List of subnet IDs that make up the cluster subnet group.\nAt least one subnet must be provided when creating a cluster subnet group.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "manage Redshift cluster subnet groups",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create a Redshift subnet group\n  community.aws.redshift_subnet_group:\n    state: present\n    group_name: redshift-subnet\n    group_description: Redshift subnet\n    group_subnets:\n        - 'subnet-aaaaa'\n        - 'subnet-bbbbb'\n\n- name: Remove subnet group\n  community.aws.redshift_subnet_group:\n    state: absent\n    group_name: redshift-subnet\n"
  },
  "community.aws.route53": {
    "doc": {
      "description": "Creates and deletes DNS records in Amazons Route 53 service.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "alias": {
          "aliases": [],
          "description": "Indicates if this is an alias record.\nMutually exclusive with I(ttl).\nDefaults to C(false).",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "alias_evaluate_target_health": {
          "aliases": [],
          "description": "Whether or not to evaluate an alias target health. Useful for aliases to Elastic Load Balancers.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "alias_hosted_zone_id": {
          "aliases": [],
          "description": "The hosted zone identifier.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "failover": {
          "aliases": [],
          "description": "Failover resource record sets only. Whether this is the primary or secondary resource record set. Allowed values are PRIMARY and SECONDARY\nMutually exclusive with I(weight) and I(region).",
          "type": "str",
          "required": false,
          "choices": [
            "SECONDARY",
            "PRIMARY"
          ],
          "suboptions": {}
        },
        "health_check": {
          "aliases": [],
          "description": "Health check to associate with this record",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "hosted_zone_id": {
          "aliases": [],
          "description": "The Hosted Zone ID of the DNS zone to modify.\nThis is a required parameter, if parameter I(zone) is not supplied.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "identifier": {
          "aliases": [],
          "description": "Have to be specified for Weighted, latency-based and failover resource record sets only. An identifier that differentiates among multiple resource record sets that have the same combination of DNS name and type.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "overwrite": {
          "aliases": [],
          "description": "Whether an existing record should be overwritten on create if values do not match.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "private_zone": {
          "aliases": [],
          "description": "If set to C(true), the private zone matching the requested name within the domain will be used if there are both public and private zones.\nThe default is to use the public zone.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "record": {
          "aliases": [],
          "description": "The full DNS record to create or delete.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "region": {
          "aliases": [],
          "description": "Latency-based resource record sets only Among resource record sets that have the same combination of DNS name and type, a value that determines which region this should be associated with for the latency-based routing\nMutually exclusive with I(weight) and I(failover).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "retry_interval": {
          "aliases": [],
          "description": "In the case that Route 53 is still servicing a prior request, this module will wait and try again after this many seconds. If you have many domain names, the default of C(500) seconds may be too long.",
          "default": "500",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [
            "command"
          ],
          "description": "Specifies the state of the resource record.",
          "type": "str",
          "required": true,
          "choices": [
            "present",
            "absent",
            "get",
            "create",
            "delete"
          ],
          "suboptions": {}
        },
        "ttl": {
          "aliases": [],
          "description": "The TTL, in second, to give the new record.\nMutually exclusive with I(alias).",
          "default": "3600",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "type": {
          "aliases": [],
          "description": "The type of DNS record to create.",
          "type": "str",
          "required": true,
          "choices": [
            "A",
            "CNAME",
            "MX",
            "AAAA",
            "TXT",
            "PTR",
            "SRV",
            "SPF",
            "CAA",
            "NS",
            "SOA"
          ],
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "value": {
          "aliases": [],
          "description": "The new value when creating a DNS record.  YAML lists or multiple comma-spaced values are allowed for non-alias records.\nWhen deleting a record all values for the record must be specified or Route 53 will not delete it.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "vpc_id": {
          "aliases": [],
          "description": "When used in conjunction with private_zone: true, this will only modify records in the private hosted zone attached to this VPC.\nThis allows you to have multiple private hosted zones, all with the same name, attached to different VPCs.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "wait": {
          "aliases": [],
          "description": "Wait until the changes have been replicated to all Amazon Route 53 DNS servers.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "wait_timeout": {
          "aliases": [],
          "description": "How long to wait for the changes to be replicated, in seconds.",
          "default": "300",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "weight": {
          "aliases": [],
          "description": "Weighted resource record sets only. Among resource record sets that have the same combination of DNS name and type, a value that determines what portion of traffic for the current resource record set is routed to the associated location.\nMutually exclusive with I(region) and I(failover).",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "zone": {
          "aliases": [],
          "description": "The DNS zone to modify.\nThis is a required parameter, if parameter I(hosted_zone_id) is not supplied.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "add or delete entries in Amazons Route 53 DNS service",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Add new.foo.com as an A record with 3 IPs and wait until the changes have been replicated\n  community.aws.route53:\n    state: present\n    zone: foo.com\n    record: new.foo.com\n    type: A\n    ttl: 7200\n    value: 1.1.1.1,2.2.2.2,3.3.3.3\n    wait: yes\n- name: Update new.foo.com as an A record with a list of 3 IPs and wait until the changes have been replicated\n  community.aws.route53:\n    state: present\n    zone: foo.com\n    record: new.foo.com\n    type: A\n    ttl: 7200\n    value:\n      - 1.1.1.1\n      - 2.2.2.2\n      - 3.3.3.3\n    wait: yes\n- name: Retrieve the details for new.foo.com\n  community.aws.route53:\n    state: get\n    zone: foo.com\n    record: new.foo.com\n    type: A\n  register: rec\n- name: Delete new.foo.com A record using the results from the get command\n  community.aws.route53:\n    state: absent\n    zone: foo.com\n    record: \"{{ rec.set.record }}\"\n    ttl: \"{{ rec.set.ttl }}\"\n    type: \"{{ rec.set.type }}\"\n    value: \"{{ rec.set.value }}\"\n# Add an AAAA record.  Note that because there are colons in the value\n# that the IPv6 address must be quoted. Also shows using the old form command=create.\n- name: Add an AAAA record\n  community.aws.route53:\n    command: create\n    zone: foo.com\n    record: localhost.foo.com\n    type: AAAA\n    ttl: 7200\n    value: \"::1\"\n# For more information on SRV records see:\n# https://en.wikipedia.org/wiki/SRV_record\n- name: Add a SRV record with multiple fields for a service on port 22222\n  community.aws.route53:\n    state: present\n    zone: foo.com\n    record: \"_example-service._tcp.foo.com\"\n    type: SRV\n    value: \"0 0 22222 host1.foo.com,0 0 22222 host2.foo.com\"\n# Note that TXT and SPF records must be surrounded\n# by quotes when sent to Route 53:\n- name: Add a TXT record.\n  community.aws.route53:\n    state: present\n    zone: foo.com\n    record: localhost.foo.com\n    type: TXT\n    ttl: 7200\n    value: '\"bar\"'\n- name: Add an alias record that points to an Amazon ELB\n  community.aws.route53:\n    state: present\n    zone: foo.com\n    record: elb.foo.com\n    type: A\n    value: \"{{ elb_dns_name }}\"\n    alias: True\n    alias_hosted_zone_id: \"{{ elb_zone_id }}\"\n- name: Retrieve the details for elb.foo.com\n  community.aws.route53:\n    state: get\n    zone: foo.com\n    record: elb.foo.com\n    type: A\n  register: rec\n- name: Delete an alias record using the results from the get command\n  community.aws.route53:\n    state: absent\n    zone: foo.com\n    record: \"{{ rec.set.record }}\"\n    ttl: \"{{ rec.set.ttl }}\"\n    type: \"{{ rec.set.type }}\"\n    value: \"{{ rec.set.value }}\"\n    alias: True\n    alias_hosted_zone_id: \"{{ rec.set.alias_hosted_zone_id }}\"\n- name: Add an alias record that points to an Amazon ELB and evaluates it health\n  community.aws.route53:\n    state: present\n    zone: foo.com\n    record: elb.foo.com\n    type: A\n    value: \"{{ elb_dns_name }}\"\n    alias: True\n    alias_hosted_zone_id: \"{{ elb_zone_id }}\"\n    alias_evaluate_target_health: True\n- name: Add an AAAA record with Hosted Zone ID\n  community.aws.route53:\n    state: present\n    zone: foo.com\n    hosted_zone_id: Z2AABBCCDDEEFF\n    record: localhost.foo.com\n    type: AAAA\n    ttl: 7200\n    value: \"::1\"\n- name: Use a routing policy to distribute traffic\n  community.aws.route53:\n    state: present\n    zone: foo.com\n    record: www.foo.com\n    type: CNAME\n    value: host1.foo.com\n    ttl: 30\n    # Routing policy\n    identifier: \"host1@www\"\n    weight: 100\n    health_check: \"d994b780-3150-49fd-9205-356abdd42e75\"\n- name: Add a CAA record (RFC 6844)\n  community.aws.route53:\n    state: present\n    zone: example.com\n    record: example.com\n    type: CAA\n    value:\n      - 0 issue \"ca.example.net\"\n      - 0 issuewild \";\"\n      - 0 iodef \"mailto:security@example.com\"\n"
  },
  "community.aws.route53_facts": {
    "doc": {
      "description": "Gets various details related to Route53 zone, record set or health check details.\nThis module was called C(route53_facts) before Ansible 2.9. The usage did not change.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "change_id": {
          "aliases": [],
          "description": "The ID of the change batch request.\nThe value that you specify here is the value that ChangeResourceRecordSets returned in the Id element when you submitted the request.\nRequired if I(query=change).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "delegation_set_id": {
          "aliases": [],
          "description": "The DNS Zone delegation set ID.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "dns_name": {
          "aliases": [],
          "description": "The first name in the lexicographic ordering of domain names that you want the list_command to start listing from.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "health_check_id": {
          "aliases": [],
          "description": "The ID of the health check.\nRequired if C(query) is set to C(health_check) and C(health_check_method) is set to C(details) or C(status) or C(failure_reason).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "health_check_method": {
          "aliases": [],
          "description": "This is used in conjunction with query: health_check. It allows for listing details, counts or tags of various health check details.",
          "default": "list",
          "type": "str",
          "required": false,
          "choices": [
            "list",
            "details",
            "status",
            "failure_reason",
            "count",
            "tags"
          ],
          "suboptions": {}
        },
        "hosted_zone_id": {
          "aliases": [],
          "description": "The Hosted Zone ID of the DNS zone.\nRequired if I(query) is set to I(hosted_zone) and I(hosted_zone_method) is set to I(details).\nRequired if I(query) is set to I(record_sets).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "hosted_zone_method": {
          "aliases": [],
          "description": "This is used in conjunction with query: hosted_zone. It allows for listing details, counts or tags of various hosted zone details.",
          "default": "list",
          "type": "str",
          "required": false,
          "choices": [
            "details",
            "list",
            "list_by_name",
            "count",
            "tags"
          ],
          "suboptions": {}
        },
        "max_items": {
          "aliases": [],
          "description": "Maximum number of items to return for various get/list requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "next_marker": {
          "aliases": [],
          "description": "Some requests such as list_command: hosted_zones will return a maximum number of entries - EG 100 or the number specified by I(max_items). If the number of entries exceeds this maximum another request can be sent using the NextMarker entry from the first response to get the next page of results.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "query": {
          "aliases": [],
          "description": "Specifies the query action to take.",
          "type": "str",
          "required": true,
          "choices": [
            "change",
            "checker_ip_range",
            "health_check",
            "hosted_zone",
            "record_sets",
            "reusable_delegation_set"
          ],
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_id": {
          "aliases": [
            "resource_ids"
          ],
          "description": "The ID/s of the specified resource/s.\nRequired if I(query=health_check) and I(health_check_method=tags).\nRequired if I(query=hosted_zone) and I(hosted_zone_method=tags).",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "start_record_name": {
          "aliases": [],
          "description": "The first name in the lexicographic ordering of domain names that you want the list_command: record_sets to start listing from.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "type": {
          "aliases": [],
          "description": "The type of DNS record.",
          "type": "str",
          "required": false,
          "choices": [
            "A",
            "CNAME",
            "MX",
            "AAAA",
            "TXT",
            "PTR",
            "SRV",
            "SPF",
            "CAA",
            "NS"
          ],
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Retrieves route53 details using AWS methods",
      "version_added": "1.0.0"
    },
    "examples": "\n# Simple example of listing all hosted zones\n- name: List all hosted zones\n  community.aws.route53_info:\n    query: hosted_zone\n  register: hosted_zones\n\n# Getting a count of hosted zones\n- name: Return a count of all hosted zones\n  community.aws.route53_info:\n    query: hosted_zone\n    hosted_zone_method: count\n  register: hosted_zone_count\n\n- name: List the first 20 resource record sets in a given hosted zone\n  community.aws.route53_info:\n    profile: account_name\n    query: record_sets\n    hosted_zone_id: ZZZ1111112222\n    max_items: 20\n  register: record_sets\n\n- name: List first 20 health checks\n  community.aws.route53_info:\n    query: health_check\n    health_check_method: list\n    max_items: 20\n  register: health_checks\n\n- name: Get health check last failure_reason\n  community.aws.route53_info:\n    query: health_check\n    health_check_method: failure_reason\n    health_check_id: 00000000-1111-2222-3333-12345678abcd\n  register: health_check_failure_reason\n\n- name: Retrieve reusable delegation set details\n  community.aws.route53_info:\n    query: reusable_delegation_set\n    delegation_set_id: delegation id\n  register: delegation_sets\n\n- name: setup of example for using next_marker\n  community.aws.route53_info:\n    query: hosted_zone\n    max_items: 1\n  register: first_info\n\n- name: example for using next_marker\n  community.aws.route53_info:\n    query: hosted_zone\n    next_marker: \"{{ first_info.NextMarker }}\"\n    max_items: 1\n  when: \"{{ 'NextMarker' in first_info }}\"\n\n- name: retrieve host entries starting with host1.workshop.test.io\n  block:\n    - name: grab zone id\n      community.aws.route53_zone:\n        zone: \"test.io\"\n      register: AWSINFO\n\n    - name: grab Route53 record information\n      community.aws.route53_info:\n        type: A\n        query: record_sets\n        hosted_zone_id: \"{{ AWSINFO.zone_id }}\"\n        start_record_name: \"host1.workshop.test.io\"\n      register: RECORDS\n"
  },
  "community.aws.route53_health_check": {
    "doc": {
      "description": "Creates and deletes DNS Health checks in Amazons Route53 service.\nOnly the port, resource_path, string_match and request_interval are considered when updating existing health-checks.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "disabled": {
          "aliases": [],
          "description": "Stops Route 53 from performing health checks.\nSee the AWS documentation for more details on the exact implications. U(https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/health-checks-creating-values.html)\nDefaults to C(true) when creating a new health check.",
          "type": "bool",
          "required": false,
          "version_added": "2.1.0",
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "failure_threshold": {
          "aliases": [],
          "description": "The number of consecutive health checks that an endpoint must pass or fail for Amazon Route 53 to change the current status of the endpoint from unhealthy to healthy or vice versa.\nWill default to C(3) if not specified on creation.",
          "type": "int",
          "required": false,
          "choices": [
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10"
          ],
          "suboptions": {}
        },
        "fqdn": {
          "aliases": [],
          "description": "Domain name of the endpoint to check. Either this or I(ip_address) has to be provided. When both are given the `fqdn` is used in the `Host:` header of the HTTP request.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ip_address": {
          "aliases": [],
          "description": "IP address of the end-point to check. Either this or I(fqdn) has to be provided.\nIP addresses must be publicly routable.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "port": {
          "aliases": [],
          "description": "The port on the endpoint on which you want Amazon Route 53 to perform health checks. Required for TCP checks.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "purge_tags": {
          "aliases": [],
          "description": "Delete any tags not specified in I(tags).",
          "default": "False",
          "type": "bool",
          "required": false,
          "version_added": "2.1.0",
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "request_interval": {
          "aliases": [],
          "description": "The number of seconds between the time that Amazon Route 53 gets a response from your endpoint and the time that it sends the next health-check request.",
          "default": "30",
          "type": "int",
          "required": false,
          "choices": [
            "10",
            "30"
          ],
          "suboptions": {}
        },
        "resource_path": {
          "aliases": [],
          "description": "The path that you want Amazon Route 53 to request when performing health checks. The path can be any value for which your endpoint will return an HTTP status code of 2xx or 3xx when the endpoint is healthy, for example the file /docs/route53-health-check.html.\nMutually exclusive with I(type='TCP').\nThe path must begin with a /\nMaximum 255 characters.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Specifies the action to take.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "string_match": {
          "aliases": [],
          "description": "If the check type is HTTP_STR_MATCH or HTTP_STR_MATCH, the string that you want Amazon Route 53 to search for in the response body from the specified resource. If the string appears in the first 5120 bytes of the response body, Amazon Route 53 considers the resource healthy.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "A hash/dictionary of tags to set on the health check.",
          "type": "dict",
          "required": false,
          "version_added": "2.1.0",
          "suboptions": {}
        },
        "type": {
          "aliases": [],
          "description": "The type of health check that you want to create, which indicates how Amazon Route 53 determines whether an endpoint is healthy.",
          "type": "str",
          "required": true,
          "choices": [
            "HTTP",
            "HTTPS",
            "HTTP_STR_MATCH",
            "HTTPS_STR_MATCH",
            "TCP"
          ],
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Manage health-checks in Amazons Route53 DNS service",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create a health-check for host1.example.com and use it in record\n  community.aws.route53_health_check:\n    state: present\n    fqdn: host1.example.com\n    type: HTTP_STR_MATCH\n    resource_path: /\n    string_match: \"Hello\"\n    request_interval: 10\n    failure_threshold: 2\n  register: my_health_check\n\n- community.aws.route53:\n    action: create\n    zone: \"example.com\"\n    type: CNAME\n    record: \"www.example.com\"\n    value: host1.example.com\n    ttl: 30\n    # Routing policy\n    identifier: \"host1@www\"\n    weight: 100\n    health_check: \"{{ my_health_check.health_check.id }}\"\n\n- name: Delete health-check\n  community.aws.route53_health_check:\n    state: absent\n    fqdn: host1.example.com\n"
  },
  "community.aws.route53_info": {
    "doc": {
      "description": "Gets various details related to Route53 zone, record set or health check details.\nThis module was called C(route53_facts) before Ansible 2.9. The usage did not change.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "change_id": {
          "aliases": [],
          "description": "The ID of the change batch request.\nThe value that you specify here is the value that ChangeResourceRecordSets returned in the Id element when you submitted the request.\nRequired if I(query=change).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "delegation_set_id": {
          "aliases": [],
          "description": "The DNS Zone delegation set ID.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "dns_name": {
          "aliases": [],
          "description": "The first name in the lexicographic ordering of domain names that you want the list_command to start listing from.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "health_check_id": {
          "aliases": [],
          "description": "The ID of the health check.\nRequired if C(query) is set to C(health_check) and C(health_check_method) is set to C(details) or C(status) or C(failure_reason).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "health_check_method": {
          "aliases": [],
          "description": "This is used in conjunction with query: health_check. It allows for listing details, counts or tags of various health check details.",
          "default": "list",
          "type": "str",
          "required": false,
          "choices": [
            "list",
            "details",
            "status",
            "failure_reason",
            "count",
            "tags"
          ],
          "suboptions": {}
        },
        "hosted_zone_id": {
          "aliases": [],
          "description": "The Hosted Zone ID of the DNS zone.\nRequired if I(query) is set to I(hosted_zone) and I(hosted_zone_method) is set to I(details).\nRequired if I(query) is set to I(record_sets).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "hosted_zone_method": {
          "aliases": [],
          "description": "This is used in conjunction with query: hosted_zone. It allows for listing details, counts or tags of various hosted zone details.",
          "default": "list",
          "type": "str",
          "required": false,
          "choices": [
            "details",
            "list",
            "list_by_name",
            "count",
            "tags"
          ],
          "suboptions": {}
        },
        "max_items": {
          "aliases": [],
          "description": "Maximum number of items to return for various get/list requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "next_marker": {
          "aliases": [],
          "description": "Some requests such as list_command: hosted_zones will return a maximum number of entries - EG 100 or the number specified by I(max_items). If the number of entries exceeds this maximum another request can be sent using the NextMarker entry from the first response to get the next page of results.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "query": {
          "aliases": [],
          "description": "Specifies the query action to take.",
          "type": "str",
          "required": true,
          "choices": [
            "change",
            "checker_ip_range",
            "health_check",
            "hosted_zone",
            "record_sets",
            "reusable_delegation_set"
          ],
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_id": {
          "aliases": [
            "resource_ids"
          ],
          "description": "The ID/s of the specified resource/s.\nRequired if I(query=health_check) and I(health_check_method=tags).\nRequired if I(query=hosted_zone) and I(hosted_zone_method=tags).",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "start_record_name": {
          "aliases": [],
          "description": "The first name in the lexicographic ordering of domain names that you want the list_command: record_sets to start listing from.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "type": {
          "aliases": [],
          "description": "The type of DNS record.",
          "type": "str",
          "required": false,
          "choices": [
            "A",
            "CNAME",
            "MX",
            "AAAA",
            "TXT",
            "PTR",
            "SRV",
            "SPF",
            "CAA",
            "NS"
          ],
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Retrieves route53 details using AWS methods",
      "version_added": "1.0.0"
    },
    "examples": "\n# Simple example of listing all hosted zones\n- name: List all hosted zones\n  community.aws.route53_info:\n    query: hosted_zone\n  register: hosted_zones\n\n# Getting a count of hosted zones\n- name: Return a count of all hosted zones\n  community.aws.route53_info:\n    query: hosted_zone\n    hosted_zone_method: count\n  register: hosted_zone_count\n\n- name: List the first 20 resource record sets in a given hosted zone\n  community.aws.route53_info:\n    profile: account_name\n    query: record_sets\n    hosted_zone_id: ZZZ1111112222\n    max_items: 20\n  register: record_sets\n\n- name: List first 20 health checks\n  community.aws.route53_info:\n    query: health_check\n    health_check_method: list\n    max_items: 20\n  register: health_checks\n\n- name: Get health check last failure_reason\n  community.aws.route53_info:\n    query: health_check\n    health_check_method: failure_reason\n    health_check_id: 00000000-1111-2222-3333-12345678abcd\n  register: health_check_failure_reason\n\n- name: Retrieve reusable delegation set details\n  community.aws.route53_info:\n    query: reusable_delegation_set\n    delegation_set_id: delegation id\n  register: delegation_sets\n\n- name: setup of example for using next_marker\n  community.aws.route53_info:\n    query: hosted_zone\n    max_items: 1\n  register: first_info\n\n- name: example for using next_marker\n  community.aws.route53_info:\n    query: hosted_zone\n    next_marker: \"{{ first_info.NextMarker }}\"\n    max_items: 1\n  when: \"{{ 'NextMarker' in first_info }}\"\n\n- name: retrieve host entries starting with host1.workshop.test.io\n  block:\n    - name: grab zone id\n      community.aws.route53_zone:\n        zone: \"test.io\"\n      register: AWSINFO\n\n    - name: grab Route53 record information\n      community.aws.route53_info:\n        type: A\n        query: record_sets\n        hosted_zone_id: \"{{ AWSINFO.zone_id }}\"\n        start_record_name: \"host1.workshop.test.io\"\n      register: RECORDS\n"
  },
  "community.aws.route53_zone": {
    "doc": {
      "description": "Creates and deletes Route53 private and public zones.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "comment": {
          "aliases": [],
          "description": "Comment associated with the zone.",
          "default": "",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "delegation_set_id": {
          "aliases": [],
          "description": "The reusable delegation set ID to be associated with the zone.\nNote that you can't associate a reusable delegation set with a private hosted zone.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "hosted_zone_id": {
          "aliases": [],
          "description": "The unique zone identifier you want to delete or \"all\" if there are many zones with the same domain name.\nRequired if there are multiple zones identified with the above options.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "purge_tags": {
          "aliases": [],
          "description": "Delete any tags not specified in the task that are on the zone. This means you have to specify all the desired tags on each task affecting a zone.",
          "default": "False",
          "type": "bool",
          "required": false,
          "version_added": "2.1.0",
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether or not the zone should exist or not.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "A hash/dictionary of tags to add to the new instance or to add/remove from an existing one.",
          "type": "dict",
          "required": false,
          "version_added": "2.1.0",
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "vpc_id": {
          "aliases": [],
          "description": "The VPC ID the zone should be a part of (if this is going to be a private zone).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "vpc_region": {
          "aliases": [],
          "description": "The VPC Region the zone should be a part of (if this is going to be a private zone).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "zone": {
          "aliases": [],
          "description": "The DNS zone record (eg: foo.com.)",
          "type": "str",
          "required": true,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "add or delete Route53 zones",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: create a public zone\n  community.aws.route53_zone:\n    zone: example.com\n    comment: this is an example\n\n- name: delete a public zone\n  community.aws.route53_zone:\n    zone: example.com\n    state: absent\n\n- name: create a private zone\n  community.aws.route53_zone:\n    zone: devel.example.com\n    vpc_id: '{{ myvpc_id }}'\n    vpc_region: us-west-2\n    comment: developer domain\n\n- name: create a public zone associated with a specific reusable delegation set\n  community.aws.route53_zone:\n    zone: example.com\n    comment: reusable delegation set example\n    delegation_set_id: A1BCDEF2GHIJKL\n\n- name: create a public zone with tags\n  community.aws.route53_zone:\n    zone: example.com\n    comment: this is an example\n    tags:\n        Owner: Ansible Team\n\n- name: modify a public zone, removing all previous tags and adding a new one\n  community.aws.route53_zone:\n    zone: example.com\n    comment: this is an example\n    tags:\n        Support: Ansible Community\n    purge_tags: true\n"
  },
  "community.aws.s3_bucket_notification": {
    "doc": {
      "description": "This module allows the management of AWS Lambda function bucket event mappings via the Ansible framework. Use module M(community.aws.lambda) to manage the lambda function itself, M(community.aws.lambda_alias) to manage function aliases and M(community.aws.lambda_policy) to modify lambda permissions.",
      "has_action": false,
      "notes": "This module heavily depends on M(community.aws.lambda_policy) as you need to allow C(lambda:InvokeFunction) permission for your lambda function.\nIf parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "bucket_name": {
          "aliases": [],
          "description": "S3 bucket name.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "event_name": {
          "aliases": [],
          "description": "Unique name for event notification on bucket.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "events": {
          "aliases": [],
          "description": "Events that you want to be triggering notifications. You can select multiple events to send to the same destination, you can set up different events to send to different destinations, and you can set up a prefix or suffix for an event. However, for each bucket, individual events cannot have multiple configurations with overlapping prefixes or suffixes that could match the same object key.\nRequired when I(state=present).",
          "type": "list",
          "required": false,
          "choices": [
            "s3:ObjectCreated:*",
            "s3:ObjectCreated:Put",
            "s3:ObjectCreated:Post",
            "s3:ObjectCreated:Copy",
            "s3:ObjectCreated:CompleteMultipartUpload",
            "s3:ObjectRemoved:*",
            "s3:ObjectRemoved:Delete",
            "s3:ObjectRemoved:DeleteMarkerCreated",
            "s3:ObjectRestore:Post",
            "s3:ObjectRestore:Completed",
            "s3:ReducedRedundancyLostObject"
          ],
          "elements": "str",
          "suboptions": {}
        },
        "lambda_alias": {
          "aliases": [],
          "description": "Name of the Lambda function alias.\nMutually exclusive with I(lambda_version).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "lambda_function_arn": {
          "aliases": [
            "function_arn"
          ],
          "description": "The ARN of the lambda function.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "lambda_version": {
          "aliases": [],
          "description": "Version of the Lambda function.\nMutually exclusive with I(lambda_alias).",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "prefix": {
          "aliases": [],
          "description": "Optional prefix to limit the notifications to objects with keys that start with matching characters.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Describes the desired state.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "suffix": {
          "aliases": [],
          "description": "Optional suffix to limit the notifications to objects with keys that end with matching characters.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Creates, updates or deletes S3 Bucket notification for lambda",
      "version_added": "1.0.0"
    },
    "examples": "\n---\n# Example that creates a lambda event notification for a bucket\n- name: Process jpg image\n  community.aws.s3_bucket_notification:\n    state: present\n    event_name: on_file_add_or_remove\n    bucket_name: test-bucket\n    function_name: arn:aws:lambda:us-east-2:526810320200:function:test-lambda\n    events: [\"s3:ObjectCreated:*\", \"s3:ObjectRemoved:*\"]\n    prefix: images/\n    suffix: .jpg\n"
  },
  "community.aws.s3_lifecycle": {
    "doc": {
      "description": "Manage S3 bucket lifecycle rules in AWS.",
      "has_action": false,
      "notes": "If specifying expiration time as days then transition time must also be specified in days.\nIf specifying expiration time as a date then transition time must also be specified as a date.\nIf parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "expiration_date": {
          "aliases": [],
          "description": "Indicates the lifetime of the objects that are subject to the rule by the date they will expire.\nThe value must be ISO-8601 format, the time must be midnight and a GMT timezone must be specified.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "expiration_days": {
          "aliases": [],
          "description": "Indicates the lifetime, in days, of the objects that are subject to the rule.\nThe value must be a non-zero positive integer.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the S3 bucket.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "noncurrent_version_expiration_days": {
          "aliases": [],
          "description": "The number of days after which non-current versions should be deleted.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "noncurrent_version_storage_class": {
          "aliases": [],
          "description": "The storage class to which non-current versions are transitioned.",
          "default": "glacier",
          "type": "str",
          "required": false,
          "choices": [
            "glacier",
            "onezone_ia",
            "standard_ia",
            "intelligent_tiering",
            "deep_archive"
          ],
          "suboptions": {}
        },
        "noncurrent_version_transition_days": {
          "aliases": [],
          "description": "The number of days after which non-current versions will be transitioned to the storage class specified in I(noncurrent_version_storage_class).",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "noncurrent_version_transitions": {
          "aliases": [],
          "description": "A list of transition behaviors to be applied to noncurrent versions for the rule.\nEach storage class may be used only once. Each transition behavior contains these elements I(transition_days) I(storage_class)",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {}
        },
        "prefix": {
          "aliases": [],
          "description": "Prefix identifying one or more objects to which the rule applies.\nIf no prefix is specified, the rule will apply to the whole bucket.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "purge_transitions": {
          "aliases": [],
          "description": "Whether to replace all the current transition(s) with the new transition(s).\nWhen C(false), the provided transition(s) will be added, replacing transitions with the same storage_class. When true, existing transitions will be removed and replaced with the new transition(s)",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "requester_pays": {
          "aliases": [],
          "description": "The I(requester_pays) option does nothing and will be removed after 2022-06-01",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "rule_id": {
          "aliases": [],
          "description": "Unique identifier for the rule.\nThe value cannot be longer than 255 characters.\nA unique value for the rule will be generated if no value is provided.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Create or remove the lifecycle rule.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "status": {
          "aliases": [],
          "description": "If C(enabled), the rule is currently being applied.\nIf C(disabled), the rule is not currently being applied.",
          "default": "enabled",
          "type": "str",
          "required": false,
          "choices": [
            "enabled",
            "disabled"
          ],
          "suboptions": {}
        },
        "storage_class": {
          "aliases": [],
          "description": "The storage class to transition to.",
          "default": "glacier",
          "type": "str",
          "required": false,
          "choices": [
            "glacier",
            "onezone_ia",
            "standard_ia",
            "intelligent_tiering",
            "deep_archive"
          ],
          "suboptions": {}
        },
        "transition_date": {
          "aliases": [],
          "description": "Indicates the lifetime of the objects that are subject to the rule by the date they will transition to a different storage class.\nThe value must be ISO-8601 format, the time must be midnight and a GMT timezone must be specified.\nIf (transition_days) is not specified, this parameter is required.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "transition_days": {
          "aliases": [],
          "description": "Indicates when, in days, an object transitions to a different storage class.\nIf I(transition_date) is not specified, this parameter is required.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "transitions": {
          "aliases": [],
          "description": "A list of transition behaviors to be applied to the rule.\nEach storage class may be used only once. Each transition behavior may contain these elements I(transition_days) I(transition_date) I(storage_class)",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "wait": {
          "aliases": [],
          "description": "Wait for the configuration to complete before returning.",
          "default": "False",
          "type": "bool",
          "required": false,
          "version_added": "1.5.0",
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Manage S3 bucket lifecycle rules in AWS",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n- name: Configure a lifecycle rule on a bucket to expire (delete) items with a prefix of /logs/ after 30 days\n  community.aws.s3_lifecycle:\n    name: mybucket\n    expiration_days: 30\n    prefix: logs/\n    status: enabled\n    state: present\n\n- name: Configure a lifecycle rule to transition all items with a prefix of /logs/ to glacier after 7 days and then delete after 90 days\n  community.aws.s3_lifecycle:\n    name: mybucket\n    transition_days: 7\n    expiration_days: 90\n    prefix: logs/\n    status: enabled\n    state: present\n\n# Note that midnight GMT must be specified.\n# Be sure to quote your date strings\n- name: Configure a lifecycle rule to transition all items with a prefix of /logs/ to glacier on 31 Dec 2020 and then delete on 31 Dec 2030.\n  community.aws.s3_lifecycle:\n    name: mybucket\n    transition_date: \"2020-12-30T00:00:00.000Z\"\n    expiration_date: \"2030-12-30T00:00:00.000Z\"\n    prefix: logs/\n    status: enabled\n    state: present\n\n- name: Disable the rule created above\n  community.aws.s3_lifecycle:\n    name: mybucket\n    prefix: logs/\n    status: disabled\n    state: present\n\n- name: Delete the lifecycle rule created above\n  community.aws.s3_lifecycle:\n    name: mybucket\n    prefix: logs/\n    state: absent\n\n- name: Configure a lifecycle rule to transition all backup files older than 31 days in /backups/ to standard infrequent access class.\n  community.aws.s3_lifecycle:\n    name: mybucket\n    prefix: backups/\n    storage_class: standard_ia\n    transition_days: 31\n    state: present\n    status: enabled\n\n- name: Configure a lifecycle rule to transition files to infrequent access after 30 days and glacier after 90\n  community.aws.s3_lifecycle:\n    name: mybucket\n    prefix: logs/\n    state: present\n    status: enabled\n    transitions:\n      - transition_days: 30\n        storage_class: standard_ia\n      - transition_days: 90\n        storage_class: glacier\n"
  },
  "community.aws.s3_logging": {
    "doc": {
      "description": "Manage logging facility of an s3 bucket in AWS",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the s3 bucket.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Enable or disable logging.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "target_bucket": {
          "aliases": [],
          "description": "The bucket to log to. Required when state=present.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "target_prefix": {
          "aliases": [],
          "description": "The prefix that should be prepended to the generated log files written to the target_bucket.",
          "default": "",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Manage logging facility of an s3 bucket in AWS",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n- name: Enable logging of s3 bucket mywebsite.com to s3 bucket mylogs\n  community.aws.s3_logging:\n    name: mywebsite.com\n    target_bucket: mylogs\n    target_prefix: logs/mywebsite.com\n    state: present\n\n- name: Remove logging on an s3 bucket\n  community.aws.s3_logging:\n    name: mywebsite.com\n    state: absent\n\n"
  },
  "community.aws.s3_metrics_configuration": {
    "doc": {
      "description": "Manage s3 bucket metrics configuration in AWS which allows to get the CloudWatch request metrics for the objects in a bucket",
      "has_action": false,
      "notes": "This modules manages single metrics configuration, the s3 bucket might have up to 1,000 metrics configurations\nTo request metrics for the entire bucket, create a metrics configuration without a filter\nMetrics configurations are necessary only to enable request metric, bucket-level daily storage metrics are always turned on\nIf parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "bucket_name": {
          "aliases": [],
          "description": "Name of the s3 bucket",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filter_prefix": {
          "aliases": [],
          "description": "A prefix used when evaluating a metrics filter",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filter_tags": {
          "aliases": [
            "filter_tag"
          ],
          "description": "A dictionary of one or more tags used when evaluating a metrics filter",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "id": {
          "aliases": [],
          "description": "The ID used to identify the metrics configuration",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Create or delete metrics configuration",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Manage s3 bucket metrics configuration in AWS",
      "version_added": "1.3.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n- name: Create a metrics configuration that enables metrics for an entire bucket\n  community.aws.s3_metrics_configuration:\n    bucket_name: my-bucket\n    id: EntireBucket\n    state: present\n\n- name: Put a metrics configuration that enables metrics for objects starting with a prefix\n  community.aws.s3_metrics_configuration:\n    bucket_name: my-bucket\n    id: Assets\n    filter_prefix: assets\n    state: present\n\n- name: Put a metrics configuration that enables metrics for objects with specific tag\n  community.aws.s3_metrics_configuration:\n    bucket_name: my-bucket\n    id: Assets\n    filter_tag:\n      kind: asset\n    state: present\n\n- name: Put a metrics configuration that enables metrics for objects that start with a particular prefix and have specific tags applied\n  community.aws.s3_metrics_configuration:\n    bucket_name: my-bucket\n    id: ImportantBlueDocuments\n    filter_prefix: documents\n    filter_tags:\n      priority: high\n      class: blue\n    state: present\n\n- name: Delete metrics configuration\n  community.aws.s3_metrics_configuration:\n    bucket_name: my-bucket\n    id: EntireBucket\n    state: absent\n\n"
  },
  "community.aws.s3_sync": {
    "doc": {
      "description": "The S3 module is great, but it is very slow for a large volume of files- even a dozen will be noticeable. In addition to speed, it handles globbing, inclusions/exclusions, mime types, expiration mapping, recursion, cache control and smart directory mapping.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "bucket": {
          "aliases": [],
          "description": "Bucket name.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "cache_control": {
          "aliases": [],
          "description": "Cache-Control header set on uploaded objects.\nDirectives are separated by commas.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "delete": {
          "aliases": [],
          "description": "Remove remote files that exist in bucket but are not present in the file root.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "exclude": {
          "aliases": [],
          "description": "Shell pattern-style file matching.\nUsed after include to remove files (for instance, skip \"*.txt\")\nFor multiple patterns, comma-separate them.",
          "default": ".*",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "file_change_strategy": {
          "aliases": [],
          "description": "Difference determination method to allow changes-only syncing. Unlike rsync, files are not patched- they are fully skipped or fully uploaded.\ndate_size will upload if file sizes don't match or if local file modified date is newer than s3's version\nchecksum will compare etag values based on s3's implementation of chunked md5s.\nforce will always upload all files.",
          "default": "date_size",
          "type": "str",
          "required": false,
          "choices": [
            "force",
            "checksum",
            "date_size"
          ],
          "suboptions": {}
        },
        "file_root": {
          "aliases": [],
          "description": "File/directory path for synchronization. This is a local path.\nThis root path is scrubbed from the key name, so subdirectories will remain as keys.",
          "type": "path",
          "required": true,
          "suboptions": {}
        },
        "include": {
          "aliases": [],
          "description": "Shell pattern-style file matching.\nUsed before exclude to determine eligible files (for instance, only \"*.gif\")\nFor multiple patterns, comma-separate them.",
          "default": "*",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "key_prefix": {
          "aliases": [],
          "description": "In addition to file path, prepend s3 path with this prefix. Module will add slash at end of prefix if necessary.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "mime_map": {
          "aliases": [],
          "description": "Dict entry from extension to MIME type. This will override any default/sniffed MIME type. For example C({\".txt\": \"application/text\", \".yml\": \"application/text\"})\n",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "mode": {
          "aliases": [],
          "description": "sync direction.",
          "default": "push",
          "type": "str",
          "required": false,
          "choices": [
            "push"
          ],
          "suboptions": {}
        },
        "permission": {
          "aliases": [],
          "description": "Canned ACL to apply to synced files.\nChanging this ACL only changes newly synced files, it does not trigger a full reupload.",
          "type": "str",
          "required": false,
          "choices": [
            "private",
            "public-read",
            "public-read-write",
            "authenticated-read",
            "aws-exec-read",
            "bucket-owner-read",
            "bucket-owner-full-control"
          ],
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "retries": {
          "aliases": [],
          "description": "The I(retries) option does nothing and will be removed after 2022-06-01",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "storage_class": {
          "aliases": [],
          "description": "Storage class to be associated to each object added to the S3 bucket.",
          "default": "STANDARD",
          "type": "str",
          "required": false,
          "choices": [
            "STANDARD",
            "REDUCED_REDUNDANCY",
            "STANDARD_IA",
            "ONEZONE_IA",
            "INTELLIGENT_TIERING",
            "GLACIER",
            "DEEP_ARCHIVE",
            "OUTPOSTS"
          ],
          "version_added": "1.5.0",
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Efficiently upload multiple files to S3",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: basic upload\n  community.aws.s3_sync:\n    bucket: tedder\n    file_root: roles/s3/files/\n\n- name: basic upload using the glacier storage class\n  community.aws.s3_sync:\n    bucket: tedder\n    file_root: roles/s3/files/\n    storage_class: GLACIER\n\n- name: basic individual file upload\n  community.aws.s3_sync:\n    bucket: tedder\n    file_root: roles/s3/files/file_name\n\n- name: all the options\n  community.aws.s3_sync:\n    bucket: tedder\n    file_root: roles/s3/files\n    mime_map:\n      .yml: application/text\n      .json: application/text\n    key_prefix: config_files/web\n    file_change_strategy: force\n    permission: public-read\n    cache_control: \"public, max-age=31536000\"\n    storage_class: \"GLACIER\"\n    include: \"*\"\n    exclude: \"*.txt,.*\"\n"
  },
  "community.aws.s3_website": {
    "doc": {
      "description": "Configure an s3 bucket as a website",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "error_key": {
          "aliases": [],
          "description": "The object key name to use when a 4XX class error occurs. To remove an error key, set to None.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the s3 bucket",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "redirect_all_requests": {
          "aliases": [],
          "description": "Describes the redirect behavior for every request to this s3 bucket website endpoint",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Add or remove s3 website configuration",
          "type": "str",
          "required": true,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "suffix": {
          "aliases": [],
          "description": "Suffix that is appended to a request that is for a directory on the website endpoint (e.g. if the suffix is index.html and you make a request to samplebucket/images/ the data that is returned will be for the object with the key name images/index.html). The suffix must not include a slash character.\n",
          "default": "index.html",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Configure an s3 bucket as a website",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n- name: Configure an s3 bucket to redirect all requests to example.com\n  community.aws.s3_website:\n    name: mybucket.com\n    redirect_all_requests: example.com\n    state: present\n\n- name: Remove website configuration from an s3 bucket\n  community.aws.s3_website:\n    name: mybucket.com\n    state: absent\n\n- name: Configure an s3 bucket as a website with index and error pages\n  community.aws.s3_website:\n    name: mybucket.com\n    suffix: home.htm\n    error_key: errors/404.htm\n    state: present\n\n"
  },
  "community.aws.sns": {
    "doc": {
      "description": "Sends a notification to a topic on your Amazon SNS account.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "application": {
          "aliases": [],
          "description": "Message to send to application subscriptions.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "email": {
          "aliases": [],
          "description": "Message to send to email subscriptions.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "email_json": {
          "aliases": [],
          "description": "Message to send to email-json subscriptions.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "http": {
          "aliases": [],
          "description": "Message to send to HTTP subscriptions.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "https": {
          "aliases": [],
          "description": "Message to send to HTTPS subscriptions.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "lambda": {
          "aliases": [],
          "description": "Message to send to Lambda subscriptions.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "message_attributes": {
          "aliases": [],
          "description": "Dictionary of message attributes. These are optional structured data entries to be sent along to the endpoint.\nThis is in AWS's distinct Name/Type/Value format; see example below.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "message_structure": {
          "aliases": [],
          "description": "The payload format to use for the message.\nThis must be 'json' to support protocol-specific messages (C(http), C(https), C(email), C(sms), C(sqs)).\nIt must be 'string' to support I(message_attributes).",
          "default": "json",
          "type": "str",
          "required": false,
          "choices": [
            "json",
            "string"
          ],
          "suboptions": {}
        },
        "msg": {
          "aliases": [
            "default"
          ],
          "description": "Default message for subscriptions without a more specific message.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "sms": {
          "aliases": [],
          "description": "Message to send to SMS subscriptions.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "sqs": {
          "aliases": [],
          "description": "Message to send to SQS subscriptions.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subject": {
          "aliases": [],
          "description": "Message subject",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "topic": {
          "aliases": [],
          "description": "The name or ARN of the topic to publish to.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Send Amazon Simple Notification Service messages",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Send default notification message via SNS\n  community.aws.sns:\n    msg: '{{ inventory_hostname }} has completed the play.'\n    subject: Deploy complete!\n    topic: deploy\n  delegate_to: localhost\n\n- name: Send notification messages via SNS with short message for SMS\n  community.aws.sns:\n    msg: '{{ inventory_hostname }} has completed the play.'\n    sms: deployed!\n    subject: Deploy complete!\n    topic: deploy\n  delegate_to: localhost\n\n- name: Send message with message_attributes\n  community.aws.sns:\n    topic: \"deploy\"\n    msg: \"message with extra details!\"\n    message_attributes:\n      channel:\n        data_type: String\n        string_value: \"mychannel\"\n      color:\n        data_type: String\n        string_value: \"green\"\n  delegate_to: localhost\n"
  },
  "community.aws.sns_topic": {
    "doc": {
      "description": "The M(community.aws.sns_topic) module allows you to create, delete, and manage subscriptions for AWS SNS topics.\nAs of 2.6, this module can be use to subscribe and unsubscribe to topics outside of your AWS account.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "delivery_policy": {
          "aliases": [],
          "description": "Delivery policy to apply to the SNS topic.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "http": {
              "aliases": [],
              "description": "Delivery policy for HTTP(S) messages.\nSee U(https://docs.aws.amazon.com/sns/latest/dg/sns-message-delivery-retries.html) for more information.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "defaultHealthyRetryPolicy": {
                  "aliases": [],
                  "description": "Retry policy for HTTP(S) messages.",
                  "type": "dict",
                  "required": true,
                  "suboptions": {
                    "backoffFunction": {
                      "aliases": [],
                      "description": "The function for backoff between retries.",
                      "type": "str",
                      "required": true,
                      "choices": [
                        "arithmetic",
                        "exponential",
                        "geometric",
                        "linear"
                      ],
                      "suboptions": {}
                    },
                    "maxDelayTarget": {
                      "aliases": [],
                      "description": "The maximum delay for a retry.",
                      "type": "int",
                      "required": true,
                      "suboptions": {}
                    },
                    "minDelayTarget": {
                      "aliases": [],
                      "description": "The minimum delay for a retry.",
                      "type": "int",
                      "required": true,
                      "suboptions": {}
                    },
                    "numMaxDelayRetries": {
                      "aliases": [],
                      "description": "The number of retries with the maximum delay between them.",
                      "type": "int",
                      "required": true,
                      "suboptions": {}
                    },
                    "numMinDelayRetries": {
                      "aliases": [],
                      "description": "The number of retries with just the minimum delay between them.",
                      "type": "int",
                      "required": true,
                      "suboptions": {}
                    },
                    "numNoDelayRetries": {
                      "aliases": [],
                      "description": "The number of retries to be performmed immediately.",
                      "type": "int",
                      "required": true,
                      "suboptions": {}
                    },
                    "numRetries": {
                      "aliases": [],
                      "description": "The total number of retries.",
                      "type": "int",
                      "required": true,
                      "suboptions": {}
                    }
                  }
                },
                "defaultThrottlePolicy": {
                  "aliases": [],
                  "description": "Throttle the rate of messages sent to subsriptions.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "maxReceivesPerSecond": {
                      "aliases": [],
                      "description": "The maximum number of deliveries per second per subscription.",
                      "type": "int",
                      "required": true,
                      "suboptions": {}
                    }
                  }
                },
                "disableSubscriptionOverrides": {
                  "aliases": [],
                  "description": "Applies this policy to all subscriptions, even if they have their own policies.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                }
              }
            }
          }
        },
        "display_name": {
          "aliases": [],
          "description": "Display name of the topic.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name or ARN of the SNS topic to manage.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "policy": {
          "aliases": [],
          "description": "Policy to apply to the SNS topic.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "purge_subscriptions": {
          "aliases": [],
          "description": "Whether to purge any subscriptions not listed here. NOTE: AWS does not allow you to purge any PendingConfirmation subscriptions, so if any exist and would be purged, they are silently skipped. This means that somebody could come back later and confirm the subscription. Sorry. Blame Amazon.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether to create or destroy an SNS topic.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "subscriptions": {
          "aliases": [],
          "description": "List of subscriptions to apply to the topic. Note that AWS requires subscriptions to be confirmed, so you will need to confirm any new subscriptions.",
          "default": "[]",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "endpoint": {
              "aliases": [],
              "description": "Endpoint of subscription.",
              "required": true,
              "suboptions": {}
            },
            "protocol": {
              "aliases": [],
              "description": "Protocol of subscription.",
              "required": true,
              "suboptions": {}
            }
          }
        },
        "topic_type": {
          "aliases": [],
          "description": "The type of topic that should be created. Either Standard for FIFO (first-in, first-out)",
          "default": "standard",
          "type": "str",
          "required": false,
          "choices": [
            "standard",
            "fifo"
          ],
          "version_added": "2.0.0",
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Manages AWS SNS topics and subscriptions",
      "version_added": "1.0.0"
    },
    "examples": "\n\n- name: Create alarm SNS topic\n  community.aws.sns_topic:\n    name: \"alarms\"\n    state: present\n    display_name: \"alarm SNS topic\"\n    delivery_policy:\n      http:\n        defaultHealthyRetryPolicy:\n            minDelayTarget: 2\n            maxDelayTarget: 4\n            numRetries: 3\n            numMaxDelayRetries: 5\n            backoffFunction: \"<linear|arithmetic|geometric|exponential>\"\n        disableSubscriptionOverrides: True\n        defaultThrottlePolicy:\n            maxReceivesPerSecond: 10\n    subscriptions:\n      - endpoint: \"my_email_address@example.com\"\n        protocol: \"email\"\n      - endpoint: \"my_mobile_number\"\n        protocol: \"sms\"\n\n"
  },
  "community.aws.sqs_queue": {
    "doc": {
      "description": "Create or delete AWS SQS queues.\nUpdate attributes on existing queues.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "content_based_deduplication": {
          "aliases": [],
          "description": "Enables content-based deduplication. Used for FIFOs only.\nDefaults to C(false).",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "delay_seconds": {
          "aliases": [
            "delivery_delay"
          ],
          "description": "The delivery delay in seconds.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "kms_data_key_reuse_period_seconds": {
          "aliases": [
            "kms_data_key_reuse_period"
          ],
          "description": "The length of time, in seconds, for which Amazon SQS can reuse a data key to encrypt or decrypt messages before calling AWS KMS again.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "kms_master_key_id": {
          "aliases": [],
          "description": "The ID of an AWS-managed customer master key (CMK) for Amazon SQS or a custom CMK.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "maximum_message_size": {
          "aliases": [],
          "description": "The maximum message size in bytes.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "message_retention_period": {
          "aliases": [],
          "description": "The message retention period in seconds.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the queue.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "policy": {
          "aliases": [],
          "description": "The JSON dict policy to attach to queue.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "purge_tags": {
          "aliases": [],
          "description": "Remove tags not listed in I(tags).",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "queue_type": {
          "aliases": [],
          "description": "Standard or FIFO queue.\nI(queue_type) can only be set at queue creation and will otherwise be ignored.",
          "default": "standard",
          "type": "str",
          "required": false,
          "choices": [
            "standard",
            "fifo"
          ],
          "suboptions": {}
        },
        "receive_message_wait_time_seconds": {
          "aliases": [
            "receive_message_wait_time"
          ],
          "description": "The receive message wait time in seconds.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "redrive_policy": {
          "aliases": [],
          "description": "JSON dict with the redrive_policy (see example).",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Create or delete the queue.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Tag dict to apply to the queue.\nTo remove all tags set I(tags={}) and I(purge_tags=true).",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "visibility_timeout": {
          "aliases": [
            "default_visibility_timeout"
          ],
          "description": "The default visibility timeout in seconds.",
          "type": "int",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Creates or deletes AWS SQS queues",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create SQS queue with redrive policy\n  community.aws.sqs_queue:\n    name: my-queue\n    region: ap-southeast-2\n    default_visibility_timeout: 120\n    message_retention_period: 86400\n    maximum_message_size: 1024\n    delivery_delay: 30\n    receive_message_wait_time: 20\n    policy: \"{{ json_dict }}\"\n    redrive_policy:\n      maxReceiveCount: 5\n      deadLetterTargetArn: arn:aws:sqs:eu-west-1:123456789012:my-dead-queue\n\n- name: Drop redrive policy\n  community.aws.sqs_queue:\n    name: my-queue\n    region: ap-southeast-2\n    redrive_policy: {}\n\n- name: Create FIFO queue\n  community.aws.sqs_queue:\n    name: fifo-queue\n    region: ap-southeast-2\n    queue_type: fifo\n    content_based_deduplication: yes\n\n- name: Tag queue\n  community.aws.sqs_queue:\n    name: fifo-queue\n    region: ap-southeast-2\n    tags:\n      example: SomeValue\n\n- name: Configure Encryption, automatically uses a new data key every hour\n  community.aws.sqs_queue:\n    name: fifo-queue\n    region: ap-southeast-2\n    kms_master_key_id: alias/MyQueueKey\n    kms_data_key_reuse_period_seconds: 3600\n\n- name: Delete SQS queue\n  community.aws.sqs_queue:\n    name: my-queue\n    region: ap-southeast-2\n    state: absent\n"
  },
  "community.aws.sts_assume_role": {
    "doc": {
      "description": "Assume a role using AWS Security Token Service and obtain temporary credentials.",
      "has_action": false,
      "notes": "In order to use the assumed role in a following playbook task you must pass the access_key, access_secret and access_token.\nIf parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "duration_seconds": {
          "aliases": [],
          "description": "The duration, in seconds, of the role session. The value can range from 900 seconds (15 minutes) to 43200 seconds (12 hours).\nThe max depends on the IAM role's sessions duration setting.\nBy default, the value is set to 3600 seconds.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "external_id": {
          "aliases": [],
          "description": "A unique identifier that is used by third parties to assume a role in their customers' accounts.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "mfa_serial_number": {
          "aliases": [],
          "description": "The identification number of the MFA device that is associated with the user who is making the AssumeRole call.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "mfa_token": {
          "aliases": [],
          "description": "The value provided by the MFA device, if the trust policy of the role being assumed requires MFA.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "policy": {
          "aliases": [],
          "description": "Supplemental policy to use in addition to assumed role's policies.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "role_arn": {
          "aliases": [],
          "description": "The Amazon Resource Name (ARN) of the role that the caller is assuming U(https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html#Identifiers_ARNs).",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "role_session_name": {
          "aliases": [],
          "description": "Name of the role's session - will be used by CloudTrail.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Assume a role using AWS Security Token Service and obtain temporary credentials",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n# Assume an existing role (more details: https://docs.aws.amazon.com/STS/latest/APIReference/API_AssumeRole.html)\n- community.aws.sts_assume_role:\n    role_arn: \"arn:aws:iam::123456789012:role/someRole\"\n    role_session_name: \"someRoleSession\"\n  register: assumed_role\n\n# Use the assumed role above to tag an instance in account 123456789012\n- amazon.aws.ec2_tag:\n    aws_access_key: \"{{ assumed_role.sts_creds.access_key }}\"\n    aws_secret_key: \"{{ assumed_role.sts_creds.secret_key }}\"\n    security_token: \"{{ assumed_role.sts_creds.session_token }}\"\n    resource: i-xyzxyz01\n    state: present\n    tags:\n      MyNewTag: value\n\n"
  },
  "community.aws.sts_session_token": {
    "doc": {
      "description": "Obtain a session token from the AWS Security Token Service.",
      "has_action": false,
      "notes": "In order to use the session token in a following playbook task you must pass the I(access_key), I(access_secret) and I(access_token).\nIf parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "duration_seconds": {
          "aliases": [],
          "description": "The duration, in seconds, of the session token. See U(https://docs.aws.amazon.com/STS/latest/APIReference/API_GetSessionToken.html#API_GetSessionToken_RequestParameters) for acceptable and default values.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "mfa_serial_number": {
          "aliases": [],
          "description": "The identification number of the MFA device that is associated with the user who is making the GetSessionToken call.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "mfa_token": {
          "aliases": [],
          "description": "The value provided by the MFA device, if the trust policy of the user requires MFA.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Obtain a session token from the AWS Security Token Service",
      "version_added": "1.0.0"
    },
    "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n# (more details: https://docs.aws.amazon.com/STS/latest/APIReference/API_GetSessionToken.html)\n- name: Get a session token\n  community.aws.sts_session_token:\n    duration_seconds: 3600\n  register: session_credentials\n\n- name: Use the session token obtained above to tag an instance in account 123456789012\n  amazon.aws.ec2_tag:\n    aws_access_key: \"{{ session_credentials.sts_creds.access_key }}\"\n    aws_secret_key: \"{{ session_credentials.sts_creds.secret_key }}\"\n    security_token: \"{{ session_credentials.sts_creds.session_token }}\"\n    resource: i-xyzxyz01\n    state: present\n    tags:\n        MyNewTag: value\n\n"
  },
  "community.aws.wafv2_ip_set": {
    "doc": {
      "description": "Create, modify and delete IP sets for WAFv2.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "addresses": {
          "aliases": [],
          "description": "Contains an array of strings that specify one or more IP addresses or blocks of IP addresses in Classless Inter-Domain Routing (CIDR) notation.\nRequired when I(state=present).\nWhen I(state=absent) and I(addresses) is defined, only the given IP addresses will be removed from the IP set. The entire IP set itself will stay present.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "Description of the IP set.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ip_address_version": {
          "aliases": [],
          "description": "Specifies whether this is an IPv4 or an IPv6 IP set.\nRequired when I(state=present).",
          "type": "str",
          "required": false,
          "choices": [
            "IPV4",
            "IPV6"
          ],
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the IP set.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "purge_addresses": {
          "aliases": [],
          "description": "When set to C(no), keep the existing addresses in place. Will modify and add, but will not delete.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scope": {
          "aliases": [],
          "description": "Specifies whether this is for an AWS CloudFront distribution or for a regional application, such as API Gateway or Application LoadBalancer.",
          "type": "str",
          "required": true,
          "choices": [
            "CLOUDFRONT",
            "REGIONAL"
          ],
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the rule is present or absent.",
          "type": "str",
          "required": true,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Key value pairs to associate with the resource.\nCurrently tags are not visible. Nor in the web ui, nor via cli and nor in boto3.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "wafv2_ip_set",
      "version_added": "1.5.0"
    },
    "examples": "\n- name: test ip set\n  wafv2_ip_set:\n    name: test02\n    state: present\n    description: hallo eins\n    scope: REGIONAL\n    ip_address_version: IPV4\n    addresses:\n      - 8.8.8.8/32\n      - 8.8.4.4/32\n    tags:\n      A: B\n      C: D\n"
  },
  "community.aws.wafv2_ip_set_info": {
    "doc": {
      "description": "Get information about existing wafv2 ip sets.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the IP set.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scope": {
          "aliases": [],
          "description": "Specifies whether this is for an AWS CloudFront distribution or for a regional application.",
          "type": "str",
          "required": true,
          "choices": [
            "CLOUDFRONT",
            "REGIONAL"
          ],
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "Get information about wafv2 ip sets",
      "version_added": "1.5.0"
    },
    "examples": "\n- name: test ip set\n  wafv2_ip_set_info:\n    name: test02\n    scope: REGIONAL\n"
  },
  "community.aws.wafv2_resources": {
    "doc": {
      "description": "Apply or remove wafv2 to other aws resources.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "arn": {
          "aliases": [],
          "description": "AWS resources (ALB, API Gateway or AppSync GraphQL API) ARN",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the web acl.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scope": {
          "aliases": [],
          "description": "Scope of waf",
          "type": "str",
          "required": false,
          "choices": [
            "CLOUDFRONT",
            "REGIONAL"
          ],
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the rule is present or absent.",
          "type": "str",
          "required": true,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "wafv2_web_acl",
      "version_added": "1.5.0"
    },
    "examples": "\n- name: add test alb to waf string03\n  community.aws.wafv2_resources:\n    name: string03\n    scope: REGIONAL\n    state: present\n    arn: \"arn:aws:elasticloadbalancing:eu-central-1:111111111:loadbalancer/app/test03/dd83ea041ba6f933\"\n"
  },
  "community.aws.wafv2_resources_info": {
    "doc": {
      "description": "List web acl resources.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name wafv2 acl of interest.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scope": {
          "aliases": [],
          "description": "Scope of wafv2 web acl.",
          "type": "str",
          "required": true,
          "choices": [
            "CLOUDFRONT",
            "REGIONAL"
          ],
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "wafv2_resources_info",
      "version_added": "1.5.0"
    },
    "examples": "\n- name: get web acl\n  community.aws.wafv2_resources_info:\n    name: string03\n    scope: REGIONAL\n"
  },
  "community.aws.wafv2_rule_group": {
    "doc": {
      "description": "Create, modify and delete wafv2 rule groups.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "capacity": {
          "aliases": [],
          "description": "capacity of wafv2 rule group.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "cloudwatch_metrics": {
          "aliases": [],
          "description": "Enable cloudwatch metric for wafv2 rule group",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "Description of wafv2 rule group.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "metric_name": {
          "aliases": [],
          "description": "Name of cloudwatch metrics.\nIf not given and cloudwatch_metrics is enabled, the name of the rule group itself will be taken.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the rule group.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "purge_rules": {
          "aliases": [],
          "description": "When set to C(no), keep the existing load balancer rules in place. Will modify and add, but will not delete.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "rules": {
          "aliases": [],
          "description": "The Rule statements used to identify the web requests that you want to allow, block, or count.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {}
        },
        "sampled_requests": {
          "aliases": [],
          "description": "Sampled requests, true or false.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "scope": {
          "aliases": [],
          "description": "Scope of wafv2 rule group.",
          "type": "str",
          "required": true,
          "choices": [
            "CLOUDFRONT",
            "REGIONAL"
          ],
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the rule is present or absent.",
          "type": "str",
          "required": true,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "tags for wafv2 rule group.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "wafv2_web_acl",
      "version_added": "1.5.0"
    },
    "examples": "\n- name: change description\n  community.aws.wafv2_rule_group:\n    name: test02\n    state: present\n    description: hallo eins zwei\n    scope: REGIONAL\n    capacity: 500\n    rules:\n      - name: eins\n        priority: 1\n        action:\n          allow: {}\n        visibility_config:\n          sampled_requests_enabled: yes\n          cloud_watch_metrics_enabled: yes\n          metric_name: fsd\n        statement:\n          ip_set_reference_statement:\n            arn: \"{{ IPSET.arn }}\"\n    cloudwatch_metrics: yes\n    tags:\n      A: B\n      C: D\n  register: out\n\n- name: add rule\n  community.aws.wafv2_rule_group:\n    name: test02\n    state: present\n    description: hallo eins zwei\n    scope: REGIONAL\n    capacity: 500\n    rules:\n      - name: eins\n        priority: 1\n        action:\n          allow: {}\n        visibility_config:\n          sampled_requests_enabled: yes\n          cloud_watch_metrics_enabled: yes\n          metric_name: fsd\n        statement:\n          ip_set_reference_statement:\n            arn: \"{{ IPSET.arn }}\"\n      - name: zwei\n        priority: 2\n        action:\n          block: {}\n        visibility_config:\n          sampled_requests_enabled: yes\n          cloud_watch_metrics_enabled: yes\n          metric_name: ddos\n        statement:\n          or_statement:\n            statements:\n              - byte_match_statement:\n                  search_string: ansible.com\n                  positional_constraint: CONTAINS\n                  field_to_match:\n                    single_header:\n                      name: host\n                  text_transformations:\n                    - type: LOWERCASE\n                      priority: 0\n              - xss_match_statement:\n                  field_to_match:\n                    body: {}\n                  text_transformations:\n                    - type: NONE\n                      priority: 0\n    cloudwatch_metrics: yes\n    tags:\n      A: B\n      C: D\n  register: out\n"
  },
  "community.aws.wafv2_rule_group_info": {
    "doc": {
      "description": "Get informations about existing wafv2 rule groups.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the rule group.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scope": {
          "aliases": [],
          "description": "Scope of wafv2 rule group.",
          "type": "str",
          "required": true,
          "choices": [
            "CLOUDFRONT",
            "REGIONAL"
          ],
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the rule is present or absent.",
          "type": "str",
          "required": true,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "wafv2_web_acl_info",
      "version_added": "1.5.0"
    },
    "examples": "\n- name: rule group info\n  community.aws.wafv2_rule_group_info:\n    name: test02\n    state: present\n    scope: REGIONAL\n"
  },
  "community.aws.wafv2_web_acl": {
    "doc": {
      "description": "Create, modify or delete a wafv2 web acl.",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloudwatch_metrics": {
          "aliases": [],
          "description": "Enable cloudwatch metric for wafv2 web acl.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "default_action": {
          "aliases": [],
          "description": "Default action of the wafv2 web acl.",
          "type": "str",
          "required": false,
          "choices": [
            "Block",
            "Allow"
          ],
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "Description of wafv2 web acl.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "metric_name": {
          "aliases": [],
          "description": "Name of cloudwatch metrics.\nIf not given and cloudwatch_metrics is enabled, the name of the web acl itself will be taken.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the web acl.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "purge_rules": {
          "aliases": [],
          "description": "When set to C(no), keep the existing load balancer rules in place. Will modify and add, but will not delete.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "rules": {
          "aliases": [],
          "description": "The Rule statements used to identify the web requests that you want to allow, block, or count.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "action": {
              "aliases": [],
              "description": "Wether a rule is blocked, allowed or counted.",
              "type": "dict",
              "required": false,
              "suboptions": {}
            },
            "name": {
              "aliases": [],
              "description": "The name of the wafv2 rule",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "priority": {
              "aliases": [],
              "description": "The rule priority",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "statement": {
              "aliases": [],
              "description": "Rule configuration.",
              "type": "dict",
              "required": false,
              "suboptions": {}
            },
            "visibility_config": {
              "aliases": [],
              "description": "Visibility of single wafv2 rule.",
              "type": "dict",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "sampled_requests": {
          "aliases": [],
          "description": "Whether to store a sample of the web requests, true or false.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "scope": {
          "aliases": [],
          "description": "Scope of wafv2 web acl.",
          "type": "str",
          "required": true,
          "choices": [
            "CLOUDFRONT",
            "REGIONAL"
          ],
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the rule is present or absent.",
          "type": "str",
          "required": true,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "tags for wafv2 web acl.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "wafv2_web_acl",
      "version_added": "1.5.0"
    },
    "examples": "\n- name: create web acl\n  community.aws.wafv2_web_acl:\n    name: test05\n    state: present\n    description: hallo eins\n    scope: REGIONAL\n    default_action: Allow\n    sampled_requests: no\n    cloudwatch_metrics: yes\n    metric_name: blub\n    rules:\n      - name: zwei\n        priority: 2\n        action:\n          block: {}\n        visibility_config:\n          sampled_requests_enabled: yes\n          cloud_watch_metrics_enabled: yes\n          metric_name: ddos\n        statement:\n          xss_match_statement:\n            field_to_match:\n              body: {}\n            text_transformations:\n              - type: NONE\n                priority: 0\n      - name: admin_protect\n        priority: 1\n        override_action:\n          none: {}\n        visibility_config:\n          sampled_requests_enabled: yes\n          cloud_watch_metrics_enabled: yes\n          metric_name: fsd\n        statement:\n          managed_rule_group_statement:\n            vendor_name: AWS\n            name: AWSManagedRulesAdminProtectionRuleSet\n    tags:\n      A: B\n      C: D\n  register: out\n"
  },
  "community.aws.wafv2_web_acl_info": {
    "doc": {
      "description": "Info about web acl",
      "has_action": false,
      "notes": "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_PROFILE) or C(AWS_DEFAULT_PROFILE), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION), C(AWS_CA_BUNDLE)\nWhen no credentials are explicitly provided the AWS SDK (boto3) that Ansible uses will fall back to its configuration files (typically C(~/.aws/credentials)). See U(https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more information.\nModules based on the original AWS SDK (boto) may read their default configuration from different files. See U(https://boto.readthedocs.io/en/latest/boto_config_tut.html) for more information.\nC(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be defined in the configuration files.",
      "options": {
        "aws_access_key": {
          "aliases": [
            "ec2_access_key",
            "access_key"
          ],
          "description": "C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_access_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aws_ca_bundle": {
          "aliases": [],
          "description": "The location of a CA Bundle to use when validating SSL certificates.\nNot used by boto 2 based modules.\nNote: The CA Bundle is read 'module' side and may need to be explicitly copied from the controller if not run locally.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "aws_config": {
          "aliases": [],
          "description": "A dictionary to modify the botocore configuration.\nParameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).\nOnly the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "aws_secret_key": {
          "aliases": [
            "ec2_secret_key",
            "secret_key"
          ],
          "description": "C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(aws_secret_key) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug_botocore_endpoint_logs": {
          "aliases": [],
          "description": "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ec2_url": {
          "aliases": [
            "aws_endpoint_url",
            "endpoint_url"
          ],
          "description": "URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the web acl.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "profile": {
          "aliases": [
            "aws_profile"
          ],
          "description": "Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.\nI(aws_access_key), I(aws_secret_key) and I(security_token) will be made mutually exclusive with I(profile) after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [
            "aws_region",
            "ec2_region"
          ],
          "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scope": {
          "aliases": [],
          "description": "Scope of wafv2 web acl.",
          "type": "str",
          "required": true,
          "choices": [
            "CLOUDFRONT",
            "REGIONAL"
          ],
          "suboptions": {}
        },
        "security_token": {
          "aliases": [
            "aws_security_token",
            "access_token"
          ],
          "description": "C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.\nIf I(profile) is set this parameter is ignored.\nPassing the I(security_token) and I(profile) options at the same time has been deprecated and the options will be made mutually exclusive after 2022-06-01.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "When set to \"no\", SSL certificates will not be validated for communication with the AWS APIs.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.6",
        "boto3 >= 1.15.0",
        "botocore >= 1.18.0"
      ],
      "short_description": "wafv2_web_acl",
      "version_added": "1.5.0"
    },
    "examples": "\n- name: get web acl\n  community.aws.wafv2_web_acl_info:\n    name: test05\n    scope: REGIONAL\n  register: out\n"
  }
}