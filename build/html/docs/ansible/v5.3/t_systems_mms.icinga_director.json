{
  "t_systems_mms.icinga_director.icinga_command": {
    "doc": {
      "description": "Add or remove a command to Icinga2 through the director API.",
      "has_action": false,
      "notes": "This module supports check mode.",
      "options": {
        "append": {
          "aliases": [],
          "description": "Do not overwrite the whole object but instead append the defined properties.\nNote - Appending to existing vars, imports or any other list/dict is not possible. You have to overwrite the complete list/dict.\nNote - Variables that are set by default will also be applied, even if not set.",
          "type": "bool",
          "required": false,
          "choices": [
            "True",
            "False"
          ],
          "version_added": "1.25.0",
          "suboptions": {}
        },
        "arguments": {
          "aliases": [],
          "description": "Arguments of the command.\nEach argument can take either a string, a json or a dict\nWhen using a dict as argument value, the following properties are supported. C(skip_key), C(repeat_key), C(required), C(order), C(description)), C(set_if), C(value).\nThe C(value) property can be either a string, a json or a dict. When used as a dict, you can define its C(type) as C(Function) and set its C(body) property as an Icinga DSL piece of config.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "client_cert": {
          "aliases": [],
          "description": "PEM formatted certificate chain file to be used for SSL client authentication.\nThis file can also include the key as well, and if the key is included, C(client_key) is not required.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "client_key": {
          "aliases": [],
          "description": "PEM formatted file that contains your private key to be used for SSL client authentication.\nIf C(client_cert) contains both the certificate and key, this option is not required.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "command": {
          "aliases": [],
          "description": "The command Icinga should run. Required when state is C(present).\nAbsolute paths are accepted as provided, relative paths are prefixed with \"PluginDir + \", similar Constant prefixes are allowed.\nSpaces will lead to separation of command path and standalone arguments.\nPlease note that this means that we do not support spaces in plugin names and paths right now.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "disabled": {
          "aliases": [],
          "description": "Disabled objects will not be deployed.",
          "default": "False",
          "type": "bool",
          "required": false,
          "choices": [
            "True",
            "False"
          ],
          "suboptions": {}
        },
        "force": {
          "aliases": [
            "thirsty"
          ],
          "description": "If C(yes) do not get a cached copy.\nAlias C(thirsty) has been deprecated and will be removed in 2.13.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "force_basic_auth": {
          "aliases": [],
          "description": "Credentials specified with I(url_username) and I(url_password) should be passed in HTTP Header.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "http_agent": {
          "aliases": [],
          "description": "Header to identify as, generally appears in web server logs.",
          "default": "ansible-httpget",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "imports": {
          "aliases": [],
          "description": "Importable templates, add as many as you want. Please note that order matters when importing properties from multiple templates - last one wins.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "methods_execute": {
          "aliases": [
            "command_type"
          ],
          "description": "Plugin Check commands are what you need when running checks against your infrastructure.\nNotification commands will be used when it comes to notify your users.\nEvent commands allow you to trigger specific actions when problems occur.\nSome people use them for auto-healing mechanisms, like restarting services or rebooting systems at specific thresholds.",
          "default": "PluginCheck",
          "type": "str",
          "required": false,
          "choices": [
            "PluginCheck",
            "PluginNotification",
            "PluginEvent"
          ],
          "suboptions": {}
        },
        "object_name": {
          "aliases": [
            "name"
          ],
          "description": "Name of the command.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Apply feature state.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "timeout": {
          "aliases": [],
          "description": "Optional command timeout. Allowed values are seconds or durations postfixed with a specific unit (for example 1m or also 3m 30s).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "url": {
          "aliases": [],
          "description": "HTTP, HTTPS, or FTP URL in the form (http|https|ftp)://[user[:pass]]@host.domain[:port]/path",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "url_password": {
          "aliases": [],
          "description": "The password for use in HTTP basic authentication.\nIf the I(url_username) parameter is not specified, the I(url_password) parameter will not be used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "url_username": {
          "aliases": [],
          "description": "The username for use in HTTP basic authentication.\nThis parameter can be used without I(url_password) for sites that allow empty passwords",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "use_gssapi": {
          "aliases": [],
          "description": "Use GSSAPI to perform the authentication, typically this is for Kerberos or Kerberos through Negotiate authentication.\nRequires the Python library L(gssapi,https://github.com/pythongssapi/python-gssapi) to be installed.\nCredentials for GSSAPI can be specified with I(url_username)/I(url_password) or with the GSSAPI env var C(KRB5CCNAME) that specified a custom Kerberos credential cache.\nNTLM authentication is C(not) supported even if the GSSAPI mech for NTLM has been installed.",
          "default": "False",
          "type": "bool",
          "required": false,
          "version_added": "2.11",
          "suboptions": {}
        },
        "use_proxy": {
          "aliases": [],
          "description": "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "If C(no), SSL certificates will not be validated.\nThis should only be used on personally controlled sites using self-signed certificates.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "vars": {
          "aliases": [],
          "description": "Custom properties of the command.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "zone": {
          "aliases": [],
          "description": "Icinga cluster zone. Allows to manually override Directors decisions of where to deploy your config to.\nYou should consider not doing so unless you gained deep understanding of how an Icinga Cluster stack works.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Manage commands in Icinga2",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create command\n  t_systems_mms.icinga_director.icinga_command:\n    state: present\n    url: \"{{ icinga_url }}\"\n    url_username: \"{{ icinga_user }}\"\n    url_password: \"{{ icinga_pass }}\"\n    arguments:\n      '--authpassphrase':\n        value: $snmpv3_priv_key$\n      '--authprotocol':\n        value: $snmpv3_auth_protocol$\n      '--critical':\n        value: $centreon_critical$\n      '--filter':\n        value: $centreon_filter$\n      '--hostname':\n        value: $snmp_address$\n      '--maxrepetitions':\n        value: $centreon_maxrepetitions$\n      '--mode':\n        value: $centreon_mode$\n      '--plugin':\n        value: $centreon_plugin$\n      '--privpassphrase':\n        value: $snmpv3_auth_key$\n      '--privprotocol':\n        value: $snmpv3_priv_protocol$\n      '--snmp-community':\n        value: $snmp_community$\n      '--snmp-timeout':\n        value: $snmp_timeout$\n      '--snmp-username':\n        value: $snmpv3_user$\n      '--snmp-version':\n        value: $snmp_version$\n      '--subsetleef':\n        value: $centreon_subsetleef$\n      '--verbose':\n        set_if: $centreon_verbose$\n      '--warning':\n        value: $centreon_warning$\n      '--dummy-arg':\n        description: \"dummy arg using Icinga DSL code\"\n        value:\n          type: \"Function\"\n          body: 'return macro(\"$dummy_var$\")'\n    command: \"/opt/centreon-plugins/centreon_plugins.pl\"\n    command_type: \"PluginCheck\"\n    disabled: false\n    object_name: centreon-plugins\n    imports:\n      - centreon-plugins-template\n    vars:\n      centreon_maxrepetitions: 20\n      centreon_subsetleef: 20\n      centreon_verbose: false\n      snmp_address: $address$\n      snmp_timeout: 60\n      snmp_version: '2'\n      snmpv3_auth_key: authkey\n      snmpv3_priv_key: privkey\n      snmpv3_user: user\n\n- name: Update command\n  t_systems_mms.icinga_director.icinga_command:\n    state: present\n    url: \"{{ icinga_url }}\"\n    url_username: \"{{ icinga_user }}\"\n    url_password: \"{{ icinga_pass }}\"\n    object_name: centreon-plugins\n    timeout: \"1m\"\n    append: true\n\n- name: Create event command\n  t_systems_mms.icinga_director.icinga_command:\n    state: present\n    url: \"{{ icinga_url }}\"\n    url_username: \"{{ icinga_user }}\"\n    url_password: \"{{ icinga_pass }}\"\n    command: \"/opt/scripts/restart_httpd\"\n    object_name: \"restart_httpd\"\n    command_type: \"PluginEvent\"\n    arguments:\n      '-s':\n        value: $service.state$\n      '-t':\n        value: $service.state_type$\n      '-a':\n        set_if: $service.check_attempt$\n        value: $restart_service$\n"
  },
  "t_systems_mms.icinga_director.icinga_command_info": {
    "doc": {
      "description": "Get a list of command objects from Icinga2 through the director API.",
      "has_action": false,
      "notes": "This module supports check mode.",
      "options": {
        "client_cert": {
          "aliases": [],
          "description": "PEM formatted certificate chain file to be used for SSL client authentication.\nThis file can also include the key as well, and if the key is included, C(client_key) is not required.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "client_key": {
          "aliases": [],
          "description": "PEM formatted file that contains your private key to be used for SSL client authentication.\nIf C(client_cert) contains both the certificate and key, this option is not required.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "external": {
          "aliases": [],
          "description": "Also include external objects in output.",
          "default": "False",
          "type": "bool",
          "required": false,
          "choices": [
            "True",
            "False"
          ],
          "suboptions": {}
        },
        "force": {
          "aliases": [
            "thirsty"
          ],
          "description": "If C(yes) do not get a cached copy.\nAlias C(thirsty) has been deprecated and will be removed in 2.13.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "force_basic_auth": {
          "aliases": [],
          "description": "Credentials specified with I(url_username) and I(url_password) should be passed in HTTP Header.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "http_agent": {
          "aliases": [],
          "description": "Header to identify as, generally appears in web server logs.",
          "default": "ansible-httpget",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "query": {
          "aliases": [],
          "description": "Text to filter search results.\nThe text is matched on object_name.\nOnly objects containing this text will be returned in the resultset.\nRequires Icinga Director 1.8.0+, in earlier versions this parameter is ignored and all objects are returned.",
          "default": "",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resolved": {
          "aliases": [],
          "description": "Resolve all inherited object properties and omit templates in output.",
          "default": "False",
          "type": "bool",
          "required": false,
          "choices": [
            "True",
            "False"
          ],
          "suboptions": {}
        },
        "url": {
          "aliases": [],
          "description": "HTTP, HTTPS, or FTP URL in the form (http|https|ftp)://[user[:pass]]@host.domain[:port]/path",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "url_password": {
          "aliases": [],
          "description": "The password for use in HTTP basic authentication.\nIf the I(url_username) parameter is not specified, the I(url_password) parameter will not be used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "url_username": {
          "aliases": [],
          "description": "The username for use in HTTP basic authentication.\nThis parameter can be used without I(url_password) for sites that allow empty passwords",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "use_gssapi": {
          "aliases": [],
          "description": "Use GSSAPI to perform the authentication, typically this is for Kerberos or Kerberos through Negotiate authentication.\nRequires the Python library L(gssapi,https://github.com/pythongssapi/python-gssapi) to be installed.\nCredentials for GSSAPI can be specified with I(url_username)/I(url_password) or with the GSSAPI env var C(KRB5CCNAME) that specified a custom Kerberos credential cache.\nNTLM authentication is C(not) supported even if the GSSAPI mech for NTLM has been installed.",
          "default": "False",
          "type": "bool",
          "required": false,
          "version_added": "2.11",
          "suboptions": {}
        },
        "use_proxy": {
          "aliases": [],
          "description": "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "If C(no), SSL certificates will not be validated.\nThis should only be used on personally controlled sites using self-signed certificates.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Query commands in Icinga2",
      "version_added": "1.13.0"
    },
    "examples": "\n- name: Query a command in icinga\n  t_systems_mms.icinga_director.icinga_command_info:\n    url: \"{{ icinga_url }}\"\n    url_username: \"{{ icinga_user }}\"\n    url_password: \"{{ icinga_pass }}\"\n    query: \"centreon-plugins\"\n"
  },
  "t_systems_mms.icinga_director.icinga_command_template": {
    "doc": {
      "description": "Add or remove a command template to Icinga2 through the director API.",
      "has_action": false,
      "notes": "This module supports check mode.",
      "options": {
        "append": {
          "aliases": [],
          "description": "Do not overwrite the whole object but instead append the defined properties.\nNote - Appending to existing vars, imports or any other list/dict is not possible. You have to overwrite the complete list/dict.\nNote - Variables that are set by default will also be applied, even if not set.",
          "type": "bool",
          "required": false,
          "choices": [
            "True",
            "False"
          ],
          "version_added": "1.25.0",
          "suboptions": {}
        },
        "arguments": {
          "aliases": [],
          "description": "Arguments of the command template.\nEach argument can take either a string, a json or a dict\nWhen using a dict as argument value, the following properties are supported. C(skip_key), C(repeat_key), C(required), C(order), C(description)), C(set_if), C(value).\nThe C(value) property can be either a string, a json or a dict. When used as a dict, you can define its C(type) as C(Function) and set its C(body) property as an Icinga DSL piece of config.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "client_cert": {
          "aliases": [],
          "description": "PEM formatted certificate chain file to be used for SSL client authentication.\nThis file can also include the key as well, and if the key is included, C(client_key) is not required.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "client_key": {
          "aliases": [],
          "description": "PEM formatted file that contains your private key to be used for SSL client authentication.\nIf C(client_cert) contains both the certificate and key, this option is not required.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "command": {
          "aliases": [],
          "description": "The command Icinga should run.\nAbsolute paths are accepted as provided, relative paths are prefixed with \"PluginDir + \", similar Constant prefixes are allowed.\nSpaces will lead to separation of command path and standalone arguments.\nPlease note that this means that we do not support spaces in plugin names and paths right now.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "disabled": {
          "aliases": [],
          "description": "Disabled objects will not be deployed.",
          "default": "False",
          "type": "bool",
          "required": false,
          "choices": [
            "True",
            "False"
          ],
          "suboptions": {}
        },
        "force": {
          "aliases": [
            "thirsty"
          ],
          "description": "If C(yes) do not get a cached copy.\nAlias C(thirsty) has been deprecated and will be removed in 2.13.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "force_basic_auth": {
          "aliases": [],
          "description": "Credentials specified with I(url_username) and I(url_password) should be passed in HTTP Header.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "http_agent": {
          "aliases": [],
          "description": "Header to identify as, generally appears in web server logs.",
          "default": "ansible-httpget",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "imports": {
          "aliases": [],
          "description": "Importable templates, add as many as you want. Please note that order matters when importing properties from multiple templates - last one wins.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "methods_execute": {
          "aliases": [
            "command_type"
          ],
          "description": "Plugin Check commands are what you need when running checks against your infrastructure.\nNotification commands will be used when it comes to notify your users.\nEvent commands allow you to trigger specific actions when problems occur.\nSome people use them for auto-healing mechanisms, like restarting services or rebooting systems at specific thresholds.",
          "default": "PluginCheck",
          "type": "str",
          "required": false,
          "choices": [
            "PluginCheck",
            "PluginNotification",
            "PluginEvent"
          ],
          "suboptions": {}
        },
        "object_name": {
          "aliases": [
            "name"
          ],
          "description": "Name of the command template.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Apply feature state.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "timeout": {
          "aliases": [],
          "description": "Optional command timeout. Allowed values are seconds or durations postfixed with a specific unit (for example 1m or also 3m 30s).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "url": {
          "aliases": [],
          "description": "HTTP, HTTPS, or FTP URL in the form (http|https|ftp)://[user[:pass]]@host.domain[:port]/path",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "url_password": {
          "aliases": [],
          "description": "The password for use in HTTP basic authentication.\nIf the I(url_username) parameter is not specified, the I(url_password) parameter will not be used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "url_username": {
          "aliases": [],
          "description": "The username for use in HTTP basic authentication.\nThis parameter can be used without I(url_password) for sites that allow empty passwords",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "use_gssapi": {
          "aliases": [],
          "description": "Use GSSAPI to perform the authentication, typically this is for Kerberos or Kerberos through Negotiate authentication.\nRequires the Python library L(gssapi,https://github.com/pythongssapi/python-gssapi) to be installed.\nCredentials for GSSAPI can be specified with I(url_username)/I(url_password) or with the GSSAPI env var C(KRB5CCNAME) that specified a custom Kerberos credential cache.\nNTLM authentication is C(not) supported even if the GSSAPI mech for NTLM has been installed.",
          "default": "False",
          "type": "bool",
          "required": false,
          "version_added": "2.11",
          "suboptions": {}
        },
        "use_proxy": {
          "aliases": [],
          "description": "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "If C(no), SSL certificates will not be validated.\nThis should only be used on personally controlled sites using self-signed certificates.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "vars": {
          "aliases": [],
          "description": "Custom properties of the command template.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "zone": {
          "aliases": [],
          "description": "Icinga cluster zone. Allows to manually override Directors decisions of where to deploy your config to.\nYou should consider not doing so unless you gained deep understanding of how an Icinga Cluster stack works.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Manage command templates in Icinga2",
      "version_added": "1.1.0"
    },
    "examples": "\n- name: Create command template\n  t_systems_mms.icinga_director.icinga_command_template:\n    state: present\n    url: \"{{ icinga_url }}\"\n    url_username: \"{{ icinga_user }}\"\n    url_password: \"{{ icinga_pass }}\"\n    arguments:\n      '--authpassphrase':\n        value: $snmpv3_priv_key$\n      '--authprotocol':\n        value: $snmpv3_auth_protocol$\n      '--critical':\n        value: $centreon_critical$\n      '--filter':\n        value: $centreon_filter$\n      '--hostname':\n        value: $snmp_address$\n      '--maxrepetitions':\n        value: $centreon_maxrepetitions$\n      '--mode':\n        value: $centreon_mode$\n      '--plugin':\n        value: $centreon_plugin$\n      '--privpassphrase':\n        value: $snmpv3_auth_key$\n      '--privprotocol':\n        value: $snmpv3_priv_protocol$\n      '--snmp-community':\n        value: $snmp_community$\n      '--snmp-timeout':\n        value: $snmp_timeout$\n      '--snmp-username':\n        value: $snmpv3_user$\n      '--snmp-version':\n        value: $snmp_version$\n      '--subsetleef':\n        value: $centreon_subsetleef$\n      '--verbose':\n        set_if: $centreon_verbose$\n      '--warning':\n        value: $centreon_warning$\n      '--dummy-arg':\n        description: \"dummy arg using Icinga DSL code\"\n        value:\n          type: \"Function\"\n          body: 'return macro(\"$dummy_var$\")'\n    command: \"/opt/centreon-plugins/centreon_plugins.pl\"\n    command_type: \"PluginCheck\"\n    object_name: centreon-plugins-template\n    disabled: false\n    vars:\n      centreon_maxrepetitions: 20\n      centreon_subsetleef: 20\n      centreon_verbose: false\n      snmp_address: $address$\n      snmp_timeout: 60\n      snmp_version: '2'\n      snmpv3_auth_key: authkey\n      snmpv3_priv_key: privkey\n      snmpv3_user: user\n\n- name: Update command template\n  t_systems_mms.icinga_director.icinga_command_template:\n    state: present\n    url: \"{{ icinga_url }}\"\n    url_username: \"{{ icinga_user }}\"\n    url_password: \"{{ icinga_pass }}\"\n    object_name: centreon-plugins-template\n    timeout: \"2m\"\n    append: true\n"
  },
  "t_systems_mms.icinga_director.icinga_command_template_info": {
    "doc": {
      "description": "Get a list of command template objects from Icinga2 through the director API.",
      "has_action": false,
      "notes": "This module supports check mode.",
      "options": {
        "client_cert": {
          "aliases": [],
          "description": "PEM formatted certificate chain file to be used for SSL client authentication.\nThis file can also include the key as well, and if the key is included, C(client_key) is not required.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "client_key": {
          "aliases": [],
          "description": "PEM formatted file that contains your private key to be used for SSL client authentication.\nIf C(client_cert) contains both the certificate and key, this option is not required.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "force": {
          "aliases": [
            "thirsty"
          ],
          "description": "If C(yes) do not get a cached copy.\nAlias C(thirsty) has been deprecated and will be removed in 2.13.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "force_basic_auth": {
          "aliases": [],
          "description": "Credentials specified with I(url_username) and I(url_password) should be passed in HTTP Header.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "http_agent": {
          "aliases": [],
          "description": "Header to identify as, generally appears in web server logs.",
          "default": "ansible-httpget",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "query": {
          "aliases": [],
          "description": "Text to filter search results.\nThe text is matched on object_name.\nOnly objects containing this text will be returned in the resultset.\nRequires Icinga Director 1.8.0+, in earlier versions this parameter is ignored and all objects are returned.",
          "default": "",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resolved": {
          "aliases": [],
          "description": "Resolve all inherited object properties and omit templates in output.",
          "default": "False",
          "type": "bool",
          "required": false,
          "choices": [
            "True",
            "False"
          ],
          "suboptions": {}
        },
        "url": {
          "aliases": [],
          "description": "HTTP, HTTPS, or FTP URL in the form (http|https|ftp)://[user[:pass]]@host.domain[:port]/path",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "url_password": {
          "aliases": [],
          "description": "The password for use in HTTP basic authentication.\nIf the I(url_username) parameter is not specified, the I(url_password) parameter will not be used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "url_username": {
          "aliases": [],
          "description": "The username for use in HTTP basic authentication.\nThis parameter can be used without I(url_password) for sites that allow empty passwords",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "use_gssapi": {
          "aliases": [],
          "description": "Use GSSAPI to perform the authentication, typically this is for Kerberos or Kerberos through Negotiate authentication.\nRequires the Python library L(gssapi,https://github.com/pythongssapi/python-gssapi) to be installed.\nCredentials for GSSAPI can be specified with I(url_username)/I(url_password) or with the GSSAPI env var C(KRB5CCNAME) that specified a custom Kerberos credential cache.\nNTLM authentication is C(not) supported even if the GSSAPI mech for NTLM has been installed.",
          "default": "False",
          "type": "bool",
          "required": false,
          "version_added": "2.11",
          "suboptions": {}
        },
        "use_proxy": {
          "aliases": [],
          "description": "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "If C(no), SSL certificates will not be validated.\nThis should only be used on personally controlled sites using self-signed certificates.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Query command templates in Icinga2",
      "version_added": "1.13.0"
    },
    "examples": "\n- name: Query a command template in icinga\n  t_systems_mms.icinga_director.icinga_command_template_info:\n    url: \"{{ icinga_url }}\"\n    url_username: \"{{ icinga_user }}\"\n    url_password: \"{{ icinga_pass }}\"\n    query: \"centreon-plugins-template\"\n"
  },
  "t_systems_mms.icinga_director.icinga_endpoint": {
    "doc": {
      "description": "Add or remove an endpoint to Icinga2 through the director API.",
      "has_action": false,
      "notes": "This module supports check mode.",
      "options": {
        "append": {
          "aliases": [],
          "description": "Do not overwrite the whole object but instead append the defined properties.\nNote - Appending to existing vars, imports or any other list/dict is not possible. You have to overwrite the complete list/dict.\nNote - Variables that are set by default will also be applied, even if not set.",
          "type": "bool",
          "required": false,
          "choices": [
            "True",
            "False"
          ],
          "version_added": "1.25.0",
          "suboptions": {}
        },
        "client_cert": {
          "aliases": [],
          "description": "PEM formatted certificate chain file to be used for SSL client authentication.\nThis file can also include the key as well, and if the key is included, C(client_key) is not required.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "client_key": {
          "aliases": [],
          "description": "PEM formatted file that contains your private key to be used for SSL client authentication.\nIf C(client_cert) contains both the certificate and key, this option is not required.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "force": {
          "aliases": [
            "thirsty"
          ],
          "description": "If C(yes) do not get a cached copy.\nAlias C(thirsty) has been deprecated and will be removed in 2.13.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "force_basic_auth": {
          "aliases": [],
          "description": "Credentials specified with I(url_username) and I(url_password) should be passed in HTTP Header.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "host": {
          "aliases": [],
          "description": "The hostname/IP address of the remote Icinga 2 instance.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "http_agent": {
          "aliases": [],
          "description": "Header to identify as, generally appears in web server logs.",
          "default": "ansible-httpget",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_duration": {
          "aliases": [],
          "description": "Duration for keeping replay logs on connection loss. Defaults to 1d (86400 seconds). Attribute is specified in seconds. If log_duration is set to 0, replaying logs is disabled. You could also specify the value in human readable format like 10m for 10 minutes or 1h for one hour.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "object_name": {
          "aliases": [
            "name"
          ],
          "description": "Icinga object name for this endpoint.\nThis is usually a fully qualified host name but it could basically be any kind of string.\nTo make things easier for your users we strongly suggest to use meaningful names for templates.\nFor example \"generic-endpoint\" is ugly, \"Standard Linux Server\" is easier to understand.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "port": {
          "aliases": [],
          "description": "The service name/port of the remote Icinga 2 instance. Defaults to 5665.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Apply feature state.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "url": {
          "aliases": [],
          "description": "HTTP, HTTPS, or FTP URL in the form (http|https|ftp)://[user[:pass]]@host.domain[:port]/path",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "url_password": {
          "aliases": [],
          "description": "The password for use in HTTP basic authentication.\nIf the I(url_username) parameter is not specified, the I(url_password) parameter will not be used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "url_username": {
          "aliases": [],
          "description": "The username for use in HTTP basic authentication.\nThis parameter can be used without I(url_password) for sites that allow empty passwords",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "use_gssapi": {
          "aliases": [],
          "description": "Use GSSAPI to perform the authentication, typically this is for Kerberos or Kerberos through Negotiate authentication.\nRequires the Python library L(gssapi,https://github.com/pythongssapi/python-gssapi) to be installed.\nCredentials for GSSAPI can be specified with I(url_username)/I(url_password) or with the GSSAPI env var C(KRB5CCNAME) that specified a custom Kerberos credential cache.\nNTLM authentication is C(not) supported even if the GSSAPI mech for NTLM has been installed.",
          "default": "False",
          "type": "bool",
          "required": false,
          "version_added": "2.11",
          "suboptions": {}
        },
        "use_proxy": {
          "aliases": [],
          "description": "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "If C(no), SSL certificates will not be validated.\nThis should only be used on personally controlled sites using self-signed certificates.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "zone": {
          "aliases": [],
          "description": "The name of the zone this endpoint is part of.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Manage endpoints in Icinga2",
      "version_added": "1.5.0"
    },
    "examples": "\n- name: Create an endpoint in icinga\n  t_systems_mms.icinga_director.icinga_endpoint:\n    state: present\n    url: \"{{ icinga_url }}\"\n    url_username: \"{{ icinga_user }}\"\n    url_password: \"{{ icinga_pass }}\"\n    object_name: \"fooendpoint\"\n    host: \"127.0.0.1\"\n    zone: \"foozone\"\n\n- name: Update an endpoint in icinga\n  t_systems_mms.icinga_director.icinga_endpoint:\n    state: present\n    url: \"{{ icinga_url }}\"\n    url_username: \"{{ icinga_user }}\"\n    url_password: \"{{ icinga_pass }}\"\n    object_name: \"fooendpoint\"\n    host: \"127.0.0.1\"\n    zone: \"foozone\"\n    port: 5665\n    append: true\n"
  },
  "t_systems_mms.icinga_director.icinga_endpoint_info": {
    "doc": {
      "description": "Get a list of endpoint objects from Icinga2 through the director API.",
      "has_action": false,
      "notes": "This module supports check mode.",
      "options": {
        "client_cert": {
          "aliases": [],
          "description": "PEM formatted certificate chain file to be used for SSL client authentication.\nThis file can also include the key as well, and if the key is included, C(client_key) is not required.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "client_key": {
          "aliases": [],
          "description": "PEM formatted file that contains your private key to be used for SSL client authentication.\nIf C(client_cert) contains both the certificate and key, this option is not required.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "force": {
          "aliases": [
            "thirsty"
          ],
          "description": "If C(yes) do not get a cached copy.\nAlias C(thirsty) has been deprecated and will be removed in 2.13.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "force_basic_auth": {
          "aliases": [],
          "description": "Credentials specified with I(url_username) and I(url_password) should be passed in HTTP Header.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "http_agent": {
          "aliases": [],
          "description": "Header to identify as, generally appears in web server logs.",
          "default": "ansible-httpget",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "query": {
          "aliases": [],
          "description": "Text to filter search results.\nThe text is matched on object_name.\nOnly objects containing this text will be returned in the resultset.\nRequires Icinga Director 1.8.0+, in earlier versions this parameter is ignored and all objects are returned.",
          "default": "",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resolved": {
          "aliases": [],
          "description": "Resolve all inherited object properties and omit templates in output.",
          "default": "False",
          "type": "bool",
          "required": false,
          "choices": [
            "True",
            "False"
          ],
          "suboptions": {}
        },
        "url": {
          "aliases": [],
          "description": "HTTP, HTTPS, or FTP URL in the form (http|https|ftp)://[user[:pass]]@host.domain[:port]/path",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "url_password": {
          "aliases": [],
          "description": "The password for use in HTTP basic authentication.\nIf the I(url_username) parameter is not specified, the I(url_password) parameter will not be used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "url_username": {
          "aliases": [],
          "description": "The username for use in HTTP basic authentication.\nThis parameter can be used without I(url_password) for sites that allow empty passwords",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "use_gssapi": {
          "aliases": [],
          "description": "Use GSSAPI to perform the authentication, typically this is for Kerberos or Kerberos through Negotiate authentication.\nRequires the Python library L(gssapi,https://github.com/pythongssapi/python-gssapi) to be installed.\nCredentials for GSSAPI can be specified with I(url_username)/I(url_password) or with the GSSAPI env var C(KRB5CCNAME) that specified a custom Kerberos credential cache.\nNTLM authentication is C(not) supported even if the GSSAPI mech for NTLM has been installed.",
          "default": "False",
          "type": "bool",
          "required": false,
          "version_added": "2.11",
          "suboptions": {}
        },
        "use_proxy": {
          "aliases": [],
          "description": "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "If C(no), SSL certificates will not be validated.\nThis should only be used on personally controlled sites using self-signed certificates.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Query endpoints in Icinga2",
      "version_added": "1.13.0"
    },
    "examples": "\n- name: Query an endpoint in icinga\n  t_systems_mms.icinga_director.icinga_endpoint_info:\n    url: \"{{ icinga_url }}\"\n    url_username: \"{{ icinga_user }}\"\n    url_password: \"{{ icinga_pass }}\"\n    query: \"fooendpoint\"\n"
  },
  "t_systems_mms.icinga_director.icinga_host": {
    "doc": {
      "description": "Add or remove a host to Icinga2 through the director API.",
      "has_action": false,
      "notes": "This module supports check mode.",
      "options": {
        "accept_config": {
          "aliases": [],
          "description": "Whether the agent is configured to accept config.",
          "type": "bool",
          "required": false,
          "choices": [
            "True",
            "False"
          ],
          "version_added": "1.9.0",
          "suboptions": {}
        },
        "address": {
          "aliases": [],
          "description": "Host address. Usually an IPv4 address, but may be any kind of address your check plugin is able to deal with.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "address6": {
          "aliases": [],
          "description": "Host IPv6 address. Usually an IPv6 address, but may be any kind of address your check plugin is able to deal with.",
          "type": "str",
          "required": false,
          "version_added": "1.4.0",
          "suboptions": {}
        },
        "append": {
          "aliases": [],
          "description": "Do not overwrite the whole object but instead append the defined properties.\nNote - Appending to existing vars, imports or any other list/dict is not possible. You have to overwrite the complete list/dict.\nNote - Variables that are set by default will also be applied, even if not set.",
          "type": "bool",
          "required": false,
          "choices": [
            "True",
            "False"
          ],
          "version_added": "1.25.0",
          "suboptions": {}
        },
        "check_command": {
          "aliases": [],
          "description": "The name of the check command.\nThough this is not required to be defined in the director, you still have to supply a check_command in a host or host-template.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "client_cert": {
          "aliases": [],
          "description": "PEM formatted certificate chain file to be used for SSL client authentication.\nThis file can also include the key as well, and if the key is included, C(client_key) is not required.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "client_key": {
          "aliases": [],
          "description": "PEM formatted file that contains your private key to be used for SSL client authentication.\nIf C(client_cert) contains both the certificate and key, this option is not required.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "command_endpoint": {
          "aliases": [],
          "description": "The endpoint where commands are executed on.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "disabled": {
          "aliases": [],
          "description": "Disabled objects will not be deployed.",
          "default": "False",
          "type": "bool",
          "required": false,
          "choices": [
            "True",
            "False"
          ],
          "suboptions": {}
        },
        "display_name": {
          "aliases": [],
          "description": "Alternative name for this host. Might be a host alias or and kind of string helping your users to identify this host.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "force": {
          "aliases": [
            "thirsty"
          ],
          "description": "If C(yes) do not get a cached copy.\nAlias C(thirsty) has been deprecated and will be removed in 2.13.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "force_basic_auth": {
          "aliases": [],
          "description": "Credentials specified with I(url_username) and I(url_password) should be passed in HTTP Header.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "groups": {
          "aliases": [],
          "description": "Hostgroups that should be directly assigned to this node. Hostgroups can be useful for various reasons.\nYou might assign service checks based on assigned hostgroup. They are also often used as an instrument to enforce restricted views in Icinga Web 2.\nHostgroups can be directly assigned to single hosts or to host templates.\nYou might also want to consider assigning hostgroups using apply rules.",
          "default": "[]",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "has_agent": {
          "aliases": [],
          "description": "Whether this host has the Icinga 2 Agent installed.",
          "type": "bool",
          "required": false,
          "choices": [
            "True",
            "False"
          ],
          "version_added": "1.9.0",
          "suboptions": {}
        },
        "http_agent": {
          "aliases": [],
          "description": "Header to identify as, generally appears in web server logs.",
          "default": "ansible-httpget",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "imports": {
          "aliases": [],
          "description": "Choose a Host Template. Required when state is C(present).\nRequired if I(state) is C(present).",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "master_should_connect": {
          "aliases": [],
          "description": "Whether the parent (master) node should actively try to connect to this agent.",
          "type": "bool",
          "required": false,
          "choices": [
            "True",
            "False"
          ],
          "version_added": "1.9.0",
          "suboptions": {}
        },
        "notes": {
          "aliases": [],
          "description": "Additional notes for this object.",
          "type": "str",
          "required": false,
          "version_added": "1.8.0",
          "suboptions": {}
        },
        "notes_url": {
          "aliases": [],
          "description": "An URL pointing to additional notes for this object.\nSeparate multiple urls like this \"'http://url1' 'http://url2'\".\nThe maximum length is 255 characters.",
          "type": "str",
          "required": false,
          "version_added": "1.8.0",
          "suboptions": {}
        },
        "object_name": {
          "aliases": [
            "name"
          ],
          "description": "Icinga object name for this host.\nThis is usually a fully qualified host name but it could basically be any kind of string.\nTo make things easier for your users we strongly suggest to use meaningful names for templates.\nFor example \"generic-host\" is ugly, \"Standard Linux Server\" is easier to understand.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Apply feature state.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "url": {
          "aliases": [],
          "description": "HTTP, HTTPS, or FTP URL in the form (http|https|ftp)://[user[:pass]]@host.domain[:port]/path",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "url_password": {
          "aliases": [],
          "description": "The password for use in HTTP basic authentication.\nIf the I(url_username) parameter is not specified, the I(url_password) parameter will not be used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "url_username": {
          "aliases": [],
          "description": "The username for use in HTTP basic authentication.\nThis parameter can be used without I(url_password) for sites that allow empty passwords",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "use_gssapi": {
          "aliases": [],
          "description": "Use GSSAPI to perform the authentication, typically this is for Kerberos or Kerberos through Negotiate authentication.\nRequires the Python library L(gssapi,https://github.com/pythongssapi/python-gssapi) to be installed.\nCredentials for GSSAPI can be specified with I(url_username)/I(url_password) or with the GSSAPI env var C(KRB5CCNAME) that specified a custom Kerberos credential cache.\nNTLM authentication is C(not) supported even if the GSSAPI mech for NTLM has been installed.",
          "default": "False",
          "type": "bool",
          "required": false,
          "version_added": "2.11",
          "suboptions": {}
        },
        "use_proxy": {
          "aliases": [],
          "description": "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "If C(no), SSL certificates will not be validated.\nThis should only be used on personally controlled sites using self-signed certificates.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "vars": {
          "aliases": [],
          "description": "Custom properties of the host.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "zone": {
          "aliases": [],
          "description": "Set the zone.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Manage hosts in Icinga2",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create a host in icinga\n  t_systems_mms.icinga_director.icinga_host:\n    state: present\n    url: \"{{ icinga_url }}\"\n    url_username: \"{{ icinga_user }}\"\n    url_password: \"{{ icinga_pass }}\"\n    disabled: false\n    object_name: \"foohost\"\n    address: \"127.0.0.1\"\n    address6: \"::1\"\n    display_name: \"foohost\"\n    groups:\n      - \"foohostgroup\"\n    imports:\n      - \"foohosttemplate\"\n    vars:\n      dnscheck: \"no\"\n    check_command: hostalive\n    has_agent: true\n    master_should_connect: true\n    accept_config: true\n    command_endpoint: fooendpoint\n\n- name: update a host in icinga\n  t_systems_mms.icinga_director.icinga_host:\n    state: present\n    url: \"{{ icinga_url }}\"\n    url_username: \"{{ icinga_user }}\"\n    url_password: \"{{ icinga_pass }}\"\n    object_name: \"foohost\"\n    notes: \"example note\"\n    notes_url: \"'http://url1' 'http://url2'\"\n    append: true\n"
  },
  "t_systems_mms.icinga_director.icinga_host_info": {
    "doc": {
      "description": "Get a list of host objects from Icinga2 through the director API.",
      "has_action": false,
      "notes": "This module supports check mode.",
      "options": {
        "client_cert": {
          "aliases": [],
          "description": "PEM formatted certificate chain file to be used for SSL client authentication.\nThis file can also include the key as well, and if the key is included, C(client_key) is not required.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "client_key": {
          "aliases": [],
          "description": "PEM formatted file that contains your private key to be used for SSL client authentication.\nIf C(client_cert) contains both the certificate and key, this option is not required.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "force": {
          "aliases": [
            "thirsty"
          ],
          "description": "If C(yes) do not get a cached copy.\nAlias C(thirsty) has been deprecated and will be removed in 2.13.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "force_basic_auth": {
          "aliases": [],
          "description": "Credentials specified with I(url_username) and I(url_password) should be passed in HTTP Header.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "http_agent": {
          "aliases": [],
          "description": "Header to identify as, generally appears in web server logs.",
          "default": "ansible-httpget",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "query": {
          "aliases": [],
          "description": "Text to filter search results.\nThe text is matched on object_name.\nOnly objects containing this text will be returned in the resultset.\nRequires Icinga Director 1.8.0+, in earlier versions this parameter is ignored and all objects are returned.",
          "default": "",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resolved": {
          "aliases": [],
          "description": "Resolve all inherited object properties and omit templates in output.",
          "default": "False",
          "type": "bool",
          "required": false,
          "choices": [
            "True",
            "False"
          ],
          "suboptions": {}
        },
        "url": {
          "aliases": [],
          "description": "HTTP, HTTPS, or FTP URL in the form (http|https|ftp)://[user[:pass]]@host.domain[:port]/path",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "url_password": {
          "aliases": [],
          "description": "The password for use in HTTP basic authentication.\nIf the I(url_username) parameter is not specified, the I(url_password) parameter will not be used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "url_username": {
          "aliases": [],
          "description": "The username for use in HTTP basic authentication.\nThis parameter can be used without I(url_password) for sites that allow empty passwords",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "use_gssapi": {
          "aliases": [],
          "description": "Use GSSAPI to perform the authentication, typically this is for Kerberos or Kerberos through Negotiate authentication.\nRequires the Python library L(gssapi,https://github.com/pythongssapi/python-gssapi) to be installed.\nCredentials for GSSAPI can be specified with I(url_username)/I(url_password) or with the GSSAPI env var C(KRB5CCNAME) that specified a custom Kerberos credential cache.\nNTLM authentication is C(not) supported even if the GSSAPI mech for NTLM has been installed.",
          "default": "False",
          "type": "bool",
          "required": false,
          "version_added": "2.11",
          "suboptions": {}
        },
        "use_proxy": {
          "aliases": [],
          "description": "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "If C(no), SSL certificates will not be validated.\nThis should only be used on personally controlled sites using self-signed certificates.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Query hosts in Icinga2",
      "version_added": "1.13.0"
    },
    "examples": "\n- name: Query a host in icinga\n  t_systems_mms.icinga_director.icinga_host_info:\n    url: \"{{ icinga_url }}\"\n    url_username: \"{{ icinga_user }}\"\n    url_password: \"{{ icinga_pass }}\"\n    query: \"foohost\"\n"
  },
  "t_systems_mms.icinga_director.icinga_host_template": {
    "doc": {
      "description": "Add or remove a host template to Icinga2 through the director API.",
      "has_action": false,
      "notes": "This module supports check mode.",
      "options": {
        "accept_config": {
          "aliases": [],
          "description": "Whether the agent is configured to accept config.",
          "type": "bool",
          "required": false,
          "choices": [
            "True",
            "False"
          ],
          "version_added": "1.9.0",
          "suboptions": {}
        },
        "address": {
          "aliases": [],
          "description": "Host address. Usually an IPv4 address, but may be any kind of address your check plugin is able to deal with.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "address6": {
          "aliases": [],
          "description": "Host IPv6 address. Usually an IPv64 address, but may be any kind of address your check plugin is able to deal with.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "append": {
          "aliases": [],
          "description": "Do not overwrite the whole object but instead append the defined properties.\nNote - Appending to existing vars, imports or any other list/dict is not possible. You have to overwrite the complete list/dict.\nNote - Variables that are set by default will also be applied, even if not set.",
          "type": "bool",
          "required": false,
          "choices": [
            "True",
            "False"
          ],
          "version_added": "1.25.0",
          "suboptions": {}
        },
        "check_command": {
          "aliases": [],
          "description": "The name of the check command.\nThough this is not required to be defined in the director, you still have to supply a check_command in a host or host-template.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "check_interval": {
          "aliases": [],
          "description": "Your regular check interval.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "client_cert": {
          "aliases": [],
          "description": "PEM formatted certificate chain file to be used for SSL client authentication.\nThis file can also include the key as well, and if the key is included, C(client_key) is not required.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "client_key": {
          "aliases": [],
          "description": "PEM formatted file that contains your private key to be used for SSL client authentication.\nIf C(client_cert) contains both the certificate and key, this option is not required.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "command_endpoint": {
          "aliases": [],
          "description": "The endpoint where commands are executed on.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "disabled": {
          "aliases": [],
          "description": "Disabled objects will not be deployed.",
          "default": "False",
          "type": "bool",
          "required": false,
          "choices": [
            "True",
            "False"
          ],
          "suboptions": {}
        },
        "display_name": {
          "aliases": [],
          "description": "Alternative name for this host.\nMight be a host alias or and kind of string helping your users to identify this host.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "event_command": {
          "aliases": [],
          "description": "Event command for host which gets called on every check execution if one of these conditions matches\nThe host is in a soft state\nThe host state changes into a hard state\nThe host state recovers from a soft or hard state to OK/Up",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "force": {
          "aliases": [
            "thirsty"
          ],
          "description": "If C(yes) do not get a cached copy.\nAlias C(thirsty) has been deprecated and will be removed in 2.13.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "force_basic_auth": {
          "aliases": [],
          "description": "Credentials specified with I(url_username) and I(url_password) should be passed in HTTP Header.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "groups": {
          "aliases": [],
          "description": "Hostgroups that should be directly assigned to this node. Hostgroups can be useful for various reasons.\nYou might assign service checks based on assigned hostgroup. They are also often used as an instrument to enforce restricted views in Icinga Web 2.\nHostgroups can be directly assigned to single hosts or to host templates.\nYou might also want to consider assigning hostgroups using apply rules.",
          "default": "[]",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "has_agent": {
          "aliases": [],
          "description": "Whether this host has the Icinga 2 Agent installed.",
          "type": "bool",
          "required": false,
          "choices": [
            "True",
            "False"
          ],
          "version_added": "1.9.0",
          "suboptions": {}
        },
        "http_agent": {
          "aliases": [],
          "description": "Header to identify as, generally appears in web server logs.",
          "default": "ansible-httpget",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "imports": {
          "aliases": [],
          "description": "Choose a host-template.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "master_should_connect": {
          "aliases": [],
          "description": "Whether the parent (master) node should actively try to connect to this agent.",
          "type": "bool",
          "required": false,
          "choices": [
            "True",
            "False"
          ],
          "version_added": "1.9.0",
          "suboptions": {}
        },
        "max_check_attempts": {
          "aliases": [],
          "description": "Defines after how many check attempts a new hard state is reached.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "notes": {
          "aliases": [],
          "description": "Additional notes for this object.",
          "type": "str",
          "required": false,
          "version_added": "1.8.0",
          "suboptions": {}
        },
        "notes_url": {
          "aliases": [],
          "description": "An URL pointing to additional notes for this object.\nSeparate multiple urls like this \"'http://url1' 'http://url2'\".\nMaximum length is 255 characters.",
          "type": "str",
          "required": false,
          "version_added": "1.8.0",
          "suboptions": {}
        },
        "object_name": {
          "aliases": [
            "name"
          ],
          "description": "Icinga object name for this host template.\nThis is usually a fully qualified host name but it could basically be any kind of string.\nTo make things easier for your users we strongly suggest to use meaningful names for templates.\nFor example \"generic-host\" is ugly, \"Standard Linux Server\" is easier to understand.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "retry_interval": {
          "aliases": [],
          "description": "Retry interval, will be applied after a state change unless the next hard state is reached.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Apply feature state.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "url": {
          "aliases": [],
          "description": "HTTP, HTTPS, or FTP URL in the form (http|https|ftp)://[user[:pass]]@host.domain[:port]/path",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "url_password": {
          "aliases": [],
          "description": "The password for use in HTTP basic authentication.\nIf the I(url_username) parameter is not specified, the I(url_password) parameter will not be used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "url_username": {
          "aliases": [],
          "description": "The username for use in HTTP basic authentication.\nThis parameter can be used without I(url_password) for sites that allow empty passwords",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "use_gssapi": {
          "aliases": [],
          "description": "Use GSSAPI to perform the authentication, typically this is for Kerberos or Kerberos through Negotiate authentication.\nRequires the Python library L(gssapi,https://github.com/pythongssapi/python-gssapi) to be installed.\nCredentials for GSSAPI can be specified with I(url_username)/I(url_password) or with the GSSAPI env var C(KRB5CCNAME) that specified a custom Kerberos credential cache.\nNTLM authentication is C(not) supported even if the GSSAPI mech for NTLM has been installed.",
          "default": "False",
          "type": "bool",
          "required": false,
          "version_added": "2.11",
          "suboptions": {}
        },
        "use_proxy": {
          "aliases": [],
          "description": "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "If C(no), SSL certificates will not be validated.\nThis should only be used on personally controlled sites using self-signed certificates.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "vars": {
          "aliases": [],
          "description": "Custom properties of the host.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "zone": {
          "aliases": [],
          "description": "Set the zone.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Manage host templates in Icinga2",
      "version_added": "1.2.0"
    },
    "examples": "\n- name: Create host template\n  t_systems_mms.icinga_director.icinga_host_template:\n    state: present\n    url: \"{{ icinga_url }}\"\n    url_username: \"{{ icinga_user }}\"\n    url_password: \"{{ icinga_pass }}\"\n    object_name: foohosttemplate\n    display_name: foohosttemplate\n    disabled: false\n    check_command: dummy\n    check_interval: 90s\n    retry_interval: 30s\n    groups:\n      - \"foohostgroup\"\n    imports:\n      - ''\n    has_agent: true\n    master_should_connect: true\n    max_check_attempts: 3\n    accept_config: true\n    command_endpoint: fooendpoint\n\n- name: Update host template\n  t_systems_mms.icinga_director.icinga_host_template:\n    state: present\n    url: \"{{ icinga_url }}\"\n    url_username: \"{{ icinga_user }}\"\n    url_password: \"{{ icinga_pass }}\"\n    object_name: foohosttemplate\n    notes: \"example note\"\n    notes_url: \"'http://url1' 'http://url2'\"\n    append: true\n"
  },
  "t_systems_mms.icinga_director.icinga_host_template_info": {
    "doc": {
      "description": "Get a list of host template objects from Icinga2 through the director API.",
      "has_action": false,
      "notes": "This module supports check mode.",
      "options": {
        "client_cert": {
          "aliases": [],
          "description": "PEM formatted certificate chain file to be used for SSL client authentication.\nThis file can also include the key as well, and if the key is included, C(client_key) is not required.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "client_key": {
          "aliases": [],
          "description": "PEM formatted file that contains your private key to be used for SSL client authentication.\nIf C(client_cert) contains both the certificate and key, this option is not required.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "force": {
          "aliases": [
            "thirsty"
          ],
          "description": "If C(yes) do not get a cached copy.\nAlias C(thirsty) has been deprecated and will be removed in 2.13.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "force_basic_auth": {
          "aliases": [],
          "description": "Credentials specified with I(url_username) and I(url_password) should be passed in HTTP Header.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "http_agent": {
          "aliases": [],
          "description": "Header to identify as, generally appears in web server logs.",
          "default": "ansible-httpget",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "query": {
          "aliases": [],
          "description": "Text to filter search results.\nThe text is matched on object_name.\nOnly objects containing this text will be returned in the resultset.\nRequires Icinga Director 1.8.0+, in earlier versions this parameter is ignored and all objects are returned.",
          "default": "",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resolved": {
          "aliases": [],
          "description": "Resolve all inherited object properties and omit templates in output.",
          "default": "False",
          "type": "bool",
          "required": false,
          "choices": [
            "True",
            "False"
          ],
          "suboptions": {}
        },
        "url": {
          "aliases": [],
          "description": "HTTP, HTTPS, or FTP URL in the form (http|https|ftp)://[user[:pass]]@host.domain[:port]/path",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "url_password": {
          "aliases": [],
          "description": "The password for use in HTTP basic authentication.\nIf the I(url_username) parameter is not specified, the I(url_password) parameter will not be used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "url_username": {
          "aliases": [],
          "description": "The username for use in HTTP basic authentication.\nThis parameter can be used without I(url_password) for sites that allow empty passwords",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "use_gssapi": {
          "aliases": [],
          "description": "Use GSSAPI to perform the authentication, typically this is for Kerberos or Kerberos through Negotiate authentication.\nRequires the Python library L(gssapi,https://github.com/pythongssapi/python-gssapi) to be installed.\nCredentials for GSSAPI can be specified with I(url_username)/I(url_password) or with the GSSAPI env var C(KRB5CCNAME) that specified a custom Kerberos credential cache.\nNTLM authentication is C(not) supported even if the GSSAPI mech for NTLM has been installed.",
          "default": "False",
          "type": "bool",
          "required": false,
          "version_added": "2.11",
          "suboptions": {}
        },
        "use_proxy": {
          "aliases": [],
          "description": "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "If C(no), SSL certificates will not be validated.\nThis should only be used on personally controlled sites using self-signed certificates.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Query host templates in Icinga2",
      "version_added": "1.13.0"
    },
    "examples": "\n- name: Query a host template in icinga\n  t_systems_mms.icinga_director.icinga_host_template_info:\n    url: \"{{ icinga_url }}\"\n    url_username: \"{{ icinga_user }}\"\n    url_password: \"{{ icinga_pass }}\"\n    query: \"foohosttemplate\"\n"
  },
  "t_systems_mms.icinga_director.icinga_hostgroup": {
    "doc": {
      "description": "Add or remove a hostgroup to Icinga2 through the director API.",
      "has_action": false,
      "notes": "This module supports check mode.",
      "options": {
        "append": {
          "aliases": [],
          "description": "Do not overwrite the whole object but instead append the defined properties.\nNote - Appending to existing vars, imports or any other list/dict is not possible. You have to overwrite the complete list/dict.\nNote - Variables that are set by default will also be applied, even if not set.",
          "type": "bool",
          "required": false,
          "choices": [
            "True",
            "False"
          ],
          "version_added": "1.25.0",
          "suboptions": {}
        },
        "assign_filter": {
          "aliases": [],
          "description": "This allows you to configure an assignment filter.\nPlease feel free to combine as many nested operators as you want.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "client_cert": {
          "aliases": [],
          "description": "PEM formatted certificate chain file to be used for SSL client authentication.\nThis file can also include the key as well, and if the key is included, C(client_key) is not required.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "client_key": {
          "aliases": [],
          "description": "PEM formatted file that contains your private key to be used for SSL client authentication.\nIf C(client_cert) contains both the certificate and key, this option is not required.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "display_name": {
          "aliases": [],
          "description": "An alternative display name for this group.\nIf you wonder how this could be helpful just leave it blank.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "force": {
          "aliases": [
            "thirsty"
          ],
          "description": "If C(yes) do not get a cached copy.\nAlias C(thirsty) has been deprecated and will be removed in 2.13.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "force_basic_auth": {
          "aliases": [],
          "description": "Credentials specified with I(url_username) and I(url_password) should be passed in HTTP Header.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "http_agent": {
          "aliases": [],
          "description": "Header to identify as, generally appears in web server logs.",
          "default": "ansible-httpget",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "object_name": {
          "aliases": [
            "name"
          ],
          "description": "Icinga object name for this hostgroup.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Apply feature state.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "url": {
          "aliases": [],
          "description": "HTTP, HTTPS, or FTP URL in the form (http|https|ftp)://[user[:pass]]@host.domain[:port]/path",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "url_password": {
          "aliases": [],
          "description": "The password for use in HTTP basic authentication.\nIf the I(url_username) parameter is not specified, the I(url_password) parameter will not be used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "url_username": {
          "aliases": [],
          "description": "The username for use in HTTP basic authentication.\nThis parameter can be used without I(url_password) for sites that allow empty passwords",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "use_gssapi": {
          "aliases": [],
          "description": "Use GSSAPI to perform the authentication, typically this is for Kerberos or Kerberos through Negotiate authentication.\nRequires the Python library L(gssapi,https://github.com/pythongssapi/python-gssapi) to be installed.\nCredentials for GSSAPI can be specified with I(url_username)/I(url_password) or with the GSSAPI env var C(KRB5CCNAME) that specified a custom Kerberos credential cache.\nNTLM authentication is C(not) supported even if the GSSAPI mech for NTLM has been installed.",
          "default": "False",
          "type": "bool",
          "required": false,
          "version_added": "2.11",
          "suboptions": {}
        },
        "use_proxy": {
          "aliases": [],
          "description": "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "If C(no), SSL certificates will not be validated.\nThis should only be used on personally controlled sites using self-signed certificates.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Manage hostgroups in Icinga2",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create hostgroup\n  t_systems_mms.icinga_director.icinga_hostgroup:\n    state: present\n    url: \"{{ icinga_url }}\"\n    url_username: \"{{ icinga_user }}\"\n    url_password: \"{{ icinga_pass }}\"\n    object_name: foohostgroup\n    display_name: foohostgroup\n\n- name: Update hostgroup\n  t_systems_mms.icinga_director.icinga_hostgroup:\n    state: present\n    url: \"{{ icinga_url }}\"\n    url_username: \"{{ icinga_user }}\"\n    url_password: \"{{ icinga_pass }}\"\n    object_name: foohostgroup\n    assign_filter: 'host.name=\"foohost\"'\n    append: true\n"
  },
  "t_systems_mms.icinga_director.icinga_hostgroup_info": {
    "doc": {
      "description": "Get a list of hostgroup objects from Icinga2 through the director API.",
      "has_action": false,
      "notes": "This module supports check mode.",
      "options": {
        "client_cert": {
          "aliases": [],
          "description": "PEM formatted certificate chain file to be used for SSL client authentication.\nThis file can also include the key as well, and if the key is included, C(client_key) is not required.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "client_key": {
          "aliases": [],
          "description": "PEM formatted file that contains your private key to be used for SSL client authentication.\nIf C(client_cert) contains both the certificate and key, this option is not required.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "force": {
          "aliases": [
            "thirsty"
          ],
          "description": "If C(yes) do not get a cached copy.\nAlias C(thirsty) has been deprecated and will be removed in 2.13.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "force_basic_auth": {
          "aliases": [],
          "description": "Credentials specified with I(url_username) and I(url_password) should be passed in HTTP Header.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "http_agent": {
          "aliases": [],
          "description": "Header to identify as, generally appears in web server logs.",
          "default": "ansible-httpget",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "query": {
          "aliases": [],
          "description": "Text to filter search results.\nThe text is matched on object_name.\nOnly objects containing this text will be returned in the resultset.\nRequires Icinga Director 1.8.0+, in earlier versions this parameter is ignored and all objects are returned.",
          "default": "",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resolved": {
          "aliases": [],
          "description": "Resolve all inherited object properties and omit templates in output.",
          "default": "False",
          "type": "bool",
          "required": false,
          "choices": [
            "True",
            "False"
          ],
          "suboptions": {}
        },
        "url": {
          "aliases": [],
          "description": "HTTP, HTTPS, or FTP URL in the form (http|https|ftp)://[user[:pass]]@host.domain[:port]/path",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "url_password": {
          "aliases": [],
          "description": "The password for use in HTTP basic authentication.\nIf the I(url_username) parameter is not specified, the I(url_password) parameter will not be used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "url_username": {
          "aliases": [],
          "description": "The username for use in HTTP basic authentication.\nThis parameter can be used without I(url_password) for sites that allow empty passwords",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "use_gssapi": {
          "aliases": [],
          "description": "Use GSSAPI to perform the authentication, typically this is for Kerberos or Kerberos through Negotiate authentication.\nRequires the Python library L(gssapi,https://github.com/pythongssapi/python-gssapi) to be installed.\nCredentials for GSSAPI can be specified with I(url_username)/I(url_password) or with the GSSAPI env var C(KRB5CCNAME) that specified a custom Kerberos credential cache.\nNTLM authentication is C(not) supported even if the GSSAPI mech for NTLM has been installed.",
          "default": "False",
          "type": "bool",
          "required": false,
          "version_added": "2.11",
          "suboptions": {}
        },
        "use_proxy": {
          "aliases": [],
          "description": "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "If C(no), SSL certificates will not be validated.\nThis should only be used on personally controlled sites using self-signed certificates.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Query hostgroups in Icinga2",
      "version_added": "1.13.0"
    },
    "examples": "\n- name: Query a hostgroup in icinga\n  t_systems_mms.icinga_director.icinga_hostgroup_info:\n    url: \"{{ icinga_url }}\"\n    url_username: \"{{ icinga_user }}\"\n    url_password: \"{{ icinga_pass }}\"\n    query: \"foohostgroup\"\n"
  },
  "t_systems_mms.icinga_director.icinga_notification": {
    "doc": {
      "description": "Add or remove a notification to Icinga2 through the director API.",
      "has_action": false,
      "notes": "This module supports check mode.",
      "options": {
        "append": {
          "aliases": [],
          "description": "Do not overwrite the whole object but instead append the defined properties.\nNote - Appending to existing vars, imports or any other list/dict is not possible. You have to overwrite the complete list/dict.\nNote - Variables that are set by default will also be applied, even if not set.",
          "type": "bool",
          "required": false,
          "choices": [
            "True",
            "False"
          ],
          "version_added": "1.25.0",
          "suboptions": {}
        },
        "apply_to": {
          "aliases": [],
          "description": "Whether this notification should affect hosts or services.\nRequired if I(state) is C(present).",
          "type": "str",
          "required": false,
          "choices": [
            "host",
            "service"
          ],
          "suboptions": {}
        },
        "assign_filter": {
          "aliases": [],
          "description": "The filter where the notification will take effect.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "client_cert": {
          "aliases": [],
          "description": "PEM formatted certificate chain file to be used for SSL client authentication.\nThis file can also include the key as well, and if the key is included, C(client_key) is not required.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "client_key": {
          "aliases": [],
          "description": "PEM formatted file that contains your private key to be used for SSL client authentication.\nIf C(client_cert) contains both the certificate and key, this option is not required.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "disabled": {
          "aliases": [],
          "description": "Disabled objects will not be deployed.",
          "default": "False",
          "type": "bool",
          "required": false,
          "choices": [
            "True",
            "False"
          ],
          "version_added": "1.9.0",
          "suboptions": {}
        },
        "force": {
          "aliases": [
            "thirsty"
          ],
          "description": "If C(yes) do not get a cached copy.\nAlias C(thirsty) has been deprecated and will be removed in 2.13.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "force_basic_auth": {
          "aliases": [],
          "description": "Credentials specified with I(url_username) and I(url_password) should be passed in HTTP Header.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "http_agent": {
          "aliases": [],
          "description": "Header to identify as, generally appears in web server logs.",
          "default": "ansible-httpget",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "imports": {
          "aliases": [],
          "description": "Importable templates, add as many as you want. Required when state is C(present).\nPlease note that order matters when importing properties from multiple templates - last one wins.\nRequired if I(state) is C(present).",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "notification_interval": {
          "aliases": [],
          "description": "The notification interval (in seconds). This interval is used for active notifications.\nDefaults to 30 minutes. If set to 0, re-notifications are disabled.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "object_name": {
          "aliases": [
            "name"
          ],
          "description": "Name of the notification.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "period": {
          "aliases": [
            "time_period"
          ],
          "description": "The name of a time period which determines when this notification should be triggered.",
          "type": "str",
          "required": false,
          "version_added": "1.15.0",
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Apply feature state.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "states": {
          "aliases": [],
          "description": "The host or service states you want to get notifications for.",
          "type": "list",
          "required": false,
          "elements": "str",
          "version_added": "1.9.0",
          "suboptions": {}
        },
        "times_begin": {
          "aliases": [],
          "description": "First notification delay.\nDelay unless the first notification should be sent.",
          "type": "int",
          "required": false,
          "version_added": "1.15.0",
          "suboptions": {}
        },
        "times_end": {
          "aliases": [],
          "description": "Last notification.\nWhen the last notification should be sent.",
          "type": "int",
          "required": false,
          "version_added": "1.15.0",
          "suboptions": {}
        },
        "types": {
          "aliases": [],
          "description": "The state transition types you want to get notifications for.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "url": {
          "aliases": [],
          "description": "HTTP, HTTPS, or FTP URL in the form (http|https|ftp)://[user[:pass]]@host.domain[:port]/path",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "url_password": {
          "aliases": [],
          "description": "The password for use in HTTP basic authentication.\nIf the I(url_username) parameter is not specified, the I(url_password) parameter will not be used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "url_username": {
          "aliases": [],
          "description": "The username for use in HTTP basic authentication.\nThis parameter can be used without I(url_password) for sites that allow empty passwords",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "use_gssapi": {
          "aliases": [],
          "description": "Use GSSAPI to perform the authentication, typically this is for Kerberos or Kerberos through Negotiate authentication.\nRequires the Python library L(gssapi,https://github.com/pythongssapi/python-gssapi) to be installed.\nCredentials for GSSAPI can be specified with I(url_username)/I(url_password) or with the GSSAPI env var C(KRB5CCNAME) that specified a custom Kerberos credential cache.\nNTLM authentication is C(not) supported even if the GSSAPI mech for NTLM has been installed.",
          "default": "False",
          "type": "bool",
          "required": false,
          "version_added": "2.11",
          "suboptions": {}
        },
        "use_proxy": {
          "aliases": [],
          "description": "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "user_groups": {
          "aliases": [],
          "description": "User Groups that should be notified by this notification.",
          "type": "list",
          "required": false,
          "elements": "str",
          "version_added": "1.16.0",
          "suboptions": {}
        },
        "users": {
          "aliases": [],
          "description": "Users that should be notified by this notification.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "If C(no), SSL certificates will not be validated.\nThis should only be used on personally controlled sites using self-signed certificates.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "vars": {
          "aliases": [],
          "description": "Custom properties of the notification.",
          "type": "dict",
          "required": false,
          "version_added": "1.9.0",
          "suboptions": {}
        }
      },
      "short_description": "Manage notifications in Icinga2",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create notification\n  t_systems_mms.icinga_director.icinga_notification:\n    state: present\n    url: \"{{ icinga_url }}\"\n    url_username: \"{{ icinga_user }}\"\n    url_password: \"{{ icinga_pass }}\"\n    apply_to: host\n    assign_filter: 'host.name=\"foohost\"'\n    imports:\n      - foonotificationtemplate\n    notification_interval: '0'\n    object_name: E-Mail_host\n    states:\n      - Up\n      - Down\n    types:\n      - Problem\n      - Recovery\n    users:\n      - rb\n    user_groups:\n      - OnCall\n    disabled: false\n    time_period: \"24/7\"\n    times_begin: 20\n    times_end: 120\n\n- name: Update notification\n  t_systems_mms.icinga_director.icinga_notification:\n    state: present\n    url: \"{{ icinga_url }}\"\n    url_username: \"{{ icinga_user }}\"\n    url_password: \"{{ icinga_pass }}\"\n    object_name: E-Mail_host\n    vars:\n      foo: bar\n    append: true\n"
  },
  "t_systems_mms.icinga_director.icinga_notification_info": {
    "doc": {
      "description": "Get a list of notification objects from Icinga2 through the director API.",
      "has_action": false,
      "notes": "This module supports check mode.",
      "options": {
        "client_cert": {
          "aliases": [],
          "description": "PEM formatted certificate chain file to be used for SSL client authentication.\nThis file can also include the key as well, and if the key is included, C(client_key) is not required.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "client_key": {
          "aliases": [],
          "description": "PEM formatted file that contains your private key to be used for SSL client authentication.\nIf C(client_cert) contains both the certificate and key, this option is not required.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "force": {
          "aliases": [
            "thirsty"
          ],
          "description": "If C(yes) do not get a cached copy.\nAlias C(thirsty) has been deprecated and will be removed in 2.13.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "force_basic_auth": {
          "aliases": [],
          "description": "Credentials specified with I(url_username) and I(url_password) should be passed in HTTP Header.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "http_agent": {
          "aliases": [],
          "description": "Header to identify as, generally appears in web server logs.",
          "default": "ansible-httpget",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "query": {
          "aliases": [],
          "description": "Text to filter search results.\nThe text is matched on object_name.\nOnly objects containing this text will be returned in the resultset.\nRequires Icinga Director 1.8.0+, in earlier versions this parameter is ignored and all objects are returned.",
          "default": "",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resolved": {
          "aliases": [],
          "description": "Resolve all inherited object properties and omit templates in output.",
          "default": "False",
          "type": "bool",
          "required": false,
          "choices": [
            "True",
            "False"
          ],
          "suboptions": {}
        },
        "url": {
          "aliases": [],
          "description": "HTTP, HTTPS, or FTP URL in the form (http|https|ftp)://[user[:pass]]@host.domain[:port]/path",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "url_password": {
          "aliases": [],
          "description": "The password for use in HTTP basic authentication.\nIf the I(url_username) parameter is not specified, the I(url_password) parameter will not be used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "url_username": {
          "aliases": [],
          "description": "The username for use in HTTP basic authentication.\nThis parameter can be used without I(url_password) for sites that allow empty passwords",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "use_gssapi": {
          "aliases": [],
          "description": "Use GSSAPI to perform the authentication, typically this is for Kerberos or Kerberos through Negotiate authentication.\nRequires the Python library L(gssapi,https://github.com/pythongssapi/python-gssapi) to be installed.\nCredentials for GSSAPI can be specified with I(url_username)/I(url_password) or with the GSSAPI env var C(KRB5CCNAME) that specified a custom Kerberos credential cache.\nNTLM authentication is C(not) supported even if the GSSAPI mech for NTLM has been installed.",
          "default": "False",
          "type": "bool",
          "required": false,
          "version_added": "2.11",
          "suboptions": {}
        },
        "use_proxy": {
          "aliases": [],
          "description": "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "If C(no), SSL certificates will not be validated.\nThis should only be used on personally controlled sites using self-signed certificates.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Query notifications in Icinga2",
      "version_added": "1.13.0"
    },
    "examples": "\n- name: Query a notification in icinga\n  t_systems_mms.icinga_director.icinga_notification_info:\n    url: \"{{ icinga_url }}\"\n    url_username: \"{{ icinga_user }}\"\n    url_password: \"{{ icinga_pass }}\"\n    query: \"E-Mail_host\"\n"
  },
  "t_systems_mms.icinga_director.icinga_notification_template": {
    "doc": {
      "description": "Add or remove a notification template to Icinga2 through the director API.",
      "has_action": false,
      "notes": "This module supports check mode.",
      "options": {
        "append": {
          "aliases": [],
          "description": "Do not overwrite the whole object but instead append the defined properties.\nNote - Appending to existing vars, imports or any other list/dict is not possible. You have to overwrite the complete list/dict.\nNote - Variables that are set by default will also be applied, even if not set.",
          "type": "bool",
          "required": false,
          "choices": [
            "True",
            "False"
          ],
          "version_added": "1.25.0",
          "suboptions": {}
        },
        "client_cert": {
          "aliases": [],
          "description": "PEM formatted certificate chain file to be used for SSL client authentication.\nThis file can also include the key as well, and if the key is included, C(client_key) is not required.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "client_key": {
          "aliases": [],
          "description": "PEM formatted file that contains your private key to be used for SSL client authentication.\nIf C(client_cert) contains both the certificate and key, this option is not required.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "command": {
          "aliases": [
            "notification_command"
          ],
          "description": "Check command definition",
          "type": "str",
          "required": false,
          "version_added": "1.15.0",
          "suboptions": {}
        },
        "force": {
          "aliases": [
            "thirsty"
          ],
          "description": "If C(yes) do not get a cached copy.\nAlias C(thirsty) has been deprecated and will be removed in 2.13.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "force_basic_auth": {
          "aliases": [],
          "description": "Credentials specified with I(url_username) and I(url_password) should be passed in HTTP Header.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "http_agent": {
          "aliases": [],
          "description": "Header to identify as, generally appears in web server logs.",
          "default": "ansible-httpget",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "notification_interval": {
          "aliases": [],
          "description": "The notification interval (in seconds). This interval is used for active notifications.\nDefaults to 30 minutes. If set to 0, re-notifications are disabled.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "object_name": {
          "aliases": [
            "name"
          ],
          "description": "Name of the notification template.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "period": {
          "aliases": [
            "time_period"
          ],
          "description": "The name of a time period which determines when this notification should be triggered.",
          "type": "str",
          "required": false,
          "version_added": "1.15.0",
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Apply feature state.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "states": {
          "aliases": [],
          "description": "The host or service states you want to get notifications for.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "times_begin": {
          "aliases": [],
          "description": "First notification delay.\nDelay unless the first notification should be sent.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "times_end": {
          "aliases": [],
          "description": "Last notification.\nWhen the last notification should be sent.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "types": {
          "aliases": [],
          "description": "The state transition types you want to get notifications for.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "url": {
          "aliases": [],
          "description": "HTTP, HTTPS, or FTP URL in the form (http|https|ftp)://[user[:pass]]@host.domain[:port]/path",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "url_password": {
          "aliases": [],
          "description": "The password for use in HTTP basic authentication.\nIf the I(url_username) parameter is not specified, the I(url_password) parameter will not be used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "url_username": {
          "aliases": [],
          "description": "The username for use in HTTP basic authentication.\nThis parameter can be used without I(url_password) for sites that allow empty passwords",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "use_gssapi": {
          "aliases": [],
          "description": "Use GSSAPI to perform the authentication, typically this is for Kerberos or Kerberos through Negotiate authentication.\nRequires the Python library L(gssapi,https://github.com/pythongssapi/python-gssapi) to be installed.\nCredentials for GSSAPI can be specified with I(url_username)/I(url_password) or with the GSSAPI env var C(KRB5CCNAME) that specified a custom Kerberos credential cache.\nNTLM authentication is C(not) supported even if the GSSAPI mech for NTLM has been installed.",
          "default": "False",
          "type": "bool",
          "required": false,
          "version_added": "2.11",
          "suboptions": {}
        },
        "use_proxy": {
          "aliases": [],
          "description": "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "user_groups": {
          "aliases": [],
          "description": "User Groups that should be notified by this notification.",
          "type": "list",
          "required": false,
          "elements": "str",
          "version_added": "1.16.0",
          "suboptions": {}
        },
        "users": {
          "aliases": [],
          "description": "Users that should be notified by this notification",
          "type": "list",
          "required": false,
          "elements": "str",
          "version_added": "1.15.0",
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "If C(no), SSL certificates will not be validated.\nThis should only be used on personally controlled sites using self-signed certificates.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "zone": {
          "aliases": [],
          "description": "Set the zone.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Manage notification templates in Icinga2",
      "version_added": "1.9.0"
    },
    "examples": "\n- name: Create notification template\n  t_systems_mms.icinga_director.icinga_notification_template:\n    state: present\n    url: \"{{ icinga_url }}\"\n    url_username: \"{{ icinga_user }}\"\n    url_password: \"{{ icinga_pass }}\"\n    object_name: foonotificationtemplate\n    states:\n      - Up\n      - Down\n    types:\n      - Problem\n      - Recovery\n    times_begin: 20\n    times_end: 120\n    time_period: \"24/7\"\n    notification_command: \"mail-host-notification\"\n    users:\n      - \"rb\"\n    user_groups:\n      - \"OnCall\"\n\n- name: Update notification template\n  t_systems_mms.icinga_director.icinga_notification_template:\n    state: present\n    url: \"{{ icinga_url }}\"\n    url_username: \"{{ icinga_user }}\"\n    url_password: \"{{ icinga_pass }}\"\n    object_name: foonotificationtemplate\n    notification_interval: '0'\n    append: true\n"
  },
  "t_systems_mms.icinga_director.icinga_notification_template_info": {
    "doc": {
      "description": "Get a list of notification template objects from Icinga2 through the director API.",
      "has_action": false,
      "notes": "This module supports check mode.",
      "options": {
        "client_cert": {
          "aliases": [],
          "description": "PEM formatted certificate chain file to be used for SSL client authentication.\nThis file can also include the key as well, and if the key is included, C(client_key) is not required.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "client_key": {
          "aliases": [],
          "description": "PEM formatted file that contains your private key to be used for SSL client authentication.\nIf C(client_cert) contains both the certificate and key, this option is not required.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "force": {
          "aliases": [
            "thirsty"
          ],
          "description": "If C(yes) do not get a cached copy.\nAlias C(thirsty) has been deprecated and will be removed in 2.13.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "force_basic_auth": {
          "aliases": [],
          "description": "Credentials specified with I(url_username) and I(url_password) should be passed in HTTP Header.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "http_agent": {
          "aliases": [],
          "description": "Header to identify as, generally appears in web server logs.",
          "default": "ansible-httpget",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "query": {
          "aliases": [],
          "description": "Text to filter search results.\nThe text is matched on object_name.\nOnly objects containing this text will be returned in the resultset.\nRequires Icinga Director 1.8.0+, in earlier versions this parameter is ignored and all objects are returned.",
          "default": "",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resolved": {
          "aliases": [],
          "description": "Resolve all inherited object properties and omit templates in output.",
          "default": "False",
          "type": "bool",
          "required": false,
          "choices": [
            "True",
            "False"
          ],
          "suboptions": {}
        },
        "url": {
          "aliases": [],
          "description": "HTTP, HTTPS, or FTP URL in the form (http|https|ftp)://[user[:pass]]@host.domain[:port]/path",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "url_password": {
          "aliases": [],
          "description": "The password for use in HTTP basic authentication.\nIf the I(url_username) parameter is not specified, the I(url_password) parameter will not be used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "url_username": {
          "aliases": [],
          "description": "The username for use in HTTP basic authentication.\nThis parameter can be used without I(url_password) for sites that allow empty passwords",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "use_gssapi": {
          "aliases": [],
          "description": "Use GSSAPI to perform the authentication, typically this is for Kerberos or Kerberos through Negotiate authentication.\nRequires the Python library L(gssapi,https://github.com/pythongssapi/python-gssapi) to be installed.\nCredentials for GSSAPI can be specified with I(url_username)/I(url_password) or with the GSSAPI env var C(KRB5CCNAME) that specified a custom Kerberos credential cache.\nNTLM authentication is C(not) supported even if the GSSAPI mech for NTLM has been installed.",
          "default": "False",
          "type": "bool",
          "required": false,
          "version_added": "2.11",
          "suboptions": {}
        },
        "use_proxy": {
          "aliases": [],
          "description": "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "If C(no), SSL certificates will not be validated.\nThis should only be used on personally controlled sites using self-signed certificates.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Query notification templates in Icinga2",
      "version_added": "1.13.0"
    },
    "examples": "\n- name: Query a notification template in icinga\n  t_systems_mms.icinga_director.icinga_notification_template_info:\n    url: \"{{ icinga_url }}\"\n    url_username: \"{{ icinga_user }}\"\n    url_password: \"{{ icinga_pass }}\"\n    query: \"foonotificationtemplate\"\n"
  },
  "t_systems_mms.icinga_director.icinga_scheduled_downtime": {
    "doc": {
      "description": "Add or remove a downtime to Icinga2 through the director API.",
      "has_action": false,
      "notes": "This module supports check mode.",
      "options": {
        "append": {
          "aliases": [],
          "description": "Do not overwrite the whole object but instead append the defined properties.\nNote - Appending to existing vars, imports or any other list/dict is not possible. You have to overwrite the complete list/dict.\nNote - Variables that are set by default will also be applied, even if not set.",
          "type": "bool",
          "required": false,
          "choices": [
            "True",
            "False"
          ],
          "version_added": "1.25.0",
          "suboptions": {}
        },
        "apply_to": {
          "aliases": [],
          "description": "Whether this dependency should affect hosts or services\nRequired if I(state) is C(present).",
          "type": "str",
          "required": false,
          "choices": [
            "host",
            "service"
          ],
          "suboptions": {}
        },
        "assign_filter": {
          "aliases": [],
          "description": "The filter where the downtime will take effect.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "author": {
          "aliases": [],
          "description": "Name of the downtime author.\nRequired if I(state) is C(present).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "client_cert": {
          "aliases": [],
          "description": "PEM formatted certificate chain file to be used for SSL client authentication.\nThis file can also include the key as well, and if the key is included, C(client_key) is not required.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "client_key": {
          "aliases": [],
          "description": "PEM formatted file that contains your private key to be used for SSL client authentication.\nIf C(client_cert) contains both the certificate and key, this option is not required.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "comment": {
          "aliases": [],
          "description": "A descriptive comment for the downtime.\nRequired if I(state) is C(present).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "disabled": {
          "aliases": [],
          "description": "Disabled objects will not be deployed.",
          "default": "False",
          "type": "bool",
          "required": false,
          "choices": [
            "True",
            "False"
          ],
          "suboptions": {}
        },
        "duration": {
          "aliases": [],
          "description": "How long the downtime lasts. Only has an effect for flexible (non-fixed) downtimes. Time in seconds, supported suffixes include ms (milliseconds), s (seconds), m (minutes), h (hours) and d (days). To express \"90 minutes\" you might want to write 1h 30m",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "fixed": {
          "aliases": [],
          "description": "Whether this downtime is fixed or flexible. If unsure please check the related documentation https://icinga.com/docs/icinga2/latest/doc/08-advanced-topics/#downtimes\nRequired if I(state) is C(present).",
          "default": "False",
          "type": "bool",
          "required": false,
          "choices": [
            "True",
            "False"
          ],
          "suboptions": {}
        },
        "force": {
          "aliases": [
            "thirsty"
          ],
          "description": "If C(yes) do not get a cached copy.\nAlias C(thirsty) has been deprecated and will be removed in 2.13.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "force_basic_auth": {
          "aliases": [],
          "description": "Credentials specified with I(url_username) and I(url_password) should be passed in HTTP Header.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "http_agent": {
          "aliases": [],
          "description": "Header to identify as, generally appears in web server logs.",
          "default": "ansible-httpget",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "object_name": {
          "aliases": [
            "name"
          ],
          "description": "Icinga object name for this downtime.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "ranges": {
          "aliases": [],
          "description": "The period which should be downtimed",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Apply feature state.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "url": {
          "aliases": [],
          "description": "HTTP, HTTPS, or FTP URL in the form (http|https|ftp)://[user[:pass]]@host.domain[:port]/path",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "url_password": {
          "aliases": [],
          "description": "The password for use in HTTP basic authentication.\nIf the I(url_username) parameter is not specified, the I(url_password) parameter will not be used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "url_username": {
          "aliases": [],
          "description": "The username for use in HTTP basic authentication.\nThis parameter can be used without I(url_password) for sites that allow empty passwords",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "use_gssapi": {
          "aliases": [],
          "description": "Use GSSAPI to perform the authentication, typically this is for Kerberos or Kerberos through Negotiate authentication.\nRequires the Python library L(gssapi,https://github.com/pythongssapi/python-gssapi) to be installed.\nCredentials for GSSAPI can be specified with I(url_username)/I(url_password) or with the GSSAPI env var C(KRB5CCNAME) that specified a custom Kerberos credential cache.\nNTLM authentication is C(not) supported even if the GSSAPI mech for NTLM has been installed.",
          "default": "False",
          "type": "bool",
          "required": false,
          "version_added": "2.11",
          "suboptions": {}
        },
        "use_proxy": {
          "aliases": [],
          "description": "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "If C(no), SSL certificates will not be validated.\nThis should only be used on personally controlled sites using self-signed certificates.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "with_services": {
          "aliases": [],
          "description": "Whether you only downtime the hosts or add some services with it.",
          "default": "True",
          "type": "bool",
          "required": false,
          "choices": [
            "True",
            "False"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manage downtimes in Icinga2",
      "version_added": "1.25.0"
    },
    "examples": "\n- name: create icinga_scheduled_downtime\n  t_systems_mms.icinga_director.icinga_scheduled_downtime:\n    url: \"{{ icinga_url }}\"\n    url_username: \"{{ icinga_user }}\"\n    url_password: \"{{ icinga_pass }}\"\n    disabled: false\n    object_name: \"foodowntime\"\n    state: present\n    author: testuser\n    comment: test\n    fixed: true\n    with_services: true\n    apply_to: host\n    assign_filter: 'host.name=\"foohost\"'\n    duration: 500\n    ranges:\n      \"tuesday\": \"00:00-24:00\"\n\n- name: create icinga_scheduled_downtime2\n  t_systems_mms.icinga_director.icinga_scheduled_downtime:\n    url: \"{{ icinga_url }}\"\n    url_username: \"{{ icinga_user }}\"\n    url_password: \"{{ icinga_pass }}\"\n    disabled: false\n    object_name: \"foodowntime2\"\n    state: present\n    author: testuser\n    comment: test\n    fixed: false\n    with_services: false\n    apply_to: host\n    assign_filter: 'host.name=\"foohost\"'\n    duration: 500\n    ranges:\n      \"tuesday\": \"00:00-24:00\"\n\n- name: update icinga_scheduled_downtime2\n  t_systems_mms.icinga_director.icinga_scheduled_downtime:\n    url: \"{{ icinga_url }}\"\n    url_username: \"{{ icinga_user }}\"\n    url_password: \"{{ icinga_pass }}\"\n    object_name: \"foodowntime2\"\n    state: present\n    duration: 1000\n    append: true\n    apply_to: host\n    with_services: false\n"
  },
  "t_systems_mms.icinga_director.icinga_service": {
    "doc": {
      "description": "Add or remove a service to Icinga2 through the director API.",
      "has_action": false,
      "notes": "This module supports check mode.",
      "options": {
        "append": {
          "aliases": [],
          "description": "Do not overwrite the whole object but instead append the defined properties.\nNote - Appending to existing vars, imports or any other list/dict is not possible. You have to overwrite the complete list/dict.\nNote - Variables that are set by default will also be applied, even if not set.",
          "type": "bool",
          "required": false,
          "choices": [
            "True",
            "False"
          ],
          "version_added": "1.25.0",
          "suboptions": {}
        },
        "check_command": {
          "aliases": [],
          "description": "Check command definition.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "check_interval": {
          "aliases": [],
          "description": "Your regular check interval.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "check_period": {
          "aliases": [],
          "description": "The name of a time period which determines when this object should be monitored. Not limited by default.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "check_timeout": {
          "aliases": [],
          "description": "Check command timeout in seconds. Overrides the CheckCommand's timeout attribute.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "client_cert": {
          "aliases": [],
          "description": "PEM formatted certificate chain file to be used for SSL client authentication.\nThis file can also include the key as well, and if the key is included, C(client_key) is not required.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "client_key": {
          "aliases": [],
          "description": "PEM formatted file that contains your private key to be used for SSL client authentication.\nIf C(client_cert) contains both the certificate and key, this option is not required.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "disabled": {
          "aliases": [],
          "description": "Disabled objects will not be deployed.",
          "default": "False",
          "type": "bool",
          "required": false,
          "choices": [
            "True",
            "False"
          ],
          "suboptions": {}
        },
        "enable_active_checks": {
          "aliases": [],
          "description": "Whether to actively check this object.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "enable_event_handler": {
          "aliases": [],
          "description": "Whether to enable event handlers this object.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "enable_notifications": {
          "aliases": [],
          "description": "Whether to send notifications for this object.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "enable_passive_checks": {
          "aliases": [],
          "description": "Whether to accept passive check results for this object.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "enable_perfdata": {
          "aliases": [],
          "description": "Whether to process performance data provided by this object.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "force": {
          "aliases": [
            "thirsty"
          ],
          "description": "If C(yes) do not get a cached copy.\nAlias C(thirsty) has been deprecated and will be removed in 2.13.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "force_basic_auth": {
          "aliases": [],
          "description": "Credentials specified with I(url_username) and I(url_password) should be passed in HTTP Header.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "groups": {
          "aliases": [],
          "description": "Service groups that should be directly assigned to this service.\nServicegroups can be useful for various reasons.\nThey are helpful to provided service-type specific view in Icinga Web 2, either for custom dashboards or as an instrument to enforce restrictions.\nService groups can be directly assigned to single services or to service templates.",
          "default": "[]",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "host": {
          "aliases": [],
          "description": "Choose the host this single service should be assigned to.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "http_agent": {
          "aliases": [],
          "description": "Header to identify as, generally appears in web server logs.",
          "default": "ansible-httpget",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "imports": {
          "aliases": [],
          "description": "Importable templates, add as many as you want.\nPlease note that order matters when importing properties from multiple templates - last one wins.",
          "default": "[]",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "max_check_attempts": {
          "aliases": [],
          "description": "Defines after how many check attempts a new hard state is reached.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "notes": {
          "aliases": [],
          "description": "Additional notes for this object.",
          "type": "str",
          "required": false,
          "version_added": "1.8.0",
          "suboptions": {}
        },
        "notes_url": {
          "aliases": [],
          "description": "An URL pointing to additional notes for this object.\nSeparate multiple urls like this \"'http://url1' 'http://url2'\".\nMaximum length is 255 characters.",
          "type": "str",
          "required": false,
          "version_added": "1.8.0",
          "suboptions": {}
        },
        "object_name": {
          "aliases": [
            "name"
          ],
          "description": "Name of the service.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "retry_interval": {
          "aliases": [],
          "description": "Retry interval, will be applied after a state change unless the next hard state is reached.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Apply feature state.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "url": {
          "aliases": [],
          "description": "HTTP, HTTPS, or FTP URL in the form (http|https|ftp)://[user[:pass]]@host.domain[:port]/path",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "url_password": {
          "aliases": [],
          "description": "The password for use in HTTP basic authentication.\nIf the I(url_username) parameter is not specified, the I(url_password) parameter will not be used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "url_username": {
          "aliases": [],
          "description": "The username for use in HTTP basic authentication.\nThis parameter can be used without I(url_password) for sites that allow empty passwords",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "use_agent": {
          "aliases": [],
          "description": "Whether the check command for this service should be executed on the Icinga agent.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "use_gssapi": {
          "aliases": [],
          "description": "Use GSSAPI to perform the authentication, typically this is for Kerberos or Kerberos through Negotiate authentication.\nRequires the Python library L(gssapi,https://github.com/pythongssapi/python-gssapi) to be installed.\nCredentials for GSSAPI can be specified with I(url_username)/I(url_password) or with the GSSAPI env var C(KRB5CCNAME) that specified a custom Kerberos credential cache.\nNTLM authentication is C(not) supported even if the GSSAPI mech for NTLM has been installed.",
          "default": "False",
          "type": "bool",
          "required": false,
          "version_added": "2.11",
          "suboptions": {}
        },
        "use_proxy": {
          "aliases": [],
          "description": "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "If C(no), SSL certificates will not be validated.\nThis should only be used on personally controlled sites using self-signed certificates.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "vars": {
          "aliases": [],
          "description": "Custom properties of the service.",
          "default": "{}",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "volatile": {
          "aliases": [],
          "description": "Whether this check is volatile.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Manage services in Icinga2",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create service\n  tags: service\n  t_systems_mms.icinga_director.icinga_service:\n    state: present\n    url: \"{{ icinga_url }}\"\n    url_username: \"{{ icinga_user }}\"\n    url_password: \"{{ icinga_pass }}\"\n    object_name: \"foo service\"\n    check_command: hostalive\n    use_agent: false\n    host: foohost\n    vars:\n      procs_argument: consul\n      procs_critical: '1:'\n      procs_warning: '1:'\n\n- name: Update service\n  tags: service\n  t_systems_mms.icinga_director.icinga_service:\n    state: present\n    url: \"{{ icinga_url }}\"\n    url_username: \"{{ icinga_user }}\"\n    url_password: \"{{ icinga_pass }}\"\n    object_name: \"foo service\"\n    host: foohost\n    notes: \"example note\"\n    notes_url: \"'http://url1' 'http://url2'\"\n    append: true\n"
  },
  "t_systems_mms.icinga_director.icinga_service_apply": {
    "doc": {
      "description": "Add or remove a service apply rule to Icinga2 through the director API.",
      "has_action": false,
      "notes": "This module supports check mode.",
      "options": {
        "append": {
          "aliases": [],
          "description": "Do not overwrite the whole object but instead append the defined properties.\nNote - Appending to existing vars, imports or any other list/dict is not possible. You have to overwrite the complete list/dict.\nNote - Variables that are set by default will also be applied, even if not set.",
          "type": "bool",
          "required": false,
          "choices": [
            "True",
            "False"
          ],
          "version_added": "1.25.0",
          "suboptions": {}
        },
        "apply_for": {
          "aliases": [],
          "description": "Evaluates the apply for rule for all objects with the custom attribute specified.\nFor example selecting \"host.vars.custom_attr\" will generate \"for (config in host.vars.array_var)\" where \"config\" will be accessible through \"$config$\".\nNote - only custom variables of type \"Array\" are eligible.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "assign_filter": {
          "aliases": [],
          "description": "The filter where the service apply rule will take effect.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "check_command": {
          "aliases": [],
          "description": "Check command definition.",
          "type": "str",
          "required": false,
          "version_added": "1.7.0",
          "suboptions": {}
        },
        "check_interval": {
          "aliases": [],
          "description": "Your regular check interval.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "check_period": {
          "aliases": [],
          "description": "The name of a time period which determines when this object should be monitored. Not limited by default.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "check_timeout": {
          "aliases": [],
          "description": "Check command timeout in seconds. Overrides the CheckCommand's timeout attribute.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "client_cert": {
          "aliases": [],
          "description": "PEM formatted certificate chain file to be used for SSL client authentication.\nThis file can also include the key as well, and if the key is included, C(client_key) is not required.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "client_key": {
          "aliases": [],
          "description": "PEM formatted file that contains your private key to be used for SSL client authentication.\nIf C(client_cert) contains both the certificate and key, this option is not required.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "command_endpoint": {
          "aliases": [],
          "description": "The host where the service should be executed on.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "display_name": {
          "aliases": [],
          "description": "Alternative displayed name of the service apply rule.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "enable_active_checks": {
          "aliases": [],
          "description": "Whether to actively check this object.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "enable_event_handler": {
          "aliases": [],
          "description": "Whether to enable event handlers this object.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "enable_notifications": {
          "aliases": [],
          "description": "Whether to send notifications for this object.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "enable_passive_checks": {
          "aliases": [],
          "description": "Whether to accept passive check results for this object.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "enable_perfdata": {
          "aliases": [],
          "description": "Whether to process performance data provided by this object.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "event_command": {
          "aliases": [],
          "description": "Event command for service which gets called on every check execution if one of these conditions matches\nThe service is in a soft state\nThe service state changes into a hard state\nThe service state recovers from a soft or hard state to OK/Up",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "force": {
          "aliases": [
            "thirsty"
          ],
          "description": "If C(yes) do not get a cached copy.\nAlias C(thirsty) has been deprecated and will be removed in 2.13.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "force_basic_auth": {
          "aliases": [],
          "description": "Credentials specified with I(url_username) and I(url_password) should be passed in HTTP Header.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "groups": {
          "aliases": [],
          "description": "Service groups that should be directly assigned to this service.\nServicegroups can be useful for various reasons.\nThey are helpful to provided service-type specific view in Icinga Web 2, either for custom dashboards or as an instrument to enforce restrictions.\nService groups can be directly assigned to single services or to service templates.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "http_agent": {
          "aliases": [],
          "description": "Header to identify as, generally appears in web server logs.",
          "default": "ansible-httpget",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "imports": {
          "aliases": [],
          "description": "Importable templates, add as many as you want.\nPlease note that order matters when importing properties from multiple templates - last one wins.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "max_check_attempts": {
          "aliases": [],
          "description": "Defines after how many check attempts a new hard state is reached.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "notes": {
          "aliases": [],
          "description": "Additional notes for this object.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "notes_url": {
          "aliases": [],
          "description": "An URL pointing to additional notes for this object.\nSeparate multiple urls like this \"'http://url1' 'http://url2'\".\nMaximum length is 255 characters.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "object_name": {
          "aliases": [
            "name"
          ],
          "description": "Name for the Icinga service apply rule.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "retry_interval": {
          "aliases": [],
          "description": "Retry interval, will be applied after a state change unless the next hard state is reached.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Apply feature state.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "url": {
          "aliases": [],
          "description": "HTTP, HTTPS, or FTP URL in the form (http|https|ftp)://[user[:pass]]@host.domain[:port]/path",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "url_password": {
          "aliases": [],
          "description": "The password for use in HTTP basic authentication.\nIf the I(url_username) parameter is not specified, the I(url_password) parameter will not be used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "url_username": {
          "aliases": [],
          "description": "The username for use in HTTP basic authentication.\nThis parameter can be used without I(url_password) for sites that allow empty passwords",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "use_gssapi": {
          "aliases": [],
          "description": "Use GSSAPI to perform the authentication, typically this is for Kerberos or Kerberos through Negotiate authentication.\nRequires the Python library L(gssapi,https://github.com/pythongssapi/python-gssapi) to be installed.\nCredentials for GSSAPI can be specified with I(url_username)/I(url_password) or with the GSSAPI env var C(KRB5CCNAME) that specified a custom Kerberos credential cache.\nNTLM authentication is C(not) supported even if the GSSAPI mech for NTLM has been installed.",
          "default": "False",
          "type": "bool",
          "required": false,
          "version_added": "2.11",
          "suboptions": {}
        },
        "use_proxy": {
          "aliases": [],
          "description": "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "If C(no), SSL certificates will not be validated.\nThis should only be used on personally controlled sites using self-signed certificates.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "vars": {
          "aliases": [],
          "description": "Custom properties of the service apply rule.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Manage service apply rules in Icinga2",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Add service apply rule to icinga\n  t_systems_mms.icinga_director.icinga_service_apply:\n    state: present\n    url: \"{{ icinga_url }}\"\n    url_username: \"{{ icinga_user }}\"\n    url_password: \"{{ icinga_pass }}\"\n    object_name: \"SERVICE_dummy\"\n    assign_filter: 'host.name=\"foohost\"'\n    check_command: hostalive\n    display_name: \"dummy process\"\n    check_interval: \"10m\"\n    check_period: \"24/7\"\n    check_timeout: \"1m\"\n    enable_active_checks: true\n    enable_event_handler: true\n    enable_notifications: true\n    enable_passive_checks: false\n    enable_perfdata: false\n    event_command: restart_httpd\n    max_check_attempts: \"5\"\n    retry_interval: \"3m\"\n    imports:\n      - fooservicetemplate\n    groups:\n      - fooservicegroup\n    vars:\n      http_address: \"$address$\"\n      http_port: \"9080\"\n      http_uri: \"/ready\"\n      http_string: \"Ready\"\n      http_expect: \"Yes\"\n\n- name: Add service apply rule with command_endpoint\n  t_systems_mms.icinga_director.icinga_service_apply:\n    state: present\n    url: \"{{ icinga_url }}\"\n    url_username: \"{{ icinga_user }}\"\n    url_password: \"{{ icinga_pass }}\"\n    object_name: \"SERVICE_dummy\"\n    assign_filter: 'host.name=\"foohost\"'\n    check_command: hostalive\n    display_name: \"dummy process\"\n    check_interval: \"10m\"\n    check_period: \"24/7\"\n    check_timeout: \"1m\"\n    enable_active_checks: true\n    enable_event_handler: true\n    enable_notifications: true\n    enable_passive_checks: false\n    event_command: restart_httpd\n    max_check_attempts: \"5\"\n    retry_interval: \"3m\"\n    command_endpoint: \"fooendpoint\"\n    imports:\n      - fooservicetemplate\n    groups:\n      - fooservicegroup\n\n- name: Update service apply rule with command_endpoint\n  t_systems_mms.icinga_director.icinga_service_apply:\n    state: present\n    url: \"{{ icinga_url }}\"\n    url_username: \"{{ icinga_user }}\"\n    url_password: \"{{ icinga_pass }}\"\n    object_name: \"SERVICE_dummy\"\n    enable_perfdata: true\n    append: true\n"
  },
  "t_systems_mms.icinga_director.icinga_service_apply_info": {
    "doc": {
      "description": "Get a list of service apply rule objects from Icinga2 through the director API.",
      "has_action": false,
      "notes": "This module supports check mode.",
      "options": {
        "client_cert": {
          "aliases": [],
          "description": "PEM formatted certificate chain file to be used for SSL client authentication.\nThis file can also include the key as well, and if the key is included, C(client_key) is not required.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "client_key": {
          "aliases": [],
          "description": "PEM formatted file that contains your private key to be used for SSL client authentication.\nIf C(client_cert) contains both the certificate and key, this option is not required.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "force": {
          "aliases": [
            "thirsty"
          ],
          "description": "If C(yes) do not get a cached copy.\nAlias C(thirsty) has been deprecated and will be removed in 2.13.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "force_basic_auth": {
          "aliases": [],
          "description": "Credentials specified with I(url_username) and I(url_password) should be passed in HTTP Header.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "http_agent": {
          "aliases": [],
          "description": "Header to identify as, generally appears in web server logs.",
          "default": "ansible-httpget",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "query": {
          "aliases": [],
          "description": "Text to filter search results.\nThe text is matched on object_name.\nOnly objects containing this text will be returned in the resultset.\nRequires Icinga Director 1.8.0+, in earlier versions this parameter is ignored and all objects are returned.",
          "default": "",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resolved": {
          "aliases": [],
          "description": "Resolve all inherited object properties and omit templates in output.",
          "default": "False",
          "type": "bool",
          "required": false,
          "choices": [
            "True",
            "False"
          ],
          "suboptions": {}
        },
        "url": {
          "aliases": [],
          "description": "HTTP, HTTPS, or FTP URL in the form (http|https|ftp)://[user[:pass]]@host.domain[:port]/path",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "url_password": {
          "aliases": [],
          "description": "The password for use in HTTP basic authentication.\nIf the I(url_username) parameter is not specified, the I(url_password) parameter will not be used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "url_username": {
          "aliases": [],
          "description": "The username for use in HTTP basic authentication.\nThis parameter can be used without I(url_password) for sites that allow empty passwords",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "use_gssapi": {
          "aliases": [],
          "description": "Use GSSAPI to perform the authentication, typically this is for Kerberos or Kerberos through Negotiate authentication.\nRequires the Python library L(gssapi,https://github.com/pythongssapi/python-gssapi) to be installed.\nCredentials for GSSAPI can be specified with I(url_username)/I(url_password) or with the GSSAPI env var C(KRB5CCNAME) that specified a custom Kerberos credential cache.\nNTLM authentication is C(not) supported even if the GSSAPI mech for NTLM has been installed.",
          "default": "False",
          "type": "bool",
          "required": false,
          "version_added": "2.11",
          "suboptions": {}
        },
        "use_proxy": {
          "aliases": [],
          "description": "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "If C(no), SSL certificates will not be validated.\nThis should only be used on personally controlled sites using self-signed certificates.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Query service apply rules in Icinga2",
      "version_added": "1.13.0"
    },
    "examples": "\n- name: Query a service apply rule in icinga\n  t_systems_mms.icinga_director.icinga_service_apply_info:\n    url: \"{{ icinga_url }}\"\n    url_username: \"{{ icinga_user }}\"\n    url_password: \"{{ icinga_pass }}\"\n    query: \"SERVICE_dummy\"\n"
  },
  "t_systems_mms.icinga_director.icinga_service_info": {
    "doc": {
      "description": "Get a list of service objects from Icinga2 through the director API.",
      "has_action": false,
      "notes": "This module supports check mode.",
      "options": {
        "client_cert": {
          "aliases": [],
          "description": "PEM formatted certificate chain file to be used for SSL client authentication.\nThis file can also include the key as well, and if the key is included, C(client_key) is not required.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "client_key": {
          "aliases": [],
          "description": "PEM formatted file that contains your private key to be used for SSL client authentication.\nIf C(client_cert) contains both the certificate and key, this option is not required.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "force": {
          "aliases": [
            "thirsty"
          ],
          "description": "If C(yes) do not get a cached copy.\nAlias C(thirsty) has been deprecated and will be removed in 2.13.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "force_basic_auth": {
          "aliases": [],
          "description": "Credentials specified with I(url_username) and I(url_password) should be passed in HTTP Header.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "http_agent": {
          "aliases": [],
          "description": "Header to identify as, generally appears in web server logs.",
          "default": "ansible-httpget",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "query": {
          "aliases": [],
          "description": "Text to filter search results.\nThe text is matched on object_name.\nOnly objects containing this text will be returned in the resultset.\nRequires Icinga Director 1.8.0+, in earlier versions this parameter is ignored and all objects are returned.",
          "default": "",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resolved": {
          "aliases": [],
          "description": "Resolve all inherited object properties and omit templates in output.",
          "default": "False",
          "type": "bool",
          "required": false,
          "choices": [
            "True",
            "False"
          ],
          "suboptions": {}
        },
        "url": {
          "aliases": [],
          "description": "HTTP, HTTPS, or FTP URL in the form (http|https|ftp)://[user[:pass]]@host.domain[:port]/path",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "url_password": {
          "aliases": [],
          "description": "The password for use in HTTP basic authentication.\nIf the I(url_username) parameter is not specified, the I(url_password) parameter will not be used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "url_username": {
          "aliases": [],
          "description": "The username for use in HTTP basic authentication.\nThis parameter can be used without I(url_password) for sites that allow empty passwords",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "use_gssapi": {
          "aliases": [],
          "description": "Use GSSAPI to perform the authentication, typically this is for Kerberos or Kerberos through Negotiate authentication.\nRequires the Python library L(gssapi,https://github.com/pythongssapi/python-gssapi) to be installed.\nCredentials for GSSAPI can be specified with I(url_username)/I(url_password) or with the GSSAPI env var C(KRB5CCNAME) that specified a custom Kerberos credential cache.\nNTLM authentication is C(not) supported even if the GSSAPI mech for NTLM has been installed.",
          "default": "False",
          "type": "bool",
          "required": false,
          "version_added": "2.11",
          "suboptions": {}
        },
        "use_proxy": {
          "aliases": [],
          "description": "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "If C(no), SSL certificates will not be validated.\nThis should only be used on personally controlled sites using self-signed certificates.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Query services in Icinga2",
      "version_added": "1.13.0"
    },
    "examples": "\n- name: Query a service in icinga\n  t_systems_mms.icinga_director.icinga_service_info:\n    url: \"{{ icinga_url }}\"\n    url_username: \"{{ icinga_user }}\"\n    url_password: \"{{ icinga_pass }}\"\n    query: \"foo service\"\n"
  },
  "t_systems_mms.icinga_director.icinga_service_template": {
    "doc": {
      "description": "Add or remove a service template to Icinga2 through the director API.",
      "has_action": false,
      "notes": "This module supports check mode.",
      "options": {
        "append": {
          "aliases": [],
          "description": "Do not overwrite the whole object but instead append the defined properties.\nNote - Appending to existing vars, imports or any other list/dict is not possible. You have to overwrite the complete list/dict.\nNote - Variables that are set by default will also be applied, even if not set.",
          "type": "bool",
          "required": false,
          "choices": [
            "True",
            "False"
          ],
          "version_added": "1.25.0",
          "suboptions": {}
        },
        "check_command": {
          "aliases": [],
          "description": "Check command definition.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "check_interval": {
          "aliases": [],
          "description": "Your regular check interval.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "check_period": {
          "aliases": [],
          "description": "The name of a time period which determines when this object should be monitored. Not limited by default.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "check_timeout": {
          "aliases": [],
          "description": "Check command timeout in seconds. Overrides the CheckCommand's timeout attribute.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "client_cert": {
          "aliases": [],
          "description": "PEM formatted certificate chain file to be used for SSL client authentication.\nThis file can also include the key as well, and if the key is included, C(client_key) is not required.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "client_key": {
          "aliases": [],
          "description": "PEM formatted file that contains your private key to be used for SSL client authentication.\nIf C(client_cert) contains both the certificate and key, this option is not required.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "disabled": {
          "aliases": [],
          "description": "Disabled objects will not be deployed.",
          "default": "False",
          "type": "bool",
          "required": false,
          "choices": [
            "True",
            "False"
          ],
          "suboptions": {}
        },
        "enable_active_checks": {
          "aliases": [],
          "description": "Whether to actively check this object.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "enable_event_handler": {
          "aliases": [],
          "description": "Whether to enable event handlers this object.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "enable_notifications": {
          "aliases": [],
          "description": "Whether to send notifications for this object.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "enable_passive_checks": {
          "aliases": [],
          "description": "Whether to accept passive check results for this object.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "enable_perfdata": {
          "aliases": [],
          "description": "Whether to process performance data provided by this object.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "event_command": {
          "aliases": [],
          "description": "Event command for service which gets called on every check execution if one of these conditions matches\nThe service is in a soft state\nThe service state changes into a hard state\nThe service state recovers from a soft or hard state to OK/Up",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "force": {
          "aliases": [
            "thirsty"
          ],
          "description": "If C(yes) do not get a cached copy.\nAlias C(thirsty) has been deprecated and will be removed in 2.13.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "force_basic_auth": {
          "aliases": [],
          "description": "Credentials specified with I(url_username) and I(url_password) should be passed in HTTP Header.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "groups": {
          "aliases": [],
          "description": "Service groups that should be directly assigned to this service.\nServicegroups can be useful for various reasons.\nThey are helpful to provided service-type specific view in Icinga Web 2, either for custom dashboards or as an instrument to enforce restrictions.\nService groups can be directly assigned to single services or to service templates.",
          "default": "[]",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "http_agent": {
          "aliases": [],
          "description": "Header to identify as, generally appears in web server logs.",
          "default": "ansible-httpget",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "imports": {
          "aliases": [],
          "description": "Importable templates, add as many as you want.\nPlease note that order matters when importing properties from multiple templates - last one wins.",
          "default": "[]",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "max_check_attempts": {
          "aliases": [],
          "description": "Defines after how many check attempts a new hard state is reached.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "notes": {
          "aliases": [],
          "description": "Additional notes for this object.",
          "type": "str",
          "required": false,
          "version_added": "1.8.0",
          "suboptions": {}
        },
        "notes_url": {
          "aliases": [],
          "description": "An URL pointing to additional notes for this object.\nSeparate multiple urls like this \"'http://url1' 'http://url2'\".\nMaximum length is 255 characters.",
          "type": "str",
          "required": false,
          "version_added": "1.8.0",
          "suboptions": {}
        },
        "object_name": {
          "aliases": [
            "name"
          ],
          "description": "Name of the service template.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "retry_interval": {
          "aliases": [],
          "description": "Retry interval, will be applied after a state change unless the next hard state is reached.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Apply feature state.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "url": {
          "aliases": [],
          "description": "HTTP, HTTPS, or FTP URL in the form (http|https|ftp)://[user[:pass]]@host.domain[:port]/path",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "url_password": {
          "aliases": [],
          "description": "The password for use in HTTP basic authentication.\nIf the I(url_username) parameter is not specified, the I(url_password) parameter will not be used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "url_username": {
          "aliases": [],
          "description": "The username for use in HTTP basic authentication.\nThis parameter can be used without I(url_password) for sites that allow empty passwords",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "use_agent": {
          "aliases": [],
          "description": "Whether the check commmand for this service should be executed on the Icinga agent.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "use_gssapi": {
          "aliases": [],
          "description": "Use GSSAPI to perform the authentication, typically this is for Kerberos or Kerberos through Negotiate authentication.\nRequires the Python library L(gssapi,https://github.com/pythongssapi/python-gssapi) to be installed.\nCredentials for GSSAPI can be specified with I(url_username)/I(url_password) or with the GSSAPI env var C(KRB5CCNAME) that specified a custom Kerberos credential cache.\nNTLM authentication is C(not) supported even if the GSSAPI mech for NTLM has been installed.",
          "default": "False",
          "type": "bool",
          "required": false,
          "version_added": "2.11",
          "suboptions": {}
        },
        "use_proxy": {
          "aliases": [],
          "description": "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "If C(no), SSL certificates will not be validated.\nThis should only be used on personally controlled sites using self-signed certificates.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "vars": {
          "aliases": [],
          "description": "Custom properties of the service template.",
          "default": "{}",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "volatile": {
          "aliases": [],
          "description": "Whether this check is volatile.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Manage service templates in Icinga2",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create servicetemplate\n  t_systems_mms.icinga_director.icinga_service_template:\n    state: present\n    url: \"{{ icinga_url }}\"\n    url_username: \"{{ icinga_user }}\"\n    url_password: \"{{ icinga_pass }}\"\n    object_name: fooservicetemplate\n    use_agent: false\n    vars:\n      procs_argument: consul\n      procs_critical: '1:'\n      procs_warning: '1:'\n\n- name: Update servicetemplate\n  t_systems_mms.icinga_director.icinga_service_template:\n    state: present\n    url: \"{{ icinga_url }}\"\n    url_username: \"{{ icinga_user }}\"\n    url_password: \"{{ icinga_pass }}\"\n    object_name: fooservicetemplate\n    notes: \"example note\"\n    notes_url: \"'http://url1' 'http://url2'\"\n    append: true\n\n- name: Create servicetemplate with event command\n  t_systems_mms.icinga_director.icinga_service_template:\n    state: present\n    url: \"{{ icinga_url }}\"\n    url_username: \"{{ icinga_user }}\"\n    url_password: \"{{ icinga_pass }}\"\n    object_name: apache_check_servicetemplate\n    use_agent: false\n    event_command: restart_httpd\n    notes: \"example note\"\n    notes_url: \"'http://url1' 'http://url2'\"\n"
  },
  "t_systems_mms.icinga_director.icinga_service_template_info": {
    "doc": {
      "description": "Get a list of service template objects from Icinga2 through the director API.",
      "has_action": false,
      "notes": "This module supports check mode.",
      "options": {
        "client_cert": {
          "aliases": [],
          "description": "PEM formatted certificate chain file to be used for SSL client authentication.\nThis file can also include the key as well, and if the key is included, C(client_key) is not required.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "client_key": {
          "aliases": [],
          "description": "PEM formatted file that contains your private key to be used for SSL client authentication.\nIf C(client_cert) contains both the certificate and key, this option is not required.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "force": {
          "aliases": [
            "thirsty"
          ],
          "description": "If C(yes) do not get a cached copy.\nAlias C(thirsty) has been deprecated and will be removed in 2.13.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "force_basic_auth": {
          "aliases": [],
          "description": "Credentials specified with I(url_username) and I(url_password) should be passed in HTTP Header.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "http_agent": {
          "aliases": [],
          "description": "Header to identify as, generally appears in web server logs.",
          "default": "ansible-httpget",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "query": {
          "aliases": [],
          "description": "Text to filter search results.\nThe text is matched on object_name.\nOnly objects containing this text will be returned in the resultset.\nRequires Icinga Director 1.8.0+, in earlier versions this parameter is ignored and all objects are returned.",
          "default": "",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resolved": {
          "aliases": [],
          "description": "Resolve all inherited object properties and omit templates in output.",
          "default": "False",
          "type": "bool",
          "required": false,
          "choices": [
            "True",
            "False"
          ],
          "suboptions": {}
        },
        "url": {
          "aliases": [],
          "description": "HTTP, HTTPS, or FTP URL in the form (http|https|ftp)://[user[:pass]]@host.domain[:port]/path",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "url_password": {
          "aliases": [],
          "description": "The password for use in HTTP basic authentication.\nIf the I(url_username) parameter is not specified, the I(url_password) parameter will not be used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "url_username": {
          "aliases": [],
          "description": "The username for use in HTTP basic authentication.\nThis parameter can be used without I(url_password) for sites that allow empty passwords",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "use_gssapi": {
          "aliases": [],
          "description": "Use GSSAPI to perform the authentication, typically this is for Kerberos or Kerberos through Negotiate authentication.\nRequires the Python library L(gssapi,https://github.com/pythongssapi/python-gssapi) to be installed.\nCredentials for GSSAPI can be specified with I(url_username)/I(url_password) or with the GSSAPI env var C(KRB5CCNAME) that specified a custom Kerberos credential cache.\nNTLM authentication is C(not) supported even if the GSSAPI mech for NTLM has been installed.",
          "default": "False",
          "type": "bool",
          "required": false,
          "version_added": "2.11",
          "suboptions": {}
        },
        "use_proxy": {
          "aliases": [],
          "description": "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "If C(no), SSL certificates will not be validated.\nThis should only be used on personally controlled sites using self-signed certificates.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Query service templates in Icinga2",
      "version_added": "1.13.0"
    },
    "examples": "\n- name: Query a service template in icinga\n  t_systems_mms.icinga_director.icinga_service_template_info:\n    url: \"{{ icinga_url }}\"\n    url_username: \"{{ icinga_user }}\"\n    url_password: \"{{ icinga_pass }}\"\n    query: \"fooservicetemplate\"\n"
  },
  "t_systems_mms.icinga_director.icinga_servicegroup": {
    "doc": {
      "description": "Add or remove a servicegroup to Icinga2 through the director API.",
      "has_action": false,
      "notes": "This module supports check mode.",
      "options": {
        "append": {
          "aliases": [],
          "description": "Do not overwrite the whole object but instead append the defined properties.\nNote - Appending to existing vars, imports or any other list/dict is not possible. You have to overwrite the complete list/dict.\nNote - Variables that are set by default will also be applied, even if not set.",
          "type": "bool",
          "required": false,
          "choices": [
            "True",
            "False"
          ],
          "version_added": "1.25.0",
          "suboptions": {}
        },
        "assign_filter": {
          "aliases": [],
          "description": "This allows you to configure an assignment filter.\nPlease feel free to combine as many nested operators as you want.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "client_cert": {
          "aliases": [],
          "description": "PEM formatted certificate chain file to be used for SSL client authentication.\nThis file can also include the key as well, and if the key is included, C(client_key) is not required.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "client_key": {
          "aliases": [],
          "description": "PEM formatted file that contains your private key to be used for SSL client authentication.\nIf C(client_cert) contains both the certificate and key, this option is not required.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "display_name": {
          "aliases": [],
          "description": "An alternative display name for this group.\nIf you wonder how this could be helpful just leave it blank.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "force": {
          "aliases": [
            "thirsty"
          ],
          "description": "If C(yes) do not get a cached copy.\nAlias C(thirsty) has been deprecated and will be removed in 2.13.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "force_basic_auth": {
          "aliases": [],
          "description": "Credentials specified with I(url_username) and I(url_password) should be passed in HTTP Header.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "http_agent": {
          "aliases": [],
          "description": "Header to identify as, generally appears in web server logs.",
          "default": "ansible-httpget",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "object_name": {
          "aliases": [
            "name"
          ],
          "description": "Name for the Icinga servicegroup.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Apply feature state.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "url": {
          "aliases": [],
          "description": "HTTP, HTTPS, or FTP URL in the form (http|https|ftp)://[user[:pass]]@host.domain[:port]/path",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "url_password": {
          "aliases": [],
          "description": "The password for use in HTTP basic authentication.\nIf the I(url_username) parameter is not specified, the I(url_password) parameter will not be used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "url_username": {
          "aliases": [],
          "description": "The username for use in HTTP basic authentication.\nThis parameter can be used without I(url_password) for sites that allow empty passwords",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "use_gssapi": {
          "aliases": [],
          "description": "Use GSSAPI to perform the authentication, typically this is for Kerberos or Kerberos through Negotiate authentication.\nRequires the Python library L(gssapi,https://github.com/pythongssapi/python-gssapi) to be installed.\nCredentials for GSSAPI can be specified with I(url_username)/I(url_password) or with the GSSAPI env var C(KRB5CCNAME) that specified a custom Kerberos credential cache.\nNTLM authentication is C(not) supported even if the GSSAPI mech for NTLM has been installed.",
          "default": "False",
          "type": "bool",
          "required": false,
          "version_added": "2.11",
          "suboptions": {}
        },
        "use_proxy": {
          "aliases": [],
          "description": "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "If C(no), SSL certificates will not be validated.\nThis should only be used on personally controlled sites using self-signed certificates.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Manage servicegroups in Icinga2",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create servicegroup\n  t_systems_mms.icinga_director.icinga_servicegroup:\n    state: present\n    url: \"{{ icinga_url }}\"\n    url_username: \"{{ icinga_user }}\"\n    url_password: \"{{ icinga_pass }}\"\n    object_name: fooservicegroup\n    assign_filter: 'host.name=\"foo\"'\n\n- name: Update servicegroup\n  t_systems_mms.icinga_director.icinga_servicegroup:\n    state: present\n    url: \"{{ icinga_url }}\"\n    url_username: \"{{ icinga_user }}\"\n    url_password: \"{{ icinga_pass }}\"\n    object_name: fooservicegroup\n    display_name: fooservicegroup\n    append: true\n"
  },
  "t_systems_mms.icinga_director.icinga_servicegroup_info": {
    "doc": {
      "description": "Get a list of servicegroup objects from Icinga2 through the director API.",
      "has_action": false,
      "notes": "This module supports check mode.",
      "options": {
        "client_cert": {
          "aliases": [],
          "description": "PEM formatted certificate chain file to be used for SSL client authentication.\nThis file can also include the key as well, and if the key is included, C(client_key) is not required.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "client_key": {
          "aliases": [],
          "description": "PEM formatted file that contains your private key to be used for SSL client authentication.\nIf C(client_cert) contains both the certificate and key, this option is not required.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "force": {
          "aliases": [
            "thirsty"
          ],
          "description": "If C(yes) do not get a cached copy.\nAlias C(thirsty) has been deprecated and will be removed in 2.13.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "force_basic_auth": {
          "aliases": [],
          "description": "Credentials specified with I(url_username) and I(url_password) should be passed in HTTP Header.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "http_agent": {
          "aliases": [],
          "description": "Header to identify as, generally appears in web server logs.",
          "default": "ansible-httpget",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "query": {
          "aliases": [],
          "description": "Text to filter search results.\nThe text is matched on object_name.\nOnly objects containing this text will be returned in the resultset.\nRequires Icinga Director 1.8.0+, in earlier versions this parameter is ignored and all objects are returned.",
          "default": "",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resolved": {
          "aliases": [],
          "description": "Resolve all inherited object properties and omit templates in output.",
          "default": "False",
          "type": "bool",
          "required": false,
          "choices": [
            "True",
            "False"
          ],
          "suboptions": {}
        },
        "url": {
          "aliases": [],
          "description": "HTTP, HTTPS, or FTP URL in the form (http|https|ftp)://[user[:pass]]@host.domain[:port]/path",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "url_password": {
          "aliases": [],
          "description": "The password for use in HTTP basic authentication.\nIf the I(url_username) parameter is not specified, the I(url_password) parameter will not be used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "url_username": {
          "aliases": [],
          "description": "The username for use in HTTP basic authentication.\nThis parameter can be used without I(url_password) for sites that allow empty passwords",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "use_gssapi": {
          "aliases": [],
          "description": "Use GSSAPI to perform the authentication, typically this is for Kerberos or Kerberos through Negotiate authentication.\nRequires the Python library L(gssapi,https://github.com/pythongssapi/python-gssapi) to be installed.\nCredentials for GSSAPI can be specified with I(url_username)/I(url_password) or with the GSSAPI env var C(KRB5CCNAME) that specified a custom Kerberos credential cache.\nNTLM authentication is C(not) supported even if the GSSAPI mech for NTLM has been installed.",
          "default": "False",
          "type": "bool",
          "required": false,
          "version_added": "2.11",
          "suboptions": {}
        },
        "use_proxy": {
          "aliases": [],
          "description": "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "If C(no), SSL certificates will not be validated.\nThis should only be used on personally controlled sites using self-signed certificates.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Query servicegroups in Icinga2",
      "version_added": "1.13.0"
    },
    "examples": "\n- name: Query a servicegroup in icinga\n  t_systems_mms.icinga_director.icinga_servicegroup_info:\n    url: \"{{ icinga_url }}\"\n    url_username: \"{{ icinga_user }}\"\n    url_password: \"{{ icinga_pass }}\"\n    query: \"fooservicegroup\"\n"
  },
  "t_systems_mms.icinga_director.icinga_timeperiod": {
    "doc": {
      "description": "Add or remove a timeperiod to Icinga2 through the director API.",
      "has_action": false,
      "notes": "This module supports check mode.",
      "options": {
        "append": {
          "aliases": [],
          "description": "Do not overwrite the whole object but instead append the defined properties.\nNote - Appending to existing vars, imports or any other list/dict is not possible. You have to overwrite the complete list/dict.\nNote - Variables that are set by default will also be applied, even if not set.",
          "type": "bool",
          "required": false,
          "choices": [
            "True",
            "False"
          ],
          "version_added": "1.25.0",
          "suboptions": {}
        },
        "client_cert": {
          "aliases": [],
          "description": "PEM formatted certificate chain file to be used for SSL client authentication.\nThis file can also include the key as well, and if the key is included, C(client_key) is not required.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "client_key": {
          "aliases": [],
          "description": "PEM formatted file that contains your private key to be used for SSL client authentication.\nIf C(client_cert) contains both the certificate and key, this option is not required.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "display_name": {
          "aliases": [],
          "description": "Alternative name for this timeperiod.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "force": {
          "aliases": [
            "thirsty"
          ],
          "description": "If C(yes) do not get a cached copy.\nAlias C(thirsty) has been deprecated and will be removed in 2.13.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "force_basic_auth": {
          "aliases": [],
          "description": "Credentials specified with I(url_username) and I(url_password) should be passed in HTTP Header.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "http_agent": {
          "aliases": [],
          "description": "Header to identify as, generally appears in web server logs.",
          "default": "ansible-httpget",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "imports": {
          "aliases": [],
          "description": "Importable templates, add as many as you want.\nPlease note that order matters when importing properties from multiple templates - last one wins.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "object_name": {
          "aliases": [
            "name"
          ],
          "description": "Name of the time period.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "ranges": {
          "aliases": [],
          "description": "A dict of days and timeperiods.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Apply feature state.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "url": {
          "aliases": [],
          "description": "HTTP, HTTPS, or FTP URL in the form (http|https|ftp)://[user[:pass]]@host.domain[:port]/path",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "url_password": {
          "aliases": [],
          "description": "The password for use in HTTP basic authentication.\nIf the I(url_username) parameter is not specified, the I(url_password) parameter will not be used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "url_username": {
          "aliases": [],
          "description": "The username for use in HTTP basic authentication.\nThis parameter can be used without I(url_password) for sites that allow empty passwords",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "use_gssapi": {
          "aliases": [],
          "description": "Use GSSAPI to perform the authentication, typically this is for Kerberos or Kerberos through Negotiate authentication.\nRequires the Python library L(gssapi,https://github.com/pythongssapi/python-gssapi) to be installed.\nCredentials for GSSAPI can be specified with I(url_username)/I(url_password) or with the GSSAPI env var C(KRB5CCNAME) that specified a custom Kerberos credential cache.\nNTLM authentication is C(not) supported even if the GSSAPI mech for NTLM has been installed.",
          "default": "False",
          "type": "bool",
          "required": false,
          "version_added": "2.11",
          "suboptions": {}
        },
        "use_proxy": {
          "aliases": [],
          "description": "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "If C(no), SSL certificates will not be validated.\nThis should only be used on personally controlled sites using self-signed certificates.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Manage timeperiods in Icinga2",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create timeperiod\n  t_systems_mms.icinga_director.icinga_timeperiod:\n    state: present\n    url: \"{{ icinga_url }}\"\n    url_username: \"{{ icinga_user }}\"\n    url_password: \"{{ icinga_pass }}\"\n    object_name: '24/7'\n    imports:\n      - \"timeperiod_template\"\n    ranges:\n      monday: \"00:00-23:59\"\n      tuesday: \"00:00-23:59\"\n      wednesday: \"00:00-23:59\"\n      thursday: \"00:00-23:59\"\n      friday: \"00:00-23:59\"\n      saturday: \"00:00-23:59\"\n      sunday: \"00:00-23:59\"\n\n- name: Update timeperiod\n  t_systems_mms.icinga_director.icinga_timeperiod:\n    state: present\n    url: \"{{ icinga_url }}\"\n    url_username: \"{{ icinga_user }}\"\n    url_password: \"{{ icinga_pass }}\"\n    object_name: '24/7'\n    display_name: '24/7'\n    append: true\n"
  },
  "t_systems_mms.icinga_director.icinga_timeperiod_info": {
    "doc": {
      "description": "Get a list of timeperiod objects from Icinga2 through the director API.",
      "has_action": false,
      "notes": "This module supports check mode.",
      "options": {
        "client_cert": {
          "aliases": [],
          "description": "PEM formatted certificate chain file to be used for SSL client authentication.\nThis file can also include the key as well, and if the key is included, C(client_key) is not required.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "client_key": {
          "aliases": [],
          "description": "PEM formatted file that contains your private key to be used for SSL client authentication.\nIf C(client_cert) contains both the certificate and key, this option is not required.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "force": {
          "aliases": [
            "thirsty"
          ],
          "description": "If C(yes) do not get a cached copy.\nAlias C(thirsty) has been deprecated and will be removed in 2.13.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "force_basic_auth": {
          "aliases": [],
          "description": "Credentials specified with I(url_username) and I(url_password) should be passed in HTTP Header.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "http_agent": {
          "aliases": [],
          "description": "Header to identify as, generally appears in web server logs.",
          "default": "ansible-httpget",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "query": {
          "aliases": [],
          "description": "Text to filter search results.\nThe text is matched on object_name.\nOnly objects containing this text will be returned in the resultset.\nRequires Icinga Director 1.8.0+, in earlier versions this parameter is ignored and all objects are returned.",
          "default": "",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resolved": {
          "aliases": [],
          "description": "Resolve all inherited object properties and omit templates in output.",
          "default": "False",
          "type": "bool",
          "required": false,
          "choices": [
            "True",
            "False"
          ],
          "suboptions": {}
        },
        "url": {
          "aliases": [],
          "description": "HTTP, HTTPS, or FTP URL in the form (http|https|ftp)://[user[:pass]]@host.domain[:port]/path",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "url_password": {
          "aliases": [],
          "description": "The password for use in HTTP basic authentication.\nIf the I(url_username) parameter is not specified, the I(url_password) parameter will not be used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "url_username": {
          "aliases": [],
          "description": "The username for use in HTTP basic authentication.\nThis parameter can be used without I(url_password) for sites that allow empty passwords",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "use_gssapi": {
          "aliases": [],
          "description": "Use GSSAPI to perform the authentication, typically this is for Kerberos or Kerberos through Negotiate authentication.\nRequires the Python library L(gssapi,https://github.com/pythongssapi/python-gssapi) to be installed.\nCredentials for GSSAPI can be specified with I(url_username)/I(url_password) or with the GSSAPI env var C(KRB5CCNAME) that specified a custom Kerberos credential cache.\nNTLM authentication is C(not) supported even if the GSSAPI mech for NTLM has been installed.",
          "default": "False",
          "type": "bool",
          "required": false,
          "version_added": "2.11",
          "suboptions": {}
        },
        "use_proxy": {
          "aliases": [],
          "description": "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "If C(no), SSL certificates will not be validated.\nThis should only be used on personally controlled sites using self-signed certificates.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Query timeperiods in Icinga2",
      "version_added": "1.13.0"
    },
    "examples": "\n- name: Query a timeperiod in icinga\n  t_systems_mms.icinga_director.icinga_timeperiod_info:\n    url: \"{{ icinga_url }}\"\n    url_username: \"{{ icinga_user }}\"\n    url_password: \"{{ icinga_pass }}\"\n    query: \"24/7\"\n"
  },
  "t_systems_mms.icinga_director.icinga_timeperiod_template": {
    "doc": {
      "description": "Add or remove a timeperiod template to Icinga2 through the director API.",
      "has_action": false,
      "notes": "This module supports check mode.",
      "options": {
        "append": {
          "aliases": [],
          "description": "Do not overwrite the whole object but instead append the defined properties.\nNote - Appending to existing vars, imports or any other list/dict is not possible. You have to overwrite the complete list/dict.\nNote - Variables that are set by default will also be applied, even if not set.",
          "type": "bool",
          "required": false,
          "choices": [
            "True",
            "False"
          ],
          "version_added": "1.25.0",
          "suboptions": {}
        },
        "client_cert": {
          "aliases": [],
          "description": "PEM formatted certificate chain file to be used for SSL client authentication.\nThis file can also include the key as well, and if the key is included, C(client_key) is not required.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "client_key": {
          "aliases": [],
          "description": "PEM formatted file that contains your private key to be used for SSL client authentication.\nIf C(client_cert) contains both the certificate and key, this option is not required.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "disabled": {
          "aliases": [],
          "description": "Disabled objects will not be deployed.",
          "default": "False",
          "type": "bool",
          "required": false,
          "choices": [
            "True",
            "False"
          ],
          "suboptions": {}
        },
        "display_name": {
          "aliases": [],
          "description": "Alternative name for this timeperiod template.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "excludes": {
          "aliases": [
            "exclude_period"
          ],
          "description": "Exclude other time periods from this.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "force": {
          "aliases": [
            "thirsty"
          ],
          "description": "If C(yes) do not get a cached copy.\nAlias C(thirsty) has been deprecated and will be removed in 2.13.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "force_basic_auth": {
          "aliases": [],
          "description": "Credentials specified with I(url_username) and I(url_password) should be passed in HTTP Header.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "http_agent": {
          "aliases": [],
          "description": "Header to identify as, generally appears in web server logs.",
          "default": "ansible-httpget",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "imports": {
          "aliases": [],
          "description": "Importable templates, add as many as you want.\nPlease note that order matters when importing properties from multiple templates - last one wins.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "includes": {
          "aliases": [
            "include_period"
          ],
          "description": "Include other time periods into this.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "object_name": {
          "aliases": [
            "name"
          ],
          "description": "Name of the time period.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "prefer_includes": {
          "aliases": [],
          "description": "Whether to prefer timeperiods includes or excludes. Default to true.",
          "default": "True",
          "type": "bool",
          "required": false,
          "choices": [
            "True",
            "False"
          ],
          "suboptions": {}
        },
        "ranges": {
          "aliases": [],
          "description": "A dict of days and timeperiods.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Apply feature state.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "update_method": {
          "aliases": [],
          "description": "Define the update method.",
          "default": "LegacyTimePeriod",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "url": {
          "aliases": [],
          "description": "HTTP, HTTPS, or FTP URL in the form (http|https|ftp)://[user[:pass]]@host.domain[:port]/path",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "url_password": {
          "aliases": [],
          "description": "The password for use in HTTP basic authentication.\nIf the I(url_username) parameter is not specified, the I(url_password) parameter will not be used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "url_username": {
          "aliases": [],
          "description": "The username for use in HTTP basic authentication.\nThis parameter can be used without I(url_password) for sites that allow empty passwords",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "use_gssapi": {
          "aliases": [],
          "description": "Use GSSAPI to perform the authentication, typically this is for Kerberos or Kerberos through Negotiate authentication.\nRequires the Python library L(gssapi,https://github.com/pythongssapi/python-gssapi) to be installed.\nCredentials for GSSAPI can be specified with I(url_username)/I(url_password) or with the GSSAPI env var C(KRB5CCNAME) that specified a custom Kerberos credential cache.\nNTLM authentication is C(not) supported even if the GSSAPI mech for NTLM has been installed.",
          "default": "False",
          "type": "bool",
          "required": false,
          "version_added": "2.11",
          "suboptions": {}
        },
        "use_proxy": {
          "aliases": [],
          "description": "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "If C(no), SSL certificates will not be validated.\nThis should only be used on personally controlled sites using self-signed certificates.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "zone": {
          "aliases": [],
          "description": "Set the zone.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Manage timeperiod templates in Icinga2",
      "version_added": "1.17.0"
    },
    "examples": "\n- name: Create timeperiod template\n  t_systems_mms.icinga_director.icinga_timeperiod_template:\n    state: present\n    url: \"{{ icinga_url }}\"\n    url_username: \"{{ icinga_user }}\"\n    url_password: \"{{ icinga_pass }}\"\n    object_name: \"timeperiod_template\"\n    imports: []\n    disabled: false\n    prefer_includes: false\n    ranges:\n      monday: \"00:00-23:59\"\n      tuesday: \"00:00-23:59\"\n      wednesday: \"00:00-23:59\"\n      thursday: \"00:00-23:59\"\n      friday: \"00:00-23:59\"\n      saturday: \"00:00-23:59\"\n      sunday: \"00:00-23:59\"\n    update_method: \"LegacyTimePeriod\"\n\n- name: Update timeperiod template\n  t_systems_mms.icinga_director.icinga_timeperiod_template:\n    state: present\n    url: \"{{ icinga_url }}\"\n    url_username: \"{{ icinga_user }}\"\n    url_password: \"{{ icinga_pass }}\"\n    object_name: \"timeperiod_template\"\n    display_name: \"timeperiod template\"\n    append: true\n"
  },
  "t_systems_mms.icinga_director.icinga_timeperiod_template_info": {
    "doc": {
      "description": "Get a list of timeperiod template objects from Icinga2 through the director API.",
      "has_action": false,
      "notes": "This module supports check mode.",
      "options": {
        "client_cert": {
          "aliases": [],
          "description": "PEM formatted certificate chain file to be used for SSL client authentication.\nThis file can also include the key as well, and if the key is included, C(client_key) is not required.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "client_key": {
          "aliases": [],
          "description": "PEM formatted file that contains your private key to be used for SSL client authentication.\nIf C(client_cert) contains both the certificate and key, this option is not required.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "force": {
          "aliases": [
            "thirsty"
          ],
          "description": "If C(yes) do not get a cached copy.\nAlias C(thirsty) has been deprecated and will be removed in 2.13.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "force_basic_auth": {
          "aliases": [],
          "description": "Credentials specified with I(url_username) and I(url_password) should be passed in HTTP Header.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "http_agent": {
          "aliases": [],
          "description": "Header to identify as, generally appears in web server logs.",
          "default": "ansible-httpget",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "query": {
          "aliases": [],
          "description": "Text to filter search results.\nThe text is matched on object_name.\nOnly objects containing this text will be returned in the resultset.\nRequires Icinga Director 1.8.0+, in earlier versions this parameter is ignored and all objects are returned.",
          "default": "",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resolved": {
          "aliases": [],
          "description": "Resolve all inherited object properties and omit templates in output.",
          "default": "False",
          "type": "bool",
          "required": false,
          "choices": [
            "True",
            "False"
          ],
          "suboptions": {}
        },
        "url": {
          "aliases": [],
          "description": "HTTP, HTTPS, or FTP URL in the form (http|https|ftp)://[user[:pass]]@host.domain[:port]/path",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "url_password": {
          "aliases": [],
          "description": "The password for use in HTTP basic authentication.\nIf the I(url_username) parameter is not specified, the I(url_password) parameter will not be used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "url_username": {
          "aliases": [],
          "description": "The username for use in HTTP basic authentication.\nThis parameter can be used without I(url_password) for sites that allow empty passwords",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "use_gssapi": {
          "aliases": [],
          "description": "Use GSSAPI to perform the authentication, typically this is for Kerberos or Kerberos through Negotiate authentication.\nRequires the Python library L(gssapi,https://github.com/pythongssapi/python-gssapi) to be installed.\nCredentials for GSSAPI can be specified with I(url_username)/I(url_password) or with the GSSAPI env var C(KRB5CCNAME) that specified a custom Kerberos credential cache.\nNTLM authentication is C(not) supported even if the GSSAPI mech for NTLM has been installed.",
          "default": "False",
          "type": "bool",
          "required": false,
          "version_added": "2.11",
          "suboptions": {}
        },
        "use_proxy": {
          "aliases": [],
          "description": "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "If C(no), SSL certificates will not be validated.\nThis should only be used on personally controlled sites using self-signed certificates.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Query timeperiod templates in Icinga2",
      "version_added": "1.17.0"
    },
    "examples": "\n- name: Query a timeperiod template in icinga\n  t_systems_mms.icinga_director.icinga_timeperiod_template_info:\n    url: \"{{ icinga_url }}\"\n    url_username: \"{{ icinga_user }}\"\n    url_password: \"{{ icinga_pass }}\"\n    query: \"timeperiod_template\"\n"
  },
  "t_systems_mms.icinga_director.icinga_user": {
    "doc": {
      "description": "Add or remove a user to Icinga2 through the director API.",
      "has_action": false,
      "notes": "This module supports check mode.",
      "options": {
        "append": {
          "aliases": [],
          "description": "Do not overwrite the whole object but instead append the defined properties.\nNote - Appending to existing vars, imports or any other list/dict is not possible. You have to overwrite the complete list/dict.\nNote - Variables that are set by default will also be applied, even if not set.",
          "type": "bool",
          "required": false,
          "choices": [
            "True",
            "False"
          ],
          "version_added": "1.25.0",
          "suboptions": {}
        },
        "client_cert": {
          "aliases": [],
          "description": "PEM formatted certificate chain file to be used for SSL client authentication.\nThis file can also include the key as well, and if the key is included, C(client_key) is not required.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "client_key": {
          "aliases": [],
          "description": "PEM formatted file that contains your private key to be used for SSL client authentication.\nIf C(client_cert) contains both the certificate and key, this option is not required.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "disabled": {
          "aliases": [],
          "description": "Disabled objects will not be deployed.",
          "default": "False",
          "type": "bool",
          "required": false,
          "choices": [
            "True",
            "False"
          ],
          "suboptions": {}
        },
        "display_name": {
          "aliases": [],
          "description": "Alternative name for this user.\nIn case your object name is a username, this could be the full name of the corresponding person.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "email": {
          "aliases": [],
          "description": "The Email address of the user.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "force": {
          "aliases": [
            "thirsty"
          ],
          "description": "If C(yes) do not get a cached copy.\nAlias C(thirsty) has been deprecated and will be removed in 2.13.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "force_basic_auth": {
          "aliases": [],
          "description": "Credentials specified with I(url_username) and I(url_password) should be passed in HTTP Header.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "groups": {
          "aliases": [],
          "description": "User groups that should be directly assigned to this user.\nGroups can be useful for various reasons. You might prefer to send notifications to groups instead of single users.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "http_agent": {
          "aliases": [],
          "description": "Header to identify as, generally appears in web server logs.",
          "default": "ansible-httpget",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "imports": {
          "aliases": [],
          "description": "Importable templates, add as many as you want.\nPlease note that order matters when importing properties from multiple templates - last one wins.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "object_name": {
          "aliases": [
            "name"
          ],
          "description": "Name of the user.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "pager": {
          "aliases": [],
          "description": "The pager address of the user.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "period": {
          "aliases": [],
          "description": "The name of a time period which determines when notifications to this User should be triggered. Not set by default.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Apply feature state.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "url": {
          "aliases": [],
          "description": "HTTP, HTTPS, or FTP URL in the form (http|https|ftp)://[user[:pass]]@host.domain[:port]/path",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "url_password": {
          "aliases": [],
          "description": "The password for use in HTTP basic authentication.\nIf the I(url_username) parameter is not specified, the I(url_password) parameter will not be used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "url_username": {
          "aliases": [],
          "description": "The username for use in HTTP basic authentication.\nThis parameter can be used without I(url_password) for sites that allow empty passwords",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "use_gssapi": {
          "aliases": [],
          "description": "Use GSSAPI to perform the authentication, typically this is for Kerberos or Kerberos through Negotiate authentication.\nRequires the Python library L(gssapi,https://github.com/pythongssapi/python-gssapi) to be installed.\nCredentials for GSSAPI can be specified with I(url_username)/I(url_password) or with the GSSAPI env var C(KRB5CCNAME) that specified a custom Kerberos credential cache.\nNTLM authentication is C(not) supported even if the GSSAPI mech for NTLM has been installed.",
          "default": "False",
          "type": "bool",
          "required": false,
          "version_added": "2.11",
          "suboptions": {}
        },
        "use_proxy": {
          "aliases": [],
          "description": "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "If C(no), SSL certificates will not be validated.\nThis should only be used on personally controlled sites using self-signed certificates.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Manage users in Icinga2",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create user\n  t_systems_mms.icinga_director.icinga_user:\n    state: present\n    url: \"{{ icinga_url }}\"\n    url_username: \"{{ icinga_user }}\"\n    url_password: \"{{ icinga_pass }}\"\n    object_name: \"rb\"\n    pager: 'SIP/emergency'\n    period: '24/7'\n    email: \"foouser@example.com\"\n    imports:\n      - foousertemplate\n    groups:\n      - onCall\n\n- name: Update user\n  t_systems_mms.icinga_director.icinga_user:\n    state: present\n    url: \"{{ icinga_url }}\"\n    url_username: \"{{ icinga_user }}\"\n    url_password: \"{{ icinga_pass }}\"\n    object_name: \"rb\"\n    display_name: \"Rufbereitschaft\"\n    append: true\n"
  },
  "t_systems_mms.icinga_director.icinga_user_group": {
    "doc": {
      "description": "Add or remove a user group to Icinga2 through the director API.",
      "has_action": false,
      "notes": "This module supports check mode.",
      "options": {
        "append": {
          "aliases": [],
          "description": "Do not overwrite the whole object but instead append the defined properties.\nNote - Appending to existing vars, imports or any other list/dict is not possible. You have to overwrite the complete list/dict.\nNote - Variables that are set by default will also be applied, even if not set.",
          "type": "bool",
          "required": false,
          "choices": [
            "True",
            "False"
          ],
          "version_added": "1.25.0",
          "suboptions": {}
        },
        "client_cert": {
          "aliases": [],
          "description": "PEM formatted certificate chain file to be used for SSL client authentication.\nThis file can also include the key as well, and if the key is included, C(client_key) is not required.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "client_key": {
          "aliases": [],
          "description": "PEM formatted file that contains your private key to be used for SSL client authentication.\nIf C(client_cert) contains both the certificate and key, this option is not required.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "disabled": {
          "aliases": [],
          "description": "Disabled objects will not be deployed.",
          "default": "False",
          "type": "bool",
          "required": false,
          "choices": [
            "True",
            "False"
          ],
          "suboptions": {}
        },
        "display_name": {
          "aliases": [],
          "description": "Alternative name for this user group.\nIn case your object name is a username, this could be the full name of the corresponding person.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "force": {
          "aliases": [
            "thirsty"
          ],
          "description": "If C(yes) do not get a cached copy.\nAlias C(thirsty) has been deprecated and will be removed in 2.13.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "force_basic_auth": {
          "aliases": [],
          "description": "Credentials specified with I(url_username) and I(url_password) should be passed in HTTP Header.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "http_agent": {
          "aliases": [],
          "description": "Header to identify as, generally appears in web server logs.",
          "default": "ansible-httpget",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "object_name": {
          "aliases": [
            "name"
          ],
          "description": "Name of the user group.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Apply feature state.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "url": {
          "aliases": [],
          "description": "HTTP, HTTPS, or FTP URL in the form (http|https|ftp)://[user[:pass]]@host.domain[:port]/path",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "url_password": {
          "aliases": [],
          "description": "The password for use in HTTP basic authentication.\nIf the I(url_username) parameter is not specified, the I(url_password) parameter will not be used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "url_username": {
          "aliases": [],
          "description": "The username for use in HTTP basic authentication.\nThis parameter can be used without I(url_password) for sites that allow empty passwords",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "use_gssapi": {
          "aliases": [],
          "description": "Use GSSAPI to perform the authentication, typically this is for Kerberos or Kerberos through Negotiate authentication.\nRequires the Python library L(gssapi,https://github.com/pythongssapi/python-gssapi) to be installed.\nCredentials for GSSAPI can be specified with I(url_username)/I(url_password) or with the GSSAPI env var C(KRB5CCNAME) that specified a custom Kerberos credential cache.\nNTLM authentication is C(not) supported even if the GSSAPI mech for NTLM has been installed.",
          "default": "False",
          "type": "bool",
          "required": false,
          "version_added": "2.11",
          "suboptions": {}
        },
        "use_proxy": {
          "aliases": [],
          "description": "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "If C(no), SSL certificates will not be validated.\nThis should only be used on personally controlled sites using self-signed certificates.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Manage users groups in Icinga2",
      "version_added": "1.16.0"
    },
    "examples": "\n- name: Create user group\n  t_systems_mms.icinga_director.icinga_user_group:\n    state: present\n    url: \"{{ icinga_url }}\"\n    url_username: \"{{ icinga_user }}\"\n    url_password: \"{{ icinga_pass }}\"\n    object_name: \"onCall\"\n    disabled: false\n\n- name: Update user group\n  t_systems_mms.icinga_director.icinga_user_group:\n    state: present\n    url: \"{{ icinga_url }}\"\n    url_username: \"{{ icinga_user }}\"\n    url_password: \"{{ icinga_pass }}\"\n    object_name: \"onCall\"\n    display_name: \"on call group\"\n    append: true\n"
  },
  "t_systems_mms.icinga_director.icinga_user_group_info": {
    "doc": {
      "description": "Get a list of user group objects from Icinga2 through the director API.",
      "has_action": false,
      "notes": "This module supports check mode.",
      "options": {
        "client_cert": {
          "aliases": [],
          "description": "PEM formatted certificate chain file to be used for SSL client authentication.\nThis file can also include the key as well, and if the key is included, C(client_key) is not required.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "client_key": {
          "aliases": [],
          "description": "PEM formatted file that contains your private key to be used for SSL client authentication.\nIf C(client_cert) contains both the certificate and key, this option is not required.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "force": {
          "aliases": [
            "thirsty"
          ],
          "description": "If C(yes) do not get a cached copy.\nAlias C(thirsty) has been deprecated and will be removed in 2.13.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "force_basic_auth": {
          "aliases": [],
          "description": "Credentials specified with I(url_username) and I(url_password) should be passed in HTTP Header.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "http_agent": {
          "aliases": [],
          "description": "Header to identify as, generally appears in web server logs.",
          "default": "ansible-httpget",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "query": {
          "aliases": [],
          "description": "Text to filter search results.\nThe text is matched on object_name.\nOnly objects containing this text will be returned in the resultset.\nRequires Icinga Director 1.8.0+, in earlier versions this parameter is ignored and all objects are returned.",
          "default": "",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resolved": {
          "aliases": [],
          "description": "Resolve all inherited object properties and omit templates in output.",
          "default": "False",
          "type": "bool",
          "required": false,
          "choices": [
            "True",
            "False"
          ],
          "suboptions": {}
        },
        "url": {
          "aliases": [],
          "description": "HTTP, HTTPS, or FTP URL in the form (http|https|ftp)://[user[:pass]]@host.domain[:port]/path",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "url_password": {
          "aliases": [],
          "description": "The password for use in HTTP basic authentication.\nIf the I(url_username) parameter is not specified, the I(url_password) parameter will not be used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "url_username": {
          "aliases": [],
          "description": "The username for use in HTTP basic authentication.\nThis parameter can be used without I(url_password) for sites that allow empty passwords",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "use_gssapi": {
          "aliases": [],
          "description": "Use GSSAPI to perform the authentication, typically this is for Kerberos or Kerberos through Negotiate authentication.\nRequires the Python library L(gssapi,https://github.com/pythongssapi/python-gssapi) to be installed.\nCredentials for GSSAPI can be specified with I(url_username)/I(url_password) or with the GSSAPI env var C(KRB5CCNAME) that specified a custom Kerberos credential cache.\nNTLM authentication is C(not) supported even if the GSSAPI mech for NTLM has been installed.",
          "default": "False",
          "type": "bool",
          "required": false,
          "version_added": "2.11",
          "suboptions": {}
        },
        "use_proxy": {
          "aliases": [],
          "description": "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "If C(no), SSL certificates will not be validated.\nThis should only be used on personally controlled sites using self-signed certificates.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Query user groups in Icinga2",
      "version_added": "1.16.0"
    },
    "examples": "\n- name: Query a user group in icinga\n  t_systems_mms.icinga_director.icinga_user_group_info:\n    url: \"{{ icinga_url }}\"\n    url_username: \"{{ icinga_user }}\"\n    url_password: \"{{ icinga_pass }}\"\n    query: \"onCall\"\n"
  },
  "t_systems_mms.icinga_director.icinga_user_info": {
    "doc": {
      "description": "Get a list of user objects from Icinga2 through the director API.",
      "has_action": false,
      "notes": "This module supports check mode.",
      "options": {
        "client_cert": {
          "aliases": [],
          "description": "PEM formatted certificate chain file to be used for SSL client authentication.\nThis file can also include the key as well, and if the key is included, C(client_key) is not required.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "client_key": {
          "aliases": [],
          "description": "PEM formatted file that contains your private key to be used for SSL client authentication.\nIf C(client_cert) contains both the certificate and key, this option is not required.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "force": {
          "aliases": [
            "thirsty"
          ],
          "description": "If C(yes) do not get a cached copy.\nAlias C(thirsty) has been deprecated and will be removed in 2.13.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "force_basic_auth": {
          "aliases": [],
          "description": "Credentials specified with I(url_username) and I(url_password) should be passed in HTTP Header.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "http_agent": {
          "aliases": [],
          "description": "Header to identify as, generally appears in web server logs.",
          "default": "ansible-httpget",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "query": {
          "aliases": [],
          "description": "Text to filter search results.\nThe text is matched on object_name.\nOnly objects containing this text will be returned in the resultset.\nRequires Icinga Director 1.8.0+, in earlier versions this parameter is ignored and all objects are returned.",
          "default": "",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resolved": {
          "aliases": [],
          "description": "Resolve all inherited object properties and omit templates in output.",
          "default": "False",
          "type": "bool",
          "required": false,
          "choices": [
            "True",
            "False"
          ],
          "suboptions": {}
        },
        "url": {
          "aliases": [],
          "description": "HTTP, HTTPS, or FTP URL in the form (http|https|ftp)://[user[:pass]]@host.domain[:port]/path",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "url_password": {
          "aliases": [],
          "description": "The password for use in HTTP basic authentication.\nIf the I(url_username) parameter is not specified, the I(url_password) parameter will not be used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "url_username": {
          "aliases": [],
          "description": "The username for use in HTTP basic authentication.\nThis parameter can be used without I(url_password) for sites that allow empty passwords",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "use_gssapi": {
          "aliases": [],
          "description": "Use GSSAPI to perform the authentication, typically this is for Kerberos or Kerberos through Negotiate authentication.\nRequires the Python library L(gssapi,https://github.com/pythongssapi/python-gssapi) to be installed.\nCredentials for GSSAPI can be specified with I(url_username)/I(url_password) or with the GSSAPI env var C(KRB5CCNAME) that specified a custom Kerberos credential cache.\nNTLM authentication is C(not) supported even if the GSSAPI mech for NTLM has been installed.",
          "default": "False",
          "type": "bool",
          "required": false,
          "version_added": "2.11",
          "suboptions": {}
        },
        "use_proxy": {
          "aliases": [],
          "description": "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "If C(no), SSL certificates will not be validated.\nThis should only be used on personally controlled sites using self-signed certificates.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Query users in Icinga2",
      "version_added": "1.13.0"
    },
    "examples": "\n- name: Query a user in icinga\n  t_systems_mms.icinga_director.icinga_user_info:\n    url: \"{{ icinga_url }}\"\n    url_username: \"{{ icinga_user }}\"\n    url_password: \"{{ icinga_pass }}\"\n    query: \"rb\"\n"
  },
  "t_systems_mms.icinga_director.icinga_user_template": {
    "doc": {
      "description": "Add or remove a user template to Icinga2 through the director API.",
      "has_action": false,
      "notes": "This module supports check mode.",
      "options": {
        "append": {
          "aliases": [],
          "description": "Do not overwrite the whole object but instead append the defined properties.\nNote - Appending to existing vars, imports or any other list/dict is not possible. You have to overwrite the complete list/dict.\nNote - Variables that are set by default will also be applied, even if not set.",
          "type": "bool",
          "required": false,
          "choices": [
            "True",
            "False"
          ],
          "version_added": "1.25.0",
          "suboptions": {}
        },
        "client_cert": {
          "aliases": [],
          "description": "PEM formatted certificate chain file to be used for SSL client authentication.\nThis file can also include the key as well, and if the key is included, C(client_key) is not required.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "client_key": {
          "aliases": [],
          "description": "PEM formatted file that contains your private key to be used for SSL client authentication.\nIf C(client_cert) contains both the certificate and key, this option is not required.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "enable_notifications": {
          "aliases": [],
          "description": "Whether to send notifications for this user.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "force": {
          "aliases": [
            "thirsty"
          ],
          "description": "If C(yes) do not get a cached copy.\nAlias C(thirsty) has been deprecated and will be removed in 2.13.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "force_basic_auth": {
          "aliases": [],
          "description": "Credentials specified with I(url_username) and I(url_password) should be passed in HTTP Header.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "http_agent": {
          "aliases": [],
          "description": "Header to identify as, generally appears in web server logs.",
          "default": "ansible-httpget",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "imports": {
          "aliases": [],
          "description": "Importable templates, add as many as you want.\nPlease note that order matters when importing properties from multiple templates - last one wins.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "object_name": {
          "aliases": [
            "name"
          ],
          "description": "Name of the user template.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "period": {
          "aliases": [],
          "description": "The name of a time period which determines when notifications to this User should be triggered. Not set by default.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Apply feature state.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "url": {
          "aliases": [],
          "description": "HTTP, HTTPS, or FTP URL in the form (http|https|ftp)://[user[:pass]]@host.domain[:port]/path",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "url_password": {
          "aliases": [],
          "description": "The password for use in HTTP basic authentication.\nIf the I(url_username) parameter is not specified, the I(url_password) parameter will not be used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "url_username": {
          "aliases": [],
          "description": "The username for use in HTTP basic authentication.\nThis parameter can be used without I(url_password) for sites that allow empty passwords",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "use_gssapi": {
          "aliases": [],
          "description": "Use GSSAPI to perform the authentication, typically this is for Kerberos or Kerberos through Negotiate authentication.\nRequires the Python library L(gssapi,https://github.com/pythongssapi/python-gssapi) to be installed.\nCredentials for GSSAPI can be specified with I(url_username)/I(url_password) or with the GSSAPI env var C(KRB5CCNAME) that specified a custom Kerberos credential cache.\nNTLM authentication is C(not) supported even if the GSSAPI mech for NTLM has been installed.",
          "default": "False",
          "type": "bool",
          "required": false,
          "version_added": "2.11",
          "suboptions": {}
        },
        "use_proxy": {
          "aliases": [],
          "description": "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "If C(no), SSL certificates will not be validated.\nThis should only be used on personally controlled sites using self-signed certificates.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Manage user templates in Icinga2",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create user template\n  t_systems_mms.icinga_director.icinga_user_template:\n    state: present\n    url: \"{{ icinga_url }}\"\n    url_username: \"{{ icinga_user }}\"\n    url_password: \"{{ icinga_pass }}\"\n    object_name: \"foousertemplate\"\n    enable_notifications: false\n    period: '24/7'\n\n- name: Update user template\n  t_systems_mms.icinga_director.icinga_user_template:\n    state: present\n    url: \"{{ icinga_url }}\"\n    url_username: \"{{ icinga_user }}\"\n    url_password: \"{{ icinga_pass }}\"\n    object_name: \"foousertemplate\"\n    enable_notifications: true\n    append: true\n"
  },
  "t_systems_mms.icinga_director.icinga_user_template_info": {
    "doc": {
      "description": "Get a list of user template objects from Icinga2 through the director API.",
      "has_action": false,
      "notes": "This module supports check mode.",
      "options": {
        "client_cert": {
          "aliases": [],
          "description": "PEM formatted certificate chain file to be used for SSL client authentication.\nThis file can also include the key as well, and if the key is included, C(client_key) is not required.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "client_key": {
          "aliases": [],
          "description": "PEM formatted file that contains your private key to be used for SSL client authentication.\nIf C(client_cert) contains both the certificate and key, this option is not required.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "force": {
          "aliases": [
            "thirsty"
          ],
          "description": "If C(yes) do not get a cached copy.\nAlias C(thirsty) has been deprecated and will be removed in 2.13.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "force_basic_auth": {
          "aliases": [],
          "description": "Credentials specified with I(url_username) and I(url_password) should be passed in HTTP Header.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "http_agent": {
          "aliases": [],
          "description": "Header to identify as, generally appears in web server logs.",
          "default": "ansible-httpget",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "query": {
          "aliases": [],
          "description": "Text to filter search results.\nThe text is matched on object_name.\nOnly objects containing this text will be returned in the resultset.\nRequires Icinga Director 1.8.0+, in earlier versions this parameter is ignored and all objects are returned.",
          "default": "",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resolved": {
          "aliases": [],
          "description": "Resolve all inherited object properties and omit templates in output.",
          "default": "False",
          "type": "bool",
          "required": false,
          "choices": [
            "True",
            "False"
          ],
          "suboptions": {}
        },
        "url": {
          "aliases": [],
          "description": "HTTP, HTTPS, or FTP URL in the form (http|https|ftp)://[user[:pass]]@host.domain[:port]/path",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "url_password": {
          "aliases": [],
          "description": "The password for use in HTTP basic authentication.\nIf the I(url_username) parameter is not specified, the I(url_password) parameter will not be used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "url_username": {
          "aliases": [],
          "description": "The username for use in HTTP basic authentication.\nThis parameter can be used without I(url_password) for sites that allow empty passwords",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "use_gssapi": {
          "aliases": [],
          "description": "Use GSSAPI to perform the authentication, typically this is for Kerberos or Kerberos through Negotiate authentication.\nRequires the Python library L(gssapi,https://github.com/pythongssapi/python-gssapi) to be installed.\nCredentials for GSSAPI can be specified with I(url_username)/I(url_password) or with the GSSAPI env var C(KRB5CCNAME) that specified a custom Kerberos credential cache.\nNTLM authentication is C(not) supported even if the GSSAPI mech for NTLM has been installed.",
          "default": "False",
          "type": "bool",
          "required": false,
          "version_added": "2.11",
          "suboptions": {}
        },
        "use_proxy": {
          "aliases": [],
          "description": "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "If C(no), SSL certificates will not be validated.\nThis should only be used on personally controlled sites using self-signed certificates.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Query user templates in Icinga2",
      "version_added": "1.13.0"
    },
    "examples": "\n- name: Query a user template in icinga\n  t_systems_mms.icinga_director.icinga_user_template_info:\n    url: \"{{ icinga_url }}\"\n    url_username: \"{{ icinga_user }}\"\n    url_password: \"{{ icinga_pass }}\"\n    query: \"foousertemplate\"\n"
  },
  "t_systems_mms.icinga_director.icinga_zone": {
    "doc": {
      "description": "Add or remove a zone to Icinga2 through the director API.",
      "has_action": false,
      "notes": "This module supports check mode.",
      "options": {
        "append": {
          "aliases": [],
          "description": "Do not overwrite the whole object but instead append the defined properties.\nNote - Appending to existing vars, imports or any other list/dict is not possible. You have to overwrite the complete list/dict.\nNote - Variables that are set by default will also be applied, even if not set.",
          "type": "bool",
          "required": false,
          "choices": [
            "True",
            "False"
          ],
          "version_added": "1.25.0",
          "suboptions": {}
        },
        "client_cert": {
          "aliases": [],
          "description": "PEM formatted certificate chain file to be used for SSL client authentication.\nThis file can also include the key as well, and if the key is included, C(client_key) is not required.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "client_key": {
          "aliases": [],
          "description": "PEM formatted file that contains your private key to be used for SSL client authentication.\nIf C(client_cert) contains both the certificate and key, this option is not required.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "force": {
          "aliases": [
            "thirsty"
          ],
          "description": "If C(yes) do not get a cached copy.\nAlias C(thirsty) has been deprecated and will be removed in 2.13.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "force_basic_auth": {
          "aliases": [],
          "description": "Credentials specified with I(url_username) and I(url_password) should be passed in HTTP Header.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "http_agent": {
          "aliases": [],
          "description": "Header to identify as, generally appears in web server logs.",
          "default": "ansible-httpget",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "is_global": {
          "aliases": [],
          "description": "Whether configuration files for this zone should be synced to all endpoints.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "object_name": {
          "aliases": [
            "name"
          ],
          "description": "Icinga object name for this zone.\nThis is usually a fully qualified host name but it could basically be any kind of string.\nTo make things easier for your users we strongly suggest to use meaningful names for templates.\nFor example \"generic-zone\" is ugly, \"Standard Linux Server\" is easier to understand.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "parent": {
          "aliases": [],
          "description": "The name of the parent zone.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Apply feature state.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "url": {
          "aliases": [],
          "description": "HTTP, HTTPS, or FTP URL in the form (http|https|ftp)://[user[:pass]]@host.domain[:port]/path",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "url_password": {
          "aliases": [],
          "description": "The password for use in HTTP basic authentication.\nIf the I(url_username) parameter is not specified, the I(url_password) parameter will not be used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "url_username": {
          "aliases": [],
          "description": "The username for use in HTTP basic authentication.\nThis parameter can be used without I(url_password) for sites that allow empty passwords",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "use_gssapi": {
          "aliases": [],
          "description": "Use GSSAPI to perform the authentication, typically this is for Kerberos or Kerberos through Negotiate authentication.\nRequires the Python library L(gssapi,https://github.com/pythongssapi/python-gssapi) to be installed.\nCredentials for GSSAPI can be specified with I(url_username)/I(url_password) or with the GSSAPI env var C(KRB5CCNAME) that specified a custom Kerberos credential cache.\nNTLM authentication is C(not) supported even if the GSSAPI mech for NTLM has been installed.",
          "default": "False",
          "type": "bool",
          "required": false,
          "version_added": "2.11",
          "suboptions": {}
        },
        "use_proxy": {
          "aliases": [],
          "description": "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "If C(no), SSL certificates will not be validated.\nThis should only be used on personally controlled sites using self-signed certificates.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Manage zones in Icinga2",
      "version_added": "1.5.0"
    },
    "examples": "\n- name: Create a zone in icinga\n  t_systems_mms.icinga_director.icinga_zone:\n    state: present\n    url: \"{{ icinga_url }}\"\n    url_username: \"{{ icinga_user }}\"\n    url_password: \"{{ icinga_pass }}\"\n    object_name: \"foozone\"\n\n- name: Update a zone in icinga\n  t_systems_mms.icinga_director.icinga_zone:\n    state: present\n    url: \"{{ icinga_url }}\"\n    url_username: \"{{ icinga_user }}\"\n    url_password: \"{{ icinga_pass }}\"\n    object_name: \"foozone\"\n    parent: \"master\"\n    append: true\n"
  },
  "t_systems_mms.icinga_director.icinga_zone_info": {
    "doc": {
      "description": "Get a list of zone objects from Icinga2 through the director API.",
      "has_action": false,
      "notes": "This module supports check mode.",
      "options": {
        "client_cert": {
          "aliases": [],
          "description": "PEM formatted certificate chain file to be used for SSL client authentication.\nThis file can also include the key as well, and if the key is included, C(client_key) is not required.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "client_key": {
          "aliases": [],
          "description": "PEM formatted file that contains your private key to be used for SSL client authentication.\nIf C(client_cert) contains both the certificate and key, this option is not required.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "external": {
          "aliases": [],
          "description": "Also include external objects in output.",
          "default": "False",
          "type": "bool",
          "required": false,
          "choices": [
            "True",
            "False"
          ],
          "suboptions": {}
        },
        "force": {
          "aliases": [
            "thirsty"
          ],
          "description": "If C(yes) do not get a cached copy.\nAlias C(thirsty) has been deprecated and will be removed in 2.13.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "force_basic_auth": {
          "aliases": [],
          "description": "Credentials specified with I(url_username) and I(url_password) should be passed in HTTP Header.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "http_agent": {
          "aliases": [],
          "description": "Header to identify as, generally appears in web server logs.",
          "default": "ansible-httpget",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "query": {
          "aliases": [],
          "description": "Text to filter search results.\nThe text is matched on object_name.\nOnly objects containing this text will be returned in the resultset.\nRequires Icinga Director 1.8.0+, in earlier versions this parameter is ignored and all objects are returned.",
          "default": "",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resolved": {
          "aliases": [],
          "description": "Resolve all inherited object properties and omit templates in output.",
          "default": "False",
          "type": "bool",
          "required": false,
          "choices": [
            "True",
            "False"
          ],
          "suboptions": {}
        },
        "url": {
          "aliases": [],
          "description": "HTTP, HTTPS, or FTP URL in the form (http|https|ftp)://[user[:pass]]@host.domain[:port]/path",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "url_password": {
          "aliases": [],
          "description": "The password for use in HTTP basic authentication.\nIf the I(url_username) parameter is not specified, the I(url_password) parameter will not be used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "url_username": {
          "aliases": [],
          "description": "The username for use in HTTP basic authentication.\nThis parameter can be used without I(url_password) for sites that allow empty passwords",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "use_gssapi": {
          "aliases": [],
          "description": "Use GSSAPI to perform the authentication, typically this is for Kerberos or Kerberos through Negotiate authentication.\nRequires the Python library L(gssapi,https://github.com/pythongssapi/python-gssapi) to be installed.\nCredentials for GSSAPI can be specified with I(url_username)/I(url_password) or with the GSSAPI env var C(KRB5CCNAME) that specified a custom Kerberos credential cache.\nNTLM authentication is C(not) supported even if the GSSAPI mech for NTLM has been installed.",
          "default": "False",
          "type": "bool",
          "required": false,
          "version_added": "2.11",
          "suboptions": {}
        },
        "use_proxy": {
          "aliases": [],
          "description": "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "If C(no), SSL certificates will not be validated.\nThis should only be used on personally controlled sites using self-signed certificates.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Query zones in Icinga2",
      "version_added": "1.13.0"
    },
    "examples": "\n- name: Query a zone in icinga\n  t_systems_mms.icinga_director.icinga_zone_info:\n    url: \"{{ icinga_url }}\"\n    url_username: \"{{ icinga_user }}\"\n    url_password: \"{{ icinga_pass }}\"\n    query: \"foozone\"\n"
  }
}