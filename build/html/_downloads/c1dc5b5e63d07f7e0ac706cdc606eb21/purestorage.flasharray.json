{
  "purestorage.flasharray.purefa_ad": {
    "doc": {
      "description": "Add or delete FlashArray Active Directory Account\nFlashArray allows the creation of one AD computer account, or joining of an existing AD computer account.",
      "has_action": false,
      "notes": "This module requires the C(purestorage) and C(py-pure-client) Python libraries\nAdditional Python librarues may be required for specific modules.\nYou must set C(PUREFA_URL) and C(PUREFA_API) environment variables if I(fa_url) and I(api_token) arguments are not passed to the module directly",
      "options": {
        "api_token": {
          "aliases": [],
          "description": "FlashArray API token for admin privileged user.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "computer": {
          "aliases": [],
          "description": "The common name of the computer account to be created in the Active Directory domain.\nIf not specified, defaults to the name of the Active Directory configuration.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "directory_servers": {
          "aliases": [],
          "description": "A list of directory servers that will be used for lookups related to user authorization\nAccepted server formats are IP address and DNS name\nAll specified servers must be registered to the domain appropriately in the array configured DNS and are only communicated with over the secure LDAP (LDAPS) protocol. If not specified, servers are resolved for the domain in DNS\nThe specified list can have a maximum length of 1, or 3 for Purity 6.1.6 or higher. If more are provided only the first allowed count used.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "domain": {
          "aliases": [],
          "description": "The Active Directory domain to join",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "fa_url": {
          "aliases": [],
          "description": "FlashArray management IPv4 address or Hostname.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "join_ou": {
          "aliases": [],
          "description": "Distinguished name of organization unit in which the computer account should be created when joining the domain. e.g. OU=Arrays,OU=Storage.\nThe B(DC=...) components can be omitted.\nIf left empty, defaults to B(CN=Computers).\nRequires Purity//FA 6.1.8 or higher",
          "type": "str",
          "required": false,
          "version_added": "1.10.0",
          "suboptions": {}
        },
        "kerberos_servers": {
          "aliases": [],
          "description": "A list of key distribution servers to use for Kerberos protocol\nAccepted server formats are IP address and DNS name\nAll specified servers must be registered to the domain appropriately in the array configured DNS and are only communicated with over the secure LDAP (LDAPS) protocol. If not specified, servers are resolved for the domain in DNS.\nThe specified list can have a maximum length of 1, or 3 for Purity 6.1.6 or higher. If more are provided only the first allowed count used.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "local_only": {
          "aliases": [],
          "description": "Do a local-only delete of an active directory account",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the AD account",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Password string for I(username)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Define whether the AD sccount is deleted or not",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "username": {
          "aliases": [],
          "description": "A user capable of creating a computer account within the domain",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.3",
        "purestorage >= 1.19",
        "py-pure-client >= 1.22.0",
        "netaddr",
        "requests",
        "pycountry",
        "packaging"
      ],
      "short_description": "Manage FlashArray Active Directory Account",
      "version_added": "1.9.0"
    },
    "examples": "\n- name: Create new AD account\n  purestorage.flasharray.purefa_ad:\n    name: ad_account\n    computer: FLASHARRAY\n    domain: acme.com\n    join_ou: \"OU=Acme,OU=Dev\"\n    username: Administrator\n    password: Password\n    kerberos_servers:\n    - kdc.acme.com\n    directory_servers:\n    - ldap.acme.com\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Delete AD account locally\n  purestorage.flasharray.purefa_ad:\n    name: ad_account\n    local_only: True\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Fully delete AD account. Note that correct AD permissions are required\n  purestorage.flasharray.purefa_ad:\n    name: ad_account\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n"
  },
  "purestorage.flasharray.purefa_admin": {
    "doc": {
      "description": "Set global admin settings for the FlashArray",
      "has_action": false,
      "notes": "This module requires the C(purestorage) and C(py-pure-client) Python libraries\nAdditional Python librarues may be required for specific modules.\nYou must set C(PUREFA_URL) and C(PUREFA_API) environment variables if I(fa_url) and I(api_token) arguments are not passed to the module directly",
      "options": {
        "api_token": {
          "aliases": [],
          "description": "FlashArray API token for admin privileged user.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "fa_url": {
          "aliases": [],
          "description": "FlashArray management IPv4 address or Hostname.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "lockout": {
          "aliases": [],
          "description": "Account lockout duration, in seconds, after max_login exceeded\nRange between 1 second and 90 days (7776000 seconds)",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "max_login": {
          "aliases": [],
          "description": "Maximum number of failed logins before account is locked",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "min_password": {
          "aliases": [],
          "description": "Minimum user password length",
          "default": "1",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "sso": {
          "aliases": [],
          "description": "Enable or disable the array Signle Sign-On from Pure1 Manage",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.3",
        "purestorage >= 1.19",
        "py-pure-client >= 1.22.0",
        "netaddr",
        "requests",
        "pycountry",
        "packaging"
      ],
      "short_description": "Configure Pure Storage FlashArray Global Admin settings",
      "version_added": "1.12.0"
    },
    "examples": "\n- name: Set global login parameters\n  purestorage.flasharray.purefa_admin:\n    sso: false\n    max_login: 5\n    min_password: 10\n    lockout: 300\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n"
  },
  "purestorage.flasharray.purefa_alert": {
    "doc": {
      "description": "Configure alert email configuration for Pure Storage FlashArrays.",
      "has_action": false,
      "notes": "This module requires the C(purestorage) and C(py-pure-client) Python libraries\nAdditional Python librarues may be required for specific modules.\nYou must set C(PUREFA_URL) and C(PUREFA_API) environment variables if I(fa_url) and I(api_token) arguments are not passed to the module directly",
      "options": {
        "address": {
          "aliases": [],
          "description": "Email address (valid format required)",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_token": {
          "aliases": [],
          "description": "FlashArray API token for admin privileged user.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "enabled": {
          "aliases": [],
          "description": "Set specified email address to be enabled or disabled",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "fa_url": {
          "aliases": [],
          "description": "FlashArray management IPv4 address or Hostname.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Create or delete alert email",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.3",
        "purestorage >= 1.19",
        "py-pure-client >= 1.22.0",
        "netaddr",
        "requests",
        "pycountry",
        "packaging"
      ],
      "short_description": "Configure Pure Storage FlashArray alert email settings",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Add new email recipient and enable, or enable existing email\n  purestorage.flasharray.purefa_alert:\n    address: \"user@domain.com\"\n    enabled: true\n    state: present\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n- name: Delete existing email recipient\n  purestorage.flasharray.purefa_alert:\n    state: absent\n    address: \"user@domain.com\"\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n"
  },
  "purestorage.flasharray.purefa_apiclient": {
    "doc": {
      "description": "Enable or disable FlashArray API Clients",
      "has_action": false,
      "notes": "This module requires the C(purestorage) and C(py-pure-client) Python libraries\nAdditional Python librarues may be required for specific modules.\nYou must set C(PUREFA_URL) and C(PUREFA_API) environment variables if I(fa_url) and I(api_token) arguments are not passed to the module directly",
      "options": {
        "api_token": {
          "aliases": [],
          "description": "FlashArray API token for admin privileged user.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "enabled": {
          "aliases": [],
          "description": "State of the API Client Key",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "fa_url": {
          "aliases": [],
          "description": "FlashArray management IPv4 address or Hostname.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "issuer": {
          "aliases": [],
          "description": "The name of the identity provider that will be issuing ID Tokens for this API client\nIf not specified, defaults to the API client name, I(name).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the API Client",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "public_key": {
          "aliases": [],
          "description": "The API clients PEM formatted (Base64 encoded) RSA public key.\nInclude the I(—–BEGIN PUBLIC KEY—–) and I(—–END PUBLIC KEY—–) lines",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "role": {
          "aliases": [],
          "description": "The maximum role allowed for ID Tokens issued by this API client",
          "type": "str",
          "required": false,
          "choices": [
            "readonly",
            "ops_admin",
            "storage_admin",
            "array_admin"
          ],
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Define whether the API client should exist or not.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "token_ttl": {
          "aliases": [],
          "description": "Time To Live length in seconds for the exchanged access token\nRange is 1 second to 1 day (86400 seconds)",
          "default": "86400",
          "type": "int",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.3",
        "purestorage >= 1.19",
        "py-pure-client >= 1.22.0",
        "netaddr",
        "requests",
        "pycountry",
        "packaging"
      ],
      "short_description": "Manage FlashArray API Clients",
      "version_added": "1.5.0"
    },
    "examples": "\n- name: Create API token ansible-token\n  purestorage.flasharray.purefa_apiclient:\n    name: ansible-token\n    issuer: \"Pure Storage\"\n    ttl: 3000\n    role: array_admin\n    public_key: \"{{lookup('file', 'public_pem_file') }}\"\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Disable API CLient\n  purestorage.flasharray.purefa_apiclient:\n    name: ansible-token\n    enabled: false\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Enable API CLient\n  purestorage.flasharray.purefa_apiclient:\n    name: ansible-token\n    enabled: true\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Delete API Client\n  purestorage.flasharray.purefa_apiclient:\n    state: absent\n    name: ansible-token\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n"
  },
  "purestorage.flasharray.purefa_arrayname": {
    "doc": {
      "description": "Configure name of array for Pure Storage FlashArrays.\nIdeal for Day 0 initial configuration.",
      "has_action": false,
      "notes": "This module requires the C(purestorage) and C(py-pure-client) Python libraries\nAdditional Python librarues may be required for specific modules.\nYou must set C(PUREFA_URL) and C(PUREFA_API) environment variables if I(fa_url) and I(api_token) arguments are not passed to the module directly",
      "options": {
        "api_token": {
          "aliases": [],
          "description": "FlashArray API token for admin privileged user.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "fa_url": {
          "aliases": [],
          "description": "FlashArray management IPv4 address or Hostname.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the array. Must conform to correct naming schema.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Set the array name",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.3",
        "purestorage >= 1.19",
        "py-pure-client >= 1.22.0",
        "netaddr",
        "requests",
        "pycountry",
        "packaging"
      ],
      "short_description": "Configure Pure Storage FlashArray array name",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Set new array name\n  purestorage.flasharray.purefa_arrayname:\n    name: new-array-name\n    state: present\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n"
  },
  "purestorage.flasharray.purefa_banner": {
    "doc": {
      "description": "Configure MOTD for Pure Storage FlashArrays.\nThis will be shown during an SSH or GUI login to the array.\nMultiple line messages can be achieved using \\\\n.",
      "has_action": false,
      "notes": "This module requires the C(purestorage) and C(py-pure-client) Python libraries\nAdditional Python librarues may be required for specific modules.\nYou must set C(PUREFA_URL) and C(PUREFA_API) environment variables if I(fa_url) and I(api_token) arguments are not passed to the module directly",
      "options": {
        "api_token": {
          "aliases": [],
          "description": "FlashArray API token for admin privileged user.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "banner": {
          "aliases": [],
          "description": "Banner text, or MOTD, to use",
          "default": "Welcome to the machine...",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "fa_url": {
          "aliases": [],
          "description": "FlashArray management IPv4 address or Hostname.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Set ot delete the MOTD",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.3",
        "purestorage >= 1.19",
        "py-pure-client >= 1.22.0",
        "netaddr",
        "requests",
        "pycountry",
        "packaging"
      ],
      "short_description": "Configure Pure Storage FlashArray GUI and SSH MOTD message",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Set new banner text\n  purestorage.flasharray.purefa_banner:\n    banner: \"Banner over\\ntwo lines\"\n    state: present\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Delete banner text\n  purestorage.flasharray.purefa_banner:\n    state: absent\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n"
  },
  "purestorage.flasharray.purefa_certs": {
    "doc": {
      "description": "Create, delete, import and export FlashArray SSL Certificates",
      "has_action": false,
      "notes": "This module requires the C(purestorage) and C(py-pure-client) Python libraries\nAdditional Python librarues may be required for specific modules.\nYou must set C(PUREFA_URL) and C(PUREFA_API) environment variables if I(fa_url) and I(api_token) arguments are not passed to the module directly",
      "options": {
        "api_token": {
          "aliases": [],
          "description": "FlashArray API token for admin privileged user.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "certificate": {
          "aliases": [],
          "description": "Required for I(import)\nA valid signed certicate in PEM format (Base64 encoded)\nIncludes the \"-----BEGIN CERTIFICATE-----\" and \"-----END CERTIFICATE-----\" lines\nDoes not exceed 3000 characters in length",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "common_name": {
          "aliases": [],
          "description": "The fully qualified domain name (FQDN) of the current array\nFor example, the common name for https://purearray.example.com is purearray.example.com, or *.example.com for a wildcard certificate\nThis can also be the management IP address of the array or the shortname of the current array.\nMaximum of 64 characters\nIf not provided this will default to the shortname of the array",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "country": {
          "aliases": [],
          "description": "The two-letter ISO code for the country where your organization is located",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "days": {
          "aliases": [],
          "description": "The number of valid days for the self-signed certificate being generated\nIf not specified, the self-signed certificate expires after 3650 days.",
          "default": "3650",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "email": {
          "aliases": [],
          "description": "The email address used to contact your organization",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "export_file": {
          "aliases": [],
          "description": "Name of file to contain Certificate Signing Request when `status sign`\nName of file to export the current SSL Certificate when `status export`\nFile will be overwritten if it already exists",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "fa_url": {
          "aliases": [],
          "description": "FlashArray management IPv4 address or Hostname.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "generate": {
          "aliases": [],
          "description": "Generate a new private key.\nIf not selected, the certificate will use the existing key",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "intermeadiate_cert": {
          "aliases": [],
          "description": "Intermeadiate certificate provided by the CA",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "key": {
          "aliases": [],
          "description": "If the Certificate Signed Request (CSR) was not constructed on the array or the private key has changed since construction the CSR, provide a new private key here",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "key_size": {
          "aliases": [],
          "description": "The key size in bits if you generate a new private key",
          "default": "2048",
          "type": "int",
          "required": false,
          "choices": [
            "1024",
            "2048",
            "4096"
          ],
          "suboptions": {}
        },
        "locality": {
          "aliases": [],
          "description": "The full name of the city where your organization is located",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the SSL Certificate",
          "default": "management",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "org_unit": {
          "aliases": [],
          "description": "The department within your organization that is managing the certificate",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "organization": {
          "aliases": [],
          "description": "The full and exact legal name of your organization.\nThe organization name should not be abbreviated and should include suffixes such as Inc, Corp, or LLC.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "passphrase": {
          "aliases": [],
          "description": "Passphrase if the private key is encrypted",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "province": {
          "aliases": [],
          "description": "The full name of the state or province where your organization is located",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Action for the module to perform\nI(present) will create or re-create an SSL certificate\nI(absent) will delete an existing SSL certificate\nI(sign) will construct a Certificate Signing request (CSR)\nI(export) will export the exisitng SSL certificate\nI(import) will import a CA provided certificate.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present",
            "import",
            "export",
            "sign"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.3",
        "purestorage >= 1.19",
        "py-pure-client >= 1.22.0",
        "netaddr",
        "requests",
        "pycountry",
        "packaging"
      ],
      "short_description": "Manage FlashArray SSL Certificates",
      "version_added": "1.8.0"
    },
    "examples": "\n- name: Create SSL certifcate foo\n  purestorage.flasharray.purefa_certs:\n    name: foo\n    key_size: 4096\n    country: US\n    province: FL\n    locality: Miami\n    organization: \"Acme Inc\"\n    org_unit: \"DevOps\"\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Delete SSL certificate foo\n  purestorage.flasharray.purefa_certs:\n    name: foo\n    state: absent\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Request CSR\n  purestorage.flasharray.purefa_certs:\n    state: sign\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Regenerate key for SSL foo\n  purestorage.flasharray.purefa_certs:\n    generate: true\n    name: foo\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Import SSL Cert foo and Private Key\n  purestorage.flasharray.purefa_certs:\n    state: import\n    name: foo\n    certificate: \"{{lookup('file', 'example.crt') }}\"\n    key: \"{{lookup('file', 'example.key') }}\"\n    passphrase: password\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n"
  },
  "purestorage.flasharray.purefa_connect": {
    "doc": {
      "description": "Manage array connections to specified target array",
      "has_action": false,
      "notes": "This module requires the C(purestorage) and C(py-pure-client) Python libraries\nAdditional Python librarues may be required for specific modules.\nYou must set C(PUREFA_URL) and C(PUREFA_API) environment variables if I(fa_url) and I(api_token) arguments are not passed to the module directly",
      "options": {
        "api_token": {
          "aliases": [],
          "description": "FlashArray API token for admin privileged user.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "connection": {
          "aliases": [],
          "description": "Type of connection between arrays.",
          "default": "async",
          "type": "str",
          "required": false,
          "choices": [
            "sync",
            "async"
          ],
          "suboptions": {}
        },
        "fa_url": {
          "aliases": [],
          "description": "FlashArray management IPv4 address or Hostname.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Create or delete array connection",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "target_api": {
          "aliases": [],
          "description": "API token for target array",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "target_url": {
          "aliases": [],
          "description": "Management IP address of remote array.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "transport": {
          "aliases": [],
          "description": "Type of transport protocol to use for replication",
          "default": "ip",
          "type": "str",
          "required": false,
          "choices": [
            "ip",
            "fc"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.3",
        "purestorage >= 1.19",
        "py-pure-client >= 1.22.0",
        "netaddr",
        "requests",
        "pycountry",
        "packaging"
      ],
      "short_description": "Manage replication connections between two FlashArrays",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create an async connection to remote array\n  purestorage.flasharray.purefa_connect:\n    target_url: 10.10.10.20\n    target_api: 9c0b56bc-f941-f7a6-9f85-dcc3e9a8f7d6\n    connection: async\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n- name: Delete connection to remote array\n  purestorage.flasharray.purefa_connect:\n    state: absent\n    target_url: 10.10.10.20\n    target_api: 9c0b56bc-f941-f7a6-9f85-dcc3e9a8f7d6\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n"
  },
  "purestorage.flasharray.purefa_console": {
    "doc": {
      "description": "Enablke or Disable root lockout from the array at the physical console for a Pure Storage FlashArray.",
      "has_action": false,
      "notes": "This module requires the C(purestorage) and C(py-pure-client) Python libraries\nAdditional Python librarues may be required for specific modules.\nYou must set C(PUREFA_URL) and C(PUREFA_API) environment variables if I(fa_url) and I(api_token) arguments are not passed to the module directly",
      "options": {
        "api_token": {
          "aliases": [],
          "description": "FlashArray API token for admin privileged user.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "fa_url": {
          "aliases": [],
          "description": "FlashArray management IPv4 address or Hostname.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Define state of console lockout\nWhen set to I(enable) the console port is locked from root login.",
          "default": "disable",
          "type": "str",
          "required": false,
          "choices": [
            "enable",
            "disable"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.3",
        "purestorage >= 1.19",
        "py-pure-client >= 1.22.0",
        "netaddr",
        "requests",
        "pycountry",
        "packaging"
      ],
      "short_description": "Enable or Disable Pure Storage FlashArray Console Lock",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Enable Console Lockout\n  purestorage.flasharray.purefa_console:\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Disable Console Lockout\n  purestorage.flasharray.purefa_console:\n    state: disable\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n"
  },
  "purestorage.flasharray.purefa_directory": {
    "doc": {
      "description": "Create/Delete FlashArray File Systems",
      "has_action": false,
      "notes": "This module requires the C(purestorage) and C(py-pure-client) Python libraries\nAdditional Python librarues may be required for specific modules.\nYou must set C(PUREFA_URL) and C(PUREFA_API) environment variables if I(fa_url) and I(api_token) arguments are not passed to the module directly",
      "options": {
        "api_token": {
          "aliases": [],
          "description": "FlashArray API token for admin privileged user.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "fa_url": {
          "aliases": [],
          "description": "FlashArray management IPv4 address or Hostname.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filesystem": {
          "aliases": [],
          "description": "Name of the filesystem the directory links to.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the directory",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "path": {
          "aliases": [],
          "description": "Path of the managed directory in the file system\nIf not provided will default to I(name)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "rename": {
          "aliases": [],
          "description": "Value to rename the specified directory to",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Define whether the directory should exist or not.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.3",
        "purestorage >= 1.19",
        "py-pure-client >= 1.22.0",
        "netaddr",
        "requests",
        "pycountry",
        "packaging"
      ],
      "short_description": "Manage FlashArray File System Directories",
      "version_added": "1.5.0"
    },
    "examples": "\n- name: Create direcotry foo in filesysten bar with path zeta\n  purestorage.flasharray.purefa_directory:\n    name: foo\n    filesystem: bar\n    path: zeta\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Rename directory foo to fin in filesystem bar\n  purestorage.flasharray.purefa_directory:\n    name: foo\n    rename: fin\n    filesystem: bar\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Delete diectory foo in filesystem bar\n  purestorage.flasharray.purefa_directory:\n    name: foo\n    filesystem: bar\n    state: absent\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n"
  },
  "purestorage.flasharray.purefa_dirsnap": {
    "doc": {
      "description": "Create/Delete FlashArray File System directory snapshots\nA full snapshot name is constructed in the form of DIR.CLIENT_NAME.SUFFIX where DIR is the managed directory name, CLIENT_NAME is the client name, and SUFFIX is the suffix.\nThe client visible snapshot name is CLIENT_NAME.SUFFIX.",
      "has_action": false,
      "notes": "This module requires the C(purestorage) and C(py-pure-client) Python libraries\nAdditional Python librarues may be required for specific modules.\nYou must set C(PUREFA_URL) and C(PUREFA_API) environment variables if I(fa_url) and I(api_token) arguments are not passed to the module directly",
      "options": {
        "api_token": {
          "aliases": [],
          "description": "FlashArray API token for admin privileged user.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "client": {
          "aliases": [],
          "description": "The client name portion of the client visible snapshot name",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "eradicate": {
          "aliases": [],
          "description": "Define whether to eradicate the snapshot on delete or leave in trash",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "fa_url": {
          "aliases": [],
          "description": "FlashArray management IPv4 address or Hostname.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filesystem": {
          "aliases": [],
          "description": "Name of the filesystem the directory links to.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "keep_for": {
          "aliases": [],
          "description": "Retention period, after which snapshots will be eradicated\nSpecify in seconds. Range 300 - 31536000 (5 minutes to 1 year)\nValue of 0 will set no retention period.\nIf not specified on create will default to 0 (no retention period)",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the directory to snapshot",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "new_client": {
          "aliases": [],
          "description": "The new client name when performing a rename",
          "type": "str",
          "required": false,
          "version_added": "1.12.0",
          "suboptions": {}
        },
        "new_suffix": {
          "aliases": [],
          "description": "The new suffix when performing a rename",
          "type": "str",
          "required": false,
          "version_added": "1.12.0",
          "suboptions": {}
        },
        "rename": {
          "aliases": [],
          "description": "Whether to rename a directory snapshot\nThe snapshot client name and suffix can be changed\nRequired with I(new_client) ans I(new_suffix)",
          "default": "False",
          "type": "bool",
          "required": false,
          "version_added": "1.12.0",
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Define whether the directory snapshot should exist or not.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "suffix": {
          "aliases": [],
          "description": "Snapshot suffix to use",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.3",
        "purestorage >= 1.19",
        "py-pure-client >= 1.22.0",
        "netaddr",
        "requests",
        "pycountry",
        "packaging"
      ],
      "short_description": "Manage FlashArray File System Directory Snapshots",
      "version_added": "1.9.0"
    },
    "examples": "\n- name: Create a snapshot direcotry foo in filesysten bar for client test with suffix test\n  purestorage.flasharray.purefa_dirsnap:\n    name: foo\n    filesystem: bar\n    client: test\n    suffix: test\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Update retention time for a snapshot foo:bar.client.test\n  purestorage.flasharray.purefa_dirsnap:\n    name: foo\n    filesystem: bar\n    client: client\n    suffix: test\n    keep_for: 300 # 5 minutes\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Delete snapshot foo:bar.client.test\n  purestorage.flasharray.purefa_dirsnap:\n    name: foo\n    filesystem: bar\n    client: client\n    suffix: test\n    state: absent\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Recover deleted snapshot foo:bar.client.test\n  purestorage.flasharray.purefa_dirsnap:\n    name: foo\n    filesystem: bar\n    client: client\n    suffix: test\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Delete and eradicate snapshot foo:bar.client.test\n  purestorage.flasharray.purefa_dirsnap:\n    name: foo\n    filesystem: bar\n    client: client\n    suffix: test\n    state: absent\n    eradicate: true\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Eradicate deleted snapshot foo:bar.client.test\n  purestorage.flasharray.purefa_dirsnap:\n    name: foo\n    filesystem: bar\n    client: client\n    suffix: test\n    eradicate: true\n    state: absent\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Rename snapshot\n  purestorage.flasharray.purefa_dirsnap:\n    name: foo\n    filesystem: bar\n    client: client\n    suffix: test\n    rename: true\n    new_client: client2\n    new_suffix: test2\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n"
  },
  "purestorage.flasharray.purefa_dns": {
    "doc": {
      "description": "Set or erase configuration for the DNS settings.\nNameservers provided will overwrite any existing nameservers.",
      "has_action": false,
      "notes": "This module requires the C(purestorage) and C(py-pure-client) Python libraries\nAdditional Python librarues may be required for specific modules.\nYou must set C(PUREFA_URL) and C(PUREFA_API) environment variables if I(fa_url) and I(api_token) arguments are not passed to the module directly",
      "options": {
        "api_token": {
          "aliases": [],
          "description": "FlashArray API token for admin privileged user.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "domain": {
          "aliases": [],
          "description": "Domain suffix to be appended when perofrming DNS lookups.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "fa_url": {
          "aliases": [],
          "description": "FlashArray management IPv4 address or Hostname.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "nameservers": {
          "aliases": [],
          "description": "List of up to 3 unique DNS server IP addresses. These can be IPv4 or IPv6 - No validation is done of the addresses is performed.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Set or delete directory service configuration",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.3",
        "purestorage >= 1.19",
        "py-pure-client >= 1.22.0",
        "netaddr",
        "requests",
        "pycountry",
        "packaging"
      ],
      "short_description": "Configure FlashArray DNS settings",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Delete exisitng DNS settings\n  purestorage.flasharray.purefa_dns:\n    state: absent\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Set DNS settings\n  purestorage.flasharray.purefa_dns:\n    domain: purestorage.com\n    nameservers:\n      - 8.8.8.8\n      - 8.8.4.4\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n"
  },
  "purestorage.flasharray.purefa_ds": {
    "doc": {
      "description": "Set or erase configuration for the directory service. There is no facility to SSL certificates at this time. Use the FlashArray GUI for this additional configuration work.\nTo modify an existing directory service configuration you must first delete an exisitng configuration and then recreate with new settings.",
      "has_action": false,
      "notes": "This module requires the C(purestorage) and C(py-pure-client) Python libraries\nAdditional Python librarues may be required for specific modules.\nYou must set C(PUREFA_URL) and C(PUREFA_API) environment variables if I(fa_url) and I(api_token) arguments are not passed to the module directly",
      "options": {
        "aa_group": {
          "aliases": [],
          "description": "Sets the common Name (CN) of the directory service group containing administrators with full privileges when managing the FlashArray. The name should be just the Common Name of the group without the CN= specifier. Common Names should not exceed 64 characters in length.\nNot Supported from Purity 5.2.0 or higher. Use I(purestorage.flasharray.purefa_dsrole) module.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "api_token": {
          "aliases": [],
          "description": "FlashArray API token for admin privileged user.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "base_dn": {
          "aliases": [],
          "description": "Sets the base of the Distinguished Name (DN) of the directory service groups. The base should consist of only Domain Components (DCs). The base_dn will populate with a default value when a URI is entered by parsing domain components from the URI. The base DN should specify DC= for each domain component and multiple DCs should be separated by commas.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "bind_password": {
          "aliases": [],
          "description": "Sets the password of the bind_user user name account.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "bind_user": {
          "aliases": [],
          "description": "Sets the user name that can be used to bind to and query the directory.\nFor Active Directory, enter the username - often referred to as sAMAccountName or User Logon Name - of the account that is used to perform directory lookups.\nFor OpenLDAP, enter the full DN of the user.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "dstype": {
          "aliases": [],
          "description": "The type of directory service to work on",
          "default": "management",
          "type": "str",
          "required": false,
          "choices": [
            "management",
            "data"
          ],
          "suboptions": {}
        },
        "enable": {
          "aliases": [],
          "description": "Whether to enable or disable directory service support.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "fa_url": {
          "aliases": [],
          "description": "FlashArray management IPv4 address or Hostname.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "group_base": {
          "aliases": [],
          "description": "Specifies where the configured groups are located in the directory tree. This field consists of Organizational Units (OUs) that combine with the base DN attribute and the configured group CNs to complete the full Distinguished Name of the groups. The group base should specify OU= for each OU and multiple OUs should be separated by commas. The order of OUs is important and should get larger in scope from left to right. Each OU should not exceed 64 characters in length.\nNot Supported from Purity 5.2.0 or higher. Use I(purestorage.flasharray.purefa_dsrole) module.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ro_group": {
          "aliases": [],
          "description": "Sets the common Name (CN) of the configured directory service group containing users with read-only privileges on the FlashArray. This name should be just the Common Name of the group without the CN= specifier. Common Names should not exceed 64 characters in length.\nNot Supported from Purity 5.2.0 or higher. Use I(purestorage.flasharray.purefa_dsrole) module.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "sa_group": {
          "aliases": [],
          "description": "Sets the common Name (CN) of the configured directory service group containing administrators with storage-related privileges on the FlashArray. This name should be just the Common Name of the group without the CN= specifier. Common Names should not exceed 64 characters in length.\nNot Supported from Purity 5.2.0 or higher. Use I(purestorage.flasharray.purefa_dsrole) module.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Create or delete directory service configuration",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "uri": {
          "aliases": [],
          "description": "A list of up to 30 URIs of the directory servers. Each URI must include the scheme ldap:// or ldaps:// (for LDAP over SSL), a hostname, and a domain name or IP address. For example, ldap://ad.company.com configures the directory service with the hostname \"ad\" in the domain \"company.com\" while specifying the unencrypted LDAP protocol.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "user_login": {
          "aliases": [],
          "description": "User login attribute in the structure of the configured LDAP servers. Typically the attribute field that holds the users unique login name. Default value is I(sAMAccountName) for Active Directory or I(uid) for all other directory services\nSupported from Purity 6.0 or higher.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "user_object": {
          "aliases": [],
          "description": "Value of the object class for a management LDAP user. Defaults to I(User) for Active Directory servers, I(posixAccount) or I(shadowAccount) for OpenLDAP servers dependent on the group type of the server, or person for all other directory servers.\nSupported from Purity 6.0 or higher.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.3",
        "purestorage >= 1.19",
        "py-pure-client >= 1.22.0",
        "netaddr",
        "requests",
        "pycountry",
        "packaging"
      ],
      "short_description": "Configure FlashArray Directory Service",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Delete existing directory service\n  purestorage.flasharray.purefa_ds:\n    state: absent\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Create directory service (disabled) - Pre-5.2.0\n  purestorage.flasharray.purefa_ds:\n    uri: \"ldap://lab.purestorage.com\"\n    base_dn: \"DC=lab,DC=purestorage,DC=com\"\n    bind_user: Administrator\n    bind_password: password\n    group_base: \"OU=Pure-Admin\"\n    ro_group: PureReadOnly\n    sa_group: PureStorage\n    aa_group: PureAdmin\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Create directory service (disabled) - 5.2.0 or higher\n  purestorage.flasharray.purefa_ds:\n    dstype: management\n    uri: \"ldap://lab.purestorage.com\"\n    base_dn: \"DC=lab,DC=purestorage,DC=com\"\n    bind_user: Administrator\n    bind_password: password\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Enable existing directory service\n  purestorage.flasharray.purefa_ds:\n    enable: true\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Disable existing directory service\n  purestorage.flasharray.purefa_ds:\n    enable: false\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Create directory service (enabled) - Pre-5.2.0\n  purestorage.flasharray.purefa_ds:\n    enable: true\n    uri: \"ldap://lab.purestorage.com\"\n    base_dn: \"DC=lab,DC=purestorage,DC=com\"\n    bind_user: Administrator\n    bind_password: password\n    group_base: \"OU=Pure-Admin\"\n    ro_group: PureReadOnly\n    sa_group: PureStorage\n    aa_group: PureAdmin\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Create directory service (enabled) - 5.2.0 or higher\n  purestorage.flasharray.purefa_ds:\n    enable: true\n    dstype: management\n    uri: \"ldap://lab.purestorage.com\"\n    base_dn: \"DC=lab,DC=purestorage,DC=com\"\n    bind_user: Administrator\n    bind_password: password\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n"
  },
  "purestorage.flasharray.purefa_dsrole": {
    "doc": {
      "description": "Set or erase directory services role configurations.\nOnly available for FlashArray running Purity 5.2.0 or higher",
      "has_action": false,
      "notes": "This module requires the C(purestorage) and C(py-pure-client) Python libraries\nAdditional Python librarues may be required for specific modules.\nYou must set C(PUREFA_URL) and C(PUREFA_API) environment variables if I(fa_url) and I(api_token) arguments are not passed to the module directly",
      "options": {
        "api_token": {
          "aliases": [],
          "description": "FlashArray API token for admin privileged user.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "fa_url": {
          "aliases": [],
          "description": "FlashArray management IPv4 address or Hostname.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "group": {
          "aliases": [],
          "description": "Sets the common Name (CN) of the configured directory service group containing users for the FlashBlade. This name should be just the Common Name of the group without the CN= specifier.\nCommon Names should not exceed 64 characters in length.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "group_base": {
          "aliases": [],
          "description": "Specifies where the configured group is located in the directory tree. This field consists of Organizational Units (OUs) that combine with the base DN attribute and the configured group CNs to complete the full Distinguished Name of the groups. The group base should specify OU= for each OU and multiple OUs should be separated by commas. The order of OUs is important and should get larger in scope from left to right.\nEach OU should not exceed 64 characters in length.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "role": {
          "aliases": [],
          "description": "The directory service role to work on",
          "type": "str",
          "required": true,
          "choices": [
            "array_admin",
            "ops_admin",
            "readonly",
            "storage_admin"
          ],
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Create or delete directory service role",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.3",
        "purestorage >= 1.19",
        "py-pure-client >= 1.22.0",
        "netaddr",
        "requests",
        "pycountry",
        "packaging"
      ],
      "short_description": "Configure FlashArray Directory Service Roles",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Delete exisitng array_admin directory service role\n  purestorage.flasharray.purefa_dsrole:\n    role: array_admin\n    state: absent\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Create array_admin directory service role\n  purestorage.flasharray.purefa_dsrole:\n    role: array_admin\n    group_base: \"OU=PureGroups,OU=SANManagers\"\n    group: pureadmins\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Update ops_admin directory service role\n  purestorage.flasharray.purefa_dsrole:\n    role: ops_admin\n    group_base: \"OU=PureGroups\"\n    group: opsgroup\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n"
  },
  "purestorage.flasharray.purefa_endpoint": {
    "doc": {
      "description": "Create, delete or eradicate the an endpoint on a Pure Storage FlashArray.",
      "has_action": false,
      "notes": "This module requires the C(purestorage) and C(py-pure-client) Python libraries\nAdditional Python librarues may be required for specific modules.\nYou must set C(PUREFA_URL) and C(PUREFA_API) environment variables if I(fa_url) and I(api_token) arguments are not passed to the module directly",
      "options": {
        "api_token": {
          "aliases": [],
          "description": "FlashArray API token for admin privileged user.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "eradicate": {
          "aliases": [],
          "description": "Define whether to eradicate the endpoint on delete or leave in trash.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "fa_url": {
          "aliases": [],
          "description": "FlashArray management IPv4 address or Hostname.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "hgroup": {
          "aliases": [],
          "description": "name of hostgroup to attach endpoint to",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "host": {
          "aliases": [],
          "description": "name of host to attach endpoint to",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the endpoint.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "rename": {
          "aliases": [],
          "description": "Value to rename the specified endpoint to.\nRename only applies to the container the current endpoint is in.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Define whether the endpoint should exist or not.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.3",
        "purestorage >= 1.19",
        "py-pure-client >= 1.22.0",
        "netaddr",
        "requests",
        "pycountry",
        "packaging"
      ],
      "short_description": "Manage VMware protocol-endpoints on Pure Storage FlashArrays",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create new endpoint named foo\n  purestorage.flasharray.purefa_endpoint:\n    name: test-endpoint\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n    state: present\n\n- name: Delete and eradicate endpoint named foo\n  purestorage.flasharray.purefa_endpoint:\n    name: foo\n    eradicate: yes\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n    state: absent\n\n- name: Rename endpoint foor to bar\n  purestorage.flasharray.purefa_endpoint:\n    name: foo\n    rename: bar\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n"
  },
  "purestorage.flasharray.purefa_eradication": {
    "doc": {
      "description": "Configure the eradication timer for destroyed items on a FlashArray.\nValid values are integer days from 1 to 30. Default is 1.",
      "has_action": false,
      "notes": "This module requires the C(purestorage) and C(py-pure-client) Python libraries\nAdditional Python librarues may be required for specific modules.\nYou must set C(PUREFA_URL) and C(PUREFA_API) environment variables if I(fa_url) and I(api_token) arguments are not passed to the module directly",
      "options": {
        "api_token": {
          "aliases": [],
          "description": "FlashArray API token for admin privileged user.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "fa_url": {
          "aliases": [],
          "description": "FlashArray management IPv4 address or Hostname.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "timer": {
          "aliases": [],
          "description": "Set the eradication timer for the FlashArray\nAllowed values are integers from 1 to 30. Default is 1",
          "default": "1",
          "type": "int",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.3",
        "purestorage >= 1.19",
        "py-pure-client >= 1.22.0",
        "netaddr",
        "requests",
        "pycountry",
        "packaging"
      ],
      "short_description": "Configure Pure Storage FlashArray Eradication Timer",
      "version_added": "1.9.0"
    },
    "examples": "\n- name: Set eradication timer to 30 days\n  purestorage.flasharray.purefa_eradication:\n    timer: 30\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Set eradication timer to 1 day\n  purestorage.flasharray.purefa_eradication:\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n"
  },
  "purestorage.flasharray.purefa_eula": {
    "doc": {
      "description": "Sign the FlashArray EULA for Day 0 config, or change signatory.",
      "has_action": false,
      "notes": "This module requires the C(purestorage) and C(py-pure-client) Python libraries\nAdditional Python librarues may be required for specific modules.\nYou must set C(PUREFA_URL) and C(PUREFA_API) environment variables if I(fa_url) and I(api_token) arguments are not passed to the module directly",
      "options": {
        "api_token": {
          "aliases": [],
          "description": "FlashArray API token for admin privileged user.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "company": {
          "aliases": [],
          "description": "Full legal name of the entity.\nThe value must be between 1 and 64 characters in length.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "fa_url": {
          "aliases": [],
          "description": "FlashArray management IPv4 address or Hostname.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Full legal name of the individual at the company who has the authority to accept the terms of the agreement.\nThe value must be between 1 and 64 characters in length.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "title": {
          "aliases": [],
          "description": "Individual's job title at the company.\nThe value must be between 1 and 64 characters in length.",
          "type": "str",
          "required": true,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.3",
        "purestorage >= 1.19",
        "py-pure-client >= 1.22.0",
        "netaddr",
        "requests",
        "pycountry",
        "packaging"
      ],
      "short_description": "Sign Pure Storage FlashArray EULA",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Sign EULA for FlashArray\n  purestorage.flasharray.purefa_eula:\n    company: \"ACME Storage, Inc.\"\n    name: \"Fred Bloggs\"\n    title: \"Storage Manager\"\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n"
  },
  "purestorage.flasharray.purefa_export": {
    "doc": {
      "description": "Create/Delete FlashArray File Systems Exports",
      "has_action": false,
      "notes": "This module requires the C(purestorage) and C(py-pure-client) Python libraries\nAdditional Python librarues may be required for specific modules.\nYou must set C(PUREFA_URL) and C(PUREFA_API) environment variables if I(fa_url) and I(api_token) arguments are not passed to the module directly",
      "options": {
        "api_token": {
          "aliases": [],
          "description": "FlashArray API token for admin privileged user.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "directory": {
          "aliases": [],
          "description": "Name of the managed directory in the file system the export applies to",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "fa_url": {
          "aliases": [],
          "description": "FlashArray management IPv4 address or Hostname.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filesystem": {
          "aliases": [],
          "description": "Name of the filesystem the export applies to",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the export",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "nfs_policy": {
          "aliases": [],
          "description": "Name of NFS Policy to apply to the export",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "smb_policy": {
          "aliases": [],
          "description": "Name of SMB Policy to apply to the export",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Define whether the export should exist or not.\nYou must specify an NFS or SMB policy, or both on creation and deletion.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.3",
        "purestorage >= 1.19",
        "py-pure-client >= 1.22.0",
        "netaddr",
        "requests",
        "pycountry",
        "packaging"
      ],
      "short_description": "Manage FlashArray File System Exports",
      "version_added": "1.5.0"
    },
    "examples": "\n- name: Create NFS and SMB exports for directory foo in filesysten bar\n  purestorage.flasharray.purefa_export:\n    name: export1\n    filesystem: bar\n    directory: foo\n    nfs_policy: nfs-example\n    smb_polict: smb-example\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Delete NFS export for directory foo in filesystem bar\n  purestorage.flasharray.purefa_export:\n    name: export1\n    filesystem: bar\n    directory: foo\n    nfs_policy: nfs-example\n    state: absent\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n"
  },
  "purestorage.flasharray.purefa_fs": {
    "doc": {
      "description": "Create/Delete FlashArray File Systems",
      "has_action": false,
      "notes": "This module requires the C(purestorage) and C(py-pure-client) Python libraries\nAdditional Python librarues may be required for specific modules.\nYou must set C(PUREFA_URL) and C(PUREFA_API) environment variables if I(fa_url) and I(api_token) arguments are not passed to the module directly",
      "options": {
        "api_token": {
          "aliases": [],
          "description": "FlashArray API token for admin privileged user.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "eradicate": {
          "aliases": [],
          "description": "Define whether to eradicate the file system on delete or leave in trash.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "fa_url": {
          "aliases": [],
          "description": "FlashArray management IPv4 address or Hostname.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the file system",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "rename": {
          "aliases": [],
          "description": "Value to rename the specified file system to",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Define whether the file system should exist or not.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.3",
        "purestorage >= 1.19",
        "py-pure-client >= 1.22.0",
        "netaddr",
        "requests",
        "pycountry",
        "packaging"
      ],
      "short_description": "Manage FlashArray File Systems",
      "version_added": "1.5.0"
    },
    "examples": "\n- name: Create file system foo\n  purestorage.flasharray.purefa_fs:\n    name: foo\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Delete and eradicate file system foo\n  purestorage.flasharray.purefa_fs:\n    name: foo\n    eradicate: true\n    state: absent\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Rename file system foo to bar\n  purestorage.flasharray.purefa_fs:\n    name: foo\n    rename: bar\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n"
  },
  "purestorage.flasharray.purefa_hg": {
    "doc": {
      "description": "Create, delete or modifiy hostgroups on Pure Storage FlashArrays.",
      "has_action": false,
      "notes": "This module requires the C(purestorage) and C(py-pure-client) Python libraries\nAdditional Python librarues may be required for specific modules.\nYou must set C(PUREFA_URL) and C(PUREFA_API) environment variables if I(fa_url) and I(api_token) arguments are not passed to the module directly",
      "options": {
        "api_token": {
          "aliases": [],
          "description": "FlashArray API token for admin privileged user.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "fa_url": {
          "aliases": [],
          "description": "FlashArray management IPv4 address or Hostname.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "host": {
          "aliases": [],
          "description": "List of existing hosts to add to hostgroup.\nNote that hostnames are case-sensitive however FlashArray hostnames are unique and ignore case - you cannot have I(hosta) and I(hostA)",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "hostgroup": {
          "aliases": [],
          "description": "The name of the hostgroup.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "lun": {
          "aliases": [],
          "description": "LUN ID to assign to volume for hostgroup. Must be unique.\nOnly applicable when only one volume is specified for connection.\nIf not provided the ID will be automatically assigned.\nRange for LUN ID is 1 to 4095.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "rename": {
          "aliases": [],
          "description": "New name of hostgroup",
          "type": "str",
          "required": false,
          "version_added": "1.10.0",
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Define whether the hostgroup should exist or not.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "volume": {
          "aliases": [],
          "description": "List of existing volumes to add to hostgroup.\nNote that volumes are case-sensitive however FlashArray volume names are unique and ignore case - you cannot have I(volumea) and I(volumeA)",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.3",
        "purestorage >= 1.19",
        "py-pure-client >= 1.22.0",
        "netaddr",
        "requests",
        "pycountry",
        "packaging"
      ],
      "short_description": "Manage hostgroups on Pure Storage FlashArrays",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create empty hostgroup\n  purestorage.flasharray.purefa_hg:\n    hostgroup: foo\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Add hosts and volumes to existing or new hostgroup\n  purestorage.flasharray.purefa_hg:\n    hostgroup: foo\n    host:\n      - host1\n      - host2\n    volume:\n      - vol1\n      - vol2\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Delete hosts and volumes from hostgroup\n  purestorage.flasharray.purefa_hg:\n    hostgroup: foo\n    host:\n      - host1\n      - host2\n    volume:\n      - vol1\n      - vol2\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n    state: absent\n\n# This will disconnect all hosts and volumes in the hostgroup\n- name: Delete hostgroup\n  purestorage.flasharray.purefa_hg:\n    hostgroup: foo\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n    state: absent\n\n- name: Rename hostgroup\n  purestorage.flasharray.purefa_hg:\n    hostgroup: foo\n    rename: bar\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Create host group with hosts and volumes\n  purestorage.flasharray.purefa_hg:\n    hostgroup: bar\n    host:\n      - host1\n      - host2\n    volume:\n      - vol1\n      - vol2\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n"
  },
  "purestorage.flasharray.purefa_host": {
    "doc": {
      "description": "Create, delete or modify hosts on Pure Storage FlashArrays.",
      "has_action": false,
      "notes": "If specifying C(lun) option ensure host support requested value\nThis module requires the C(purestorage) and C(py-pure-client) Python libraries\nAdditional Python librarues may be required for specific modules.\nYou must set C(PUREFA_URL) and C(PUREFA_API) environment variables if I(fa_url) and I(api_token) arguments are not passed to the module directly",
      "options": {
        "api_token": {
          "aliases": [],
          "description": "FlashArray API token for admin privileged user.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "count": {
          "aliases": [],
          "description": "Number of hosts to be created in a multiple host creation\nOnly supported from Purity//FA v6.0.0 and higher",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "digits": {
          "aliases": [],
          "description": "Number of digits to use for multiple host count. This will pad the index number with zeros where necessary\nOnly supported from Purity//FA v6.0.0 and higher\nRange is between 1 and 10",
          "default": "1",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "fa_url": {
          "aliases": [],
          "description": "FlashArray management IPv4 address or Hostname.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "host_password": {
          "aliases": [],
          "description": "Sets the host password for CHAP authentication\nPassword length between 12 and 255 characters\nTo clear the username/password pair use I(clear) as the password\nSETTING A PASSWORD IS NON-IDEMPOTENT",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "host_user": {
          "aliases": [],
          "description": "Sets the host user name for CHAP authentication\nRequired with I(host_password)\nTo clear the username/password pair use I(clear) as the password",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "iqn": {
          "aliases": [],
          "description": "List of IQNs of the host.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "lun": {
          "aliases": [],
          "description": "LUN ID to assign to volume for host. Must be unique.\nIf not provided the ID will be automatically assigned.\nRange for LUN ID is 1 to 4095.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [
            "host"
          ],
          "description": "The name of the host.\nNote that hostnames are case-sensitive however FlashArray hostnames are unique and ignore case - you cannot have I(hosta) and I(hostA)\nMulti-host support available from Purity//FA 6.0.0 B(***NOTE***) Manual deletion of individual hosts created using multi-host will cause idempotency to fail\nMulti-host support only exists for host creation",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "nqn": {
          "aliases": [],
          "description": "List of NQNs of the host.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "personality": {
          "aliases": [],
          "description": "Define which operating system the host is. Recommended for ActiveCluster integration.",
          "default": "",
          "type": "str",
          "required": false,
          "choices": [
            "hpux",
            "vms",
            "aix",
            "esxi",
            "solaris",
            "hitachi-vsp",
            "oracle-vm-server",
            "delete"
          ],
          "suboptions": {}
        },
        "preferred_array": {
          "aliases": [],
          "description": "List of preferred arrays in an ActiveCluster environment.\nTo remove existing preferred arrays from the host, specify I(delete).",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "protocol": {
          "aliases": [],
          "description": "Defines the host connection protocol for volumes.\nDEPRECATED No longer a necessary parameter",
          "type": "str",
          "required": false,
          "choices": [
            "fc",
            "iscsi",
            "nvme",
            "mixed"
          ],
          "suboptions": {}
        },
        "rename": {
          "aliases": [],
          "description": "The name to rename to.\nNote that hostnames are case-sensitive however FlashArray hostnames are unique and ignore case - you cannot have I(hosta) and I(hostA)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "start": {
          "aliases": [],
          "description": "Number at which to start the multiple host creation index\nOnly supported from Purity//FA v6.0.0 and higher",
          "default": "0",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Define whether the host should exist or not.\nWhen removing host all connected volumes will be disconnected.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "suffix": {
          "aliases": [],
          "description": "Suffix string, if required, for multiple host create\nHost names will be formed as I(<name>#I<suffix>), where I(#) is a placeholder for the host index See associated descriptions\nOnly supported from Purity//FA v6.0.0 and higher",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "target_password": {
          "aliases": [],
          "description": "Sets the target password for CHAP authentication\nPassword length between 12 and 255 characters\nTo clear the username/password pair use I(clear) as the password\nSETTING A PASSWORD IS NON-IDEMPOTENT",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "target_user": {
          "aliases": [],
          "description": "Sets the target user name for CHAP authentication\nRequired with I(target_password)\nTo clear the username/password pair use I(clear) as the password",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "volume": {
          "aliases": [],
          "description": "Volume name to map to the host.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "wwns": {
          "aliases": [],
          "description": "List of wwns of the host.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.3",
        "purestorage >= 1.19",
        "py-pure-client >= 1.22.0",
        "netaddr",
        "requests",
        "pycountry",
        "packaging"
      ],
      "short_description": "Manage hosts on Pure Storage FlashArrays",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create new AIX host\n  purestorage.flasharray.purefa_host:\n    name: foo\n    personality: aix\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Create 10 hosts with index starting at 10 but padded with 3 digits\n  purestorage.flasharray.purefa_host:\n    name: foo\n    personality: vms\n    suffix: bar\n    count: 10\n    start: 10\n    digits: 3\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n    state: present\n\n- name: Rename host foo to bar\n  purestorage.flasharray.purefa_host:\n    name: foo\n    rename: bar\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Delete host\n  purestorage.flasharray.purefa_host:\n    name: foo\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n    state: absent\n\n- name: Make host bar with wwn ports\n  purestorage.flasharray.purefa_host:\n    name: bar\n    wwns:\n    - 00:00:00:00:00:00:00\n    - 11:11:11:11:11:11:11\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Make host bar with iSCSI ports\n  purestorage.flasharray.purefa_host:\n    name: bar\n    iqn:\n    - iqn.1994-05.com.redhat:7d366003913\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Make host bar with NVMe ports\n  purestorage.flasharray.purefa_host:\n    name: bar\n    nqn:\n    - nqn.2014-08.com.vendor:nvme:nvm-subsystem-sn-d78432\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Make mixed protocol host\n  purestorage.flasharray.purefa_host:\n    name: bar\n    nqn:\n    - nqn.2014-08.com.vendor:nvme:nvm-subsystem-sn-d78432\n    iqn:\n    - iqn.1994-05.com.redhat:7d366003914\n    wwns:\n    - 00:00:00:00:00:00:01\n    - 11:11:11:11:11:11:12\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Map host foo to volume bar as LUN ID 12\n  purestorage.flasharray.purefa_host:\n    name: foo\n    volume: bar\n    lun: 12\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Disconnect volume bar from host foo\n  purestorage.flasharray.purefa_host:\n    name: foo\n    volume: bar\n    state: absent\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Add preferred arrays to host foo\n  purestorage.flasharray.purefa_host:\n    name: foo\n    preferred_array:\n    - array1\n    - array2\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Delete preferred arrays from host foo\n  purestorage.flasharray.purefa_host:\n    name: foo\n    preferred_array: delete\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Delete exisitng WWNs from host foo (does not delete host object)\n  purestorage.flasharray.purefa_host:\n    name: foo\n    wwns: \"\"\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Set CHAP target and host username/password pairs\n  purestorage.flasharray.purefa_host:\n    name: foo\n    target_user: user1\n    target_password: passwrodpassword\n    host_user: user2\n    host_password: passwrodpassword\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Delete CHAP target and host username/password pairs\n  purestorage.flasharray.purefa_host:\n    name: foo\n    target_user: user\n    target_password: clear\n    host_user: user\n    host_password: clear\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n"
  },
  "purestorage.flasharray.purefa_info": {
    "doc": {
      "description": "Collect information from a Pure Storage Flasharray running the Purity//FA operating system. By default, the module will collect basic information including hosts, host groups, protection groups and volume counts. Additional information can be collected based on the configured set of arguements.",
      "has_action": false,
      "notes": "This module requires the C(purestorage) and C(py-pure-client) Python libraries\nAdditional Python librarues may be required for specific modules.\nYou must set C(PUREFA_URL) and C(PUREFA_API) environment variables if I(fa_url) and I(api_token) arguments are not passed to the module directly",
      "options": {
        "api_token": {
          "aliases": [],
          "description": "FlashArray API token for admin privileged user.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "fa_url": {
          "aliases": [],
          "description": "FlashArray management IPv4 address or Hostname.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "gather_subset": {
          "aliases": [],
          "description": "When supplied, this argument will define the information to be collected. Possible values for this include all, minimum, config, performance, capacity, network, subnet, interfaces, hgroups, pgroups, hosts, admins, volumes, snapshots, pods, replication, vgroups, offload, apps, arrays, certs, kmip, clients, policies, dir_snaps and filesystems.",
          "default": "minimum",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.3",
        "purestorage >= 1.19",
        "py-pure-client >= 1.22.0",
        "netaddr",
        "requests",
        "pycountry",
        "packaging"
      ],
      "short_description": "Collect information from Pure Storage FlashArray",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: collect default set of information\n  purestorage.flasharray.purefa_info:\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n  register: array_info\n- name: show default information\n  debug:\n    msg: \"{{ array_info['purefa_info']['default'] }}\"\n\n- name: collect configuration and capacity information\n  purestorage.flasharray.purefa_info:\n    gather_subset:\n      - config\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n  register: array_info\n- name: show configuration information\n  debug:\n    msg: \"{{ array_info['purefa_info']['config'] }}\"\n\n- name: collect all information\n  purestorage.flasharray.purefa_info:\n    gather_subset:\n      - all\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n- name: show all information\n  debug:\n    msg: \"{{ array_info['purefa_info'] }}\"\n"
  },
  "purestorage.flasharray.purefa_inventory": {
    "doc": {
      "description": "Collect hardware inventory information from a Pure Storage Flasharray",
      "has_action": false,
      "notes": "This module requires the C(purestorage) and C(py-pure-client) Python libraries\nAdditional Python librarues may be required for specific modules.\nYou must set C(PUREFA_URL) and C(PUREFA_API) environment variables if I(fa_url) and I(api_token) arguments are not passed to the module directly",
      "options": {
        "api_token": {
          "aliases": [],
          "description": "FlashArray API token for admin privileged user.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "fa_url": {
          "aliases": [],
          "description": "FlashArray management IPv4 address or Hostname.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.3",
        "purestorage >= 1.19",
        "py-pure-client >= 1.22.0",
        "netaddr",
        "requests",
        "pycountry",
        "packaging"
      ],
      "short_description": "Collect information from Pure Storage FlashArray",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: collect FlashArray invenroty\n  purestorage.flasharray.purefa_inventory:\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n- name: show inventory information\n  debug:\n    msg: \"{{ array_info['purefa_info'] }}\"\n\n"
  },
  "purestorage.flasharray.purefa_kmip": {
    "doc": {
      "description": "Manage FlashArray KMIP Server objects",
      "has_action": false,
      "notes": "This module requires the C(purestorage) and C(py-pure-client) Python libraries\nAdditional Python librarues may be required for specific modules.\nYou must set C(PUREFA_URL) and C(PUREFA_API) environment variables if I(fa_url) and I(api_token) arguments are not passed to the module directly",
      "options": {
        "api_token": {
          "aliases": [],
          "description": "FlashArray API token for admin privileged user.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ca_certificate": {
          "aliases": [],
          "description": "The text of the CA certificate for the KMIP server.\nIncludes the \"-----BEGIN CERTIFICATE-----\" and \"-----END CERTIFICATE-----\" lines\nDoes not exceed 3000 characters in length",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "certificate": {
          "aliases": [],
          "description": "Name of existing certifcate used to verify FlashArray authenticity to the KMIP server.\nUse the I(purestorage.flasharray.purefa_certs) module to create certificates.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "fa_url": {
          "aliases": [],
          "description": "FlashArray management IPv4 address or Hostname.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the KMIP server object",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Action for the module to perform",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "uris": {
          "aliases": [],
          "description": "A list of URIs for the configured KMIP servers.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.3",
        "purestorage >= 1.19",
        "py-pure-client >= 1.22.0",
        "netaddr",
        "requests",
        "pycountry",
        "packaging"
      ],
      "short_description": "Manage FlashArray KMIP server objects",
      "version_added": "1.10.0"
    },
    "examples": "\n- name: Create KMIP obejct\n  purestorage.flasharray.purefa_kmip:\n    name: foo\n    certificate: bar\n    ca_certificate: \"{{lookup('file', 'example.crt') }}\"\n    uris:\n    - 1.1.1.1:8888\n    - 2.3.3.3:9999\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Delete KMIP object\n  purestorage.flasharray.purefa_kmip:\n    name: foo\n    state: absent\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Update KMIP object\n  purestorage.flasharray.purefa_kmip:\n    name: foo\n    ca_certificate: \"{{lookup('file', 'example2.crt') }}\"\n    uris:\n    - 3.3.3.3:8888\n    - 4.4.4.4:9999\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n"
  },
  "purestorage.flasharray.purefa_maintenance": {
    "doc": {
      "description": "Configuration for Pure Storage FlashArray Maintenance Windows.",
      "has_action": false,
      "notes": "This module requires the C(purestorage) and C(py-pure-client) Python libraries\nAdditional Python librarues may be required for specific modules.\nYou must set C(PUREFA_URL) and C(PUREFA_API) environment variables if I(fa_url) and I(api_token) arguments are not passed to the module directly",
      "options": {
        "api_token": {
          "aliases": [],
          "description": "FlashArray API token for admin privileged user.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "fa_url": {
          "aliases": [],
          "description": "FlashArray management IPv4 address or Hostname.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Create or delete maintennance window",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "timeout": {
          "aliases": [],
          "description": "Maintenance window period, specified in seconds.\nRange allowed is 1 minute (60 seconds) to 24 hours (86400 seconds)\nDefault setting is 1 hour (3600 seconds)",
          "default": "3600",
          "type": "int",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.3",
        "purestorage >= 1.19",
        "py-pure-client >= 1.22.0",
        "netaddr",
        "requests",
        "pycountry",
        "packaging"
      ],
      "short_description": "Configure Pure Storage FlashArray Maintence Windows",
      "version_added": "1.7.0"
    },
    "examples": "\n- name: Delete exisitng maintenance window\n  purestorage.flasharray.purefa_maintenance:\n    state: absent\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Set maintnence window to default of 1 hour\n  purestorage.flasharray.purefa_maintenance:\n    state: present\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Update existing maintnence window\n  purestorage.flasharray.purefa_maintenance:\n    state: present\n    timeout: 86400\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n"
  },
  "purestorage.flasharray.purefa_network": {
    "doc": {
      "description": "This module manages the physical and virtual network interfaces on a Pure Storage FlashArray.\nTo manage VLAN interfaces use the I(purestorage.flasharray.purefa_vlan) module.\nTo manage network subnets use the I(purestorage.flasharray.purefa_subnet) module.\nTo remove an IP address from a non-management port use 0.0.0.0/0",
      "has_action": false,
      "notes": "This module requires the C(purestorage) and C(py-pure-client) Python libraries\nAdditional Python librarues may be required for specific modules.\nYou must set C(PUREFA_URL) and C(PUREFA_API) environment variables if I(fa_url) and I(api_token) arguments are not passed to the module directly",
      "options": {
        "address": {
          "aliases": [],
          "description": "IPv4 or IPv6 address of interface in CIDR notation.\nTo remove an IP address from a non-management port use 0.0.0.0/0",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "api_token": {
          "aliases": [],
          "description": "FlashArray API token for admin privileged user.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "fa_url": {
          "aliases": [],
          "description": "FlashArray management IPv4 address or Hostname.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "gateway": {
          "aliases": [],
          "description": "IPv4 or IPv6 address of interface gateway.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "mtu": {
          "aliases": [],
          "description": "MTU size of the interface. Range is 1280 to 9216.",
          "default": "1500",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Interface name (physical or virtual).",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "State of existing interface (on/off).",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.3",
        "purestorage >= 1.19",
        "py-pure-client >= 1.22.0",
        "netaddr",
        "requests",
        "pycountry",
        "packaging"
      ],
      "short_description": "Manage network interfaces in a Pure Storage FlashArray",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Configure and enable network interface ct0.eth8\n  purestorage.flasharray.purefa_network:\n    name: ct0.eth8\n    gateway: 10.21.200.1\n    address: \"10.21.200.18/24\"\n    mtu: 9000\n    state: present\n    fa_url: 10.10.10.2\n    api_token: c6033033-fe69-2515-a9e8-966bb7fe4b40\n\n- name: Disable physical interface ct1.eth2\n  purestorage.flasharray.purefa_network:\n    name: ct1.eth2\n    state: absent\n    fa_url: 10.10.10.2\n    api_token: c6033033-fe69-2515-a9e8-966bb7fe4b40\n\n- name: Enable virtual network interface vir0\n  purestorage.flasharray.purefa_network:\n    name: vir0\n    state: present\n    fa_url: 10.10.10.2\n    api_token: c6033033-fe69-2515-a9e8-966bb7fe4b40\n\n- name: Remove an IP address from iSCSI interface ct0.eth4\n  purestorage.flasharray.purefa_network:\n    name: ct0.eth4\n    address: 0.0.0.0/0\n    gateway: 0.0.0.0\n    fa_url: 10.10.10.2\n    api_token: c6033033-fe69-2515-a9e8-966bb7fe4b40\n"
  },
  "purestorage.flasharray.purefa_ntp": {
    "doc": {
      "description": "Set or erase NTP configuration for Pure Storage FlashArrays.",
      "has_action": false,
      "notes": "This module requires the C(purestorage) and C(py-pure-client) Python libraries\nAdditional Python librarues may be required for specific modules.\nYou must set C(PUREFA_URL) and C(PUREFA_API) environment variables if I(fa_url) and I(api_token) arguments are not passed to the module directly",
      "options": {
        "api_token": {
          "aliases": [],
          "description": "FlashArray API token for admin privileged user.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "fa_url": {
          "aliases": [],
          "description": "FlashArray management IPv4 address or Hostname.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ntp_servers": {
          "aliases": [],
          "description": "A list of up to 4 alternate NTP servers. These may include IPv4, IPv6 or FQDNs. Invalid IP addresses will cause the module to fail. No validation is performed for FQDNs.\nIf more than 4 servers are provided, only the first 4 unique nameservers will be used.\nif no servers are given a default of I(0.pool.ntp.org) will be used.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Create or delete NTP servers configuration",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.3",
        "purestorage >= 1.19",
        "py-pure-client >= 1.22.0",
        "netaddr",
        "requests",
        "pycountry",
        "packaging"
      ],
      "short_description": "Configure Pure Storage FlashArray NTP settings",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Delete exisitng NTP server entries\n  purestorage.flasharray.purefa_ntp:\n    state: absent\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Set array NTP servers\n  purestorage.flasharray.purefa_ntp:\n    state: present\n    ntp_servers:\n      - \"0.pool.ntp.org\"\n      - \"1.pool.ntp.org\"\n      - \"2.pool.ntp.org\"\n      - \"3.pool.ntp.org\"\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n"
  },
  "purestorage.flasharray.purefa_offload": {
    "doc": {
      "description": "Create, modify and delete NFS, S3 or Azure offload targets.\nOnly supported on Purity v5.2.0 or higher.\nYou must have a correctly configured offload network for offload to work.",
      "has_action": false,
      "notes": "This module requires the C(purestorage) and C(py-pure-client) Python libraries\nAdditional Python librarues may be required for specific modules.\nYou must set C(PUREFA_URL) and C(PUREFA_API) environment variables if I(fa_url) and I(api_token) arguments are not passed to the module directly",
      "options": {
        "access_key": {
          "aliases": [],
          "description": "Access Key ID of the offload target",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "account": {
          "aliases": [],
          "description": "Name of the Azure blob storage account",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "address": {
          "aliases": [],
          "description": "The IP or FQDN address of the NFS server",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "api_token": {
          "aliases": [],
          "description": "FlashArray API token for admin privileged user.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "bucket": {
          "aliases": [],
          "description": "Name of the bucket for the S3 or GCP target",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "container": {
          "aliases": [],
          "description": "Name of the blob container of the Azure target",
          "default": "offload",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "fa_url": {
          "aliases": [],
          "description": "FlashArray management IPv4 address or Hostname.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "initialize": {
          "aliases": [],
          "description": "Define whether to initialize the offload bucket",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the offload target",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "options": {
          "aliases": [],
          "description": "Additonal mount options for the NFS share\nSupported mount options include I(port), I(rsize), I(wsize), I(nfsvers), and I(tcp) or I(udp)",
          "default": "",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "placement": {
          "aliases": [],
          "description": "AWS S3 placement strategy",
          "default": "retention-based",
          "type": "str",
          "required": false,
          "choices": [
            "retention-based",
            "aws-standard-class"
          ],
          "suboptions": {}
        },
        "protocol": {
          "aliases": [],
          "description": "Define which protocol the offload engine uses",
          "default": "nfs",
          "type": "str",
          "required": false,
          "choices": [
            "nfs",
            "s3",
            "azure",
            "gcp"
          ],
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Secret Access Key for the offload target",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "share": {
          "aliases": [],
          "description": "NFS export on the NFS server",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Define state of offload",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.3",
        "purestorage >= 1.19",
        "py-pure-client >= 1.22.0",
        "netaddr",
        "requests",
        "pycountry",
        "packaging"
      ],
      "short_description": "Create, modify and delete NFS, S3 or Azure offload targets",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create NFS offload target\n  purestorage.flasharray.purefa_offload:\n    name: nfs-offload\n    protocol: nfs\n    address: 10.21.200.4\n    share: \"/offload_target\"\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Create S3 offload target\n  purestorage.flasharray.purefa_offload:\n    name: s3-offload\n    protocol: s3\n    access_key: \"3794fb12c6204e19195f\"\n    bucket: offload-bucket\n    secret: \"wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY\"\n    placement: aws-standard-class\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Create Azure offload target\n  purestorage.flasharray.purefa_offload:\n    name: azure-offload\n    protocol: azure\n    secret: \"wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY\"\n    container: offload-container\n    account: user1\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Delete offload target\n  purestorage.flasharray.purefa_offload:\n    name: nfs-offload\n    protocol: nfs\n    state: absent\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n"
  },
  "purestorage.flasharray.purefa_pg": {
    "doc": {
      "description": "Create, delete or modify protection groups on Pure Storage FlashArrays.\nIf a protection group exists and you try to add non-valid types, eg. a host to a volume protection group the module will ignore the invalid types.\nProtection Groups on Offload targets are supported.",
      "has_action": false,
      "notes": "This module requires the C(purestorage) and C(py-pure-client) Python libraries\nAdditional Python librarues may be required for specific modules.\nYou must set C(PUREFA_URL) and C(PUREFA_API) environment variables if I(fa_url) and I(api_token) arguments are not passed to the module directly",
      "options": {
        "api_token": {
          "aliases": [],
          "description": "FlashArray API token for admin privileged user.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "enabled": {
          "aliases": [],
          "description": "Define whether to enabled snapshots for the protection group.",
          "default": "yes",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "eradicate": {
          "aliases": [],
          "description": "Define whether to eradicate the protection group on delete and leave in trash.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "fa_url": {
          "aliases": [],
          "description": "FlashArray management IPv4 address or Hostname.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "host": {
          "aliases": [],
          "description": "List of existing hosts to add to protection group.\nNote that hostnames are case-sensitive however FlashArray hostnames are unique and ignore case - you cannot have I(hosta) and I(hostA)",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "hostgroup": {
          "aliases": [],
          "description": "List of existing hostgroups to add to protection group.\nNote that hostgroups are case-sensitive however FlashArray hostgroup names are unique and ignore case - you cannot have I(groupa) and I(groupA)",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "pgroup": {
          "aliases": [],
          "description": "The name of the protection group.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "rename": {
          "aliases": [],
          "description": "Rename a protection group\nIf the source protection group is in a Pod or Volume Group 'container' you only need to provide the new protection group name in the same 'container'",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Define whether the protection group should exist or not.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "target": {
          "aliases": [],
          "description": "List of remote arrays or offload target for replication protection group to connect to.\nNote that all replicated protection groups are asynchronous.\nTarget arrays or offload targets must already be connected to the source array.\nMaximum number of targets per Portection Group is 4, assuming your configuration suppors this.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "volume": {
          "aliases": [],
          "description": "List of existing volumes to add to protection group.\nNote that volume are case-sensitive however FlashArray volume names are unique and ignore case - you cannot have I(volumea) and I(volumeA)",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.3",
        "purestorage >= 1.19",
        "py-pure-client >= 1.22.0",
        "netaddr",
        "requests",
        "pycountry",
        "packaging"
      ],
      "short_description": "Manage protection groups on Pure Storage FlashArrays",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create new local protection group\n  purestorage.flasharray.purefa_pg:\n    pgroup: foo\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Create new protection group called bar in pod called foo\n  purestorage.flasharray.purefa_pg:\n    pgroup: \"foo::bar\"\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Create new replicated protection group\n  purestorage.flasharray.purefa_pg:\n    pgroup: foo\n    target:\n      - arrayb\n      - arrayc\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Create new replicated protection group to offload target and remote array\n  purestorage.flasharray.purefa_pg:\n    pgroup: foo\n    target:\n      - offload\n      - arrayc\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Create new protection group with snapshots disabled\n  purestorage.flasharray.purefa_pg:\n    pgroup: foo\n    enabled: false\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Delete protection group\n  purestorage.flasharray.purefa_pg:\n    pgroup: foo\n    eradicate: true\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n    state: absent\n\n- name: Eradicate protection group foo on offload target where source array is arrayA\n  purestorage.flasharray.purefa_pg:\n    purestorage.flasharray.pgroup: \"arrayA:foo\"\n    target: offload\n    eradicate: true\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n    state: absent\n\n- name: Rename protection group foo in pod arrayA to bar\n  purestorage.flasharray.purefa_pg:\n    pgroup: \"arrayA::foo\"\n    rename: bar\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Create protection group for hostgroups\n  purestorage.flasharray.purefa_pg:\n    pgroup: bar\n    hostgroup:\n      - hg1\n      - hg2\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Create protection group for hosts\n  purestorage.flasharray.purefa_pg:\n    pgroup: bar\n    host:\n      - host1\n      - host2\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Create replicated protection group for volumes\n  purestorage.flasharray.purefa_pg:\n    pgroup: bar\n    volume:\n      - vol1\n      - vol2\n    target: arrayb\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n"
  },
  "purestorage.flasharray.purefa_pgsched": {
    "doc": {
      "description": "Modify or delete protection groups replication schedules on Pure Storage FlashArrays.",
      "has_action": false,
      "notes": "This module requires the C(purestorage) and C(py-pure-client) Python libraries\nAdditional Python librarues may be required for specific modules.\nYou must set C(PUREFA_URL) and C(PUREFA_API) environment variables if I(fa_url) and I(api_token) arguments are not passed to the module directly",
      "options": {
        "all_for": {
          "aliases": [],
          "description": "Specifies the length of time, in seconds, to keep the snapshots on the source array before they are eradicated.\nRange available 1 - 34560000.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "api_token": {
          "aliases": [],
          "description": "FlashArray API token for admin privileged user.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "blackout_end": {
          "aliases": [],
          "description": "Specifies the time at which to restart replication.\nProvide a time in 12-hour AM/PM format, eg. 5PM",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "blackout_start": {
          "aliases": [],
          "description": "Specifies the time at which to suspend replication.\nProvide a time in 12-hour AM/PM format, eg. 11AM",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "days": {
          "aliases": [],
          "description": "Specifies the number of days to keep the I(per_day) snapshots beyond the I(all_for) period before they are eradicated\nMax retention period is 4000 days",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "enabled": {
          "aliases": [],
          "description": "Enable the schedule being configured.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "fa_url": {
          "aliases": [],
          "description": "FlashArray management IPv4 address or Hostname.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the protection group.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "per_day": {
          "aliases": [],
          "description": "Specifies the number of I(per_day) snapshots to keep beyond the I(all_for) period.\nMaximum number is 1440",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "replicate_at": {
          "aliases": [],
          "description": "Specifies the preferred time as HH:MM:SS, using 24-hour clock, at which to generate snapshots.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "replicate_frequency": {
          "aliases": [],
          "description": "Specifies the replication frequency in seconds.\nRange 900 - 34560000 (FA-405, //M10, //X10i and Cloud Block Store).\nRange 300 - 34560000 (all other arrays).",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "schedule": {
          "aliases": [],
          "description": "Which schedule to change.",
          "type": "str",
          "required": true,
          "choices": [
            "replication",
            "snapshot"
          ],
          "suboptions": {}
        },
        "snap_at": {
          "aliases": [],
          "description": "Specifies the preferred time as HH:MM:SS, using 24-hour clock, at which to generate snapshots.\nOnly valid if I(snap_frequency) is an exact multiple of 86400, ie 1 day.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "snap_frequency": {
          "aliases": [],
          "description": "Specifies the snapshot frequency in seconds.\nRange available 300 - 34560000.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Define whether to set or delete the protection group schedule.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "target_all_for": {
          "aliases": [],
          "description": "Specifies the length of time, in seconds, to keep the replicated snapshots on the targets.\nRange is 1 - 34560000 seconds.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "target_days": {
          "aliases": [],
          "description": "Specifies the number of days to keep the I(target_per_day) replicated snapshots beyond the I(target_all_for) period before they are eradicated.\nMax retention period is 4000 days",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "target_per_day": {
          "aliases": [],
          "description": "Specifies the number of I(per_day) replicated snapshots to keep beyond the I(target_all_for) period.\nMaximum number is 1440",
          "type": "int",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.3",
        "purestorage >= 1.19",
        "py-pure-client >= 1.22.0",
        "netaddr",
        "requests",
        "pycountry",
        "packaging"
      ],
      "short_description": "Manage protection groups replication schedules on Pure Storage FlashArrays",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Update protection group snapshot schedule\n  purestorage.flasharray.purefa_pgsched:\n    name: foo\n    schedule: snapshot\n    enabled: true\n    snap_frequency: 86400\n    snap_at: 15:30:00\n    per_day: 5\n    all_for: 5\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Update protection group replication schedule\n  purestorage.flasharray.purefa_pgsched:\n    name: foo\n    schedule: replication\n    enabled: true\n    replicate_frequency: 86400\n    replicate_at: 15:30:00\n    target_per_day: 5\n    target_all_for: 5\n    blackout_start: 2AM\n    blackout_end: 5AM\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Delete protection group snapshot schedule\n  purestorage.flasharray.purefa_pgsched:\n    name: foo\n    scheduke: snapshot\n    state: absent\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Delete protection group replication schedule\n  purestorage.flasharray.purefa_pgsched:\n    name: foo\n    scheduke: replication\n    state: absent\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n"
  },
  "purestorage.flasharray.purefa_pgsnap": {
    "doc": {
      "description": "Create or delete protection group snapshots on Pure Storage FlashArray.\nRecovery of replicated snapshots on the replica target array is enabled.\nSupport for ActiveCluster and Volume Group protection groups is supported.",
      "has_action": false,
      "notes": "This module requires the C(purestorage) and C(py-pure-client) Python libraries\nAdditional Python librarues may be required for specific modules.\nYou must set C(PUREFA_URL) and C(PUREFA_API) environment variables if I(fa_url) and I(api_token) arguments are not passed to the module directly",
      "options": {
        "api_token": {
          "aliases": [],
          "description": "FlashArray API token for admin privileged user.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "apply_retention": {
          "aliases": [],
          "description": "Apply retention schedule settings to the snapshot",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "eradicate": {
          "aliases": [],
          "description": "Define whether to eradicate the snapshot on delete or leave in trash.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "fa_url": {
          "aliases": [],
          "description": "FlashArray management IPv4 address or Hostname.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the source protection group.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "now": {
          "aliases": [],
          "description": "Whether to initiate a snapshot of the protection group immeadiately",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "offload": {
          "aliases": [],
          "description": "Name of offload target on which the snapshot exists.\nThis is only applicable for deletion and erasure of snapshots",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "overwrite": {
          "aliases": [],
          "description": "Define whether to overwrite the target volume if it already exists.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "remote": {
          "aliases": [],
          "description": "Force immeadiate snapshot to remote targets",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "restore": {
          "aliases": [],
          "description": "Restore a specific volume from a protection group snapshot.\nThe protection group name is not required. Only provide the name of the volume to be restored.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Define whether the protection group snapshot should exist or not. Copy (added in 2.7) will create a full read/write clone of the snapshot.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present",
            "copy"
          ],
          "suboptions": {}
        },
        "suffix": {
          "aliases": [],
          "description": "Suffix of snapshot name.\nSpecial case. If I(latest) the module will select the latest snapshot created in the group",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "target": {
          "aliases": [],
          "description": "Volume to restore a specified volume to.\nIf not supplied this will default to the volume defined in I(restore)",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.3",
        "purestorage >= 1.19",
        "py-pure-client >= 1.22.0",
        "netaddr",
        "requests",
        "pycountry",
        "packaging"
      ],
      "short_description": "Manage protection group snapshots on Pure Storage FlashArrays",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create protection group snapshot foo.ansible\n  purestorage.flasharray.purefa_pgsnap:\n    name: foo\n    suffix: ansible\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n    state: present\n\n- name: Delete and eradicate protection group snapshot named foo.snap\n  purestorage.flasharray.purefa_pgsnap:\n    name: foo\n    suffix: snap\n    eradicate: true\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n    state: absent\n\n- name: Restore volume data from local protection group snapshot named foo.snap to volume data2\n  purestorage.flasharray.purefa_pgsnap:\n    name: foo\n    suffix: snap\n    restore: data\n    target: data2\n    overwrite: true\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n    state: copy\n\n- name: Restore remote protection group snapshot arrayA:pgname.snap.data to local copy\n  purestorage.flasharray.purefa_pgsnap:\n    name: arrayA:pgname\n    suffix: snap\n    restore: data\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n    state: copy\n\n- name: Restore AC pod  protection group snapshot pod1::pgname.snap.data to pdo1::data2\n  purestorage.flasharray.purefa_pgsnap:\n    name: pod1::pgname\n    suffix: snap\n    restore: data\n    target: pod1::data2\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n    state: copy\n\n- name: Create snapshot of existing pgroup foo with suffix and force immeadiate copy to remote targets\n  purestorage.flasharray.purefa_pgsnap:\n    name: pgname\n    suffix: force\n    now: True\n    apply_retention: True\n    remote: True\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Delete and eradicate snapshot named foo.snap on offload target bar from arrayA\n  purestorage.flasharray.purefa_pgsnap:\n    name: \"arrayA:foo\"\n    suffix: snap\n    offload: bar\n    eradicate: true\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n    state: absent\n"
  },
  "purestorage.flasharray.purefa_phonehome": {
    "doc": {
      "description": "Enablke or Disable Phonehome for a Pure Storage FlashArray.",
      "has_action": false,
      "notes": "This module requires the C(purestorage) and C(py-pure-client) Python libraries\nAdditional Python librarues may be required for specific modules.\nYou must set C(PUREFA_URL) and C(PUREFA_API) environment variables if I(fa_url) and I(api_token) arguments are not passed to the module directly",
      "options": {
        "api_token": {
          "aliases": [],
          "description": "FlashArray API token for admin privileged user.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "fa_url": {
          "aliases": [],
          "description": "FlashArray management IPv4 address or Hostname.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Define state of phonehome",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.3",
        "purestorage >= 1.19",
        "py-pure-client >= 1.22.0",
        "netaddr",
        "requests",
        "pycountry",
        "packaging"
      ],
      "short_description": "Enable or Disable Pure Storage FlashArray Phonehome",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Enable Phonehome\n  purestorage.flasharray.purefa_phonehome:\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Disable Phonehome\n  purestorage.flasharray.purefa_phonehome:\n    state: disable\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n"
  },
  "purestorage.flasharray.purefa_pod": {
    "doc": {
      "description": "Manage AC pods in a Pure Storage FlashArray.",
      "has_action": false,
      "notes": "This module requires the C(purestorage) and C(py-pure-client) Python libraries\nAdditional Python librarues may be required for specific modules.\nYou must set C(PUREFA_URL) and C(PUREFA_API) environment variables if I(fa_url) and I(api_token) arguments are not passed to the module directly",
      "options": {
        "api_token": {
          "aliases": [],
          "description": "FlashArray API token for admin privileged user.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "eradicate": {
          "aliases": [],
          "description": "Define whether to eradicate the pod on delete or leave in trash.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "fa_url": {
          "aliases": [],
          "description": "FlashArray management IPv4 address or Hostname.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "failover": {
          "aliases": [],
          "description": "The name of the array given priority to stay online if arrays loose contact with eachother.\nOprions are either array in the cluster, or I(auto)",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "mediator": {
          "aliases": [],
          "description": "Name of the mediator to use for a pod",
          "default": "purestorage",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the pod.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "promote": {
          "aliases": [],
          "description": "Promote/demote any pod not in a stretched relationship. .\nDemoting a pod will render it read-only.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "quiesce": {
          "aliases": [],
          "description": "Quiesce/Skip quiesce when I(promote) is false and demoting an ActiveDR pod.\nQuiesce will ensure all local data has been replicated before demotion.\nSkipping quiesce looses all pending data to be replicated to the remote pod.\nCan only demote the pod if it is in a Acrive DR replica link relationship.\nThis will default to True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Define whether the pod should exist or not.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "stretch": {
          "aliases": [],
          "description": "The name of the array to stretch to/unstretch from. Must be synchromously replicated.\nTo unstretch an array use state I(absent)\nYou can only specify a remote array, ie you cannot unstretch a pod from the current array and then restretch back to the current array.\nTo restretch a pod you must perform this from the remaining array the pod resides on.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "target": {
          "aliases": [],
          "description": "Name of clone target pod.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "undo": {
          "aliases": [],
          "description": "Use the I(undo-remote) pod when I(promote) is true and promoting an ActiveDR pod.\nThis will default to True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.3",
        "purestorage >= 1.19",
        "py-pure-client >= 1.22.0",
        "netaddr",
        "requests",
        "pycountry",
        "packaging"
      ],
      "short_description": "Manage AC pods in Pure Storage FlashArrays",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create new pod named foo\n  purestorage.flasharray.purefa_pod:\n    name: foo\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n    state: present\n\n- name: Delete and eradicate pod named foo\n  purestorage.flasharray.purefa_pod:\n    name: foo\n    eradicate: yes\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n    state: absent\n\n- name: Set failover array for pod named foo\n  purestorage.flasharray.purefa_pod:\n    name: foo\n    failover:\n    - array1\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Set mediator for pod named foo\n  purestorage.flasharray.purefa_pod:\n    name: foo\n    mediator: bar\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Stretch a pod named foo to array2\n  purestorage.flasharray.purefa_pod:\n    name: foo\n    stretch: array2\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Unstretch a pod named foo from array2\n  purestorage.flasharray.purefa_pod:\n    name: foo\n    stretch: array2\n    state: absent\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Create clone of pod foo named bar\n  purestorage.flasharray.purefa_pod:\n    name: foo\n    target: bar\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n    state: present\n"
  },
  "purestorage.flasharray.purefa_pod_replica": {
    "doc": {
      "description": "This module manages ActiveDR pod replica links between Pure Storage FlashArrays.",
      "has_action": false,
      "notes": "This module requires the C(purestorage) and C(py-pure-client) Python libraries\nAdditional Python librarues may be required for specific modules.\nYou must set C(PUREFA_URL) and C(PUREFA_API) environment variables if I(fa_url) and I(api_token) arguments are not passed to the module directly",
      "options": {
        "api_token": {
          "aliases": [],
          "description": "FlashArray API token for admin privileged user.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "fa_url": {
          "aliases": [],
          "description": "FlashArray management IPv4 address or Hostname.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "ActiveDR source pod name",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "pause": {
          "aliases": [],
          "description": "Pause/unpause a pod replica link",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Creates or modifies a pod replica link",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "target_array": {
          "aliases": [],
          "description": "Remote array name to create replica on.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "target_pod": {
          "aliases": [],
          "description": "Name of target pod\nMust not be the same as the local pod.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.3",
        "purestorage >= 1.19",
        "py-pure-client >= 1.22.0",
        "netaddr",
        "requests",
        "pycountry",
        "packaging"
      ],
      "short_description": "Manage ActiveDR pod replica links between Pure Storage FlashArrays",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create new pod replica link from foo to bar on arrayB\n  purestorage.flasharray.purefa_pod_replica:\n    name: foo\n    target_array: arrayB\n    target_pod: bar\n    state: present\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Pause an pod replica link\n  purestorage.flasharray.purefa_pod_replica:\n    name: foo\n    pause: true\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Delete and eradicate pod replica link\n  purestorage.flasharray.purefa_pod_replica:\n    name: foo\n    state: absent\n    eradicate: true\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n"
  },
  "purestorage.flasharray.purefa_policy": {
    "doc": {
      "description": "Manage FlashArray file system policies for NFS, SMB and snapshot",
      "has_action": false,
      "notes": "This module requires the C(purestorage) and C(py-pure-client) Python libraries\nAdditional Python librarues may be required for specific modules.\nYou must set C(PUREFA_URL) and C(PUREFA_API) environment variables if I(fa_url) and I(api_token) arguments are not passed to the module directly",
      "options": {
        "api_token": {
          "aliases": [],
          "description": "FlashArray API token for admin privileged user.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "client": {
          "aliases": [],
          "description": "Specifies which SMB or NFS clients are given access\nAccepted notation, IP, IP mask, or hostname",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "directory": {
          "aliases": [],
          "description": "Directories to have the quota rule applied to.",
          "type": "list",
          "required": false,
          "elements": "str",
          "version_added": "1.9.0",
          "suboptions": {}
        },
        "enabled": {
          "aliases": [],
          "description": "Define if policy is enabled or not",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "fa_url": {
          "aliases": [],
          "description": "FlashArray management IPv4 address or Hostname.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ignore_usage": {
          "aliases": [],
          "description": "Flag used to override checks for quota management operations.\nIf set to true, directory usage is not checked against the quota_limits that are set.\nIf set to false, the actual logical bytes in use are prevented from exceeding the limits set on the directory.\nClient operations might be impacted.\nIf the limit exceeds the quota, the client operation is not allowed.",
          "default": "False",
          "type": "bool",
          "required": false,
          "version_added": "1.9.0",
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the policy",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "nfs_access": {
          "aliases": [],
          "description": "Specifies access control for the export",
          "default": "no-root-squash",
          "type": "str",
          "required": false,
          "choices": [
            "root-squash",
            "no-root-squash"
          ],
          "suboptions": {}
        },
        "nfs_permission": {
          "aliases": [],
          "description": "Specifies which read-write client access permissions are allowed for the export",
          "default": "rw",
          "type": "str",
          "required": false,
          "choices": [
            "ro",
            "rw"
          ],
          "suboptions": {}
        },
        "policy": {
          "aliases": [],
          "description": "The type of policy to use",
          "type": "str",
          "required": true,
          "choices": [
            "nfs",
            "smb",
            "snapshot",
            "quota"
          ],
          "suboptions": {}
        },
        "quota_enforced": {
          "aliases": [],
          "description": "Defines if the directory quota is enforced.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "quota_limit": {
          "aliases": [],
          "description": "Logical space limit of the share in M, G, T or P units. See examples.\nIf size is not set at filesystem creation time the filesystem size becomes unlimited.\nThis value cannot be set to 0.",
          "type": "str",
          "required": false,
          "version_added": "1.9.0",
          "suboptions": {}
        },
        "quota_notifications": {
          "aliases": [],
          "description": "Targets to notify when usage approaches the quota limit.\nThe list of notification targets is a comma-separated string\nIf not specified, notification targets are not assigned.",
          "type": "list",
          "required": false,
          "choices": [
            "user",
            "group"
          ],
          "elements": "str",
          "version_added": "1.9.0",
          "suboptions": {}
        },
        "rename": {
          "aliases": [],
          "description": "New name of policy",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "smb_anon_allowed": {
          "aliases": [],
          "description": "Specifies whether access to information is allowed for anonymous users",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "smb_encrypt": {
          "aliases": [],
          "description": "Specifies whether the remote client is required to use SMB encryption",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "snap_at": {
          "aliases": [],
          "description": "Specifies the number of hours since midnight at which to take a snapshot or the hour including AM/PM\nCan only be set on the rule with the smallest I(snap_every) value.\nCannot be set if the I(snap_every) value is not measured in days.\nCan only be set for at most one rule in the same policy.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "snap_client_name": {
          "aliases": [],
          "description": "The customizable portion of the client visible snapshot name.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "snap_every": {
          "aliases": [],
          "description": "Specifies the interval between snapshots, in minutes.\nThe value for all rules must be multiples of one another.\nMust be unique for each rule in the same policy.\nValue must be between 5 and 525600.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "snap_keep_for": {
          "aliases": [],
          "description": "Specifies the period that snapshots are retained before they are eradicated, in minutes.\nCannot be less than the I(snap_every) value of the rule.\nValue must be unique for each rule in the same policy.\nValue must be between 5 and 525600.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "snap_suffix": {
          "aliases": [],
          "description": "The snapshot suffix name\nThe suffix value can only be set for one rule in the same policy\nThe suffix value can only be set on a rule with the same ``keep_for`` value and ``every`` value\nThe suffix value can only be set on the rule with the largest ``keep_for`` value\nIf not specified, defaults to a monotonically increasing number generated by the system.",
          "type": "str",
          "required": false,
          "version_added": "1.10.0",
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Define whether the policy should exist or not.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.3",
        "purestorage >= 1.19",
        "py-pure-client >= 1.22.0",
        "netaddr",
        "requests",
        "pycountry",
        "packaging"
      ],
      "short_description": "Manage FlashArray File System Policies",
      "version_added": "1.5.0"
    },
    "examples": "\n- name: Create an NFS policy with initial rule\n  purestorage.flasharray.purefa_policy:\n    name: export1\n    policy: nfs\n    nfs_access: root-squash\n    nfs_permission: ro\n    client: client1\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Create an empty NFS policy with no rules\n  purestorage.flasharray.purefa_policy:\n    name: export1\n    policy: nfs\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Create an empty snapshot policy with no rules\n  purestorage.flasharray.purefa_policy:\n    name: snap1\n    policy: snapshot\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Disable a policy\n  purestorage.flasharray.purefa_policy:\n    name: export1\n    policy: nfs\n    enabled: false\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Add rule to existing NFS export policy\n  purestorage.flasharray.purefa_policy:\n    name: export1\n    policy: nfs\n    nfs_access: root-squash\n    nfs_permission: ro\n    client: client2\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Add rule to existing SMB export policy\n  purestorage.flasharray.purefa_policy:\n    name: export1\n    policy: smb\n    smb_encrypt: yes\n    smb_anon_allowed: no\n    client: client1\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Add non-suffix rule to existing snapshot export policy\n  purestorage.flasharray.purefa_policy:\n    name: snap1\n    policy: snapshot\n    snap_client_name: foo\n    snap_every: 15\n    snap_keep_for: 1440\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Add suffix rule to existing snapshot export policy\n  purestorage.flasharray.purefa_policy:\n    name: snap1\n    policy: snapshot\n    snap_client_name: foo\n    snap_suffix: bar\n    snap_every: 1440\n    snap_keep_for: 1440\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Delete policy rule for a client\n  purestorage.flasharray.purefa_policy:\n    name: export1\n    policy: nfs\n    client: client2\n    state: absent\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Delete policy\n  purestorage.flasharray.purefa_policy:\n    name: export1\n    policy: nfs\n    state: absent\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Create directory quota policy for directory bar\n  purestorage.flasharray.purefa_policy:\n    name: foo\n    directory:\n     - \"foo:root\"\n     - \"bar:bin\"\n    policy: quota\n    quota_limit: 10G\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Delete directory quota policy foo\n  purestorage.flasharray.purefa_policy:\n    name: foo\n    policy: quota\n    state: absent\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Create empty directory quota policy foo\n  purestorage.flasharray.purefa_policy:\n    name: foo\n    policy: quota\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Detach directory \"foo:bar\" from quota policy quota1\n  purestorage.flasharray.purefa_policy:\n    name: quota1\n    directory:\n     - \"foo:bar\"\n    state: absent\n    policy: quota\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Remove quota rule from quota policy foo\n  purestorage.flasharray.purefa_policy:\n    name: foo\n    policy: quota\n    quota_limit: 10G\n    state: absent\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n"
  },
  "purestorage.flasharray.purefa_proxy": {
    "doc": {
      "description": "Set or erase configuration for the HTTPS phonehome proxy settings.",
      "has_action": false,
      "notes": "This module requires the C(purestorage) and C(py-pure-client) Python libraries\nAdditional Python librarues may be required for specific modules.\nYou must set C(PUREFA_URL) and C(PUREFA_API) environment variables if I(fa_url) and I(api_token) arguments are not passed to the module directly",
      "options": {
        "api_token": {
          "aliases": [],
          "description": "FlashArray API token for admin privileged user.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "fa_url": {
          "aliases": [],
          "description": "FlashArray management IPv4 address or Hostname.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "host": {
          "aliases": [],
          "description": "The proxy host name.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "port": {
          "aliases": [],
          "description": "The proxy TCP/IP port number.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Set or delete proxy configuration",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.3",
        "purestorage >= 1.19",
        "py-pure-client >= 1.22.0",
        "netaddr",
        "requests",
        "pycountry",
        "packaging"
      ],
      "short_description": "Configure FlashArray phonehome HTTPs proxy settings",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Delete exisitng proxy settings\n  purestorage.flasharray.purefa_proxy:\n    state: absent\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Set proxy settings\n  purestorage.flasharray.purefa_proxy:\n    host: purestorage.com\n    port: 8080\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n"
  },
  "purestorage.flasharray.purefa_ra": {
    "doc": {
      "description": "Enablke or Disable Remote Assist for a Pure Storage FlashArray.",
      "has_action": false,
      "notes": "This module requires the C(purestorage) and C(py-pure-client) Python libraries\nAdditional Python librarues may be required for specific modules.\nYou must set C(PUREFA_URL) and C(PUREFA_API) environment variables if I(fa_url) and I(api_token) arguments are not passed to the module directly",
      "options": {
        "api_token": {
          "aliases": [],
          "description": "FlashArray API token for admin privileged user.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "fa_url": {
          "aliases": [],
          "description": "FlashArray management IPv4 address or Hostname.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Define state of remote assist\nWhen set to I(enable) the RA port can be exposed using the I(debug) module.",
          "default": "enable",
          "type": "str",
          "required": false,
          "choices": [
            "enable",
            "disable"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.3",
        "purestorage >= 1.19",
        "py-pure-client >= 1.22.0",
        "netaddr",
        "requests",
        "pycountry",
        "packaging"
      ],
      "short_description": "Enable or Disable Pure Storage FlashArray Remote Assist",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Enable Remote Assist port\n  purestorage.flasharray.purefa_ra:\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n  register: result\n\n  debug:\n    msg: \"Remote Assist: {{ result['ra_facts'] }}\"\n\n- name: Disable Remote Assist port\n  purestorage.flasharray.purefa_ra:\n    state: disable\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n"
  },
  "purestorage.flasharray.purefa_saml": {
    "doc": {
      "description": "Enable or disable FlashArray SAML2 providers",
      "has_action": false,
      "notes": "This module requires the C(purestorage) and C(py-pure-client) Python libraries\nAdditional Python librarues may be required for specific modules.\nYou must set C(PUREFA_URL) and C(PUREFA_API) environment variables if I(fa_url) and I(api_token) arguments are not passed to the module directly",
      "options": {
        "api_token": {
          "aliases": [],
          "description": "FlashArray API token for admin privileged user.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "array_url": {
          "aliases": [],
          "description": "The URL of the FlashArray",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "decryption_credential": {
          "aliases": [],
          "description": "The credential used by the service provider to decrypt encrypted SAML assertions from the identity provider",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "enabled": {
          "aliases": [],
          "description": "Defines the enabled state of the identity provider",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "encrypt_asserts": {
          "aliases": [],
          "description": "If set to true, SAML assertions will be encrypted by the identity provider",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "fa_url": {
          "aliases": [],
          "description": "FlashArray management IPv4 address or Hostname.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "metadata_url": {
          "aliases": [],
          "description": "The URL of the identity provider metadata",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the SAML2 identity provider (IdP)",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "sign_request": {
          "aliases": [],
          "description": "If set to true, SAML requests will be signed by the service provider.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "signing_credential": {
          "aliases": [],
          "description": "The credential used by the service provider to sign SAML requests",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Define whether the API client should exist or not.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "url": {
          "aliases": [],
          "description": "The URL of the identity provider",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "x509_cert": {
          "aliases": [],
          "description": "The X509 certificate that the service provider uses to verify the SAML response signature from the identity provider",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.3",
        "purestorage >= 1.19",
        "py-pure-client >= 1.22.0",
        "netaddr",
        "requests",
        "pycountry",
        "packaging"
      ],
      "short_description": "Manage FlashArray SAML2 service and identity providers",
      "version_added": "1.12.0"
    },
    "examples": "\n- name: Create (disabled) SAML2 SSO with only metadata URL\n  purestorage.flasharray.purefa_saml:\n    name: myIDP\n    array_url: \"https://10.10.10.2\"\n    metadata_url: \"https://myidp.acme.com/adfs/ls\"\n    x509_cert: \"{{lookup('file', 'x509_cert_file') }}\"\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Enable SAML2 SSO\n  purestorage.flasharray.purefa_saml:\n    name: myISO\n    enabled: true\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Delete SAML2 SSO\n  purestorage.flasharray.purefa_saml:\n    state: absent\n    name: myIDP\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n"
  },
  "purestorage.flasharray.purefa_smis": {
    "doc": {
      "description": "Enable or disable FlashArray SMI-S Provider and/or SLP",
      "has_action": false,
      "notes": "This module requires the C(purestorage) and C(py-pure-client) Python libraries\nAdditional Python librarues may be required for specific modules.\nYou must set C(PUREFA_URL) and C(PUREFA_API) environment variables if I(fa_url) and I(api_token) arguments are not passed to the module directly",
      "options": {
        "api_token": {
          "aliases": [],
          "description": "FlashArray API token for admin privileged user.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "fa_url": {
          "aliases": [],
          "description": "FlashArray management IPv4 address or Hostname.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "slp": {
          "aliases": [],
          "description": "Enable/Disable Service Locator Protocol\nPorts used are TCP 427 and UDP 427",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "smis": {
          "aliases": [],
          "description": "Enable/Disable SMI-S Provider\nPort used is TCP 5989",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.3",
        "purestorage >= 1.19",
        "py-pure-client >= 1.22.0",
        "netaddr",
        "requests",
        "pycountry",
        "packaging"
      ],
      "short_description": "Enable or disable FlashArray SMI-S features",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Enable SMI-S and SLP\n  purestorage.flasharray.purefa_smis:\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Disable SMI-S and SLP\n  purestorage.flasharray.purefa_smis:\n    smis: false\n    slp: false\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n"
  },
  "purestorage.flasharray.purefa_smtp": {
    "doc": {
      "description": "Set or erase configuration for the SMTP settings.\nIf username/password are set this will always force a change as there is no way to see if the password is differnet from the current SMTP configuration.\nPure Storage Ansible Team (@sdodsley) <pure-ansible-team@purestorage.com>",
      "has_action": false,
      "notes": "This module requires the C(purestorage) and C(py-pure-client) Python libraries\nAdditional Python librarues may be required for specific modules.\nYou must set C(PUREFA_URL) and C(PUREFA_API) environment variables if I(fa_url) and I(api_token) arguments are not passed to the module directly",
      "options": {
        "api_token": {
          "aliases": [],
          "description": "FlashArray API token for admin privileged user.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "fa_url": {
          "aliases": [],
          "description": "FlashArray management IPv4 address or Hostname.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "The SMTP password.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "relay_host": {
          "aliases": [],
          "description": "IPv4 or IPv6 address or FQDN. A port number may be appended.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "sender_domain": {
          "aliases": [],
          "description": "Domain name.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Set or delete SMTP configuration",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "user": {
          "aliases": [],
          "description": "The SMTP username.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.3",
        "purestorage >= 1.19",
        "py-pure-client >= 1.22.0",
        "netaddr",
        "requests",
        "pycountry",
        "packaging"
      ],
      "short_description": "Configure FlashArray SMTP settings",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Delete exisitng SMTP settings\n  purestorage.flasharray.purefa_smtp:\n    state: absent\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n- name: Set SMTP settings\n  purestorage.flasharray.purefa_smtp:\n    sender_domain: purestorage.com\n    password: account_password\n    user: smtp_account\n    relay_host: 10.2.56.78:2345\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n"
  },
  "purestorage.flasharray.purefa_snap": {
    "doc": {
      "description": "Create or delete volumes and volume snapshots on Pure Storage FlashArray.",
      "has_action": false,
      "notes": "This module requires the C(purestorage) and C(py-pure-client) Python libraries\nAdditional Python librarues may be required for specific modules.\nYou must set C(PUREFA_URL) and C(PUREFA_API) environment variables if I(fa_url) and I(api_token) arguments are not passed to the module directly",
      "options": {
        "api_token": {
          "aliases": [],
          "description": "FlashArray API token for admin privileged user.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "eradicate": {
          "aliases": [],
          "description": "Define whether to eradicate the snapshot on delete or leave in trash.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "fa_url": {
          "aliases": [],
          "description": "FlashArray management IPv4 address or Hostname.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ignore_repl": {
          "aliases": [],
          "description": "Only valid for Purity//FA 6.1 or higher\nIf set to true, allow destruction/eradication of snapshots in use by replication.\nIf set to false, allow destruction/eradication of snapshots not in use by replication",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the source volume.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "offload": {
          "aliases": [],
          "description": "Only valid for Purity//FA 6.1 or higher\nName of offload target for the snapshot.\nTarget can be either another FlashArray or an Offload Target\nThis is only applicable for creation, deletion and eradication of snapshots\nI(state) of I(copy) is not supported.\nI(suffix) is not supported for offload snapshots.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "overwrite": {
          "aliases": [],
          "description": "Define whether to overwrite existing volume when creating from snapshot.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Define whether the volume snapshot should exist or not.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "copy",
            "present",
            "rename"
          ],
          "suboptions": {}
        },
        "suffix": {
          "aliases": [],
          "description": "Suffix of snapshot name.\nNot used during creation if I(offload) is provided.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "target": {
          "aliases": [],
          "description": "Name of target volume if creating from snapshot.\nName of new snapshot suffix if renaming a snapshot",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.3",
        "purestorage >= 1.19",
        "py-pure-client >= 1.22.0",
        "netaddr",
        "requests",
        "pycountry",
        "packaging"
      ],
      "short_description": "Manage volume snapshots on Pure Storage FlashArrays",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create snapshot foo.ansible\n  purestorage.flasharray.purefa_snap:\n    name: foo\n    suffix: ansible\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n    state: present\n\n- name: Create R/W clone foo_clone from snapshot foo.snap\n  purestorage.flasharray.purefa_snap:\n    name: foo\n    suffix: snap\n    target: foo_clone\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n    state: copy\n\n- name: Create R/W clone foo_clone from remote mnapshot arrayB:foo.snap\n  purestorage.flasharray.purefa_snap:\n    name: arrayB:foo\n    suffix: snap\n    target: foo_clone\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n    state: copy\n\n- name: Overwrite existing volume foo_clone with snapshot foo.snap\n  purestorage.flasharray.purefa_snap:\n    name: foo\n    suffix: snap\n    target: foo_clone\n    overwrite: true\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n    state: copy\n\n- name: Delete and eradicate snapshot named foo.snap\n  purestorage.flasharray.purefa_snap:\n    name: foo\n    suffix: snap\n    eradicate: true\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n    state: absent\n\n- name: Rename snapshot foo.fred to foo.dave\n  purestorage.flasharray.purefa_snap:\n    name: foo\n    suffix: fred\n    target: dave\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n    state: rename\n\n- name: Create a remote volume snapshot on offload device arrayB\n  purestorage.flasharray.purefa_snap:\n    name: foo\n    offload: arrayB\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Delete and eradicate a volume snapshot foo.1 on offload device arrayB\n  purestorage.flasharray.purefa_snap:\n    name: foo\n    suffix: 1\n    offload: arrayB\n    eradicate: true\n    state: absent\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n"
  },
  "purestorage.flasharray.purefa_snmp": {
    "doc": {
      "description": "Manage SNMP managers on a Pure Storage FlashArray.\nChanging of a named SNMP managers version is not supported.\nThis module is not idempotent and will always modify an existing SNMP manager due to hidden parameters that cannot be compared to the play parameters.",
      "has_action": false,
      "notes": "This module requires the C(purestorage) and C(py-pure-client) Python libraries\nAdditional Python librarues may be required for specific modules.\nYou must set C(PUREFA_URL) and C(PUREFA_API) environment variables if I(fa_url) and I(api_token) arguments are not passed to the module directly",
      "options": {
        "api_token": {
          "aliases": [],
          "description": "FlashArray API token for admin privileged user.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "auth_passphrase": {
          "aliases": [],
          "description": "SNMPv3 only. Passphrase of 8 - 32 characters.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "auth_protocol": {
          "aliases": [],
          "description": "SNMP v3 only. Hash algorithm to use",
          "type": "str",
          "required": false,
          "choices": [
            "MD5",
            "SHA"
          ],
          "suboptions": {}
        },
        "community": {
          "aliases": [],
          "description": "SNMP v2c only. Manager community ID. Between 1 and 32 characters long.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "fa_url": {
          "aliases": [],
          "description": "FlashArray management IPv4 address or Hostname.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "host": {
          "aliases": [],
          "description": "IPv4 or IPv6 address or FQDN to send trap messages to.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of SNMP Manager",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "notification": {
          "aliases": [],
          "description": "Action to perform on event.",
          "default": "trap",
          "type": "str",
          "required": false,
          "choices": [
            "inform",
            "trap"
          ],
          "suboptions": {}
        },
        "privacy_passphrase": {
          "aliases": [],
          "description": "SNMPv3 only. Passphrase to encrypt SNMP messages. Must be between 8 and 63 non-space ASCII characters.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "privacy_protocol": {
          "aliases": [],
          "description": "SNMP v3 only. Encryption protocol to use",
          "type": "str",
          "required": false,
          "choices": [
            "AES",
            "DES"
          ],
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Create or delete SNMP manager",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "user": {
          "aliases": [],
          "description": "SNMP v3 only. User ID recognized by the specified SNMP manager. Must be between 1 and 32 characters.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "version": {
          "aliases": [],
          "description": "Version of SNMP protocol to use for the manager.",
          "default": "v2c",
          "type": "str",
          "required": false,
          "choices": [
            "v2c",
            "v3"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.3",
        "purestorage >= 1.19",
        "py-pure-client >= 1.22.0",
        "netaddr",
        "requests",
        "pycountry",
        "packaging"
      ],
      "short_description": "Configure FlashArray SNMP Managers",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Delete exisitng SNMP manager\n  purestorage.flasharray.purefa_snmp:\n    name: manager1\n    state: absent\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n- name: Create v2c SNMP manager\n  puretorage.flasharray.urefa_snmp:\n    name: manager1\n    community: public\n    host: 10.21.22.23\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n- name: Create v3 SNMP manager\n  puretorage.flasharray.urefa_snmp:\n    name: manager2\n    version: v3\n    auth_protocol: MD5\n    auth_passphrase: password\n    host: 10.21.22.23\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n- name: Update existing SNMP manager\n  purestorage.flasharray.purefa_snmp:\n    name: manager1\n    community: private\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n"
  },
  "purestorage.flasharray.purefa_sso": {
    "doc": {
      "description": "Enable or disable Single Sign-On (SSO) to give LDAP users the ability to navigate seamlessly from Pure1 Manage to the current array through a single login.",
      "has_action": false,
      "notes": "This module requires the C(purestorage) and C(py-pure-client) Python libraries\nAdditional Python librarues may be required for specific modules.\nYou must set C(PUREFA_URL) and C(PUREFA_API) environment variables if I(fa_url) and I(api_token) arguments are not passed to the module directly",
      "options": {
        "api_token": {
          "aliases": [],
          "description": "FlashArray API token for admin privileged user.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "fa_url": {
          "aliases": [],
          "description": "FlashArray management IPv4 address or Hostname.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Enable or disable the array Signle Sign-On from Pure1 Manage",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.3",
        "purestorage >= 1.19",
        "py-pure-client >= 1.22.0",
        "netaddr",
        "requests",
        "pycountry",
        "packaging"
      ],
      "short_description": "Configure Pure Storage FlashArray Single Sign-On",
      "version_added": "1.9.0"
    },
    "examples": "\n- name: Enable SSO\n  purestorage.flasharray.purefa_sso:\n    state: present\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Disable SSO\n  purestorage.flasharray.purefa_sso:\n    state: absent\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n"
  },
  "purestorage.flasharray.purefa_subnet": {
    "doc": {
      "description": "This module manages the network subnets on a Pure Storage FlashArray.",
      "has_action": false,
      "notes": "This module requires the C(purestorage) and C(py-pure-client) Python libraries\nAdditional Python librarues may be required for specific modules.\nYou must set C(PUREFA_URL) and C(PUREFA_API) environment variables if I(fa_url) and I(api_token) arguments are not passed to the module directly",
      "options": {
        "api_token": {
          "aliases": [],
          "description": "FlashArray API token for admin privileged user.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "enabled": {
          "aliases": [],
          "description": "whether the subnet should be enabled or not",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "fa_url": {
          "aliases": [],
          "description": "FlashArray management IPv4 address or Hostname.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "gateway": {
          "aliases": [],
          "description": "IPv4 or IPv6 address of subnet gateway.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "mtu": {
          "aliases": [],
          "description": "MTU size of the subnet. Range is 568 to 9000.",
          "default": "1500",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Subnet name.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "prefix": {
          "aliases": [],
          "description": "Set the IPv4 or IPv6 address to be associated with the subnet.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Create or delete subnet.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "vlan": {
          "aliases": [],
          "description": "VLAN ID. Range is 0 to 4094.",
          "type": "int",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.3",
        "purestorage >= 1.19",
        "py-pure-client >= 1.22.0",
        "netaddr",
        "requests",
        "pycountry",
        "packaging"
      ],
      "short_description": "Manage network subnets in a Pure Storage FlashArray",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create subnet subnet100\n  purestorage.flasharray.purefa_subnet:\n    name: subnet100\n    vlan: 100\n    gateway: 10.21.200.1\n    prefix: \"10.21.200.0/24\"\n    mtu: 9000\n    state: present\n    fa_url: 10.10.10.2\n    api_token: c6033033-fe69-2515-a9e8-966bb7fe4b40\n\n- name: Disable subnet subnet100\n  purestorage.flasharray.purefa_subnet:\n    name: subnet100\n    enabled: false\n    fa_url: 10.10.10.2\n    api_token: c6033033-fe69-2515-a9e8-966bb7fe4b40\n\n- name: Delete subnet subnet100\n  purestorage.flasharray.purefa_subnet:\n    name: subnet100\n    state: absent\n    fa_url: 10.10.10.2\n    api_token: c6033033-fe69-2515-a9e8-966bb7fe4b40"
  },
  "purestorage.flasharray.purefa_syslog": {
    "doc": {
      "description": "Configure syslog configuration for Pure Storage FlashArrays.\nAdd or delete an individual syslog server to the existing list of serves.",
      "has_action": false,
      "notes": "This module requires the C(purestorage) and C(py-pure-client) Python libraries\nAdditional Python librarues may be required for specific modules.\nYou must set C(PUREFA_URL) and C(PUREFA_API) environment variables if I(fa_url) and I(api_token) arguments are not passed to the module directly",
      "options": {
        "address": {
          "aliases": [],
          "description": "Syslog server address. This field supports IPv4, IPv6 or FQDN. An invalid IP addresses will cause the module to fail. No validation is performed for FQDNs.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "api_token": {
          "aliases": [],
          "description": "FlashArray API token for admin privileged user.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "fa_url": {
          "aliases": [],
          "description": "FlashArray management IPv4 address or Hostname.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "A user-specified name. The name must be locally unique and cannot be changed.\nOnly applicable with FlashArrays running Purity//FA 6.0 or higher.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "port": {
          "aliases": [],
          "description": "Port at which the server is listening. If no port is specified the system will use 514",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "protocol": {
          "aliases": [],
          "description": "Protocol which server uses",
          "type": "str",
          "required": true,
          "choices": [
            "tcp",
            "tls",
            "udp"
          ],
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Create or delete syslog servers configuration",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.3",
        "purestorage >= 1.19",
        "py-pure-client >= 1.22.0",
        "netaddr",
        "requests",
        "pycountry",
        "packaging"
      ],
      "short_description": "Configure Pure Storage FlashArray syslog settings",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Delete exisitng syslog server entries\n  purestorage.flasharray.purefa_syslog:\n    address: syslog1.com\n    protocol: tcp\n    state: absent\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Set array syslog servers\n  purestorage.flasharray.purefa_syslog:\n    state: present\n    address: syslog1.com\n    protocol: udp\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n"
  },
  "purestorage.flasharray.purefa_syslog_settings": {
    "doc": {
      "description": "Manage FlashArray syslog servers settings",
      "has_action": false,
      "notes": "This module requires the C(purestorage) and C(py-pure-client) Python libraries\nAdditional Python librarues may be required for specific modules.\nYou must set C(PUREFA_URL) and C(PUREFA_API) environment variables if I(fa_url) and I(api_token) arguments are not passed to the module directly",
      "options": {
        "api_token": {
          "aliases": [],
          "description": "FlashArray API token for admin privileged user.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ca_certificate": {
          "aliases": [],
          "description": "The text of the CA certificate for condifured syslog servers.\nIncludes the \"-----BEGIN CERTIFICATE-----\" and \"-----END CERTIFICATE-----\" lines\nDoes not exceed 3000 characters in length\nTo delete the existing CA certifcate use the special string `DELETE`",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "fa_url": {
          "aliases": [],
          "description": "FlashArray management IPv4 address or Hostname.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "severity": {
          "aliases": [],
          "description": "Logging severity threshold for which events will be forwarded to the configured syslog servers.",
          "default": "info",
          "type": "str",
          "required": false,
          "choices": [
            "debug",
            "info",
            "notice"
          ],
          "suboptions": {}
        },
        "tls_audit": {
          "aliases": [],
          "description": "If messages that are necessary in order to audit TLS negotiations performed by the array are forwared to the syslog servers.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.3",
        "purestorage >= 1.19",
        "py-pure-client >= 1.22.0",
        "netaddr",
        "requests",
        "pycountry",
        "packaging"
      ],
      "short_description": "Manage FlashArray syslog servers settings",
      "version_added": "1.10.0"
    },
    "examples": "\n- name: Change syslog servers settings\n  purestorage.flasharray.purefa_syslog_servers:\n    tls_audit: false\n    severity: debug\n    ca_certificate: \"{{lookup('file', 'example.crt') }}\"\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Delete existing CA certifcate for syslog servers settings\n  purestorage.flasharray.purefa_syslog_servers:\n    ca_certificate: DELETE\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n"
  },
  "purestorage.flasharray.purefa_timeout": {
    "doc": {
      "description": "Configure GUI idle timeout for Pure Storage FlashArrays.\nThis does not affect existing GUI sessions.",
      "has_action": false,
      "notes": "This module requires the C(purestorage) and C(py-pure-client) Python libraries\nAdditional Python librarues may be required for specific modules.\nYou must set C(PUREFA_URL) and C(PUREFA_API) environment variables if I(fa_url) and I(api_token) arguments are not passed to the module directly",
      "options": {
        "api_token": {
          "aliases": [],
          "description": "FlashArray API token for admin privileged user.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "fa_url": {
          "aliases": [],
          "description": "FlashArray management IPv4 address or Hostname.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Set or disable the GUI idle timeout",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "timeout": {
          "aliases": [],
          "description": "Minutes for idle timeout.",
          "default": "30",
          "type": "int",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.3",
        "purestorage >= 1.19",
        "py-pure-client >= 1.22.0",
        "netaddr",
        "requests",
        "pycountry",
        "packaging"
      ],
      "short_description": "Configure Pure Storage FlashArray GUI idle timeout",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Set GUI idle timeout to 25 minutes\n  purestorage.flasharray.purefa_timeout:\n    timeout: 25\n    state: present\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Disable idle timeout\n  purestorage.flasharray.purefa_timeout:\n    state: absent\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n"
  },
  "purestorage.flasharray.purefa_user": {
    "doc": {
      "description": "Create, modify or delete local users on a Pure Stoage FlashArray.",
      "has_action": false,
      "notes": "This module requires the C(purestorage) and C(py-pure-client) Python libraries\nAdditional Python librarues may be required for specific modules.\nYou must set C(PUREFA_URL) and C(PUREFA_API) environment variables if I(fa_url) and I(api_token) arguments are not passed to the module directly",
      "options": {
        "api": {
          "aliases": [],
          "description": "Define whether to create an API token for this user\nToken can be exposed using the I(debug) module",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "api_token": {
          "aliases": [],
          "description": "FlashArray API token for admin privileged user.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "fa_url": {
          "aliases": [],
          "description": "FlashArray management IPv4 address or Hostname.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the local user account",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "old_password": {
          "aliases": [],
          "description": "If changing an existing password, you must provide the old password for security",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Password for the local user.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "role": {
          "aliases": [],
          "description": "Sets the local user's access level to the array",
          "type": "str",
          "required": false,
          "choices": [
            "readonly",
            "storage_admin",
            "array_admin"
          ],
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Create, delete or update local user account",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.3",
        "purestorage >= 1.19",
        "py-pure-client >= 1.22.0",
        "netaddr",
        "requests",
        "pycountry",
        "packaging"
      ],
      "short_description": "Create, modify or delete FlashArray local user account",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create new user ansible with API token\n  purestorage.flasharray.purefa_user:\n    name: ansible\n    password: apassword\n    role: storage_admin\n    api: true\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n  register: result\n\n  debug:\n    msg: \"API Token: {{ result['user_info']['user_api'] }}\"\n\n- name: Change role type for existing user\n  purestorage.flasharray.purefa_user:\n    name: ansible\n    role: array_admin\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Change password type for existing user (NOT IDEMPOTENT)\n  purestorage.flasharray.purefa_user:\n    name: ansible\n    password: anewpassword\n    old_password: apassword\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Change API token for existing user\n  purestorage.flasharray.purefa_user:\n    name: ansible\n    api: true\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n  register: result\n\n  debug:\n    msg: \"API Token: {{ result['user_info']['user_api'] }}\"\n"
  },
  "purestorage.flasharray.purefa_vg": {
    "doc": {
      "description": "Create, delete or modify volume groups on Pure Storage FlashArrays.",
      "has_action": false,
      "notes": "This module requires the C(purestorage) and C(py-pure-client) Python libraries\nAdditional Python librarues may be required for specific modules.\nYou must set C(PUREFA_URL) and C(PUREFA_API) environment variables if I(fa_url) and I(api_token) arguments are not passed to the module directly",
      "options": {
        "api_token": {
          "aliases": [],
          "description": "FlashArray API token for admin privileged user.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "bw_qos": {
          "aliases": [],
          "description": "Bandwidth limit for vgroup in M or G units. M will set MB/s G will set GB/s To clear an existing QoS setting use 0 (zero)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "count": {
          "aliases": [],
          "description": "Number of volume groups to be created in a multiple volume group creation\nOnly supported from Purity//FA v6.0.0 and higher",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "digits": {
          "aliases": [],
          "description": "Number of digits to use for multiple volume group count. This will pad the index number with zeros where necessary\nOnly supported from Purity//FA v6.0.0 and higher\nRange is between 1 and 10",
          "default": "1",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "eradicate": {
          "aliases": [],
          "description": "Define whether to eradicate the volume group on delete and leave in trash.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "fa_url": {
          "aliases": [],
          "description": "FlashArray management IPv4 address or Hostname.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "iops_qos": {
          "aliases": [],
          "description": "IOPs limit for vgroup - use value or K or M K will mean 1000 M will mean 1000000 To clear an existing IOPs setting use 0 (zero)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the volume group.\nMulti-volume-group support available from Purity//FA 6.0.0 B(***NOTE***) Manual deletion or eradication of individual volume groups created using multi-volume-group will cause idempotency to fail\nMulti-volume-group support only exists for volume group creation",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "start": {
          "aliases": [],
          "description": "Number at which to start the multiple volume group creation index\nOnly supported from Purity//FA v6.0.0 and higher",
          "default": "0",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Define whether the volume group should exist or not.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "suffix": {
          "aliases": [],
          "description": "Suffix string, if required, for multiple volume group create\nVolume group names will be formed as I(<name>#I<suffix>), where I(#) is a placeholder for the volume index See associated descriptions\nOnly supported from Purity//FA v6.0.0 and higher",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.3",
        "purestorage >= 1.19",
        "py-pure-client >= 1.22.0",
        "netaddr",
        "requests",
        "pycountry",
        "packaging"
      ],
      "short_description": "Manage volume groups on Pure Storage FlashArrays",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create new volune group\n  purestorage.flasharray.purefa_vg:\n    name: foo\n    bw_qos: 50M\n    iops_qos: 100\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Create 10 volune groups of pattern foo#bar with QoS\n  purestorage.flasharray.purefa_vg:\n    name: foo\n    suffix: bar\n    count: 10\n    start: 10\n    digits: 3\n    bw_qos: 50M\n    iops_qos: 100\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Update volune group QoS limits\n  purestorage.flasharray.purefa_vg:\n    name: foo\n    bw_qos: 0\n    iops_qos: 5555\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Destroy volume group\n  purestorage.flasharray.purefa_vg:\n    name: foo\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n    state: absent\n\n- name: Recover deleted volune group\n  purestorage.flasharray.purefa_vg:\n    name: foo\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Destroy and Eradicate volume group\n  purestorage.flasharray.purefa_vg:\n    name: foo\n    eradicate: true\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n    state: absent\n"
  },
  "purestorage.flasharray.purefa_vlan": {
    "doc": {
      "description": "This module manages the VLAN network interfaces on a Pure Storage FlashArray.",
      "has_action": false,
      "notes": "This module requires the C(purestorage) and C(py-pure-client) Python libraries\nAdditional Python librarues may be required for specific modules.\nYou must set C(PUREFA_URL) and C(PUREFA_API) environment variables if I(fa_url) and I(api_token) arguments are not passed to the module directly",
      "options": {
        "address": {
          "aliases": [],
          "description": "IPv4 or IPv6 address of interface.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "api_token": {
          "aliases": [],
          "description": "FlashArray API token for admin privileged user.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "enabled": {
          "aliases": [],
          "description": "Define if VLAN interface is enabled or not.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "fa_url": {
          "aliases": [],
          "description": "FlashArray management IPv4 address or Hostname.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Interface name, including controller indentifier.\nVLANs are only supported on iSCSI physical interfaces",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "State of existing interface (on/off).",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "subnet": {
          "aliases": [],
          "description": "Name of subnet interface associated with.",
          "type": "str",
          "required": true,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.3",
        "purestorage >= 1.19",
        "py-pure-client >= 1.22.0",
        "netaddr",
        "requests",
        "pycountry",
        "packaging"
      ],
      "short_description": "Manage network VLAN interfaces in a Pure Storage FlashArray",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Configure and enable VLAN interface ct0.eth8 for subnet test\n  purestorage.flasharray.purefa_vlan:\n    name: ct0.eth8\n    subnet: test\n    address: 10.21.200.18\n    state: present\n    fa_url: 10.10.10.2\n    api_token: c6033033-fe69-2515-a9e8-966bb7fe4b40\n\n- name: Disable VLAN interface for subnet test on ct1.eth2\n  purestorage.flasharray.purefa_vlan:\n    name: ct1.eth2\n    subnet: test\n    enabled: false\n    fa_url: 10.10.10.2\n    api_token: c6033033-fe69-2515-a9e8-966bb7fe4b40\n\n- name: Delete VLAN inteface for subnet test on ct0.eth4\n  purestorage.flasharray.purefa_vlan:\n    name: ct0.eth4\n    subnet: test\n    state: absent\n    fa_url: 10.10.10.2\n    api_token: c6033033-fe69-2515-a9e8-966bb7fe4b40"
  },
  "purestorage.flasharray.purefa_vnc": {
    "doc": {
      "description": "Enablke or Disable VNC access for installed apps",
      "has_action": false,
      "notes": "This module requires the C(purestorage) and C(py-pure-client) Python libraries\nAdditional Python librarues may be required for specific modules.\nYou must set C(PUREFA_URL) and C(PUREFA_API) environment variables if I(fa_url) and I(api_token) arguments are not passed to the module directly",
      "options": {
        "api_token": {
          "aliases": [],
          "description": "FlashArray API token for admin privileged user.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "fa_url": {
          "aliases": [],
          "description": "FlashArray management IPv4 address or Hostname.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name od app",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Define state of VNC",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.3",
        "purestorage >= 1.19",
        "py-pure-client >= 1.22.0",
        "netaddr",
        "requests",
        "pycountry",
        "packaging"
      ],
      "short_description": "Enable or Disable VNC port for installed apps",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Enable VNC for application test\n  purestorage.flasharray.purefa_vnc:\n    name: test\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Disable VNC for application test\n  purestorage.flasharray.purefa_vnc:\n    name: test\n    state: absent\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n"
  },
  "purestorage.flasharray.purefa_volume": {
    "doc": {
      "description": "Create, delete or extend the capacity of a volume on Pure Storage FlashArray.",
      "has_action": false,
      "notes": "This module requires the C(purestorage) and C(py-pure-client) Python libraries\nAdditional Python librarues may be required for specific modules.\nYou must set C(PUREFA_URL) and C(PUREFA_API) environment variables if I(fa_url) and I(api_token) arguments are not passed to the module directly",
      "options": {
        "api_token": {
          "aliases": [],
          "description": "FlashArray API token for admin privileged user.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "bw_qos": {
          "aliases": [
            "qos"
          ],
          "description": "Bandwidth limit for volume in M or G units. M will set MB/s G will set GB/s To clear an existing QoS setting use 0 (zero)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "count": {
          "aliases": [],
          "description": "Number of volumes to be created in a multiple volume creation\nOnly supported from Purity//FA v6.0.0 and higher",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "digits": {
          "aliases": [],
          "description": "Number of digits to use for multiple volume count. This will pad the index number with zeros where necessary\nOnly supported from Purity//FA v6.0.0 and higher\nRange is between 1 and 10",
          "default": "1",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "eradicate": {
          "aliases": [],
          "description": "Define whether to eradicate the volume on delete or leave in trash.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "fa_url": {
          "aliases": [],
          "description": "FlashArray management IPv4 address or Hostname.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "iops_qos": {
          "aliases": [],
          "description": "IOPs limit for volume - use value or K or M K will mean 1000 M will mean 1000000 To clear an existing IOPs setting use 0 (zero)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "move": {
          "aliases": [],
          "description": "Move a volume in and out of a pod or vgroup\nProvide the name of pod or vgroup to move the volume to\nPod and Vgroup names must be unique in the array\nTo move to the local array, specify C(local)\nThis is not idempotent - use C(ignore_errors) in the play",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the volume.\nVolume could be created in a POD with this syntax POD_NAME::VOLUME_NAME.\nVolume could be created in a volume group with this syntax VG_NAME/VOLUME_NAME.\nMulti-volume support available from Purity//FA 6.0.0 B(***NOTE***) Manual deletion or eradication of individual volumes created using multi-volume will cause idempotency to fail\nMulti-volume support only exists for volume creation",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "overwrite": {
          "aliases": [],
          "description": "Define whether to overwrite a target volume if it already exisits.",
          "default": "no",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "pgroup": {
          "aliases": [],
          "description": "Name of exisitng, not deleted, protection group to add volume to\nOnly application for volume(s) creation",
          "type": "str",
          "required": false,
          "version_added": "1.8.0",
          "suboptions": {}
        },
        "rename": {
          "aliases": [],
          "description": "Value to rename the specified volume to.\nRename only applies to the container the current volumes is in.\nThere is no requirement to specify the pod or vgroup name as this is implied.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "size": {
          "aliases": [],
          "description": "Volume size in M, G, T or P units.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "start": {
          "aliases": [],
          "description": "Number at which to start the multiple volume creation index\nOnly supported from Purity//FA v6.0.0 and higher",
          "default": "0",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Define whether the volume should exist or not.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "suffix": {
          "aliases": [],
          "description": "Suffix string, if required, for multiple volume create\nVolume names will be formed as I(<name>#I<suffix>), where I(#) is a placeholder for the volume index See associated descriptions\nOnly supported from Purity//FA v6.0.0 and higher",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "target": {
          "aliases": [],
          "description": "The name of the target volume, if copying.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.3",
        "purestorage >= 1.19",
        "py-pure-client >= 1.22.0",
        "netaddr",
        "requests",
        "pycountry",
        "packaging"
      ],
      "short_description": "Manage volumes on Pure Storage FlashArrays",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create new volume named foo with a QoS limit\n  purestorage.flasharray.purefa_volume:\n    name: foo\n    size: 1T\n    bw_qos: 58M\n    iops_qos: 23K\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n    state: present\n\n- name: Create new volume named foo in pod bar in protection group pg1\n  purestorage.flasharray.purefa_volume:\n    name: bar::foo\n    prgoup: pg1\n    size: 1T\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n    state: present\n\n- name: Create 10 volumes with index starting at 10 but padded with 3 digits\n  purestorage.flasharray.purefa_volume:\n    name: foo\n    size: 1T\n    suffix: bar\n    count: 10\n    start: 10\n    digits: 3\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n    state: present\n\n- name: Extend the size of an existing volume named foo\n  purestorage.flasharray.purefa_volume:\n    name: foo\n    size: 2T\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n    state: present\n\n- name: Delete and eradicate volume named foo\n  purestorage.flasharray.purefa_volume:\n    name: foo\n    eradicate: yes\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n    state: absent\n\n- name: Create clone of volume bar named foo\n  purestorage.flasharray.purefa_volume:\n    name: foo\n    target: bar\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n    state: present\n\n- name: Overwrite volume bar with volume foo\n  purestorage.flasharray.purefa_volume:\n    name: foo\n    target: bar\n    overwrite: yes\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n    state: present\n\n- name: Clear volume QoS from volume foo\n  purestorage.flasharray.purefa_volume:\n    name: foo\n    bw_qos: 0\n    iops_qos: 0\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n    state: present\n\n- name: Move local volume foo from local array to pod bar\n  purestorage.flasharray.purefa_volume:\n    name: foo\n    move: bar\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Move volume foo in pod bar to local array\n  purestorage.flasharray.purefa_volume:\n    name: bar::foo\n    move: local\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Move volume foo in pod bar to vgroup fin\n  purestorage.flasharray.purefa_volume:\n    name: bar::foo\n    move: fin\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n"
  },
  "purestorage.flasharray.purefa_volume_tags": {
    "doc": {
      "description": "Manage volume tags for volumes on Pure Storage FlashArray.\nRequires a minimum of Purity 6.0.0",
      "has_action": false,
      "notes": "This module requires the C(purestorage) and C(py-pure-client) Python libraries\nAdditional Python librarues may be required for specific modules.\nYou must set C(PUREFA_URL) and C(PUREFA_API) environment variables if I(fa_url) and I(api_token) arguments are not passed to the module directly",
      "options": {
        "api_token": {
          "aliases": [],
          "description": "FlashArray API token for admin privileged user.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "copyable": {
          "aliases": [],
          "description": "Define whether the volume tags are inherited on volume copies.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "fa_url": {
          "aliases": [],
          "description": "FlashArray management IPv4 address or Hostname.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "kvp": {
          "aliases": [],
          "description": "List of key value pairs to assign to the volume.\nSeperate the key from the value using a colon (:) only.\nAll items in list will use I(namespace) and I(copyable) settings.\nMaximum of 5 tags per volume\nSee examples for exact formatting requirements",
          "type": "list",
          "required": true,
          "elements": "str",
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the volume.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "namespace": {
          "aliases": [],
          "description": "The name of tag namespace",
          "default": "default",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Define whether the volume tag(s) should exist or not.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 3.3",
        "purestorage >= 1.19",
        "py-pure-client >= 1.22.0",
        "netaddr",
        "requests",
        "pycountry",
        "packaging"
      ],
      "short_description": "Manage volume tags on Pure Storage FlashArrays",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create new tags in namespace test for volume foo\n  purestorage.flasharray.purefa_volume_tags:\n    name: foo\n    namespace: test\n    copyable: false\n    kvp:\n    - 'key1:value1'\n    - 'key2:value2'\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Remove an existing tag in namespace test for volume foo\n  purestorage.flasharray.purefa_volume_tags:\n    name: foo\n    namespace: test\n    kvp:\n    - 'key1:value1'\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n    state: absent\n\n- name: Update an existing tag in namespace test for volume foo\n  purestorage.flasharray.purefa_volume_tags:\n    name: foo\n    namespace: test\n    kvp:\n    - 'key1:value2'\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n    state: present\n"
  }
}